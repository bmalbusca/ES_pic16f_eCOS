

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 01:18:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.10
    74                           ; Generated 31/07/2019 GMT
    75                           ; 
    76                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F18875 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0110                     	;# 
   167  0110                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0119                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  011A                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011C                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011E                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  018E                     	;# 
   206  018F                     	;# 
   207  0190                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0196                     	;# 
   211  0197                     	;# 
   212  0198                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019C                     	;# 
   217  020C                     	;# 
   218  020C                     	;# 
   219  020D                     	;# 
   220  020E                     	;# 
   221  020F                     	;# 
   222  020F                     	;# 
   223  0210                     	;# 
   224  0210                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0218                     	;# 
   238  0218                     	;# 
   239  0219                     	;# 
   240  021A                     	;# 
   241  021B                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021C                     	;# 
   245  021D                     	;# 
   246  021D                     	;# 
   247  021E                     	;# 
   248  021F                     	;# 
   249  028C                     	;# 
   250  028C                     	;# 
   251  028D                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  028F                     	;# 
   255  0290                     	;# 
   256  0290                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0292                     	;# 
   260  0293                     	;# 
   261  0293                     	;# 
   262  0294                     	;# 
   263  0295                     	;# 
   264  0296                     	;# 
   265  0296                     	;# 
   266  0297                     	;# 
   267  0298                     	;# 
   268  0298                     	;# 
   269  0299                     	;# 
   270  0299                     	;# 
   271  029A                     	;# 
   272  029B                     	;# 
   273  029C                     	;# 
   274  029C                     	;# 
   275  029D                     	;# 
   276  030C                     	;# 
   277  030C                     	;# 
   278  030D                     	;# 
   279  030E                     	;# 
   280  030F                     	;# 
   281  0310                     	;# 
   282  0310                     	;# 
   283  0311                     	;# 
   284  0312                     	;# 
   285  0313                     	;# 
   286  0314                     	;# 
   287  0314                     	;# 
   288  0315                     	;# 
   289  0316                     	;# 
   290  0317                     	;# 
   291  0318                     	;# 
   292  0318                     	;# 
   293  0319                     	;# 
   294  031A                     	;# 
   295  031B                     	;# 
   296  031C                     	;# 
   297  031C                     	;# 
   298  031D                     	;# 
   299  031E                     	;# 
   300  031F                     	;# 
   301  038C                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  0390                     	;# 
   306  0390                     	;# 
   307  0391                     	;# 
   308  0392                     	;# 
   309  040C                     	;# 
   310  040D                     	;# 
   311  040E                     	;# 
   312  040F                     	;# 
   313  0410                     	;# 
   314  0411                     	;# 
   315  0416                     	;# 
   316  0416                     	;# 
   317  0417                     	;# 
   318  0418                     	;# 
   319  0418                     	;# 
   320  0419                     	;# 
   321  041A                     	;# 
   322  041A                     	;# 
   323  041B                     	;# 
   324  041C                     	;# 
   325  041C                     	;# 
   326  041D                     	;# 
   327  041E                     	;# 
   328  041F                     	;# 
   329  048C                     	;# 
   330  048C                     	;# 
   331  048D                     	;# 
   332  048E                     	;# 
   333  048F                     	;# 
   334  048F                     	;# 
   335  0490                     	;# 
   336  0491                     	;# 
   337  0492                     	;# 
   338  0492                     	;# 
   339  0493                     	;# 
   340  0494                     	;# 
   341  0495                     	;# 
   342  0495                     	;# 
   343  0496                     	;# 
   344  0497                     	;# 
   345  0498                     	;# 
   346  0499                     	;# 
   347  049A                     	;# 
   348  049B                     	;# 
   349  049C                     	;# 
   350  049D                     	;# 
   351  050C                     	;# 
   352  050C                     	;# 
   353  050D                     	;# 
   354  050E                     	;# 
   355  050F                     	;# 
   356  050F                     	;# 
   357  0510                     	;# 
   358  0511                     	;# 
   359  0512                     	;# 
   360  0512                     	;# 
   361  0513                     	;# 
   362  0514                     	;# 
   363  0515                     	;# 
   364  0515                     	;# 
   365  0516                     	;# 
   366  0517                     	;# 
   367  0518                     	;# 
   368  0519                     	;# 
   369  051A                     	;# 
   370  051B                     	;# 
   371  051C                     	;# 
   372  051D                     	;# 
   373  058C                     	;# 
   374  058C                     	;# 
   375  058D                     	;# 
   376  058E                     	;# 
   377  058F                     	;# 
   378  058F                     	;# 
   379  0590                     	;# 
   380  0591                     	;# 
   381  0592                     	;# 
   382  0593                     	;# 
   383  060C                     	;# 
   384  060D                     	;# 
   385  060E                     	;# 
   386  060F                     	;# 
   387  0610                     	;# 
   388  0611                     	;# 
   389  0612                     	;# 
   390  0613                     	;# 
   391  0614                     	;# 
   392  0616                     	;# 
   393  0617                     	;# 
   394  0618                     	;# 
   395  0619                     	;# 
   396  061A                     	;# 
   397  061B                     	;# 
   398  061C                     	;# 
   399  061D                     	;# 
   400  061E                     	;# 
   401  068C                     	;# 
   402  068D                     	;# 
   403  068E                     	;# 
   404  068F                     	;# 
   405  0690                     	;# 
   406  0691                     	;# 
   407  0692                     	;# 
   408  0693                     	;# 
   409  0694                     	;# 
   410  070C                     	;# 
   411  070D                     	;# 
   412  070E                     	;# 
   413  070F                     	;# 
   414  0710                     	;# 
   415  0711                     	;# 
   416  0712                     	;# 
   417  0713                     	;# 
   418  0714                     	;# 
   419  0716                     	;# 
   420  0717                     	;# 
   421  0718                     	;# 
   422  0719                     	;# 
   423  071A                     	;# 
   424  071B                     	;# 
   425  071C                     	;# 
   426  071D                     	;# 
   427  071E                     	;# 
   428  0796                     	;# 
   429  0797                     	;# 
   430  0798                     	;# 
   431  0799                     	;# 
   432  079A                     	;# 
   433  079B                     	;# 
   434  080C                     	;# 
   435  080D                     	;# 
   436  080E                     	;# 
   437  080F                     	;# 
   438  0810                     	;# 
   439  0811                     	;# 
   440  0812                     	;# 
   441  0813                     	;# 
   442  0814                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081D                     	;# 
   447  081E                     	;# 
   448  081F                     	;# 
   449  088C                     	;# 
   450  088D                     	;# 
   451  088E                     	;# 
   452  088F                     	;# 
   453  0890                     	;# 
   454  0891                     	;# 
   455  0892                     	;# 
   456  0893                     	;# 
   457  0895                     	;# 
   458  0896                     	;# 
   459  0897                     	;# 
   460  0898                     	;# 
   461  0899                     	;# 
   462  089A                     	;# 
   463  089B                     	;# 
   464  090C                     	;# 
   465  090E                     	;# 
   466  090F                     	;# 
   467  091F                     	;# 
   468  091F                     	;# 
   469  098F                     	;# 
   470  098F                     	;# 
   471  0990                     	;# 
   472  0991                     	;# 
   473  0992                     	;# 
   474  0993                     	;# 
   475  0994                     	;# 
   476  0995                     	;# 
   477  0996                     	;# 
   478  0997                     	;# 
   479  0E0F                     	;# 
   480  0E10                     	;# 
   481  0E11                     	;# 
   482  0E12                     	;# 
   483  0E13                     	;# 
   484  0E14                     	;# 
   485  0E15                     	;# 
   486  0E16                     	;# 
   487  0E17                     	;# 
   488  0E18                     	;# 
   489  0E19                     	;# 
   490  0E1A                     	;# 
   491  0E1B                     	;# 
   492  0E1C                     	;# 
   493  0E1D                     	;# 
   494  0E1E                     	;# 
   495  0E1F                     	;# 
   496  0E20                     	;# 
   497  0E21                     	;# 
   498  0E22                     	;# 
   499  0E23                     	;# 
   500  0E24                     	;# 
   501  0E25                     	;# 
   502  0E26                     	;# 
   503  0E27                     	;# 
   504  0E28                     	;# 
   505  0E29                     	;# 
   506  0E2A                     	;# 
   507  0E2B                     	;# 
   508  0E2C                     	;# 
   509  0E2D                     	;# 
   510  0E2E                     	;# 
   511  0E2F                     	;# 
   512  0E30                     	;# 
   513  0E31                     	;# 
   514  0E32                     	;# 
   515  0E33                     	;# 
   516  0E34                     	;# 
   517  0E35                     	;# 
   518  0E36                     	;# 
   519  0E37                     	;# 
   520  0E8F                     	;# 
   521  0E90                     	;# 
   522  0E91                     	;# 
   523  0E92                     	;# 
   524  0E93                     	;# 
   525  0E94                     	;# 
   526  0E95                     	;# 
   527  0E96                     	;# 
   528  0E97                     	;# 
   529  0E9C                     	;# 
   530  0E9D                     	;# 
   531  0E9E                     	;# 
   532  0EA1                     	;# 
   533  0EA2                     	;# 
   534  0EA3                     	;# 
   535  0EA4                     	;# 
   536  0EA5                     	;# 
   537  0EA9                     	;# 
   538  0EAA                     	;# 
   539  0EAB                     	;# 
   540  0EAC                     	;# 
   541  0EB1                     	;# 
   542  0EB2                     	;# 
   543  0EB3                     	;# 
   544  0EB8                     	;# 
   545  0EB9                     	;# 
   546  0EBA                     	;# 
   547  0EBB                     	;# 
   548  0EBC                     	;# 
   549  0EBD                     	;# 
   550  0EBE                     	;# 
   551  0EC3                     	;# 
   552  0EC5                     	;# 
   553  0EC6                     	;# 
   554  0EC7                     	;# 
   555  0EC8                     	;# 
   556  0EC9                     	;# 
   557  0ECA                     	;# 
   558  0ECB                     	;# 
   559  0ECC                     	;# 
   560  0F10                     	;# 
   561  0F11                     	;# 
   562  0F12                     	;# 
   563  0F13                     	;# 
   564  0F14                     	;# 
   565  0F15                     	;# 
   566  0F16                     	;# 
   567  0F17                     	;# 
   568  0F18                     	;# 
   569  0F19                     	;# 
   570  0F1A                     	;# 
   571  0F1B                     	;# 
   572  0F1C                     	;# 
   573  0F1D                     	;# 
   574  0F1E                     	;# 
   575  0F1F                     	;# 
   576  0F20                     	;# 
   577  0F21                     	;# 
   578  0F22                     	;# 
   579  0F23                     	;# 
   580  0F24                     	;# 
   581  0F25                     	;# 
   582  0F26                     	;# 
   583  0F27                     	;# 
   584  0F28                     	;# 
   585  0F29                     	;# 
   586  0F2A                     	;# 
   587  0F2B                     	;# 
   588  0F2C                     	;# 
   589  0F2D                     	;# 
   590  0F2E                     	;# 
   591  0F2F                     	;# 
   592  0F30                     	;# 
   593  0F31                     	;# 
   594  0F32                     	;# 
   595  0F38                     	;# 
   596  0F39                     	;# 
   597  0F3A                     	;# 
   598  0F3B                     	;# 
   599  0F3C                     	;# 
   600  0F3D                     	;# 
   601  0F3E                     	;# 
   602  0F3F                     	;# 
   603  0F40                     	;# 
   604  0F41                     	;# 
   605  0F43                     	;# 
   606  0F44                     	;# 
   607  0F45                     	;# 
   608  0F46                     	;# 
   609  0F47                     	;# 
   610  0F48                     	;# 
   611  0F49                     	;# 
   612  0F4A                     	;# 
   613  0F4B                     	;# 
   614  0F4C                     	;# 
   615  0F4E                     	;# 
   616  0F4F                     	;# 
   617  0F50                     	;# 
   618  0F51                     	;# 
   619  0F52                     	;# 
   620  0F53                     	;# 
   621  0F54                     	;# 
   622  0F55                     	;# 
   623  0F56                     	;# 
   624  0F57                     	;# 
   625  0F59                     	;# 
   626  0F5A                     	;# 
   627  0F5B                     	;# 
   628  0F5C                     	;# 
   629  0F5D                     	;# 
   630  0F61                     	;# 
   631  0F62                     	;# 
   632  0F64                     	;# 
   633  0F65                     	;# 
   634  0F66                     	;# 
   635  0F67                     	;# 
   636  0F68                     	;# 
   637  0F69                     	;# 
   638  0F6A                     	;# 
   639  0F6B                     	;# 
   640  0F6C                     	;# 
   641  0F6D                     	;# 
   642  0FE4                     	;# 
   643  0FE5                     	;# 
   644  0FE6                     	;# 
   645  0FE7                     	;# 
   646  0FE8                     	;# 
   647  0FE9                     	;# 
   648  0FEA                     	;# 
   649  0FEB                     	;# 
   650  0FED                     	;# 
   651  0FEE                     	;# 
   652  0FEF                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000D                     	;# 
   667  000E                     	;# 
   668  000F                     	;# 
   669  0010                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0013                     	;# 
   673  0014                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001C                     	;# 
   681  001C                     	;# 
   682  001D                     	;# 
   683  001D                     	;# 
   684  001E                     	;# 
   685  001F                     	;# 
   686  008C                     	;# 
   687  008C                     	;# 
   688  008D                     	;# 
   689  008E                     	;# 
   690  008E                     	;# 
   691  008F                     	;# 
   692  0090                     	;# 
   693  0090                     	;# 
   694  0091                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  010C                     	;# 
   708  010D                     	;# 
   709  010E                     	;# 
   710  010E                     	;# 
   711  010F                     	;# 
   712  0110                     	;# 
   713  0110                     	;# 
   714  0111                     	;# 
   715  0112                     	;# 
   716  0112                     	;# 
   717  0113                     	;# 
   718  0114                     	;# 
   719  0114                     	;# 
   720  0115                     	;# 
   721  0116                     	;# 
   722  0116                     	;# 
   723  0117                     	;# 
   724  0119                     	;# 
   725  0119                     	;# 
   726  0119                     	;# 
   727  011A                     	;# 
   728  011A                     	;# 
   729  011A                     	;# 
   730  011B                     	;# 
   731  011B                     	;# 
   732  011B                     	;# 
   733  011B                     	;# 
   734  011B                     	;# 
   735  011C                     	;# 
   736  011C                     	;# 
   737  011C                     	;# 
   738  011D                     	;# 
   739  011D                     	;# 
   740  011D                     	;# 
   741  011E                     	;# 
   742  011E                     	;# 
   743  011E                     	;# 
   744  011F                     	;# 
   745  011F                     	;# 
   746  011F                     	;# 
   747  011F                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  018E                     	;# 
   752  018F                     	;# 
   753  0190                     	;# 
   754  0191                     	;# 
   755  0192                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  0198                     	;# 
   759  0199                     	;# 
   760  019A                     	;# 
   761  019B                     	;# 
   762  019C                     	;# 
   763  020C                     	;# 
   764  020C                     	;# 
   765  020D                     	;# 
   766  020E                     	;# 
   767  020F                     	;# 
   768  020F                     	;# 
   769  0210                     	;# 
   770  0210                     	;# 
   771  0211                     	;# 
   772  0211                     	;# 
   773  0212                     	;# 
   774  0212                     	;# 
   775  0213                     	;# 
   776  0214                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0216                     	;# 
   780  0216                     	;# 
   781  0217                     	;# 
   782  0217                     	;# 
   783  0218                     	;# 
   784  0218                     	;# 
   785  0219                     	;# 
   786  021A                     	;# 
   787  021B                     	;# 
   788  021B                     	;# 
   789  021C                     	;# 
   790  021C                     	;# 
   791  021D                     	;# 
   792  021D                     	;# 
   793  021E                     	;# 
   794  021F                     	;# 
   795  028C                     	;# 
   796  028C                     	;# 
   797  028D                     	;# 
   798  028D                     	;# 
   799  028E                     	;# 
   800  028F                     	;# 
   801  0290                     	;# 
   802  0290                     	;# 
   803  0291                     	;# 
   804  0292                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0293                     	;# 
   808  0294                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0296                     	;# 
   812  0297                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  0299                     	;# 
   817  029A                     	;# 
   818  029B                     	;# 
   819  029C                     	;# 
   820  029C                     	;# 
   821  029D                     	;# 
   822  030C                     	;# 
   823  030C                     	;# 
   824  030D                     	;# 
   825  030E                     	;# 
   826  030F                     	;# 
   827  0310                     	;# 
   828  0310                     	;# 
   829  0311                     	;# 
   830  0312                     	;# 
   831  0313                     	;# 
   832  0314                     	;# 
   833  0314                     	;# 
   834  0315                     	;# 
   835  0316                     	;# 
   836  0317                     	;# 
   837  0318                     	;# 
   838  0318                     	;# 
   839  0319                     	;# 
   840  031A                     	;# 
   841  031B                     	;# 
   842  031C                     	;# 
   843  031C                     	;# 
   844  031D                     	;# 
   845  031E                     	;# 
   846  031F                     	;# 
   847  038C                     	;# 
   848  038C                     	;# 
   849  038D                     	;# 
   850  038E                     	;# 
   851  0390                     	;# 
   852  0390                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  040C                     	;# 
   856  040D                     	;# 
   857  040E                     	;# 
   858  040F                     	;# 
   859  0410                     	;# 
   860  0411                     	;# 
   861  0416                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  0418                     	;# 
   865  0418                     	;# 
   866  0419                     	;# 
   867  041A                     	;# 
   868  041A                     	;# 
   869  041B                     	;# 
   870  041C                     	;# 
   871  041C                     	;# 
   872  041D                     	;# 
   873  041E                     	;# 
   874  041F                     	;# 
   875  048C                     	;# 
   876  048C                     	;# 
   877  048D                     	;# 
   878  048E                     	;# 
   879  048F                     	;# 
   880  048F                     	;# 
   881  0490                     	;# 
   882  0491                     	;# 
   883  0492                     	;# 
   884  0492                     	;# 
   885  0493                     	;# 
   886  0494                     	;# 
   887  0495                     	;# 
   888  0495                     	;# 
   889  0496                     	;# 
   890  0497                     	;# 
   891  0498                     	;# 
   892  0499                     	;# 
   893  049A                     	;# 
   894  049B                     	;# 
   895  049C                     	;# 
   896  049D                     	;# 
   897  050C                     	;# 
   898  050C                     	;# 
   899  050D                     	;# 
   900  050E                     	;# 
   901  050F                     	;# 
   902  050F                     	;# 
   903  0510                     	;# 
   904  0511                     	;# 
   905  0512                     	;# 
   906  0512                     	;# 
   907  0513                     	;# 
   908  0514                     	;# 
   909  0515                     	;# 
   910  0515                     	;# 
   911  0516                     	;# 
   912  0517                     	;# 
   913  0518                     	;# 
   914  0519                     	;# 
   915  051A                     	;# 
   916  051B                     	;# 
   917  051C                     	;# 
   918  051D                     	;# 
   919  058C                     	;# 
   920  058C                     	;# 
   921  058D                     	;# 
   922  058E                     	;# 
   923  058F                     	;# 
   924  058F                     	;# 
   925  0590                     	;# 
   926  0591                     	;# 
   927  0592                     	;# 
   928  0593                     	;# 
   929  060C                     	;# 
   930  060D                     	;# 
   931  060E                     	;# 
   932  060F                     	;# 
   933  0610                     	;# 
   934  0611                     	;# 
   935  0612                     	;# 
   936  0613                     	;# 
   937  0614                     	;# 
   938  0616                     	;# 
   939  0617                     	;# 
   940  0618                     	;# 
   941  0619                     	;# 
   942  061A                     	;# 
   943  061B                     	;# 
   944  061C                     	;# 
   945  061D                     	;# 
   946  061E                     	;# 
   947  068C                     	;# 
   948  068D                     	;# 
   949  068E                     	;# 
   950  068F                     	;# 
   951  0690                     	;# 
   952  0691                     	;# 
   953  0692                     	;# 
   954  0693                     	;# 
   955  0694                     	;# 
   956  070C                     	;# 
   957  070D                     	;# 
   958  070E                     	;# 
   959  070F                     	;# 
   960  0710                     	;# 
   961  0711                     	;# 
   962  0712                     	;# 
   963  0713                     	;# 
   964  0714                     	;# 
   965  0716                     	;# 
   966  0717                     	;# 
   967  0718                     	;# 
   968  0719                     	;# 
   969  071A                     	;# 
   970  071B                     	;# 
   971  071C                     	;# 
   972  071D                     	;# 
   973  071E                     	;# 
   974  0796                     	;# 
   975  0797                     	;# 
   976  0798                     	;# 
   977  0799                     	;# 
   978  079A                     	;# 
   979  079B                     	;# 
   980  080C                     	;# 
   981  080D                     	;# 
   982  080E                     	;# 
   983  080F                     	;# 
   984  0810                     	;# 
   985  0811                     	;# 
   986  0812                     	;# 
   987  0813                     	;# 
   988  0814                     	;# 
   989  081A                     	;# 
   990  081B                     	;# 
   991  081C                     	;# 
   992  081D                     	;# 
   993  081E                     	;# 
   994  081F                     	;# 
   995  088C                     	;# 
   996  088D                     	;# 
   997  088E                     	;# 
   998  088F                     	;# 
   999  0890                     	;# 
  1000  0891                     	;# 
  1001  0892                     	;# 
  1002  0893                     	;# 
  1003  0895                     	;# 
  1004  0896                     	;# 
  1005  0897                     	;# 
  1006  0898                     	;# 
  1007  0899                     	;# 
  1008  089A                     	;# 
  1009  089B                     	;# 
  1010  090C                     	;# 
  1011  090E                     	;# 
  1012  090F                     	;# 
  1013  091F                     	;# 
  1014  091F                     	;# 
  1015  098F                     	;# 
  1016  098F                     	;# 
  1017  0990                     	;# 
  1018  0991                     	;# 
  1019  0992                     	;# 
  1020  0993                     	;# 
  1021  0994                     	;# 
  1022  0995                     	;# 
  1023  0996                     	;# 
  1024  0997                     	;# 
  1025  0E0F                     	;# 
  1026  0E10                     	;# 
  1027  0E11                     	;# 
  1028  0E12                     	;# 
  1029  0E13                     	;# 
  1030  0E14                     	;# 
  1031  0E15                     	;# 
  1032  0E16                     	;# 
  1033  0E17                     	;# 
  1034  0E18                     	;# 
  1035  0E19                     	;# 
  1036  0E1A                     	;# 
  1037  0E1B                     	;# 
  1038  0E1C                     	;# 
  1039  0E1D                     	;# 
  1040  0E1E                     	;# 
  1041  0E1F                     	;# 
  1042  0E20                     	;# 
  1043  0E21                     	;# 
  1044  0E22                     	;# 
  1045  0E23                     	;# 
  1046  0E24                     	;# 
  1047  0E25                     	;# 
  1048  0E26                     	;# 
  1049  0E27                     	;# 
  1050  0E28                     	;# 
  1051  0E29                     	;# 
  1052  0E2A                     	;# 
  1053  0E2B                     	;# 
  1054  0E2C                     	;# 
  1055  0E2D                     	;# 
  1056  0E2E                     	;# 
  1057  0E2F                     	;# 
  1058  0E30                     	;# 
  1059  0E31                     	;# 
  1060  0E32                     	;# 
  1061  0E33                     	;# 
  1062  0E34                     	;# 
  1063  0E35                     	;# 
  1064  0E36                     	;# 
  1065  0E37                     	;# 
  1066  0E8F                     	;# 
  1067  0E90                     	;# 
  1068  0E91                     	;# 
  1069  0E92                     	;# 
  1070  0E93                     	;# 
  1071  0E94                     	;# 
  1072  0E95                     	;# 
  1073  0E96                     	;# 
  1074  0E97                     	;# 
  1075  0E9C                     	;# 
  1076  0E9D                     	;# 
  1077  0E9E                     	;# 
  1078  0EA1                     	;# 
  1079  0EA2                     	;# 
  1080  0EA3                     	;# 
  1081  0EA4                     	;# 
  1082  0EA5                     	;# 
  1083  0EA9                     	;# 
  1084  0EAA                     	;# 
  1085  0EAB                     	;# 
  1086  0EAC                     	;# 
  1087  0EB1                     	;# 
  1088  0EB2                     	;# 
  1089  0EB3                     	;# 
  1090  0EB8                     	;# 
  1091  0EB9                     	;# 
  1092  0EBA                     	;# 
  1093  0EBB                     	;# 
  1094  0EBC                     	;# 
  1095  0EBD                     	;# 
  1096  0EBE                     	;# 
  1097  0EC3                     	;# 
  1098  0EC5                     	;# 
  1099  0EC6                     	;# 
  1100  0EC7                     	;# 
  1101  0EC8                     	;# 
  1102  0EC9                     	;# 
  1103  0ECA                     	;# 
  1104  0ECB                     	;# 
  1105  0ECC                     	;# 
  1106  0F10                     	;# 
  1107  0F11                     	;# 
  1108  0F12                     	;# 
  1109  0F13                     	;# 
  1110  0F14                     	;# 
  1111  0F15                     	;# 
  1112  0F16                     	;# 
  1113  0F17                     	;# 
  1114  0F18                     	;# 
  1115  0F19                     	;# 
  1116  0F1A                     	;# 
  1117  0F1B                     	;# 
  1118  0F1C                     	;# 
  1119  0F1D                     	;# 
  1120  0F1E                     	;# 
  1121  0F1F                     	;# 
  1122  0F20                     	;# 
  1123  0F21                     	;# 
  1124  0F22                     	;# 
  1125  0F23                     	;# 
  1126  0F24                     	;# 
  1127  0F25                     	;# 
  1128  0F26                     	;# 
  1129  0F27                     	;# 
  1130  0F28                     	;# 
  1131  0F29                     	;# 
  1132  0F2A                     	;# 
  1133  0F2B                     	;# 
  1134  0F2C                     	;# 
  1135  0F2D                     	;# 
  1136  0F2E                     	;# 
  1137  0F2F                     	;# 
  1138  0F30                     	;# 
  1139  0F31                     	;# 
  1140  0F32                     	;# 
  1141  0F38                     	;# 
  1142  0F39                     	;# 
  1143  0F3A                     	;# 
  1144  0F3B                     	;# 
  1145  0F3C                     	;# 
  1146  0F3D                     	;# 
  1147  0F3E                     	;# 
  1148  0F3F                     	;# 
  1149  0F40                     	;# 
  1150  0F41                     	;# 
  1151  0F43                     	;# 
  1152  0F44                     	;# 
  1153  0F45                     	;# 
  1154  0F46                     	;# 
  1155  0F47                     	;# 
  1156  0F48                     	;# 
  1157  0F49                     	;# 
  1158  0F4A                     	;# 
  1159  0F4B                     	;# 
  1160  0F4C                     	;# 
  1161  0F4E                     	;# 
  1162  0F4F                     	;# 
  1163  0F50                     	;# 
  1164  0F51                     	;# 
  1165  0F52                     	;# 
  1166  0F53                     	;# 
  1167  0F54                     	;# 
  1168  0F55                     	;# 
  1169  0F56                     	;# 
  1170  0F57                     	;# 
  1171  0F59                     	;# 
  1172  0F5A                     	;# 
  1173  0F5B                     	;# 
  1174  0F5C                     	;# 
  1175  0F5D                     	;# 
  1176  0F61                     	;# 
  1177  0F62                     	;# 
  1178  0F64                     	;# 
  1179  0F65                     	;# 
  1180  0F66                     	;# 
  1181  0F67                     	;# 
  1182  0F68                     	;# 
  1183  0F69                     	;# 
  1184  0F6A                     	;# 
  1185  0F6B                     	;# 
  1186  0F6C                     	;# 
  1187  0F6D                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  000E                     	;# 
  1214  000F                     	;# 
  1215  0010                     	;# 
  1216  0011                     	;# 
  1217  0012                     	;# 
  1218  0013                     	;# 
  1219  0014                     	;# 
  1220  0015                     	;# 
  1221  0016                     	;# 
  1222  0017                     	;# 
  1223  0018                     	;# 
  1224  0019                     	;# 
  1225  001A                     	;# 
  1226  001C                     	;# 
  1227  001C                     	;# 
  1228  001D                     	;# 
  1229  001D                     	;# 
  1230  001E                     	;# 
  1231  001F                     	;# 
  1232  008C                     	;# 
  1233  008C                     	;# 
  1234  008D                     	;# 
  1235  008E                     	;# 
  1236  008E                     	;# 
  1237  008F                     	;# 
  1238  0090                     	;# 
  1239  0090                     	;# 
  1240  0091                     	;# 
  1241  0093                     	;# 
  1242  0094                     	;# 
  1243  0095                     	;# 
  1244  0096                     	;# 
  1245  0097                     	;# 
  1246  0098                     	;# 
  1247  0099                     	;# 
  1248  009A                     	;# 
  1249  009B                     	;# 
  1250  009C                     	;# 
  1251  009D                     	;# 
  1252  009E                     	;# 
  1253  010C                     	;# 
  1254  010D                     	;# 
  1255  010E                     	;# 
  1256  010E                     	;# 
  1257  010F                     	;# 
  1258  0110                     	;# 
  1259  0110                     	;# 
  1260  0111                     	;# 
  1261  0112                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0116                     	;# 
  1269  0117                     	;# 
  1270  0119                     	;# 
  1271  0119                     	;# 
  1272  0119                     	;# 
  1273  011A                     	;# 
  1274  011A                     	;# 
  1275  011A                     	;# 
  1276  011B                     	;# 
  1277  011B                     	;# 
  1278  011B                     	;# 
  1279  011B                     	;# 
  1280  011B                     	;# 
  1281  011C                     	;# 
  1282  011C                     	;# 
  1283  011C                     	;# 
  1284  011D                     	;# 
  1285  011D                     	;# 
  1286  011D                     	;# 
  1287  011E                     	;# 
  1288  011E                     	;# 
  1289  011E                     	;# 
  1290  011F                     	;# 
  1291  011F                     	;# 
  1292  011F                     	;# 
  1293  011F                     	;# 
  1294  011F                     	;# 
  1295  018C                     	;# 
  1296  018D                     	;# 
  1297  018E                     	;# 
  1298  018F                     	;# 
  1299  0190                     	;# 
  1300  0191                     	;# 
  1301  0192                     	;# 
  1302  0196                     	;# 
  1303  0197                     	;# 
  1304  0198                     	;# 
  1305  0199                     	;# 
  1306  019A                     	;# 
  1307  019B                     	;# 
  1308  019C                     	;# 
  1309  020C                     	;# 
  1310  020C                     	;# 
  1311  020D                     	;# 
  1312  020E                     	;# 
  1313  020F                     	;# 
  1314  020F                     	;# 
  1315  0210                     	;# 
  1316  0210                     	;# 
  1317  0211                     	;# 
  1318  0211                     	;# 
  1319  0212                     	;# 
  1320  0212                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0215                     	;# 
  1324  0215                     	;# 
  1325  0216                     	;# 
  1326  0216                     	;# 
  1327  0217                     	;# 
  1328  0217                     	;# 
  1329  0218                     	;# 
  1330  0218                     	;# 
  1331  0219                     	;# 
  1332  021A                     	;# 
  1333  021B                     	;# 
  1334  021B                     	;# 
  1335  021C                     	;# 
  1336  021C                     	;# 
  1337  021D                     	;# 
  1338  021D                     	;# 
  1339  021E                     	;# 
  1340  021F                     	;# 
  1341  028C                     	;# 
  1342  028C                     	;# 
  1343  028D                     	;# 
  1344  028D                     	;# 
  1345  028E                     	;# 
  1346  028F                     	;# 
  1347  0290                     	;# 
  1348  0290                     	;# 
  1349  0291                     	;# 
  1350  0292                     	;# 
  1351  0292                     	;# 
  1352  0293                     	;# 
  1353  0293                     	;# 
  1354  0294                     	;# 
  1355  0295                     	;# 
  1356  0296                     	;# 
  1357  0296                     	;# 
  1358  0297                     	;# 
  1359  0298                     	;# 
  1360  0298                     	;# 
  1361  0299                     	;# 
  1362  0299                     	;# 
  1363  029A                     	;# 
  1364  029B                     	;# 
  1365  029C                     	;# 
  1366  029C                     	;# 
  1367  029D                     	;# 
  1368  030C                     	;# 
  1369  030C                     	;# 
  1370  030D                     	;# 
  1371  030E                     	;# 
  1372  030F                     	;# 
  1373  0310                     	;# 
  1374  0310                     	;# 
  1375  0311                     	;# 
  1376  0312                     	;# 
  1377  0313                     	;# 
  1378  0314                     	;# 
  1379  0314                     	;# 
  1380  0315                     	;# 
  1381  0316                     	;# 
  1382  0317                     	;# 
  1383  0318                     	;# 
  1384  0318                     	;# 
  1385  0319                     	;# 
  1386  031A                     	;# 
  1387  031B                     	;# 
  1388  031C                     	;# 
  1389  031C                     	;# 
  1390  031D                     	;# 
  1391  031E                     	;# 
  1392  031F                     	;# 
  1393  038C                     	;# 
  1394  038C                     	;# 
  1395  038D                     	;# 
  1396  038E                     	;# 
  1397  0390                     	;# 
  1398  0390                     	;# 
  1399  0391                     	;# 
  1400  0392                     	;# 
  1401  040C                     	;# 
  1402  040D                     	;# 
  1403  040E                     	;# 
  1404  040F                     	;# 
  1405  0410                     	;# 
  1406  0411                     	;# 
  1407  0416                     	;# 
  1408  0416                     	;# 
  1409  0417                     	;# 
  1410  0418                     	;# 
  1411  0418                     	;# 
  1412  0419                     	;# 
  1413  041A                     	;# 
  1414  041A                     	;# 
  1415  041B                     	;# 
  1416  041C                     	;# 
  1417  041C                     	;# 
  1418  041D                     	;# 
  1419  041E                     	;# 
  1420  041F                     	;# 
  1421  048C                     	;# 
  1422  048C                     	;# 
  1423  048D                     	;# 
  1424  048E                     	;# 
  1425  048F                     	;# 
  1426  048F                     	;# 
  1427  0490                     	;# 
  1428  0491                     	;# 
  1429  0492                     	;# 
  1430  0492                     	;# 
  1431  0493                     	;# 
  1432  0494                     	;# 
  1433  0495                     	;# 
  1434  0495                     	;# 
  1435  0496                     	;# 
  1436  0497                     	;# 
  1437  0498                     	;# 
  1438  0499                     	;# 
  1439  049A                     	;# 
  1440  049B                     	;# 
  1441  049C                     	;# 
  1442  049D                     	;# 
  1443  050C                     	;# 
  1444  050C                     	;# 
  1445  050D                     	;# 
  1446  050E                     	;# 
  1447  050F                     	;# 
  1448  050F                     	;# 
  1449  0510                     	;# 
  1450  0511                     	;# 
  1451  0512                     	;# 
  1452  0512                     	;# 
  1453  0513                     	;# 
  1454  0514                     	;# 
  1455  0515                     	;# 
  1456  0515                     	;# 
  1457  0516                     	;# 
  1458  0517                     	;# 
  1459  0518                     	;# 
  1460  0519                     	;# 
  1461  051A                     	;# 
  1462  051B                     	;# 
  1463  051C                     	;# 
  1464  051D                     	;# 
  1465  058C                     	;# 
  1466  058C                     	;# 
  1467  058D                     	;# 
  1468  058E                     	;# 
  1469  058F                     	;# 
  1470  058F                     	;# 
  1471  0590                     	;# 
  1472  0591                     	;# 
  1473  0592                     	;# 
  1474  0593                     	;# 
  1475  060C                     	;# 
  1476  060D                     	;# 
  1477  060E                     	;# 
  1478  060F                     	;# 
  1479  0610                     	;# 
  1480  0611                     	;# 
  1481  0612                     	;# 
  1482  0613                     	;# 
  1483  0614                     	;# 
  1484  0616                     	;# 
  1485  0617                     	;# 
  1486  0618                     	;# 
  1487  0619                     	;# 
  1488  061A                     	;# 
  1489  061B                     	;# 
  1490  061C                     	;# 
  1491  061D                     	;# 
  1492  061E                     	;# 
  1493  068C                     	;# 
  1494  068D                     	;# 
  1495  068E                     	;# 
  1496  068F                     	;# 
  1497  0690                     	;# 
  1498  0691                     	;# 
  1499  0692                     	;# 
  1500  0693                     	;# 
  1501  0694                     	;# 
  1502  070C                     	;# 
  1503  070D                     	;# 
  1504  070E                     	;# 
  1505  070F                     	;# 
  1506  0710                     	;# 
  1507  0711                     	;# 
  1508  0712                     	;# 
  1509  0713                     	;# 
  1510  0714                     	;# 
  1511  0716                     	;# 
  1512  0717                     	;# 
  1513  0718                     	;# 
  1514  0719                     	;# 
  1515  071A                     	;# 
  1516  071B                     	;# 
  1517  071C                     	;# 
  1518  071D                     	;# 
  1519  071E                     	;# 
  1520  0796                     	;# 
  1521  0797                     	;# 
  1522  0798                     	;# 
  1523  0799                     	;# 
  1524  079A                     	;# 
  1525  079B                     	;# 
  1526  080C                     	;# 
  1527  080D                     	;# 
  1528  080E                     	;# 
  1529  080F                     	;# 
  1530  0810                     	;# 
  1531  0811                     	;# 
  1532  0812                     	;# 
  1533  0813                     	;# 
  1534  0814                     	;# 
  1535  081A                     	;# 
  1536  081B                     	;# 
  1537  081C                     	;# 
  1538  081D                     	;# 
  1539  081E                     	;# 
  1540  081F                     	;# 
  1541  088C                     	;# 
  1542  088D                     	;# 
  1543  088E                     	;# 
  1544  088F                     	;# 
  1545  0890                     	;# 
  1546  0891                     	;# 
  1547  0892                     	;# 
  1548  0893                     	;# 
  1549  0895                     	;# 
  1550  0896                     	;# 
  1551  0897                     	;# 
  1552  0898                     	;# 
  1553  0899                     	;# 
  1554  089A                     	;# 
  1555  089B                     	;# 
  1556  090C                     	;# 
  1557  090E                     	;# 
  1558  090F                     	;# 
  1559  091F                     	;# 
  1560  091F                     	;# 
  1561  098F                     	;# 
  1562  098F                     	;# 
  1563  0990                     	;# 
  1564  0991                     	;# 
  1565  0992                     	;# 
  1566  0993                     	;# 
  1567  0994                     	;# 
  1568  0995                     	;# 
  1569  0996                     	;# 
  1570  0997                     	;# 
  1571  0E0F                     	;# 
  1572  0E10                     	;# 
  1573  0E11                     	;# 
  1574  0E12                     	;# 
  1575  0E13                     	;# 
  1576  0E14                     	;# 
  1577  0E15                     	;# 
  1578  0E16                     	;# 
  1579  0E17                     	;# 
  1580  0E18                     	;# 
  1581  0E19                     	;# 
  1582  0E1A                     	;# 
  1583  0E1B                     	;# 
  1584  0E1C                     	;# 
  1585  0E1D                     	;# 
  1586  0E1E                     	;# 
  1587  0E1F                     	;# 
  1588  0E20                     	;# 
  1589  0E21                     	;# 
  1590  0E22                     	;# 
  1591  0E23                     	;# 
  1592  0E24                     	;# 
  1593  0E25                     	;# 
  1594  0E26                     	;# 
  1595  0E27                     	;# 
  1596  0E28                     	;# 
  1597  0E29                     	;# 
  1598  0E2A                     	;# 
  1599  0E2B                     	;# 
  1600  0E2C                     	;# 
  1601  0E2D                     	;# 
  1602  0E2E                     	;# 
  1603  0E2F                     	;# 
  1604  0E30                     	;# 
  1605  0E31                     	;# 
  1606  0E32                     	;# 
  1607  0E33                     	;# 
  1608  0E34                     	;# 
  1609  0E35                     	;# 
  1610  0E36                     	;# 
  1611  0E37                     	;# 
  1612  0E8F                     	;# 
  1613  0E90                     	;# 
  1614  0E91                     	;# 
  1615  0E92                     	;# 
  1616  0E93                     	;# 
  1617  0E94                     	;# 
  1618  0E95                     	;# 
  1619  0E96                     	;# 
  1620  0E97                     	;# 
  1621  0E9C                     	;# 
  1622  0E9D                     	;# 
  1623  0E9E                     	;# 
  1624  0EA1                     	;# 
  1625  0EA2                     	;# 
  1626  0EA3                     	;# 
  1627  0EA4                     	;# 
  1628  0EA5                     	;# 
  1629  0EA9                     	;# 
  1630  0EAA                     	;# 
  1631  0EAB                     	;# 
  1632  0EAC                     	;# 
  1633  0EB1                     	;# 
  1634  0EB2                     	;# 
  1635  0EB3                     	;# 
  1636  0EB8                     	;# 
  1637  0EB9                     	;# 
  1638  0EBA                     	;# 
  1639  0EBB                     	;# 
  1640  0EBC                     	;# 
  1641  0EBD                     	;# 
  1642  0EBE                     	;# 
  1643  0EC3                     	;# 
  1644  0EC5                     	;# 
  1645  0EC6                     	;# 
  1646  0EC7                     	;# 
  1647  0EC8                     	;# 
  1648  0EC9                     	;# 
  1649  0ECA                     	;# 
  1650  0ECB                     	;# 
  1651  0ECC                     	;# 
  1652  0F10                     	;# 
  1653  0F11                     	;# 
  1654  0F12                     	;# 
  1655  0F13                     	;# 
  1656  0F14                     	;# 
  1657  0F15                     	;# 
  1658  0F16                     	;# 
  1659  0F17                     	;# 
  1660  0F18                     	;# 
  1661  0F19                     	;# 
  1662  0F1A                     	;# 
  1663  0F1B                     	;# 
  1664  0F1C                     	;# 
  1665  0F1D                     	;# 
  1666  0F1E                     	;# 
  1667  0F1F                     	;# 
  1668  0F20                     	;# 
  1669  0F21                     	;# 
  1670  0F22                     	;# 
  1671  0F23                     	;# 
  1672  0F24                     	;# 
  1673  0F25                     	;# 
  1674  0F26                     	;# 
  1675  0F27                     	;# 
  1676  0F28                     	;# 
  1677  0F29                     	;# 
  1678  0F2A                     	;# 
  1679  0F2B                     	;# 
  1680  0F2C                     	;# 
  1681  0F2D                     	;# 
  1682  0F2E                     	;# 
  1683  0F2F                     	;# 
  1684  0F30                     	;# 
  1685  0F31                     	;# 
  1686  0F32                     	;# 
  1687  0F38                     	;# 
  1688  0F39                     	;# 
  1689  0F3A                     	;# 
  1690  0F3B                     	;# 
  1691  0F3C                     	;# 
  1692  0F3D                     	;# 
  1693  0F3E                     	;# 
  1694  0F3F                     	;# 
  1695  0F40                     	;# 
  1696  0F41                     	;# 
  1697  0F43                     	;# 
  1698  0F44                     	;# 
  1699  0F45                     	;# 
  1700  0F46                     	;# 
  1701  0F47                     	;# 
  1702  0F48                     	;# 
  1703  0F49                     	;# 
  1704  0F4A                     	;# 
  1705  0F4B                     	;# 
  1706  0F4C                     	;# 
  1707  0F4E                     	;# 
  1708  0F4F                     	;# 
  1709  0F50                     	;# 
  1710  0F51                     	;# 
  1711  0F52                     	;# 
  1712  0F53                     	;# 
  1713  0F54                     	;# 
  1714  0F55                     	;# 
  1715  0F56                     	;# 
  1716  0F57                     	;# 
  1717  0F59                     	;# 
  1718  0F5A                     	;# 
  1719  0F5B                     	;# 
  1720  0F5C                     	;# 
  1721  0F5D                     	;# 
  1722  0F61                     	;# 
  1723  0F62                     	;# 
  1724  0F64                     	;# 
  1725  0F65                     	;# 
  1726  0F66                     	;# 
  1727  0F67                     	;# 
  1728  0F68                     	;# 
  1729  0F69                     	;# 
  1730  0F6A                     	;# 
  1731  0F6B                     	;# 
  1732  0F6C                     	;# 
  1733  0F6D                     	;# 
  1734  0FE4                     	;# 
  1735  0FE5                     	;# 
  1736  0FE6                     	;# 
  1737  0FE7                     	;# 
  1738  0FE8                     	;# 
  1739  0FE9                     	;# 
  1740  0FEA                     	;# 
  1741  0FEB                     	;# 
  1742  0FED                     	;# 
  1743  0FEE                     	;# 
  1744  0FEF                     	;# 
  1745  0000                     	;# 
  1746  0001                     	;# 
  1747  0002                     	;# 
  1748  0003                     	;# 
  1749  0004                     	;# 
  1750  0005                     	;# 
  1751  0006                     	;# 
  1752  0007                     	;# 
  1753  0008                     	;# 
  1754  0009                     	;# 
  1755  000A                     	;# 
  1756  000B                     	;# 
  1757  000C                     	;# 
  1758  000D                     	;# 
  1759  000E                     	;# 
  1760  000F                     	;# 
  1761  0010                     	;# 
  1762  0011                     	;# 
  1763  0012                     	;# 
  1764  0013                     	;# 
  1765  0014                     	;# 
  1766  0015                     	;# 
  1767  0016                     	;# 
  1768  0017                     	;# 
  1769  0018                     	;# 
  1770  0019                     	;# 
  1771  001A                     	;# 
  1772  001C                     	;# 
  1773  001C                     	;# 
  1774  001D                     	;# 
  1775  001D                     	;# 
  1776  001E                     	;# 
  1777  001F                     	;# 
  1778  008C                     	;# 
  1779  008C                     	;# 
  1780  008D                     	;# 
  1781  008E                     	;# 
  1782  008E                     	;# 
  1783  008F                     	;# 
  1784  0090                     	;# 
  1785  0090                     	;# 
  1786  0091                     	;# 
  1787  0093                     	;# 
  1788  0094                     	;# 
  1789  0095                     	;# 
  1790  0096                     	;# 
  1791  0097                     	;# 
  1792  0098                     	;# 
  1793  0099                     	;# 
  1794  009A                     	;# 
  1795  009B                     	;# 
  1796  009C                     	;# 
  1797  009D                     	;# 
  1798  009E                     	;# 
  1799  010C                     	;# 
  1800  010D                     	;# 
  1801  010E                     	;# 
  1802  010E                     	;# 
  1803  010F                     	;# 
  1804  0110                     	;# 
  1805  0110                     	;# 
  1806  0111                     	;# 
  1807  0112                     	;# 
  1808  0112                     	;# 
  1809  0113                     	;# 
  1810  0114                     	;# 
  1811  0114                     	;# 
  1812  0115                     	;# 
  1813  0116                     	;# 
  1814  0116                     	;# 
  1815  0117                     	;# 
  1816  0119                     	;# 
  1817  0119                     	;# 
  1818  0119                     	;# 
  1819  011A                     	;# 
  1820  011A                     	;# 
  1821  011A                     	;# 
  1822  011B                     	;# 
  1823  011B                     	;# 
  1824  011B                     	;# 
  1825  011B                     	;# 
  1826  011B                     	;# 
  1827  011C                     	;# 
  1828  011C                     	;# 
  1829  011C                     	;# 
  1830  011D                     	;# 
  1831  011D                     	;# 
  1832  011D                     	;# 
  1833  011E                     	;# 
  1834  011E                     	;# 
  1835  011E                     	;# 
  1836  011F                     	;# 
  1837  011F                     	;# 
  1838  011F                     	;# 
  1839  011F                     	;# 
  1840  011F                     	;# 
  1841  018C                     	;# 
  1842  018D                     	;# 
  1843  018E                     	;# 
  1844  018F                     	;# 
  1845  0190                     	;# 
  1846  0191                     	;# 
  1847  0192                     	;# 
  1848  0196                     	;# 
  1849  0197                     	;# 
  1850  0198                     	;# 
  1851  0199                     	;# 
  1852  019A                     	;# 
  1853  019B                     	;# 
  1854  019C                     	;# 
  1855  020C                     	;# 
  1856  020C                     	;# 
  1857  020D                     	;# 
  1858  020E                     	;# 
  1859  020F                     	;# 
  1860  020F                     	;# 
  1861  0210                     	;# 
  1862  0210                     	;# 
  1863  0211                     	;# 
  1864  0211                     	;# 
  1865  0212                     	;# 
  1866  0212                     	;# 
  1867  0213                     	;# 
  1868  0214                     	;# 
  1869  0215                     	;# 
  1870  0215                     	;# 
  1871  0216                     	;# 
  1872  0216                     	;# 
  1873  0217                     	;# 
  1874  0217                     	;# 
  1875  0218                     	;# 
  1876  0218                     	;# 
  1877  0219                     	;# 
  1878  021A                     	;# 
  1879  021B                     	;# 
  1880  021B                     	;# 
  1881  021C                     	;# 
  1882  021C                     	;# 
  1883  021D                     	;# 
  1884  021D                     	;# 
  1885  021E                     	;# 
  1886  021F                     	;# 
  1887  028C                     	;# 
  1888  028C                     	;# 
  1889  028D                     	;# 
  1890  028D                     	;# 
  1891  028E                     	;# 
  1892  028F                     	;# 
  1893  0290                     	;# 
  1894  0290                     	;# 
  1895  0291                     	;# 
  1896  0292                     	;# 
  1897  0292                     	;# 
  1898  0293                     	;# 
  1899  0293                     	;# 
  1900  0294                     	;# 
  1901  0295                     	;# 
  1902  0296                     	;# 
  1903  0296                     	;# 
  1904  0297                     	;# 
  1905  0298                     	;# 
  1906  0298                     	;# 
  1907  0299                     	;# 
  1908  0299                     	;# 
  1909  029A                     	;# 
  1910  029B                     	;# 
  1911  029C                     	;# 
  1912  029C                     	;# 
  1913  029D                     	;# 
  1914  030C                     	;# 
  1915  030C                     	;# 
  1916  030D                     	;# 
  1917  030E                     	;# 
  1918  030F                     	;# 
  1919  0310                     	;# 
  1920  0310                     	;# 
  1921  0311                     	;# 
  1922  0312                     	;# 
  1923  0313                     	;# 
  1924  0314                     	;# 
  1925  0314                     	;# 
  1926  0315                     	;# 
  1927  0316                     	;# 
  1928  0317                     	;# 
  1929  0318                     	;# 
  1930  0318                     	;# 
  1931  0319                     	;# 
  1932  031A                     	;# 
  1933  031B                     	;# 
  1934  031C                     	;# 
  1935  031C                     	;# 
  1936  031D                     	;# 
  1937  031E                     	;# 
  1938  031F                     	;# 
  1939  038C                     	;# 
  1940  038C                     	;# 
  1941  038D                     	;# 
  1942  038E                     	;# 
  1943  0390                     	;# 
  1944  0390                     	;# 
  1945  0391                     	;# 
  1946  0392                     	;# 
  1947  040C                     	;# 
  1948  040D                     	;# 
  1949  040E                     	;# 
  1950  040F                     	;# 
  1951  0410                     	;# 
  1952  0411                     	;# 
  1953  0416                     	;# 
  1954  0416                     	;# 
  1955  0417                     	;# 
  1956  0418                     	;# 
  1957  0418                     	;# 
  1958  0419                     	;# 
  1959  041A                     	;# 
  1960  041A                     	;# 
  1961  041B                     	;# 
  1962  041C                     	;# 
  1963  041C                     	;# 
  1964  041D                     	;# 
  1965  041E                     	;# 
  1966  041F                     	;# 
  1967  048C                     	;# 
  1968  048C                     	;# 
  1969  048D                     	;# 
  1970  048E                     	;# 
  1971  048F                     	;# 
  1972  048F                     	;# 
  1973  0490                     	;# 
  1974  0491                     	;# 
  1975  0492                     	;# 
  1976  0492                     	;# 
  1977  0493                     	;# 
  1978  0494                     	;# 
  1979  0495                     	;# 
  1980  0495                     	;# 
  1981  0496                     	;# 
  1982  0497                     	;# 
  1983  0498                     	;# 
  1984  0499                     	;# 
  1985  049A                     	;# 
  1986  049B                     	;# 
  1987  049C                     	;# 
  1988  049D                     	;# 
  1989  050C                     	;# 
  1990  050C                     	;# 
  1991  050D                     	;# 
  1992  050E                     	;# 
  1993  050F                     	;# 
  1994  050F                     	;# 
  1995  0510                     	;# 
  1996  0511                     	;# 
  1997  0512                     	;# 
  1998  0512                     	;# 
  1999  0513                     	;# 
  2000  0514                     	;# 
  2001  0515                     	;# 
  2002  0515                     	;# 
  2003  0516                     	;# 
  2004  0517                     	;# 
  2005  0518                     	;# 
  2006  0519                     	;# 
  2007  051A                     	;# 
  2008  051B                     	;# 
  2009  051C                     	;# 
  2010  051D                     	;# 
  2011  058C                     	;# 
  2012  058C                     	;# 
  2013  058D                     	;# 
  2014  058E                     	;# 
  2015  058F                     	;# 
  2016  058F                     	;# 
  2017  0590                     	;# 
  2018  0591                     	;# 
  2019  0592                     	;# 
  2020  0593                     	;# 
  2021  060C                     	;# 
  2022  060D                     	;# 
  2023  060E                     	;# 
  2024  060F                     	;# 
  2025  0610                     	;# 
  2026  0611                     	;# 
  2027  0612                     	;# 
  2028  0613                     	;# 
  2029  0614                     	;# 
  2030  0616                     	;# 
  2031  0617                     	;# 
  2032  0618                     	;# 
  2033  0619                     	;# 
  2034  061A                     	;# 
  2035  061B                     	;# 
  2036  061C                     	;# 
  2037  061D                     	;# 
  2038  061E                     	;# 
  2039  068C                     	;# 
  2040  068D                     	;# 
  2041  068E                     	;# 
  2042  068F                     	;# 
  2043  0690                     	;# 
  2044  0691                     	;# 
  2045  0692                     	;# 
  2046  0693                     	;# 
  2047  0694                     	;# 
  2048  070C                     	;# 
  2049  070D                     	;# 
  2050  070E                     	;# 
  2051  070F                     	;# 
  2052  0710                     	;# 
  2053  0711                     	;# 
  2054  0712                     	;# 
  2055  0713                     	;# 
  2056  0714                     	;# 
  2057  0716                     	;# 
  2058  0717                     	;# 
  2059  0718                     	;# 
  2060  0719                     	;# 
  2061  071A                     	;# 
  2062  071B                     	;# 
  2063  071C                     	;# 
  2064  071D                     	;# 
  2065  071E                     	;# 
  2066  0796                     	;# 
  2067  0797                     	;# 
  2068  0798                     	;# 
  2069  0799                     	;# 
  2070  079A                     	;# 
  2071  079B                     	;# 
  2072  080C                     	;# 
  2073  080D                     	;# 
  2074  080E                     	;# 
  2075  080F                     	;# 
  2076  0810                     	;# 
  2077  0811                     	;# 
  2078  0812                     	;# 
  2079  0813                     	;# 
  2080  0814                     	;# 
  2081  081A                     	;# 
  2082  081B                     	;# 
  2083  081C                     	;# 
  2084  081D                     	;# 
  2085  081E                     	;# 
  2086  081F                     	;# 
  2087  088C                     	;# 
  2088  088D                     	;# 
  2089  088E                     	;# 
  2090  088F                     	;# 
  2091  0890                     	;# 
  2092  0891                     	;# 
  2093  0892                     	;# 
  2094  0893                     	;# 
  2095  0895                     	;# 
  2096  0896                     	;# 
  2097  0897                     	;# 
  2098  0898                     	;# 
  2099  0899                     	;# 
  2100  089A                     	;# 
  2101  089B                     	;# 
  2102  090C                     	;# 
  2103  090E                     	;# 
  2104  090F                     	;# 
  2105  091F                     	;# 
  2106  091F                     	;# 
  2107  098F                     	;# 
  2108  098F                     	;# 
  2109  0990                     	;# 
  2110  0991                     	;# 
  2111  0992                     	;# 
  2112  0993                     	;# 
  2113  0994                     	;# 
  2114  0995                     	;# 
  2115  0996                     	;# 
  2116  0997                     	;# 
  2117  0E0F                     	;# 
  2118  0E10                     	;# 
  2119  0E11                     	;# 
  2120  0E12                     	;# 
  2121  0E13                     	;# 
  2122  0E14                     	;# 
  2123  0E15                     	;# 
  2124  0E16                     	;# 
  2125  0E17                     	;# 
  2126  0E18                     	;# 
  2127  0E19                     	;# 
  2128  0E1A                     	;# 
  2129  0E1B                     	;# 
  2130  0E1C                     	;# 
  2131  0E1D                     	;# 
  2132  0E1E                     	;# 
  2133  0E1F                     	;# 
  2134  0E20                     	;# 
  2135  0E21                     	;# 
  2136  0E22                     	;# 
  2137  0E23                     	;# 
  2138  0E24                     	;# 
  2139  0E25                     	;# 
  2140  0E26                     	;# 
  2141  0E27                     	;# 
  2142  0E28                     	;# 
  2143  0E29                     	;# 
  2144  0E2A                     	;# 
  2145  0E2B                     	;# 
  2146  0E2C                     	;# 
  2147  0E2D                     	;# 
  2148  0E2E                     	;# 
  2149  0E2F                     	;# 
  2150  0E30                     	;# 
  2151  0E31                     	;# 
  2152  0E32                     	;# 
  2153  0E33                     	;# 
  2154  0E34                     	;# 
  2155  0E35                     	;# 
  2156  0E36                     	;# 
  2157  0E37                     	;# 
  2158  0E8F                     	;# 
  2159  0E90                     	;# 
  2160  0E91                     	;# 
  2161  0E92                     	;# 
  2162  0E93                     	;# 
  2163  0E94                     	;# 
  2164  0E95                     	;# 
  2165  0E96                     	;# 
  2166  0E97                     	;# 
  2167  0E9C                     	;# 
  2168  0E9D                     	;# 
  2169  0E9E                     	;# 
  2170  0EA1                     	;# 
  2171  0EA2                     	;# 
  2172  0EA3                     	;# 
  2173  0EA4                     	;# 
  2174  0EA5                     	;# 
  2175  0EA9                     	;# 
  2176  0EAA                     	;# 
  2177  0EAB                     	;# 
  2178  0EAC                     	;# 
  2179  0EB1                     	;# 
  2180  0EB2                     	;# 
  2181  0EB3                     	;# 
  2182  0EB8                     	;# 
  2183  0EB9                     	;# 
  2184  0EBA                     	;# 
  2185  0EBB                     	;# 
  2186  0EBC                     	;# 
  2187  0EBD                     	;# 
  2188  0EBE                     	;# 
  2189  0EC3                     	;# 
  2190  0EC5                     	;# 
  2191  0EC6                     	;# 
  2192  0EC7                     	;# 
  2193  0EC8                     	;# 
  2194  0EC9                     	;# 
  2195  0ECA                     	;# 
  2196  0ECB                     	;# 
  2197  0ECC                     	;# 
  2198  0F10                     	;# 
  2199  0F11                     	;# 
  2200  0F12                     	;# 
  2201  0F13                     	;# 
  2202  0F14                     	;# 
  2203  0F15                     	;# 
  2204  0F16                     	;# 
  2205  0F17                     	;# 
  2206  0F18                     	;# 
  2207  0F19                     	;# 
  2208  0F1A                     	;# 
  2209  0F1B                     	;# 
  2210  0F1C                     	;# 
  2211  0F1D                     	;# 
  2212  0F1E                     	;# 
  2213  0F1F                     	;# 
  2214  0F20                     	;# 
  2215  0F21                     	;# 
  2216  0F22                     	;# 
  2217  0F23                     	;# 
  2218  0F24                     	;# 
  2219  0F25                     	;# 
  2220  0F26                     	;# 
  2221  0F27                     	;# 
  2222  0F28                     	;# 
  2223  0F29                     	;# 
  2224  0F2A                     	;# 
  2225  0F2B                     	;# 
  2226  0F2C                     	;# 
  2227  0F2D                     	;# 
  2228  0F2E                     	;# 
  2229  0F2F                     	;# 
  2230  0F30                     	;# 
  2231  0F31                     	;# 
  2232  0F32                     	;# 
  2233  0F38                     	;# 
  2234  0F39                     	;# 
  2235  0F3A                     	;# 
  2236  0F3B                     	;# 
  2237  0F3C                     	;# 
  2238  0F3D                     	;# 
  2239  0F3E                     	;# 
  2240  0F3F                     	;# 
  2241  0F40                     	;# 
  2242  0F41                     	;# 
  2243  0F43                     	;# 
  2244  0F44                     	;# 
  2245  0F45                     	;# 
  2246  0F46                     	;# 
  2247  0F47                     	;# 
  2248  0F48                     	;# 
  2249  0F49                     	;# 
  2250  0F4A                     	;# 
  2251  0F4B                     	;# 
  2252  0F4C                     	;# 
  2253  0F4E                     	;# 
  2254  0F4F                     	;# 
  2255  0F50                     	;# 
  2256  0F51                     	;# 
  2257  0F52                     	;# 
  2258  0F53                     	;# 
  2259  0F54                     	;# 
  2260  0F55                     	;# 
  2261  0F56                     	;# 
  2262  0F57                     	;# 
  2263  0F59                     	;# 
  2264  0F5A                     	;# 
  2265  0F5B                     	;# 
  2266  0F5C                     	;# 
  2267  0F5D                     	;# 
  2268  0F61                     	;# 
  2269  0F62                     	;# 
  2270  0F64                     	;# 
  2271  0F65                     	;# 
  2272  0F66                     	;# 
  2273  0F67                     	;# 
  2274  0F68                     	;# 
  2275  0F69                     	;# 
  2276  0F6A                     	;# 
  2277  0F6B                     	;# 
  2278  0F6C                     	;# 
  2279  0F6D                     	;# 
  2280  0FE4                     	;# 
  2281  0FE5                     	;# 
  2282  0FE6                     	;# 
  2283  0FE7                     	;# 
  2284  0FE8                     	;# 
  2285  0FE9                     	;# 
  2286  0FEA                     	;# 
  2287  0FEB                     	;# 
  2288  0FED                     	;# 
  2289  0FEE                     	;# 
  2290  0FEF                     	;# 
  2291  0000                     	;# 
  2292  0001                     	;# 
  2293  0002                     	;# 
  2294  0003                     	;# 
  2295  0004                     	;# 
  2296  0005                     	;# 
  2297  0006                     	;# 
  2298  0007                     	;# 
  2299  0008                     	;# 
  2300  0009                     	;# 
  2301  000A                     	;# 
  2302  000B                     	;# 
  2303  000C                     	;# 
  2304  000D                     	;# 
  2305  000E                     	;# 
  2306  000F                     	;# 
  2307  0010                     	;# 
  2308  0011                     	;# 
  2309  0012                     	;# 
  2310  0013                     	;# 
  2311  0014                     	;# 
  2312  0015                     	;# 
  2313  0016                     	;# 
  2314  0017                     	;# 
  2315  0018                     	;# 
  2316  0019                     	;# 
  2317  001A                     	;# 
  2318  001C                     	;# 
  2319  001C                     	;# 
  2320  001D                     	;# 
  2321  001D                     	;# 
  2322  001E                     	;# 
  2323  001F                     	;# 
  2324  008C                     	;# 
  2325  008C                     	;# 
  2326  008D                     	;# 
  2327  008E                     	;# 
  2328  008E                     	;# 
  2329  008F                     	;# 
  2330  0090                     	;# 
  2331  0090                     	;# 
  2332  0091                     	;# 
  2333  0093                     	;# 
  2334  0094                     	;# 
  2335  0095                     	;# 
  2336  0096                     	;# 
  2337  0097                     	;# 
  2338  0098                     	;# 
  2339  0099                     	;# 
  2340  009A                     	;# 
  2341  009B                     	;# 
  2342  009C                     	;# 
  2343  009D                     	;# 
  2344  009E                     	;# 
  2345  010C                     	;# 
  2346  010D                     	;# 
  2347  010E                     	;# 
  2348  010E                     	;# 
  2349  010F                     	;# 
  2350  0110                     	;# 
  2351  0110                     	;# 
  2352  0111                     	;# 
  2353  0112                     	;# 
  2354  0112                     	;# 
  2355  0113                     	;# 
  2356  0114                     	;# 
  2357  0114                     	;# 
  2358  0115                     	;# 
  2359  0116                     	;# 
  2360  0116                     	;# 
  2361  0117                     	;# 
  2362  0119                     	;# 
  2363  0119                     	;# 
  2364  0119                     	;# 
  2365  011A                     	;# 
  2366  011A                     	;# 
  2367  011A                     	;# 
  2368  011B                     	;# 
  2369  011B                     	;# 
  2370  011B                     	;# 
  2371  011B                     	;# 
  2372  011B                     	;# 
  2373  011C                     	;# 
  2374  011C                     	;# 
  2375  011C                     	;# 
  2376  011D                     	;# 
  2377  011D                     	;# 
  2378  011D                     	;# 
  2379  011E                     	;# 
  2380  011E                     	;# 
  2381  011E                     	;# 
  2382  011F                     	;# 
  2383  011F                     	;# 
  2384  011F                     	;# 
  2385  011F                     	;# 
  2386  011F                     	;# 
  2387  018C                     	;# 
  2388  018D                     	;# 
  2389  018E                     	;# 
  2390  018F                     	;# 
  2391  0190                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  0196                     	;# 
  2395  0197                     	;# 
  2396  0198                     	;# 
  2397  0199                     	;# 
  2398  019A                     	;# 
  2399  019B                     	;# 
  2400  019C                     	;# 
  2401  020C                     	;# 
  2402  020C                     	;# 
  2403  020D                     	;# 
  2404  020E                     	;# 
  2405  020F                     	;# 
  2406  020F                     	;# 
  2407  0210                     	;# 
  2408  0210                     	;# 
  2409  0211                     	;# 
  2410  0211                     	;# 
  2411  0212                     	;# 
  2412  0212                     	;# 
  2413  0213                     	;# 
  2414  0214                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0216                     	;# 
  2418  0216                     	;# 
  2419  0217                     	;# 
  2420  0217                     	;# 
  2421  0218                     	;# 
  2422  0218                     	;# 
  2423  0219                     	;# 
  2424  021A                     	;# 
  2425  021B                     	;# 
  2426  021B                     	;# 
  2427  021C                     	;# 
  2428  021C                     	;# 
  2429  021D                     	;# 
  2430  021D                     	;# 
  2431  021E                     	;# 
  2432  021F                     	;# 
  2433  028C                     	;# 
  2434  028C                     	;# 
  2435  028D                     	;# 
  2436  028D                     	;# 
  2437  028E                     	;# 
  2438  028F                     	;# 
  2439  0290                     	;# 
  2440  0290                     	;# 
  2441  0291                     	;# 
  2442  0292                     	;# 
  2443  0292                     	;# 
  2444  0293                     	;# 
  2445  0293                     	;# 
  2446  0294                     	;# 
  2447  0295                     	;# 
  2448  0296                     	;# 
  2449  0296                     	;# 
  2450  0297                     	;# 
  2451  0298                     	;# 
  2452  0298                     	;# 
  2453  0299                     	;# 
  2454  0299                     	;# 
  2455  029A                     	;# 
  2456  029B                     	;# 
  2457  029C                     	;# 
  2458  029C                     	;# 
  2459  029D                     	;# 
  2460  030C                     	;# 
  2461  030C                     	;# 
  2462  030D                     	;# 
  2463  030E                     	;# 
  2464  030F                     	;# 
  2465  0310                     	;# 
  2466  0310                     	;# 
  2467  0311                     	;# 
  2468  0312                     	;# 
  2469  0313                     	;# 
  2470  0314                     	;# 
  2471  0314                     	;# 
  2472  0315                     	;# 
  2473  0316                     	;# 
  2474  0317                     	;# 
  2475  0318                     	;# 
  2476  0318                     	;# 
  2477  0319                     	;# 
  2478  031A                     	;# 
  2479  031B                     	;# 
  2480  031C                     	;# 
  2481  031C                     	;# 
  2482  031D                     	;# 
  2483  031E                     	;# 
  2484  031F                     	;# 
  2485  038C                     	;# 
  2486  038C                     	;# 
  2487  038D                     	;# 
  2488  038E                     	;# 
  2489  0390                     	;# 
  2490  0390                     	;# 
  2491  0391                     	;# 
  2492  0392                     	;# 
  2493  040C                     	;# 
  2494  040D                     	;# 
  2495  040E                     	;# 
  2496  040F                     	;# 
  2497  0410                     	;# 
  2498  0411                     	;# 
  2499  0416                     	;# 
  2500  0416                     	;# 
  2501  0417                     	;# 
  2502  0418                     	;# 
  2503  0418                     	;# 
  2504  0419                     	;# 
  2505  041A                     	;# 
  2506  041A                     	;# 
  2507  041B                     	;# 
  2508  041C                     	;# 
  2509  041C                     	;# 
  2510  041D                     	;# 
  2511  041E                     	;# 
  2512  041F                     	;# 
  2513  048C                     	;# 
  2514  048C                     	;# 
  2515  048D                     	;# 
  2516  048E                     	;# 
  2517  048F                     	;# 
  2518  048F                     	;# 
  2519  0490                     	;# 
  2520  0491                     	;# 
  2521  0492                     	;# 
  2522  0492                     	;# 
  2523  0493                     	;# 
  2524  0494                     	;# 
  2525  0495                     	;# 
  2526  0495                     	;# 
  2527  0496                     	;# 
  2528  0497                     	;# 
  2529  0498                     	;# 
  2530  0499                     	;# 
  2531  049A                     	;# 
  2532  049B                     	;# 
  2533  049C                     	;# 
  2534  049D                     	;# 
  2535  050C                     	;# 
  2536  050C                     	;# 
  2537  050D                     	;# 
  2538  050E                     	;# 
  2539  050F                     	;# 
  2540  050F                     	;# 
  2541  0510                     	;# 
  2542  0511                     	;# 
  2543  0512                     	;# 
  2544  0512                     	;# 
  2545  0513                     	;# 
  2546  0514                     	;# 
  2547  0515                     	;# 
  2548  0515                     	;# 
  2549  0516                     	;# 
  2550  0517                     	;# 
  2551  0518                     	;# 
  2552  0519                     	;# 
  2553  051A                     	;# 
  2554  051B                     	;# 
  2555  051C                     	;# 
  2556  051D                     	;# 
  2557  058C                     	;# 
  2558  058C                     	;# 
  2559  058D                     	;# 
  2560  058E                     	;# 
  2561  058F                     	;# 
  2562  058F                     	;# 
  2563  0590                     	;# 
  2564  0591                     	;# 
  2565  0592                     	;# 
  2566  0593                     	;# 
  2567  060C                     	;# 
  2568  060D                     	;# 
  2569  060E                     	;# 
  2570  060F                     	;# 
  2571  0610                     	;# 
  2572  0611                     	;# 
  2573  0612                     	;# 
  2574  0613                     	;# 
  2575  0614                     	;# 
  2576  0616                     	;# 
  2577  0617                     	;# 
  2578  0618                     	;# 
  2579  0619                     	;# 
  2580  061A                     	;# 
  2581  061B                     	;# 
  2582  061C                     	;# 
  2583  061D                     	;# 
  2584  061E                     	;# 
  2585  068C                     	;# 
  2586  068D                     	;# 
  2587  068E                     	;# 
  2588  068F                     	;# 
  2589  0690                     	;# 
  2590  0691                     	;# 
  2591  0692                     	;# 
  2592  0693                     	;# 
  2593  0694                     	;# 
  2594  070C                     	;# 
  2595  070D                     	;# 
  2596  070E                     	;# 
  2597  070F                     	;# 
  2598  0710                     	;# 
  2599  0711                     	;# 
  2600  0712                     	;# 
  2601  0713                     	;# 
  2602  0714                     	;# 
  2603  0716                     	;# 
  2604  0717                     	;# 
  2605  0718                     	;# 
  2606  0719                     	;# 
  2607  071A                     	;# 
  2608  071B                     	;# 
  2609  071C                     	;# 
  2610  071D                     	;# 
  2611  071E                     	;# 
  2612  0796                     	;# 
  2613  0797                     	;# 
  2614  0798                     	;# 
  2615  0799                     	;# 
  2616  079A                     	;# 
  2617  079B                     	;# 
  2618  080C                     	;# 
  2619  080D                     	;# 
  2620  080E                     	;# 
  2621  080F                     	;# 
  2622  0810                     	;# 
  2623  0811                     	;# 
  2624  0812                     	;# 
  2625  0813                     	;# 
  2626  0814                     	;# 
  2627  081A                     	;# 
  2628  081B                     	;# 
  2629  081C                     	;# 
  2630  081D                     	;# 
  2631  081E                     	;# 
  2632  081F                     	;# 
  2633  088C                     	;# 
  2634  088D                     	;# 
  2635  088E                     	;# 
  2636  088F                     	;# 
  2637  0890                     	;# 
  2638  0891                     	;# 
  2639  0892                     	;# 
  2640  0893                     	;# 
  2641  0895                     	;# 
  2642  0896                     	;# 
  2643  0897                     	;# 
  2644  0898                     	;# 
  2645  0899                     	;# 
  2646  089A                     	;# 
  2647  089B                     	;# 
  2648  090C                     	;# 
  2649  090E                     	;# 
  2650  090F                     	;# 
  2651  091F                     	;# 
  2652  091F                     	;# 
  2653  098F                     	;# 
  2654  098F                     	;# 
  2655  0990                     	;# 
  2656  0991                     	;# 
  2657  0992                     	;# 
  2658  0993                     	;# 
  2659  0994                     	;# 
  2660  0995                     	;# 
  2661  0996                     	;# 
  2662  0997                     	;# 
  2663  0E0F                     	;# 
  2664  0E10                     	;# 
  2665  0E11                     	;# 
  2666  0E12                     	;# 
  2667  0E13                     	;# 
  2668  0E14                     	;# 
  2669  0E15                     	;# 
  2670  0E16                     	;# 
  2671  0E17                     	;# 
  2672  0E18                     	;# 
  2673  0E19                     	;# 
  2674  0E1A                     	;# 
  2675  0E1B                     	;# 
  2676  0E1C                     	;# 
  2677  0E1D                     	;# 
  2678  0E1E                     	;# 
  2679  0E1F                     	;# 
  2680  0E20                     	;# 
  2681  0E21                     	;# 
  2682  0E22                     	;# 
  2683  0E23                     	;# 
  2684  0E24                     	;# 
  2685  0E25                     	;# 
  2686  0E26                     	;# 
  2687  0E27                     	;# 
  2688  0E28                     	;# 
  2689  0E29                     	;# 
  2690  0E2A                     	;# 
  2691  0E2B                     	;# 
  2692  0E2C                     	;# 
  2693  0E2D                     	;# 
  2694  0E2E                     	;# 
  2695  0E2F                     	;# 
  2696  0E30                     	;# 
  2697  0E31                     	;# 
  2698  0E32                     	;# 
  2699  0E33                     	;# 
  2700  0E34                     	;# 
  2701  0E35                     	;# 
  2702  0E36                     	;# 
  2703  0E37                     	;# 
  2704  0E8F                     	;# 
  2705  0E90                     	;# 
  2706  0E91                     	;# 
  2707  0E92                     	;# 
  2708  0E93                     	;# 
  2709  0E94                     	;# 
  2710  0E95                     	;# 
  2711  0E96                     	;# 
  2712  0E97                     	;# 
  2713  0E9C                     	;# 
  2714  0E9D                     	;# 
  2715  0E9E                     	;# 
  2716  0EA1                     	;# 
  2717  0EA2                     	;# 
  2718  0EA3                     	;# 
  2719  0EA4                     	;# 
  2720  0EA5                     	;# 
  2721  0EA9                     	;# 
  2722  0EAA                     	;# 
  2723  0EAB                     	;# 
  2724  0EAC                     	;# 
  2725  0EB1                     	;# 
  2726  0EB2                     	;# 
  2727  0EB3                     	;# 
  2728  0EB8                     	;# 
  2729  0EB9                     	;# 
  2730  0EBA                     	;# 
  2731  0EBB                     	;# 
  2732  0EBC                     	;# 
  2733  0EBD                     	;# 
  2734  0EBE                     	;# 
  2735  0EC3                     	;# 
  2736  0EC5                     	;# 
  2737  0EC6                     	;# 
  2738  0EC7                     	;# 
  2739  0EC8                     	;# 
  2740  0EC9                     	;# 
  2741  0ECA                     	;# 
  2742  0ECB                     	;# 
  2743  0ECC                     	;# 
  2744  0F10                     	;# 
  2745  0F11                     	;# 
  2746  0F12                     	;# 
  2747  0F13                     	;# 
  2748  0F14                     	;# 
  2749  0F15                     	;# 
  2750  0F16                     	;# 
  2751  0F17                     	;# 
  2752  0F18                     	;# 
  2753  0F19                     	;# 
  2754  0F1A                     	;# 
  2755  0F1B                     	;# 
  2756  0F1C                     	;# 
  2757  0F1D                     	;# 
  2758  0F1E                     	;# 
  2759  0F1F                     	;# 
  2760  0F20                     	;# 
  2761  0F21                     	;# 
  2762  0F22                     	;# 
  2763  0F23                     	;# 
  2764  0F24                     	;# 
  2765  0F25                     	;# 
  2766  0F26                     	;# 
  2767  0F27                     	;# 
  2768  0F28                     	;# 
  2769  0F29                     	;# 
  2770  0F2A                     	;# 
  2771  0F2B                     	;# 
  2772  0F2C                     	;# 
  2773  0F2D                     	;# 
  2774  0F2E                     	;# 
  2775  0F2F                     	;# 
  2776  0F30                     	;# 
  2777  0F31                     	;# 
  2778  0F32                     	;# 
  2779  0F38                     	;# 
  2780  0F39                     	;# 
  2781  0F3A                     	;# 
  2782  0F3B                     	;# 
  2783  0F3C                     	;# 
  2784  0F3D                     	;# 
  2785  0F3E                     	;# 
  2786  0F3F                     	;# 
  2787  0F40                     	;# 
  2788  0F41                     	;# 
  2789  0F43                     	;# 
  2790  0F44                     	;# 
  2791  0F45                     	;# 
  2792  0F46                     	;# 
  2793  0F47                     	;# 
  2794  0F48                     	;# 
  2795  0F49                     	;# 
  2796  0F4A                     	;# 
  2797  0F4B                     	;# 
  2798  0F4C                     	;# 
  2799  0F4E                     	;# 
  2800  0F4F                     	;# 
  2801  0F50                     	;# 
  2802  0F51                     	;# 
  2803  0F52                     	;# 
  2804  0F53                     	;# 
  2805  0F54                     	;# 
  2806  0F55                     	;# 
  2807  0F56                     	;# 
  2808  0F57                     	;# 
  2809  0F59                     	;# 
  2810  0F5A                     	;# 
  2811  0F5B                     	;# 
  2812  0F5C                     	;# 
  2813  0F5D                     	;# 
  2814  0F61                     	;# 
  2815  0F62                     	;# 
  2816  0F64                     	;# 
  2817  0F65                     	;# 
  2818  0F66                     	;# 
  2819  0F67                     	;# 
  2820  0F68                     	;# 
  2821  0F69                     	;# 
  2822  0F6A                     	;# 
  2823  0F6B                     	;# 
  2824  0F6C                     	;# 
  2825  0F6D                     	;# 
  2826  0FE4                     	;# 
  2827  0FE5                     	;# 
  2828  0FE6                     	;# 
  2829  0FE7                     	;# 
  2830  0FE8                     	;# 
  2831  0FE9                     	;# 
  2832  0FEA                     	;# 
  2833  0FEB                     	;# 
  2834  0FED                     	;# 
  2835  0FEE                     	;# 
  2836  0FEF                     	;# 
  2837  0000                     	;# 
  2838  0001                     	;# 
  2839  0002                     	;# 
  2840  0003                     	;# 
  2841  0004                     	;# 
  2842  0005                     	;# 
  2843  0006                     	;# 
  2844  0007                     	;# 
  2845  0008                     	;# 
  2846  0009                     	;# 
  2847  000A                     	;# 
  2848  000B                     	;# 
  2849  000C                     	;# 
  2850  000D                     	;# 
  2851  000E                     	;# 
  2852  000F                     	;# 
  2853  0010                     	;# 
  2854  0011                     	;# 
  2855  0012                     	;# 
  2856  0013                     	;# 
  2857  0014                     	;# 
  2858  0015                     	;# 
  2859  0016                     	;# 
  2860  0017                     	;# 
  2861  0018                     	;# 
  2862  0019                     	;# 
  2863  001A                     	;# 
  2864  001C                     	;# 
  2865  001C                     	;# 
  2866  001D                     	;# 
  2867  001D                     	;# 
  2868  001E                     	;# 
  2869  001F                     	;# 
  2870  008C                     	;# 
  2871  008C                     	;# 
  2872  008D                     	;# 
  2873  008E                     	;# 
  2874  008E                     	;# 
  2875  008F                     	;# 
  2876  0090                     	;# 
  2877  0090                     	;# 
  2878  0091                     	;# 
  2879  0093                     	;# 
  2880  0094                     	;# 
  2881  0095                     	;# 
  2882  0096                     	;# 
  2883  0097                     	;# 
  2884  0098                     	;# 
  2885  0099                     	;# 
  2886  009A                     	;# 
  2887  009B                     	;# 
  2888  009C                     	;# 
  2889  009D                     	;# 
  2890  009E                     	;# 
  2891  010C                     	;# 
  2892  010D                     	;# 
  2893  010E                     	;# 
  2894  010E                     	;# 
  2895  010F                     	;# 
  2896  0110                     	;# 
  2897  0110                     	;# 
  2898  0111                     	;# 
  2899  0112                     	;# 
  2900  0112                     	;# 
  2901  0113                     	;# 
  2902  0114                     	;# 
  2903  0114                     	;# 
  2904  0115                     	;# 
  2905  0116                     	;# 
  2906  0116                     	;# 
  2907  0117                     	;# 
  2908  0119                     	;# 
  2909  0119                     	;# 
  2910  0119                     	;# 
  2911  011A                     	;# 
  2912  011A                     	;# 
  2913  011A                     	;# 
  2914  011B                     	;# 
  2915  011B                     	;# 
  2916  011B                     	;# 
  2917  011B                     	;# 
  2918  011B                     	;# 
  2919  011C                     	;# 
  2920  011C                     	;# 
  2921  011C                     	;# 
  2922  011D                     	;# 
  2923  011D                     	;# 
  2924  011D                     	;# 
  2925  011E                     	;# 
  2926  011E                     	;# 
  2927  011E                     	;# 
  2928  011F                     	;# 
  2929  011F                     	;# 
  2930  011F                     	;# 
  2931  011F                     	;# 
  2932  011F                     	;# 
  2933  018C                     	;# 
  2934  018D                     	;# 
  2935  018E                     	;# 
  2936  018F                     	;# 
  2937  0190                     	;# 
  2938  0191                     	;# 
  2939  0192                     	;# 
  2940  0196                     	;# 
  2941  0197                     	;# 
  2942  0198                     	;# 
  2943  0199                     	;# 
  2944  019A                     	;# 
  2945  019B                     	;# 
  2946  019C                     	;# 
  2947  020C                     	;# 
  2948  020C                     	;# 
  2949  020D                     	;# 
  2950  020E                     	;# 
  2951  020F                     	;# 
  2952  020F                     	;# 
  2953  0210                     	;# 
  2954  0210                     	;# 
  2955  0211                     	;# 
  2956  0211                     	;# 
  2957  0212                     	;# 
  2958  0212                     	;# 
  2959  0213                     	;# 
  2960  0214                     	;# 
  2961  0215                     	;# 
  2962  0215                     	;# 
  2963  0216                     	;# 
  2964  0216                     	;# 
  2965  0217                     	;# 
  2966  0217                     	;# 
  2967  0218                     	;# 
  2968  0218                     	;# 
  2969  0219                     	;# 
  2970  021A                     	;# 
  2971  021B                     	;# 
  2972  021B                     	;# 
  2973  021C                     	;# 
  2974  021C                     	;# 
  2975  021D                     	;# 
  2976  021D                     	;# 
  2977  021E                     	;# 
  2978  021F                     	;# 
  2979  028C                     	;# 
  2980  028C                     	;# 
  2981  028D                     	;# 
  2982  028D                     	;# 
  2983  028E                     	;# 
  2984  028F                     	;# 
  2985  0290                     	;# 
  2986  0290                     	;# 
  2987  0291                     	;# 
  2988  0292                     	;# 
  2989  0292                     	;# 
  2990  0293                     	;# 
  2991  0293                     	;# 
  2992  0294                     	;# 
  2993  0295                     	;# 
  2994  0296                     	;# 
  2995  0296                     	;# 
  2996  0297                     	;# 
  2997  0298                     	;# 
  2998  0298                     	;# 
  2999  0299                     	;# 
  3000  0299                     	;# 
  3001  029A                     	;# 
  3002  029B                     	;# 
  3003  029C                     	;# 
  3004  029C                     	;# 
  3005  029D                     	;# 
  3006  030C                     	;# 
  3007  030C                     	;# 
  3008  030D                     	;# 
  3009  030E                     	;# 
  3010  030F                     	;# 
  3011  0310                     	;# 
  3012  0310                     	;# 
  3013  0311                     	;# 
  3014  0312                     	;# 
  3015  0313                     	;# 
  3016  0314                     	;# 
  3017  0314                     	;# 
  3018  0315                     	;# 
  3019  0316                     	;# 
  3020  0317                     	;# 
  3021  0318                     	;# 
  3022  0318                     	;# 
  3023  0319                     	;# 
  3024  031A                     	;# 
  3025  031B                     	;# 
  3026  031C                     	;# 
  3027  031C                     	;# 
  3028  031D                     	;# 
  3029  031E                     	;# 
  3030  031F                     	;# 
  3031  038C                     	;# 
  3032  038C                     	;# 
  3033  038D                     	;# 
  3034  038E                     	;# 
  3035  0390                     	;# 
  3036  0390                     	;# 
  3037  0391                     	;# 
  3038  0392                     	;# 
  3039  040C                     	;# 
  3040  040D                     	;# 
  3041  040E                     	;# 
  3042  040F                     	;# 
  3043  0410                     	;# 
  3044  0411                     	;# 
  3045  0416                     	;# 
  3046  0416                     	;# 
  3047  0417                     	;# 
  3048  0418                     	;# 
  3049  0418                     	;# 
  3050  0419                     	;# 
  3051  041A                     	;# 
  3052  041A                     	;# 
  3053  041B                     	;# 
  3054  041C                     	;# 
  3055  041C                     	;# 
  3056  041D                     	;# 
  3057  041E                     	;# 
  3058  041F                     	;# 
  3059  048C                     	;# 
  3060  048C                     	;# 
  3061  048D                     	;# 
  3062  048E                     	;# 
  3063  048F                     	;# 
  3064  048F                     	;# 
  3065  0490                     	;# 
  3066  0491                     	;# 
  3067  0492                     	;# 
  3068  0492                     	;# 
  3069  0493                     	;# 
  3070  0494                     	;# 
  3071  0495                     	;# 
  3072  0495                     	;# 
  3073  0496                     	;# 
  3074  0497                     	;# 
  3075  0498                     	;# 
  3076  0499                     	;# 
  3077  049A                     	;# 
  3078  049B                     	;# 
  3079  049C                     	;# 
  3080  049D                     	;# 
  3081  050C                     	;# 
  3082  050C                     	;# 
  3083  050D                     	;# 
  3084  050E                     	;# 
  3085  050F                     	;# 
  3086  050F                     	;# 
  3087  0510                     	;# 
  3088  0511                     	;# 
  3089  0512                     	;# 
  3090  0512                     	;# 
  3091  0513                     	;# 
  3092  0514                     	;# 
  3093  0515                     	;# 
  3094  0515                     	;# 
  3095  0516                     	;# 
  3096  0517                     	;# 
  3097  0518                     	;# 
  3098  0519                     	;# 
  3099  051A                     	;# 
  3100  051B                     	;# 
  3101  051C                     	;# 
  3102  051D                     	;# 
  3103  058C                     	;# 
  3104  058C                     	;# 
  3105  058D                     	;# 
  3106  058E                     	;# 
  3107  058F                     	;# 
  3108  058F                     	;# 
  3109  0590                     	;# 
  3110  0591                     	;# 
  3111  0592                     	;# 
  3112  0593                     	;# 
  3113  060C                     	;# 
  3114  060D                     	;# 
  3115  060E                     	;# 
  3116  060F                     	;# 
  3117  0610                     	;# 
  3118  0611                     	;# 
  3119  0612                     	;# 
  3120  0613                     	;# 
  3121  0614                     	;# 
  3122  0616                     	;# 
  3123  0617                     	;# 
  3124  0618                     	;# 
  3125  0619                     	;# 
  3126  061A                     	;# 
  3127  061B                     	;# 
  3128  061C                     	;# 
  3129  061D                     	;# 
  3130  061E                     	;# 
  3131  068C                     	;# 
  3132  068D                     	;# 
  3133  068E                     	;# 
  3134  068F                     	;# 
  3135  0690                     	;# 
  3136  0691                     	;# 
  3137  0692                     	;# 
  3138  0693                     	;# 
  3139  0694                     	;# 
  3140  070C                     	;# 
  3141  070D                     	;# 
  3142  070E                     	;# 
  3143  070F                     	;# 
  3144  0710                     	;# 
  3145  0711                     	;# 
  3146  0712                     	;# 
  3147  0713                     	;# 
  3148  0714                     	;# 
  3149  0716                     	;# 
  3150  0717                     	;# 
  3151  0718                     	;# 
  3152  0719                     	;# 
  3153  071A                     	;# 
  3154  071B                     	;# 
  3155  071C                     	;# 
  3156  071D                     	;# 
  3157  071E                     	;# 
  3158  0796                     	;# 
  3159  0797                     	;# 
  3160  0798                     	;# 
  3161  0799                     	;# 
  3162  079A                     	;# 
  3163  079B                     	;# 
  3164  080C                     	;# 
  3165  080D                     	;# 
  3166  080E                     	;# 
  3167  080F                     	;# 
  3168  0810                     	;# 
  3169  0811                     	;# 
  3170  0812                     	;# 
  3171  0813                     	;# 
  3172  0814                     	;# 
  3173  081A                     	;# 
  3174  081B                     	;# 
  3175  081C                     	;# 
  3176  081D                     	;# 
  3177  081E                     	;# 
  3178  081F                     	;# 
  3179  088C                     	;# 
  3180  088D                     	;# 
  3181  088E                     	;# 
  3182  088F                     	;# 
  3183  0890                     	;# 
  3184  0891                     	;# 
  3185  0892                     	;# 
  3186  0893                     	;# 
  3187  0895                     	;# 
  3188  0896                     	;# 
  3189  0897                     	;# 
  3190  0898                     	;# 
  3191  0899                     	;# 
  3192  089A                     	;# 
  3193  089B                     	;# 
  3194  090C                     	;# 
  3195  090E                     	;# 
  3196  090F                     	;# 
  3197  091F                     	;# 
  3198  091F                     	;# 
  3199  098F                     	;# 
  3200  098F                     	;# 
  3201  0990                     	;# 
  3202  0991                     	;# 
  3203  0992                     	;# 
  3204  0993                     	;# 
  3205  0994                     	;# 
  3206  0995                     	;# 
  3207  0996                     	;# 
  3208  0997                     	;# 
  3209  0E0F                     	;# 
  3210  0E10                     	;# 
  3211  0E11                     	;# 
  3212  0E12                     	;# 
  3213  0E13                     	;# 
  3214  0E14                     	;# 
  3215  0E15                     	;# 
  3216  0E16                     	;# 
  3217  0E17                     	;# 
  3218  0E18                     	;# 
  3219  0E19                     	;# 
  3220  0E1A                     	;# 
  3221  0E1B                     	;# 
  3222  0E1C                     	;# 
  3223  0E1D                     	;# 
  3224  0E1E                     	;# 
  3225  0E1F                     	;# 
  3226  0E20                     	;# 
  3227  0E21                     	;# 
  3228  0E22                     	;# 
  3229  0E23                     	;# 
  3230  0E24                     	;# 
  3231  0E25                     	;# 
  3232  0E26                     	;# 
  3233  0E27                     	;# 
  3234  0E28                     	;# 
  3235  0E29                     	;# 
  3236  0E2A                     	;# 
  3237  0E2B                     	;# 
  3238  0E2C                     	;# 
  3239  0E2D                     	;# 
  3240  0E2E                     	;# 
  3241  0E2F                     	;# 
  3242  0E30                     	;# 
  3243  0E31                     	;# 
  3244  0E32                     	;# 
  3245  0E33                     	;# 
  3246  0E34                     	;# 
  3247  0E35                     	;# 
  3248  0E36                     	;# 
  3249  0E37                     	;# 
  3250  0E8F                     	;# 
  3251  0E90                     	;# 
  3252  0E91                     	;# 
  3253  0E92                     	;# 
  3254  0E93                     	;# 
  3255  0E94                     	;# 
  3256  0E95                     	;# 
  3257  0E96                     	;# 
  3258  0E97                     	;# 
  3259  0E9C                     	;# 
  3260  0E9D                     	;# 
  3261  0E9E                     	;# 
  3262  0EA1                     	;# 
  3263  0EA2                     	;# 
  3264  0EA3                     	;# 
  3265  0EA4                     	;# 
  3266  0EA5                     	;# 
  3267  0EA9                     	;# 
  3268  0EAA                     	;# 
  3269  0EAB                     	;# 
  3270  0EAC                     	;# 
  3271  0EB1                     	;# 
  3272  0EB2                     	;# 
  3273  0EB3                     	;# 
  3274  0EB8                     	;# 
  3275  0EB9                     	;# 
  3276  0EBA                     	;# 
  3277  0EBB                     	;# 
  3278  0EBC                     	;# 
  3279  0EBD                     	;# 
  3280  0EBE                     	;# 
  3281  0EC3                     	;# 
  3282  0EC5                     	;# 
  3283  0EC6                     	;# 
  3284  0EC7                     	;# 
  3285  0EC8                     	;# 
  3286  0EC9                     	;# 
  3287  0ECA                     	;# 
  3288  0ECB                     	;# 
  3289  0ECC                     	;# 
  3290  0F10                     	;# 
  3291  0F11                     	;# 
  3292  0F12                     	;# 
  3293  0F13                     	;# 
  3294  0F14                     	;# 
  3295  0F15                     	;# 
  3296  0F16                     	;# 
  3297  0F17                     	;# 
  3298  0F18                     	;# 
  3299  0F19                     	;# 
  3300  0F1A                     	;# 
  3301  0F1B                     	;# 
  3302  0F1C                     	;# 
  3303  0F1D                     	;# 
  3304  0F1E                     	;# 
  3305  0F1F                     	;# 
  3306  0F20                     	;# 
  3307  0F21                     	;# 
  3308  0F22                     	;# 
  3309  0F23                     	;# 
  3310  0F24                     	;# 
  3311  0F25                     	;# 
  3312  0F26                     	;# 
  3313  0F27                     	;# 
  3314  0F28                     	;# 
  3315  0F29                     	;# 
  3316  0F2A                     	;# 
  3317  0F2B                     	;# 
  3318  0F2C                     	;# 
  3319  0F2D                     	;# 
  3320  0F2E                     	;# 
  3321  0F2F                     	;# 
  3322  0F30                     	;# 
  3323  0F31                     	;# 
  3324  0F32                     	;# 
  3325  0F38                     	;# 
  3326  0F39                     	;# 
  3327  0F3A                     	;# 
  3328  0F3B                     	;# 
  3329  0F3C                     	;# 
  3330  0F3D                     	;# 
  3331  0F3E                     	;# 
  3332  0F3F                     	;# 
  3333  0F40                     	;# 
  3334  0F41                     	;# 
  3335  0F43                     	;# 
  3336  0F44                     	;# 
  3337  0F45                     	;# 
  3338  0F46                     	;# 
  3339  0F47                     	;# 
  3340  0F48                     	;# 
  3341  0F49                     	;# 
  3342  0F4A                     	;# 
  3343  0F4B                     	;# 
  3344  0F4C                     	;# 
  3345  0F4E                     	;# 
  3346  0F4F                     	;# 
  3347  0F50                     	;# 
  3348  0F51                     	;# 
  3349  0F52                     	;# 
  3350  0F53                     	;# 
  3351  0F54                     	;# 
  3352  0F55                     	;# 
  3353  0F56                     	;# 
  3354  0F57                     	;# 
  3355  0F59                     	;# 
  3356  0F5A                     	;# 
  3357  0F5B                     	;# 
  3358  0F5C                     	;# 
  3359  0F5D                     	;# 
  3360  0F61                     	;# 
  3361  0F62                     	;# 
  3362  0F64                     	;# 
  3363  0F65                     	;# 
  3364  0F66                     	;# 
  3365  0F67                     	;# 
  3366  0F68                     	;# 
  3367  0F69                     	;# 
  3368  0F6A                     	;# 
  3369  0F6B                     	;# 
  3370  0F6C                     	;# 
  3371  0F6D                     	;# 
  3372  0FE4                     	;# 
  3373  0FE5                     	;# 
  3374  0FE6                     	;# 
  3375  0FE7                     	;# 
  3376  0FE8                     	;# 
  3377  0FE9                     	;# 
  3378  0FEA                     	;# 
  3379  0FEB                     	;# 
  3380  0FED                     	;# 
  3381  0FEE                     	;# 
  3382  0FEF                     	;# 
  3383                           
  3384                           	psect	idataBANK2
  3385  0B46                     __pidataBANK2:	
  3386                           
  3387                           ;initializer for main@F12633
  3388  0B46  3468               	retlw	104
  3389  0B47  3465               	retlw	101
  3390  0B48  346C               	retlw	108
  3391  0B49  346C               	retlw	108
  3392  0B4A  346F               	retlw	111
  3393  0B4B  3420               	retlw	32
  3394  0B4C  346D               	retlw	109
  3395  0B4D  3469               	retlw	105
  3396  0B4E  346B               	retlw	107
  3397  0B4F  3465               	retlw	101
  3398  0B50  340A               	retlw	10
  3399  0B51  340D               	retlw	13
  3400  0B52  3400               	retlw	0
  3401  0B53  3400               	retlw	0
  3402                           
  3403                           	psect	nvBANK1
  3404  00D4                     __pnvBANK1:	
  3405  00D4                     _eusartTxBufferRemaining:	
  3406  00D4                     	ds	1
  3407                           
  3408                           	psect	nvBANK2
  3409  0166                     __pnvBANK2:	
  3410  0166                     _EUSART_ErrorHandler:	
  3411  0166                     	ds	2
  3412  0168                     _EUSART_OverrunErrorHandler:	
  3413  0168                     	ds	2
  3414  016A                     _EUSART_FramingErrorHandler:	
  3415  016A                     	ds	2
  3416  016C                     _EUSART_RxDefaultInterruptHandler:	
  3417  016C                     	ds	2
  3418  016E                     _EUSART_TxDefaultInterruptHandler:	
  3419  016E                     	ds	2
  3420  0016                     _LATAbits	set	22
  3421  0014                     _TRISD	set	20
  3422  0013                     _TRISC	set	19
  3423  0012                     _TRISB	set	18
  3424  0011                     _TRISA	set	17
  3425  0015                     _TRISE	set	21
  3426  0018                     _LATC	set	24
  3427  0017                     _LATB	set	23
  3428  0016                     _LATA	set	22
  3429  0019                     _LATD	set	25
  3430  001A                     _LATE	set	26
  3431  000B                     _INTCONbits	set	11
  3432  0119                     _RC1REG	set	281
  3433  011D                     _RC1STAbits	set	285
  3434  011A                     _TX1REG	set	282
  3435  011E                     _TX1STAbits	set	286
  3436  011C                     _SP1BRGH	set	284
  3437  011B                     _SP1BRGL	set	283
  3438  011E                     _TX1STA	set	286
  3439  011D                     _RC1STA	set	285
  3440  011F                     _BAUD1CON	set	287
  3441  070F                     _PIR3bits	set	1807
  3442  0719                     _PIE3bits	set	1817
  3443  079B                     _PMD5	set	1947
  3444  079A                     _PMD4	set	1946
  3445  0799                     _PMD3	set	1945
  3446  0798                     _PMD2	set	1944
  3447  0797                     _PMD1	set	1943
  3448  0796                     _PMD0	set	1942
  3449  0892                     _OSCTUNE	set	2194
  3450  0893                     _OSCFRQ	set	2195
  3451  0891                     _OSCEN	set	2193
  3452  088F                     _OSCCON3	set	2191
  3453  088D                     _OSCCON1	set	2189
  3454  0ECB                     _RXPPS	set	3787
  3455  0F26                     _RC6PPS	set	3878
  3456  0F68                     _INLVLE	set	3944
  3457  0F5D                     _INLVLD	set	3933
  3458  0F52                     _INLVLC	set	3922
  3459  0F47                     _INLVLB	set	3911
  3460  0F3C                     _INLVLA	set	3900
  3461  0F67                     _SLRCONE	set	3943
  3462  0F5C                     _SLRCOND	set	3932
  3463  0F51                     _SLRCONC	set	3921
  3464  0F46                     _SLRCONB	set	3910
  3465  0F3B                     _SLRCONA	set	3899
  3466  0F5B                     _ODCOND	set	3931
  3467  0F50                     _ODCONC	set	3920
  3468  0F45                     _ODCONB	set	3909
  3469  0F3A                     _ODCONA	set	3898
  3470  0F66                     _ODCONE	set	3942
  3471  0F4F                     _WPUC	set	3919
  3472  0F39                     _WPUA	set	3897
  3473  0F44                     _WPUB	set	3908
  3474  0F65                     _WPUE	set	3941
  3475  0F5A                     _WPUD	set	3930
  3476  0F38                     _ANSELA	set	3896
  3477  0F64                     _ANSELE	set	3940
  3478  0F43                     _ANSELB	set	3907
  3479  0F4E                     _ANSELC	set	3918
  3480  0F59                     _ANSELD	set	3929
  3481                           
  3482                           	psect	stringtext1
  3483  1000                     __pstringtext1:	
  3484  1000                     STR_1:	
  3485  1000  3425               	retlw	37	;'%'
  3486  1001  3430               	retlw	48	;'0'
  3487  1002  3432               	retlw	50	;'2'
  3488  1003  3478               	retlw	120	;'x'
  3489  1004  3425               	retlw	37	;'%'
  3490  1005  3430               	retlw	48	;'0'
  3491  1006  3432               	retlw	50	;'2'
  3492  1007  3478               	retlw	120	;'x'
  3493  1008  3425               	retlw	37	;'%'
  3494  1009  3430               	retlw	48	;'0'
  3495  100A  3432               	retlw	50	;'2'
  3496  100B  3478               	retlw	120	;'x'
  3497  100C  3425               	retlw	37	;'%'
  3498  100D  3430               	retlw	48	;'0'
  3499  100E  3432               	retlw	50	;'2'
  3500  100F  3478               	retlw	120	;'x'
  3501  1010  340A               	retlw	10
  3502  1011  3400               	retlw	0
  3503                           
  3504                           	psect	stringtext2
  3505  1012                     __pstringtext2:	
  3506  1012                     STR_3:	
  3507  1012  3442               	retlw	66	;'B'
  3508  1013  3465               	retlw	101	;'e'
  3509  1014  3467               	retlw	103	;'g'
  3510  1015  3469               	retlw	105	;'i'
  3511  1016  346E               	retlw	110	;'n'
  3512  1017  3420               	retlw	32	;' '
  3513  1018  3400               	retlw	0
  3514                           
  3515                           	psect	stringtext3
  3516  1019                     __pstringtext3:	
  3517  1019                     STR_4:	
  3518  1019  3425               	retlw	37	;'%'
  3519  101A  3464               	retlw	100	;'d'
  3520  101B  340A               	retlw	10
  3521  101C  3400               	retlw	0
  3522                           
  3523                           	psect	stringtext4
  3524  0000                     __pstringtext4:	
  3525  1000                     
  3526                           ; #config settings
  3527  0000                     
  3528                           	psect	cinit
  3529  002D                     start_initialization:	
  3530  002D                     __initialization:	
  3531                           
  3532                           ; Initialize objects allocated to BANK2
  3533  002D  3046               	movlw	low __pidataBANK2
  3534  002E  0084               	movwf	4
  3535  002F  308B               	movlw	(high __pidataBANK2)| (0+128)
  3536  0030  0085               	movwf	5
  3537  0031  3058               	movlw	low __pdataBANK2
  3538  0032  0086               	movwf	6
  3539  0033  3001               	movlw	high __pdataBANK2
  3540  0034  0087               	movwf	7
  3541  0035  300E               	movlw	14
  3542  0036  318B  2310  3180   	fcall	init_ram
  3543                           
  3544                           ; Clear objects allocated to COMMON
  3545  0039  01FC               	clrf	__pbssCOMMON& (0+127)
  3546                           
  3547                           ; Clear objects allocated to BANK1
  3548  003A  30C7               	movlw	low __pbssBANK1
  3549  003B  0084               	movwf	4
  3550  003C  3000               	movlw	high __pbssBANK1
  3551  003D  0085               	movwf	5
  3552  003E  300D               	movlw	13
  3553  003F  318B  230A  3180   	fcall	clear_ram0
  3554                           
  3555                           ; Clear objects allocated to BANK2
  3556  0042  3020               	movlw	low __pbssBANK2
  3557  0043  0084               	movwf	4
  3558  0044  3001               	movlw	high __pbssBANK2
  3559  0045  0085               	movwf	5
  3560  0046  3038               	movlw	56
  3561  0047  318B  230A  3180   	fcall	clear_ram0
  3562                           
  3563                           ; Clear objects allocated to BANK3
  3564  004A  30BC               	movlw	low __pbssBANK3
  3565  004B  0084               	movwf	4
  3566  004C  3001               	movlw	high __pbssBANK3
  3567  004D  0085               	movwf	5
  3568  004E  300E               	movlw	14
  3569  004F  318B  230A  3180   	fcall	clear_ram0
  3570  0052                     end_of_initialization:	
  3571                           ;End of C runtime variable initialization code
  3572                           
  3573  0052                     __end_of__initialization:	
  3574  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3575  0053  0020               	movlb	0
  3576  0054  318E  2EAC         	ljmp	_main	;jump to C main() function
  3577                           
  3578                           	psect	bssCOMMON
  3579  007C                     __pbssCOMMON:	
  3580  007C                     _eusartRxHead:	
  3581  007C                     	ds	1
  3582                           
  3583                           	psect	bssBANK1
  3584  00C7                     __pbssBANK1:	
  3585  00C7                     _nout:	
  3586  00C7                     	ds	2
  3587  00C9                     _width:	
  3588  00C9                     	ds	2
  3589  00CB                     _prec:	
  3590  00CB                     	ds	2
  3591  00CD                     _flags:	
  3592  00CD                     	ds	2
  3593  00CF                     _eusartRxLastError:	
  3594  00CF                     	ds	1
  3595  00D0                     _eusartRxCount:	
  3596  00D0                     	ds	1
  3597  00D1                     _eusartRxTail:	
  3598  00D1                     	ds	1
  3599  00D2                     _eusartTxTail:	
  3600  00D2                     	ds	1
  3601  00D3                     _eusartTxHead:	
  3602  00D3                     	ds	1
  3603                           
  3604                           	psect	bssBANK2
  3605  0120                     __pbssBANK2:	
  3606  0120                     _eusartRxStatusBuffer:	
  3607  0120                     	ds	8
  3608  0128                     _eusartRxBuffer:	
  3609  0128                     	ds	8
  3610  0130                     _eusartTxBuffer:	
  3611  0130                     	ds	8
  3612  0138                     _dbuf:	
  3613  0138                     	ds	32
  3614                           
  3615                           	psect	dataBANK2
  3616  0158                     __pdataBANK2:	
  3617  0158                     main@F12633:	
  3618  0158                     	ds	14
  3619                           
  3620                           	psect	bssBANK3
  3621  01BC                     __pbssBANK3:	
  3622  01BC                     main@F12635:	
  3623  01BC                     	ds	14
  3624                           
  3625                           	psect	inittext
  3626  0B10                     init_ram:	
  3627  0B10  00FE               	movwf	btemp
  3628  0B11                     initloop:	
  3629  0B11  0012               	moviw fsr0++
  3630  0B12  001E               	movwi fsr1++
  3631  0B13  0BFE               	decfsz	btemp,f
  3632  0B14  2B11               	goto	initloop
  3633  0B15  3400               	retlw	0
  3634                           
  3635                           	psect	clrtext
  3636  0B0A                     clear_ram0:	
  3637                           ;	Called with FSR0 containing the base address, and
  3638                           ;	WREG with the size to clear
  3639                           
  3640  0B0A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3641  0B0B                     clrloop0:	
  3642  0B0B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3643  0B0C  3101               	addfsr 0,1
  3644  0B0D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3645  0B0E  2B0B               	goto	clrloop0	;have we reached the end yet?
  3646  0B0F  3400               	retlw	0	;all done for this memory range, return
  3647                           
  3648                           	psect	cstackBANK3
  3649  01A0                     __pcstackBANK3:	
  3650  01A0                     main@str_send:	
  3651                           
  3652                           ; 14 bytes @ 0x0
  3653  01A0                     	ds	14
  3654  01AE                     main@str_rc:	
  3655                           
  3656                           ; 14 bytes @ 0xE
  3657  01AE                     	ds	14
  3658                           
  3659                           	psect	cstackBANK1
  3660  00A0                     __pcstackBANK1:	
  3661  00A0                     vfpfcnvrt@ll:	
  3662                           
  3663                           ; 8 bytes @ 0x0
  3664  00A0                     	ds	8
  3665  00A8                     vfpfcnvrt@llu:	
  3666                           
  3667                           ; 8 bytes @ 0x8
  3668  00A8                     	ds	8
  3669  00B0                     vfpfcnvrt@c:	
  3670                           
  3671                           ; 1 bytes @ 0x10
  3672  00B0                     	ds	1
  3673  00B1                     vfpfcnvrt@done:	
  3674                           
  3675                           ; 2 bytes @ 0x11
  3676  00B1                     	ds	2
  3677  00B3                     _vfpfcnvrt$746:	
  3678                           
  3679                           ; 2 bytes @ 0x13
  3680  00B3                     	ds	2
  3681  00B5                     vfpfcnvrt@fp:	
  3682                           
  3683                           ; 1 bytes @ 0x15
  3684  00B5                     	ds	1
  3685  00B6                     ?_printf:	
  3686  00B6                     printf@fmt:	
  3687                           ; 2 bytes @ 0x16
  3688                           
  3689                           
  3690                           ; 2 bytes @ 0x16
  3691  00B6                     	ds	10
  3692  00C0                     ??_read_str_UART:	
  3693                           
  3694                           ; 1 bytes @ 0x20
  3695  00C0                     	ds	2
  3696  00C2                     read_str_UART@buff:	
  3697                           
  3698                           ; 1 bytes @ 0x22
  3699  00C2                     	ds	1
  3700  00C3                     read_str_UART@i:	
  3701                           
  3702                           ; 1 bytes @ 0x23
  3703  00C3                     	ds	1
  3704  00C4                     read_str_UART@rxData:	
  3705                           
  3706                           ; 1 bytes @ 0x24
  3707  00C4                     	ds	1
  3708  00C5                     ??_main:	
  3709                           
  3710                           ; 1 bytes @ 0x25
  3711  00C5                     	ds	2
  3712                           
  3713                           	psect	cstackCOMMON
  3714  0070                     __pcstackCOMMON:	
  3715  0070                     ?_EUSART_Receive_ISR:	
  3716  0070                     ?_EUSART_Transmit_ISR:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ??_EUSART_Transmit_ISR:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_EUSART_DefaultErrorHandler:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ?_EUSART_RxDataHandler:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ??_EUSART_RxDataHandler:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ?_PMD_Initialize:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_PIN_MANAGER_Initialize:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?_OSCILLATOR_Initialize:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0070                     ?_EUSART_Initialize:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0070                     ?_EUSART_is_tx_ready:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758  0070                     ?_EUSART_is_rx_ready:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761  0070                     ?_EUSART_is_tx_done:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764  0070                     ?_EUSART_Read:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767  0070                     ?_EUSART_Write:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770  0070                     ?_putch:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773  0070                     ?_INTERRUPT_InterruptManager:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0070                     ?_SYSTEM_Initialize:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779  0070                     ?_main:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782  0070                     ?_parse_message:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785                           
  3786                           ; 1 bytes @ 0x0
  3787  0070                     	ds	1
  3788  0071                     ?_EUSART_SetRxInterruptHandler:	
  3789  0071                     ??_EUSART_Receive_ISR:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0071                     ?_EUSART_SetTxInterruptHandler:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0071                     ?_EUSART_SetFramingErrorHandler:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798  0071                     ?_EUSART_SetOverrunErrorHandler:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0071                     ?_EUSART_SetErrorHandler:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804  0071                     ??_EUSART_DefaultErrorHandler:	
  3805                           ; 1 bytes @ 0x1
  3806                           
  3807  0071                     ??_PMD_Initialize:	
  3808                           ; 1 bytes @ 0x1
  3809                           
  3810  0071                     ??_PIN_MANAGER_Initialize:	
  3811                           ; 1 bytes @ 0x1
  3812                           
  3813  0071                     ??_OSCILLATOR_Initialize:	
  3814                           ; 1 bytes @ 0x1
  3815                           
  3816  0071                     ??_EUSART_is_tx_ready:	
  3817                           ; 1 bytes @ 0x1
  3818                           
  3819  0071                     ??_EUSART_is_rx_ready:	
  3820                           ; 1 bytes @ 0x1
  3821                           
  3822  0071                     ??_EUSART_is_tx_done:	
  3823                           ; 1 bytes @ 0x1
  3824                           
  3825  0071                     ??_EUSART_Read:	
  3826                           ; 1 bytes @ 0x1
  3827                           
  3828  0071                     ??_EUSART_Write:	
  3829                           ; 1 bytes @ 0x1
  3830                           
  3831  0071                     ??_INTERRUPT_InterruptManager:	
  3832                           ; 1 bytes @ 0x1
  3833                           
  3834  0071                     ??___aodiv:	
  3835                           ; 1 bytes @ 0x1
  3836                           
  3837  0071                     ??___aomod:	
  3838                           ; 1 bytes @ 0x1
  3839                           
  3840  0071                     ?_strlen:	
  3841                           ; 1 bytes @ 0x1
  3842                           
  3843  0071                     ?_isupper:	
  3844                           ; 2 bytes @ 0x1
  3845                           
  3846  0071                     ?_isalpha:	
  3847                           ; 2 bytes @ 0x1
  3848                           
  3849  0071                     ?_isdigit:	
  3850                           ; 2 bytes @ 0x1
  3851                           
  3852  0071                     ?_isspace:	
  3853                           ; 2 bytes @ 0x1
  3854                           
  3855  0071                     ?_islower:	
  3856                           ; 2 bytes @ 0x1
  3857                           
  3858  0071                     ?___wmul:	
  3859                           ; 2 bytes @ 0x1
  3860                           
  3861  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3862                           ; 2 bytes @ 0x1
  3863                           
  3864  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3865                           ; 2 bytes @ 0x1
  3866                           
  3867  0071                     EUSART_SetErrorHandler@interruptHandler:	
  3868                           ; 2 bytes @ 0x1
  3869                           
  3870  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3871                           ; 2 bytes @ 0x1
  3872                           
  3873  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3874                           ; 2 bytes @ 0x1
  3875                           
  3876  0071                     ___wmul@multiplier:	
  3877                           ; 2 bytes @ 0x1
  3878                           
  3879  0071                     isalpha@c:	
  3880                           ; 2 bytes @ 0x1
  3881                           
  3882  0071                     isdigit@c:	
  3883                           ; 2 bytes @ 0x1
  3884                           
  3885  0071                     isspace@c:	
  3886                           ; 2 bytes @ 0x1
  3887                           
  3888  0071                     isupper@c:	
  3889                           ; 2 bytes @ 0x1
  3890                           
  3891  0071                     islower@c:	
  3892                           ; 2 bytes @ 0x1
  3893                           
  3894                           
  3895                           ; 2 bytes @ 0x1
  3896  0071                     	ds	1
  3897  0072                     EUSART_Read@readValue:	
  3898  0072                     EUSART_Write@txData:	
  3899                           ; 1 bytes @ 0x2
  3900                           
  3901  0072                     ___aodiv@counter:	
  3902                           ; 1 bytes @ 0x2
  3903                           
  3904  0072                     ___aomod@counter:	
  3905                           ; 1 bytes @ 0x2
  3906                           
  3907                           
  3908                           ; 1 bytes @ 0x2
  3909  0072                     	ds	1
  3910  0073                     ??_EUSART_SetRxInterruptHandler:	
  3911  0073                     ??_EUSART_SetTxInterruptHandler:	
  3912                           ; 1 bytes @ 0x3
  3913                           
  3914  0073                     ??_EUSART_SetFramingErrorHandler:	
  3915                           ; 1 bytes @ 0x3
  3916                           
  3917  0073                     ??_EUSART_SetOverrunErrorHandler:	
  3918                           ; 1 bytes @ 0x3
  3919                           
  3920  0073                     ??_EUSART_SetErrorHandler:	
  3921                           ; 1 bytes @ 0x3
  3922                           
  3923  0073                     ?_write_UART:	
  3924                           ; 1 bytes @ 0x3
  3925                           
  3926  0073                     ??_strlen:	
  3927                           ; 1 bytes @ 0x3
  3928                           
  3929  0073                     ??_isupper:	
  3930                           ; 1 bytes @ 0x3
  3931                           
  3932  0073                     ??_isalpha:	
  3933                           ; 1 bytes @ 0x3
  3934                           
  3935  0073                     ??_isdigit:	
  3936                           ; 1 bytes @ 0x3
  3937                           
  3938  0073                     ??_isspace:	
  3939                           ; 1 bytes @ 0x3
  3940                           
  3941  0073                     ??_islower:	
  3942                           ; 1 bytes @ 0x3
  3943                           
  3944  0073                     ??_EUSART_Initialize:	
  3945                           ; 1 bytes @ 0x3
  3946                           
  3947  0073                     ??_putch:	
  3948                           ; 1 bytes @ 0x3
  3949                           
  3950  0073                     putch@txData:	
  3951                           ; 1 bytes @ 0x3
  3952                           
  3953  0073                     write_UART@led:	
  3954                           ; 1 bytes @ 0x3
  3955                           
  3956  0073                     ___aodiv@sign:	
  3957                           ; 1 bytes @ 0x3
  3958                           
  3959  0073                     ___aomod@sign:	
  3960                           ; 1 bytes @ 0x3
  3961                           
  3962  0073                     ___wmul@multiplicand:	
  3963                           ; 1 bytes @ 0x3
  3964                           
  3965                           
  3966                           ; 2 bytes @ 0x3
  3967  0073                     	ds	1
  3968  0074                     ??_write_UART:	
  3969  0074                     ??_SYSTEM_Initialize:	
  3970                           ; 1 bytes @ 0x4
  3971                           
  3972  0074                     ?_fputc:	
  3973                           ; 1 bytes @ 0x4
  3974                           
  3975  0074                     ?_abs:	
  3976                           ; 2 bytes @ 0x4
  3977                           
  3978  0074                     write_UART@rxData:	
  3979                           ; 2 bytes @ 0x4
  3980                           
  3981  0074                     strlen@a:	
  3982                           ; 1 bytes @ 0x4
  3983                           
  3984  0074                     abs@a:	
  3985                           ; 1 bytes @ 0x4
  3986                           
  3987  0074                     fputc@c:	
  3988                           ; 2 bytes @ 0x4
  3989                           
  3990  0074                     ___aodiv@quotient:	
  3991                           ; 2 bytes @ 0x4
  3992                           
  3993                           
  3994                           ; 8 bytes @ 0x4
  3995  0074                     	ds	1
  3996  0075                     ?_write_str_UART:	
  3997  0075                     ??___wmul:	
  3998                           ; 1 bytes @ 0x5
  3999                           
  4000  0075                     write_str_UART@size:	
  4001                           ; 1 bytes @ 0x5
  4002                           
  4003  0075                     _isspace$1069:	
  4004                           ; 1 bytes @ 0x5
  4005                           
  4006  0075                     strlen@s:	
  4007                           ; 1 bytes @ 0x5
  4008                           
  4009  0075                     ___wmul@product:	
  4010                           ; 1 bytes @ 0x5
  4011                           
  4012                           
  4013                           ; 2 bytes @ 0x5
  4014  0075                     	ds	1
  4015  0076                     ??_write_str_UART:	
  4016  0076                     ??_abs:	
  4017                           ; 1 bytes @ 0x6
  4018                           
  4019  0076                     fputc@fp:	
  4020                           ; 1 bytes @ 0x6
  4021                           
  4022                           
  4023                           ; 1 bytes @ 0x6
  4024  0076                     	ds	1
  4025  0077                     ??_fputc:	
  4026  0077                     ?_toupper:	
  4027                           ; 1 bytes @ 0x7
  4028                           
  4029  0077                     ?_atoi:	
  4030                           ; 2 bytes @ 0x7
  4031                           
  4032  0077                     write_str_UART@string:	
  4033                           ; 2 bytes @ 0x7
  4034                           
  4035  0077                     atoi@s:	
  4036                           ; 1 bytes @ 0x7
  4037                           
  4038  0077                     toupper@c:	
  4039                           ; 2 bytes @ 0x7
  4040                           
  4041                           
  4042                           ; 2 bytes @ 0x7
  4043  0077                     	ds	1
  4044  0078                     write_str_UART@id:	
  4045                           
  4046                           ; 1 bytes @ 0x8
  4047  0078                     	ds	1
  4048  0079                     _toupper$1134:	
  4049                           
  4050                           ; 2 bytes @ 0x9
  4051  0079                     	ds	3
  4052                           
  4053                           	psect	cstackBANK0
  4054  0020                     __pcstackBANK0:	
  4055  0020                     ??_toupper:	
  4056  0020                     ??_atoi:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0020                     ?_fputs:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0020                     ?___aodiv:	
  4063                           ; 2 bytes @ 0x0
  4064                           
  4065  0020                     ?___aomod:	
  4066                           ; 8 bytes @ 0x0
  4067                           
  4068  0020                     fputs@fp:	
  4069                           ; 8 bytes @ 0x0
  4070                           
  4071  0020                     ___aodiv@divisor:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0020                     ___aomod@divisor:	
  4075                           ; 8 bytes @ 0x0
  4076                           
  4077                           
  4078                           ; 8 bytes @ 0x0
  4079  0020                     	ds	1
  4080  0021                     ??_fputs:	
  4081                           
  4082                           ; 1 bytes @ 0x1
  4083  0021                     	ds	3
  4084  0024                     fputs@c:	
  4085  0024                     atoi@neg:	
  4086                           ; 1 bytes @ 0x4
  4087                           
  4088                           
  4089                           ; 2 bytes @ 0x4
  4090  0024                     	ds	1
  4091  0025                     fputs@i:	
  4092                           
  4093                           ; 2 bytes @ 0x5
  4094  0025                     	ds	1
  4095  0026                     _atoi$1042:	
  4096                           
  4097                           ; 2 bytes @ 0x6
  4098  0026                     	ds	1
  4099  0027                     fputs@s:	
  4100                           
  4101                           ; 1 bytes @ 0x7
  4102  0027                     	ds	1
  4103  0028                     ?_pad:	
  4104  0028                     pad@buf:	
  4105                           ; 2 bytes @ 0x8
  4106                           
  4107  0028                     _atoi$1044:	
  4108                           ; 1 bytes @ 0x8
  4109                           
  4110  0028                     ___aodiv@dividend:	
  4111                           ; 2 bytes @ 0x8
  4112                           
  4113  0028                     ___aomod@dividend:	
  4114                           ; 8 bytes @ 0x8
  4115                           
  4116                           
  4117                           ; 8 bytes @ 0x8
  4118  0028                     	ds	1
  4119  0029                     pad@p:	
  4120                           
  4121                           ; 2 bytes @ 0x9
  4122  0029                     	ds	1
  4123  002A                     _atoi$1043:	
  4124                           
  4125                           ; 1 bytes @ 0xA
  4126  002A                     	ds	1
  4127  002B                     ??_pad:	
  4128  002B                     atoi@n:	
  4129                           ; 1 bytes @ 0xB
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0xB
  4133  002B                     	ds	1
  4134  002C                     pad@i:	
  4135                           
  4136                           ; 2 bytes @ 0xC
  4137  002C                     	ds	2
  4138  002E                     pad@w:	
  4139                           
  4140                           ; 2 bytes @ 0xE
  4141  002E                     	ds	2
  4142  0030                     pad@fp:	
  4143                           
  4144                           ; 1 bytes @ 0x10
  4145  0030                     	ds	1
  4146  0031                     ?_dtoa:	
  4147  0031                     ?_xtoa:	
  4148                           ; 2 bytes @ 0x11
  4149                           
  4150  0031                     dtoa@d:	
  4151                           ; 2 bytes @ 0x11
  4152                           
  4153  0031                     xtoa@d:	
  4154                           ; 8 bytes @ 0x11
  4155                           
  4156                           
  4157                           ; 8 bytes @ 0x11
  4158  0031                     	ds	8
  4159  0039                     ??_dtoa:	
  4160  0039                     xtoa@x:	
  4161                           ; 1 bytes @ 0x19
  4162                           
  4163                           
  4164                           ; 1 bytes @ 0x19
  4165  0039                     	ds	1
  4166  003A                     ??_xtoa:	
  4167                           
  4168                           ; 1 bytes @ 0x1A
  4169  003A                     	ds	2
  4170  003C                     _dtoa$720:	
  4171                           
  4172                           ; 2 bytes @ 0x1C
  4173  003C                     	ds	2
  4174  003E                     dtoa@fp:	
  4175                           
  4176                           ; 1 bytes @ 0x1E
  4177  003E                     	ds	1
  4178  003F                     dtoa@p:	
  4179                           
  4180                           ; 2 bytes @ 0x1F
  4181  003F                     	ds	2
  4182  0041                     dtoa@w:	
  4183                           
  4184                           ; 2 bytes @ 0x21
  4185  0041                     	ds	1
  4186  0042                     _xtoa$731:	
  4187                           
  4188                           ; 2 bytes @ 0x22
  4189  0042                     	ds	1
  4190  0043                     dtoa@s:	
  4191                           
  4192                           ; 2 bytes @ 0x23
  4193  0043                     	ds	1
  4194  0044                     _xtoa$732:	
  4195                           
  4196                           ; 2 bytes @ 0x24
  4197  0044                     	ds	1
  4198  0045                     dtoa@n:	
  4199                           
  4200                           ; 8 bytes @ 0x25
  4201  0045                     	ds	1
  4202  0046                     xtoa@fp:	
  4203                           
  4204                           ; 1 bytes @ 0x26
  4205  0046                     	ds	1
  4206  0047                     xtoa@p:	
  4207                           
  4208                           ; 2 bytes @ 0x27
  4209  0047                     	ds	2
  4210  0049                     xtoa@w:	
  4211                           
  4212                           ; 2 bytes @ 0x29
  4213  0049                     	ds	2
  4214  004B                     xtoa@n:	
  4215                           
  4216                           ; 8 bytes @ 0x2B
  4217  004B                     	ds	2
  4218  004D                     dtoa@i:	
  4219                           
  4220                           ; 2 bytes @ 0x2D
  4221  004D                     	ds	6
  4222  0053                     xtoa@i:	
  4223                           
  4224                           ; 2 bytes @ 0x33
  4225  0053                     	ds	2
  4226  0055                     xtoa@c:	
  4227                           
  4228                           ; 2 bytes @ 0x35
  4229  0055                     	ds	2
  4230  0057                     ?_vfpfcnvrt:	
  4231  0057                     vfpfcnvrt@fmt:	
  4232                           ; 2 bytes @ 0x37
  4233                           
  4234                           
  4235                           ; 1 bytes @ 0x37
  4236  0057                     	ds	1
  4237  0058                     vfpfcnvrt@ap:	
  4238                           
  4239                           ; 1 bytes @ 0x38
  4240  0058                     	ds	1
  4241  0059                     ??_vfpfcnvrt:	
  4242                           
  4243                           ; 1 bytes @ 0x39
  4244  0059                     	ds	6
  4245  005F                     ?_vfprintf:	
  4246  005F                     vfprintf@fmt:	
  4247                           ; 2 bytes @ 0x3F
  4248                           
  4249                           
  4250                           ; 2 bytes @ 0x3F
  4251  005F                     	ds	2
  4252  0061                     vfprintf@ap:	
  4253                           
  4254                           ; 1 bytes @ 0x41
  4255  0061                     	ds	1
  4256  0062                     ??_vfprintf:	
  4257                           
  4258                           ; 1 bytes @ 0x42
  4259  0062                     	ds	2
  4260  0064                     vfprintf@fp:	
  4261                           
  4262                           ; 1 bytes @ 0x44
  4263  0064                     	ds	1
  4264  0065                     vfprintf@cfmt:	
  4265                           
  4266                           ; 2 bytes @ 0x45
  4267  0065                     	ds	2
  4268  0067                     ??_printf:	
  4269                           
  4270                           ; 1 bytes @ 0x47
  4271  0067                     	ds	3
  4272  006A                     printf@ap:	
  4273                           
  4274                           ; 1 bytes @ 0x4A
  4275  006A                     	ds	1
  4276  006B                     ??_parse_message:	
  4277                           
  4278                           ; 1 bytes @ 0x4B
  4279  006B                     	ds	2
  4280  006D                     parse_message@cmd:	
  4281                           
  4282                           ; 1 bytes @ 0x4D
  4283  006D                     	ds	1
  4284  006E                     ?_read_str_UART:	
  4285  006E                     read_str_UART@max_len:	
  4286                           ; 1 bytes @ 0x4E
  4287                           
  4288                           
  4289                           ; 1 bytes @ 0x4E
  4290  006E                     	ds	1
  4291                           
  4292                           	psect	maintext
  4293  0EAC                     __pmaintext:	
  4294 ;;
  4295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4296 ;;
  4297 ;; *************** function _main *****************
  4298 ;; Defined at:
  4299 ;;		line 68 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  str_rc         14   14[BANK3 ] unsigned char [14]
  4304 ;;  str_send       14    0[BANK3 ] unsigned char [14]
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : B1F/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0       0       0       0      28       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0       0       2       0      28       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:       30 bytes
  4319 ;; Hardware stack levels required when called:   15
  4320 ;; This function calls:
  4321 ;;		_EUSART_is_rx_ready
  4322 ;;		_SYSTEM_Initialize
  4323 ;;		_read_str_UART
  4324 ;;		_write_str_UART
  4325 ;; This function is called by:
  4326 ;;		Startup code after reset
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _main
  4332  0EAC                     _main:	
  4333  0EAC                     l3758:	
  4334                           ;incstack = 0
  4335                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4336                           
  4337                           
  4338                           ;main.c: 71:     SYSTEM_Initialize();
  4339  0EAC  318B  2339  318E   	fcall	_SYSTEM_Initialize
  4340  0EAF                     l3760:	
  4341                           
  4342                           ;main.c: 72:     char str_send[14] = "hello mike\n\r";
  4343  0EAF  3058               	movlw	low main@F12633
  4344  0EB0  0086               	movwf	6
  4345  0EB1  3001               	movlw	high main@F12633
  4346  0EB2  0087               	movwf	7
  4347  0EB3  30A0               	movlw	low main@str_send
  4348  0EB4  0084               	movwf	4
  4349  0EB5  3001               	movlw	high main@str_send
  4350  0EB6  0085               	movwf	5
  4351  0EB7  300E               	movlw	14
  4352  0EB8  0021               	movlb	1	; select bank1
  4353  0EB9  00C5               	movwf	??_main^(0+128)
  4354  0EBA                     u4080:	
  4355  0EBA  0016               	moviw fsr1++
  4356  0EBB  001A               	movwi fsr0++
  4357  0EBC  0BC5               	decfsz	??_main^(0+128),f
  4358  0EBD  2EBA               	goto	u4080
  4359  0EBE                     l3762:	
  4360                           
  4361                           ;main.c: 73:     char str_rc[14]="\0";
  4362  0EBE  30AE               	movlw	low main@str_rc
  4363  0EBF  0086               	movwf	6
  4364  0EC0  3001               	movlw	high main@str_rc
  4365  0EC1  0087               	movwf	7
  4366  0EC2  300E               	movlw	14
  4367  0EC3  00C5               	movwf	??_main^(0+128)
  4368  0EC4  3000               	movlw	0
  4369  0EC5                     u4090:	
  4370  0EC5  001E               	movwi fsr1++
  4371  0EC6  0BC5               	decfsz	??_main^(0+128),f
  4372  0EC7  2EC5               	goto	u4090
  4373  0EC8                     l3764:	
  4374                           
  4375                           ;main.c: 76:     (INTCONbits.GIE = 1);
  4376  0EC8  178B               	bsf	11,7	;volatile
  4377  0EC9                     l3766:	
  4378                           
  4379                           ;main.c: 77:     (INTCONbits.PEIE = 1);
  4380  0EC9  170B               	bsf	11,6	;volatile
  4381  0ECA                     l3768:	
  4382  0ECA  0020               	movlb	0	; select bank0
  4383  0ECB  1396               	bcf	22,7	;volatile
  4384  0ECC                     l3770:	
  4385                           
  4386                           ;main.c: 82:     write_str_UART(str_send, 14);
  4387  0ECC  300E               	movlw	14
  4388  0ECD  0021               	movlb	1	; select bank1
  4389  0ECE  00C5               	movwf	??_main^(0+128)
  4390  0ECF  0845               	movf	??_main^(0+128),w
  4391  0ED0  00F5               	movwf	write_str_UART@size
  4392  0ED1  30A0               	movlw	(low (main@str_send| (0+256)))& (0+255)
  4393  0ED2  318C  24CC  318E   	fcall	_write_str_UART
  4394  0ED5                     l3772:	
  4395                           
  4396                           ;main.c: 85:     {;main.c: 88:         if(PIR3bits.RCIF || EUSART_is_rx_ready()){
  4397  0ED5  002E               	movlb	14	; select bank14
  4398  0ED6  1A8F               	btfsc	15,5	;volatile
  4399  0ED7  2ED9               	goto	u4101
  4400  0ED8  2EDA               	goto	u4100
  4401  0ED9                     u4101:	
  4402  0ED9  2EE2               	goto	l3776
  4403  0EDA                     u4100:	
  4404  0EDA                     l3774:	
  4405  0EDA  318B  2327  318E   	fcall	_EUSART_is_rx_ready
  4406  0EDD  3A00               	xorlw	0
  4407  0EDE  1903               	skipnz
  4408  0EDF  2EE1               	goto	u4111
  4409  0EE0  2EE2               	goto	u4110
  4410  0EE1                     u4111:	
  4411  0EE1  2EED               	goto	l3778
  4412  0EE2                     u4110:	
  4413  0EE2                     l3776:	
  4414                           
  4415                           ;main.c: 90:              read_str_UART(str_rc, 14);
  4416  0EE2  300E               	movlw	14
  4417  0EE3  0021               	movlb	1	; select bank1
  4418  0EE4  00C5               	movwf	??_main^(0+128)
  4419  0EE5  0845               	movf	??_main^(0+128),w
  4420  0EE6  0020               	movlb	0	; select bank0
  4421  0EE7  00EE               	movwf	read_str_UART@max_len
  4422  0EE8  30AE               	movlw	(low (main@str_rc| (0+256)))& (0+255)
  4423  0EE9  318E  265C  318E   	fcall	_read_str_UART
  4424                           
  4425                           ;main.c: 94:         }
  4426  0EEC  2ED5               	goto	l3772
  4427  0EED                     l3778:	
  4428                           
  4429                           ;main.c: 97:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  4430  0EED  3002               	movlw	2
  4431  0EEE  0021               	movlb	1	; select bank1
  4432  0EEF  00C6               	movwf	(??_main^(0+128)+1)
  4433  0EF0  3045               	movlw	69
  4434  0EF1  00C5               	movwf	??_main^(0+128)
  4435  0EF2  30A9               	movlw	169
  4436  0EF3                     u4197:	
  4437  0EF3  0B89               	decfsz	9,f
  4438  0EF4  2EF3               	goto	u4197
  4439  0EF5  0BC5               	decfsz	??_main^(0+128),f
  4440  0EF6  2EF3               	goto	u4197
  4441  0EF7  0BC6               	decfsz	(??_main^(0+128)+1),f
  4442  0EF8  2EF3               	goto	u4197
  4443  0EF9  3200               	nop2
  4444  0EFA  2ED5               	goto	l3772
  4445  0EFB  3180  282B         	ljmp	start
  4446  0EFD                     __end_of_main:	
  4447                           
  4448                           	psect	text1
  4449  0E5C                     __ptext1:	
  4450 ;; *************** function _read_str_UART *****************
  4451 ;; Defined at:
  4452 ;;		line 161 in file "main.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  buff            1    wreg     PTR unsigned char 
  4455 ;;		 -> main@str_rc(14), 
  4456 ;;  max_len         1   78[BANK0 ] unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  buff            1   34[BANK1 ] PTR unsigned char 
  4459 ;;		 -> main@str_rc(14), 
  4460 ;;  i               1   35[BANK1 ] unsigned char 
  4461 ;;  rxData          1   36[BANK1 ] volatile unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      PTR unsigned char 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4471 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;Total ram usage:        6 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:   14
  4478 ;; This function calls:
  4479 ;;		_EUSART_Read
  4480 ;;		_EUSART_is_rx_ready
  4481 ;;		_parse_message
  4482 ;;		_write_str_UART
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function _read_str_UART
  4490  0E5C                     _read_str_UART:	
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _read_str_UART: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4494                           ;read_str_UART@buff stored from wreg
  4495  0E5C  0021               	movlb	1	; select bank1
  4496  0E5D  00C2               	movwf	read_str_UART@buff^(0+128)
  4497  0E5E                     l3726:	
  4498                           
  4499                           ;main.c: 163:     volatile uint8_t rxData = '0';
  4500  0E5E  3030               	movlw	48
  4501  0E5F  00C0               	movwf	??_read_str_UART^(0+128)
  4502  0E60  0840               	movf	??_read_str_UART^(0+128),w
  4503  0E61  00C4               	movwf	read_str_UART@rxData^(0+128)	;volatile
  4504  0E62                     l3728:	
  4505  0E62                     l3730:	
  4506                           
  4507                           ;main.c: 166:     for(i=0; i < max_len && rxData !='\n'; i++){
  4508  0E62  01C3               	clrf	read_str_UART@i^(0+128)
  4509  0E63  2E93               	goto	l3746
  4510  0E64                     l3732:	
  4511                           
  4512                           ;main.c: 169:                 _delay((unsigned long)((1)*(1000000/4000.0)));
  4513  0E64  3053               	movlw	83
  4514  0E65                     u4207:	
  4515  0E65  0B89               	decfsz	9,f
  4516  0E66  2E65               	goto	u4207
  4517  0E67  0000               	nop
  4518  0E68                     l3734:	
  4519                           
  4520                           ;main.c: 168:             while(!EUSART_is_rx_ready()){
  4521  0E68  318B  2327  318E   	fcall	_EUSART_is_rx_ready
  4522  0E6B  3A00               	xorlw	0
  4523  0E6C  1903               	skipnz
  4524  0E6D  2E6F               	goto	u4051
  4525  0E6E  2E70               	goto	u4050
  4526  0E6F                     u4051:	
  4527  0E6F  2E64               	goto	l3732
  4528  0E70                     u4050:	
  4529  0E70                     l3736:	
  4530                           
  4531                           ;main.c: 172:             rxData = EUSART_Read();
  4532  0E70  318D  2546  318E   	fcall	_EUSART_Read
  4533  0E73  0021               	movlb	1	; select bank1
  4534  0E74  00C0               	movwf	??_read_str_UART^(0+128)
  4535  0E75  0840               	movf	??_read_str_UART^(0+128),w
  4536  0E76  00C4               	movwf	read_str_UART@rxData^(0+128)	;volatile
  4537  0E77                     l3738:	
  4538                           
  4539                           ;main.c: 173:             parse_message(rxData);
  4540  0E77  0844               	movf	read_str_UART@rxData^(0+128),w	;volatile
  4541  0E78  318E  26FD  318E   	fcall	_parse_message
  4542  0E7B                     l3740:	
  4543                           
  4544                           ;main.c: 174:             buff[i] = rxData;
  4545  0E7B  0021               	movlb	1	; select bank1
  4546  0E7C  0844               	movf	read_str_UART@rxData^(0+128),w	;volatile
  4547  0E7D  00C0               	movwf	??_read_str_UART^(0+128)
  4548  0E7E  0843               	movf	read_str_UART@i^(0+128),w
  4549  0E7F  0742               	addwf	read_str_UART@buff^(0+128),w
  4550  0E80  00C1               	movwf	(??_read_str_UART+1)^(0+128)
  4551  0E81  0841               	movf	(??_read_str_UART+1)^(0+128),w
  4552  0E82  0086               	movwf	6
  4553  0E83  3001               	movlw	1	; select bank2/3
  4554  0E84  0087               	movwf	7
  4555  0E85  0840               	movf	??_read_str_UART^(0+128),w
  4556  0E86  0081               	movwf	1
  4557  0E87                     l3742:	
  4558                           
  4559                           ;main.c: 175:             buff[i+1] = '\0';
  4560  0E87  0843               	movf	read_str_UART@i^(0+128),w
  4561  0E88  0742               	addwf	read_str_UART@buff^(0+128),w
  4562  0E89  00C0               	movwf	??_read_str_UART^(0+128)
  4563  0E8A  0A40               	incf	??_read_str_UART^(0+128),w
  4564  0E8B  0086               	movwf	6
  4565  0E8C  3001               	movlw	1	; select bank2/3
  4566  0E8D  0087               	movwf	7
  4567  0E8E  0181               	clrf	1
  4568  0E8F                     l3744:	
  4569                           
  4570                           ;main.c: 177:             }
  4571  0E8F  3001               	movlw	1
  4572  0E90  00C0               	movwf	??_read_str_UART^(0+128)
  4573  0E91  0840               	movf	??_read_str_UART^(0+128),w
  4574  0E92  07C3               	addwf	read_str_UART@i^(0+128),f
  4575  0E93                     l3746:	
  4576  0E93  0020               	movlb	0	; select bank0
  4577  0E94  086E               	movf	read_str_UART@max_len,w
  4578  0E95  0021               	movlb	1	; select bank1
  4579  0E96  0243               	subwf	read_str_UART@i^(0+128),w
  4580  0E97  1803               	skipnc
  4581  0E98  2E9A               	goto	u4061
  4582  0E99  2E9B               	goto	u4060
  4583  0E9A                     u4061:	
  4584  0E9A  2EA1               	goto	l3750
  4585  0E9B                     u4060:	
  4586  0E9B                     l3748:	
  4587  0E9B  300A               	movlw	10
  4588  0E9C  0644               	xorwf	read_str_UART@rxData^(0+128),w	;volatile
  4589  0E9D  1D03               	btfss	3,2
  4590  0E9E  2EA0               	goto	u4071
  4591  0E9F  2EA1               	goto	u4070
  4592  0EA0                     u4071:	
  4593  0EA0  2E68               	goto	l3734
  4594  0EA1                     u4070:	
  4595  0EA1                     l3750:	
  4596                           
  4597                           ;main.c: 178:     write_str_UART(buff, max_len);
  4598  0EA1  0020               	movlb	0	; select bank0
  4599  0EA2  086E               	movf	read_str_UART@max_len,w
  4600  0EA3  0021               	movlb	1	; select bank1
  4601  0EA4  00C0               	movwf	??_read_str_UART^(0+128)
  4602  0EA5  0840               	movf	??_read_str_UART^(0+128),w
  4603  0EA6  00F5               	movwf	write_str_UART@size
  4604  0EA7  0842               	movf	read_str_UART@buff^(0+128),w
  4605  0EA8  318C  24CC  318E   	fcall	_write_str_UART
  4606  0EAB                     l372:	
  4607  0EAB  0008               	return
  4608  0EAC                     __end_of_read_str_UART:	
  4609                           
  4610                           	psect	text2
  4611  0CCC                     __ptext2:	
  4612 ;; *************** function _write_str_UART *****************
  4613 ;; Defined at:
  4614 ;;		line 226 in file "main.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  string          1    wreg     PTR unsigned char 
  4617 ;;		 -> main@str_rc(14), main@str_send(14), 
  4618 ;;  size            1    5[COMMON] unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  string          1    7[COMMON] PTR unsigned char 
  4621 ;;		 -> main@str_rc(14), main@str_send(14), 
  4622 ;;  id              1    8[COMMON] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:        4 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    6
  4639 ;; This function calls:
  4640 ;;		_write_UART
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;;		_read_str_UART
  4644 ;;		_echo
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _write_str_UART
  4650  0CCC                     _write_str_UART:	
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _write_str_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4654                           ;write_str_UART@string stored from wreg
  4655  0CCC  00F7               	movwf	write_str_UART@string
  4656  0CCD                     l3692:	
  4657                           
  4658                           ;main.c: 227:     uint8_t id;;main.c: 229:     for(id=0; id <= size && string[id]!= '\0'
      +                          ; ++id){
  4659  0CCD  01F8               	clrf	write_str_UART@id
  4660  0CCE  2CDF               	goto	l3698
  4661  0CCF                     l3694:	
  4662                           
  4663                           ;main.c: 231:         write_UART(string[id], 0);
  4664  0CCF  01F3               	clrf	write_UART@led
  4665  0CD0  0878               	movf	write_str_UART@id,w
  4666  0CD1  0777               	addwf	write_str_UART@string,w
  4667  0CD2  00F6               	movwf	??_write_str_UART
  4668  0CD3  0876               	movf	??_write_str_UART,w
  4669  0CD4  0086               	movwf	6
  4670  0CD5  3001               	movlw	1	; select bank2/3
  4671  0CD6  0087               	movwf	7
  4672  0CD7  0801               	movf	1,w
  4673  0CD8  318C  2482  318C   	fcall	_write_UART
  4674  0CDB                     l3696:	
  4675                           
  4676                           ;main.c: 232:     }
  4677  0CDB  3001               	movlw	1
  4678  0CDC  00F6               	movwf	??_write_str_UART
  4679  0CDD  0876               	movf	??_write_str_UART,w
  4680  0CDE  07F8               	addwf	write_str_UART@id,f
  4681  0CDF                     l3698:	
  4682  0CDF  0878               	movf	write_str_UART@id,w
  4683  0CE0  0275               	subwf	write_str_UART@size,w
  4684  0CE1  1C03               	skipc
  4685  0CE2  2CE4               	goto	u4031
  4686  0CE3  2CE5               	goto	u4030
  4687  0CE4                     u4031:	
  4688  0CE4  2CF1               	goto	l398
  4689  0CE5                     u4030:	
  4690  0CE5                     l3700:	
  4691  0CE5  0878               	movf	write_str_UART@id,w
  4692  0CE6  0777               	addwf	write_str_UART@string,w
  4693  0CE7  00F6               	movwf	??_write_str_UART
  4694  0CE8  0876               	movf	??_write_str_UART,w
  4695  0CE9  0086               	movwf	6
  4696  0CEA  3001               	movlw	1	; select bank2/3
  4697  0CEB  0087               	movwf	7
  4698  0CEC  0801               	movf	1,w
  4699  0CED  1D03               	btfss	3,2
  4700  0CEE  2CF0               	goto	u4041
  4701  0CEF  2CF1               	goto	u4040
  4702  0CF0                     u4041:	
  4703  0CF0  2CCF               	goto	l3694
  4704  0CF1                     u4040:	
  4705  0CF1                     l398:	
  4706  0CF1  0008               	return
  4707  0CF2                     __end_of_write_str_UART:	
  4708                           
  4709                           	psect	text3
  4710  0C82                     __ptext3:	
  4711 ;; *************** function _write_UART *****************
  4712 ;; Defined at:
  4713 ;;		line 238 in file "main.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  rxData          1    wreg     unsigned char 
  4716 ;;  led             1    3[COMMON] unsigned char 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  rxData          1    4[COMMON] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4728 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    5
  4735 ;; This function calls:
  4736 ;;		_EUSART_Write
  4737 ;;		_EUSART_is_tx_done
  4738 ;;		_EUSART_is_tx_ready
  4739 ;; This function is called by:
  4740 ;;		_write_str_UART
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _write_UART
  4746  0C82                     _write_UART:	
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _write_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4750                           ;write_UART@rxData stored from wreg
  4751  0C82  00F4               	movwf	write_UART@rxData
  4752  0C83                     l3566:	
  4753                           
  4754                           ;main.c: 241:    if(EUSART_is_tx_ready())
  4755  0C83  318B  2330  318C   	fcall	_EUSART_is_tx_ready
  4756  0C86  3A00               	xorlw	0
  4757  0C87  1903               	skipnz
  4758  0C88  2C8A               	goto	u3951
  4759  0C89  2C8B               	goto	u3950
  4760  0C8A                     u3951:	
  4761  0C8A  2C96               	goto	l3572
  4762  0C8B                     u3950:	
  4763  0C8B                     l3568:	
  4764                           
  4765                           ;main.c: 242:     {;main.c: 243:   if (led){
  4766  0C8B  0873               	movf	write_UART@led,w
  4767  0C8C  1903               	btfsc	3,2
  4768  0C8D  2C8F               	goto	u3961
  4769  0C8E  2C90               	goto	u3960
  4770  0C8F                     u3961:	
  4771  0C8F  2C92               	goto	l3570
  4772  0C90                     u3960:	
  4773  0C90                     l403:	
  4774                           ;main.c: 244:             do { LATAbits.LATA7 = 1; } while(0);
  4775                           
  4776  0C90  0020               	movlb	0	; select bank0
  4777  0C91  1796               	bsf	22,7	;volatile
  4778  0C92                     l3570:	
  4779                           
  4780                           ;main.c: 246:         EUSART_Write(rxData);
  4781  0C92  0874               	movf	write_UART@rxData,w
  4782  0C93  318D  251B  318C   	fcall	_EUSART_Write
  4783  0C96                     l3572:	
  4784                           
  4785                           ;main.c: 249:     if(led){
  4786  0C96  0873               	movf	write_UART@led,w
  4787  0C97  1903               	btfsc	3,2
  4788  0C98  2C9A               	goto	u3971
  4789  0C99  2C9B               	goto	u3970
  4790  0C9A                     u3971:	
  4791  0C9A  2CA5               	goto	l411
  4792  0C9B                     u3970:	
  4793  0C9B                     l3576:	
  4794  0C9B  318A  22E2  318C   	fcall	_EUSART_is_tx_done
  4795  0C9E  3A00               	xorlw	0
  4796  0C9F  1903               	skipnz
  4797  0CA0  2CA2               	goto	u3981
  4798  0CA1  2CA3               	goto	u3980
  4799  0CA2                     u3981:	
  4800  0CA2  2C9B               	goto	l3576
  4801  0CA3                     u3980:	
  4802  0CA3                     l409:	
  4803                           ;main.c: 251:         do { LATAbits.LATA7 = 0; } while(0);
  4804                           
  4805  0CA3  0020               	movlb	0	; select bank0
  4806  0CA4  1396               	bcf	22,7	;volatile
  4807  0CA5                     l411:	
  4808  0CA5  0008               	return
  4809  0CA6                     __end_of_write_UART:	
  4810                           
  4811                           	psect	text4
  4812  0B30                     __ptext4:	
  4813 ;; *************** function _EUSART_is_tx_ready *****************
  4814 ;; Defined at:
  4815 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      _Bool 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    4
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_write_UART
  4840 ;;		_echo
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _EUSART_is_tx_ready
  4846  0B30                     _EUSART_is_tx_ready:	
  4847  0B30                     l3530:	
  4848                           ;incstack = 0
  4849                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2+status,0]
  4850                           
  4851                           
  4852                           ;mcc_generated_files/eusart.c: 134:     return (eusartTxBufferRemaining ? 1 : 0);
  4853  0B30  0021               	movlb	1	; select bank1
  4854  0B31  0854               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  4855  0B32  1D03               	btfss	3,2
  4856  0B33  2B35               	goto	u3921
  4857  0B34  2B37               	goto	u3920
  4858  0B35                     u3921:	
  4859  0B35  3001               	movlw	1
  4860  0B36  2B38               	goto	u3930
  4861  0B37                     u3920:	
  4862  0B37  3000               	movlw	0
  4863  0B38                     u3930:	
  4864  0B38                     l78:	
  4865  0B38  0008               	return
  4866  0B39                     __end_of_EUSART_is_tx_ready:	
  4867                           
  4868                           	psect	text5
  4869  0AE2                     __ptext5:	
  4870 ;; *************** function _EUSART_is_tx_done *****************
  4871 ;; Defined at:
  4872 ;;		line 142 in file "mcc_generated_files/eusart.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      _Bool 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    4
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_write_UART
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _EUSART_is_tx_done
  4902  0AE2                     _EUSART_is_tx_done:	
  4903  0AE2                     l3534:	
  4904                           ;incstack = 0
  4905                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  4906                           
  4907                           
  4908                           ;mcc_generated_files/eusart.c: 144:     return TX1STAbits.TRMT;
  4909  0AE2  0022               	movlb	2	; select bank2
  4910  0AE3  0C1E               	rrf	30,w	;volatile
  4911  0AE4  3901               	andlw	1
  4912  0AE5                     l84:	
  4913  0AE5  0008               	return
  4914  0AE6                     __end_of_EUSART_is_tx_done:	
  4915                           
  4916                           	psect	text6
  4917  0EFD                     __ptext6:	
  4918 ;; *************** function _parse_message *****************
  4919 ;; Defined at:
  4920 ;;		line 116 in file "main.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  cmd             1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  cmd             1   77[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;Total ram usage:        3 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:   13
  4941 ;; This function calls:
  4942 ;;		_printf
  4943 ;; This function is called by:
  4944 ;;		_read_str_UART
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _parse_message
  4950  0EFD                     _parse_message:	
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _parse_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4954                           ;parse_message@cmd stored from wreg
  4955  0EFD  0020               	movlb	0	; select bank0
  4956  0EFE  00ED               	movwf	parse_message@cmd
  4957  0EFF                     l3702:	
  4958                           
  4959                           ;main.c: 119:     switch(cmd){
  4960  0EFF  2F09               	goto	l3708
  4961  0F00                     l3704:	
  4962                           
  4963                           ;main.c: 121:                 printf("Begin ");
  4964  0F00  3012               	movlw	low (STR_3| (0+32768))
  4965  0F01  0021               	movlb	1	; select bank1
  4966  0F02  00B6               	movwf	printf@fmt^(0+128)
  4967  0F03  3090               	movlw	high (STR_3| (0+32768))
  4968  0F04  00B7               	movwf	(printf@fmt^(0+128)+1)
  4969  0F05  318B  2354  318E   	fcall	_printf
  4970                           
  4971                           ;main.c: 122:                 break;
  4972  0F08  2F3D               	goto	l3710
  4973  0F09                     l3708:	
  4974  0F09  086D               	movf	parse_message@cmd,w
  4975  0F0A  00EB               	movwf	??_parse_message
  4976  0F0B  01EC               	clrf	??_parse_message+1
  4977                           
  4978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4979                           ; Switch size 1, requested type "simple"
  4980                           ; Number of cases is 1, Range of values is 0 to 0
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte            4     3 (average)
  4984                           ; direct_byte            8     6 (fixed)
  4985                           ; jumptable            260     6 (fixed)
  4986                           ;	Chosen strategy is simple_byte
  4987  0F0C  086C               	movf	??_parse_message+1,w
  4988  0F0D  3A00               	xorlw	0	; case 0
  4989  0F0E  1903               	skipnz
  4990  0F0F  2F11               	goto	l3900
  4991  0F10  2F3D               	goto	l3710
  4992  0F11                     l3900:	
  4993                           
  4994                           ; Switch size 1, requested type "simple"
  4995                           ; Number of cases is 14, Range of values is 192 to 253
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte           43    22 (average)
  4999                           ; direct_byte          133     9 (fixed)
  5000                           ; jumptable            263     9 (fixed)
  5001                           ;	Chosen strategy is simple_byte
  5002  0F11  086B               	movf	??_parse_message,w
  5003  0F12  3AC0               	xorlw	192	; case 192
  5004  0F13  1903               	skipnz
  5005  0F14  2F3D               	goto	l3710
  5006  0F15  3A01               	xorlw	1	; case 193
  5007  0F16  1903               	skipnz
  5008  0F17  2F3D               	goto	l3710
  5009  0F18  3A03               	xorlw	3	; case 194
  5010  0F19  1903               	skipnz
  5011  0F1A  2F3D               	goto	l3710
  5012  0F1B  3A01               	xorlw	1	; case 195
  5013  0F1C  1903               	skipnz
  5014  0F1D  2F3D               	goto	l3710
  5015  0F1E  3A07               	xorlw	7	; case 196
  5016  0F1F  1903               	skipnz
  5017  0F20  2F3D               	goto	l3710
  5018  0F21  3A01               	xorlw	1	; case 197
  5019  0F22  1903               	skipnz
  5020  0F23  2F3D               	goto	l3710
  5021  0F24  3A03               	xorlw	3	; case 198
  5022  0F25  1903               	skipnz
  5023  0F26  2F3D               	goto	l3710
  5024  0F27  3A01               	xorlw	1	; case 199
  5025  0F28  1903               	skipnz
  5026  0F29  2F3D               	goto	l3710
  5027  0F2A  3A0F               	xorlw	15	; case 200
  5028  0F2B  1903               	skipnz
  5029  0F2C  2F3D               	goto	l3710
  5030  0F2D  3A01               	xorlw	1	; case 201
  5031  0F2E  1903               	skipnz
  5032  0F2F  2F3D               	goto	l3710
  5033  0F30  3A03               	xorlw	3	; case 202
  5034  0F31  1903               	skipnz
  5035  0F32  2F3D               	goto	l3710
  5036  0F33  3A01               	xorlw	1	; case 203
  5037  0F34  1903               	skipnz
  5038  0F35  2F3D               	goto	l3710
  5039  0F36  3A07               	xorlw	7	; case 204
  5040  0F37  1903               	skipnz
  5041  0F38  2F3D               	goto	l3710
  5042  0F39  3A31               	xorlw	49	; case 253
  5043  0F3A  1903               	skipnz
  5044  0F3B  2F00               	goto	l3704
  5045  0F3C  2F3D               	goto	l3710
  5046  0F3D                     l3710:	
  5047                           
  5048                           ;main.c: 152:     printf("%d\n",cmd);
  5049  0F3D  3019               	movlw	low (STR_4| (0+32768))
  5050  0F3E  0021               	movlb	1	; select bank1
  5051  0F3F  00B6               	movwf	printf@fmt^(0+128)
  5052  0F40  3090               	movlw	high (STR_4| (0+32768))
  5053  0F41  00B7               	movwf	(printf@fmt^(0+128)+1)
  5054  0F42  0020               	movlb	0	; select bank0
  5055  0F43  086D               	movf	parse_message@cmd,w
  5056  0F44  00EB               	movwf	??_parse_message
  5057  0F45  01EC               	clrf	??_parse_message+1
  5058  0F46  086B               	movf	??_parse_message,w
  5059  0F47  0021               	movlb	1	; select bank1
  5060  0F48  00B8               	movwf	(?_printf^(0+128)+2)
  5061  0F49  0020               	movlb	0	; select bank0
  5062  0F4A  086C               	movf	??_parse_message+1,w
  5063  0F4B  0021               	movlb	1	; select bank1
  5064  0F4C  00B9               	movwf	((?_printf+1)^(0+128)+2)
  5065  0F4D  318B  2354  318E   	fcall	_printf
  5066  0F50                     l361:	
  5067  0F50  0008               	return
  5068  0F51                     __end_of_parse_message:	
  5069                           
  5070                           	psect	text7
  5071  0B54                     __ptext7:	
  5072 ;; *************** function _printf *****************
  5073 ;; Defined at:
  5074 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  fmt             2   22[BANK1 ] PTR const unsigned char 
  5077 ;;		 -> STR_4(4), STR_3(7), STR_2(18), STR_1(18), 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  ret             2    0        int 
  5080 ;;  ap              1   74[BANK0 ] PTR void [1]
  5081 ;;		 -> ?_printf(2), 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  2   22[BANK1 ] int 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:       14 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   12
  5098 ;; This function calls:
  5099 ;;		_vfprintf
  5100 ;; This function is called by:
  5101 ;;		_parse_message
  5102 ;;		_reply_UART_OK
  5103 ;;		_reply_UART_ERROR
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _printf
  5109  0B54                     _printf:	
  5110  0B54                     l3560:	
  5111                           ;incstack = 0
  5112                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5113                           
  5114  0B54  30B8               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5115  0B55  0020               	movlb	0	; select bank0
  5116  0B56  00E7               	movwf	??_printf
  5117  0B57  0867               	movf	??_printf,w
  5118  0B58  00EA               	movwf	printf@ap
  5119  0B59                     l3562:	
  5120  0B59  0021               	movlb	1	; select bank1
  5121  0B5A  0837               	movf	(printf@fmt+1)^(0+128),w
  5122  0B5B  0020               	movlb	0	; select bank0
  5123  0B5C  00E0               	movwf	vfprintf@fmt+1
  5124  0B5D  0021               	movlb	1	; select bank1
  5125  0B5E  0836               	movf	printf@fmt^(0+128),w
  5126  0B5F  0020               	movlb	0	; select bank0
  5127  0B60  00DF               	movwf	vfprintf@fmt
  5128  0B61  306A               	movlw	(low (printf@ap| 0))& (0+255)
  5129  0B62  00E7               	movwf	??_printf
  5130  0B63  0867               	movf	??_printf,w
  5131  0B64  00E1               	movwf	vfprintf@ap
  5132  0B65  3000               	movlw	0
  5133  0B66  318D  2572  318B   	fcall	_vfprintf
  5134  0B69                     l1241:	
  5135  0B69  0008               	return
  5136  0B6A                     __end_of_printf:	
  5137                           
  5138                           	psect	text8
  5139  0D72                     __ptext8:	
  5140 ;; *************** function _vfprintf *****************
  5141 ;; Defined at:
  5142 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  fp              1    wreg     PTR struct _IO_FILE
  5145 ;;		 -> NULL(0), 
  5146 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  5147 ;;		 -> STR_4(4), STR_3(7), STR_2(18), STR_1(18), 
  5148 ;;  ap              1   65[BANK0 ] PTR PTR void 
  5149 ;;		 -> printf@ap(1), 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  5152 ;;		 -> NULL(0), 
  5153 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  5154 ;;		 -> STR_4(4), STR_3(7), STR_2(18), STR_1(18), 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2   63[BANK0 ] int 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5164 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:   11
  5171 ;; This function calls:
  5172 ;;		_vfpfcnvrt
  5173 ;; This function is called by:
  5174 ;;		_printf
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _vfprintf
  5180  0D72                     _vfprintf:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5184                           ;vfprintf@fp stored from wreg
  5185  0D72  0020               	movlb	0	; select bank0
  5186  0D73  00E4               	movwf	vfprintf@fp
  5187  0D74                     l3538:	
  5188                           
  5189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5190  0D74  0860               	movf	vfprintf@fmt+1,w
  5191  0D75  00E6               	movwf	vfprintf@cfmt+1
  5192  0D76  085F               	movf	vfprintf@fmt,w
  5193  0D77  00E5               	movwf	vfprintf@cfmt
  5194  0D78                     l3540:	
  5195                           
  5196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5197  0D78  0021               	movlb	1	; select bank1
  5198  0D79  01C7               	clrf	_nout^(0+128)
  5199  0D7A  01C8               	clrf	(_nout+1)^(0+128)
  5200                           
  5201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5202  0D7B  2D90               	goto	l3544
  5203  0D7C                     l3542:	
  5204                           
  5205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5206  0D7C  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5207  0D7D  00E2               	movwf	??_vfprintf
  5208  0D7E  0862               	movf	??_vfprintf,w
  5209  0D7F  00D7               	movwf	vfpfcnvrt@fmt
  5210  0D80  0861               	movf	vfprintf@ap,w
  5211  0D81  00E3               	movwf	??_vfprintf+1
  5212  0D82  0863               	movf	??_vfprintf+1,w
  5213  0D83  00D8               	movwf	vfpfcnvrt@ap
  5214  0D84  0864               	movf	vfprintf@fp,w
  5215  0D85  3180  2056  318D   	fcall	_vfpfcnvrt
  5216  0D88  0020               	movlb	0	; select bank0
  5217  0D89  0857               	movf	?_vfpfcnvrt,w
  5218  0D8A  0021               	movlb	1	; select bank1
  5219  0D8B  07C7               	addwf	_nout^(0+128),f
  5220  0D8C  0020               	movlb	0	; select bank0
  5221  0D8D  0858               	movf	?_vfpfcnvrt+1,w
  5222  0D8E  0021               	movlb	1	; select bank1
  5223  0D8F  3DC8               	addwfc	(_nout+1)^(0+128),f
  5224  0D90                     l3544:	
  5225                           
  5226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5227  0D90  0020               	movlb	0	; select bank0
  5228  0D91  0865               	movf	vfprintf@cfmt,w
  5229  0D92  0084               	movwf	4
  5230  0D93  0866               	movf	vfprintf@cfmt+1,w
  5231  0D94  0085               	movwf	5
  5232  0D95  0012               	moviw fsr0++
  5233  0D96  1D03               	btfss	3,2
  5234  0D97  2D99               	goto	u3941
  5235  0D98  2D9A               	goto	u3940
  5236  0D99                     u3941:	
  5237  0D99  2D7C               	goto	l3542
  5238  0D9A                     u3940:	
  5239  0D9A                     l3546:	
  5240                           
  5241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5242  0D9A  0021               	movlb	1	; select bank1
  5243  0D9B  0848               	movf	(_nout+1)^(0+128),w
  5244  0D9C  0020               	movlb	0	; select bank0
  5245  0D9D  00E0               	movwf	?_vfprintf+1
  5246  0D9E  0021               	movlb	1	; select bank1
  5247  0D9F  0847               	movf	_nout^(0+128),w
  5248  0DA0  0020               	movlb	0	; select bank0
  5249  0DA1  00DF               	movwf	?_vfprintf
  5250  0DA2                     l696:	
  5251  0DA2  0008               	return
  5252  0DA3                     __end_of_vfprintf:	
  5253                           
  5254                           	psect	text9
  5255  0056                     __ptext9:	
  5256 ;; *************** function _vfpfcnvrt *****************
  5257 ;; Defined at:
  5258 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  fp              1    wreg     PTR struct _IO_FILE
  5261 ;;		 -> NULL(0), 
  5262 ;;  fmt             1   55[BANK0 ] PTR PTR unsigned char 
  5263 ;;		 -> vfprintf@cfmt(2), 
  5264 ;;  ap              1   56[BANK0 ] PTR PTR void 
  5265 ;;		 -> printf@ap(1), 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  fp              1   21[BANK1 ] PTR struct _IO_FILE
  5268 ;;		 -> NULL(0), 
  5269 ;;  llu             8    8[BANK1 ] unsigned long long 
  5270 ;;  ll              8    0[BANK1 ] long long 
  5271 ;;  f               4    0        long long 
  5272 ;;  ct              3    0        unsigned char [3]
  5273 ;;  done            2   17[BANK1 ] int 
  5274 ;;  vp              2    0        PTR void 
  5275 ;;  i               2    0        int 
  5276 ;;  cp              2    0        PTR unsigned char 
  5277 ;;  c               1   16[BANK1 ] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  2   55[BANK0 ] int 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Totals:         0       8      22       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;Total ram usage:       30 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:   10
  5294 ;; This function calls:
  5295 ;;		_atoi
  5296 ;;		_dtoa
  5297 ;;		_fputc
  5298 ;;		_isdigit
  5299 ;;		_xtoa
  5300 ;; This function is called by:
  5301 ;;		_vfprintf
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _vfpfcnvrt
  5307  0056                     _vfpfcnvrt:	
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5311                           ;vfpfcnvrt@fp stored from wreg
  5312  0056  0021               	movlb	1	; select bank1
  5313  0057  00B5               	movwf	vfpfcnvrt@fp^(0+128)
  5314  0058                     l3424:	
  5315                           
  5316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5317  0058  0020               	movlb	0	; select bank0
  5318  0059  0857               	movf	vfpfcnvrt@fmt,w
  5319  005A  0086               	movwf	6
  5320  005B  0187               	clrf	7
  5321  005C  3F40               	moviw [0]fsr1
  5322  005D  00D9               	movwf	??_vfpfcnvrt
  5323  005E  3F41               	moviw [1]fsr1
  5324  005F  00DA               	movwf	??_vfpfcnvrt+1
  5325  0060  0859               	movf	??_vfpfcnvrt,w
  5326  0061  0084               	movwf	4
  5327  0062  085A               	movf	??_vfpfcnvrt+1,w
  5328  0063  0085               	movwf	5
  5329  0064  0012               	moviw fsr0++
  5330  0065  3A25               	xorlw	37
  5331  0066  1D03               	btfss	3,2
  5332  0067  2869               	goto	u3791
  5333  0068  286A               	goto	u3790
  5334  0069                     u3791:	
  5335  0069  2A6E               	goto	l3518
  5336  006A                     u3790:	
  5337  006A                     l3426:	
  5338                           
  5339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5340  006A  0857               	movf	vfpfcnvrt@fmt,w
  5341  006B  0086               	movwf	6
  5342  006C  0187               	clrf	7
  5343  006D  3001               	movlw	1
  5344  006E  0781               	addwf	1,f
  5345  006F  3141               	addfsr 1,1
  5346  0070  1803               	skipnc
  5347  0071  0A81               	incf	1,f
  5348  0072                     l3428:	
  5349                           
  5350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5351  0072  0021               	movlb	1	; select bank1
  5352  0073  01C9               	clrf	_width^(0+128)
  5353  0074  01CA               	clrf	(_width+1)^(0+128)
  5354  0075  01CD               	clrf	_flags^(0+128)
  5355  0076  01CE               	clrf	(_flags+1)^(0+128)
  5356  0077                     l3430:	
  5357                           
  5358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5359  0077  30FF               	movlw	255
  5360  0078  00CB               	movwf	_prec^(0+128)
  5361  0079  30FF               	movlw	255
  5362  007A  00CC               	movwf	(_prec^(0+128)+1)
  5363  007B                     l3432:	
  5364                           
  5365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  5366  007B  01B1               	clrf	vfpfcnvrt@done^(0+128)
  5367  007C  01B2               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5368                           
  5369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5370  007D  28C1               	goto	l3450
  5371  007E                     l664:	
  5372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 691:                 case '-'
      +                           :
  5373                           
  5374                           
  5375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  5376  007E  0021               	movlb	1	; select bank1
  5377  007F  144D               	bsf	_flags^(0+128),0
  5378  0080                     l3434:	
  5379                           
  5380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  5381  0080  0020               	movlb	0	; select bank0
  5382  0081  0857               	movf	vfpfcnvrt@fmt,w
  5383  0082  0086               	movwf	6
  5384  0083  0187               	clrf	7
  5385  0084  3001               	movlw	1
  5386  0085  0781               	addwf	1,f
  5387  0086  3141               	addfsr 1,1
  5388  0087  1803               	skipnc
  5389  0088  0A81               	incf	1,f
  5390                           
  5391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  5392  0089  28C1               	goto	l3450
  5393  008A                     l666:	
  5394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 695:                 case '0'
      +                           :
  5395                           
  5396                           
  5397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  5398  008A  0021               	movlb	1	; select bank1
  5399  008B  14CD               	bsf	_flags^(0+128),1
  5400  008C  2880               	goto	l3434
  5401  008D                     l667:	
  5402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 699:                 case '+'
      +                           :
  5403                           
  5404                           
  5405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  5406  008D  0021               	movlb	1	; select bank1
  5407  008E  154D               	bsf	_flags^(0+128),2
  5408  008F  2880               	goto	l3434
  5409  0090                     l668:	
  5410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 703:                 case ' '
      +                           :
  5411                           
  5412                           
  5413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  5414  0090  0021               	movlb	1	; select bank1
  5415  0091  15CD               	bsf	_flags^(0+128),3
  5416  0092  2880               	goto	l3434
  5417  0093                     l669:	
  5418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 707:                 case '#'
      +                           :
  5419                           
  5420                           
  5421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  5422  0093  0021               	movlb	1	; select bank1
  5423  0094  164D               	bsf	_flags^(0+128),4
  5424  0095  2880               	goto	l3434
  5425  0096                     l3444:	
  5426                           
  5427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  5428  0096  3001               	movlw	1
  5429  0097  0021               	movlb	1	; select bank1
  5430  0098  00B1               	movwf	vfpfcnvrt@done^(0+128)
  5431  0099  3000               	movlw	0
  5432  009A  00B2               	movwf	(vfpfcnvrt@done^(0+128)+1)
  5433                           
  5434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  5435  009B  28C1               	goto	l3450
  5436  009C                     l3448:	
  5437  009C  0020               	movlb	0	; select bank0
  5438  009D  0857               	movf	vfpfcnvrt@fmt,w
  5439  009E  0086               	movwf	6
  5440  009F  0187               	clrf	7
  5441  00A0  3F40               	moviw [0]fsr1
  5442  00A1  00D9               	movwf	??_vfpfcnvrt
  5443  00A2  3F41               	moviw [1]fsr1
  5444  00A3  00DA               	movwf	??_vfpfcnvrt+1
  5445  00A4  0859               	movf	??_vfpfcnvrt,w
  5446  00A5  0084               	movwf	4
  5447  00A6  085A               	movf	??_vfpfcnvrt+1,w
  5448  00A7  0085               	movwf	5
  5449  00A8  0800               	movf	0,w	;code access
  5450  00A9  00DB               	movwf	??_vfpfcnvrt+2
  5451  00AA  01DC               	clrf	??_vfpfcnvrt+3
  5452                           
  5453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5454                           ; Switch size 1, requested type "simple"
  5455                           ; Number of cases is 1, Range of values is 0 to 0
  5456                           ; switch strategies available:
  5457                           ; Name         Instructions Cycles
  5458                           ; simple_byte            4     3 (average)
  5459                           ; direct_byte            8     6 (fixed)
  5460                           ; jumptable            260     6 (fixed)
  5461                           ;	Chosen strategy is simple_byte
  5462  00AB  085C               	movf	??_vfpfcnvrt+3,w
  5463  00AC  3A00               	xorlw	0	; case 0
  5464  00AD  1903               	skipnz
  5465  00AE  28B0               	goto	l3902
  5466  00AF  2896               	goto	l3444
  5467  00B0                     l3902:	
  5468                           
  5469                           ; Switch size 1, requested type "simple"
  5470                           ; Number of cases is 5, Range of values is 32 to 48
  5471                           ; switch strategies available:
  5472                           ; Name         Instructions Cycles
  5473                           ; simple_byte           16     9 (average)
  5474                           ; direct_byte           43     9 (fixed)
  5475                           ; jumptable            263     9 (fixed)
  5476                           ;	Chosen strategy is simple_byte
  5477  00B0  085B               	movf	??_vfpfcnvrt+2,w
  5478  00B1  3A20               	xorlw	32	; case 32
  5479  00B2  1903               	skipnz
  5480  00B3  2890               	goto	l668
  5481  00B4  3A03               	xorlw	3	; case 35
  5482  00B5  1903               	skipnz
  5483  00B6  2893               	goto	l669
  5484  00B7  3A08               	xorlw	8	; case 43
  5485  00B8  1903               	skipnz
  5486  00B9  288D               	goto	l667
  5487  00BA  3A06               	xorlw	6	; case 45
  5488  00BB  1903               	skipnz
  5489  00BC  287E               	goto	l664
  5490  00BD  3A1D               	xorlw	29	; case 48
  5491  00BE  1903               	skipnz
  5492  00BF  288A               	goto	l666
  5493  00C0  2896               	goto	l3444
  5494  00C1                     l3450:	
  5495                           
  5496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5497  00C1  0021               	movlb	1	; select bank1
  5498  00C2  0831               	movf	vfpfcnvrt@done^(0+128),w
  5499  00C3  0432               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  5500  00C4  1903               	btfsc	3,2
  5501  00C5  28C7               	goto	u3801
  5502  00C6  28C8               	goto	u3800
  5503  00C7                     u3801:	
  5504  00C7  289C               	goto	l3448
  5505  00C8                     u3800:	
  5506  00C8                     l671:	
  5507                           
  5508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  5509  00C8  1C4D               	btfss	_flags^(0+128),0
  5510  00C9  28CB               	goto	u3811
  5511  00CA  28CC               	goto	u3810
  5512  00CB                     u3811:	
  5513  00CB  28D0               	goto	l3454
  5514  00CC                     u3810:	
  5515  00CC                     l3452:	
  5516                           
  5517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  5518  00CC  30FD               	movlw	253
  5519  00CD  05CD               	andwf	_flags^(0+128),f
  5520  00CE  30FF               	movlw	255
  5521  00CF  05CE               	andwf	(_flags+1)^(0+128),f
  5522  00D0                     l3454:	
  5523                           
  5524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  5525  00D0  0020               	movlb	0	; select bank0
  5526  00D1  0857               	movf	vfpfcnvrt@fmt,w
  5527  00D2  0086               	movwf	6
  5528  00D3  0187               	clrf	7
  5529  00D4  3F40               	moviw [0]fsr1
  5530  00D5  00D9               	movwf	??_vfpfcnvrt
  5531  00D6  3F41               	moviw [1]fsr1
  5532  00D7  00DA               	movwf	??_vfpfcnvrt+1
  5533  00D8  0859               	movf	??_vfpfcnvrt,w
  5534  00D9  0084               	movwf	4
  5535  00DA  085A               	movf	??_vfpfcnvrt+1,w
  5536  00DB  0085               	movwf	5
  5537  00DC  0012               	moviw fsr0++
  5538  00DD  3A2A               	xorlw	42
  5539  00DE  1D03               	btfss	3,2
  5540  00DF  28E1               	goto	u3821
  5541  00E0  28E2               	goto	u3820
  5542  00E1                     u3821:	
  5543  00E1  2902               	goto	l3466
  5544  00E2                     u3820:	
  5545  00E2                     l3456:	
  5546                           
  5547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  5548  00E2  0857               	movf	vfpfcnvrt@fmt,w
  5549  00E3  0086               	movwf	6
  5550  00E4  0187               	clrf	7
  5551  00E5  3001               	movlw	1
  5552  00E6  0781               	addwf	1,f
  5553  00E7  3141               	addfsr 1,1
  5554  00E8  1803               	skipnc
  5555  00E9  0A81               	incf	1,f
  5556  00EA                     l3458:	
  5557                           
  5558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5559  00EA  0858               	movf	vfpfcnvrt@ap,w
  5560  00EB  0086               	movwf	6
  5561  00EC  0187               	clrf	7
  5562  00ED  0801               	movf	1,w
  5563  00EE  0084               	movwf	4
  5564  00EF  0185               	clrf	5
  5565  00F0  3002               	movlw	2
  5566  00F1  0781               	addwf	1,f
  5567  00F2  3F00               	moviw [0]fsr0
  5568  00F3  0021               	movlb	1	; select bank1
  5569  00F4  00C9               	movwf	_width^(0+128)
  5570  00F5  3F01               	moviw [1]fsr0
  5571  00F6  00CA               	movwf	(_width+1)^(0+128)
  5572  00F7                     l3460:	
  5573                           
  5574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  5575  00F7  1FCA               	btfss	(_width+1)^(0+128),7
  5576  00F8  28FA               	goto	u3831
  5577  00F9  28FB               	goto	u3830
  5578  00FA                     u3831:	
  5579  00FA  2948               	goto	l3476
  5580  00FB                     u3830:	
  5581  00FB                     l3462:	
  5582                           
  5583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  5584  00FB  144D               	bsf	_flags^(0+128),0
  5585  00FC                     l3464:	
  5586                           
  5587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  5588  00FC  09C9               	comf	_width^(0+128),f
  5589  00FD  09CA               	comf	(_width+1)^(0+128),f
  5590  00FE  0AC9               	incf	_width^(0+128),f
  5591  00FF  1903               	skipnz
  5592  0100  0ACA               	incf	(_width+1)^(0+128),f
  5593  0101  2948               	goto	l3476
  5594  0102                     l3466:	
  5595                           
  5596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  5597  0102  0857               	movf	vfpfcnvrt@fmt,w
  5598  0103  0086               	movwf	6
  5599  0104  0187               	clrf	7
  5600  0105  3F40               	moviw [0]fsr1
  5601  0106  00F7               	movwf	atoi@s
  5602  0107  3F41               	moviw [1]fsr1
  5603  0108  00F8               	movwf	atoi@s+1
  5604  0109  318F  2751  3180   	fcall	_atoi
  5605  010C  0878               	movf	?_atoi+1,w
  5606  010D  0021               	movlb	1	; select bank1
  5607  010E  00CA               	movwf	(_width+1)^(0+128)
  5608  010F  0877               	movf	?_atoi,w
  5609  0110  00C9               	movwf	_width^(0+128)
  5610                           
  5611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5612  0111  291B               	goto	l3470
  5613  0112                     l3468:	
  5614                           
  5615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  5616  0112  0020               	movlb	0	; select bank0
  5617  0113  0857               	movf	vfpfcnvrt@fmt,w
  5618  0114  0086               	movwf	6
  5619  0115  0187               	clrf	7
  5620  0116  3001               	movlw	1
  5621  0117  0781               	addwf	1,f
  5622  0118  3141               	addfsr 1,1
  5623  0119  1803               	skipnc
  5624  011A  0A81               	incf	1,f
  5625  011B                     l3470:	
  5626  011B  0020               	movlb	0	; select bank0
  5627  011C  0857               	movf	vfpfcnvrt@fmt,w
  5628  011D  0086               	movwf	6
  5629  011E  0187               	clrf	7
  5630  011F  3F40               	moviw [0]fsr1
  5631  0120  00D9               	movwf	??_vfpfcnvrt
  5632  0121  3F41               	moviw [1]fsr1
  5633  0122  00DA               	movwf	??_vfpfcnvrt+1
  5634  0123  0859               	movf	??_vfpfcnvrt,w
  5635  0124  0084               	movwf	4
  5636  0125  085A               	movf	??_vfpfcnvrt+1,w
  5637  0126  0085               	movwf	5
  5638  0127  0800               	movf	0,w	;code access
  5639  0128  3ED0               	addlw	208
  5640  0129  00DB               	movwf	??_vfpfcnvrt+2
  5641  012A  30FF               	movlw	255
  5642  012B  1803               	skipnc
  5643  012C  3000               	movlw	0
  5644  012D  00DC               	movwf	??_vfpfcnvrt+3
  5645  012E  3000               	movlw	0
  5646  012F  025C               	subwf	??_vfpfcnvrt+3,w
  5647  0130  300A               	movlw	10
  5648  0131  1903               	skipnz
  5649  0132  025B               	subwf	??_vfpfcnvrt+2,w
  5650  0133  1C03               	skipc
  5651  0134  2936               	goto	u3841
  5652  0135  2938               	goto	u3840
  5653  0136                     u3841:	
  5654  0136  3001               	movlw	1
  5655  0137  2939               	goto	u3850
  5656  0138                     u3840:	
  5657  0138  3000               	movlw	0
  5658  0139                     u3850:	
  5659  0139  00DD               	movwf	??_vfpfcnvrt+4
  5660  013A  01DE               	clrf	??_vfpfcnvrt+5
  5661  013B  085D               	movf	??_vfpfcnvrt+4,w
  5662  013C  0021               	movlb	1	; select bank1
  5663  013D  00B3               	movwf	_vfpfcnvrt$746^(0+128)
  5664  013E  0020               	movlb	0	; select bank0
  5665  013F  085E               	movf	??_vfpfcnvrt+5,w
  5666  0140  0021               	movlb	1	; select bank1
  5667  0141  00B4               	movwf	(_vfpfcnvrt$746+1)^(0+128)
  5668  0142                     l3474:	
  5669  0142  0833               	movf	_vfpfcnvrt$746^(0+128),w
  5670  0143  0434               	iorwf	(_vfpfcnvrt$746+1)^(0+128),w
  5671  0144  1D03               	btfss	3,2
  5672  0145  2947               	goto	u3861
  5673  0146  2948               	goto	u3860
  5674  0147                     u3861:	
  5675  0147  2912               	goto	l3468
  5676  0148                     u3860:	
  5677  0148                     l3476:	
  5678                           
  5679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5680  0148  0020               	movlb	0	; select bank0
  5681  0149  0857               	movf	vfpfcnvrt@fmt,w
  5682  014A  0086               	movwf	6
  5683  014B  0187               	clrf	7
  5684  014C  3F40               	moviw [0]fsr1
  5685  014D  00D9               	movwf	??_vfpfcnvrt
  5686  014E  3F41               	moviw [1]fsr1
  5687  014F  00DA               	movwf	??_vfpfcnvrt+1
  5688  0150  0859               	movf	??_vfpfcnvrt,w
  5689  0151  0084               	movwf	4
  5690  0152  085A               	movf	??_vfpfcnvrt+1,w
  5691  0153  0085               	movwf	5
  5692  0154  0012               	moviw fsr0++
  5693  0155  3A64               	xorlw	100
  5694  0156  1903               	btfsc	3,2
  5695  0157  2959               	goto	u3871
  5696  0158  295A               	goto	u3870
  5697  0159                     u3871:	
  5698  0159  296B               	goto	l3480
  5699  015A                     u3870:	
  5700  015A                     l3478:	
  5701  015A  0857               	movf	vfpfcnvrt@fmt,w
  5702  015B  0086               	movwf	6
  5703  015C  0187               	clrf	7
  5704  015D  3F40               	moviw [0]fsr1
  5705  015E  00D9               	movwf	??_vfpfcnvrt
  5706  015F  3F41               	moviw [1]fsr1
  5707  0160  00DA               	movwf	??_vfpfcnvrt+1
  5708  0161  0859               	movf	??_vfpfcnvrt,w
  5709  0162  0084               	movwf	4
  5710  0163  085A               	movf	??_vfpfcnvrt+1,w
  5711  0164  0085               	movwf	5
  5712  0165  0012               	moviw fsr0++
  5713  0166  3A69               	xorlw	105
  5714  0167  1D03               	btfss	3,2
  5715  0168  296A               	goto	u3881
  5716  0169  296B               	goto	u3880
  5717  016A                     u3881:	
  5718  016A  29B9               	goto	l3488
  5719  016B                     u3880:	
  5720  016B                     l3480:	
  5721                           
  5722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5723  016B  0857               	movf	vfpfcnvrt@fmt,w
  5724  016C  0086               	movwf	6
  5725  016D  0187               	clrf	7
  5726  016E  3001               	movlw	1
  5727  016F  0781               	addwf	1,f
  5728  0170  3141               	addfsr 1,1
  5729  0171  1803               	skipnc
  5730  0172  0A81               	incf	1,f
  5731  0173                     l3482:	
  5732                           
  5733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5734  0173  0858               	movf	vfpfcnvrt@ap,w
  5735  0174  0086               	movwf	6
  5736  0175  0187               	clrf	7
  5737  0176  0801               	movf	1,w
  5738  0177  0084               	movwf	4
  5739  0178  0185               	clrf	5
  5740  0179  3002               	movlw	2
  5741  017A  0781               	addwf	1,f
  5742  017B  3F00               	moviw [0]fsr0
  5743  017C  00D9               	movwf	??_vfpfcnvrt
  5744  017D  3F01               	moviw [1]fsr0
  5745  017E  00DA               	movwf	??_vfpfcnvrt+1
  5746  017F  0859               	movf	??_vfpfcnvrt,w
  5747  0180  0021               	movlb	1	; select bank1
  5748  0181  00A0               	movwf	vfpfcnvrt@ll^(0+128)
  5749  0182  0020               	movlb	0	; select bank0
  5750  0183  085A               	movf	??_vfpfcnvrt+1,w
  5751  0184  0021               	movlb	1	; select bank1
  5752  0185  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5753  0186  0D89               	rlf	9,f
  5754  0187  3B89               	subwfb	9,f
  5755  0188  0989               	comf	9,f
  5756  0189  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5757  018A  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5758  018B  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5759  018C  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5760  018D  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5761  018E  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5762  018F                     l3484:	
  5763                           
  5764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5765  018F  0820               	movf	vfpfcnvrt@ll^(0+128),w
  5766  0190  0020               	movlb	0	; select bank0
  5767  0191  00B1               	movwf	dtoa@d
  5768  0192  0021               	movlb	1	; select bank1
  5769  0193  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5770  0194  0020               	movlb	0	; select bank0
  5771  0195  00B2               	movwf	dtoa@d+1
  5772  0196  0021               	movlb	1	; select bank1
  5773  0197  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5774  0198  0020               	movlb	0	; select bank0
  5775  0199  00B3               	movwf	dtoa@d+2
  5776  019A  0021               	movlb	1	; select bank1
  5777  019B  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5778  019C  0020               	movlb	0	; select bank0
  5779  019D  00B4               	movwf	dtoa@d+3
  5780  019E  0021               	movlb	1	; select bank1
  5781  019F  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5782  01A0  0020               	movlb	0	; select bank0
  5783  01A1  00B5               	movwf	dtoa@d+4
  5784  01A2  0021               	movlb	1	; select bank1
  5785  01A3  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5786  01A4  0020               	movlb	0	; select bank0
  5787  01A5  00B6               	movwf	dtoa@d+5
  5788  01A6  0021               	movlb	1	; select bank1
  5789  01A7  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5790  01A8  0020               	movlb	0	; select bank0
  5791  01A9  00B7               	movwf	dtoa@d+6
  5792  01AA  0021               	movlb	1	; select bank1
  5793  01AB  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5794  01AC  0020               	movlb	0	; select bank0
  5795  01AD  00B8               	movwf	dtoa@d+7
  5796  01AE  0021               	movlb	1	; select bank1
  5797  01AF  0835               	movf	vfpfcnvrt@fp^(0+128),w
  5798  01B0  3184  240B  3180   	fcall	_dtoa
  5799  01B3  0020               	movlb	0	; select bank0
  5800  01B4  0832               	movf	?_dtoa+1,w
  5801  01B5  00D8               	movwf	?_vfpfcnvrt+1
  5802  01B6  0831               	movf	?_dtoa,w
  5803  01B7  00D7               	movwf	?_vfpfcnvrt
  5804  01B8  2A93               	goto	l686
  5805  01B9                     l3488:	
  5806                           
  5807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  5808  01B9  0857               	movf	vfpfcnvrt@fmt,w
  5809  01BA  0086               	movwf	6
  5810  01BB  0187               	clrf	7
  5811  01BC  3F40               	moviw [0]fsr1
  5812  01BD  00D9               	movwf	??_vfpfcnvrt
  5813  01BE  3F41               	moviw [1]fsr1
  5814  01BF  00DA               	movwf	??_vfpfcnvrt+1
  5815  01C0  0859               	movf	??_vfpfcnvrt,w
  5816  01C1  0084               	movwf	4
  5817  01C2  085A               	movf	??_vfpfcnvrt+1,w
  5818  01C3  0085               	movwf	5
  5819  01C4  0012               	moviw fsr0++
  5820  01C5  3A78               	xorlw	120
  5821  01C6  1903               	btfsc	3,2
  5822  01C7  29C9               	goto	u3891
  5823  01C8  29CA               	goto	u3890
  5824  01C9                     u3891:	
  5825  01C9  29DB               	goto	l3492
  5826  01CA                     u3890:	
  5827  01CA                     l3490:	
  5828  01CA  0857               	movf	vfpfcnvrt@fmt,w
  5829  01CB  0086               	movwf	6
  5830  01CC  0187               	clrf	7
  5831  01CD  3F40               	moviw [0]fsr1
  5832  01CE  00D9               	movwf	??_vfpfcnvrt
  5833  01CF  3F41               	moviw [1]fsr1
  5834  01D0  00DA               	movwf	??_vfpfcnvrt+1
  5835  01D1  0859               	movf	??_vfpfcnvrt,w
  5836  01D2  0084               	movwf	4
  5837  01D3  085A               	movf	??_vfpfcnvrt+1,w
  5838  01D4  0085               	movwf	5
  5839  01D5  0012               	moviw fsr0++
  5840  01D6  3A58               	xorlw	88
  5841  01D7  1D03               	btfss	3,2
  5842  01D8  29DA               	goto	u3901
  5843  01D9  29DB               	goto	u3900
  5844  01DA                     u3901:	
  5845  01DA  2A37               	goto	l3502
  5846  01DB                     u3900:	
  5847  01DB                     l3492:	
  5848                           
  5849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  5850  01DB  0857               	movf	vfpfcnvrt@fmt,w
  5851  01DC  0086               	movwf	6
  5852  01DD  0187               	clrf	7
  5853  01DE  3F40               	moviw [0]fsr1
  5854  01DF  00D9               	movwf	??_vfpfcnvrt
  5855  01E0  3F41               	moviw [1]fsr1
  5856  01E1  00DA               	movwf	??_vfpfcnvrt+1
  5857  01E2  0859               	movf	??_vfpfcnvrt,w
  5858  01E3  0084               	movwf	4
  5859  01E4  085A               	movf	??_vfpfcnvrt+1,w
  5860  01E5  0085               	movwf	5
  5861  01E6  0800               	movf	0,w	;code access
  5862  01E7  00DB               	movwf	??_vfpfcnvrt+2
  5863  01E8  085B               	movf	??_vfpfcnvrt+2,w
  5864  01E9  0021               	movlb	1	; select bank1
  5865  01EA  00B0               	movwf	vfpfcnvrt@c^(0+128)
  5866  01EB                     l3494:	
  5867                           
  5868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  5869  01EB  0020               	movlb	0	; select bank0
  5870  01EC  0857               	movf	vfpfcnvrt@fmt,w
  5871  01ED  0086               	movwf	6
  5872  01EE  0187               	clrf	7
  5873  01EF  3001               	movlw	1
  5874  01F0  0781               	addwf	1,f
  5875  01F1  3141               	addfsr 1,1
  5876  01F2  1803               	skipnc
  5877  01F3  0A81               	incf	1,f
  5878  01F4                     l3496:	
  5879                           
  5880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5881  01F4  0858               	movf	vfpfcnvrt@ap,w
  5882  01F5  0086               	movwf	6
  5883  01F6  0187               	clrf	7
  5884  01F7  0801               	movf	1,w
  5885  01F8  0084               	movwf	4
  5886  01F9  0185               	clrf	5
  5887  01FA  3002               	movlw	2
  5888  01FB  0781               	addwf	1,f
  5889  01FC  3F00               	moviw [0]fsr0
  5890  01FD  0021               	movlb	1	; select bank1
  5891  01FE  00A8               	movwf	vfpfcnvrt@llu^(0+128)
  5892  01FF  3F01               	moviw [1]fsr0
  5893  0200  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
  5894  0201  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
  5895  0202  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
  5896  0203  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
  5897  0204  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
  5898  0205  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
  5899  0206  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
  5900  0207                     l3498:	
  5901                           
  5902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  5903  0207  0828               	movf	vfpfcnvrt@llu^(0+128),w
  5904  0208  0020               	movlb	0	; select bank0
  5905  0209  00B1               	movwf	xtoa@d
  5906  020A  0021               	movlb	1	; select bank1
  5907  020B  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
  5908  020C  0020               	movlb	0	; select bank0
  5909  020D  00B2               	movwf	xtoa@d+1
  5910  020E  0021               	movlb	1	; select bank1
  5911  020F  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
  5912  0210  0020               	movlb	0	; select bank0
  5913  0211  00B3               	movwf	xtoa@d+2
  5914  0212  0021               	movlb	1	; select bank1
  5915  0213  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
  5916  0214  0020               	movlb	0	; select bank0
  5917  0215  00B4               	movwf	xtoa@d+3
  5918  0216  0021               	movlb	1	; select bank1
  5919  0217  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
  5920  0218  0020               	movlb	0	; select bank0
  5921  0219  00B5               	movwf	xtoa@d+4
  5922  021A  0021               	movlb	1	; select bank1
  5923  021B  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
  5924  021C  0020               	movlb	0	; select bank0
  5925  021D  00B6               	movwf	xtoa@d+5
  5926  021E  0021               	movlb	1	; select bank1
  5927  021F  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
  5928  0220  0020               	movlb	0	; select bank0
  5929  0221  00B7               	movwf	xtoa@d+6
  5930  0222  0021               	movlb	1	; select bank1
  5931  0223  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
  5932  0224  0020               	movlb	0	; select bank0
  5933  0225  00B8               	movwf	xtoa@d+7
  5934  0226  0021               	movlb	1	; select bank1
  5935  0227  0830               	movf	vfpfcnvrt@c^(0+128),w
  5936  0228  0020               	movlb	0	; select bank0
  5937  0229  00D9               	movwf	??_vfpfcnvrt
  5938  022A  0859               	movf	??_vfpfcnvrt,w
  5939  022B  00B9               	movwf	xtoa@x
  5940  022C  0021               	movlb	1	; select bank1
  5941  022D  0835               	movf	vfpfcnvrt@fp^(0+128),w
  5942  022E  3182  2294  3180   	fcall	_xtoa
  5943  0231  0020               	movlb	0	; select bank0
  5944  0232  0832               	movf	?_xtoa+1,w
  5945  0233  00D8               	movwf	?_vfpfcnvrt+1
  5946  0234  0831               	movf	?_xtoa,w
  5947  0235  00D7               	movwf	?_vfpfcnvrt
  5948  0236  2A93               	goto	l686
  5949  0237                     l3502:	
  5950                           
  5951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5952  0237  0857               	movf	vfpfcnvrt@fmt,w
  5953  0238  0086               	movwf	6
  5954  0239  0187               	clrf	7
  5955  023A  3F40               	moviw [0]fsr1
  5956  023B  00D9               	movwf	??_vfpfcnvrt
  5957  023C  3F41               	moviw [1]fsr1
  5958  023D  00DA               	movwf	??_vfpfcnvrt+1
  5959  023E  0859               	movf	??_vfpfcnvrt,w
  5960  023F  0084               	movwf	4
  5961  0240  085A               	movf	??_vfpfcnvrt+1,w
  5962  0241  0085               	movwf	5
  5963  0242  0012               	moviw fsr0++
  5964  0243  3A25               	xorlw	37
  5965  0244  1D03               	btfss	3,2
  5966  0245  2A47               	goto	u3911
  5967  0246  2A48               	goto	u3910
  5968  0247                     u3911:	
  5969  0247  2A63               	goto	l3512
  5970  0248                     u3910:	
  5971  0248                     l3504:	
  5972                           
  5973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5974  0248  0857               	movf	vfpfcnvrt@fmt,w
  5975  0249  0086               	movwf	6
  5976  024A  0187               	clrf	7
  5977  024B  3001               	movlw	1
  5978  024C  0781               	addwf	1,f
  5979  024D  3141               	addfsr 1,1
  5980  024E  1803               	skipnc
  5981  024F  0A81               	incf	1,f
  5982  0250                     l3506:	
  5983                           
  5984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5985  0250  3025               	movlw	37
  5986  0251  00F4               	movwf	fputc@c
  5987  0252  3000               	movlw	0
  5988  0253  00F5               	movwf	fputc@c+1
  5989  0254  0021               	movlb	1	; select bank1
  5990  0255  0835               	movf	vfpfcnvrt@fp^(0+128),w
  5991  0256  0020               	movlb	0	; select bank0
  5992  0257  00D9               	movwf	??_vfpfcnvrt
  5993  0258  0859               	movf	??_vfpfcnvrt,w
  5994  0259  00F6               	movwf	fputc@fp
  5995  025A  318E  261D  3180   	fcall	_fputc
  5996  025D                     l3508:	
  5997                           
  5998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5999  025D  3001               	movlw	1
  6000  025E  0020               	movlb	0	; select bank0
  6001  025F  00D7               	movwf	?_vfpfcnvrt
  6002  0260  3000               	movlw	0
  6003  0261  00D8               	movwf	?_vfpfcnvrt+1
  6004  0262  2A93               	goto	l686
  6005  0263                     l3512:	
  6006                           
  6007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6008  0263  0857               	movf	vfpfcnvrt@fmt,w
  6009  0264  0086               	movwf	6
  6010  0265  0187               	clrf	7
  6011  0266  3001               	movlw	1
  6012  0267  0781               	addwf	1,f
  6013  0268  3141               	addfsr 1,1
  6014  0269  1803               	skipnc
  6015  026A  0A81               	incf	1,f
  6016  026B                     l3514:	
  6017                           
  6018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6019  026B  01D7               	clrf	?_vfpfcnvrt
  6020  026C  01D8               	clrf	?_vfpfcnvrt+1
  6021  026D  2A93               	goto	l686
  6022  026E                     l3518:	
  6023                           
  6024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6025  026E  0857               	movf	vfpfcnvrt@fmt,w
  6026  026F  0086               	movwf	6
  6027  0270  0187               	clrf	7
  6028  0271  3F40               	moviw [0]fsr1
  6029  0272  00D9               	movwf	??_vfpfcnvrt
  6030  0273  3F41               	moviw [1]fsr1
  6031  0274  00DA               	movwf	??_vfpfcnvrt+1
  6032  0275  0859               	movf	??_vfpfcnvrt,w
  6033  0276  0084               	movwf	4
  6034  0277  085A               	movf	??_vfpfcnvrt+1,w
  6035  0278  0085               	movwf	5
  6036  0279  0800               	movf	0,w	;code access
  6037  027A  00DB               	movwf	??_vfpfcnvrt+2
  6038  027B  01DC               	clrf	??_vfpfcnvrt+3
  6039  027C  085B               	movf	??_vfpfcnvrt+2,w
  6040  027D  00F4               	movwf	fputc@c
  6041  027E  085C               	movf	??_vfpfcnvrt+3,w
  6042  027F  00F5               	movwf	fputc@c+1
  6043  0280  0021               	movlb	1	; select bank1
  6044  0281  0835               	movf	vfpfcnvrt@fp^(0+128),w
  6045  0282  0020               	movlb	0	; select bank0
  6046  0283  00DD               	movwf	??_vfpfcnvrt+4
  6047  0284  085D               	movf	??_vfpfcnvrt+4,w
  6048  0285  00F6               	movwf	fputc@fp
  6049  0286  318E  261D  3180   	fcall	_fputc
  6050  0289                     l3520:	
  6051                           
  6052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6053  0289  0020               	movlb	0	; select bank0
  6054  028A  0857               	movf	vfpfcnvrt@fmt,w
  6055  028B  0086               	movwf	6
  6056  028C  0187               	clrf	7
  6057  028D  3001               	movlw	1
  6058  028E  0781               	addwf	1,f
  6059  028F  3141               	addfsr 1,1
  6060  0290  1803               	skipnc
  6061  0291  0A81               	incf	1,f
  6062  0292  2A5D               	goto	l3508
  6063  0293                     l686:	
  6064  0293  0008               	return
  6065  0294                     __end_of_vfpfcnvrt:	
  6066                           
  6067                           	psect	text10
  6068  0294                     __ptext10:	
  6069 ;; *************** function _xtoa *****************
  6070 ;; Defined at:
  6071 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  fp              1    wreg     PTR struct _IO_FILE
  6074 ;;		 -> NULL(0), 
  6075 ;;  d               8   17[BANK0 ] unsigned long long 
  6076 ;;  x               1   25[BANK0 ] unsigned char 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  6079 ;;		 -> NULL(0), 
  6080 ;;  n               8   43[BANK0 ] unsigned long long 
  6081 ;;  c               2   53[BANK0 ] int 
  6082 ;;  i               2   51[BANK0 ] int 
  6083 ;;  w               2   41[BANK0 ] int 
  6084 ;;  p               2   39[BANK0 ] int 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  2   17[BANK0 ] int 
  6087 ;; Registers used:
  6088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6094 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;Total ram usage:       38 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    9
  6101 ;; This function calls:
  6102 ;;		_isalpha
  6103 ;;		_isupper
  6104 ;;		_pad
  6105 ;;		_toupper
  6106 ;; This function is called by:
  6107 ;;		_vfpfcnvrt
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _xtoa
  6113  0294                     _xtoa:	
  6114                           
  6115                           ;incstack = 0
  6116                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6117                           ;xtoa@fp stored from wreg
  6118  0294  0020               	movlb	0	; select bank0
  6119  0295  00C6               	movwf	xtoa@fp
  6120  0296                     l3314:	
  6121                           
  6122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6123  0296  0021               	movlb	1	; select bank1
  6124  0297  1BCC               	btfsc	(_prec+1)^(0+128),7
  6125  0298  2A9A               	goto	u3551
  6126  0299  2A9B               	goto	u3550
  6127  029A                     u3551:	
  6128  029A  2A9F               	goto	l630
  6129  029B                     u3550:	
  6130  029B                     l3316:	
  6131                           
  6132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6133  029B  30FD               	movlw	253
  6134  029C  05CD               	andwf	_flags^(0+128),f
  6135  029D  30FF               	movlw	255
  6136  029E  05CE               	andwf	(_flags+1)^(0+128),f
  6137  029F                     l630:	
  6138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 631:     }
  6139                           
  6140                           
  6141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6142  029F  084C               	movf	(_prec+1)^(0+128),w
  6143  02A0  3A80               	xorlw	128
  6144  02A1  0020               	movlb	0	; select bank0
  6145  02A2  00BA               	movwf	??_xtoa
  6146  02A3  3080               	movlw	128
  6147  02A4  023A               	subwf	??_xtoa,w
  6148  02A5  1D03               	skipz
  6149  02A6  2AAA               	goto	u3565
  6150  02A7  3001               	movlw	1
  6151  02A8  0021               	movlb	1	; select bank1
  6152  02A9  024B               	subwf	_prec^(0+128),w
  6153  02AA                     u3565:	
  6154  02AA  1803               	skipnc
  6155  02AB  2AAD               	goto	u3561
  6156  02AC  2AAE               	goto	u3560
  6157  02AD                     u3561:	
  6158  02AD  2AB4               	goto	l3320
  6159  02AE                     u3560:	
  6160  02AE                     l3318:	
  6161  02AE  3001               	movlw	1
  6162  02AF  0020               	movlb	0	; select bank0
  6163  02B0  00C7               	movwf	xtoa@p
  6164  02B1  3000               	movlw	0
  6165  02B2  00C8               	movwf	xtoa@p+1
  6166  02B3  2ABC               	goto	l634
  6167  02B4                     l3320:	
  6168  02B4  0021               	movlb	1	; select bank1
  6169  02B5  084C               	movf	(_prec+1)^(0+128),w
  6170  02B6  0020               	movlb	0	; select bank0
  6171  02B7  00C8               	movwf	xtoa@p+1
  6172  02B8  0021               	movlb	1	; select bank1
  6173  02B9  084B               	movf	_prec^(0+128),w
  6174  02BA  0020               	movlb	0	; select bank0
  6175  02BB  00C7               	movwf	xtoa@p
  6176  02BC                     l634:	
  6177                           
  6178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6179  02BC  0021               	movlb	1	; select bank1
  6180  02BD  084A               	movf	(_width+1)^(0+128),w
  6181  02BE  0020               	movlb	0	; select bank0
  6182  02BF  00CA               	movwf	xtoa@w+1
  6183  02C0  0021               	movlb	1	; select bank1
  6184  02C1  0849               	movf	_width^(0+128),w
  6185  02C2  0020               	movlb	0	; select bank0
  6186  02C3  00C9               	movwf	xtoa@w
  6187  02C4                     l3322:	
  6188                           
  6189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6190  02C4  0021               	movlb	1	; select bank1
  6191  02C5  1E4D               	btfss	_flags^(0+128),4
  6192  02C6  2AC8               	goto	u3571
  6193  02C7  2AC9               	goto	u3570
  6194  02C8                     u3571:	
  6195  02C8  2ACE               	goto	l3326
  6196  02C9                     u3570:	
  6197  02C9                     l3324:	
  6198                           
  6199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6200  02C9  30FE               	movlw	254
  6201  02CA  0020               	movlb	0	; select bank0
  6202  02CB  07C9               	addwf	xtoa@w,f
  6203  02CC  30FF               	movlw	255
  6204  02CD  3DCA               	addwfc	xtoa@w+1,f
  6205  02CE                     l3326:	
  6206                           
  6207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6208  02CE  0020               	movlb	0	; select bank0
  6209  02CF  0831               	movf	xtoa@d,w
  6210  02D0  00CB               	movwf	xtoa@n
  6211  02D1  0832               	movf	xtoa@d+1,w
  6212  02D2  00CC               	movwf	xtoa@n+1
  6213  02D3  0833               	movf	xtoa@d+2,w
  6214  02D4  00CD               	movwf	xtoa@n+2
  6215  02D5  0834               	movf	xtoa@d+3,w
  6216  02D6  00CE               	movwf	xtoa@n+3
  6217  02D7  0835               	movf	xtoa@d+4,w
  6218  02D8  00CF               	movwf	xtoa@n+4
  6219  02D9  0836               	movf	xtoa@d+5,w
  6220  02DA  00D0               	movwf	xtoa@n+5
  6221  02DB  0837               	movf	xtoa@d+6,w
  6222  02DC  00D1               	movwf	xtoa@n+6
  6223  02DD  0838               	movf	xtoa@d+7,w
  6224  02DE  00D2               	movwf	xtoa@n+7
  6225                           
  6226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6227  02DF  301F               	movlw	31
  6228  02E0  00D3               	movwf	xtoa@i
  6229  02E1  3000               	movlw	0
  6230  02E2  00D4               	movwf	xtoa@i+1
  6231  02E3                     l3328:	
  6232                           
  6233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6234  02E3  0022               	movlb	2	; select bank2
  6235  02E4  01D7               	clrf	(_dbuf^(0+256)+31)
  6236                           
  6237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6238  02E5  2B9C               	goto	l3358
  6239  02E6                     l3330:	
  6240                           
  6241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  6242  02E6  30FF               	movlw	255
  6243  02E7  0020               	movlb	0	; select bank0
  6244  02E8  07D3               	addwf	xtoa@i,f
  6245  02E9  30FF               	movlw	255
  6246  02EA  3DD4               	addwfc	xtoa@i+1,f
  6247                           
  6248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6249  02EB  300F               	movlw	15
  6250  02EC  054B               	andwf	xtoa@n,w
  6251  02ED  00D5               	movwf	xtoa@c
  6252  02EE  3000               	movlw	0
  6253  02EF  054C               	andwf	xtoa@n+1,w
  6254  02F0  00D6               	movwf	xtoa@c+1
  6255                           
  6256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6257  02F1  0856               	movf	xtoa@c+1,w
  6258  02F2  3A80               	xorlw	128
  6259  02F3  00BA               	movwf	??_xtoa
  6260  02F4  3080               	movlw	128
  6261  02F5  023A               	subwf	??_xtoa,w
  6262  02F6  1D03               	skipz
  6263  02F7  2AFA               	goto	u3585
  6264  02F8  300A               	movlw	10
  6265  02F9  0255               	subwf	xtoa@c,w
  6266  02FA                     u3585:	
  6267  02FA  1C03               	skipc
  6268  02FB  2AFD               	goto	u3581
  6269  02FC  2AFE               	goto	u3580
  6270  02FD                     u3581:	
  6271  02FD  2B06               	goto	l3334
  6272  02FE                     u3580:	
  6273  02FE                     l3332:	
  6274  02FE  0020               	movlb	0	; select bank0
  6275  02FF  0855               	movf	xtoa@c,w
  6276  0300  3E57               	addlw	87
  6277  0301  00D5               	movwf	xtoa@c
  6278  0302  3000               	movlw	0
  6279  0303  3D56               	addwfc	xtoa@c+1,w
  6280  0304  00D6               	movwf	xtoa@c+1
  6281  0305  2B0D               	goto	l3336
  6282  0306                     l3334:	
  6283  0306  0020               	movlb	0	; select bank0
  6284  0307  0855               	movf	xtoa@c,w
  6285  0308  3E30               	addlw	48
  6286  0309  00D5               	movwf	xtoa@c
  6287  030A  3000               	movlw	0
  6288  030B  3D56               	addwfc	xtoa@c+1,w
  6289  030C  00D6               	movwf	xtoa@c+1
  6290  030D                     l3336:	
  6291  030D  0839               	movf	xtoa@x,w
  6292  030E  3EBF               	addlw	191
  6293  030F  00BA               	movwf	??_xtoa
  6294  0310  30FF               	movlw	255
  6295  0311  1803               	skipnc
  6296  0312  3000               	movlw	0
  6297  0313  00BB               	movwf	??_xtoa+1
  6298  0314  3000               	movlw	0
  6299  0315  023B               	subwf	??_xtoa+1,w
  6300  0316  301A               	movlw	26
  6301  0317  1903               	skipnz
  6302  0318  023A               	subwf	??_xtoa,w
  6303  0319  1C03               	skipc
  6304  031A  2B1C               	goto	u3591
  6305  031B  2B1E               	goto	u3590
  6306  031C                     u3591:	
  6307  031C  3001               	movlw	1
  6308  031D  2B1F               	goto	u3600
  6309  031E                     u3590:	
  6310  031E  3000               	movlw	0
  6311  031F                     u3600:	
  6312  031F  00BC               	movwf	??_xtoa+2
  6313  0320  01BD               	clrf	??_xtoa+3
  6314  0321  083C               	movf	??_xtoa+2,w
  6315  0322  00C2               	movwf	_xtoa$731
  6316  0323  083D               	movf	??_xtoa+3,w
  6317  0324  00C3               	movwf	_xtoa$731+1
  6318  0325                     l3340:	
  6319  0325  0842               	movf	_xtoa$731,w
  6320  0326  0443               	iorwf	_xtoa$731+1,w
  6321  0327  1903               	btfsc	3,2
  6322  0328  2B2A               	goto	u3611
  6323  0329  2B2B               	goto	u3610
  6324  032A                     u3611:	
  6325  032A  2B5A               	goto	l3350
  6326  032B                     u3610:	
  6327  032B                     l3342:	
  6328  032B  3020               	movlw	32
  6329  032C  0455               	iorwf	xtoa@c,w
  6330  032D  00BA               	movwf	??_xtoa
  6331  032E  3000               	movlw	0
  6332  032F  0456               	iorwf	xtoa@c+1,w
  6333  0330  00BB               	movwf	??_xtoa+1
  6334  0331  083A               	movf	??_xtoa,w
  6335  0332  3E9F               	addlw	159
  6336  0333  00BC               	movwf	??_xtoa+2
  6337  0334  30FF               	movlw	255
  6338  0335  3D3B               	addwfc	??_xtoa+1,w
  6339  0336  00BD               	movwf	??_xtoa+3
  6340  0337  3000               	movlw	0
  6341  0338  023D               	subwf	??_xtoa+3,w
  6342  0339  301A               	movlw	26
  6343  033A  1903               	skipnz
  6344  033B  023C               	subwf	??_xtoa+2,w
  6345  033C  1C03               	skipc
  6346  033D  2B3F               	goto	u3621
  6347  033E  2B41               	goto	u3620
  6348  033F                     u3621:	
  6349  033F  3001               	movlw	1
  6350  0340  2B42               	goto	u3630
  6351  0341                     u3620:	
  6352  0341  3000               	movlw	0
  6353  0342                     u3630:	
  6354  0342  00BE               	movwf	??_xtoa+4
  6355  0343  01BF               	clrf	??_xtoa+5
  6356  0344  083E               	movf	??_xtoa+4,w
  6357  0345  00C4               	movwf	_xtoa$732
  6358  0346  083F               	movf	??_xtoa+5,w
  6359  0347  00C5               	movwf	_xtoa$732+1
  6360  0348                     l3346:	
  6361  0348  0844               	movf	_xtoa$732,w
  6362  0349  0445               	iorwf	_xtoa$732+1,w
  6363  034A  1903               	btfsc	3,2
  6364  034B  2B4D               	goto	u3641
  6365  034C  2B4E               	goto	u3640
  6366  034D                     u3641:	
  6367  034D  2B5A               	goto	l3350
  6368  034E                     u3640:	
  6369  034E                     l3348:	
  6370                           
  6371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6372  034E  0856               	movf	xtoa@c+1,w
  6373  034F  00F8               	movwf	toupper@c+1
  6374  0350  0855               	movf	xtoa@c,w
  6375  0351  00F7               	movwf	toupper@c
  6376  0352  318C  24A6  3182   	fcall	_toupper
  6377  0355  0878               	movf	?_toupper+1,w
  6378  0356  0020               	movlb	0	; select bank0
  6379  0357  00D6               	movwf	xtoa@c+1
  6380  0358  0877               	movf	?_toupper,w
  6381  0359  00D5               	movwf	xtoa@c
  6382  035A                     l3350:	
  6383                           
  6384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6385  035A  0855               	movf	xtoa@c,w
  6386  035B  00BA               	movwf	??_xtoa
  6387  035C  0853               	movf	xtoa@i,w
  6388  035D  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6389  035E  0086               	movwf	6
  6390  035F  3001               	movlw	1	; select bank2/3
  6391  0360  0087               	movwf	7
  6392  0361  083A               	movf	??_xtoa,w
  6393  0362  0081               	movwf	1
  6394  0363                     l3352:	
  6395                           
  6396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  6397  0363  30FF               	movlw	255
  6398  0364  07C7               	addwf	xtoa@p,f
  6399  0365  30FF               	movlw	255
  6400  0366  3DC8               	addwfc	xtoa@p+1,f
  6401  0367                     l3354:	
  6402                           
  6403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  6404  0367  30FF               	movlw	255
  6405  0368  07C9               	addwf	xtoa@w,f
  6406  0369  30FF               	movlw	255
  6407  036A  3DCA               	addwfc	xtoa@w+1,f
  6408  036B                     l3356:	
  6409                           
  6410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6411  036B  304B               	movlw	low xtoa@n
  6412  036C  0086               	movwf	6
  6413  036D  3000               	movlw	high xtoa@n
  6414  036E  0087               	movwf	7
  6415  036F  3F40               	moviw [0]fsr1
  6416  0370  00BA               	movwf	??_xtoa
  6417  0371  3F41               	moviw [1]fsr1
  6418  0372  00BB               	movwf	??_xtoa+1
  6419  0373  3F42               	moviw [2]fsr1
  6420  0374  00BC               	movwf	??_xtoa+2
  6421  0375  3F43               	moviw [3]fsr1
  6422  0376  00BD               	movwf	??_xtoa+3
  6423  0377  3F44               	moviw [4]fsr1
  6424  0378  00BE               	movwf	??_xtoa+4
  6425  0379  3F45               	moviw [5]fsr1
  6426  037A  00BF               	movwf	??_xtoa+5
  6427  037B  3F46               	moviw [6]fsr1
  6428  037C  00C0               	movwf	??_xtoa+6
  6429  037D  3F47               	moviw [7]fsr1
  6430  037E  00C1               	movwf	??_xtoa+7
  6431  037F  3004               	movlw	4
  6432  0380                     u3655:	
  6433  0380  0020               	movlb	0	; select bank0
  6434  0381  36C1               	lsrf	??_xtoa+7,f
  6435  0382  0CC0               	rrf	??_xtoa+6,f
  6436  0383  0CBF               	rrf	??_xtoa+5,f
  6437  0384  0CBE               	rrf	??_xtoa+4,f
  6438  0385  0CBD               	rrf	??_xtoa+3,f
  6439  0386  0CBC               	rrf	??_xtoa+2,f
  6440  0387  0CBB               	rrf	??_xtoa+1,f
  6441  0388  0CBA               	rrf	??_xtoa,f
  6442  0389                     u3650:	
  6443  0389  0B89               	decfsz	9,f
  6444  038A  2B80               	goto	u3655
  6445  038B  0020               	movlb	0	; select bank0
  6446  038C  0841               	movf	??_xtoa+7,w
  6447  038D  00D2               	movwf	xtoa@n+7
  6448  038E  0840               	movf	??_xtoa+6,w
  6449  038F  00D1               	movwf	xtoa@n+6
  6450  0390  083F               	movf	??_xtoa+5,w
  6451  0391  00D0               	movwf	xtoa@n+5
  6452  0392  083E               	movf	??_xtoa+4,w
  6453  0393  00CF               	movwf	xtoa@n+4
  6454  0394  083D               	movf	??_xtoa+3,w
  6455  0395  00CE               	movwf	xtoa@n+3
  6456  0396  083C               	movf	??_xtoa+2,w
  6457  0397  00CD               	movwf	xtoa@n+2
  6458  0398  083B               	movf	??_xtoa+1,w
  6459  0399  00CC               	movwf	xtoa@n+1
  6460  039A  083A               	movf	??_xtoa,w
  6461  039B  00CB               	movwf	xtoa@n
  6462  039C                     l3358:	
  6463                           
  6464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6465  039C  0020               	movlb	0	; select bank0
  6466  039D  0854               	movf	xtoa@i+1,w
  6467  039E  3A80               	xorlw	128
  6468  039F  00BA               	movwf	??_xtoa
  6469  03A0  3080               	movlw	128
  6470  03A1  023A               	subwf	??_xtoa,w
  6471  03A2  1D03               	skipz
  6472  03A3  2BA6               	goto	u3665
  6473  03A4  3002               	movlw	2
  6474  03A5  0253               	subwf	xtoa@i,w
  6475  03A6                     u3665:	
  6476  03A6  1C03               	skipc
  6477  03A7  2BA9               	goto	u3661
  6478  03A8  2BAA               	goto	u3660
  6479  03A9                     u3661:	
  6480  03A9  2BD7               	goto	l655
  6481  03AA                     u3660:	
  6482  03AA                     l3360:	
  6483  03AA  0020               	movlb	0	; select bank0
  6484  03AB  084B               	movf	xtoa@n,w
  6485  03AC  044C               	iorwf	xtoa@n+1,w
  6486  03AD  044D               	iorwf	xtoa@n+2,w
  6487  03AE  044E               	iorwf	xtoa@n+3,w
  6488  03AF  044F               	iorwf	xtoa@n+4,w
  6489  03B0  0450               	iorwf	xtoa@n+5,w
  6490  03B1  0451               	iorwf	xtoa@n+6,w
  6491  03B2  0452               	iorwf	xtoa@n+7,w
  6492  03B3  1D03               	skipz
  6493  03B4  2BB6               	goto	u3671
  6494  03B5  2BB7               	goto	u3670
  6495  03B6                     u3671:	
  6496  03B6  2AE6               	goto	l3330
  6497  03B7                     u3670:	
  6498  03B7                     l3362:	
  6499  03B7  0848               	movf	xtoa@p+1,w
  6500  03B8  3A80               	xorlw	128
  6501  03B9  00BA               	movwf	??_xtoa
  6502  03BA  3080               	movlw	128
  6503  03BB  023A               	subwf	??_xtoa,w
  6504  03BC  1D03               	skipz
  6505  03BD  2BC0               	goto	u3685
  6506  03BE  3001               	movlw	1
  6507  03BF  0247               	subwf	xtoa@p,w
  6508  03C0                     u3685:	
  6509  03C0  1803               	skipnc
  6510  03C1  2BC3               	goto	u3681
  6511  03C2  2BC4               	goto	u3680
  6512  03C3                     u3681:	
  6513  03C3  2AE6               	goto	l3330
  6514  03C4                     u3680:	
  6515  03C4                     l3364:	
  6516  03C4  0020               	movlb	0	; select bank0
  6517  03C5  084A               	movf	xtoa@w+1,w
  6518  03C6  3A80               	xorlw	128
  6519  03C7  00BA               	movwf	??_xtoa
  6520  03C8  3080               	movlw	128
  6521  03C9  023A               	subwf	??_xtoa,w
  6522  03CA  1D03               	skipz
  6523  03CB  2BCE               	goto	u3695
  6524  03CC  3001               	movlw	1
  6525  03CD  0249               	subwf	xtoa@w,w
  6526  03CE                     u3695:	
  6527  03CE  1C03               	skipc
  6528  03CF  2BD1               	goto	u3691
  6529  03D0  2BD2               	goto	u3690
  6530  03D1                     u3691:	
  6531  03D1  2BD7               	goto	l655
  6532  03D2                     u3690:	
  6533  03D2                     l3366:	
  6534  03D2  0021               	movlb	1	; select bank1
  6535  03D3  18CD               	btfsc	_flags^(0+128),1
  6536  03D4  2BD6               	goto	u3701
  6537  03D5  2BD7               	goto	u3700
  6538  03D6                     u3701:	
  6539  03D6  2AE6               	goto	l3330
  6540  03D7                     u3700:	
  6541  03D7                     l655:	
  6542                           
  6543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6544  03D7  0021               	movlb	1	; select bank1
  6545  03D8  1E4D               	btfss	_flags^(0+128),4
  6546  03D9  2BDB               	goto	u3711
  6547  03DA  2BDC               	goto	u3710
  6548  03DB                     u3711:	
  6549  03DB  2BF7               	goto	l3374
  6550  03DC                     u3710:	
  6551  03DC                     l3368:	
  6552                           
  6553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  6554  03DC  30FF               	movlw	255
  6555  03DD  0020               	movlb	0	; select bank0
  6556  03DE  07D3               	addwf	xtoa@i,f
  6557  03DF  30FF               	movlw	255
  6558  03E0  3DD4               	addwfc	xtoa@i+1,f
  6559  03E1                     l3370:	
  6560                           
  6561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6562  03E1  0839               	movf	xtoa@x,w
  6563  03E2  00BA               	movwf	??_xtoa
  6564  03E3  0853               	movf	xtoa@i,w
  6565  03E4  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6566  03E5  0086               	movwf	6
  6567  03E6  3001               	movlw	1	; select bank2/3
  6568  03E7  0087               	movwf	7
  6569  03E8  083A               	movf	??_xtoa,w
  6570  03E9  0081               	movwf	1
  6571  03EA                     l3372:	
  6572                           
  6573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  6574  03EA  30FF               	movlw	255
  6575  03EB  07D3               	addwf	xtoa@i,f
  6576  03EC  30FF               	movlw	255
  6577  03ED  3DD4               	addwfc	xtoa@i+1,f
  6578                           
  6579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6580  03EE  3030               	movlw	48
  6581  03EF  00BA               	movwf	??_xtoa
  6582  03F0  0853               	movf	xtoa@i,w
  6583  03F1  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6584  03F2  0086               	movwf	6
  6585  03F3  3001               	movlw	1	; select bank2/3
  6586  03F4  0087               	movwf	7
  6587  03F5  083A               	movf	??_xtoa,w
  6588  03F6  0081               	movwf	1
  6589  03F7                     l3374:	
  6590                           
  6591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6592  03F7  0020               	movlb	0	; select bank0
  6593  03F8  0853               	movf	xtoa@i,w
  6594  03F9  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6595  03FA  00BA               	movwf	??_xtoa
  6596  03FB  083A               	movf	??_xtoa,w
  6597  03FC  00A8               	movwf	pad@buf
  6598  03FD  084A               	movf	xtoa@w+1,w
  6599  03FE  00AA               	movwf	pad@p+1
  6600  03FF  0849               	movf	xtoa@w,w
  6601  0400  00A9               	movwf	pad@p
  6602  0401  0846               	movf	xtoa@fp,w
  6603  0402  3187  2766  3182   	fcall	_pad
  6604  0405  0020               	movlb	0	; select bank0
  6605  0406  0829               	movf	?_pad+1,w
  6606  0407  00B2               	movwf	?_xtoa+1
  6607  0408  0828               	movf	?_pad,w
  6608  0409  00B1               	movwf	?_xtoa
  6609  040A                     l657:	
  6610  040A  0008               	return
  6611  040B                     __end_of_xtoa:	
  6612                           
  6613                           	psect	text11
  6614  0CA6                     __ptext11:	
  6615 ;; *************** function _toupper *****************
  6616 ;; Defined at:
  6617 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  c               2    7[COMMON] int 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  2    7[COMMON] int 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;Total ram usage:        8 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    5
  6638 ;; This function calls:
  6639 ;;		_islower
  6640 ;; This function is called by:
  6641 ;;		_xtoa
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function _toupper
  6647  0CA6                     _toupper:	
  6648  0CA6                     l3148:	
  6649                           ;incstack = 0
  6650                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6651                           
  6652  0CA6  0877               	movf	toupper@c,w
  6653  0CA7  3E9F               	addlw	159
  6654  0CA8  0020               	movlb	0	; select bank0
  6655  0CA9  00A0               	movwf	??_toupper
  6656  0CAA  30FF               	movlw	255
  6657  0CAB  3D78               	addwfc	toupper@c+1,w
  6658  0CAC  00A1               	movwf	??_toupper+1
  6659  0CAD  3000               	movlw	0
  6660  0CAE  0221               	subwf	??_toupper+1,w
  6661  0CAF  301A               	movlw	26
  6662  0CB0  1903               	skipnz
  6663  0CB1  0220               	subwf	??_toupper,w
  6664  0CB2  1C03               	skipc
  6665  0CB3  2CB5               	goto	u3071
  6666  0CB4  2CB7               	goto	u3070
  6667  0CB5                     u3071:	
  6668  0CB5  3001               	movlw	1
  6669  0CB6  2CB8               	goto	u3080
  6670  0CB7                     u3070:	
  6671  0CB7  3000               	movlw	0
  6672  0CB8                     u3080:	
  6673  0CB8  00A2               	movwf	??_toupper+2
  6674  0CB9  01A3               	clrf	??_toupper+3
  6675  0CBA  0822               	movf	??_toupper+2,w
  6676  0CBB  00F9               	movwf	_toupper$1134
  6677  0CBC  0823               	movf	??_toupper+3,w
  6678  0CBD  00FA               	movwf	_toupper$1134+1
  6679  0CBE                     l3152:	
  6680  0CBE  0879               	movf	_toupper$1134,w
  6681  0CBF  047A               	iorwf	_toupper$1134+1,w
  6682  0CC0  1903               	btfsc	3,2
  6683  0CC1  2CC3               	goto	u3091
  6684  0CC2  2CC4               	goto	u3090
  6685  0CC3                     u3091:	
  6686  0CC3  2CCB               	goto	l1252
  6687  0CC4                     u3090:	
  6688  0CC4                     l3154:	
  6689  0CC4  305F               	movlw	95
  6690  0CC5  0577               	andwf	toupper@c,w
  6691  0CC6  00F7               	movwf	?_toupper
  6692  0CC7  3000               	movlw	0
  6693  0CC8  0578               	andwf	toupper@c+1,w
  6694  0CC9  00F8               	movwf	?_toupper+1
  6695  0CCA  2CCB               	goto	l1257
  6696  0CCB                     l1252:	
  6697  0CCB                     l1257:	
  6698  0CCB  0008               	return
  6699  0CCC                     __end_of_toupper:	
  6700                           
  6701                           	psect	text12
  6702  0B9A                     __ptext12:	
  6703 ;; *************** function _islower *****************
  6704 ;; Defined at:
  6705 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  c               2    1[COMMON] int 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  2    1[COMMON] int 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;Total ram usage:        6 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    4
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_toupper
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _islower
  6735  0B9A                     _islower:	
  6736  0B9A                     l3112:	
  6737                           ;incstack = 0
  6738                           ; Regs used in _islower: [wreg+status,2+status,0]
  6739                           
  6740  0B9A  0871               	movf	islower@c,w
  6741  0B9B  3E9F               	addlw	159
  6742  0B9C  00F3               	movwf	??_islower
  6743  0B9D  30FF               	movlw	255
  6744  0B9E  3D72               	addwfc	islower@c+1,w
  6745  0B9F  00F4               	movwf	??_islower+1
  6746  0BA0  3000               	movlw	0
  6747  0BA1  0274               	subwf	??_islower+1,w
  6748  0BA2  301A               	movlw	26
  6749  0BA3  1903               	skipnz
  6750  0BA4  0273               	subwf	??_islower,w
  6751  0BA5  1C03               	skipc
  6752  0BA6  2BA8               	goto	u2961
  6753  0BA7  2BAA               	goto	u2960
  6754  0BA8                     u2961:	
  6755  0BA8  3001               	movlw	1
  6756  0BA9  2BAB               	goto	u2970
  6757  0BAA                     u2960:	
  6758  0BAA  3000               	movlw	0
  6759  0BAB                     u2970:	
  6760  0BAB  00F5               	movwf	??_islower+2
  6761  0BAC  01F6               	clrf	??_islower+3
  6762  0BAD  0875               	movf	??_islower+2,w
  6763  0BAE  00F1               	movwf	?_islower
  6764  0BAF  0876               	movf	??_islower+3,w
  6765  0BB0  00F2               	movwf	?_islower+1
  6766  0BB1                     l1269:	
  6767  0BB1  0008               	return
  6768  0BB2                     __end_of_islower:	
  6769                           
  6770                           	psect	text13
  6771  0B82                     __ptext13:	
  6772 ;; *************** function _isupper *****************
  6773 ;; Defined at:
  6774 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  c               2    1[COMMON] int 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2    1[COMMON] int 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;Total ram usage:        6 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    4
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_xtoa
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _isupper
  6804  0B82                     _isupper:	
  6805  0B82                     l3140:	
  6806                           ;incstack = 0
  6807                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6808                           
  6809  0B82  0871               	movf	isupper@c,w
  6810  0B83  3EBF               	addlw	191
  6811  0B84  00F3               	movwf	??_isupper
  6812  0B85  30FF               	movlw	255
  6813  0B86  3D72               	addwfc	isupper@c+1,w
  6814  0B87  00F4               	movwf	??_isupper+1
  6815  0B88  3000               	movlw	0
  6816  0B89  0274               	subwf	??_isupper+1,w
  6817  0B8A  301A               	movlw	26
  6818  0B8B  1903               	skipnz
  6819  0B8C  0273               	subwf	??_isupper,w
  6820  0B8D  1C03               	skipc
  6821  0B8E  2B90               	goto	u3031
  6822  0B8F  2B92               	goto	u3030
  6823  0B90                     u3031:	
  6824  0B90  3001               	movlw	1
  6825  0B91  2B93               	goto	u3040
  6826  0B92                     u3030:	
  6827  0B92  3000               	movlw	0
  6828  0B93                     u3040:	
  6829  0B93  00F5               	movwf	??_isupper+2
  6830  0B94  01F6               	clrf	??_isupper+3
  6831  0B95  0875               	movf	??_isupper+2,w
  6832  0B96  00F1               	movwf	?_isupper
  6833  0B97  0876               	movf	??_isupper+3,w
  6834  0B98  00F2               	movwf	?_isupper+1
  6835  0B99                     l1211:	
  6836  0B99  0008               	return
  6837  0B9A                     __end_of_isupper:	
  6838                           
  6839                           	psect	text14
  6840  0C01                     __ptext14:	
  6841 ;; *************** function _isalpha *****************
  6842 ;; Defined at:
  6843 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  c               2    1[COMMON] int 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2    1[COMMON] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;Total ram usage:        8 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_xtoa
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function _isalpha
  6873  0C01                     _isalpha:	
  6874  0C01                     l3144:	
  6875                           ;incstack = 0
  6876                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6877                           
  6878  0C01  3020               	movlw	32
  6879  0C02  0471               	iorwf	isalpha@c,w
  6880  0C03  00F3               	movwf	??_isalpha
  6881  0C04  3000               	movlw	0
  6882  0C05  0472               	iorwf	isalpha@c+1,w
  6883  0C06  00F4               	movwf	??_isalpha+1
  6884  0C07  0873               	movf	??_isalpha,w
  6885  0C08  3E9F               	addlw	159
  6886  0C09  00F5               	movwf	??_isalpha+2
  6887  0C0A  30FF               	movlw	255
  6888  0C0B  3D74               	addwfc	??_isalpha+1,w
  6889  0C0C  00F6               	movwf	??_isalpha+3
  6890  0C0D  3000               	movlw	0
  6891  0C0E  0276               	subwf	??_isalpha+3,w
  6892  0C0F  301A               	movlw	26
  6893  0C10  1903               	skipnz
  6894  0C11  0275               	subwf	??_isalpha+2,w
  6895  0C12  1C03               	skipc
  6896  0C13  2C15               	goto	u3051
  6897  0C14  2C17               	goto	u3050
  6898  0C15                     u3051:	
  6899  0C15  3001               	movlw	1
  6900  0C16  2C18               	goto	u3060
  6901  0C17                     u3050:	
  6902  0C17  3000               	movlw	0
  6903  0C18                     u3060:	
  6904  0C18  00F7               	movwf	??_isalpha+4
  6905  0C19  01F8               	clrf	??_isalpha+5
  6906  0C1A  0877               	movf	??_isalpha+4,w
  6907  0C1B  00F1               	movwf	?_isalpha
  6908  0C1C  0878               	movf	??_isalpha+5,w
  6909  0C1D  00F2               	movwf	?_isalpha+1
  6910  0C1E                     l1191:	
  6911  0C1E  0008               	return
  6912  0C1F                     __end_of_isalpha:	
  6913                           
  6914                           	psect	text15
  6915  040B                     __ptext15:	
  6916 ;; *************** function _dtoa *****************
  6917 ;; Defined at:
  6918 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  fp              1    wreg     PTR struct _IO_FILE
  6921 ;;		 -> NULL(0), 
  6922 ;;  d               8   17[BANK0 ] long long 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  fp              1   30[BANK0 ] PTR struct _IO_FILE
  6925 ;;		 -> NULL(0), 
  6926 ;;  n               8   37[BANK0 ] long long 
  6927 ;;  i               2   45[BANK0 ] int 
  6928 ;;  s               2   35[BANK0 ] int 
  6929 ;;  w               2   33[BANK0 ] int 
  6930 ;;  p               2   31[BANK0 ] int 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  2   17[BANK0 ] int 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6940 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;Total ram usage:       30 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    9
  6947 ;; This function calls:
  6948 ;;		___aodiv
  6949 ;;		___aomod
  6950 ;;		_abs
  6951 ;;		_pad
  6952 ;; This function is called by:
  6953 ;;		_vfpfcnvrt
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _dtoa
  6959  040B                     _dtoa:	
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6963                           ;dtoa@fp stored from wreg
  6964  040B  0020               	movlb	0	; select bank0
  6965  040C  00BE               	movwf	dtoa@fp
  6966  040D                     l3256:	
  6967                           
  6968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6969  040D  0831               	movf	dtoa@d,w
  6970  040E  00C5               	movwf	dtoa@n
  6971  040F  0832               	movf	dtoa@d+1,w
  6972  0410  00C6               	movwf	dtoa@n+1
  6973  0411  0833               	movf	dtoa@d+2,w
  6974  0412  00C7               	movwf	dtoa@n+2
  6975  0413  0834               	movf	dtoa@d+3,w
  6976  0414  00C8               	movwf	dtoa@n+3
  6977  0415  0835               	movf	dtoa@d+4,w
  6978  0416  00C9               	movwf	dtoa@n+4
  6979  0417  0836               	movf	dtoa@d+5,w
  6980  0418  00CA               	movwf	dtoa@n+5
  6981  0419  0837               	movf	dtoa@d+6,w
  6982  041A  00CB               	movwf	dtoa@n+6
  6983  041B  0838               	movf	dtoa@d+7,w
  6984  041C  00CC               	movwf	dtoa@n+7
  6985  041D                     l3258:	
  6986                           
  6987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6988  041D  3045               	movlw	low dtoa@n
  6989  041E  0086               	movwf	6
  6990  041F  3000               	movlw	high dtoa@n
  6991  0420  0087               	movwf	7
  6992  0421  3F47               	moviw [7]fsr1
  6993  0422  00B9               	movwf	??_dtoa
  6994  0423  1BB9               	btfsc	??_dtoa,7
  6995  0424  2C26               	goto	u3391
  6996  0425  2C28               	goto	u3390
  6997  0426                     u3391:	
  6998  0426  3001               	movlw	1
  6999  0427  2C29               	goto	u3400
  7000  0428                     u3390:	
  7001  0428  3000               	movlw	0
  7002  0429                     u3400:	
  7003  0429  0020               	movlb	0	; select bank0
  7004  042A  00BA               	movwf	??_dtoa+1
  7005  042B  01BB               	clrf	??_dtoa+2
  7006  042C  083A               	movf	??_dtoa+1,w
  7007  042D  00C3               	movwf	dtoa@s
  7008  042E  083B               	movf	??_dtoa+2,w
  7009  042F  00C4               	movwf	dtoa@s+1
  7010  0430                     l3260:	
  7011                           
  7012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7013  0430  0843               	movf	dtoa@s,w
  7014  0431  0444               	iorwf	dtoa@s+1,w
  7015  0432  1903               	btfsc	3,2
  7016  0433  2C35               	goto	u3411
  7017  0434  2C36               	goto	u3410
  7018  0435                     u3411:	
  7019  0435  2C54               	goto	l604
  7020  0436                     u3410:	
  7021  0436                     l3262:	
  7022                           
  7023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7024  0436  09C5               	comf	dtoa@n,f
  7025  0437  09C6               	comf	dtoa@n+1,f
  7026  0438  09C7               	comf	dtoa@n+2,f
  7027  0439  09C8               	comf	dtoa@n+3,f
  7028  043A  09C9               	comf	dtoa@n+4,f
  7029  043B  09CA               	comf	dtoa@n+5,f
  7030  043C  09CB               	comf	dtoa@n+6,f
  7031  043D  09CC               	comf	dtoa@n+7,f
  7032  043E  0AC5               	incf	dtoa@n,f
  7033  043F  1D03               	skipz
  7034  0440  2C54               	goto	u342lld
  7035  0441  0AC6               	incf	dtoa@n+1,f
  7036  0442  1D03               	skipz
  7037  0443  2C54               	goto	u342lld
  7038  0444  0AC7               	incf	dtoa@n+2,f
  7039  0445  1D03               	skipz
  7040  0446  2C54               	goto	u342lld
  7041  0447  0AC8               	incf	dtoa@n+3,f
  7042  0448  1D03               	skipz
  7043  0449  2C54               	goto	u342lld
  7044  044A  0AC9               	incf	dtoa@n+4,f
  7045  044B  1D03               	skipz
  7046  044C  2C54               	goto	u342lld
  7047  044D  0ACA               	incf	dtoa@n+5,f
  7048  044E  1D03               	skipz
  7049  044F  2C54               	goto	u342lld
  7050  0450  0ACB               	incf	dtoa@n+6,f
  7051  0451  1D03               	skipz
  7052  0452  2C54               	goto	u342lld
  7053  0453  0ACC               	incf	dtoa@n+7,f
  7054  0454                     u342lld:	
  7055  0454                     l604:	
  7056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 284:     }
  7057                           
  7058                           
  7059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7060  0454  0021               	movlb	1	; select bank1
  7061  0455  1BCC               	btfsc	(_prec+1)^(0+128),7
  7062  0456  2C58               	goto	u3431
  7063  0457  2C59               	goto	u3430
  7064  0458                     u3431:	
  7065  0458  2C5D               	goto	l605
  7066  0459                     u3430:	
  7067  0459                     l3264:	
  7068                           
  7069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7070  0459  30FD               	movlw	253
  7071  045A  05CD               	andwf	_flags^(0+128),f
  7072  045B  30FF               	movlw	255
  7073  045C  05CE               	andwf	(_flags+1)^(0+128),f
  7074  045D                     l605:	
  7075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 289:     }
  7076                           
  7077                           
  7078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7079  045D  084C               	movf	(_prec+1)^(0+128),w
  7080  045E  3A80               	xorlw	128
  7081  045F  0020               	movlb	0	; select bank0
  7082  0460  00B9               	movwf	??_dtoa
  7083  0461  3080               	movlw	128
  7084  0462  0239               	subwf	??_dtoa,w
  7085  0463  1D03               	skipz
  7086  0464  2C68               	goto	u3445
  7087  0465  3001               	movlw	1
  7088  0466  0021               	movlb	1	; select bank1
  7089  0467  024B               	subwf	_prec^(0+128),w
  7090  0468                     u3445:	
  7091  0468  1803               	skipnc
  7092  0469  2C6B               	goto	u3441
  7093  046A  2C6C               	goto	u3440
  7094  046B                     u3441:	
  7095  046B  2C72               	goto	l3268
  7096  046C                     u3440:	
  7097  046C                     l3266:	
  7098  046C  3001               	movlw	1
  7099  046D  0020               	movlb	0	; select bank0
  7100  046E  00BF               	movwf	dtoa@p
  7101  046F  3000               	movlw	0
  7102  0470  00C0               	movwf	dtoa@p+1
  7103  0471  2C7A               	goto	l609
  7104  0472                     l3268:	
  7105  0472  0021               	movlb	1	; select bank1
  7106  0473  084C               	movf	(_prec+1)^(0+128),w
  7107  0474  0020               	movlb	0	; select bank0
  7108  0475  00C0               	movwf	dtoa@p+1
  7109  0476  0021               	movlb	1	; select bank1
  7110  0477  084B               	movf	_prec^(0+128),w
  7111  0478  0020               	movlb	0	; select bank0
  7112  0479  00BF               	movwf	dtoa@p
  7113  047A                     l609:	
  7114                           
  7115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7116  047A  0021               	movlb	1	; select bank1
  7117  047B  084A               	movf	(_width+1)^(0+128),w
  7118  047C  0020               	movlb	0	; select bank0
  7119  047D  00C2               	movwf	dtoa@w+1
  7120  047E  0021               	movlb	1	; select bank1
  7121  047F  0849               	movf	_width^(0+128),w
  7122  0480  0020               	movlb	0	; select bank0
  7123  0481  00C1               	movwf	dtoa@w
  7124  0482                     l3270:	
  7125                           
  7126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7127  0482  0843               	movf	dtoa@s,w
  7128  0483  0444               	iorwf	dtoa@s+1,w
  7129  0484  1D03               	btfss	3,2
  7130  0485  2C87               	goto	u3451
  7131  0486  2C88               	goto	u3450
  7132  0487                     u3451:	
  7133  0487  2C8D               	goto	l3274
  7134  0488                     u3450:	
  7135  0488                     l3272:	
  7136  0488  0021               	movlb	1	; select bank1
  7137  0489  1D4D               	btfss	_flags^(0+128),2
  7138  048A  2C8C               	goto	u3461
  7139  048B  2C8D               	goto	u3460
  7140  048C                     u3461:	
  7141  048C  2C92               	goto	l610
  7142  048D                     u3460:	
  7143  048D                     l3274:	
  7144                           
  7145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7146  048D  30FF               	movlw	255
  7147  048E  0020               	movlb	0	; select bank0
  7148  048F  07C1               	addwf	dtoa@w,f
  7149  0490  30FF               	movlw	255
  7150  0491  3DC2               	addwfc	dtoa@w+1,f
  7151  0492                     l610:	
  7152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 294:     }
  7153                           
  7154                           
  7155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7156  0492  301F               	movlw	31
  7157  0493  0020               	movlb	0	; select bank0
  7158  0494  00CD               	movwf	dtoa@i
  7159  0495  3000               	movlw	0
  7160  0496  00CE               	movwf	dtoa@i+1
  7161  0497                     l3276:	
  7162                           
  7163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7164  0497  0022               	movlb	2	; select bank2
  7165  0498  01D7               	clrf	(_dbuf^(0+256)+31)
  7166                           
  7167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7168  0499  2D03               	goto	l613
  7169  049A                     l3278:	
  7170                           
  7171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7172  049A  30FF               	movlw	255
  7173  049B  0020               	movlb	0	; select bank0
  7174  049C  07CD               	addwf	dtoa@i,f
  7175  049D  30FF               	movlw	255
  7176  049E  3DCE               	addwfc	dtoa@i+1,f
  7177  049F                     l3280:	
  7178                           
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7180  049F  300A               	movlw	10
  7181  04A0  00A0               	movwf	___aomod@divisor
  7182  04A1  01A1               	clrf	___aomod@divisor+1
  7183  04A2  01A2               	clrf	___aomod@divisor+2
  7184  04A3  01A3               	clrf	___aomod@divisor+3
  7185  04A4  01A4               	clrf	___aomod@divisor+4
  7186  04A5  01A5               	clrf	___aomod@divisor+5
  7187  04A6  01A6               	clrf	___aomod@divisor+6
  7188  04A7  01A7               	clrf	___aomod@divisor+7
  7189  04A8  0845               	movf	dtoa@n,w
  7190  04A9  00A8               	movwf	___aomod@dividend
  7191  04AA  0846               	movf	dtoa@n+1,w
  7192  04AB  00A9               	movwf	___aomod@dividend+1
  7193  04AC  0847               	movf	dtoa@n+2,w
  7194  04AD  00AA               	movwf	___aomod@dividend+2
  7195  04AE  0848               	movf	dtoa@n+3,w
  7196  04AF  00AB               	movwf	___aomod@dividend+3
  7197  04B0  0849               	movf	dtoa@n+4,w
  7198  04B1  00AC               	movwf	___aomod@dividend+4
  7199  04B2  084A               	movf	dtoa@n+5,w
  7200  04B3  00AD               	movwf	___aomod@dividend+5
  7201  04B4  084B               	movf	dtoa@n+6,w
  7202  04B5  00AE               	movwf	___aomod@dividend+6
  7203  04B6  084C               	movf	dtoa@n+7,w
  7204  04B7  00AF               	movwf	___aomod@dividend+7
  7205  04B8  3186  267C  3184   	fcall	___aomod
  7206  04BB  0020               	movlb	0	; select bank0
  7207  04BC  0821               	movf	?___aomod+1,w
  7208  04BD  00F5               	movwf	abs@a+1
  7209  04BE  0820               	movf	?___aomod,w
  7210  04BF  00F4               	movwf	abs@a
  7211  04C0  318B  23B2  3184   	fcall	_abs
  7212  04C3  0874               	movf	?_abs,w
  7213  04C4  3E30               	addlw	48
  7214  04C5  0020               	movlb	0	; select bank0
  7215  04C6  00B9               	movwf	??_dtoa
  7216  04C7  084D               	movf	dtoa@i,w
  7217  04C8  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7218  04C9  0086               	movwf	6
  7219  04CA  3001               	movlw	1	; select bank2/3
  7220  04CB  0087               	movwf	7
  7221  04CC  0839               	movf	??_dtoa,w
  7222  04CD  0081               	movwf	1
  7223  04CE                     l3282:	
  7224                           
  7225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  7226  04CE  30FF               	movlw	255
  7227  04CF  07BF               	addwf	dtoa@p,f
  7228  04D0  30FF               	movlw	255
  7229  04D1  3DC0               	addwfc	dtoa@p+1,f
  7230  04D2                     l3284:	
  7231                           
  7232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  7233  04D2  30FF               	movlw	255
  7234  04D3  07C1               	addwf	dtoa@w,f
  7235  04D4  30FF               	movlw	255
  7236  04D5  3DC2               	addwfc	dtoa@w+1,f
  7237  04D6                     l3286:	
  7238                           
  7239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7240  04D6  300A               	movlw	10
  7241  04D7  00A0               	movwf	___aodiv@divisor
  7242  04D8  01A1               	clrf	___aodiv@divisor+1
  7243  04D9  01A2               	clrf	___aodiv@divisor+2
  7244  04DA  01A3               	clrf	___aodiv@divisor+3
  7245  04DB  01A4               	clrf	___aodiv@divisor+4
  7246  04DC  01A5               	clrf	___aodiv@divisor+5
  7247  04DD  01A6               	clrf	___aodiv@divisor+6
  7248  04DE  01A7               	clrf	___aodiv@divisor+7
  7249  04DF  0845               	movf	dtoa@n,w
  7250  04E0  00A8               	movwf	___aodiv@dividend
  7251  04E1  0846               	movf	dtoa@n+1,w
  7252  04E2  00A9               	movwf	___aodiv@dividend+1
  7253  04E3  0847               	movf	dtoa@n+2,w
  7254  04E4  00AA               	movwf	___aodiv@dividend+2
  7255  04E5  0848               	movf	dtoa@n+3,w
  7256  04E6  00AB               	movwf	___aodiv@dividend+3
  7257  04E7  0849               	movf	dtoa@n+4,w
  7258  04E8  00AC               	movwf	___aodiv@dividend+4
  7259  04E9  084A               	movf	dtoa@n+5,w
  7260  04EA  00AD               	movwf	___aodiv@dividend+5
  7261  04EB  084B               	movf	dtoa@n+6,w
  7262  04EC  00AE               	movwf	___aodiv@dividend+6
  7263  04ED  084C               	movf	dtoa@n+7,w
  7264  04EE  00AF               	movwf	___aodiv@dividend+7
  7265  04EF  3185  257B  3184   	fcall	___aodiv
  7266  04F2  0020               	movlb	0	; select bank0
  7267  04F3  0820               	movf	?___aodiv,w
  7268  04F4  00C5               	movwf	dtoa@n
  7269  04F5  0821               	movf	?___aodiv+1,w
  7270  04F6  00C6               	movwf	dtoa@n+1
  7271  04F7  0822               	movf	?___aodiv+2,w
  7272  04F8  00C7               	movwf	dtoa@n+2
  7273  04F9  0823               	movf	?___aodiv+3,w
  7274  04FA  00C8               	movwf	dtoa@n+3
  7275  04FB  0824               	movf	?___aodiv+4,w
  7276  04FC  00C9               	movwf	dtoa@n+4
  7277  04FD  0825               	movf	?___aodiv+5,w
  7278  04FE  00CA               	movwf	dtoa@n+5
  7279  04FF  0826               	movf	?___aodiv+6,w
  7280  0500  00CB               	movwf	dtoa@n+6
  7281  0501  0827               	movf	?___aodiv+7,w
  7282  0502  00CC               	movwf	dtoa@n+7
  7283  0503                     l613:	
  7284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 305:     }
  7285                           
  7286                           
  7287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7288  0503  0020               	movlb	0	; select bank0
  7289  0504  084E               	movf	dtoa@i+1,w
  7290  0505  3A80               	xorlw	128
  7291  0506  00B9               	movwf	??_dtoa
  7292  0507  3080               	movlw	128
  7293  0508  0239               	subwf	??_dtoa,w
  7294  0509  1D03               	skipz
  7295  050A  2D0D               	goto	u3475
  7296  050B  3001               	movlw	1
  7297  050C  024D               	subwf	dtoa@i,w
  7298  050D                     u3475:	
  7299  050D  1C03               	skipc
  7300  050E  2D10               	goto	u3471
  7301  050F  2D11               	goto	u3470
  7302  0510                     u3471:	
  7303  0510  2D3E               	goto	l3296
  7304  0511                     u3470:	
  7305  0511                     l3288:	
  7306  0511  0020               	movlb	0	; select bank0
  7307  0512  0845               	movf	dtoa@n,w
  7308  0513  0446               	iorwf	dtoa@n+1,w
  7309  0514  0447               	iorwf	dtoa@n+2,w
  7310  0515  0448               	iorwf	dtoa@n+3,w
  7311  0516  0449               	iorwf	dtoa@n+4,w
  7312  0517  044A               	iorwf	dtoa@n+5,w
  7313  0518  044B               	iorwf	dtoa@n+6,w
  7314  0519  044C               	iorwf	dtoa@n+7,w
  7315  051A  1D03               	skipz
  7316  051B  2D1D               	goto	u3481
  7317  051C  2D1E               	goto	u3480
  7318  051D                     u3481:	
  7319  051D  2C9A               	goto	l3278
  7320  051E                     u3480:	
  7321  051E                     l3290:	
  7322  051E  0840               	movf	dtoa@p+1,w
  7323  051F  3A80               	xorlw	128
  7324  0520  00B9               	movwf	??_dtoa
  7325  0521  3080               	movlw	128
  7326  0522  0239               	subwf	??_dtoa,w
  7327  0523  1D03               	skipz
  7328  0524  2D27               	goto	u3495
  7329  0525  3001               	movlw	1
  7330  0526  023F               	subwf	dtoa@p,w
  7331  0527                     u3495:	
  7332  0527  1803               	skipnc
  7333  0528  2D2A               	goto	u3491
  7334  0529  2D2B               	goto	u3490
  7335  052A                     u3491:	
  7336  052A  2C9A               	goto	l3278
  7337  052B                     u3490:	
  7338  052B                     l3292:	
  7339  052B  0020               	movlb	0	; select bank0
  7340  052C  0842               	movf	dtoa@w+1,w
  7341  052D  3A80               	xorlw	128
  7342  052E  00B9               	movwf	??_dtoa
  7343  052F  3080               	movlw	128
  7344  0530  0239               	subwf	??_dtoa,w
  7345  0531  1D03               	skipz
  7346  0532  2D35               	goto	u3505
  7347  0533  3001               	movlw	1
  7348  0534  0241               	subwf	dtoa@w,w
  7349  0535                     u3505:	
  7350  0535  1C03               	skipc
  7351  0536  2D38               	goto	u3501
  7352  0537  2D39               	goto	u3500
  7353  0538                     u3501:	
  7354  0538  2D3E               	goto	l3296
  7355  0539                     u3500:	
  7356  0539                     l3294:	
  7357  0539  0021               	movlb	1	; select bank1
  7358  053A  18CD               	btfsc	_flags^(0+128),1
  7359  053B  2D3D               	goto	u3511
  7360  053C  2D3E               	goto	u3510
  7361  053D                     u3511:	
  7362  053D  2C9A               	goto	l3278
  7363  053E                     u3510:	
  7364  053E                     l3296:	
  7365                           
  7366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7367  053E  0020               	movlb	0	; select bank0
  7368  053F  0843               	movf	dtoa@s,w
  7369  0540  0444               	iorwf	dtoa@s+1,w
  7370  0541  1D03               	btfss	3,2
  7371  0542  2D44               	goto	u3521
  7372  0543  2D45               	goto	u3520
  7373  0544                     u3521:	
  7374  0544  2D4A               	goto	l3300
  7375  0545                     u3520:	
  7376  0545                     l3298:	
  7377  0545  0021               	movlb	1	; select bank1
  7378  0546  1D4D               	btfss	_flags^(0+128),2
  7379  0547  2D49               	goto	u3531
  7380  0548  2D4A               	goto	u3530
  7381  0549                     u3531:	
  7382  0549  2D67               	goto	l3310
  7383  054A                     u3530:	
  7384  054A                     l3300:	
  7385                           
  7386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7387  054A  30FF               	movlw	255
  7388  054B  0020               	movlb	0	; select bank0
  7389  054C  07CD               	addwf	dtoa@i,f
  7390  054D  30FF               	movlw	255
  7391  054E  3DCE               	addwfc	dtoa@i+1,f
  7392  054F                     l3302:	
  7393                           
  7394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7395  054F  0843               	movf	dtoa@s,w
  7396  0550  0444               	iorwf	dtoa@s+1,w
  7397  0551  1D03               	btfss	3,2
  7398  0552  2D54               	goto	u3541
  7399  0553  2D55               	goto	u3540
  7400  0554                     u3541:	
  7401  0554  2D5A               	goto	l3306
  7402  0555                     u3540:	
  7403  0555                     l3304:	
  7404  0555  302B               	movlw	43
  7405  0556  00BC               	movwf	_dtoa$720
  7406  0557  3000               	movlw	0
  7407  0558  00BD               	movwf	_dtoa$720+1
  7408  0559  2D5E               	goto	l3308
  7409  055A                     l3306:	
  7410  055A  302D               	movlw	45
  7411  055B  00BC               	movwf	_dtoa$720
  7412  055C  3000               	movlw	0
  7413  055D  00BD               	movwf	_dtoa$720+1
  7414  055E                     l3308:	
  7415  055E  083C               	movf	_dtoa$720,w
  7416  055F  00B9               	movwf	??_dtoa
  7417  0560  084D               	movf	dtoa@i,w
  7418  0561  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7419  0562  0086               	movwf	6
  7420  0563  3001               	movlw	1	; select bank2/3
  7421  0564  0087               	movwf	7
  7422  0565  0839               	movf	??_dtoa,w
  7423  0566  0081               	movwf	1
  7424  0567                     l3310:	
  7425                           
  7426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7427  0567  0020               	movlb	0	; select bank0
  7428  0568  084D               	movf	dtoa@i,w
  7429  0569  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7430  056A  00B9               	movwf	??_dtoa
  7431  056B  0839               	movf	??_dtoa,w
  7432  056C  00A8               	movwf	pad@buf
  7433  056D  0842               	movf	dtoa@w+1,w
  7434  056E  00AA               	movwf	pad@p+1
  7435  056F  0841               	movf	dtoa@w,w
  7436  0570  00A9               	movwf	pad@p
  7437  0571  083E               	movf	dtoa@fp,w
  7438  0572  3187  2766  3184   	fcall	_pad
  7439  0575  0020               	movlb	0	; select bank0
  7440  0576  0829               	movf	?_pad+1,w
  7441  0577  00B2               	movwf	?_dtoa+1
  7442  0578  0828               	movf	?_pad,w
  7443  0579  00B1               	movwf	?_dtoa
  7444  057A                     l627:	
  7445  057A  0008               	return
  7446  057B                     __end_of_dtoa:	
  7447                           
  7448                           	psect	text16
  7449  0766                     __ptext16:	
  7450 ;; *************** function _pad *****************
  7451 ;; Defined at:
  7452 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  fp              1    wreg     PTR struct _IO_FILE
  7455 ;;		 -> NULL(0), 
  7456 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  7457 ;;		 -> dbuf(32), 
  7458 ;;  p               2    9[BANK0 ] int 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  7461 ;;		 -> NULL(0), 
  7462 ;;  w               2   14[BANK0 ] int 
  7463 ;;  i               2   12[BANK0 ] int 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  2    8[BANK0 ] int 
  7466 ;; Registers used:
  7467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        9 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    8
  7480 ;; This function calls:
  7481 ;;		_fputc
  7482 ;;		_fputs
  7483 ;;		_strlen
  7484 ;; This function is called by:
  7485 ;;		_dtoa
  7486 ;;		_xtoa
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _pad
  7492  0766                     _pad:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7496                           ;pad@fp stored from wreg
  7497  0766  0020               	movlb	0	; select bank0
  7498  0767  00B0               	movwf	pad@fp
  7499  0768                     l3116:	
  7500                           
  7501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7502  0768  0021               	movlb	1	; select bank1
  7503  0769  1C4D               	btfss	_flags^(0+128),0
  7504  076A  2F6C               	goto	u2981
  7505  076B  2F6D               	goto	u2980
  7506  076C                     u2981:	
  7507  076C  2F76               	goto	l3120
  7508  076D                     u2980:	
  7509  076D                     l3118:	
  7510                           
  7511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7512  076D  0020               	movlb	0	; select bank0
  7513  076E  0830               	movf	pad@fp,w
  7514  076F  00AB               	movwf	??_pad
  7515  0770  082B               	movf	??_pad,w
  7516  0771  00A0               	movwf	fputs@fp
  7517  0772  0828               	movf	pad@buf,w
  7518  0773  318C  24F2  3187   	fcall	_fputs
  7519  0776                     l3120:	
  7520                           
  7521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7522  0776  0020               	movlb	0	; select bank0
  7523  0777  1BAA               	btfsc	pad@p+1,7
  7524  0778  2F7A               	goto	u2991
  7525  0779  2F7B               	goto	u2990
  7526  077A                     u2991:	
  7527  077A  2F80               	goto	l3124
  7528  077B                     u2990:	
  7529  077B                     l3122:	
  7530  077B  082A               	movf	pad@p+1,w
  7531  077C  00AF               	movwf	pad@w+1
  7532  077D  0829               	movf	pad@p,w
  7533  077E  00AE               	movwf	pad@w
  7534  077F  2F82               	goto	l596
  7535  0780                     l3124:	
  7536  0780  01AE               	clrf	pad@w
  7537  0781  01AF               	clrf	pad@w+1
  7538  0782                     l596:	
  7539                           
  7540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7541  0782  01AC               	clrf	pad@i
  7542  0783  01AD               	clrf	pad@i+1
  7543                           
  7544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7545  0784  2F96               	goto	l3130
  7546  0785                     l3126:	
  7547                           
  7548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7549  0785  3020               	movlw	32
  7550  0786  00F4               	movwf	fputc@c
  7551  0787  3000               	movlw	0
  7552  0788  00F5               	movwf	fputc@c+1
  7553  0789  0020               	movlb	0	; select bank0
  7554  078A  0830               	movf	pad@fp,w
  7555  078B  00AB               	movwf	??_pad
  7556  078C  082B               	movf	??_pad,w
  7557  078D  00F6               	movwf	fputc@fp
  7558  078E  318E  261D  3187   	fcall	_fputc
  7559  0791                     l3128:	
  7560                           
  7561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7562  0791  3001               	movlw	1
  7563  0792  0020               	movlb	0	; select bank0
  7564  0793  07AC               	addwf	pad@i,f
  7565  0794  3000               	movlw	0
  7566  0795  3DAD               	addwfc	pad@i+1,f
  7567  0796                     l3130:	
  7568                           
  7569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7570  0796  082D               	movf	pad@i+1,w
  7571  0797  3A80               	xorlw	128
  7572  0798  00AB               	movwf	??_pad
  7573  0799  082F               	movf	pad@w+1,w
  7574  079A  3A80               	xorlw	128
  7575  079B  022B               	subwf	??_pad,w
  7576  079C  1D03               	skipz
  7577  079D  2FA0               	goto	u3005
  7578  079E  082E               	movf	pad@w,w
  7579  079F  022C               	subwf	pad@i,w
  7580  07A0                     u3005:	
  7581  07A0  1C03               	skipc
  7582  07A1  2FA3               	goto	u3001
  7583  07A2  2FA4               	goto	u3000
  7584  07A3                     u3001:	
  7585  07A3  2F85               	goto	l3126
  7586  07A4                     u3000:	
  7587  07A4                     l599:	
  7588                           
  7589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7590  07A4  0021               	movlb	1	; select bank1
  7591  07A5  184D               	btfsc	_flags^(0+128),0
  7592  07A6  2FA8               	goto	u3011
  7593  07A7  2FA9               	goto	u3010
  7594  07A8                     u3011:	
  7595  07A8  2FB2               	goto	l600
  7596  07A9                     u3010:	
  7597  07A9                     l3132:	
  7598                           
  7599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7600  07A9  0020               	movlb	0	; select bank0
  7601  07AA  0830               	movf	pad@fp,w
  7602  07AB  00AB               	movwf	??_pad
  7603  07AC  082B               	movf	??_pad,w
  7604  07AD  00A0               	movwf	fputs@fp
  7605  07AE  0828               	movf	pad@buf,w
  7606  07AF  318C  24F2  3187   	fcall	_fputs
  7607  07B2                     l600:	
  7608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 92:     }
  7609                           
  7610                           
  7611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7612  07B2  0020               	movlb	0	; select bank0
  7613  07B3  0828               	movf	pad@buf,w
  7614  07B4  318B  23CC  3187   	fcall	_strlen
  7615  07B7  0020               	movlb	0	; select bank0
  7616  07B8  082E               	movf	pad@w,w
  7617  07B9  0771               	addwf	?_strlen,w
  7618  07BA  00A8               	movwf	?_pad
  7619  07BB  082F               	movf	pad@w+1,w
  7620  07BC  3D72               	addwfc	?_strlen+1,w
  7621  07BD  00A9               	movwf	?_pad+1
  7622  07BE                     l601:	
  7623  07BE  0008               	return
  7624  07BF                     __end_of_pad:	
  7625                           
  7626                           	psect	text17
  7627  0BCC                     __ptext17:	
  7628 ;; *************** function _strlen *****************
  7629 ;; Defined at:
  7630 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  s               1    wreg     PTR const unsigned char 
  7633 ;;		 -> dbuf(32), 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  s               1    5[COMMON] PTR const unsigned char 
  7636 ;;		 -> dbuf(32), 
  7637 ;;  a               1    4[COMMON] PTR const unsigned char 
  7638 ;;		 -> dbuf(32), 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  2    1[COMMON] unsigned int 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;Total ram usage:        5 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    4
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_pad
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           
  7663                           ;psect for function _strlen
  7664  0BCC                     _strlen:	
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7668                           ;strlen@s stored from wreg
  7669  0BCC  00F5               	movwf	strlen@s
  7670  0BCD                     l3102:	
  7671  0BCD  0875               	movf	strlen@s,w
  7672  0BCE  00F3               	movwf	??_strlen
  7673  0BCF  0873               	movf	??_strlen,w
  7674  0BD0  00F4               	movwf	strlen@a
  7675  0BD1  2BD6               	goto	l3106
  7676  0BD2                     l3104:	
  7677  0BD2  3001               	movlw	1
  7678  0BD3  00F3               	movwf	??_strlen
  7679  0BD4  0873               	movf	??_strlen,w
  7680  0BD5  07F5               	addwf	strlen@s,f
  7681  0BD6                     l3106:	
  7682  0BD6  0875               	movf	strlen@s,w
  7683  0BD7  0086               	movwf	6
  7684  0BD8  3001               	movlw	1	; select bank2/3
  7685  0BD9  0087               	movwf	7
  7686  0BDA  0801               	movf	1,w
  7687  0BDB  1D03               	btfss	3,2
  7688  0BDC  2BDE               	goto	u2951
  7689  0BDD  2BDF               	goto	u2950
  7690  0BDE                     u2951:	
  7691  0BDE  2BD2               	goto	l3104
  7692  0BDF                     u2950:	
  7693  0BDF                     l3108:	
  7694  0BDF  0874               	movf	strlen@a,w
  7695  0BE0  0275               	subwf	strlen@s,w
  7696  0BE1  00F1               	movwf	?_strlen
  7697  0BE2  01F2               	clrf	?_strlen+1
  7698  0BE3  1BF1               	btfsc	?_strlen,7
  7699  0BE4  03F2               	decf	?_strlen+1,f
  7700  0BE5                     l1247:	
  7701  0BE5  0008               	return
  7702  0BE6                     __end_of_strlen:	
  7703                           
  7704                           	psect	text18
  7705  0CF2                     __ptext18:	
  7706 ;; *************** function _fputs *****************
  7707 ;; Defined at:
  7708 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  s               1    wreg     PTR const unsigned char 
  7711 ;;		 -> dbuf(32), 
  7712 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  7713 ;;		 -> NULL(0), 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  7716 ;;		 -> dbuf(32), 
  7717 ;;  i               2    5[BANK0 ] int 
  7718 ;;  c               1    4[BANK0 ] unsigned char 
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  2    0[BANK0 ] int 
  7721 ;; Registers used:
  7722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7728 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;Total ram usage:        8 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    7
  7735 ;; This function calls:
  7736 ;;		_fputc
  7737 ;; This function is called by:
  7738 ;;		_pad
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _fputs
  7744  0CF2                     _fputs:	
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7748                           ;fputs@s stored from wreg
  7749  0CF2  0020               	movlb	0	; select bank0
  7750  0CF3  00A7               	movwf	fputs@s
  7751  0CF4                     l3094:	
  7752  0CF4  01A5               	clrf	fputs@i
  7753  0CF5  01A6               	clrf	fputs@i+1
  7754  0CF6  2D0A               	goto	l3100
  7755  0CF7                     l3096:	
  7756  0CF7  0824               	movf	fputs@c,w
  7757  0CF8  00A1               	movwf	??_fputs
  7758  0CF9  01A2               	clrf	??_fputs+1
  7759  0CFA  0821               	movf	??_fputs,w
  7760  0CFB  00F4               	movwf	fputc@c
  7761  0CFC  0822               	movf	??_fputs+1,w
  7762  0CFD  00F5               	movwf	fputc@c+1
  7763  0CFE  0820               	movf	fputs@fp,w
  7764  0CFF  00A3               	movwf	??_fputs+2
  7765  0D00  0823               	movf	??_fputs+2,w
  7766  0D01  00F6               	movwf	fputc@fp
  7767  0D02  318E  261D  318C   	fcall	_fputc
  7768  0D05                     l3098:	
  7769  0D05  3001               	movlw	1
  7770  0D06  0020               	movlb	0	; select bank0
  7771  0D07  07A5               	addwf	fputs@i,f
  7772  0D08  3000               	movlw	0
  7773  0D09  3DA6               	addwfc	fputs@i+1,f
  7774  0D0A                     l3100:	
  7775  0D0A  0825               	movf	fputs@i,w
  7776  0D0B  0727               	addwf	fputs@s,w
  7777  0D0C  00A1               	movwf	??_fputs
  7778  0D0D  0821               	movf	??_fputs,w
  7779  0D0E  0086               	movwf	6
  7780  0D0F  3001               	movlw	1	; select bank2/3
  7781  0D10  0087               	movwf	7
  7782  0D11  0801               	movf	1,w
  7783  0D12  00A2               	movwf	??_fputs+1
  7784  0D13  0822               	movf	??_fputs+1,w
  7785  0D14  00A4               	movwf	fputs@c
  7786  0D15  0824               	movf	fputs@c,w
  7787  0D16  1D03               	btfss	3,2
  7788  0D17  2D19               	goto	u2941
  7789  0D18  2D1A               	goto	u2940
  7790  0D19                     u2941:	
  7791  0D19  2CF7               	goto	l3096
  7792  0D1A                     u2940:	
  7793  0D1A                     l1234:	
  7794  0D1A  0008               	return
  7795  0D1B                     __end_of_fputs:	
  7796                           
  7797                           	psect	text19
  7798  0E1D                     __ptext19:	
  7799 ;; *************** function _fputc *****************
  7800 ;; Defined at:
  7801 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  c               2    4[COMMON] int 
  7804 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  7805 ;;		 -> NULL(0), 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  2    4[COMMON] int 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;Total ram usage:        8 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    6
  7824 ;; This function calls:
  7825 ;;		_putch
  7826 ;; This function is called by:
  7827 ;;		_pad
  7828 ;;		_vfpfcnvrt
  7829 ;;		_fputs
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           
  7834                           ;psect for function _fputc
  7835  0E1D                     _fputc:	
  7836  0E1D                     l3080:	
  7837                           ;incstack = 0
  7838                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7839                           
  7840  0E1D  0876               	movf	fputc@fp,w
  7841  0E1E  1903               	btfsc	3,2
  7842  0E1F  2E21               	goto	u2901
  7843  0E20  2E22               	goto	u2900
  7844  0E21                     u2901:	
  7845  0E21  2E27               	goto	l3084
  7846  0E22                     u2900:	
  7847  0E22                     l3082:	
  7848  0E22  0876               	movf	fputc@fp,w
  7849  0E23  1D03               	btfss	3,2
  7850  0E24  2E26               	goto	u2911
  7851  0E25  2E27               	goto	u2910
  7852  0E26                     u2911:	
  7853  0E26  2E2C               	goto	l3086
  7854  0E27                     u2910:	
  7855  0E27                     l3084:	
  7856  0E27  0874               	movf	fputc@c,w
  7857  0E28  318B  2304  318E   	fcall	_putch
  7858  0E2B  2E5B               	goto	l1226
  7859  0E2C                     l3086:	
  7860  0E2C  0876               	movf	fputc@fp,w
  7861  0E2D  3E03               	addlw	3
  7862  0E2E  0086               	movwf	6
  7863  0E2F  0187               	clrf	7
  7864  0E30  0016               	moviw fsr1++
  7865  0E31  0401               	iorwf	1,w
  7866  0E32  1903               	btfsc	3,2
  7867  0E33  2E35               	goto	u2921
  7868  0E34  2E36               	goto	u2920
  7869  0E35                     u2921:	
  7870  0E35  2E53               	goto	l3090
  7871  0E36                     u2920:	
  7872  0E36                     l3088:	
  7873  0E36  0876               	movf	fputc@fp,w
  7874  0E37  3E03               	addlw	3
  7875  0E38  0086               	movwf	6
  7876  0E39  0187               	clrf	7
  7877  0E3A  3F40               	moviw [0]fsr1
  7878  0E3B  00F7               	movwf	??_fputc
  7879  0E3C  3F41               	moviw [1]fsr1
  7880  0E3D  00F8               	movwf	??_fputc+1
  7881  0E3E  0A76               	incf	fputc@fp,w
  7882  0E3F  0086               	movwf	6
  7883  0E40  0187               	clrf	7
  7884  0E41  3F40               	moviw [0]fsr1
  7885  0E42  00F9               	movwf	??_fputc+2
  7886  0E43  3F41               	moviw [1]fsr1
  7887  0E44  00FA               	movwf	??_fputc+3
  7888  0E45  087A               	movf	??_fputc+3,w
  7889  0E46  3A80               	xorlw	128
  7890  0E47  00FB               	movwf	??_fputc+4
  7891  0E48  0878               	movf	??_fputc+1,w
  7892  0E49  3A80               	xorlw	128
  7893  0E4A  027B               	subwf	??_fputc+4,w
  7894  0E4B  1D03               	skipz
  7895  0E4C  2E4F               	goto	u2935
  7896  0E4D  0877               	movf	??_fputc,w
  7897  0E4E  0279               	subwf	??_fputc+2,w
  7898  0E4F                     u2935:	
  7899  0E4F  1803               	skipnc
  7900  0E50  2E52               	goto	u2931
  7901  0E51  2E53               	goto	u2930
  7902  0E52                     u2931:	
  7903  0E52  2E5B               	goto	l1226
  7904  0E53                     u2930:	
  7905  0E53                     l3090:	
  7906  0E53  0A76               	incf	fputc@fp,w
  7907  0E54  0086               	movwf	6
  7908  0E55  0187               	clrf	7
  7909  0E56  3001               	movlw	1
  7910  0E57  0781               	addwf	1,f
  7911  0E58  3141               	addfsr 1,1
  7912  0E59  1803               	skipnc
  7913  0E5A  0A81               	incf	1,f
  7914  0E5B                     l1226:	
  7915  0E5B  0008               	return
  7916  0E5C                     __end_of_fputc:	
  7917                           
  7918                           	psect	text20
  7919  0B04                     __ptext20:	
  7920 ;; *************** function _putch *****************
  7921 ;; Defined at:
  7922 ;;		line 201 in file "mcc_generated_files/eusart.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  txData          1    wreg     unsigned char 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  txData          1    3[COMMON] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;Total ram usage:        1 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    5
  7943 ;; This function calls:
  7944 ;;		_EUSART_Write
  7945 ;; This function is called by:
  7946 ;;		_fputc
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function _putch
  7952  0B04                     _putch:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7956                           ;putch@txData stored from wreg
  7957  0B04  00F3               	movwf	putch@txData
  7958  0B05                     l3078:	
  7959                           
  7960                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  7961  0B05  0873               	movf	putch@txData,w
  7962  0B06  318D  251B  318B   	fcall	_EUSART_Write
  7963  0B09                     l109:	
  7964  0B09  0008               	return
  7965  0B0A                     __end_of_putch:	
  7966                           
  7967                           	psect	text21
  7968  0D1B                     __ptext21:	
  7969 ;; *************** function _EUSART_Write *****************
  7970 ;; Defined at:
  7971 ;;		line 173 in file "mcc_generated_files/eusart.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  txData          1    wreg     unsigned char 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  txData          1    2[COMMON] unsigned char 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      void 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;Total ram usage:        2 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    4
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_putch
  7996 ;;		_write_UART
  7997 ;;		_echo
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function _EUSART_Write
  8003  0D1B                     _EUSART_Write:	
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8007                           ;EUSART_Write@txData stored from wreg
  8008  0D1B  00F2               	movwf	EUSART_Write@txData
  8009  0D1C                     l3060:	
  8010  0D1C                     l3062:	
  8011                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  8012                           
  8013                           
  8014                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  8015  0D1C  0021               	movlb	1	; select bank1
  8016  0D1D  0854               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  8017  0D1E  1903               	btfsc	3,2
  8018  0D1F  2D21               	goto	u2871
  8019  0D20  2D22               	goto	u2870
  8020  0D21                     u2871:	
  8021  0D21  2D1C               	goto	l3062
  8022  0D22                     u2870:	
  8023  0D22                     l99:	
  8024                           
  8025                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
  8026  0D22  002E               	movlb	14	; select bank14
  8027  0D23  1A19               	btfsc	25,4	;volatile
  8028  0D24  2D26               	goto	u2881
  8029  0D25  2D27               	goto	u2880
  8030  0D26                     u2881:	
  8031  0D26  2D2B               	goto	l100
  8032  0D27                     u2880:	
  8033  0D27                     l3064:	
  8034                           
  8035                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  8036  0D27  0872               	movf	EUSART_Write@txData,w
  8037  0D28  0022               	movlb	2	; select bank2
  8038  0D29  009A               	movwf	26	;volatile
  8039                           
  8040                           ;mcc_generated_files/eusart.c: 182:     }
  8041  0D2A  2D43               	goto	l3076
  8042  0D2B                     l100:	
  8043                           ;mcc_generated_files/eusart.c: 183:     else
  8044                           
  8045                           
  8046                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
  8047  0D2B  1219               	bcf	25,4	;volatile
  8048  0D2C                     l3066:	
  8049                           
  8050                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  8051  0D2C  0872               	movf	EUSART_Write@txData,w
  8052  0D2D  00F1               	movwf	??_EUSART_Write
  8053  0D2E  0021               	movlb	1	; select bank1
  8054  0D2F  0853               	movf	_eusartTxHead^(0+128),w
  8055  0D30  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  8056  0D31  0086               	movwf	6
  8057  0D32  3001               	movlw	1	; select bank2/3
  8058  0D33  0087               	movwf	7
  8059  0D34  0871               	movf	??_EUSART_Write,w
  8060  0D35  0081               	movwf	1
  8061  0D36                     l3068:	
  8062  0D36  3001               	movlw	1
  8063  0D37  00F1               	movwf	??_EUSART_Write
  8064  0D38  0871               	movf	??_EUSART_Write,w
  8065  0D39  07D3               	addwf	_eusartTxHead^(0+128),f	;volatile
  8066  0D3A                     l3070:	
  8067                           
  8068                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  8069  0D3A  3008               	movlw	8
  8070  0D3B  0253               	subwf	_eusartTxHead^(0+128),w	;volatile
  8071  0D3C  1C03               	skipc
  8072  0D3D  2D3F               	goto	u2891
  8073  0D3E  2D40               	goto	u2890
  8074  0D3F                     u2891:	
  8075  0D3F  2D41               	goto	l3074
  8076  0D40                     u2890:	
  8077  0D40                     l3072:	
  8078                           
  8079                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  8080  0D40  01D3               	clrf	_eusartTxHead^(0+128)	;volatile
  8081  0D41                     l3074:	
  8082                           
  8083                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  8084  0D41  3001               	movlw	1
  8085  0D42  02D4               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  8086  0D43                     l3076:	
  8087                           
  8088                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
  8089  0D43  002E               	movlb	14	; select bank14
  8090  0D44  1619               	bsf	25,4	;volatile
  8091  0D45                     l103:	
  8092  0D45  0008               	return
  8093  0D46                     __end_of_EUSART_Write:	
  8094                           
  8095                           	psect	text22
  8096  0BB2                     __ptext22:	
  8097 ;; *************** function _abs *****************
  8098 ;; Defined at:
  8099 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  a               2    4[COMMON] int 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  2    4[COMMON] int 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;Total ram usage:        4 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    4
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_dtoa
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _abs
  8129  0BB2                     _abs:	
  8130  0BB2                     l3136:	
  8131                           ;incstack = 0
  8132                           ; Regs used in _abs: [wreg+status,2+status,0]
  8133                           
  8134  0BB2  0875               	movf	abs@a+1,w
  8135  0BB3  3A80               	xorlw	128
  8136  0BB4  00F6               	movwf	??_abs
  8137  0BB5  3080               	movlw	128
  8138  0BB6  0276               	subwf	??_abs,w
  8139  0BB7  1D03               	skipz
  8140  0BB8  2BBB               	goto	u3025
  8141  0BB9  3001               	movlw	1
  8142  0BBA  0274               	subwf	abs@a,w
  8143  0BBB                     u3025:	
  8144  0BBB  1803               	skipnc
  8145  0BBC  2BBE               	goto	u3021
  8146  0BBD  2BBF               	goto	u3020
  8147  0BBE                     u3021:	
  8148  0BBE  2BCB               	goto	l1154
  8149  0BBF                     u3020:	
  8150  0BBF                     l3138:	
  8151  0BBF  0974               	comf	abs@a,w
  8152  0BC0  00F6               	movwf	??_abs
  8153  0BC1  0975               	comf	abs@a+1,w
  8154  0BC2  00F7               	movwf	??_abs+1
  8155  0BC3  0AF6               	incf	??_abs,f
  8156  0BC4  1903               	skipnz
  8157  0BC5  0AF7               	incf	??_abs+1,f
  8158  0BC6  0876               	movf	??_abs,w
  8159  0BC7  00F4               	movwf	?_abs
  8160  0BC8  0877               	movf	??_abs+1,w
  8161  0BC9  00F5               	movwf	?_abs+1
  8162  0BCA  2BCB               	goto	l1157
  8163  0BCB                     l1154:	
  8164  0BCB                     l1157:	
  8165  0BCB  0008               	return
  8166  0BCC                     __end_of_abs:	
  8167                           
  8168                           	psect	text23
  8169  067C                     __ptext23:	
  8170 ;; *************** function ___aomod *****************
  8171 ;; Defined at:
  8172 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  divisor         8    0[BANK0 ] long long 
  8175 ;;  dividend        8    8[BANK0 ] long long 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  sign            1    3[COMMON] unsigned char 
  8178 ;;  counter         1    2[COMMON] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  8    0[BANK0 ] long long 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8188 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;Total ram usage:       19 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    4
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_dtoa
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           
  8203                           ;psect for function ___aomod
  8204  067C                     ___aomod:	
  8205  067C                     l3214:	
  8206                           ;incstack = 0
  8207                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8208                           
  8209  067C  01F3               	clrf	___aomod@sign
  8210  067D                     l3216:	
  8211  067D  3028               	movlw	low ___aomod@dividend
  8212  067E  0086               	movwf	6
  8213  067F  3000               	movlw	high ___aomod@dividend
  8214  0680  0087               	movwf	7
  8215  0681  3F47               	moviw [7]fsr1
  8216  0682  00F1               	movwf	??___aomod
  8217  0683  1FF1               	btfss	??___aomod,7
  8218  0684  2E86               	goto	u3271
  8219  0685  2E87               	goto	u3270
  8220  0686                     u3271:	
  8221  0686  2EA8               	goto	l3220
  8222  0687                     u3270:	
  8223  0687                     l3218:	
  8224  0687  0020               	movlb	0	; select bank0
  8225  0688  09A8               	comf	___aomod@dividend,f
  8226  0689  09A9               	comf	___aomod@dividend+1,f
  8227  068A  09AA               	comf	___aomod@dividend+2,f
  8228  068B  09AB               	comf	___aomod@dividend+3,f
  8229  068C  09AC               	comf	___aomod@dividend+4,f
  8230  068D  09AD               	comf	___aomod@dividend+5,f
  8231  068E  09AE               	comf	___aomod@dividend+6,f
  8232  068F  09AF               	comf	___aomod@dividend+7,f
  8233  0690  0AA8               	incf	___aomod@dividend,f
  8234  0691  1D03               	skipz
  8235  0692  2EA6               	goto	u328lld
  8236  0693  0AA9               	incf	___aomod@dividend+1,f
  8237  0694  1D03               	skipz
  8238  0695  2EA6               	goto	u328lld
  8239  0696  0AAA               	incf	___aomod@dividend+2,f
  8240  0697  1D03               	skipz
  8241  0698  2EA6               	goto	u328lld
  8242  0699  0AAB               	incf	___aomod@dividend+3,f
  8243  069A  1D03               	skipz
  8244  069B  2EA6               	goto	u328lld
  8245  069C  0AAC               	incf	___aomod@dividend+4,f
  8246  069D  1D03               	skipz
  8247  069E  2EA6               	goto	u328lld
  8248  069F  0AAD               	incf	___aomod@dividend+5,f
  8249  06A0  1D03               	skipz
  8250  06A1  2EA6               	goto	u328lld
  8251  06A2  0AAE               	incf	___aomod@dividend+6,f
  8252  06A3  1D03               	skipz
  8253  06A4  2EA6               	goto	u328lld
  8254  06A5  0AAF               	incf	___aomod@dividend+7,f
  8255  06A6                     u328lld:	
  8256  06A6  01F3               	clrf	___aomod@sign
  8257  06A7  0AF3               	incf	___aomod@sign,f
  8258  06A8                     l3220:	
  8259  06A8  3020               	movlw	low ___aomod@divisor
  8260  06A9  0086               	movwf	6
  8261  06AA  3000               	movlw	high ___aomod@divisor
  8262  06AB  0087               	movwf	7
  8263  06AC  3F47               	moviw [7]fsr1
  8264  06AD  00F1               	movwf	??___aomod
  8265  06AE  1FF1               	btfss	??___aomod,7
  8266  06AF  2EB1               	goto	u3291
  8267  06B0  2EB2               	goto	u3290
  8268  06B1                     u3291:	
  8269  06B1  2ED1               	goto	l3224
  8270  06B2                     u3290:	
  8271  06B2                     l3222:	
  8272  06B2  0020               	movlb	0	; select bank0
  8273  06B3  09A0               	comf	___aomod@divisor,f
  8274  06B4  09A1               	comf	___aomod@divisor+1,f
  8275  06B5  09A2               	comf	___aomod@divisor+2,f
  8276  06B6  09A3               	comf	___aomod@divisor+3,f
  8277  06B7  09A4               	comf	___aomod@divisor+4,f
  8278  06B8  09A5               	comf	___aomod@divisor+5,f
  8279  06B9  09A6               	comf	___aomod@divisor+6,f
  8280  06BA  09A7               	comf	___aomod@divisor+7,f
  8281  06BB  0AA0               	incf	___aomod@divisor,f
  8282  06BC  1D03               	skipz
  8283  06BD  2ED1               	goto	u330lld
  8284  06BE  0AA1               	incf	___aomod@divisor+1,f
  8285  06BF  1D03               	skipz
  8286  06C0  2ED1               	goto	u330lld
  8287  06C1  0AA2               	incf	___aomod@divisor+2,f
  8288  06C2  1D03               	skipz
  8289  06C3  2ED1               	goto	u330lld
  8290  06C4  0AA3               	incf	___aomod@divisor+3,f
  8291  06C5  1D03               	skipz
  8292  06C6  2ED1               	goto	u330lld
  8293  06C7  0AA4               	incf	___aomod@divisor+4,f
  8294  06C8  1D03               	skipz
  8295  06C9  2ED1               	goto	u330lld
  8296  06CA  0AA5               	incf	___aomod@divisor+5,f
  8297  06CB  1D03               	skipz
  8298  06CC  2ED1               	goto	u330lld
  8299  06CD  0AA6               	incf	___aomod@divisor+6,f
  8300  06CE  1D03               	skipz
  8301  06CF  2ED1               	goto	u330lld
  8302  06D0  0AA7               	incf	___aomod@divisor+7,f
  8303  06D1                     u330lld:	
  8304  06D1                     l3224:	
  8305  06D1  0020               	movlb	0	; select bank0
  8306  06D2  0820               	movf	___aomod@divisor,w
  8307  06D3  0421               	iorwf	___aomod@divisor+1,w
  8308  06D4  0422               	iorwf	___aomod@divisor+2,w
  8309  06D5  0423               	iorwf	___aomod@divisor+3,w
  8310  06D6  0424               	iorwf	___aomod@divisor+4,w
  8311  06D7  0425               	iorwf	___aomod@divisor+5,w
  8312  06D8  0426               	iorwf	___aomod@divisor+6,w
  8313  06D9  0427               	iorwf	___aomod@divisor+7,w
  8314  06DA  1903               	skipnz
  8315  06DB  2EDD               	goto	u3311
  8316  06DC  2EDE               	goto	u3310
  8317  06DD                     u3311:	
  8318  06DD  2F31               	goto	l3240
  8319  06DE                     u3310:	
  8320  06DE                     l3226:	
  8321  06DE  01F2               	clrf	___aomod@counter
  8322  06DF  0AF2               	incf	___aomod@counter,f
  8323  06E0  2EED               	goto	l3232
  8324  06E1                     l3228:	
  8325  06E1  35A0               	lslf	___aomod@divisor,f
  8326  06E2  0DA1               	rlf	___aomod@divisor+1,f
  8327  06E3  0DA2               	rlf	___aomod@divisor+2,f
  8328  06E4  0DA3               	rlf	___aomod@divisor+3,f
  8329  06E5  0DA4               	rlf	___aomod@divisor+4,f
  8330  06E6  0DA5               	rlf	___aomod@divisor+5,f
  8331  06E7  0DA6               	rlf	___aomod@divisor+6,f
  8332  06E8  0DA7               	rlf	___aomod@divisor+7,f
  8333  06E9                     l3230:	
  8334  06E9  3001               	movlw	1
  8335  06EA  00F1               	movwf	??___aomod
  8336  06EB  0871               	movf	??___aomod,w
  8337  06EC  07F2               	addwf	___aomod@counter,f
  8338  06ED                     l3232:	
  8339  06ED  1FA7               	btfss	___aomod@divisor+7,7
  8340  06EE  2EF0               	goto	u3321
  8341  06EF  2EF1               	goto	u3320
  8342  06F0                     u3321:	
  8343  06F0  2EE1               	goto	l3228
  8344  06F1                     u3320:	
  8345  06F1                     l3234:	
  8346  06F1  0827               	movf	___aomod@divisor+7,w
  8347  06F2  022F               	subwf	___aomod@dividend+7,w
  8348  06F3  1D03               	skipz
  8349  06F4  2F0F               	goto	u3335
  8350  06F5  0826               	movf	___aomod@divisor+6,w
  8351  06F6  022E               	subwf	___aomod@dividend+6,w
  8352  06F7  1D03               	skipz
  8353  06F8  2F0F               	goto	u3335
  8354  06F9  0825               	movf	___aomod@divisor+5,w
  8355  06FA  022D               	subwf	___aomod@dividend+5,w
  8356  06FB  1D03               	skipz
  8357  06FC  2F0F               	goto	u3335
  8358  06FD  0824               	movf	___aomod@divisor+4,w
  8359  06FE  022C               	subwf	___aomod@dividend+4,w
  8360  06FF  1D03               	skipz
  8361  0700  2F0F               	goto	u3335
  8362  0701  0823               	movf	___aomod@divisor+3,w
  8363  0702  022B               	subwf	___aomod@dividend+3,w
  8364  0703  1D03               	skipz
  8365  0704  2F0F               	goto	u3335
  8366  0705  0822               	movf	___aomod@divisor+2,w
  8367  0706  022A               	subwf	___aomod@dividend+2,w
  8368  0707  1D03               	skipz
  8369  0708  2F0F               	goto	u3335
  8370  0709  0821               	movf	___aomod@divisor+1,w
  8371  070A  0229               	subwf	___aomod@dividend+1,w
  8372  070B  1D03               	skipz
  8373  070C  2F0F               	goto	u3335
  8374  070D  0820               	movf	___aomod@divisor,w
  8375  070E  0228               	subwf	___aomod@dividend,w
  8376  070F                     u3335:	
  8377  070F  1C03               	skipc
  8378  0710  2F12               	goto	u3331
  8379  0711  2F13               	goto	u3330
  8380  0712                     u3331:	
  8381  0712  2F23               	goto	l3238
  8382  0713                     u3330:	
  8383  0713                     l3236:	
  8384  0713  0820               	movf	___aomod@divisor,w
  8385  0714  02A8               	subwf	___aomod@dividend,f
  8386  0715  0821               	movf	___aomod@divisor+1,w
  8387  0716  3BA9               	subwfb	___aomod@dividend+1,f
  8388  0717  0822               	movf	___aomod@divisor+2,w
  8389  0718  3BAA               	subwfb	___aomod@dividend+2,f
  8390  0719  0823               	movf	___aomod@divisor+3,w
  8391  071A  3BAB               	subwfb	___aomod@dividend+3,f
  8392  071B  0824               	movf	___aomod@divisor+4,w
  8393  071C  3BAC               	subwfb	___aomod@dividend+4,f
  8394  071D  0825               	movf	___aomod@divisor+5,w
  8395  071E  3BAD               	subwfb	___aomod@dividend+5,f
  8396  071F  0826               	movf	___aomod@divisor+6,w
  8397  0720  3BAE               	subwfb	___aomod@dividend+6,f
  8398  0721  0827               	movf	___aomod@divisor+7,w
  8399  0722  3BAF               	subwfb	___aomod@dividend+7,f
  8400  0723                     l3238:	
  8401  0723  36A7               	lsrf	___aomod@divisor+7,f
  8402  0724  0CA6               	rrf	___aomod@divisor+6,f
  8403  0725  0CA5               	rrf	___aomod@divisor+5,f
  8404  0726  0CA4               	rrf	___aomod@divisor+4,f
  8405  0727  0CA3               	rrf	___aomod@divisor+3,f
  8406  0728  0CA2               	rrf	___aomod@divisor+2,f
  8407  0729  0CA1               	rrf	___aomod@divisor+1,f
  8408  072A  0CA0               	rrf	___aomod@divisor,f
  8409  072B  3001               	movlw	1
  8410  072C  02F2               	subwf	___aomod@counter,f
  8411  072D  1D03               	btfss	3,2
  8412  072E  2F30               	goto	u3341
  8413  072F  2F31               	goto	u3340
  8414  0730                     u3341:	
  8415  0730  2EF1               	goto	l3234
  8416  0731                     u3340:	
  8417  0731                     l3240:	
  8418  0731  0873               	movf	___aomod@sign,w
  8419  0732  1903               	btfsc	3,2
  8420  0733  2F35               	goto	u3351
  8421  0734  2F36               	goto	u3350
  8422  0735                     u3351:	
  8423  0735  2F54               	goto	l813
  8424  0736                     u3350:	
  8425  0736                     l3242:	
  8426  0736  09A8               	comf	___aomod@dividend,f
  8427  0737  09A9               	comf	___aomod@dividend+1,f
  8428  0738  09AA               	comf	___aomod@dividend+2,f
  8429  0739  09AB               	comf	___aomod@dividend+3,f
  8430  073A  09AC               	comf	___aomod@dividend+4,f
  8431  073B  09AD               	comf	___aomod@dividend+5,f
  8432  073C  09AE               	comf	___aomod@dividend+6,f
  8433  073D  09AF               	comf	___aomod@dividend+7,f
  8434  073E  0AA8               	incf	___aomod@dividend,f
  8435  073F  1D03               	skipz
  8436  0740  2F54               	goto	u336lld
  8437  0741  0AA9               	incf	___aomod@dividend+1,f
  8438  0742  1D03               	skipz
  8439  0743  2F54               	goto	u336lld
  8440  0744  0AAA               	incf	___aomod@dividend+2,f
  8441  0745  1D03               	skipz
  8442  0746  2F54               	goto	u336lld
  8443  0747  0AAB               	incf	___aomod@dividend+3,f
  8444  0748  1D03               	skipz
  8445  0749  2F54               	goto	u336lld
  8446  074A  0AAC               	incf	___aomod@dividend+4,f
  8447  074B  1D03               	skipz
  8448  074C  2F54               	goto	u336lld
  8449  074D  0AAD               	incf	___aomod@dividend+5,f
  8450  074E  1D03               	skipz
  8451  074F  2F54               	goto	u336lld
  8452  0750  0AAE               	incf	___aomod@dividend+6,f
  8453  0751  1D03               	skipz
  8454  0752  2F54               	goto	u336lld
  8455  0753  0AAF               	incf	___aomod@dividend+7,f
  8456  0754                     u336lld:	
  8457  0754                     l813:	
  8458  0754  0020               	movlb	0	; select bank0
  8459  0755  0828               	movf	___aomod@dividend,w
  8460  0756  00A0               	movwf	?___aomod
  8461  0757  0829               	movf	___aomod@dividend+1,w
  8462  0758  00A1               	movwf	?___aomod+1
  8463  0759  082A               	movf	___aomod@dividend+2,w
  8464  075A  00A2               	movwf	?___aomod+2
  8465  075B  082B               	movf	___aomod@dividend+3,w
  8466  075C  00A3               	movwf	?___aomod+3
  8467  075D  082C               	movf	___aomod@dividend+4,w
  8468  075E  00A4               	movwf	?___aomod+4
  8469  075F  082D               	movf	___aomod@dividend+5,w
  8470  0760  00A5               	movwf	?___aomod+5
  8471  0761  082E               	movf	___aomod@dividend+6,w
  8472  0762  00A6               	movwf	?___aomod+6
  8473  0763  082F               	movf	___aomod@dividend+7,w
  8474  0764  00A7               	movwf	?___aomod+7
  8475  0765                     l814:	
  8476  0765  0008               	return
  8477  0766                     __end_of___aomod:	
  8478                           
  8479                           	psect	text24
  8480  057B                     __ptext24:	
  8481 ;; *************** function ___aodiv *****************
  8482 ;; Defined at:
  8483 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  divisor         8    0[BANK0 ] long long 
  8486 ;;  dividend        8    8[BANK0 ] long long 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  quotient        8    4[COMMON] long long 
  8489 ;;  sign            1    3[COMMON] unsigned char 
  8490 ;;  counter         1    2[COMMON] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  8    0[BANK0 ] long long 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8500 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;Total ram usage:       27 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_dtoa
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           
  8515                           ;psect for function ___aodiv
  8516  057B                     ___aodiv:	
  8517  057B                     l3176:	
  8518                           ;incstack = 0
  8519                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8520                           
  8521  057B  01F3               	clrf	___aodiv@sign
  8522  057C                     l3178:	
  8523  057C  3020               	movlw	low ___aodiv@divisor
  8524  057D  0086               	movwf	6
  8525  057E  3000               	movlw	high ___aodiv@divisor
  8526  057F  0087               	movwf	7
  8527  0580  3F47               	moviw [7]fsr1
  8528  0581  00F1               	movwf	??___aodiv
  8529  0582  1FF1               	btfss	??___aodiv,7
  8530  0583  2D85               	goto	u3161
  8531  0584  2D86               	goto	u3160
  8532  0585                     u3161:	
  8533  0585  2DA7               	goto	l3182
  8534  0586                     u3160:	
  8535  0586                     l3180:	
  8536  0586  0020               	movlb	0	; select bank0
  8537  0587  09A0               	comf	___aodiv@divisor,f
  8538  0588  09A1               	comf	___aodiv@divisor+1,f
  8539  0589  09A2               	comf	___aodiv@divisor+2,f
  8540  058A  09A3               	comf	___aodiv@divisor+3,f
  8541  058B  09A4               	comf	___aodiv@divisor+4,f
  8542  058C  09A5               	comf	___aodiv@divisor+5,f
  8543  058D  09A6               	comf	___aodiv@divisor+6,f
  8544  058E  09A7               	comf	___aodiv@divisor+7,f
  8545  058F  0AA0               	incf	___aodiv@divisor,f
  8546  0590  1D03               	skipz
  8547  0591  2DA5               	goto	u317lld
  8548  0592  0AA1               	incf	___aodiv@divisor+1,f
  8549  0593  1D03               	skipz
  8550  0594  2DA5               	goto	u317lld
  8551  0595  0AA2               	incf	___aodiv@divisor+2,f
  8552  0596  1D03               	skipz
  8553  0597  2DA5               	goto	u317lld
  8554  0598  0AA3               	incf	___aodiv@divisor+3,f
  8555  0599  1D03               	skipz
  8556  059A  2DA5               	goto	u317lld
  8557  059B  0AA4               	incf	___aodiv@divisor+4,f
  8558  059C  1D03               	skipz
  8559  059D  2DA5               	goto	u317lld
  8560  059E  0AA5               	incf	___aodiv@divisor+5,f
  8561  059F  1D03               	skipz
  8562  05A0  2DA5               	goto	u317lld
  8563  05A1  0AA6               	incf	___aodiv@divisor+6,f
  8564  05A2  1D03               	skipz
  8565  05A3  2DA5               	goto	u317lld
  8566  05A4  0AA7               	incf	___aodiv@divisor+7,f
  8567  05A5                     u317lld:	
  8568  05A5  01F3               	clrf	___aodiv@sign
  8569  05A6  0AF3               	incf	___aodiv@sign,f
  8570  05A7                     l3182:	
  8571  05A7  3028               	movlw	low ___aodiv@dividend
  8572  05A8  0086               	movwf	6
  8573  05A9  3000               	movlw	high ___aodiv@dividend
  8574  05AA  0087               	movwf	7
  8575  05AB  3F47               	moviw [7]fsr1
  8576  05AC  00F1               	movwf	??___aodiv
  8577  05AD  1FF1               	btfss	??___aodiv,7
  8578  05AE  2DB0               	goto	u3181
  8579  05AF  2DB1               	goto	u3180
  8580  05B0                     u3181:	
  8581  05B0  2DD4               	goto	l3188
  8582  05B1                     u3180:	
  8583  05B1                     l3184:	
  8584  05B1  0020               	movlb	0	; select bank0
  8585  05B2  09A8               	comf	___aodiv@dividend,f
  8586  05B3  09A9               	comf	___aodiv@dividend+1,f
  8587  05B4  09AA               	comf	___aodiv@dividend+2,f
  8588  05B5  09AB               	comf	___aodiv@dividend+3,f
  8589  05B6  09AC               	comf	___aodiv@dividend+4,f
  8590  05B7  09AD               	comf	___aodiv@dividend+5,f
  8591  05B8  09AE               	comf	___aodiv@dividend+6,f
  8592  05B9  09AF               	comf	___aodiv@dividend+7,f
  8593  05BA  0AA8               	incf	___aodiv@dividend,f
  8594  05BB  1D03               	skipz
  8595  05BC  2DD0               	goto	u319lld
  8596  05BD  0AA9               	incf	___aodiv@dividend+1,f
  8597  05BE  1D03               	skipz
  8598  05BF  2DD0               	goto	u319lld
  8599  05C0  0AAA               	incf	___aodiv@dividend+2,f
  8600  05C1  1D03               	skipz
  8601  05C2  2DD0               	goto	u319lld
  8602  05C3  0AAB               	incf	___aodiv@dividend+3,f
  8603  05C4  1D03               	skipz
  8604  05C5  2DD0               	goto	u319lld
  8605  05C6  0AAC               	incf	___aodiv@dividend+4,f
  8606  05C7  1D03               	skipz
  8607  05C8  2DD0               	goto	u319lld
  8608  05C9  0AAD               	incf	___aodiv@dividend+5,f
  8609  05CA  1D03               	skipz
  8610  05CB  2DD0               	goto	u319lld
  8611  05CC  0AAE               	incf	___aodiv@dividend+6,f
  8612  05CD  1D03               	skipz
  8613  05CE  2DD0               	goto	u319lld
  8614  05CF  0AAF               	incf	___aodiv@dividend+7,f
  8615  05D0                     u319lld:	
  8616  05D0                     l3186:	
  8617  05D0  3001               	movlw	1
  8618  05D1  00F1               	movwf	??___aodiv
  8619  05D2  0871               	movf	??___aodiv,w
  8620  05D3  06F3               	xorwf	___aodiv@sign,f
  8621  05D4                     l3188:	
  8622  05D4  3074               	movlw	low ___aodiv@quotient
  8623  05D5  0086               	movwf	6
  8624  05D6  3000               	movlw	high ___aodiv@quotient
  8625  05D7  0087               	movwf	7
  8626  05D8  3008               	movlw	8
  8627  05D9  00F1               	movwf	??___aodiv
  8628  05DA  3000               	movlw	0
  8629  05DB                     u3200:	
  8630  05DB  001E               	movwi fsr1++
  8631  05DC  0BF1               	decfsz	??___aodiv,f
  8632  05DD  2DDB               	goto	u3200
  8633  05DE                     l3190:	
  8634  05DE  0020               	movlb	0	; select bank0
  8635  05DF  0820               	movf	___aodiv@divisor,w
  8636  05E0  0421               	iorwf	___aodiv@divisor+1,w
  8637  05E1  0422               	iorwf	___aodiv@divisor+2,w
  8638  05E2  0423               	iorwf	___aodiv@divisor+3,w
  8639  05E3  0424               	iorwf	___aodiv@divisor+4,w
  8640  05E4  0425               	iorwf	___aodiv@divisor+5,w
  8641  05E5  0426               	iorwf	___aodiv@divisor+6,w
  8642  05E6  0427               	iorwf	___aodiv@divisor+7,w
  8643  05E7  1903               	skipnz
  8644  05E8  2DEA               	goto	u3211
  8645  05E9  2DEB               	goto	u3210
  8646  05EA                     u3211:	
  8647  05EA  2E47               	goto	l3210
  8648  05EB                     u3210:	
  8649  05EB                     l3192:	
  8650  05EB  01F2               	clrf	___aodiv@counter
  8651  05EC  0AF2               	incf	___aodiv@counter,f
  8652  05ED  2DFA               	goto	l3198
  8653  05EE                     l3194:	
  8654  05EE  35A0               	lslf	___aodiv@divisor,f
  8655  05EF  0DA1               	rlf	___aodiv@divisor+1,f
  8656  05F0  0DA2               	rlf	___aodiv@divisor+2,f
  8657  05F1  0DA3               	rlf	___aodiv@divisor+3,f
  8658  05F2  0DA4               	rlf	___aodiv@divisor+4,f
  8659  05F3  0DA5               	rlf	___aodiv@divisor+5,f
  8660  05F4  0DA6               	rlf	___aodiv@divisor+6,f
  8661  05F5  0DA7               	rlf	___aodiv@divisor+7,f
  8662  05F6                     l3196:	
  8663  05F6  3001               	movlw	1
  8664  05F7  00F1               	movwf	??___aodiv
  8665  05F8  0871               	movf	??___aodiv,w
  8666  05F9  07F2               	addwf	___aodiv@counter,f
  8667  05FA                     l3198:	
  8668  05FA  1FA7               	btfss	___aodiv@divisor+7,7
  8669  05FB  2DFD               	goto	u3221
  8670  05FC  2DFE               	goto	u3220
  8671  05FD                     u3221:	
  8672  05FD  2DEE               	goto	l3194
  8673  05FE                     u3220:	
  8674  05FE                     l3200:	
  8675  05FE  35F4               	lslf	___aodiv@quotient,f
  8676  05FF  0DF5               	rlf	___aodiv@quotient+1,f
  8677  0600  0DF6               	rlf	___aodiv@quotient+2,f
  8678  0601  0DF7               	rlf	___aodiv@quotient+3,f
  8679  0602  0DF8               	rlf	___aodiv@quotient+4,f
  8680  0603  0DF9               	rlf	___aodiv@quotient+5,f
  8681  0604  0DFA               	rlf	___aodiv@quotient+6,f
  8682  0605  0DFB               	rlf	___aodiv@quotient+7,f
  8683  0606                     l3202:	
  8684  0606  0827               	movf	___aodiv@divisor+7,w
  8685  0607  022F               	subwf	___aodiv@dividend+7,w
  8686  0608  1D03               	skipz
  8687  0609  2E24               	goto	u3235
  8688  060A  0826               	movf	___aodiv@divisor+6,w
  8689  060B  022E               	subwf	___aodiv@dividend+6,w
  8690  060C  1D03               	skipz
  8691  060D  2E24               	goto	u3235
  8692  060E  0825               	movf	___aodiv@divisor+5,w
  8693  060F  022D               	subwf	___aodiv@dividend+5,w
  8694  0610  1D03               	skipz
  8695  0611  2E24               	goto	u3235
  8696  0612  0824               	movf	___aodiv@divisor+4,w
  8697  0613  022C               	subwf	___aodiv@dividend+4,w
  8698  0614  1D03               	skipz
  8699  0615  2E24               	goto	u3235
  8700  0616  0823               	movf	___aodiv@divisor+3,w
  8701  0617  022B               	subwf	___aodiv@dividend+3,w
  8702  0618  1D03               	skipz
  8703  0619  2E24               	goto	u3235
  8704  061A  0822               	movf	___aodiv@divisor+2,w
  8705  061B  022A               	subwf	___aodiv@dividend+2,w
  8706  061C  1D03               	skipz
  8707  061D  2E24               	goto	u3235
  8708  061E  0821               	movf	___aodiv@divisor+1,w
  8709  061F  0229               	subwf	___aodiv@dividend+1,w
  8710  0620  1D03               	skipz
  8711  0621  2E24               	goto	u3235
  8712  0622  0820               	movf	___aodiv@divisor,w
  8713  0623  0228               	subwf	___aodiv@dividend,w
  8714  0624                     u3235:	
  8715  0624  1C03               	skipc
  8716  0625  2E27               	goto	u3231
  8717  0626  2E28               	goto	u3230
  8718  0627                     u3231:	
  8719  0627  2E39               	goto	l3208
  8720  0628                     u3230:	
  8721  0628                     l3204:	
  8722  0628  0820               	movf	___aodiv@divisor,w
  8723  0629  02A8               	subwf	___aodiv@dividend,f
  8724  062A  0821               	movf	___aodiv@divisor+1,w
  8725  062B  3BA9               	subwfb	___aodiv@dividend+1,f
  8726  062C  0822               	movf	___aodiv@divisor+2,w
  8727  062D  3BAA               	subwfb	___aodiv@dividend+2,f
  8728  062E  0823               	movf	___aodiv@divisor+3,w
  8729  062F  3BAB               	subwfb	___aodiv@dividend+3,f
  8730  0630  0824               	movf	___aodiv@divisor+4,w
  8731  0631  3BAC               	subwfb	___aodiv@dividend+4,f
  8732  0632  0825               	movf	___aodiv@divisor+5,w
  8733  0633  3BAD               	subwfb	___aodiv@dividend+5,f
  8734  0634  0826               	movf	___aodiv@divisor+6,w
  8735  0635  3BAE               	subwfb	___aodiv@dividend+6,f
  8736  0636  0827               	movf	___aodiv@divisor+7,w
  8737  0637  3BAF               	subwfb	___aodiv@dividend+7,f
  8738  0638                     l3206:	
  8739  0638  1474               	bsf	___aodiv@quotient,0
  8740  0639                     l3208:	
  8741  0639  36A7               	lsrf	___aodiv@divisor+7,f
  8742  063A  0CA6               	rrf	___aodiv@divisor+6,f
  8743  063B  0CA5               	rrf	___aodiv@divisor+5,f
  8744  063C  0CA4               	rrf	___aodiv@divisor+4,f
  8745  063D  0CA3               	rrf	___aodiv@divisor+3,f
  8746  063E  0CA2               	rrf	___aodiv@divisor+2,f
  8747  063F  0CA1               	rrf	___aodiv@divisor+1,f
  8748  0640  0CA0               	rrf	___aodiv@divisor,f
  8749  0641  3001               	movlw	1
  8750  0642  02F2               	subwf	___aodiv@counter,f
  8751  0643  1D03               	btfss	3,2
  8752  0644  2E46               	goto	u3241
  8753  0645  2E47               	goto	u3240
  8754  0646                     u3241:	
  8755  0646  2DFE               	goto	l3200
  8756  0647                     u3240:	
  8757  0647                     l3210:	
  8758  0647  0873               	movf	___aodiv@sign,w
  8759  0648  1903               	btfsc	3,2
  8760  0649  2E4B               	goto	u3251
  8761  064A  2E4C               	goto	u3250
  8762  064B                     u3251:	
  8763  064B  2E6A               	goto	l800
  8764  064C                     u3250:	
  8765  064C                     l3212:	
  8766  064C  09F4               	comf	___aodiv@quotient,f
  8767  064D  09F5               	comf	___aodiv@quotient+1,f
  8768  064E  09F6               	comf	___aodiv@quotient+2,f
  8769  064F  09F7               	comf	___aodiv@quotient+3,f
  8770  0650  09F8               	comf	___aodiv@quotient+4,f
  8771  0651  09F9               	comf	___aodiv@quotient+5,f
  8772  0652  09FA               	comf	___aodiv@quotient+6,f
  8773  0653  09FB               	comf	___aodiv@quotient+7,f
  8774  0654  0AF4               	incf	___aodiv@quotient,f
  8775  0655  1D03               	skipz
  8776  0656  2E6A               	goto	u326lld
  8777  0657  0AF5               	incf	___aodiv@quotient+1,f
  8778  0658  1D03               	skipz
  8779  0659  2E6A               	goto	u326lld
  8780  065A  0AF6               	incf	___aodiv@quotient+2,f
  8781  065B  1D03               	skipz
  8782  065C  2E6A               	goto	u326lld
  8783  065D  0AF7               	incf	___aodiv@quotient+3,f
  8784  065E  1D03               	skipz
  8785  065F  2E6A               	goto	u326lld
  8786  0660  0AF8               	incf	___aodiv@quotient+4,f
  8787  0661  1D03               	skipz
  8788  0662  2E6A               	goto	u326lld
  8789  0663  0AF9               	incf	___aodiv@quotient+5,f
  8790  0664  1D03               	skipz
  8791  0665  2E6A               	goto	u326lld
  8792  0666  0AFA               	incf	___aodiv@quotient+6,f
  8793  0667  1D03               	skipz
  8794  0668  2E6A               	goto	u326lld
  8795  0669  0AFB               	incf	___aodiv@quotient+7,f
  8796  066A                     u326lld:	
  8797  066A                     l800:	
  8798  066A  0874               	movf	___aodiv@quotient,w
  8799  066B  0020               	movlb	0	; select bank0
  8800  066C  00A0               	movwf	?___aodiv
  8801  066D  0875               	movf	___aodiv@quotient+1,w
  8802  066E  00A1               	movwf	?___aodiv+1
  8803  066F  0876               	movf	___aodiv@quotient+2,w
  8804  0670  00A2               	movwf	?___aodiv+2
  8805  0671  0877               	movf	___aodiv@quotient+3,w
  8806  0672  00A3               	movwf	?___aodiv+3
  8807  0673  0878               	movf	___aodiv@quotient+4,w
  8808  0674  00A4               	movwf	?___aodiv+4
  8809  0675  0879               	movf	___aodiv@quotient+5,w
  8810  0676  00A5               	movwf	?___aodiv+5
  8811  0677  087A               	movf	___aodiv@quotient+6,w
  8812  0678  00A6               	movwf	?___aodiv+6
  8813  0679  087B               	movf	___aodiv@quotient+7,w
  8814  067A  00A7               	movwf	?___aodiv+7
  8815  067B                     l801:	
  8816  067B  0008               	return
  8817  067C                     __end_of___aodiv:	
  8818                           
  8819                           	psect	text25
  8820  0F51                     __ptext25:	
  8821 ;; *************** function _atoi *****************
  8822 ;; Defined at:
  8823 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  s               2    7[COMMON] PTR const unsigned char 
  8826 ;;		 -> STR_4(4), STR_3(7), STR_2(18), STR_1(18), 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;  n               2   11[BANK0 ] int 
  8829 ;;  neg             2    4[BANK0 ] int 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  2    7[COMMON] int 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;Total ram usage:       15 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    5
  8846 ;; This function calls:
  8847 ;;		___wmul
  8848 ;;		_isdigit
  8849 ;;		_isspace
  8850 ;; This function is called by:
  8851 ;;		_vfpfcnvrt
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function _atoi
  8857  0F51                     _atoi:	
  8858  0F51                     l3378:	
  8859                           ;incstack = 0
  8860                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8861                           
  8862  0F51  0020               	movlb	0	; select bank0
  8863  0F52  01AB               	clrf	atoi@n
  8864  0F53  01AC               	clrf	atoi@n+1
  8865  0F54  01A4               	clrf	atoi@neg
  8866  0F55  01A5               	clrf	atoi@neg+1
  8867  0F56  2F5B               	goto	l3382
  8868  0F57                     l3380:	
  8869  0F57  3001               	movlw	1
  8870  0F58  07F7               	addwf	atoi@s,f
  8871  0F59  3000               	movlw	0
  8872  0F5A  3DF8               	addwfc	atoi@s+1,f
  8873  0F5B                     l3382:	
  8874  0F5B  01AA               	clrf	_atoi$1043
  8875  0F5C  0AAA               	incf	_atoi$1043,f
  8876  0F5D                     l3384:	
  8877  0F5D  0877               	movf	atoi@s,w
  8878  0F5E  0084               	movwf	4
  8879  0F5F  0878               	movf	atoi@s+1,w
  8880  0F60  0085               	movwf	5
  8881  0F61  0012               	moviw fsr0++
  8882  0F62  3A20               	xorlw	32
  8883  0F63  1903               	btfsc	3,2
  8884  0F64  2F66               	goto	u3721
  8885  0F65  2F67               	goto	u3720
  8886  0F66                     u3721:	
  8887  0F66  2F7C               	goto	l3390
  8888  0F67                     u3720:	
  8889  0F67                     l3386:	
  8890  0F67  0877               	movf	atoi@s,w
  8891  0F68  0084               	movwf	4
  8892  0F69  0878               	movf	atoi@s+1,w
  8893  0F6A  0085               	movwf	5
  8894  0F6B  0800               	movf	0,w	;code access
  8895  0F6C  3EF7               	addlw	247
  8896  0F6D  00A0               	movwf	??_atoi
  8897  0F6E  30FF               	movlw	255
  8898  0F6F  1803               	skipnc
  8899  0F70  3000               	movlw	0
  8900  0F71  00A1               	movwf	??_atoi+1
  8901  0F72  3000               	movlw	0
  8902  0F73  0221               	subwf	??_atoi+1,w
  8903  0F74  3005               	movlw	5
  8904  0F75  1903               	skipnz
  8905  0F76  0220               	subwf	??_atoi,w
  8906  0F77  1C03               	skipc
  8907  0F78  2F7A               	goto	u3731
  8908  0F79  2F7B               	goto	u3730
  8909  0F7A                     u3731:	
  8910  0F7A  2F7C               	goto	l3390
  8911  0F7B                     u3730:	
  8912  0F7B                     l3388:	
  8913  0F7B  01AA               	clrf	_atoi$1043
  8914  0F7C                     l3390:	
  8915  0F7C  082A               	movf	_atoi$1043,w
  8916  0F7D  00A0               	movwf	??_atoi
  8917  0F7E  01A1               	clrf	??_atoi+1
  8918  0F7F  0820               	movf	??_atoi,w
  8919  0F80  00A6               	movwf	_atoi$1042
  8920  0F81  0821               	movf	??_atoi+1,w
  8921  0F82  00A7               	movwf	_atoi$1042+1
  8922  0F83                     l3394:	
  8923  0F83  0826               	movf	_atoi$1042,w
  8924  0F84  0427               	iorwf	_atoi$1042+1,w
  8925  0F85  1D03               	btfss	3,2
  8926  0F86  2F88               	goto	u3741
  8927  0F87  2F89               	goto	u3740
  8928  0F88                     u3741:	
  8929  0F88  2F57               	goto	l3380
  8930  0F89                     u3740:	
  8931  0F89  2F93               	goto	l3398
  8932  0F8A                     l3396:	
  8933  0F8A  3001               	movlw	1
  8934  0F8B  00A4               	movwf	atoi@neg
  8935  0F8C  3000               	movlw	0
  8936  0F8D  00A5               	movwf	atoi@neg+1
  8937  0F8E                     l1175:	
  8938  0F8E  3001               	movlw	1
  8939  0F8F  07F7               	addwf	atoi@s,f
  8940  0F90  3000               	movlw	0
  8941  0F91  3DF8               	addwfc	atoi@s+1,f
  8942  0F92  2FC7               	goto	l3404
  8943  0F93                     l3398:	
  8944  0F93  0877               	movf	atoi@s,w
  8945  0F94  0084               	movwf	4
  8946  0F95  0878               	movf	atoi@s+1,w
  8947  0F96  0085               	movwf	5
  8948  0F97  0800               	movf	0,w	;code access
  8949  0F98  00A0               	movwf	??_atoi
  8950  0F99  01A1               	clrf	??_atoi+1
  8951                           
  8952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8953                           ; Switch size 1, requested type "simple"
  8954                           ; Number of cases is 1, Range of values is 0 to 0
  8955                           ; switch strategies available:
  8956                           ; Name         Instructions Cycles
  8957                           ; simple_byte            4     3 (average)
  8958                           ; direct_byte            8     6 (fixed)
  8959                           ; jumptable            260     6 (fixed)
  8960                           ;	Chosen strategy is simple_byte
  8961  0F9A  0821               	movf	??_atoi+1,w
  8962  0F9B  3A00               	xorlw	0	; case 0
  8963  0F9C  1903               	skipnz
  8964  0F9D  2F9F               	goto	l3904
  8965  0F9E  2FC7               	goto	l3404
  8966  0F9F                     l3904:	
  8967                           
  8968                           ; Switch size 1, requested type "simple"
  8969                           ; Number of cases is 2, Range of values is 43 to 45
  8970                           ; switch strategies available:
  8971                           ; Name         Instructions Cycles
  8972                           ; simple_byte            7     4 (average)
  8973                           ; direct_byte           15     9 (fixed)
  8974                           ; jumptable            263     9 (fixed)
  8975                           ;	Chosen strategy is simple_byte
  8976  0F9F  0820               	movf	??_atoi,w
  8977  0FA0  3A2B               	xorlw	43	; case 43
  8978  0FA1  1903               	skipnz
  8979  0FA2  2F8E               	goto	l1175
  8980  0FA3  3A06               	xorlw	6	; case 45
  8981  0FA4  1903               	skipnz
  8982  0FA5  2F8A               	goto	l3396
  8983  0FA6  2FC7               	goto	l3404
  8984  0FA7                     l3400:	
  8985  0FA7  0877               	movf	atoi@s,w
  8986  0FA8  0084               	movwf	4
  8987  0FA9  0878               	movf	atoi@s+1,w
  8988  0FAA  0085               	movwf	5
  8989  0FAB  0800               	movf	0,w	;code access
  8990  0FAC  00A0               	movwf	??_atoi
  8991  0FAD  082C               	movf	atoi@n+1,w
  8992  0FAE  00F2               	movwf	___wmul@multiplier+1
  8993  0FAF  082B               	movf	atoi@n,w
  8994  0FB0  00F1               	movwf	___wmul@multiplier
  8995  0FB1  300A               	movlw	10
  8996  0FB2  00F3               	movwf	___wmul@multiplicand
  8997  0FB3  3000               	movlw	0
  8998  0FB4  00F4               	movwf	___wmul@multiplicand+1
  8999  0FB5  318C  241F  318F   	fcall	___wmul
  9000  0FB8  0872               	movf	?___wmul+1,w
  9001  0FB9  0020               	movlb	0	; select bank0
  9002  0FBA  00A2               	movwf	??_atoi+2
  9003  0FBB  0820               	movf	??_atoi,w
  9004  0FBC  0271               	subwf	?___wmul,w
  9005  0FBD  00A1               	movwf	??_atoi+1
  9006  0FBE  1C03               	skipc
  9007  0FBF  03A2               	decf	??_atoi+2,f
  9008  0FC0  0821               	movf	??_atoi+1,w
  9009  0FC1  3E30               	addlw	48
  9010  0FC2  00AB               	movwf	atoi@n
  9011  0FC3  3000               	movlw	0
  9012  0FC4  3D22               	addwfc	??_atoi+2,w
  9013  0FC5  00AC               	movwf	atoi@n+1
  9014  0FC6  2F8E               	goto	l1175
  9015  0FC7                     l3404:	
  9016  0FC7  0877               	movf	atoi@s,w
  9017  0FC8  0084               	movwf	4
  9018  0FC9  0878               	movf	atoi@s+1,w
  9019  0FCA  0085               	movwf	5
  9020  0FCB  0800               	movf	0,w	;code access
  9021  0FCC  3ED0               	addlw	208
  9022  0FCD  00A0               	movwf	??_atoi
  9023  0FCE  30FF               	movlw	255
  9024  0FCF  1803               	skipnc
  9025  0FD0  3000               	movlw	0
  9026  0FD1  00A1               	movwf	??_atoi+1
  9027  0FD2  3000               	movlw	0
  9028  0FD3  0221               	subwf	??_atoi+1,w
  9029  0FD4  300A               	movlw	10
  9030  0FD5  1903               	skipnz
  9031  0FD6  0220               	subwf	??_atoi,w
  9032  0FD7  1C03               	skipc
  9033  0FD8  2FDA               	goto	u3751
  9034  0FD9  2FDC               	goto	u3750
  9035  0FDA                     u3751:	
  9036  0FDA  3001               	movlw	1
  9037  0FDB  2FDD               	goto	u3760
  9038  0FDC                     u3750:	
  9039  0FDC  3000               	movlw	0
  9040  0FDD                     u3760:	
  9041  0FDD  00A2               	movwf	??_atoi+2
  9042  0FDE  01A3               	clrf	??_atoi+3
  9043  0FDF  0822               	movf	??_atoi+2,w
  9044  0FE0  00A8               	movwf	_atoi$1044
  9045  0FE1  0823               	movf	??_atoi+3,w
  9046  0FE2  00A9               	movwf	_atoi$1044+1
  9047  0FE3                     l3408:	
  9048  0FE3  0828               	movf	_atoi$1044,w
  9049  0FE4  0429               	iorwf	_atoi$1044+1,w
  9050  0FE5  1D03               	btfss	3,2
  9051  0FE6  2FE8               	goto	u3771
  9052  0FE7  2FE9               	goto	u3770
  9053  0FE8                     u3771:	
  9054  0FE8  2FA7               	goto	l3400
  9055  0FE9                     u3770:	
  9056  0FE9                     l3410:	
  9057  0FE9  0824               	movf	atoi@neg,w
  9058  0FEA  0425               	iorwf	atoi@neg+1,w
  9059  0FEB  1D03               	btfss	3,2
  9060  0FEC  2FEE               	goto	u3781
  9061  0FED  2FEF               	goto	u3780
  9062  0FEE                     u3781:	
  9063  0FEE  2FFB               	goto	l3414
  9064  0FEF                     u3780:	
  9065  0FEF                     l3412:	
  9066  0FEF  092B               	comf	atoi@n,w
  9067  0FF0  00A0               	movwf	??_atoi
  9068  0FF1  092C               	comf	atoi@n+1,w
  9069  0FF2  00A1               	movwf	??_atoi+1
  9070  0FF3  0AA0               	incf	??_atoi,f
  9071  0FF4  1903               	skipnz
  9072  0FF5  0AA1               	incf	??_atoi+1,f
  9073  0FF6  0820               	movf	??_atoi,w
  9074  0FF7  00F7               	movwf	?_atoi
  9075  0FF8  0821               	movf	??_atoi+1,w
  9076  0FF9  00F8               	movwf	?_atoi+1
  9077  0FFA  2FFF               	goto	l1188
  9078  0FFB                     l3414:	
  9079  0FFB  082C               	movf	atoi@n+1,w
  9080  0FFC  00F8               	movwf	?_atoi+1
  9081  0FFD  082B               	movf	atoi@n,w
  9082  0FFE  00F7               	movwf	?_atoi
  9083  0FFF                     l1188:	
  9084  0FFF  0008               	return
  9085  1000                     __end_of_atoi:	
  9086                           
  9087                           	psect	text26
  9088  0C3E                     __ptext26:	
  9089 ;; *************** function _isspace *****************
  9090 ;; Defined at:
  9091 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  c               2    1[COMMON] int 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  2    1[COMMON] int 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;Total ram usage:        5 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    4
  9112 ;; This function calls:
  9113 ;;		Nothing
  9114 ;; This function is called by:
  9115 ;;		_atoi
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function _isspace
  9121  0C3E                     _isspace:	
  9122  0C3E                     l3244:	
  9123                           ;incstack = 0
  9124                           ; Regs used in _isspace: [wreg+status,2+status,0]
  9125                           
  9126  0C3E  01F5               	clrf	_isspace$1069
  9127  0C3F  0AF5               	incf	_isspace$1069,f
  9128  0C40                     l3246:	
  9129  0C40  3020               	movlw	32
  9130  0C41  0671               	xorwf	isspace@c,w
  9131  0C42  0472               	iorwf	isspace@c+1,w
  9132  0C43  1903               	btfsc	3,2
  9133  0C44  2C46               	goto	u3371
  9134  0C45  2C47               	goto	u3370
  9135  0C46                     u3371:	
  9136  0C46  2C57               	goto	l3252
  9137  0C47                     u3370:	
  9138  0C47                     l3248:	
  9139  0C47  0871               	movf	isspace@c,w
  9140  0C48  3EF7               	addlw	247
  9141  0C49  00F3               	movwf	??_isspace
  9142  0C4A  30FF               	movlw	255
  9143  0C4B  3D72               	addwfc	isspace@c+1,w
  9144  0C4C  00F4               	movwf	??_isspace+1
  9145  0C4D  3000               	movlw	0
  9146  0C4E  0274               	subwf	??_isspace+1,w
  9147  0C4F  3005               	movlw	5
  9148  0C50  1903               	skipnz
  9149  0C51  0273               	subwf	??_isspace,w
  9150  0C52  1C03               	skipc
  9151  0C53  2C55               	goto	u3381
  9152  0C54  2C56               	goto	u3380
  9153  0C55                     u3381:	
  9154  0C55  2C57               	goto	l3252
  9155  0C56                     u3380:	
  9156  0C56                     l3250:	
  9157  0C56  01F5               	clrf	_isspace$1069
  9158  0C57                     l3252:	
  9159  0C57  0875               	movf	_isspace$1069,w
  9160  0C58  00F3               	movwf	??_isspace
  9161  0C59  01F4               	clrf	??_isspace+1
  9162  0C5A  0873               	movf	??_isspace,w
  9163  0C5B  00F1               	movwf	?_isspace
  9164  0C5C  0874               	movf	??_isspace+1,w
  9165  0C5D  00F2               	movwf	?_isspace+1
  9166  0C5E                     l1205:	
  9167  0C5E  0008               	return
  9168  0C5F                     __end_of_isspace:	
  9169                           
  9170                           	psect	text27
  9171  0B6A                     __ptext27:	
  9172 ;; *************** function _isdigit *****************
  9173 ;; Defined at:
  9174 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  c               2    1[COMMON] int 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  2    1[COMMON] int 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;Total ram usage:        6 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    4
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_vfpfcnvrt
  9199 ;;		_atoi
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _isdigit
  9205  0B6A                     _isdigit:	
  9206  0B6A                     l3158:	
  9207                           ;incstack = 0
  9208                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9209                           
  9210  0B6A  0871               	movf	isdigit@c,w
  9211  0B6B  3ED0               	addlw	208
  9212  0B6C  00F3               	movwf	??_isdigit
  9213  0B6D  30FF               	movlw	255
  9214  0B6E  3D72               	addwfc	isdigit@c+1,w
  9215  0B6F  00F4               	movwf	??_isdigit+1
  9216  0B70  3000               	movlw	0
  9217  0B71  0274               	subwf	??_isdigit+1,w
  9218  0B72  300A               	movlw	10
  9219  0B73  1903               	skipnz
  9220  0B74  0273               	subwf	??_isdigit,w
  9221  0B75  1C03               	skipc
  9222  0B76  2B78               	goto	u3101
  9223  0B77  2B7A               	goto	u3100
  9224  0B78                     u3101:	
  9225  0B78  3001               	movlw	1
  9226  0B79  2B7B               	goto	u3110
  9227  0B7A                     u3100:	
  9228  0B7A  3000               	movlw	0
  9229  0B7B                     u3110:	
  9230  0B7B  00F5               	movwf	??_isdigit+2
  9231  0B7C  01F6               	clrf	??_isdigit+3
  9232  0B7D  0875               	movf	??_isdigit+2,w
  9233  0B7E  00F1               	movwf	?_isdigit
  9234  0B7F  0876               	movf	??_isdigit+3,w
  9235  0B80  00F2               	movwf	?_isdigit+1
  9236  0B81                     l1197:	
  9237  0B81  0008               	return
  9238  0B82                     __end_of_isdigit:	
  9239                           
  9240                           	psect	text28
  9241  0C1F                     __ptext28:	
  9242 ;; *************** function ___wmul *****************
  9243 ;; Defined at:
  9244 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  multiplier      2    1[COMMON] unsigned int 
  9247 ;;  multiplicand    2    3[COMMON] unsigned int 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  product         2    5[COMMON] unsigned int 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  2    1[COMMON] unsigned int 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;Total ram usage:        6 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    4
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_atoi
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function ___wmul
  9275  0C1F                     ___wmul:	
  9276  0C1F                     l3162:	
  9277                           ;incstack = 0
  9278                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9279                           
  9280  0C1F  01F5               	clrf	___wmul@product
  9281  0C20  01F6               	clrf	___wmul@product+1
  9282  0C21                     l3164:	
  9283  0C21  1C71               	btfss	___wmul@multiplier,0
  9284  0C22  2C24               	goto	u3121
  9285  0C23  2C25               	goto	u3120
  9286  0C24                     u3121:	
  9287  0C24  2C29               	goto	l700
  9288  0C25                     u3120:	
  9289  0C25                     l3166:	
  9290  0C25  0873               	movf	___wmul@multiplicand,w
  9291  0C26  07F5               	addwf	___wmul@product,f
  9292  0C27  0874               	movf	___wmul@multiplicand+1,w
  9293  0C28  3DF6               	addwfc	___wmul@product+1,f
  9294  0C29                     l700:	
  9295  0C29  3001               	movlw	1
  9296  0C2A                     u3135:	
  9297  0C2A  35F3               	lslf	___wmul@multiplicand,f
  9298  0C2B  0DF4               	rlf	___wmul@multiplicand+1,f
  9299  0C2C  0B89               	decfsz	9,f
  9300  0C2D  2C2A               	goto	u3135
  9301  0C2E                     l3168:	
  9302  0C2E  3001               	movlw	1
  9303  0C2F                     u3145:	
  9304  0C2F  36F2               	lsrf	___wmul@multiplier+1,f
  9305  0C30  0CF1               	rrf	___wmul@multiplier,f
  9306  0C31  0B89               	decfsz	9,f
  9307  0C32  2C2F               	goto	u3145
  9308  0C33                     l3170:	
  9309  0C33  0871               	movf	___wmul@multiplier,w
  9310  0C34  0472               	iorwf	___wmul@multiplier+1,w
  9311  0C35  1D03               	btfss	3,2
  9312  0C36  2C38               	goto	u3151
  9313  0C37  2C39               	goto	u3150
  9314  0C38                     u3151:	
  9315  0C38  2C21               	goto	l3164
  9316  0C39                     u3150:	
  9317  0C39                     l3172:	
  9318  0C39  0876               	movf	___wmul@product+1,w
  9319  0C3A  00F2               	movwf	?___wmul+1
  9320  0C3B  0875               	movf	___wmul@product,w
  9321  0C3C  00F1               	movwf	?___wmul
  9322  0C3D                     l702:	
  9323  0C3D  0008               	return
  9324  0C3E                     __end_of___wmul:	
  9325                           
  9326                           	psect	text29
  9327  0B27                     __ptext29:	
  9328 ;; *************** function _EUSART_is_rx_ready *****************
  9329 ;; Defined at:
  9330 ;;		line 137 in file "mcc_generated_files/eusart.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      _Bool 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_main
  9355 ;;		_read_str_UART
  9356 ;;		_echo
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _EUSART_is_rx_ready
  9362  0B27                     _EUSART_is_rx_ready:	
  9363  0B27                     l3610:	
  9364                           ;incstack = 0
  9365                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  9366                           
  9367                           
  9368                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  9369  0B27  0021               	movlb	1	; select bank1
  9370  0B28  0850               	movf	_eusartRxCount^(0+128),w	;volatile
  9371  0B29  1D03               	btfss	3,2
  9372  0B2A  2B2C               	goto	u3991
  9373  0B2B  2B2E               	goto	u3990
  9374  0B2C                     u3991:	
  9375  0B2C  3001               	movlw	1
  9376  0B2D  2B2F               	goto	u4000
  9377  0B2E                     u3990:	
  9378  0B2E  3000               	movlw	0
  9379  0B2F                     u4000:	
  9380  0B2F                     l81:	
  9381  0B2F  0008               	return
  9382  0B30                     __end_of_EUSART_is_rx_ready:	
  9383                           
  9384                           	psect	text30
  9385  0D46                     __ptext30:	
  9386 ;; *************** function _EUSART_Read *****************
  9387 ;; Defined at:
  9388 ;;		line 151 in file "mcc_generated_files/eusart.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;		None
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;  readValue       1    2[COMMON] unsigned char 
  9393 ;; Return value:  Size  Location     Type
  9394 ;;                  1    wreg      unsigned char 
  9395 ;; Registers used:
  9396 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9397 ;; Tracked objects:
  9398 ;;		On entry : 0/0
  9399 ;;		On exit  : 0/0
  9400 ;;		Unchanged: 0/0
  9401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;Total ram usage:        2 bytes
  9407 ;; Hardware stack levels used:    1
  9408 ;; Hardware stack levels required when called:    4
  9409 ;; This function calls:
  9410 ;;		Nothing
  9411 ;; This function is called by:
  9412 ;;		_read_str_UART
  9413 ;;		_getch
  9414 ;;		_echo
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           
  9419                           ;psect for function _EUSART_Read
  9420  0D46                     _EUSART_Read:	
  9421  0D46                     l3614:	
  9422                           ;incstack = 0
  9423                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9424                           
  9425  0D46                     l3616:	
  9426                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  9427                           
  9428                           
  9429                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  9430  0D46  0021               	movlb	1	; select bank1
  9431  0D47  0850               	movf	_eusartRxCount^(0+128),w	;volatile
  9432  0D48  1903               	btfsc	3,2
  9433  0D49  2D4B               	goto	u4011
  9434  0D4A  2D4C               	goto	u4010
  9435  0D4B                     u4011:	
  9436  0D4B  2D46               	goto	l3616
  9437  0D4C                     u4010:	
  9438  0D4C                     l3618:	
  9439                           
  9440                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  9441  0D4C  0851               	movf	_eusartRxTail^(0+128),w	;volatile
  9442  0D4D  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  9443  0D4E  0086               	movwf	6
  9444  0D4F  3001               	movlw	1	; select bank2/3
  9445  0D50  0087               	movwf	7
  9446  0D51  0801               	movf	1,w
  9447  0D52  00F1               	movwf	??_EUSART_Read
  9448  0D53  0871               	movf	??_EUSART_Read,w
  9449  0D54  00CF               	movwf	_eusartRxLastError^(0+128)	;volatile
  9450                           
  9451                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  9452  0D55  0851               	movf	_eusartRxTail^(0+128),w
  9453  0D56  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9454  0D57  0086               	movwf	6
  9455  0D58  3001               	movlw	1	; select bank2/3
  9456  0D59  0087               	movwf	7
  9457  0D5A  0801               	movf	1,w
  9458  0D5B  00F1               	movwf	??_EUSART_Read
  9459  0D5C  0871               	movf	??_EUSART_Read,w
  9460  0D5D  00F2               	movwf	EUSART_Read@readValue
  9461  0D5E                     l3620:	
  9462  0D5E  3001               	movlw	1
  9463  0D5F  00F1               	movwf	??_EUSART_Read
  9464  0D60  0871               	movf	??_EUSART_Read,w
  9465  0D61  07D1               	addwf	_eusartRxTail^(0+128),f	;volatile
  9466  0D62                     l3622:	
  9467                           
  9468                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  9469  0D62  3008               	movlw	8
  9470  0D63  0251               	subwf	_eusartRxTail^(0+128),w	;volatile
  9471  0D64  1C03               	skipc
  9472  0D65  2D67               	goto	u4021
  9473  0D66  2D68               	goto	u4020
  9474  0D67                     u4021:	
  9475  0D67  2D69               	goto	l3626
  9476  0D68                     u4020:	
  9477  0D68                     l3624:	
  9478                           
  9479                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  9480  0D68  01D1               	clrf	_eusartRxTail^(0+128)	;volatile
  9481  0D69                     l3626:	
  9482                           
  9483                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
  9484  0D69  002E               	movlb	14	; select bank14
  9485  0D6A  1299               	bcf	25,5	;volatile
  9486  0D6B                     l3628:	
  9487                           
  9488                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  9489  0D6B  3001               	movlw	1
  9490  0D6C  0021               	movlb	1	; select bank1
  9491  0D6D  02D0               	subwf	_eusartRxCount^(0+128),f	;volatile
  9492  0D6E                     l3630:	
  9493                           
  9494                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
  9495  0D6E  002E               	movlb	14	; select bank14
  9496  0D6F  1699               	bsf	25,5	;volatile
  9497  0D70                     l3632:	
  9498                           
  9499                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  9500  0D70  0872               	movf	EUSART_Read@readValue,w
  9501  0D71                     l94:	
  9502  0D71  0008               	return
  9503  0D72                     __end_of_EUSART_Read:	
  9504                           
  9505                           	psect	text31
  9506  0B39                     __ptext31:	
  9507 ;; *************** function _SYSTEM_Initialize *****************
  9508 ;; Defined at:
  9509 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0, pclath, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    6
  9530 ;; This function calls:
  9531 ;;		_EUSART_Initialize
  9532 ;;		_OSCILLATOR_Initialize
  9533 ;;		_PIN_MANAGER_Initialize
  9534 ;;		_PMD_Initialize
  9535 ;; This function is called by:
  9536 ;;		_main
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           
  9541                           ;psect for function _SYSTEM_Initialize
  9542  0B39                     _SYSTEM_Initialize:	
  9543  0B39                     l3718:	
  9544                           ;incstack = 0
  9545                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9546                           
  9547                           
  9548                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9549  0B39  318B  2316  318B   	fcall	_PMD_Initialize
  9550  0B3C                     l3720:	
  9551                           
  9552                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9553  0B3C  3187  27BF  318B   	fcall	_PIN_MANAGER_Initialize
  9554  0B3F                     l3722:	
  9555                           
  9556                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9557  0B3F  318B  231E  318B   	fcall	_OSCILLATOR_Initialize
  9558  0B42                     l3724:	
  9559                           
  9560                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  9561  0B42  318D  25DE  318B   	fcall	_EUSART_Initialize
  9562  0B45                     l204:	
  9563  0B45  0008               	return
  9564  0B46                     __end_of_SYSTEM_Initialize:	
  9565                           
  9566                           	psect	text32
  9567  0B16                     __ptext32:	
  9568 ;; *************** function _PMD_Initialize *****************
  9569 ;; Defined at:
  9570 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;		None
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;		None
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		status,2
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;Total ram usage:        0 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; Hardware stack levels required when called:    4
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_SYSTEM_Initialize
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _PMD_Initialize
  9600  0B16                     _PMD_Initialize:	
  9601  0B16                     l3636:	
  9602                           ;incstack = 0
  9603                           ; Regs used in _PMD_Initialize: [status,2]
  9604                           
  9605                           
  9606                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  9607  0B16  002F               	movlb	15	; select bank15
  9608  0B17  0196               	clrf	22	;volatile
  9609                           
  9610                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  9611  0B18  0197               	clrf	23	;volatile
  9612                           
  9613                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  9614  0B19  0198               	clrf	24	;volatile
  9615                           
  9616                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  9617  0B1A  0199               	clrf	25	;volatile
  9618                           
  9619                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  9620  0B1B  019A               	clrf	26	;volatile
  9621                           
  9622                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  9623  0B1C  019B               	clrf	27	;volatile
  9624  0B1D                     l210:	
  9625  0B1D  0008               	return
  9626  0B1E                     __end_of_PMD_Initialize:	
  9627                           
  9628                           	psect	text33
  9629  07BF                     __ptext33:	
  9630 ;; *************** function _PIN_MANAGER_Initialize *****************
  9631 ;; Defined at:
  9632 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  1    wreg      void 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;Total ram usage:        0 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    4
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_SYSTEM_Initialize
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function _PIN_MANAGER_Initialize
  9662  07BF                     _PIN_MANAGER_Initialize:	
  9663  07BF                     l3638:	
  9664                           ;incstack = 0
  9665                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9666                           
  9667                           
  9668                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9669  07BF  0020               	movlb	0	; select bank0
  9670  07C0  019A               	clrf	26	;volatile
  9671                           
  9672                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9673  07C1  0199               	clrf	25	;volatile
  9674                           
  9675                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9676  07C2  0196               	clrf	22	;volatile
  9677                           
  9678                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9679  07C3  0197               	clrf	23	;volatile
  9680                           
  9681                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9682  07C4  0198               	clrf	24	;volatile
  9683  07C5                     l3640:	
  9684                           
  9685                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9686  07C5  3007               	movlw	7
  9687  07C6  0095               	movwf	21	;volatile
  9688  07C7                     l3642:	
  9689                           
  9690                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
  9691  07C7  307F               	movlw	127
  9692  07C8  0091               	movwf	17	;volatile
  9693  07C9                     l3644:	
  9694                           
  9695                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9696  07C9  30FF               	movlw	255
  9697  07CA  0092               	movwf	18	;volatile
  9698  07CB                     l3646:	
  9699                           
  9700                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  9701  07CB  30BF               	movlw	191
  9702  07CC  0093               	movwf	19	;volatile
  9703  07CD                     l3648:	
  9704                           
  9705                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9706  07CD  30FF               	movlw	255
  9707  07CE  0094               	movwf	20	;volatile
  9708  07CF                     l3650:	
  9709                           
  9710                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  9711  07CF  30FF               	movlw	255
  9712  07D0  003E               	movlb	30	; select bank30
  9713  07D1  00D9               	movwf	89	;volatile
  9714  07D2                     l3652:	
  9715                           
  9716                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x7F;
  9717  07D2  307F               	movlw	127
  9718  07D3  00CE               	movwf	78	;volatile
  9719  07D4                     l3654:	
  9720                           
  9721                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  9722  07D4  30FF               	movlw	255
  9723  07D5  00C3               	movwf	67	;volatile
  9724  07D6                     l3656:	
  9725                           
  9726                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9727  07D6  3007               	movlw	7
  9728  07D7  00E4               	movwf	100	;volatile
  9729  07D8                     l3658:	
  9730                           
  9731                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  9732  07D8  30FF               	movlw	255
  9733  07D9  00B8               	movwf	56	;volatile
  9734                           
  9735                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9736  07DA  01DA               	clrf	90	;volatile
  9737                           
  9738                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9739  07DB  01E5               	clrf	101	;volatile
  9740                           
  9741                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9742  07DC  01C4               	clrf	68	;volatile
  9743                           
  9744                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9745  07DD  01B9               	clrf	57	;volatile
  9746                           
  9747                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9748  07DE  01CF               	clrf	79	;volatile
  9749                           
  9750                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  9751  07DF  01E6               	clrf	102	;volatile
  9752                           
  9753                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  9754  07E0  01BA               	clrf	58	;volatile
  9755                           
  9756                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  9757  07E1  01C5               	clrf	69	;volatile
  9758                           
  9759                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  9760  07E2  01D0               	clrf	80	;volatile
  9761                           
  9762                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  9763  07E3  01DB               	clrf	91	;volatile
  9764  07E4                     l3660:	
  9765                           
  9766                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  9767  07E4  30FF               	movlw	255
  9768  07E5  00BB               	movwf	59	;volatile
  9769  07E6                     l3662:	
  9770                           
  9771                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  9772  07E6  30FF               	movlw	255
  9773  07E7  00C6               	movwf	70	;volatile
  9774  07E8                     l3664:	
  9775                           
  9776                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  9777  07E8  30FF               	movlw	255
  9778  07E9  00D1               	movwf	81	;volatile
  9779  07EA                     l3666:	
  9780                           
  9781                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  9782  07EA  30FF               	movlw	255
  9783  07EB  00DC               	movwf	92	;volatile
  9784  07EC                     l3668:	
  9785                           
  9786                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9787  07EC  3007               	movlw	7
  9788  07ED  00E7               	movwf	103	;volatile
  9789  07EE                     l3670:	
  9790                           
  9791                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9792  07EE  30FF               	movlw	255
  9793  07EF  00BC               	movwf	60	;volatile
  9794  07F0                     l3672:	
  9795                           
  9796                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9797  07F0  30FF               	movlw	255
  9798  07F1  00C7               	movwf	71	;volatile
  9799  07F2                     l3674:	
  9800                           
  9801                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9802  07F2  30FF               	movlw	255
  9803  07F3  00D2               	movwf	82	;volatile
  9804  07F4                     l3676:	
  9805                           
  9806                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9807  07F4  30FF               	movlw	255
  9808  07F5  00DD               	movwf	93	;volatile
  9809  07F6                     l3678:	
  9810                           
  9811                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9812  07F6  3007               	movlw	7
  9813  07F7  00E8               	movwf	104	;volatile
  9814  07F8                     l3680:	
  9815                           
  9816                           ;mcc_generated_files/pin_manager.c: 127:     RXPPS = 0x17;
  9817  07F8  3017               	movlw	23
  9818  07F9  003D               	movlb	29	; select bank29
  9819  07FA  00CB               	movwf	75	;volatile
  9820  07FB                     l3682:	
  9821                           
  9822                           ;mcc_generated_files/pin_manager.c: 128:     RC6PPS = 0x10;
  9823  07FB  3010               	movlw	16
  9824  07FC  003E               	movlb	30	; select bank30
  9825  07FD  00A6               	movwf	38	;volatile
  9826  07FE                     l287:	
  9827  07FE  0008               	return
  9828  07FF                     __end_of_PIN_MANAGER_Initialize:	
  9829                           
  9830                           	psect	text34
  9831  0B1E                     __ptext34:	
  9832 ;; *************** function _OSCILLATOR_Initialize *****************
  9833 ;; Defined at:
  9834 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		wreg, status,2
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:    4
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_SYSTEM_Initialize
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _OSCILLATOR_Initialize
  9864  0B1E                     _OSCILLATOR_Initialize:	
  9865  0B1E                     l3684:	
  9866                           ;incstack = 0
  9867                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9868                           
  9869                           
  9870                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  9871  0B1E  3062               	movlw	98
  9872  0B1F  0031               	movlb	17	; select bank17
  9873  0B20  008D               	movwf	13	;volatile
  9874  0B21                     l3686:	
  9875                           
  9876                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  9877  0B21  018F               	clrf	15	;volatile
  9878  0B22                     l3688:	
  9879                           
  9880                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  9881  0B22  0191               	clrf	17	;volatile
  9882                           
  9883                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  9884  0B23  3002               	movlw	2
  9885  0B24  0093               	movwf	19	;volatile
  9886  0B25                     l3690:	
  9887                           
  9888                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  9889  0B25  0192               	clrf	18	;volatile
  9890  0B26                     l207:	
  9891  0B26  0008               	return
  9892  0B27                     __end_of_OSCILLATOR_Initialize:	
  9893                           
  9894                           	psect	text35
  9895  0DDE                     __ptext35:	
  9896 ;; *************** function _EUSART_Initialize *****************
  9897 ;; Defined at:
  9898 ;;		line 88 in file "mcc_generated_files/eusart.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;		None
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;		None
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      void 
  9905 ;; Registers used:
  9906 ;;		wreg, status,2, status,0, pclath, cstack
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;Total ram usage:        1 bytes
  9917 ;; Hardware stack levels used:    1
  9918 ;; Hardware stack levels required when called:    5
  9919 ;; This function calls:
  9920 ;;		_EUSART_SetErrorHandler
  9921 ;;		_EUSART_SetFramingErrorHandler
  9922 ;;		_EUSART_SetOverrunErrorHandler
  9923 ;;		_EUSART_SetRxInterruptHandler
  9924 ;;		_EUSART_SetTxInterruptHandler
  9925 ;; This function is called by:
  9926 ;;		_SYSTEM_Initialize
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           
  9931                           ;psect for function _EUSART_Initialize
  9932  0DDE                     _EUSART_Initialize:	
  9933  0DDE                     l3578:	
  9934                           ;incstack = 0
  9935                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9936                           
  9937                           
  9938                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
  9939  0DDE  002E               	movlb	14	; select bank14
  9940  0DDF  1299               	bcf	25,5	;volatile
  9941  0DE0                     l3580:	
  9942                           
  9943                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9944  0DE0  30A3               	movlw	low _EUSART_Receive_ISR
  9945  0DE1  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9946  0DE2  300D               	movlw	high _EUSART_Receive_ISR
  9947  0DE3  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9948  0DE4  318A  22F8  318D   	fcall	_EUSART_SetRxInterruptHandler
  9949  0DE7                     l3582:	
  9950                           
  9951                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
  9952  0DE7  002E               	movlb	14	; select bank14
  9953  0DE8  1219               	bcf	25,4	;volatile
  9954                           
  9955                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  9956  0DE9  305F               	movlw	low _EUSART_Transmit_ISR
  9957  0DEA  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9958  0DEB  300C               	movlw	high _EUSART_Transmit_ISR
  9959  0DEC  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9960  0DED  318A  22FE  318D   	fcall	_EUSART_SetTxInterruptHandler
  9961  0DF0                     l3584:	
  9962                           
  9963                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x0A;
  9964  0DF0  300A               	movlw	10
  9965  0DF1  0022               	movlb	2	; select bank2
  9966  0DF2  009F               	movwf	31	;volatile
  9967  0DF3                     l3586:	
  9968                           
  9969                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  9970  0DF3  3090               	movlw	144
  9971  0DF4  009D               	movwf	29	;volatile
  9972  0DF5                     l3588:	
  9973                           
  9974                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  9975  0DF5  3024               	movlw	36
  9976  0DF6  009E               	movwf	30	;volatile
  9977  0DF7                     l3590:	
  9978                           
  9979                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
  9980  0DF7  3019               	movlw	25
  9981  0DF8  009B               	movwf	27	;volatile
  9982  0DF9                     l3592:	
  9983                           
  9984                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  9985  0DF9  019C               	clrf	28	;volatile
  9986  0DFA                     l3594:	
  9987                           
  9988                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  9989  0DFA  30FF               	movlw	low _EUSART_DefaultFramingErrorHandler
  9990  0DFB  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9991  0DFC  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  9992  0DFD  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9993  0DFE  318A  22EC  318D   	fcall	_EUSART_SetFramingErrorHandler
  9994  0E01                     l3596:	
  9995                           
  9996                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  9997  0E01  30DE               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9998  0E02  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9999  0E03  300A               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10000  0E04  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10001  0E05  318A  22F2  318D   	fcall	_EUSART_SetOverrunErrorHandler
 10002  0E08                     l3598:	
 10003                           
 10004                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 10005  0E08  30DA               	movlw	low _EUSART_DefaultErrorHandler
 10006  0E09  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 10007  0E0A  300A               	movlw	high _EUSART_DefaultErrorHandler
 10008  0E0B  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10009  0E0C  318A  22E6  318D   	fcall	_EUSART_SetErrorHandler
 10010                           
 10011                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 10012  0E0F  0021               	movlb	1	; select bank1
 10013  0E10  01CF               	clrf	_eusartRxLastError^(0+128)	;volatile
 10014                           
 10015                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 10016  0E11  01D3               	clrf	_eusartTxHead^(0+128)	;volatile
 10017                           
 10018                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 10019  0E12  01D2               	clrf	_eusartTxTail^(0+128)	;volatile
 10020  0E13                     l3600:	
 10021                           
 10022                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 10023  0E13  3008               	movlw	8
 10024  0E14  00F3               	movwf	??_EUSART_Initialize
 10025  0E15  0873               	movf	??_EUSART_Initialize,w
 10026  0E16  00D4               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 10027  0E17                     l3602:	
 10028                           
 10029                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 10030  0E17  01FC               	clrf	_eusartRxHead	;volatile
 10031  0E18                     l3604:	
 10032                           
 10033                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 10034  0E18  01D1               	clrf	_eusartRxTail^(0+128)	;volatile
 10035  0E19                     l3606:	
 10036                           
 10037                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 10038  0E19  01D0               	clrf	_eusartRxCount^(0+128)	;volatile
 10039  0E1A                     l3608:	
 10040                           
 10041                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
 10042  0E1A  002E               	movlb	14	; select bank14
 10043  0E1B  1699               	bsf	25,5	;volatile
 10044  0E1C                     l75:	
 10045  0E1C  0008               	return
 10046  0E1D                     __end_of_EUSART_Initialize:	
 10047                           
 10048                           	psect	text36
 10049  0AFE                     __ptext36:	
 10050 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 10051 ;; Defined at:
 10052 ;;		line 285 in file "mcc_generated_files/eusart.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 10055 ;;		 -> EUSART_Transmit_ISR(1), 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;		None
 10058 ;; Return value:  Size  Location     Type
 10059 ;;                  1    wreg      void 
 10060 ;; Registers used:
 10061 ;;		wreg
 10062 ;; Tracked objects:
 10063 ;;		On entry : 0/0
 10064 ;;		On exit  : 0/0
 10065 ;;		Unchanged: 0/0
 10066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;Total ram usage:        2 bytes
 10072 ;; Hardware stack levels used:    1
 10073 ;; Hardware stack levels required when called:    4
 10074 ;; This function calls:
 10075 ;;		Nothing
 10076 ;; This function is called by:
 10077 ;;		_EUSART_Initialize
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           
 10082                           ;psect for function _EUSART_SetTxInterruptHandler
 10083  0AFE                     _EUSART_SetTxInterruptHandler:	
 10084  0AFE                     l3552:	
 10085                           ;incstack = 0
 10086                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 10087                           
 10088                           
 10089                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 10090  0AFE  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 10091  0AFF  0022               	movlb	2	; select bank2
 10092  0B00  00EF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 10093  0B01  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 10094  0B02  00EE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 10095  0B03                     l147:	
 10096  0B03  0008               	return
 10097  0B04                     __end_of_EUSART_SetTxInterruptHandler:	
 10098                           
 10099                           	psect	text37
 10100  0AF8                     __ptext37:	
 10101 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10102 ;; Defined at:
 10103 ;;		line 289 in file "mcc_generated_files/eusart.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 10106 ;;		 -> EUSART_Receive_ISR(1), 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;Total ram usage:        2 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    4
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_EUSART_Initialize
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _EUSART_SetRxInterruptHandler
 10134  0AF8                     _EUSART_SetRxInterruptHandler:	
 10135  0AF8                     l3550:	
 10136                           ;incstack = 0
 10137                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10138                           
 10139                           
 10140                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 10141  0AF8  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10142  0AF9  0022               	movlb	2	; select bank2
 10143  0AFA  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 10144  0AFB  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10145  0AFC  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 10146  0AFD                     l150:	
 10147  0AFD  0008               	return
 10148  0AFE                     __end_of_EUSART_SetRxInterruptHandler:	
 10149                           
 10150                           	psect	text38
 10151  0AF2                     __ptext38:	
 10152 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10153 ;; Defined at:
 10154 ;;		line 277 in file "mcc_generated_files/eusart.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 10157 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;Total ram usage:        2 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    4
 10176 ;; This function calls:
 10177 ;;		Nothing
 10178 ;; This function is called by:
 10179 ;;		_EUSART_Initialize
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           
 10184                           ;psect for function _EUSART_SetOverrunErrorHandler
 10185  0AF2                     _EUSART_SetOverrunErrorHandler:	
 10186  0AF2                     l3556:	
 10187                           ;incstack = 0
 10188                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10189                           
 10190                           
 10191                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 10192  0AF2  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10193  0AF3  0022               	movlb	2	; select bank2
 10194  0AF4  00E9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10195  0AF5  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10196  0AF6  00E8               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10197  0AF7                     l141:	
 10198  0AF7  0008               	return
 10199  0AF8                     __end_of_EUSART_SetOverrunErrorHandler:	
 10200                           
 10201                           	psect	text39
 10202  0AEC                     __ptext39:	
 10203 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10204 ;; Defined at:
 10205 ;;		line 273 in file "mcc_generated_files/eusart.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 10208 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;Total ram usage:        2 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    4
 10227 ;; This function calls:
 10228 ;;		Nothing
 10229 ;; This function is called by:
 10230 ;;		_EUSART_Initialize
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _EUSART_SetFramingErrorHandler
 10236  0AEC                     _EUSART_SetFramingErrorHandler:	
 10237  0AEC                     l3554:	
 10238                           ;incstack = 0
 10239                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10240                           
 10241                           
 10242                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 10243  0AEC  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10244  0AED  0022               	movlb	2	; select bank2
 10245  0AEE  00EB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10246  0AEF  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10247  0AF0  00EA               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10248  0AF1                     l138:	
 10249  0AF1  0008               	return
 10250  0AF2                     __end_of_EUSART_SetFramingErrorHandler:	
 10251                           
 10252                           	psect	text40
 10253  0AE6                     __ptext40:	
 10254 ;; *************** function _EUSART_SetErrorHandler *****************
 10255 ;; Defined at:
 10256 ;;		line 281 in file "mcc_generated_files/eusart.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 10259 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:        2 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    4
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_EUSART_Initialize
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           
 10286                           ;psect for function _EUSART_SetErrorHandler
 10287  0AE6                     _EUSART_SetErrorHandler:	
 10288  0AE6                     l3558:	
 10289                           ;incstack = 0
 10290                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10291                           
 10292                           
 10293                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 10294  0AE6  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10295  0AE7  0022               	movlb	2	; select bank2
 10296  0AE8  00E7               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 10297  0AE9  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10298  0AEA  00E6               	movwf	_EUSART_ErrorHandler^(0+256)
 10299  0AEB                     l144:	
 10300  0AEB  0008               	return
 10301  0AEC                     __end_of_EUSART_SetErrorHandler:	
 10302                           
 10303                           	psect	intentry
 10304  0004                     __pintentry:	
 10305 ;; *************** function _INTERRUPT_InterruptManager *****************
 10306 ;; Defined at:
 10307 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    3
 10328 ;; This function calls:
 10329 ;;		Absolute function
 10330 ;;		_EUSART_Receive_ISR
 10331 ;;		_EUSART_Transmit_ISR
 10332 ;; This function is called by:
 10333 ;;		Interrupt level 1
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337  0004                     _INTERRUPT_InterruptManager:	
 10338                           
 10339                           ;incstack = 0
 10340  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10341                           
 10342                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10343  0005  3180               	pagesel	$
 10344  0006                     i1l2906:	
 10345                           
 10346                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 10347  0006  1F0B               	btfss	11,6	;volatile
 10348  0007  2809               	goto	u271_21
 10349  0008  280A               	goto	u271_20
 10350  0009                     u271_21:	
 10351  0009  2829               	goto	i1l171
 10352  000A                     u271_20:	
 10353  000A                     i1l2908:	
 10354                           
 10355                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 10356  000A  002E               	movlb	14	; select bank14
 10357  000B  1E19               	btfss	25,4	;volatile
 10358  000C  280E               	goto	u272_21
 10359  000D  280F               	goto	u272_20
 10360  000E                     u272_21:	
 10361  000E  281A               	goto	i1l166
 10362  000F                     u272_20:	
 10363  000F                     i1l2910:	
 10364  000F  1E0F               	btfss	15,4	;volatile
 10365  0010  2812               	goto	u273_21
 10366  0011  2813               	goto	u273_20
 10367  0012                     u273_21:	
 10368  0012  281A               	goto	i1l166
 10369  0013                     u273_20:	
 10370  0013                     i1l2912:	
 10371                           
 10372                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 10373  0013  0022               	movlb	2	; select bank2
 10374  0014  086F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 10375  0015  008A               	movwf	10
 10376  0016  086E               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 10377  0017  000A               	callw
 10378  0018  3180               	pagesel	$
 10379                           
 10380                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 10381  0019  2829               	goto	i1l171
 10382  001A                     i1l166:	
 10383                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 10384                           
 10385  001A  1E99               	btfss	25,5	;volatile
 10386  001B  281D               	goto	u274_21
 10387  001C  281E               	goto	u274_20
 10388  001D                     u274_21:	
 10389  001D  2829               	goto	i1l167
 10390  001E                     u274_20:	
 10391  001E                     i1l2914:	
 10392  001E  1E8F               	btfss	15,5	;volatile
 10393  001F  2821               	goto	u275_21
 10394  0020  2822               	goto	u275_20
 10395  0021                     u275_21:	
 10396  0021  2829               	goto	i1l167
 10397  0022                     u275_20:	
 10398  0022                     i1l2916:	
 10399                           
 10400                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 10401  0022  0022               	movlb	2	; select bank2
 10402  0023  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 10403  0024  008A               	movwf	10
 10404  0025  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 10405  0026  000A               	callw
 10406  0027  3180               	pagesel	$
 10407                           
 10408                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 10409  0028  2829               	goto	i1l171
 10410  0029                     i1l167:	
 10411  0029                     i1l171:	
 10412                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 10413                           
 10414  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10415  002A  0009               	retfie
 10416  002B                     __end_of_INTERRUPT_InterruptManager:	
 10417                           
 10418                           	psect	text42
 10419  0C5F                     __ptext42:	
 10420 ;; *************** function _EUSART_Transmit_ISR *****************
 10421 ;; Defined at:
 10422 ;;		line 206 in file "mcc_generated_files/eusart.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;Total ram usage:        1 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; This function calls:
 10443 ;;		Nothing
 10444 ;; This function is called by:
 10445 ;;		_EUSART_Initialize
 10446 ;;		_INTERRUPT_InterruptManager
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           
 10451                           ;psect for function _EUSART_Transmit_ISR
 10452  0C5F                     _EUSART_Transmit_ISR:	
 10453  0C5F                     i1l2834:	
 10454                           ;incstack = 0
 10455                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10456                           
 10457                           
 10458                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 10459  0C5F  3008               	movlw	8
 10460  0C60  0021               	movlb	1	; select bank1
 10461  0C61  0254               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 10462  0C62  1803               	skipnc
 10463  0C63  2C65               	goto	u263_21
 10464  0C64  2C66               	goto	u263_20
 10465  0C65                     u263_21:	
 10466  0C65  2C7F               	goto	i1l112
 10467  0C66                     u263_20:	
 10468  0C66                     i1l2836:	
 10469                           
 10470                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 10471  0C66  0852               	movf	_eusartTxTail^(0+128),w
 10472  0C67  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 10473  0C68  0086               	movwf	6
 10474  0C69  3001               	movlw	1	; select bank2/3
 10475  0C6A  0087               	movwf	7
 10476  0C6B  0801               	movf	1,w
 10477  0C6C  0022               	movlb	2	; select bank2
 10478  0C6D  009A               	movwf	26	;volatile
 10479  0C6E                     i1l2838:	
 10480  0C6E  3001               	movlw	1
 10481  0C6F  00F0               	movwf	??_EUSART_Transmit_ISR
 10482  0C70  0870               	movf	??_EUSART_Transmit_ISR,w
 10483  0C71  0021               	movlb	1	; select bank1
 10484  0C72  07D2               	addwf	_eusartTxTail^(0+128),f	;volatile
 10485  0C73                     i1l2840:	
 10486                           
 10487                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10488  0C73  3008               	movlw	8
 10489  0C74  0252               	subwf	_eusartTxTail^(0+128),w	;volatile
 10490  0C75  1C03               	skipc
 10491  0C76  2C78               	goto	u264_21
 10492  0C77  2C79               	goto	u264_20
 10493  0C78                     u264_21:	
 10494  0C78  2C7A               	goto	i1l2844
 10495  0C79                     u264_20:	
 10496  0C79                     i1l2842:	
 10497                           
 10498                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 10499  0C79  01D2               	clrf	_eusartTxTail^(0+128)	;volatile
 10500  0C7A                     i1l2844:	
 10501                           
 10502                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 10503  0C7A  3001               	movlw	1
 10504  0C7B  00F0               	movwf	??_EUSART_Transmit_ISR
 10505  0C7C  0870               	movf	??_EUSART_Transmit_ISR,w
 10506  0C7D  07D4               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 10507                           
 10508                           ;mcc_generated_files/eusart.c: 218:     }
 10509  0C7E  2C81               	goto	i1l115
 10510  0C7F                     i1l112:	
 10511                           ;mcc_generated_files/eusart.c: 219:     else
 10512                           
 10513                           
 10514                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          3bits.TXIE = 0;
 10515  0C7F  002E               	movlb	14	; select bank14
 10516  0C80  1219               	bcf	25,4	;volatile
 10517  0C81                     i1l115:	
 10518  0C81  0008               	return
 10519  0C82                     __end_of_EUSART_Transmit_ISR:	
 10520                           
 10521                           	psect	text43
 10522  0DA3                     __ptext43:	
 10523 ;; *************** function _EUSART_Receive_ISR *****************
 10524 ;; Defined at:
 10525 ;;		line 225 in file "mcc_generated_files/eusart.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;		None
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;		None
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1    wreg      void 
 10532 ;; Registers used:
 10533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10543 ;;Total ram usage:        0 bytes
 10544 ;; Hardware stack levels used:    1
 10545 ;; Hardware stack levels required when called:    2
 10546 ;; This function calls:
 10547 ;;		Absolute function
 10548 ;;		_EUSART_DefaultErrorHandler
 10549 ;;		_EUSART_DefaultFramingErrorHandler
 10550 ;;		_EUSART_DefaultOverrunErrorHandler
 10551 ;;		_EUSART_RxDataHandler
 10552 ;; This function is called by:
 10553 ;;		_EUSART_Initialize
 10554 ;;		_INTERRUPT_InterruptManager
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           
 10559                           ;psect for function _EUSART_Receive_ISR
 10560  0DA3                     _EUSART_Receive_ISR:	
 10561  0DA3                     i1l2846:	
 10562                           ;incstack = 0
 10563                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10564                           
 10565                           
 10566                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 10567  0DA3  087C               	movf	_eusartRxHead,w	;volatile
 10568  0DA4  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10569  0DA5  0086               	movwf	6
 10570  0DA6  3001               	movlw	1	; select bank2/3
 10571  0DA7  0087               	movwf	7
 10572  0DA8  0181               	clrf	1
 10573  0DA9                     i1l2848:	
 10574                           
 10575                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 10576  0DA9  0022               	movlb	2	; select bank2
 10577  0DAA  1D1D               	btfss	29,2	;volatile
 10578  0DAB  2DAD               	goto	u265_21
 10579  0DAC  2DAE               	goto	u265_20
 10580  0DAD                     u265_21:	
 10581  0DAD  2DB9               	goto	i1l2854
 10582  0DAE                     u265_20:	
 10583  0DAE                     i1l2850:	
 10584                           
 10585                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 10586  0DAE  087C               	movf	_eusartRxHead,w	;volatile
 10587  0DAF  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10588  0DB0  0086               	movwf	6
 10589  0DB1  3001               	movlw	1	; select bank2/3
 10590  0DB2  0087               	movwf	7
 10591  0DB3  1481               	bsf	1,1
 10592  0DB4                     i1l2852:	
 10593                           
 10594                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 10595  0DB4  086B               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 10596  0DB5  008A               	movwf	10
 10597  0DB6  086A               	movf	_EUSART_FramingErrorHandler^(0+256),w
 10598  0DB7  000A               	callw
 10599  0DB8  318D               	pagesel	$
 10600  0DB9                     i1l2854:	
 10601                           
 10602                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 10603  0DB9  0022               	movlb	2	; select bank2
 10604  0DBA  1C9D               	btfss	29,1	;volatile
 10605  0DBB  2DBD               	goto	u266_21
 10606  0DBC  2DBE               	goto	u266_20
 10607  0DBD                     u266_21:	
 10608  0DBD  2DC9               	goto	i1l2860
 10609  0DBE                     u266_20:	
 10610  0DBE                     i1l2856:	
 10611                           
 10612                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 10613  0DBE  087C               	movf	_eusartRxHead,w	;volatile
 10614  0DBF  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10615  0DC0  0086               	movwf	6
 10616  0DC1  3001               	movlw	1	; select bank2/3
 10617  0DC2  0087               	movwf	7
 10618  0DC3  1501               	bsf	1,2
 10619  0DC4                     i1l2858:	
 10620                           
 10621                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 10622  0DC4  0869               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 10623  0DC5  008A               	movwf	10
 10624  0DC6  0868               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 10625  0DC7  000A               	callw
 10626  0DC8  318D               	pagesel	$
 10627  0DC9                     i1l2860:	
 10628                           
 10629                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 10630  0DC9  087C               	movf	_eusartRxHead,w	;volatile
 10631  0DCA  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10632  0DCB  0086               	movwf	6
 10633  0DCC  3001               	movlw	1	; select bank2/3
 10634  0DCD  0087               	movwf	7
 10635  0DCE  0801               	movf	1,w
 10636  0DCF  1903               	btfsc	3,2
 10637  0DD0  2DD2               	goto	u267_21
 10638  0DD1  2DD3               	goto	u267_20
 10639  0DD2                     u267_21:	
 10640  0DD2  2DDA               	goto	i1l2864
 10641  0DD3                     u267_20:	
 10642  0DD3                     i1l2862:	
 10643                           
 10644                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 10645  0DD3  0022               	movlb	2	; select bank2
 10646  0DD4  0867               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 10647  0DD5  008A               	movwf	10
 10648  0DD6  0866               	movf	_EUSART_ErrorHandler^(0+256),w
 10649  0DD7  000A               	callw
 10650  0DD8  318D               	pagesel	$
 10651                           
 10652                           ;mcc_generated_files/eusart.c: 242:     } else {
 10653  0DD9  2DDD               	goto	i1l122
 10654  0DDA                     i1l2864:	
 10655                           
 10656                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 10657  0DDA  318B  23E6  318D   	fcall	_EUSART_RxDataHandler
 10658  0DDD                     i1l122:	
 10659  0DDD  0008               	return
 10660  0DDE                     __end_of_EUSART_Receive_ISR:	
 10661                           
 10662                           	psect	text44
 10663  0ADE                     __ptext44:	
 10664 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 10665 ;; Defined at:
 10666 ;;		line 261 in file "mcc_generated_files/eusart.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		None
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;Total ram usage:        0 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_EUSART_Initialize
 10690 ;;		_EUSART_Receive_ISR
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           
 10695                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 10696  0ADE                     _EUSART_DefaultOverrunErrorHandler:	
 10697  0ADE                     i1l2748:	
 10698                           ;incstack = 0
 10699                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 10700                           
 10701                           
 10702                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 10703  0ADE  0022               	movlb	2	; select bank2
 10704  0ADF  121D               	bcf	29,4	;volatile
 10705                           
 10706                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 10707  0AE0  161D               	bsf	29,4	;volatile
 10708  0AE1                     i1l132:	
 10709  0AE1  0008               	return
 10710  0AE2                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 10711                           
 10712                           	psect	text45
 10713  07FF                     __ptext45:	
 10714 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 10715 ;; Defined at:
 10716 ;;		line 259 in file "mcc_generated_files/eusart.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		None
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_EUSART_Initialize
 10740 ;;		_EUSART_Receive_ISR
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _EUSART_DefaultFramingErrorHandler
 10746  07FF                     _EUSART_DefaultFramingErrorHandler:	
 10747  07FF                     i1l129:	
 10748                           ;incstack = 0
 10749                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 10750                           
 10751  07FF  0008               	return
 10752  0800                     __end_of_EUSART_DefaultFramingErrorHandler:	
 10753                           
 10754                           	psect	text46
 10755  0ADA                     __ptext46:	
 10756 ;; *************** function _EUSART_DefaultErrorHandler *****************
 10757 ;; Defined at:
 10758 ;;		line 269 in file "mcc_generated_files/eusart.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    1
 10779 ;; This function calls:
 10780 ;;		_EUSART_RxDataHandler
 10781 ;; This function is called by:
 10782 ;;		_EUSART_Initialize
 10783 ;;		_EUSART_Receive_ISR
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           
 10788                           ;psect for function _EUSART_DefaultErrorHandler
 10789  0ADA                     _EUSART_DefaultErrorHandler:	
 10790  0ADA                     i1l2750:	
 10791                           ;incstack = 0
 10792                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10793                           
 10794                           
 10795                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 10796  0ADA  318B  23E6  318A   	fcall	_EUSART_RxDataHandler
 10797  0ADD                     i1l135:	
 10798  0ADD  0008               	return
 10799  0ADE                     __end_of_EUSART_DefaultErrorHandler:	
 10800                           
 10801                           	psect	text47
 10802  0BE6                     __ptext47:	
 10803 ;; *************** function _EUSART_RxDataHandler *****************
 10804 ;; Defined at:
 10805 ;;		line 249 in file "mcc_generated_files/eusart.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  1    wreg      void 
 10812 ;; Registers used:
 10813 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;Total ram usage:        1 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; This function calls:
 10826 ;;		Nothing
 10827 ;; This function is called by:
 10828 ;;		_EUSART_Receive_ISR
 10829 ;;		_EUSART_DefaultErrorHandler
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           
 10834                           ;psect for function _EUSART_RxDataHandler
 10835  0BE6                     _EUSART_RxDataHandler:	
 10836  0BE6                     i1l2662:	
 10837                           ;incstack = 0
 10838                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10839                           
 10840                           
 10841                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 10842  0BE6  0022               	movlb	2	; select bank2
 10843  0BE7  0819               	movf	25,w	;volatile
 10844  0BE8  00F0               	movwf	??_EUSART_RxDataHandler
 10845  0BE9  087C               	movf	_eusartRxHead,w
 10846  0BEA  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10847  0BEB  0086               	movwf	6
 10848  0BEC  3001               	movlw	1	; select bank2/3
 10849  0BED  0087               	movwf	7
 10850  0BEE  0870               	movf	??_EUSART_RxDataHandler,w
 10851  0BEF  0081               	movwf	1
 10852  0BF0                     i1l2664:	
 10853  0BF0  3001               	movlw	1
 10854  0BF1  00F0               	movwf	??_EUSART_RxDataHandler
 10855  0BF2  0870               	movf	??_EUSART_RxDataHandler,w
 10856  0BF3  07FC               	addwf	_eusartRxHead,f	;volatile
 10857  0BF4                     i1l2666:	
 10858                           
 10859                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 10860  0BF4  3008               	movlw	8
 10861  0BF5  027C               	subwf	_eusartRxHead,w	;volatile
 10862  0BF6  1C03               	skipc
 10863  0BF7  2BF9               	goto	u252_21
 10864  0BF8  2BFA               	goto	u252_20
 10865  0BF9                     u252_21:	
 10866  0BF9  2BFB               	goto	i1l2670
 10867  0BFA                     u252_20:	
 10868  0BFA                     i1l2668:	
 10869                           
 10870                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 10871  0BFA  01FC               	clrf	_eusartRxHead	;volatile
 10872  0BFB                     i1l2670:	
 10873                           
 10874                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 10875  0BFB  3001               	movlw	1
 10876  0BFC  00F0               	movwf	??_EUSART_RxDataHandler
 10877  0BFD  0870               	movf	??_EUSART_RxDataHandler,w
 10878  0BFE  0021               	movlb	1	; select bank1
 10879  0BFF  07D0               	addwf	_eusartRxCount^(0+128),f	;volatile
 10880  0C00                     i1l126:	
 10881  0C00  0008               	return
 10882  0C01                     __end_of_EUSART_RxDataHandler:	
 10883  007E                     btemp	set	126	;btemp
 10884  007E                     int$flags	set	126
 10885  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    0
    Data        14
    BSS         84
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      79
    BANK1            80     39      53
    BANK2            80      0      80
    BANK3            80     28      42
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[4]), STR_3(CODE[7]), STR_2(CODE[18]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1082_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[4]), STR_3(CODE[7]), STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[4]), STR_3(CODE[7]), STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[4]), STR_3(CODE[7]), STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    write_str_UART@string	PTR unsigned char  size(1) Largest target is 14
		 -> main@str_rc(BANK3[14]), main@str_send(BANK3[14]), 

    read_str_UART@buff	PTR unsigned char  size(1) Largest target is 14
		 -> main@str_rc(BANK3[14]), 

    sp__read_str_UART	PTR unsigned char  size(1) Largest target is 14
		 -> main@str_rc(BANK3[14]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _write_str_UART->_write_UART
    _write_UART->_EUSART_Write
    _vfpfcnvrt->_fputc
    _toupper->_islower
    _dtoa->___aodiv
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_read_str_UART
    _read_str_UART->_parse_message
    _parse_message->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_read_str_UART
    _parse_message->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   19185
                                             37 BANK1      2     2      0
                                              0 BANK3     28    28      0
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                      _read_str_UART
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _read_str_UART                                        6     5      1   17673
                                             78 BANK0      1     0      1
                                             32 BANK1      5     5      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                      _parse_message
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _write_str_UART                                       4     3      1     815
                                              5 COMMON     4     3      1
                         _write_UART
 ---------------------------------------------------------------------------------
 (2) _write_UART                                           2     1      1     245
                                              3 COMMON     2     1      1
                       _EUSART_Write
                  _EUSART_is_tx_done
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _parse_message                                        3     3      0   16332
                                             75 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              14     4     10   16270
                                             71 BANK0      4     4      0
                                             22 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3   15817
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           43    41      2   15307
                                             55 BANK0      8     6      2
                                              0 BANK1     22    22      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                38    29      9    5450
                                             17 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                30    22      8    5686
                                             17 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     6      3    3455
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               5     3      2     166
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     7      1    1429
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                8     5      3    1037
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1419
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     316
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _read_str_UART
     _EUSART_Read
     _EUSART_is_rx_ready
     _parse_message
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART_Write
                 _strlen
             _fputc
               _putch
                 _EUSART_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART_Write
                 _strlen
               _toupper
                 _islower
     _write_str_UART
       _write_UART
         _EUSART_Write
         _EUSART_is_tx_done
         _EUSART_is_tx_ready
   _write_str_UART
     _write_UART
       _EUSART_Write
       _EUSART_is_tx_done
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      35       7       66.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1C      2A      11       52.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 01:18:15 2019

                ?_EUSART_SetRxInterruptHandler 0071                                 read_str_UART@i 00C3  
                                  __CFG_CP$OFF 0000                                             l81 0B2F  
                                           l75 0E1C                                             l84 0AE5  
                                           l94 0D71                                             l78 0B38  
                                           l99 0D22                            ___wmul@multiplicand 0073  
                                  __CFG_LVP$ON 0000                               parse_message@cmd 006D  
                        __end_of_parse_message 0F51                                            l100 0D2B  
                                          l103 0D45                                            l210 0B1D  
                                          l204 0B45                                            l141 0AF7  
                                          l109 0B09                                            l150 0AFD  
                                          l207 0B26                                            l144 0AEB  
                                          l138 0AF1                                            l147 0B03  
                                          l411 0CA5                                            l403 0C90  
                                          l600 07B2                                            l601 07BE  
                                          l361 0F50                                            l409 0CA3  
                                          l610 0492                                            l700 0C29  
                                          l604 0454                                            l372 0EAB  
                                          l613 0503                                            l605 045D  
                                          l702 0C3D                                            l630 029F  
                                          l287 07FE                                            l800 066A  
                                          l801 067B                                            l609 047A  
                                          l634 02BC                                            l627 057A  
                                          l813 0754                                            l814 0765  
                                          l398 0CF1                                            l655 03D7  
                                          l671 00C8                                            l664 007E  
                                          l657 040A                                            l666 008A  
                                          l667 008D                                            l596 0782  
                                          l668 0090                                            l669 0093  
                                          l686 0293                                            l599 07A4  
                                          l696 0DA2                                   __CFG_CPD$OFF 0000  
                                          _abs 0BB2                         ??_EUSART_RxDataHandler 0070  
                                          _pad 0766                 ?_EUSART_SetFramingErrorHandler 0071  
                      __size_of_PMD_Initialize 0008                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                            read_str_UART@buff 00C2                                   __CFG_ZCD$OFF 0000  
                                         l1211 0B99                                           ?_abs 0074  
                                         l1205 0C5E                                           l1241 0B69  
                                         l1154 0BCB                                           l1226 0E5B  
                                         l1234 0D1A                                           l3100 0D0A  
                                         l1252 0CCB                                           l1157 0BCB  
                                         l3102 0BCD                                           l1175 0F8E  
                                         l1247 0BE5                                           l1191 0C1E  
                                         l3200 05FE                                           l3104 0BD2  
                                         l3120 0776                                           l3112 0B9A  
                                         l1257 0CCB                                           l3202 0606  
                                         l3210 0647                                           l3106 0BD6  
                                         l3130 0796                                           l3122 077B  
                                         l1188 0FFF                                           l3212 064C  
                                         l3204 0628                                           l3220 06A8  
                                         l3060 0D1C                                           l3108 0BDF  
                                         l3132 07A9                                           l3124 0780  
                                         l3116 0768                                           l3300 054A  
                                         l3140 0B82                                           l1197 0B81  
                                         l1269 0BB1                                           l3206 0638  
                                         l3230 06E9                                           l3222 06B2  
                                         l3214 067C                                           l3070 0D3A  
                                         l3062 0D1C                                           l3126 0785  
                                         l3118 076D                                           l3302 054F  
                                         l3310 0567                                           l3400 0FA7  
                                         l3208 0639                                           l3232 06ED  
                                         l3240 0731                                           l3224 06D1  
                                         l3216 067D                                           l3136 0BB2  
                                         l3072 0D40                                           l3064 0D27  
                                         l3080 0E1D                                           l3128 0791  
                                         l3304 0555                                           l3144 0C01  
                                         l3152 0CBE                                           l3320 02B4  
                                         l3170 0C33                                           l3162 0C1F  
                                         l3250 0C56                                           l3410 0FE9  
                                         l3242 0736                                           l3234 06F1  
                                         l3226 06DE                                           l3218 0687  
                                         l3138 0BBF                                           l3074 0D41  
                                         l3066 0D2C                                           l3090 0E53  
                                         l3082 0E22                                           l3306 055A  
                                         l3154 0CC4                                           l3330 02E6  
                                         l3322 02C4                                           l3314 0296  
                                         l3172 0C39                                           l3164 0C21  
                                         l3252 0C57                                           l3244 0C3E  
                                         l3412 0FEF                                           l3404 0FC7  
                                         l3180 0586                                           l3236 0713  
                                         l3228 06E1                                           l3068 0D36  
                                         l3076 0D43                                           l3084 0E27  
                                         l3308 055E                                           l3260 0430  
                                         l3148 0CA6                                           l3340 0325  
                                         l3332 02FE                                           l3324 02C9  
                                         l3316 029B                                           l3166 0C25  
                                         l3158 0B6A                                           l3246 0C40  
                                         l3414 0FFB                                           l3190 05DE  
                                         l3182 05A7                                           l3238 0723  
                                         l3078 0B05                                           l3086 0E2C  
                                         l3094 0CF4                                           l3270 0482  
                                         l3262 0436                                           l3342 032B  
                                         l3350 035A                                           l3334 0306  
                                         l3326 02CE                                           l3318 02AE  
                                         l3502 0237                                           l3430 0077  
                                         l3600 0E13                                           l3168 0C2E  
                                         l3248 0C47                                           l3408 0FE3  
                                         l3192 05EB                                           l3184 05B1  
                                         l3176 057B                                           l3088 0E36  
                                         l3096 0CF7                                           l3280 049F  
                                         l3272 0488                                           l3264 0459  
                                         l3256 040D                                           l3360 03AA  
                                         l3352 0363                                           l3336 030D  
                                         l3328 02E3                                           l3520 0289  
                                         l3504 0248                                           l3512 0263  
                                         l3432 007B                                           l3424 0058  
                                         l3602 0E17                                           l3610 0B27  
                                         l3194 05EE                                           l3186 05D0  
                                         l3178 057C                                           l3098 0D05  
                                         l3290 051E                                           l3282 04CE  
                                         l3274 048D                                           l3266 046C  
                                         l3258 041D                                           l3370 03E1  
                                         l3362 03B7                                           l3354 0367  
                                         l3346 0348                                           l3514 026B  
                                         l3506 0250                                           l3434 0080  
                                         l3450 00C1                                           l3426 006A  
                                         l3530 0B30                                           l3604 0E18  
                                         l3620 0D5E                                           l3380 0F57  
                                         l3196 05F6                                           l3188 05D4  
                                         l3292 052B                                           l3284 04D2  
                                         l3276 0497                                           l3268 0472  
                                         l3372 03EA                                           l3364 03C4  
                                         l3356 036B                                           l3348 034E  
                                         l3508 025D                                           l3460 00F7  
                                         l3452 00CC                                           l3444 0096  
                                         l3428 0072                                           l3540 0D78  
                                         l3700 0CE5                                           l3550 0AF8  
                                         l3606 0E19                                           l3630 0D6E  
                                         l3622 0D62                                           l3614 0D46  
                                         l3390 0F7C                                           l3382 0F5B  
                                         l3198 05FA                                           l3294 0539  
                                         l3286 04D6                                           l3278 049A  
                                         l3374 03F7                                           l3366 03D2  
                                         l3358 039C                                           l3470 011B  
                                         l3462 00FB                                           l3454 00D0  
                                         l3518 026E                                           l3542 0D7C  
                                         l3710 0F3D                                           l3702 0EFF  
                                         l3534 0AE2                                           l3552 0AFE  
                                         l3608 0E1A                                           l3640 07C5  
                                         l3720 0B3C                                           l3632 0D70  
                                         l3624 0D68                                           l3616 0D46  
                                         l3384 0F5D                                           l3288 0511  
                                         l3296 053E                                           l3368 03DC  
                                         l3480 016B                                           l3464 00FC  
                                         l3456 00E2                                           l3448 009C  
                                         l3544 0D90                                           l3560 0B54  
                                         l3704 0F00                                           l3554 0AEC  
                                         l3650 07CF                                           l3642 07C7  
                                         l3722 0B3F                                           l3626 0D69  
                                         l3618 0D4C                                           l3394 0F83  
                                         l3386 0F67                                           l3378 0F51  
                                         l3298 0545                                           l3490 01CA  
                                         l3482 0173                                           l3474 0142  
                                         l3458 00EA                                           l3466 0102  
                                         l3546 0D9A                                           l3538 0D74  
                                         l3562 0B59                                           l3570 0C92  
                                         l3730 0E62                                           l3556 0AF2  
                                         l3580 0DE0                                           l3660 07E4  
                                         l3652 07D2                                           l3644 07C9  
                                         l3636 0B16                                           l3724 0B42  
                                         l3628 0D6B                                           l3396 0F8A  
                                         l3388 0F7B                                           l3492 01DB  
                                         l3484 018F                                           l3468 0112  
                                         l3476 0148                                           l3900 0F11  
                                         l3708 0F09                                           l3572 0C96  
                                         l3740 0E7B                                           l3732 0E64  
                                         l3558 0AE6                                           l3590 0DF7  
                                         l3582 0DE7                                           l3670 07EE  
                                         l3662 07E6                                           l3654 07D4  
                                         l3646 07CB                                           l3638 07BF  
                                         l3718 0B39                                           l3398 0F93  
                                         l3494 01EB                                           l3478 015A  
                                         l3902 00B0                                           l3566 0C83  
                                         l3750 0EA1                                           l3742 0E87  
                                         l3734 0E68                                           l3726 0E5E  
                                         ?_pad 0028                                           l3592 0DF9  
                                         l3584 0DF0                                           l3680 07F8  
                                         l3672 07F0                                           l3664 07E8  
                                         l3656 07D6                                           l3648 07CD  
                                         l3904 0F9F                                           l3496 01F4  
                                         l3488 01B9                                           l3576 0C9B  
                                         l3568 0C8B                                           l3744 0E8F  
                                         l3736 0E70                                           l3728 0E62  
                                         l3760 0EAF                                           l3594 0DFA  
                                         l3586 0DF3                                           l3578 0DDE  
                                         l3690 0B25                                           l3682 07FB  
                                         l3674 07F2                                           l3666 07EA  
                                         l3658 07D8                                           l3498 0207  
                                         l3738 0E77                                           l3746 0E93  
                                         l3770 0ECC                                           l3762 0EBE  
                                         l3596 0E01                                           l3588 0DF5  
                                         l3684 0B1E                                           l3676 07F4  
                                         l3668 07EC                                           l3692 0CCD  
                                         l3748 0E9B                                           l3772 0ED5  
                                         l3764 0EC8                                           l3598 0E08  
                                         l3686 0B21                                           l3678 07F6  
                                         l3694 0CCF                                           l3774 0EDA  
                                         l3766 0EC9                                           l3758 0EAC  
                                         l3688 0B22                                           l3696 0CDB  
                                         l3776 0EE2                                           l3768 0ECA  
                                         l3698 0CDF                                           l3778 0EED  
                                         STR_1 1000                                           STR_3 1012  
                                         STR_4 1019                                           u3000 07A4  
                                         u3001 07A3                                           u3010 07A9  
                                         u3011 07A8                                           u3100 0B7A  
                                         u3020 0BBF                                           u3101 0B78  
                                         u3021 0BBE                                           u3005 07A0  
                                         _LATA 0016                                           u3110 0B7B  
                                         u3030 0B92                                           _LATB 0017  
                                         u3031 0B90                                           _LATC 0018  
                                         u4000 0B2F                                           u3120 0C25  
                                         u3200 05DB                                           u3040 0B93  
                                         _LATD 0019                                           u3121 0C24  
                                         u3025 0BBB                                           _LATE 001A  
                                         u4010 0D4C                                           u3210 05EB  
                                         u3050 0C17                                           u4011 0D4B  
                                         u3211 05EA                                           u3051 0C15  
                                         u4020 0D68                                           u3220 05FE  
                                         u3060 0C18                                           u4100 0EDA  
                                         u4021 0D67                                           u3221 05FD  
                                         u4101 0ED9                                           u3150 0C39  
                                         u3230 0628                                           u3310 06DE  
                                         u3070 0CB7                                           u4030 0CE5  
                                         u4110 0EE2                                           u3151 0C38  
                                         u3135 0C2A                                           u3231 0627  
                                         u3311 06DD                                           u3071 0CB5  
                                         u4031 0CE4                                           u4111 0EE1  
                                         u3240 0647                                           u3160 0586  
                                         u3320 06F1                                           u3400 0429  
                                         u3080 0CB8                                           u4040 0CF1  
                                         u3145 0C2F                                           u3241 0646  
                                         u3161 0585                                           u3321 06F0  
                                         u4041 0CF0                                           u3250 064C  
                                         u3330 0713                                           u3410 0436  
                                         u3090 0CC4                                           u4050 0E70  
                                         u3251 064B                                           u3235 0624  
                                         u3331 0712                                           u3411 0435  
                                         u3091 0CC3                                           u4051 0E6F  
                                         u3180 05B1                                           u3340 0731  
                                         u3500 0539                                           u4060 0E9B  
                                         u3181 05B0                                           u3341 0730  
                                         u3501 0538                                           u4061 0E9A  
                                         u3350 0736                                           u3270 0687  
                                         u3510 053E                                           u3430 0459  
                                         u4070 0EA1                                           u3351 0735  
                                         u3335 070F                                           u3271 0686  
                                         u3511 053D                                           u3431 0458  
                                         u4071 0EA0                                           u4207 0E65  
                                         u3520 0545                                           u3440 046C  
                                         u3600 031F                                           u4080 0EBA  
                                         u3521 0544                                           u3505 0535  
                                         u3441 046B                                           u3370 0C47  
                                         u3290 06B2                                           u3530 054A  
                                         u3450 0488                                           u3610 032B  
                                         u4090 0EC5                                           u3371 0C46  
                                         u3291 06B1                                           u3531 0549  
                                         u3451 0487                                           u3611 032A  
                                         u3380 0C56                                           u2900 0E22  
                                         u3540 0555                                           u3460 048D  
                                         u3700 03D7                                           u3620 0341  
                                         u3381 0C55                                           u2901 0E21  
                                         u3541 0554                                           u3461 048C  
                                         u3445 0468                                           u3701 03D6  
                                         u3621 033F                                           u2910 0E27  
                                         u3470 0511                                           u3390 0428  
                                         u3710 03DC                                           u3630 0342  
                                         u3550 029B                                           u2911 0E26  
                                         u3471 0510                                           u3391 0426  
                                         u3711 03DB                                           u3551 029A  
                                         u3720 0F67                                           u2920 0E36  
                                         u3480 051E                                           u3640 034E  
                                         u3560 02AE                                           u3800 00C8  
                                         u3721 0F66                                           u2921 0E35  
                                         u3481 051D                                           u3641 034D  
                                         u3561 02AD                                           u3801 00C7  
                                         u3730 0F7B                                           u2930 0E53  
                                         u3490 052B                                           u3650 0389  
                                         u3570 02C9                                           u3810 00CC  
                                         u3731 0F7A                                           u2931 0E52  
                                         u3491 052A                                           u3475 050D  
                                         u3571 02C8                                           u3811 00CB  
                                         u3740 0F89                                           u2940 0D1A  
                                         u3660 03AA                                           u3580 02FE  
                                         u3900 01DB                                           u3820 00E2  
                                         _PMD0 0796                                           u3741 0F88  
                                         u2941 0D19                                           u3661 03A9  
                                         u3581 02FD                                           u3565 02AA  
                                         u3901 01DA                                           u3821 00E1  
                                         u4197 0EF3                                           _PMD1 0797  
                                         u3750 0FDC                                           u2870 0D22  
                                         u2950 0BDF                                           u3670 03B7  
                                         u3590 031E                                           u3910 0248  
                                         u3830 00FB                                           _PMD2 0798  
                                         u3751 0FDA                                           u2871 0D21  
                                         u2935 0E4F                                           u2951 0BDE  
                                         u3495 0527                                           u3671 03B6  
                                         u3655 0380                                           u3591 031C  
                                         u3911 0247                                           u3831 00FA  
                                         _PMD3 0799                                           u3760 0FDD  
                                         u2880 0D27                                           u2960 0BAA  
                                         u3680 03C4                                           u3840 0138  
                                         u3920 0B37                                           _PMD4 079A  
                                         u2881 0D26                                           u2961 0BA8  
                                         u3681 03C3                                           u3665 03A6  
                                         u3585 02FA                                           u3841 0136  
                                         u3921 0B35                                           _PMD5 079B  
                                         u3770 0FE9                                           u2890 0D40  
                                         u2970 0BAB                                           u3690 03D2  
                                         u3850 0139                                           u3930 0B38  
                                         u3771 0FE8                                           u2891 0D3F  
                                         u3691 03D1                                           u3780 0FEF  
                                         u2980 076D                                           u3860 0148  
                                         u3940 0D9A                                           u3781 0FEE  
                                         u2981 076C                                           u3685 03C0  
                                         u3861 0147                                           u3941 0D99  
                                         u2990 077B                                           u3870 015A  
                                         u3790 006A                                           u3950 0C8B  
                                         u2991 077A                                           u3695 03CE  
                                         u3871 0159                                           u3791 0069  
                                         u3951 0C8A                                           u3880 016B  
                                         u3960 0C90                                           u3881 016A  
                                         u3961 0C8F                                           u3890 01CA  
                                         u3970 0C9B                                           u3891 01C9  
                                         u3971 0C9A                                           u3980 0CA3  
                                         u3981 0CA2                                           u3990 0B2E  
                                         u3991 0B2C                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUD 0F5A                                           _WPUE 0F65  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0074                                           _dbuf 0138  
                                         _atoi 0F51                                           _main 0EAC  
                                         _dtoa 040B                                           _prec 00CB  
                                         _nout 00C7                                           pad@i 002C  
                                         pad@p 0029                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002E  
                                         btemp 007E                                           _xtoa 0294  
                                __CFG_BOREN$ON 0000                                           start 002B  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 0076                                          ??_pad 002B  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 0B27                                __end_of___aodiv 067C  
                                        ?_atoi 0077                                          ?_main 0070  
                                        ?_dtoa 0031                                __end_of___aomod 0766  
                                __CFG_WDTE$OFF 0000                                          ?_xtoa 0031  
                               __CFG_DEBUG$OFF 0000                                          i1l112 0C7F  
                                        i1l122 0DDD                                          i1l115 0C81  
                                        i1l132 0AE1                                          i1l126 0C00  
                                        i1l135 0ADD                                          i1l129 07FF  
                                        i1l171 0029                                          i1l166 001A  
                                        i1l167 0029                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 0057                                   vfpfcnvrt@llu 00A8  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                                          _TRISD 0014  
                                        _TRISE 0015                                          _RXPPS 0ECB  
                                        _flags 00CD                                          _fputc 0E1D  
                              __end_of_isalpha 0C1F                                          _fputs 0CF2  
                              __end_of_isdigit 0B82                                          atoi@n 002B  
                                        pad@fp 0030                                          atoi@s 0077  
                                        _width 00C9                                          _putch 0B04  
                                        dtoa@d 0031                                          dtoa@i 004D  
                                        dtoa@n 0045                                          dtoa@p 003F  
                                        dtoa@s 0043                                          dtoa@w 0041  
                              __end_of_islower 0BB2                                __end_of_isspace 0C5F  
                              __end_of_isupper 0B9A                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                                        xtoa@c 0055                                          xtoa@d 0031  
                                        xtoa@i 0053                                          xtoa@n 004B  
                                        xtoa@p 0047                                          xtoa@w 0049  
                                        xtoa@x 0039                                __end_of_toupper 0CCC  
                                 main@str_send 01A0                                   _toupper$1134 0079  
                              __initialization 002D                                   __end_of_atoi 1000  
                                 __end_of_main 0EFD                                   __end_of_dtoa 057B  
                                 __end_of_xtoa 040B                                 ??_EUSART_Write 0071  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_atoi 0020                                         ??_main 00C5  
                                       ??_dtoa 0039                                         ??_xtoa 003A  
                          read_str_UART@rxData 00C4      __end_of_EUSART_DefaultFramingErrorHandler 0800  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07FF  
                   _EUSART_OverrunErrorHandler 0168                                         ?_fputc 0074  
                                       ?_fputs 0020                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _ANSELD 0F59  
                                       _ANSELE 0F64                             __CFG_RSTOSC$HFINT1 0000  
                   __end_of_EUSART_is_rx_ready 0B30                                         _RC1REG 0119  
                                       _RC1STA 011D                                         _ODCONA 0F3A  
                                       _ODCONB 0F45                                         _ODCONC 0F50  
                                       _RC6PPS 0F26                                         _ODCOND 0F5B  
                                       _ODCONE 0F66                                         i1l2670 0BFB  
                                       i1l2662 0BE6                                         i1l2750 0ADA  
                                       i1l2910 000F                                         i1l2664 0BF0  
                                       i1l2840 0C73                                         i1l2912 0013  
                                       i1l2666 0BF4                                         i1l2850 0DAE  
                                       i1l2842 0C79                                         i1l2834 0C5F  
                                       i1l2914 001E                                         i1l2906 0006  
                                       i1l2668 0BFA                                         i1l2748 0ADE  
                                       i1l2860 0DC9                                         i1l2852 0DB4  
                                       i1l2844 0C7A                                         i1l2836 0C66  
                                       i1l2916 0022                                         i1l2908 000A  
                                       i1l2862 0DD3                                         i1l2854 0DB9  
                                       i1l2846 0DA3                                         i1l2838 0C6E  
                                       i1l2864 0DDA                                         i1l2856 0DBE  
                                       i1l2848 0DA9                                 __CFG_WDTCCS$SC 0000  
                                       i1l2858 0DC4                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLD 0F5D                                         _INLVLE 0F68  
                                       u252_20 0BFA                                         u252_21 0BF9  
                   __end_of_EUSART_is_tx_ready 0B39                                         u263_20 0C66  
                                       u271_20 000A                                         u263_21 0C65  
                                       u271_21 0009                                         u264_20 0C79  
                                       u272_20 000F                                         u264_21 0C78  
                                       u272_21 000E                                         u265_20 0DAE  
                                       u273_20 0013                                         u265_21 0DAD  
                                       u273_21 0012                                         u266_20 0DBE  
                                       u274_20 001E                                         u266_21 0DBD  
                                       u274_21 001D                                         u267_20 0DD3  
                                       u275_20 0022                                         u267_21 0DD2  
                                       u275_21 0021                                         _OSCFRQ 0893  
                                vfpfcnvrt@done 00B1                                         u330lld 06D1  
                                       u317lld 05A5                                         u326lld 066A  
                                       u342lld 0454                                         _TX1REG 011A  
                                       u319lld 05D0                                         u336lld 0754  
                                       u328lld 06A6                                         _TX1STA 011E  
                             ??_write_str_UART 0076                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0065                                      ??___aodiv 0071  
                                    ??___aomod 0071                                         ___wmul 0C1F  
                               __CFG_STVREN$ON 0000                            _EUSART_Transmit_ISR 0C5F  
                                       _printf 0B54                                         pad@buf 0028  
                                       dtoa@fp 003E                                         _strlen 0BCC  
                                       fputc@c 0074                                 _PMD_Initialize 0B16  
                                       fputs@c 0024                                         fputs@i 0025  
                                       fputs@s 0027                                      ??_isalpha 0073  
                                    ??_isdigit 0073                                      ??_islower 0073  
                                    ??_isspace 0073                                      ??_isupper 0073  
                             __end_of_vfprintf 0DA3                                         xtoa@fp 0046  
                                    ??_toupper 0020                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 002C                              _SYSTEM_Initialize 0B39  
                      __end_of__initialization 0052                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0B04          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 0AFE                         __size_of_read_str_UART 0050  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0B46  
                          ??_SYSTEM_Initialize 0074                                  __end_of_fputc 0E5C  
                                __end_of_fputs 0D1B                                  __end_of_putch 0B0A  
                       __end_of_PMD_Initialize 0B1E                           _eusartRxStatusBuffer 0120  
              ??_EUSART_SetOverrunErrorHandler 0073                                        ??_fputc 0077  
                    __end_of_SYSTEM_Initialize 0B46                                        ??_fputs 0021  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0073  
                                   __pbssBANK1 00C7                                     __pbssBANK2 0120  
                                   __pbssBANK3 01BC                           __end_of_EUSART_Write 0D46  
                  __size_of_EUSART_Receive_ISR 003B                           read_str_UART@max_len 006E  
                                   __pmaintext 0EAC                  ?_EUSART_SetTxInterruptHandler 0071  
             _EUSART_TxDefaultInterruptHandler 016E                                        ?___wmul 0071  
                              __CFG_PPS1WAY$ON 0000                                     __pintentry 0004  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 00B6  
                              ?_PMD_Initialize 0070                                        ?_strlen 0071  
                                _eusartRxCount 00D0                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                             __size_of_vfpfcnvrt 023E  
                                _read_str_UART 0E5C                  __size_of_EUSART_RxDataHandler 001B  
                                      _OSCTUNE 0892                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                                      _SLRCOND 0F5C                                        _SLRCONE 0F67  
                     ??_EUSART_SetErrorHandler 0073                         __size_of_parse_message 0054  
          __size_of_EUSART_DefaultErrorHandler 0004                           __CFG_SCANE$available 0000  
                                      ___aodiv 057B                                        ___aomod 067C  
                              __size_of___wmul 001F                                      ?_vfprintf 005F  
                                      __ptext1 0E5C                                        __ptext2 0CCC  
                                      __ptext3 0C82                                        __ptext4 0B30  
                                      __ptext5 0AE2                                        __ptext6 0EFD  
                                      __ptext7 0B54                                        __ptext8 0D72  
                                      __ptext9 0056                                __size_of_printf 0016  
                              __size_of_strlen 001A                          _OSCILLATOR_Initialize 0B1E  
                                 __size_of_abs 001A                                   __size_of_pad 0059  
                                      _isalpha 0C01                                        _isdigit 0B6A  
                               ?_read_str_UART 006E                                        _islower 0B9A  
                     ??_PIN_MANAGER_Initialize 0071                                        _isspace 0C3E  
                                      _isupper 0B82                                        atoi@neg 0024  
                   __size_of_SYSTEM_Initialize 000D                                        clrloop0 0B0B  
                                      _toupper 0CA6                           end_of_initialization 0052  
        __end_of_EUSART_SetOverrunErrorHandler 0AF8         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0AF2                                        fputc@fp 0076  
                                      init_ram 0B10                                        fputs@fp 0020  
                                      initloop 0B11                              _EUSART_Initialize 0DDE  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0294  
                           _EUSART_is_rx_ready 0B27                             _EUSART_is_tx_ready 0B30  
                                   main@F12633 0158                                     main@F12635 01BC  
                                   ??_vfprintf 0062                          __CFG_WDTCPS$WDTCPS_31 0000  
                                      strlen@a 0074                                        strlen@s 0075  
                         write_str_UART@string 0077                            ??_EUSART_Initialize 0073  
               ??_EUSART_SetTxInterruptHandler 0073                            ?_EUSART_is_rx_ready 0070  
                          ?_EUSART_is_tx_ready 0070                                  _parse_message 0EFD  
                        __size_of_EUSART_Write 002B                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 0E1D  
                         ??_EUSART_is_rx_ready 0071                           ??_EUSART_is_tx_ready 0071  
                                   main@str_rc 01AE                                     _write_UART 0C82  
           __end_of_EUSART_DefaultErrorHandler 0ADE                     _EUSART_DefaultErrorHandler 0ADA  
                                  vfpfcnvrt@ap 0058                                    vfpfcnvrt@fp 00B5  
                                  vfpfcnvrt@ll 00A0                                 __end_of___wmul 0C3E  
                                 _EUSART_Write 0D1B                         ?_OSCILLATOR_Initialize 0070  
                               ?_parse_message 0070                                ??_read_str_UART 00C0  
                               __end_of_printf 0B6A                                 __end_of_strlen 0BE6  
                          start_initialization 002D                __size_of_PIN_MANAGER_Initialize 0040  
                                  __end_of_abs 0BCC                                    __end_of_pad 07BF  
                                ??_EUSART_Read 0071                               write_UART@rxData 0074  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0073                 ?_EUSART_SetOverrunErrorHandler 0071  
                             __CFG_LPBOREN$OFF 0000                                    vfprintf@fmt 005F  
                   _EUSART_FramingErrorHandler 016A                               ??_PMD_Initialize 0071  
                                     ??___wmul 0075                         _EUSART_SetErrorHandler 0AE6  
                                  __pdataBANK2 0158                        __size_of_write_str_UART 0026  
                                     ??_printf 0067                             write_str_UART@size 0075  
                                     ??_strlen 0073                    __end_of_EUSART_Transmit_ISR 0C82  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK3 01A0                               ___aodiv@dividend 0028  
                   __end_of_EUSART_Receive_ISR 0DDE                     __size_of_EUSART_Initialize 003F  
             _EUSART_RxDefaultInterruptHandler 016C                               write_str_UART@id 0078  
                          __end_of_EUSART_Read 0D72                                      _atoi$1042 0026  
                                    _atoi$1043 002A                                      _atoi$1044 0028  
                                    __pnvBANK1 00D4                                      __pnvBANK2 0166  
                 __end_of_EUSART_RxDataHandler 0C01                         _PIN_MANAGER_Initialize 07BF  
                         EUSART_Read@readValue 0072                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0074  
                                  ?_write_UART 0073                                   _eusartRxHead 007C  
                                 _eusartTxHead 00D3                                   _eusartRxTail 00D1  
                              ??_parse_message 006B                                   _eusartTxTail 00D2  
                 ??_INTERRUPT_InterruptManager 0071                              __size_of_vfprintf 0031  
                      _eusartTxBufferRemaining 00D4                                       _BAUD1CON 011F  
                                     ?_isalpha 0071                                       ?_isdigit 0071  
                                     ?_islower 0071                                       ?_isspace 0071  
                                     ?_isupper 0071                                 __size_of_fputc 003F  
                               __size_of_fputs 0029                                       ?_toupper 0077  
                               __size_of_putch 0006                                 _eusartRxBuffer 0128  
                               _eusartTxBuffer 0130                                 ___wmul@product 0075  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0071  
                                    clear_ram0 0B0A                                       _PIE3bits 0719  
                            _eusartRxLastError 00CF            __size_of_INTERRUPT_InterruptManager 0027  
              ??_EUSART_SetFramingErrorHandler 0073                                       _PIR3bits 070F  
                            _EUSART_is_tx_done 0AE2      __end_of_EUSART_DefaultOverrunErrorHandler 0AE2  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0ADE  
                           ?_EUSART_is_tx_done 0070                                      _vfpfcnvrt 0056  
                            ___wmul@multiplier 0071                            ??_EUSART_is_tx_done 0071  
                                 _isspace$1069 0075                                    _EUSART_Read 0D46  
                                   vfpfcnvrt@c 00B0                            __size_of_write_UART 0024  
                    __end_of_EUSART_is_tx_done 0AE6                                     vfprintf@ap 0061  
                                   vfprintf@fp 0064                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 0166                               __size_of___aodiv 0101  
                             __size_of___aomod 00EA                                 _write_str_UART 0CCC  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0057  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0072  
                             __size_of_isalpha 001E                               __size_of_isdigit 0018  
                                     _dtoa$720 003C                           _EUSART_RxDataHandler 0BE6  
                             __size_of_islower 0018                               __size_of_isspace 0021  
                                     __ptext10 0294                                       __ptext11 0CA6  
                                     __ptext20 0B04                                       __ptext12 0B9A  
                                     __ptext21 0D1B                                       __ptext13 0B82  
                                     __ptext30 0D46                                       __ptext22 0BB2  
                                     __ptext14 0C01                                       __ptext31 0B39  
                                     __ptext23 067C                                       __ptext15 040B  
                                     __ptext40 0AE6                                       __ptext32 0B16  
                                     __ptext24 057B                                       __ptext16 0766  
                                     __ptext33 07BF                                       __ptext25 0F51  
                                     __ptext17 0BCC                                       __ptext42 0C5F  
                                     __ptext34 0B1E                                       __ptext26 0C3E  
                                     __ptext18 0CF2                                       __ptext43 0DA3  
                                     __ptext35 0DDE                                       __ptext27 0B6A  
                                     __ptext19 0E1D                                       __ptext44 0ADE  
                                     __ptext36 0AFE                                       __ptext28 0C1F  
                                     __ptext45 07FF                                       __ptext37 0AF8  
                                     __ptext29 0B27                                       __ptext46 0ADA  
                                     __ptext38 0AF2                                       __ptext47 0BE6  
                                     __ptext39 0AEC                               __size_of_isupper 0018  
                             __size_of_toupper 0026                    __size_of_EUSART_is_rx_ready 0009  
                                __size_of_atoi 00AF                                  __size_of_main 0051  
                                __size_of_dtoa 0170                                  __size_of_xtoa 0177  
                  __size_of_EUSART_is_tx_ready 0009                           __CFG_WDTCWS$WDTCWS_7 0000  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 011D  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                         __end_of_write_str_UART 0CF2  
                                     int$flags 007E                                       _xtoa$731 0042  
                                     _xtoa$732 0044                                       _vfprintf 0D72  
           __end_of_INTERRUPT_InterruptManager 002B                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 00B6          __end_of_EUSART_SetFramingErrorHandler 0AF2  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0AEC  
                             ___aomod@dividend 0028                                     _INTCONbits 000B  
                        __end_of_read_str_UART 0EAC                          ?_EUSART_RxDataHandler 0070  
                                     isalpha@c 0071                                       isdigit@c 0071  
                                     intlevel1 0000                                       islower@c 0071  
                                     isspace@c 0071                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0AEC                              __CFG_CLKOUTEN$OFF 0000  
                                     isupper@c 0071                     __size_of_EUSART_is_tx_done 0004  
         __end_of_EUSART_SetRxInterruptHandler 0AFE          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0AF8                                ?_write_str_UART 0075  
                                     printf@ap 006A                             _EUSART_Receive_ISR 0DA3  
                                 ??_write_UART 0074  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                              ___aomod@divisor 0020                                  write_UART@led 0073  
                                  ??_vfpfcnvrt 0059                                ___aomod@counter 0072  
                                _vfpfcnvrt$746 00B3                                  __pstringtext1 1000  
                                __pstringtext2 1012                                  __pstringtext3 1019  
                                __pstringtext4 0000                            ?_EUSART_Receive_ISR 0070  
                                     toupper@c 0077                                     _TX1STAbits 011E  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 0023  
                                 ___aodiv@sign 0073                 __end_of_PIN_MANAGER_Initialize 07FF  
                           __end_of_write_UART 0CA6                           ??_EUSART_Receive_ISR 0071  
                                 ___aomod@sign 0073  
