

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 20:27:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,delta=2
   124                           	dabs	1,0x7E,2
   125  0000                     
   126                           ; Version 2.10
   127                           ; Generated 31/07/2019 GMT
   128                           ; 
   129                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16F18875 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001C                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  008C                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0110                     	;# 
   220  0110                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011C                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011E                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0198                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  020C                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  020F                     	;# 
   275  020F                     	;# 
   276  0210                     	;# 
   277  0210                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0216                     	;# 
   287  0216                     	;# 
   288  0217                     	;# 
   289  0217                     	;# 
   290  0218                     	;# 
   291  0218                     	;# 
   292  0219                     	;# 
   293  021A                     	;# 
   294  021B                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021C                     	;# 
   298  021D                     	;# 
   299  021D                     	;# 
   300  021E                     	;# 
   301  021F                     	;# 
   302  028C                     	;# 
   303  028C                     	;# 
   304  028D                     	;# 
   305  028D                     	;# 
   306  028E                     	;# 
   307  028F                     	;# 
   308  0290                     	;# 
   309  0290                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  031C                     	;# 
   350  031C                     	;# 
   351  031D                     	;# 
   352  031E                     	;# 
   353  031F                     	;# 
   354  038C                     	;# 
   355  038C                     	;# 
   356  038D                     	;# 
   357  038E                     	;# 
   358  0390                     	;# 
   359  0390                     	;# 
   360  0391                     	;# 
   361  0392                     	;# 
   362  040C                     	;# 
   363  040D                     	;# 
   364  040E                     	;# 
   365  040F                     	;# 
   366  0410                     	;# 
   367  0411                     	;# 
   368  0416                     	;# 
   369  0416                     	;# 
   370  0417                     	;# 
   371  0418                     	;# 
   372  0418                     	;# 
   373  0419                     	;# 
   374  041A                     	;# 
   375  041A                     	;# 
   376  041B                     	;# 
   377  041C                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  041F                     	;# 
   382  048C                     	;# 
   383  048C                     	;# 
   384  048D                     	;# 
   385  048E                     	;# 
   386  048F                     	;# 
   387  048F                     	;# 
   388  0490                     	;# 
   389  0491                     	;# 
   390  0492                     	;# 
   391  0492                     	;# 
   392  0493                     	;# 
   393  0494                     	;# 
   394  0495                     	;# 
   395  0495                     	;# 
   396  0496                     	;# 
   397  0497                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049C                     	;# 
   403  049D                     	;# 
   404  050C                     	;# 
   405  050C                     	;# 
   406  050D                     	;# 
   407  050E                     	;# 
   408  050F                     	;# 
   409  050F                     	;# 
   410  0510                     	;# 
   411  0511                     	;# 
   412  0512                     	;# 
   413  0512                     	;# 
   414  0513                     	;# 
   415  0514                     	;# 
   416  0515                     	;# 
   417  0515                     	;# 
   418  0516                     	;# 
   419  0517                     	;# 
   420  0518                     	;# 
   421  0519                     	;# 
   422  051A                     	;# 
   423  051B                     	;# 
   424  051C                     	;# 
   425  051D                     	;# 
   426  058C                     	;# 
   427  058C                     	;# 
   428  058D                     	;# 
   429  058E                     	;# 
   430  058F                     	;# 
   431  058F                     	;# 
   432  0590                     	;# 
   433  0591                     	;# 
   434  0592                     	;# 
   435  0593                     	;# 
   436  060C                     	;# 
   437  060D                     	;# 
   438  060E                     	;# 
   439  060F                     	;# 
   440  0610                     	;# 
   441  0611                     	;# 
   442  0612                     	;# 
   443  0613                     	;# 
   444  0614                     	;# 
   445  0616                     	;# 
   446  0617                     	;# 
   447  0618                     	;# 
   448  0619                     	;# 
   449  061A                     	;# 
   450  061B                     	;# 
   451  061C                     	;# 
   452  061D                     	;# 
   453  061E                     	;# 
   454  068C                     	;# 
   455  068D                     	;# 
   456  068E                     	;# 
   457  068F                     	;# 
   458  0690                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  070C                     	;# 
   464  070D                     	;# 
   465  070E                     	;# 
   466  070F                     	;# 
   467  0710                     	;# 
   468  0711                     	;# 
   469  0712                     	;# 
   470  0713                     	;# 
   471  0714                     	;# 
   472  0716                     	;# 
   473  0717                     	;# 
   474  0718                     	;# 
   475  0719                     	;# 
   476  071A                     	;# 
   477  071B                     	;# 
   478  071C                     	;# 
   479  071D                     	;# 
   480  071E                     	;# 
   481  0796                     	;# 
   482  0797                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  079A                     	;# 
   486  079B                     	;# 
   487  080C                     	;# 
   488  080D                     	;# 
   489  080E                     	;# 
   490  080F                     	;# 
   491  0810                     	;# 
   492  0811                     	;# 
   493  0812                     	;# 
   494  0813                     	;# 
   495  0814                     	;# 
   496  081A                     	;# 
   497  081B                     	;# 
   498  081C                     	;# 
   499  081D                     	;# 
   500  081E                     	;# 
   501  081F                     	;# 
   502  088C                     	;# 
   503  088D                     	;# 
   504  088E                     	;# 
   505  088F                     	;# 
   506  0890                     	;# 
   507  0891                     	;# 
   508  0892                     	;# 
   509  0893                     	;# 
   510  0895                     	;# 
   511  0896                     	;# 
   512  0897                     	;# 
   513  0898                     	;# 
   514  0899                     	;# 
   515  089A                     	;# 
   516  089B                     	;# 
   517  090C                     	;# 
   518  090E                     	;# 
   519  090F                     	;# 
   520  091F                     	;# 
   521  091F                     	;# 
   522  098F                     	;# 
   523  098F                     	;# 
   524  0990                     	;# 
   525  0991                     	;# 
   526  0992                     	;# 
   527  0993                     	;# 
   528  0994                     	;# 
   529  0995                     	;# 
   530  0996                     	;# 
   531  0997                     	;# 
   532  0E0F                     	;# 
   533  0E10                     	;# 
   534  0E11                     	;# 
   535  0E12                     	;# 
   536  0E13                     	;# 
   537  0E14                     	;# 
   538  0E15                     	;# 
   539  0E16                     	;# 
   540  0E17                     	;# 
   541  0E18                     	;# 
   542  0E19                     	;# 
   543  0E1A                     	;# 
   544  0E1B                     	;# 
   545  0E1C                     	;# 
   546  0E1D                     	;# 
   547  0E1E                     	;# 
   548  0E1F                     	;# 
   549  0E20                     	;# 
   550  0E21                     	;# 
   551  0E22                     	;# 
   552  0E23                     	;# 
   553  0E24                     	;# 
   554  0E25                     	;# 
   555  0E26                     	;# 
   556  0E27                     	;# 
   557  0E28                     	;# 
   558  0E29                     	;# 
   559  0E2A                     	;# 
   560  0E2B                     	;# 
   561  0E2C                     	;# 
   562  0E2D                     	;# 
   563  0E2E                     	;# 
   564  0E2F                     	;# 
   565  0E30                     	;# 
   566  0E31                     	;# 
   567  0E32                     	;# 
   568  0E33                     	;# 
   569  0E34                     	;# 
   570  0E35                     	;# 
   571  0E36                     	;# 
   572  0E37                     	;# 
   573  0E8F                     	;# 
   574  0E90                     	;# 
   575  0E91                     	;# 
   576  0E92                     	;# 
   577  0E93                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E9C                     	;# 
   583  0E9D                     	;# 
   584  0E9E                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA9                     	;# 
   591  0EAA                     	;# 
   592  0EAB                     	;# 
   593  0EAC                     	;# 
   594  0EB1                     	;# 
   595  0EB2                     	;# 
   596  0EB3                     	;# 
   597  0EB8                     	;# 
   598  0EB9                     	;# 
   599  0EBA                     	;# 
   600  0EBB                     	;# 
   601  0EBC                     	;# 
   602  0EBD                     	;# 
   603  0EBE                     	;# 
   604  0EC3                     	;# 
   605  0EC5                     	;# 
   606  0EC6                     	;# 
   607  0EC7                     	;# 
   608  0EC8                     	;# 
   609  0EC9                     	;# 
   610  0ECA                     	;# 
   611  0ECB                     	;# 
   612  0ECC                     	;# 
   613  0F10                     	;# 
   614  0F11                     	;# 
   615  0F12                     	;# 
   616  0F13                     	;# 
   617  0F14                     	;# 
   618  0F15                     	;# 
   619  0F16                     	;# 
   620  0F17                     	;# 
   621  0F18                     	;# 
   622  0F19                     	;# 
   623  0F1A                     	;# 
   624  0F1B                     	;# 
   625  0F1C                     	;# 
   626  0F1D                     	;# 
   627  0F1E                     	;# 
   628  0F1F                     	;# 
   629  0F20                     	;# 
   630  0F21                     	;# 
   631  0F22                     	;# 
   632  0F23                     	;# 
   633  0F24                     	;# 
   634  0F25                     	;# 
   635  0F26                     	;# 
   636  0F27                     	;# 
   637  0F28                     	;# 
   638  0F29                     	;# 
   639  0F2A                     	;# 
   640  0F2B                     	;# 
   641  0F2C                     	;# 
   642  0F2D                     	;# 
   643  0F2E                     	;# 
   644  0F2F                     	;# 
   645  0F30                     	;# 
   646  0F31                     	;# 
   647  0F32                     	;# 
   648  0F38                     	;# 
   649  0F39                     	;# 
   650  0F3A                     	;# 
   651  0F3B                     	;# 
   652  0F3C                     	;# 
   653  0F3D                     	;# 
   654  0F3E                     	;# 
   655  0F3F                     	;# 
   656  0F40                     	;# 
   657  0F41                     	;# 
   658  0F43                     	;# 
   659  0F44                     	;# 
   660  0F45                     	;# 
   661  0F46                     	;# 
   662  0F47                     	;# 
   663  0F48                     	;# 
   664  0F49                     	;# 
   665  0F4A                     	;# 
   666  0F4B                     	;# 
   667  0F4C                     	;# 
   668  0F4E                     	;# 
   669  0F4F                     	;# 
   670  0F50                     	;# 
   671  0F51                     	;# 
   672  0F52                     	;# 
   673  0F53                     	;# 
   674  0F54                     	;# 
   675  0F55                     	;# 
   676  0F56                     	;# 
   677  0F57                     	;# 
   678  0F59                     	;# 
   679  0F5A                     	;# 
   680  0F5B                     	;# 
   681  0F5C                     	;# 
   682  0F5D                     	;# 
   683  0F61                     	;# 
   684  0F62                     	;# 
   685  0F64                     	;# 
   686  0F65                     	;# 
   687  0F66                     	;# 
   688  0F67                     	;# 
   689  0F68                     	;# 
   690  0F69                     	;# 
   691  0F6A                     	;# 
   692  0F6B                     	;# 
   693  0F6C                     	;# 
   694  0F6D                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  000F                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0014                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001C                     	;# 
   734  001C                     	;# 
   735  001D                     	;# 
   736  001D                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008C                     	;# 
   741  008D                     	;# 
   742  008E                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0090                     	;# 
   747  0091                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009E                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  010E                     	;# 
   763  010E                     	;# 
   764  010F                     	;# 
   765  0110                     	;# 
   766  0110                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0112                     	;# 
   770  0113                     	;# 
   771  0114                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0119                     	;# 
   778  0119                     	;# 
   779  0119                     	;# 
   780  011A                     	;# 
   781  011A                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011B                     	;# 
   785  011B                     	;# 
   786  011B                     	;# 
   787  011B                     	;# 
   788  011C                     	;# 
   789  011C                     	;# 
   790  011C                     	;# 
   791  011D                     	;# 
   792  011D                     	;# 
   793  011D                     	;# 
   794  011E                     	;# 
   795  011E                     	;# 
   796  011E                     	;# 
   797  011F                     	;# 
   798  011F                     	;# 
   799  011F                     	;# 
   800  011F                     	;# 
   801  011F                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  018E                     	;# 
   805  018F                     	;# 
   806  0190                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0198                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019C                     	;# 
   816  020C                     	;# 
   817  020C                     	;# 
   818  020D                     	;# 
   819  020E                     	;# 
   820  020F                     	;# 
   821  020F                     	;# 
   822  0210                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0214                     	;# 
   830  0215                     	;# 
   831  0215                     	;# 
   832  0216                     	;# 
   833  0216                     	;# 
   834  0217                     	;# 
   835  0217                     	;# 
   836  0218                     	;# 
   837  0218                     	;# 
   838  0219                     	;# 
   839  021A                     	;# 
   840  021B                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021C                     	;# 
   844  021D                     	;# 
   845  021D                     	;# 
   846  021E                     	;# 
   847  021F                     	;# 
   848  028C                     	;# 
   849  028C                     	;# 
   850  028D                     	;# 
   851  028D                     	;# 
   852  028E                     	;# 
   853  028F                     	;# 
   854  0290                     	;# 
   855  0290                     	;# 
   856  0291                     	;# 
   857  0292                     	;# 
   858  0292                     	;# 
   859  0293                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0296                     	;# 
   864  0296                     	;# 
   865  0297                     	;# 
   866  0298                     	;# 
   867  0298                     	;# 
   868  0299                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029C                     	;# 
   874  029D                     	;# 
   875  030C                     	;# 
   876  030C                     	;# 
   877  030D                     	;# 
   878  030E                     	;# 
   879  030F                     	;# 
   880  0310                     	;# 
   881  0310                     	;# 
   882  0311                     	;# 
   883  0312                     	;# 
   884  0313                     	;# 
   885  0314                     	;# 
   886  0314                     	;# 
   887  0315                     	;# 
   888  0316                     	;# 
   889  0317                     	;# 
   890  0318                     	;# 
   891  0318                     	;# 
   892  0319                     	;# 
   893  031A                     	;# 
   894  031B                     	;# 
   895  031C                     	;# 
   896  031C                     	;# 
   897  031D                     	;# 
   898  031E                     	;# 
   899  031F                     	;# 
   900  038C                     	;# 
   901  038C                     	;# 
   902  038D                     	;# 
   903  038E                     	;# 
   904  0390                     	;# 
   905  0390                     	;# 
   906  0391                     	;# 
   907  0392                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  040E                     	;# 
   911  040F                     	;# 
   912  0410                     	;# 
   913  0411                     	;# 
   914  0416                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  041F                     	;# 
   928  048C                     	;# 
   929  048C                     	;# 
   930  048D                     	;# 
   931  048E                     	;# 
   932  048F                     	;# 
   933  048F                     	;# 
   934  0490                     	;# 
   935  0491                     	;# 
   936  0492                     	;# 
   937  0492                     	;# 
   938  0493                     	;# 
   939  0494                     	;# 
   940  0495                     	;# 
   941  0495                     	;# 
   942  0496                     	;# 
   943  0497                     	;# 
   944  0498                     	;# 
   945  0499                     	;# 
   946  049A                     	;# 
   947  049B                     	;# 
   948  049C                     	;# 
   949  049D                     	;# 
   950  050C                     	;# 
   951  050C                     	;# 
   952  050D                     	;# 
   953  050E                     	;# 
   954  050F                     	;# 
   955  050F                     	;# 
   956  0510                     	;# 
   957  0511                     	;# 
   958  0512                     	;# 
   959  0512                     	;# 
   960  0513                     	;# 
   961  0514                     	;# 
   962  0515                     	;# 
   963  0515                     	;# 
   964  0516                     	;# 
   965  0517                     	;# 
   966  0518                     	;# 
   967  0519                     	;# 
   968  051A                     	;# 
   969  051B                     	;# 
   970  051C                     	;# 
   971  051D                     	;# 
   972  058C                     	;# 
   973  058C                     	;# 
   974  058D                     	;# 
   975  058E                     	;# 
   976  058F                     	;# 
   977  058F                     	;# 
   978  0590                     	;# 
   979  0591                     	;# 
   980  0592                     	;# 
   981  0593                     	;# 
   982  060C                     	;# 
   983  060D                     	;# 
   984  060E                     	;# 
   985  060F                     	;# 
   986  0610                     	;# 
   987  0611                     	;# 
   988  0612                     	;# 
   989  0613                     	;# 
   990  0614                     	;# 
   991  0616                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061D                     	;# 
   999  061E                     	;# 
  1000  068C                     	;# 
  1001  068D                     	;# 
  1002  068E                     	;# 
  1003  068F                     	;# 
  1004  0690                     	;# 
  1005  0691                     	;# 
  1006  0692                     	;# 
  1007  0693                     	;# 
  1008  0694                     	;# 
  1009  070C                     	;# 
  1010  070D                     	;# 
  1011  070E                     	;# 
  1012  070F                     	;# 
  1013  0710                     	;# 
  1014  0711                     	;# 
  1015  0712                     	;# 
  1016  0713                     	;# 
  1017  0714                     	;# 
  1018  0716                     	;# 
  1019  0717                     	;# 
  1020  0718                     	;# 
  1021  0719                     	;# 
  1022  071A                     	;# 
  1023  071B                     	;# 
  1024  071C                     	;# 
  1025  071D                     	;# 
  1026  071E                     	;# 
  1027  0796                     	;# 
  1028  0797                     	;# 
  1029  0798                     	;# 
  1030  0799                     	;# 
  1031  079A                     	;# 
  1032  079B                     	;# 
  1033  080C                     	;# 
  1034  080D                     	;# 
  1035  080E                     	;# 
  1036  080F                     	;# 
  1037  0810                     	;# 
  1038  0811                     	;# 
  1039  0812                     	;# 
  1040  0813                     	;# 
  1041  0814                     	;# 
  1042  081A                     	;# 
  1043  081B                     	;# 
  1044  081C                     	;# 
  1045  081D                     	;# 
  1046  081E                     	;# 
  1047  081F                     	;# 
  1048  088C                     	;# 
  1049  088D                     	;# 
  1050  088E                     	;# 
  1051  088F                     	;# 
  1052  0890                     	;# 
  1053  0891                     	;# 
  1054  0892                     	;# 
  1055  0893                     	;# 
  1056  0895                     	;# 
  1057  0896                     	;# 
  1058  0897                     	;# 
  1059  0898                     	;# 
  1060  0899                     	;# 
  1061  089A                     	;# 
  1062  089B                     	;# 
  1063  090C                     	;# 
  1064  090E                     	;# 
  1065  090F                     	;# 
  1066  091F                     	;# 
  1067  091F                     	;# 
  1068  098F                     	;# 
  1069  098F                     	;# 
  1070  0990                     	;# 
  1071  0991                     	;# 
  1072  0992                     	;# 
  1073  0993                     	;# 
  1074  0994                     	;# 
  1075  0995                     	;# 
  1076  0996                     	;# 
  1077  0997                     	;# 
  1078  0E0F                     	;# 
  1079  0E10                     	;# 
  1080  0E11                     	;# 
  1081  0E12                     	;# 
  1082  0E13                     	;# 
  1083  0E14                     	;# 
  1084  0E15                     	;# 
  1085  0E16                     	;# 
  1086  0E17                     	;# 
  1087  0E18                     	;# 
  1088  0E19                     	;# 
  1089  0E1A                     	;# 
  1090  0E1B                     	;# 
  1091  0E1C                     	;# 
  1092  0E1D                     	;# 
  1093  0E1E                     	;# 
  1094  0E1F                     	;# 
  1095  0E20                     	;# 
  1096  0E21                     	;# 
  1097  0E22                     	;# 
  1098  0E23                     	;# 
  1099  0E24                     	;# 
  1100  0E25                     	;# 
  1101  0E26                     	;# 
  1102  0E27                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E2C                     	;# 
  1108  0E2D                     	;# 
  1109  0E2E                     	;# 
  1110  0E2F                     	;# 
  1111  0E30                     	;# 
  1112  0E31                     	;# 
  1113  0E32                     	;# 
  1114  0E33                     	;# 
  1115  0E34                     	;# 
  1116  0E35                     	;# 
  1117  0E36                     	;# 
  1118  0E37                     	;# 
  1119  0E8F                     	;# 
  1120  0E90                     	;# 
  1121  0E91                     	;# 
  1122  0E92                     	;# 
  1123  0E93                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E96                     	;# 
  1127  0E97                     	;# 
  1128  0E9C                     	;# 
  1129  0E9D                     	;# 
  1130  0E9E                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA9                     	;# 
  1137  0EAA                     	;# 
  1138  0EAB                     	;# 
  1139  0EAC                     	;# 
  1140  0EB1                     	;# 
  1141  0EB2                     	;# 
  1142  0EB3                     	;# 
  1143  0EB8                     	;# 
  1144  0EB9                     	;# 
  1145  0EBA                     	;# 
  1146  0EBB                     	;# 
  1147  0EBC                     	;# 
  1148  0EBD                     	;# 
  1149  0EBE                     	;# 
  1150  0EC3                     	;# 
  1151  0EC5                     	;# 
  1152  0EC6                     	;# 
  1153  0EC7                     	;# 
  1154  0EC8                     	;# 
  1155  0EC9                     	;# 
  1156  0ECA                     	;# 
  1157  0ECB                     	;# 
  1158  0ECC                     	;# 
  1159  0F10                     	;# 
  1160  0F11                     	;# 
  1161  0F12                     	;# 
  1162  0F13                     	;# 
  1163  0F14                     	;# 
  1164  0F15                     	;# 
  1165  0F16                     	;# 
  1166  0F17                     	;# 
  1167  0F18                     	;# 
  1168  0F19                     	;# 
  1169  0F1A                     	;# 
  1170  0F1B                     	;# 
  1171  0F1C                     	;# 
  1172  0F1D                     	;# 
  1173  0F1E                     	;# 
  1174  0F1F                     	;# 
  1175  0F20                     	;# 
  1176  0F21                     	;# 
  1177  0F22                     	;# 
  1178  0F23                     	;# 
  1179  0F24                     	;# 
  1180  0F25                     	;# 
  1181  0F26                     	;# 
  1182  0F27                     	;# 
  1183  0F28                     	;# 
  1184  0F29                     	;# 
  1185  0F2A                     	;# 
  1186  0F2B                     	;# 
  1187  0F2C                     	;# 
  1188  0F2D                     	;# 
  1189  0F2E                     	;# 
  1190  0F2F                     	;# 
  1191  0F30                     	;# 
  1192  0F31                     	;# 
  1193  0F32                     	;# 
  1194  0F38                     	;# 
  1195  0F39                     	;# 
  1196  0F3A                     	;# 
  1197  0F3B                     	;# 
  1198  0F3C                     	;# 
  1199  0F3D                     	;# 
  1200  0F3E                     	;# 
  1201  0F3F                     	;# 
  1202  0F40                     	;# 
  1203  0F41                     	;# 
  1204  0F43                     	;# 
  1205  0F44                     	;# 
  1206  0F45                     	;# 
  1207  0F46                     	;# 
  1208  0F47                     	;# 
  1209  0F48                     	;# 
  1210  0F49                     	;# 
  1211  0F4A                     	;# 
  1212  0F4B                     	;# 
  1213  0F4C                     	;# 
  1214  0F4E                     	;# 
  1215  0F4F                     	;# 
  1216  0F50                     	;# 
  1217  0F51                     	;# 
  1218  0F52                     	;# 
  1219  0F53                     	;# 
  1220  0F54                     	;# 
  1221  0F55                     	;# 
  1222  0F56                     	;# 
  1223  0F57                     	;# 
  1224  0F59                     	;# 
  1225  0F5A                     	;# 
  1226  0F5B                     	;# 
  1227  0F5C                     	;# 
  1228  0F5D                     	;# 
  1229  0F61                     	;# 
  1230  0F62                     	;# 
  1231  0F64                     	;# 
  1232  0F65                     	;# 
  1233  0F66                     	;# 
  1234  0F67                     	;# 
  1235  0F68                     	;# 
  1236  0F69                     	;# 
  1237  0F6A                     	;# 
  1238  0F6B                     	;# 
  1239  0F6C                     	;# 
  1240  0F6D                     	;# 
  1241  0FE4                     	;# 
  1242  0FE5                     	;# 
  1243  0FE6                     	;# 
  1244  0FE7                     	;# 
  1245  0FE8                     	;# 
  1246  0FE9                     	;# 
  1247  0FEA                     	;# 
  1248  0FEB                     	;# 
  1249  0FED                     	;# 
  1250  0FEE                     	;# 
  1251  0FEF                     	;# 
  1252  0000                     	;# 
  1253  0001                     	;# 
  1254  0002                     	;# 
  1255  0003                     	;# 
  1256  0004                     	;# 
  1257  0005                     	;# 
  1258  0006                     	;# 
  1259  0007                     	;# 
  1260  0008                     	;# 
  1261  0009                     	;# 
  1262  000A                     	;# 
  1263  000B                     	;# 
  1264  000C                     	;# 
  1265  000D                     	;# 
  1266  000E                     	;# 
  1267  000F                     	;# 
  1268  0010                     	;# 
  1269  0011                     	;# 
  1270  0012                     	;# 
  1271  0013                     	;# 
  1272  0014                     	;# 
  1273  0015                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001C                     	;# 
  1280  001C                     	;# 
  1281  001D                     	;# 
  1282  001D                     	;# 
  1283  001E                     	;# 
  1284  001F                     	;# 
  1285  008C                     	;# 
  1286  008C                     	;# 
  1287  008D                     	;# 
  1288  008E                     	;# 
  1289  008E                     	;# 
  1290  008F                     	;# 
  1291  0090                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0093                     	;# 
  1295  0094                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0098                     	;# 
  1300  0099                     	;# 
  1301  009A                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  010E                     	;# 
  1310  010F                     	;# 
  1311  0110                     	;# 
  1312  0110                     	;# 
  1313  0111                     	;# 
  1314  0112                     	;# 
  1315  0112                     	;# 
  1316  0113                     	;# 
  1317  0114                     	;# 
  1318  0114                     	;# 
  1319  0115                     	;# 
  1320  0116                     	;# 
  1321  0116                     	;# 
  1322  0117                     	;# 
  1323  0119                     	;# 
  1324  0119                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011A                     	;# 
  1328  011A                     	;# 
  1329  011B                     	;# 
  1330  011B                     	;# 
  1331  011B                     	;# 
  1332  011B                     	;# 
  1333  011B                     	;# 
  1334  011C                     	;# 
  1335  011C                     	;# 
  1336  011C                     	;# 
  1337  011D                     	;# 
  1338  011D                     	;# 
  1339  011D                     	;# 
  1340  011E                     	;# 
  1341  011E                     	;# 
  1342  011E                     	;# 
  1343  011F                     	;# 
  1344  011F                     	;# 
  1345  011F                     	;# 
  1346  011F                     	;# 
  1347  011F                     	;# 
  1348  018C                     	;# 
  1349  018D                     	;# 
  1350  018E                     	;# 
  1351  018F                     	;# 
  1352  0190                     	;# 
  1353  0191                     	;# 
  1354  0192                     	;# 
  1355  0196                     	;# 
  1356  0197                     	;# 
  1357  0198                     	;# 
  1358  0199                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019C                     	;# 
  1362  020C                     	;# 
  1363  020C                     	;# 
  1364  020D                     	;# 
  1365  020E                     	;# 
  1366  020F                     	;# 
  1367  020F                     	;# 
  1368  0210                     	;# 
  1369  0210                     	;# 
  1370  0211                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0212                     	;# 
  1374  0213                     	;# 
  1375  0214                     	;# 
  1376  0215                     	;# 
  1377  0215                     	;# 
  1378  0216                     	;# 
  1379  0216                     	;# 
  1380  0217                     	;# 
  1381  0217                     	;# 
  1382  0218                     	;# 
  1383  0218                     	;# 
  1384  0219                     	;# 
  1385  021A                     	;# 
  1386  021B                     	;# 
  1387  021B                     	;# 
  1388  021C                     	;# 
  1389  021C                     	;# 
  1390  021D                     	;# 
  1391  021D                     	;# 
  1392  021E                     	;# 
  1393  021F                     	;# 
  1394  028C                     	;# 
  1395  028C                     	;# 
  1396  028D                     	;# 
  1397  028D                     	;# 
  1398  028E                     	;# 
  1399  028F                     	;# 
  1400  0290                     	;# 
  1401  0290                     	;# 
  1402  0291                     	;# 
  1403  0292                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0293                     	;# 
  1407  0294                     	;# 
  1408  0295                     	;# 
  1409  0296                     	;# 
  1410  0296                     	;# 
  1411  0297                     	;# 
  1412  0298                     	;# 
  1413  0298                     	;# 
  1414  0299                     	;# 
  1415  0299                     	;# 
  1416  029A                     	;# 
  1417  029B                     	;# 
  1418  029C                     	;# 
  1419  029C                     	;# 
  1420  029D                     	;# 
  1421  030C                     	;# 
  1422  030C                     	;# 
  1423  030D                     	;# 
  1424  030E                     	;# 
  1425  030F                     	;# 
  1426  0310                     	;# 
  1427  0310                     	;# 
  1428  0311                     	;# 
  1429  0312                     	;# 
  1430  0313                     	;# 
  1431  0314                     	;# 
  1432  0314                     	;# 
  1433  0315                     	;# 
  1434  0316                     	;# 
  1435  0317                     	;# 
  1436  0318                     	;# 
  1437  0318                     	;# 
  1438  0319                     	;# 
  1439  031A                     	;# 
  1440  031B                     	;# 
  1441  031C                     	;# 
  1442  031C                     	;# 
  1443  031D                     	;# 
  1444  031E                     	;# 
  1445  031F                     	;# 
  1446  038C                     	;# 
  1447  038C                     	;# 
  1448  038D                     	;# 
  1449  038E                     	;# 
  1450  0390                     	;# 
  1451  0390                     	;# 
  1452  0391                     	;# 
  1453  0392                     	;# 
  1454  040C                     	;# 
  1455  040D                     	;# 
  1456  040E                     	;# 
  1457  040F                     	;# 
  1458  0410                     	;# 
  1459  0411                     	;# 
  1460  0416                     	;# 
  1461  0416                     	;# 
  1462  0417                     	;# 
  1463  0418                     	;# 
  1464  0418                     	;# 
  1465  0419                     	;# 
  1466  041A                     	;# 
  1467  041A                     	;# 
  1468  041B                     	;# 
  1469  041C                     	;# 
  1470  041C                     	;# 
  1471  041D                     	;# 
  1472  041E                     	;# 
  1473  041F                     	;# 
  1474  048C                     	;# 
  1475  048C                     	;# 
  1476  048D                     	;# 
  1477  048E                     	;# 
  1478  048F                     	;# 
  1479  048F                     	;# 
  1480  0490                     	;# 
  1481  0491                     	;# 
  1482  0492                     	;# 
  1483  0492                     	;# 
  1484  0493                     	;# 
  1485  0494                     	;# 
  1486  0495                     	;# 
  1487  0495                     	;# 
  1488  0496                     	;# 
  1489  0497                     	;# 
  1490  0498                     	;# 
  1491  0499                     	;# 
  1492  049A                     	;# 
  1493  049B                     	;# 
  1494  049C                     	;# 
  1495  049D                     	;# 
  1496  050C                     	;# 
  1497  050C                     	;# 
  1498  050D                     	;# 
  1499  050E                     	;# 
  1500  050F                     	;# 
  1501  050F                     	;# 
  1502  0510                     	;# 
  1503  0511                     	;# 
  1504  0512                     	;# 
  1505  0512                     	;# 
  1506  0513                     	;# 
  1507  0514                     	;# 
  1508  0515                     	;# 
  1509  0515                     	;# 
  1510  0516                     	;# 
  1511  0517                     	;# 
  1512  0518                     	;# 
  1513  0519                     	;# 
  1514  051A                     	;# 
  1515  051B                     	;# 
  1516  051C                     	;# 
  1517  051D                     	;# 
  1518  058C                     	;# 
  1519  058C                     	;# 
  1520  058D                     	;# 
  1521  058E                     	;# 
  1522  058F                     	;# 
  1523  058F                     	;# 
  1524  0590                     	;# 
  1525  0591                     	;# 
  1526  0592                     	;# 
  1527  0593                     	;# 
  1528  060C                     	;# 
  1529  060D                     	;# 
  1530  060E                     	;# 
  1531  060F                     	;# 
  1532  0610                     	;# 
  1533  0611                     	;# 
  1534  0612                     	;# 
  1535  0613                     	;# 
  1536  0614                     	;# 
  1537  0616                     	;# 
  1538  0617                     	;# 
  1539  0618                     	;# 
  1540  0619                     	;# 
  1541  061A                     	;# 
  1542  061B                     	;# 
  1543  061C                     	;# 
  1544  061D                     	;# 
  1545  061E                     	;# 
  1546  068C                     	;# 
  1547  068D                     	;# 
  1548  068E                     	;# 
  1549  068F                     	;# 
  1550  0690                     	;# 
  1551  0691                     	;# 
  1552  0692                     	;# 
  1553  0693                     	;# 
  1554  0694                     	;# 
  1555  070C                     	;# 
  1556  070D                     	;# 
  1557  070E                     	;# 
  1558  070F                     	;# 
  1559  0710                     	;# 
  1560  0711                     	;# 
  1561  0712                     	;# 
  1562  0713                     	;# 
  1563  0714                     	;# 
  1564  0716                     	;# 
  1565  0717                     	;# 
  1566  0718                     	;# 
  1567  0719                     	;# 
  1568  071A                     	;# 
  1569  071B                     	;# 
  1570  071C                     	;# 
  1571  071D                     	;# 
  1572  071E                     	;# 
  1573  0796                     	;# 
  1574  0797                     	;# 
  1575  0798                     	;# 
  1576  0799                     	;# 
  1577  079A                     	;# 
  1578  079B                     	;# 
  1579  080C                     	;# 
  1580  080D                     	;# 
  1581  080E                     	;# 
  1582  080F                     	;# 
  1583  0810                     	;# 
  1584  0811                     	;# 
  1585  0812                     	;# 
  1586  0813                     	;# 
  1587  0814                     	;# 
  1588  081A                     	;# 
  1589  081B                     	;# 
  1590  081C                     	;# 
  1591  081D                     	;# 
  1592  081E                     	;# 
  1593  081F                     	;# 
  1594  088C                     	;# 
  1595  088D                     	;# 
  1596  088E                     	;# 
  1597  088F                     	;# 
  1598  0890                     	;# 
  1599  0891                     	;# 
  1600  0892                     	;# 
  1601  0893                     	;# 
  1602  0895                     	;# 
  1603  0896                     	;# 
  1604  0897                     	;# 
  1605  0898                     	;# 
  1606  0899                     	;# 
  1607  089A                     	;# 
  1608  089B                     	;# 
  1609  090C                     	;# 
  1610  090E                     	;# 
  1611  090F                     	;# 
  1612  091F                     	;# 
  1613  091F                     	;# 
  1614  098F                     	;# 
  1615  098F                     	;# 
  1616  0990                     	;# 
  1617  0991                     	;# 
  1618  0992                     	;# 
  1619  0993                     	;# 
  1620  0994                     	;# 
  1621  0995                     	;# 
  1622  0996                     	;# 
  1623  0997                     	;# 
  1624  0E0F                     	;# 
  1625  0E10                     	;# 
  1626  0E11                     	;# 
  1627  0E12                     	;# 
  1628  0E13                     	;# 
  1629  0E14                     	;# 
  1630  0E15                     	;# 
  1631  0E16                     	;# 
  1632  0E17                     	;# 
  1633  0E18                     	;# 
  1634  0E19                     	;# 
  1635  0E1A                     	;# 
  1636  0E1B                     	;# 
  1637  0E1C                     	;# 
  1638  0E1D                     	;# 
  1639  0E1E                     	;# 
  1640  0E1F                     	;# 
  1641  0E20                     	;# 
  1642  0E21                     	;# 
  1643  0E22                     	;# 
  1644  0E23                     	;# 
  1645  0E24                     	;# 
  1646  0E25                     	;# 
  1647  0E26                     	;# 
  1648  0E27                     	;# 
  1649  0E28                     	;# 
  1650  0E29                     	;# 
  1651  0E2A                     	;# 
  1652  0E2B                     	;# 
  1653  0E2C                     	;# 
  1654  0E2D                     	;# 
  1655  0E2E                     	;# 
  1656  0E2F                     	;# 
  1657  0E30                     	;# 
  1658  0E31                     	;# 
  1659  0E32                     	;# 
  1660  0E33                     	;# 
  1661  0E34                     	;# 
  1662  0E35                     	;# 
  1663  0E36                     	;# 
  1664  0E37                     	;# 
  1665  0E8F                     	;# 
  1666  0E90                     	;# 
  1667  0E91                     	;# 
  1668  0E92                     	;# 
  1669  0E93                     	;# 
  1670  0E94                     	;# 
  1671  0E95                     	;# 
  1672  0E96                     	;# 
  1673  0E97                     	;# 
  1674  0E9C                     	;# 
  1675  0E9D                     	;# 
  1676  0E9E                     	;# 
  1677  0EA1                     	;# 
  1678  0EA2                     	;# 
  1679  0EA3                     	;# 
  1680  0EA4                     	;# 
  1681  0EA5                     	;# 
  1682  0EA9                     	;# 
  1683  0EAA                     	;# 
  1684  0EAB                     	;# 
  1685  0EAC                     	;# 
  1686  0EB1                     	;# 
  1687  0EB2                     	;# 
  1688  0EB3                     	;# 
  1689  0EB8                     	;# 
  1690  0EB9                     	;# 
  1691  0EBA                     	;# 
  1692  0EBB                     	;# 
  1693  0EBC                     	;# 
  1694  0EBD                     	;# 
  1695  0EBE                     	;# 
  1696  0EC3                     	;# 
  1697  0EC5                     	;# 
  1698  0EC6                     	;# 
  1699  0EC7                     	;# 
  1700  0EC8                     	;# 
  1701  0EC9                     	;# 
  1702  0ECA                     	;# 
  1703  0ECB                     	;# 
  1704  0ECC                     	;# 
  1705  0F10                     	;# 
  1706  0F11                     	;# 
  1707  0F12                     	;# 
  1708  0F13                     	;# 
  1709  0F14                     	;# 
  1710  0F15                     	;# 
  1711  0F16                     	;# 
  1712  0F17                     	;# 
  1713  0F18                     	;# 
  1714  0F19                     	;# 
  1715  0F1A                     	;# 
  1716  0F1B                     	;# 
  1717  0F1C                     	;# 
  1718  0F1D                     	;# 
  1719  0F1E                     	;# 
  1720  0F1F                     	;# 
  1721  0F20                     	;# 
  1722  0F21                     	;# 
  1723  0F22                     	;# 
  1724  0F23                     	;# 
  1725  0F24                     	;# 
  1726  0F25                     	;# 
  1727  0F26                     	;# 
  1728  0F27                     	;# 
  1729  0F28                     	;# 
  1730  0F29                     	;# 
  1731  0F2A                     	;# 
  1732  0F2B                     	;# 
  1733  0F2C                     	;# 
  1734  0F2D                     	;# 
  1735  0F2E                     	;# 
  1736  0F2F                     	;# 
  1737  0F30                     	;# 
  1738  0F31                     	;# 
  1739  0F32                     	;# 
  1740  0F38                     	;# 
  1741  0F39                     	;# 
  1742  0F3A                     	;# 
  1743  0F3B                     	;# 
  1744  0F3C                     	;# 
  1745  0F3D                     	;# 
  1746  0F3E                     	;# 
  1747  0F3F                     	;# 
  1748  0F40                     	;# 
  1749  0F41                     	;# 
  1750  0F43                     	;# 
  1751  0F44                     	;# 
  1752  0F45                     	;# 
  1753  0F46                     	;# 
  1754  0F47                     	;# 
  1755  0F48                     	;# 
  1756  0F49                     	;# 
  1757  0F4A                     	;# 
  1758  0F4B                     	;# 
  1759  0F4C                     	;# 
  1760  0F4E                     	;# 
  1761  0F4F                     	;# 
  1762  0F50                     	;# 
  1763  0F51                     	;# 
  1764  0F52                     	;# 
  1765  0F53                     	;# 
  1766  0F54                     	;# 
  1767  0F55                     	;# 
  1768  0F56                     	;# 
  1769  0F57                     	;# 
  1770  0F59                     	;# 
  1771  0F5A                     	;# 
  1772  0F5B                     	;# 
  1773  0F5C                     	;# 
  1774  0F5D                     	;# 
  1775  0F61                     	;# 
  1776  0F62                     	;# 
  1777  0F64                     	;# 
  1778  0F65                     	;# 
  1779  0F66                     	;# 
  1780  0F67                     	;# 
  1781  0F68                     	;# 
  1782  0F69                     	;# 
  1783  0F6A                     	;# 
  1784  0F6B                     	;# 
  1785  0F6C                     	;# 
  1786  0F6D                     	;# 
  1787  0FE4                     	;# 
  1788  0FE5                     	;# 
  1789  0FE6                     	;# 
  1790  0FE7                     	;# 
  1791  0FE8                     	;# 
  1792  0FE9                     	;# 
  1793  0FEA                     	;# 
  1794  0FEB                     	;# 
  1795  0FED                     	;# 
  1796  0FEE                     	;# 
  1797  0FEF                     	;# 
  1798  0000                     	;# 
  1799  0001                     	;# 
  1800  0002                     	;# 
  1801  0003                     	;# 
  1802  0004                     	;# 
  1803  0005                     	;# 
  1804  0006                     	;# 
  1805  0007                     	;# 
  1806  0008                     	;# 
  1807  0009                     	;# 
  1808  000A                     	;# 
  1809  000B                     	;# 
  1810  000C                     	;# 
  1811  000D                     	;# 
  1812  000E                     	;# 
  1813  000F                     	;# 
  1814  0010                     	;# 
  1815  0011                     	;# 
  1816  0012                     	;# 
  1817  0013                     	;# 
  1818  0014                     	;# 
  1819  0015                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001C                     	;# 
  1826  001C                     	;# 
  1827  001D                     	;# 
  1828  001D                     	;# 
  1829  001E                     	;# 
  1830  001F                     	;# 
  1831  008C                     	;# 
  1832  008C                     	;# 
  1833  008D                     	;# 
  1834  008E                     	;# 
  1835  008E                     	;# 
  1836  008F                     	;# 
  1837  0090                     	;# 
  1838  0090                     	;# 
  1839  0091                     	;# 
  1840  0093                     	;# 
  1841  0094                     	;# 
  1842  0095                     	;# 
  1843  0096                     	;# 
  1844  0097                     	;# 
  1845  0098                     	;# 
  1846  0099                     	;# 
  1847  009A                     	;# 
  1848  009B                     	;# 
  1849  009C                     	;# 
  1850  009D                     	;# 
  1851  009E                     	;# 
  1852  010C                     	;# 
  1853  010D                     	;# 
  1854  010E                     	;# 
  1855  010E                     	;# 
  1856  010F                     	;# 
  1857  0110                     	;# 
  1858  0110                     	;# 
  1859  0111                     	;# 
  1860  0112                     	;# 
  1861  0112                     	;# 
  1862  0113                     	;# 
  1863  0114                     	;# 
  1864  0114                     	;# 
  1865  0115                     	;# 
  1866  0116                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  0119                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011A                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011B                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011C                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011D                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011E                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  011F                     	;# 
  1894  018C                     	;# 
  1895  018D                     	;# 
  1896  018E                     	;# 
  1897  018F                     	;# 
  1898  0190                     	;# 
  1899  0191                     	;# 
  1900  0192                     	;# 
  1901  0196                     	;# 
  1902  0197                     	;# 
  1903  0198                     	;# 
  1904  0199                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019C                     	;# 
  1908  020C                     	;# 
  1909  020C                     	;# 
  1910  020D                     	;# 
  1911  020E                     	;# 
  1912  020F                     	;# 
  1913  020F                     	;# 
  1914  0210                     	;# 
  1915  0210                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0214                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0216                     	;# 
  1925  0216                     	;# 
  1926  0217                     	;# 
  1927  0217                     	;# 
  1928  0218                     	;# 
  1929  0218                     	;# 
  1930  0219                     	;# 
  1931  021A                     	;# 
  1932  021B                     	;# 
  1933  021B                     	;# 
  1934  021C                     	;# 
  1935  021C                     	;# 
  1936  021D                     	;# 
  1937  021D                     	;# 
  1938  021E                     	;# 
  1939  021F                     	;# 
  1940  028C                     	;# 
  1941  028C                     	;# 
  1942  028D                     	;# 
  1943  028D                     	;# 
  1944  028E                     	;# 
  1945  028F                     	;# 
  1946  0290                     	;# 
  1947  0290                     	;# 
  1948  0291                     	;# 
  1949  0292                     	;# 
  1950  0292                     	;# 
  1951  0293                     	;# 
  1952  0293                     	;# 
  1953  0294                     	;# 
  1954  0295                     	;# 
  1955  0296                     	;# 
  1956  0296                     	;# 
  1957  0297                     	;# 
  1958  0298                     	;# 
  1959  0298                     	;# 
  1960  0299                     	;# 
  1961  0299                     	;# 
  1962  029A                     	;# 
  1963  029B                     	;# 
  1964  029C                     	;# 
  1965  029C                     	;# 
  1966  029D                     	;# 
  1967  030C                     	;# 
  1968  030C                     	;# 
  1969  030D                     	;# 
  1970  030E                     	;# 
  1971  030F                     	;# 
  1972  0310                     	;# 
  1973  0310                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0314                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  0318                     	;# 
  1984  0319                     	;# 
  1985  031A                     	;# 
  1986  031B                     	;# 
  1987  031C                     	;# 
  1988  031C                     	;# 
  1989  031D                     	;# 
  1990  031E                     	;# 
  1991  031F                     	;# 
  1992  038C                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0390                     	;# 
  1997  0390                     	;# 
  1998  0391                     	;# 
  1999  0392                     	;# 
  2000  040C                     	;# 
  2001  040D                     	;# 
  2002  040E                     	;# 
  2003  040F                     	;# 
  2004  0410                     	;# 
  2005  0411                     	;# 
  2006  0416                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  0418                     	;# 
  2011  0419                     	;# 
  2012  041A                     	;# 
  2013  041A                     	;# 
  2014  041B                     	;# 
  2015  041C                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  048C                     	;# 
  2021  048C                     	;# 
  2022  048D                     	;# 
  2023  048E                     	;# 
  2024  048F                     	;# 
  2025  048F                     	;# 
  2026  0490                     	;# 
  2027  0491                     	;# 
  2028  0492                     	;# 
  2029  0492                     	;# 
  2030  0493                     	;# 
  2031  0494                     	;# 
  2032  0495                     	;# 
  2033  0495                     	;# 
  2034  0496                     	;# 
  2035  0497                     	;# 
  2036  0498                     	;# 
  2037  0499                     	;# 
  2038  049A                     	;# 
  2039  049B                     	;# 
  2040  049C                     	;# 
  2041  049D                     	;# 
  2042  050C                     	;# 
  2043  050C                     	;# 
  2044  050D                     	;# 
  2045  050E                     	;# 
  2046  050F                     	;# 
  2047  050F                     	;# 
  2048  0510                     	;# 
  2049  0511                     	;# 
  2050  0512                     	;# 
  2051  0512                     	;# 
  2052  0513                     	;# 
  2053  0514                     	;# 
  2054  0515                     	;# 
  2055  0515                     	;# 
  2056  0516                     	;# 
  2057  0517                     	;# 
  2058  0518                     	;# 
  2059  0519                     	;# 
  2060  051A                     	;# 
  2061  051B                     	;# 
  2062  051C                     	;# 
  2063  051D                     	;# 
  2064  058C                     	;# 
  2065  058C                     	;# 
  2066  058D                     	;# 
  2067  058E                     	;# 
  2068  058F                     	;# 
  2069  058F                     	;# 
  2070  0590                     	;# 
  2071  0591                     	;# 
  2072  0592                     	;# 
  2073  0593                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060E                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  0616                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  061A                     	;# 
  2088  061B                     	;# 
  2089  061C                     	;# 
  2090  061D                     	;# 
  2091  061E                     	;# 
  2092  068C                     	;# 
  2093  068D                     	;# 
  2094  068E                     	;# 
  2095  068F                     	;# 
  2096  0690                     	;# 
  2097  0691                     	;# 
  2098  0692                     	;# 
  2099  0693                     	;# 
  2100  0694                     	;# 
  2101  070C                     	;# 
  2102  070D                     	;# 
  2103  070E                     	;# 
  2104  070F                     	;# 
  2105  0710                     	;# 
  2106  0711                     	;# 
  2107  0712                     	;# 
  2108  0713                     	;# 
  2109  0714                     	;# 
  2110  0716                     	;# 
  2111  0717                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071B                     	;# 
  2116  071C                     	;# 
  2117  071D                     	;# 
  2118  071E                     	;# 
  2119  0796                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  079B                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080F                     	;# 
  2129  0810                     	;# 
  2130  0811                     	;# 
  2131  0812                     	;# 
  2132  0813                     	;# 
  2133  0814                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081D                     	;# 
  2138  081E                     	;# 
  2139  081F                     	;# 
  2140  088C                     	;# 
  2141  088D                     	;# 
  2142  088E                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0895                     	;# 
  2149  0896                     	;# 
  2150  0897                     	;# 
  2151  0898                     	;# 
  2152  0899                     	;# 
  2153  089A                     	;# 
  2154  089B                     	;# 
  2155  090C                     	;# 
  2156  090E                     	;# 
  2157  090F                     	;# 
  2158  091F                     	;# 
  2159  091F                     	;# 
  2160  098F                     	;# 
  2161  098F                     	;# 
  2162  0990                     	;# 
  2163  0991                     	;# 
  2164  0992                     	;# 
  2165  0993                     	;# 
  2166  0994                     	;# 
  2167  0995                     	;# 
  2168  0996                     	;# 
  2169  0997                     	;# 
  2170  0E0F                     	;# 
  2171  0E10                     	;# 
  2172  0E11                     	;# 
  2173  0E12                     	;# 
  2174  0E13                     	;# 
  2175  0E14                     	;# 
  2176  0E15                     	;# 
  2177  0E16                     	;# 
  2178  0E17                     	;# 
  2179  0E18                     	;# 
  2180  0E19                     	;# 
  2181  0E1A                     	;# 
  2182  0E1B                     	;# 
  2183  0E1C                     	;# 
  2184  0E1D                     	;# 
  2185  0E1E                     	;# 
  2186  0E1F                     	;# 
  2187  0E20                     	;# 
  2188  0E21                     	;# 
  2189  0E22                     	;# 
  2190  0E23                     	;# 
  2191  0E24                     	;# 
  2192  0E25                     	;# 
  2193  0E26                     	;# 
  2194  0E27                     	;# 
  2195  0E28                     	;# 
  2196  0E29                     	;# 
  2197  0E2A                     	;# 
  2198  0E2B                     	;# 
  2199  0E2C                     	;# 
  2200  0E2D                     	;# 
  2201  0E2E                     	;# 
  2202  0E2F                     	;# 
  2203  0E30                     	;# 
  2204  0E31                     	;# 
  2205  0E32                     	;# 
  2206  0E33                     	;# 
  2207  0E34                     	;# 
  2208  0E35                     	;# 
  2209  0E36                     	;# 
  2210  0E37                     	;# 
  2211  0E8F                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E93                     	;# 
  2216  0E94                     	;# 
  2217  0E95                     	;# 
  2218  0E96                     	;# 
  2219  0E97                     	;# 
  2220  0E9C                     	;# 
  2221  0E9D                     	;# 
  2222  0E9E                     	;# 
  2223  0EA1                     	;# 
  2224  0EA2                     	;# 
  2225  0EA3                     	;# 
  2226  0EA4                     	;# 
  2227  0EA5                     	;# 
  2228  0EA9                     	;# 
  2229  0EAA                     	;# 
  2230  0EAB                     	;# 
  2231  0EAC                     	;# 
  2232  0EB1                     	;# 
  2233  0EB2                     	;# 
  2234  0EB3                     	;# 
  2235  0EB8                     	;# 
  2236  0EB9                     	;# 
  2237  0EBA                     	;# 
  2238  0EBB                     	;# 
  2239  0EBC                     	;# 
  2240  0EBD                     	;# 
  2241  0EBE                     	;# 
  2242  0EC3                     	;# 
  2243  0EC5                     	;# 
  2244  0EC6                     	;# 
  2245  0EC7                     	;# 
  2246  0EC8                     	;# 
  2247  0EC9                     	;# 
  2248  0ECA                     	;# 
  2249  0ECB                     	;# 
  2250  0ECC                     	;# 
  2251  0F10                     	;# 
  2252  0F11                     	;# 
  2253  0F12                     	;# 
  2254  0F13                     	;# 
  2255  0F14                     	;# 
  2256  0F15                     	;# 
  2257  0F16                     	;# 
  2258  0F17                     	;# 
  2259  0F18                     	;# 
  2260  0F19                     	;# 
  2261  0F1A                     	;# 
  2262  0F1B                     	;# 
  2263  0F1C                     	;# 
  2264  0F1D                     	;# 
  2265  0F1E                     	;# 
  2266  0F1F                     	;# 
  2267  0F20                     	;# 
  2268  0F21                     	;# 
  2269  0F22                     	;# 
  2270  0F23                     	;# 
  2271  0F24                     	;# 
  2272  0F25                     	;# 
  2273  0F26                     	;# 
  2274  0F27                     	;# 
  2275  0F28                     	;# 
  2276  0F29                     	;# 
  2277  0F2A                     	;# 
  2278  0F2B                     	;# 
  2279  0F2C                     	;# 
  2280  0F2D                     	;# 
  2281  0F2E                     	;# 
  2282  0F2F                     	;# 
  2283  0F30                     	;# 
  2284  0F31                     	;# 
  2285  0F32                     	;# 
  2286  0F38                     	;# 
  2287  0F39                     	;# 
  2288  0F3A                     	;# 
  2289  0F3B                     	;# 
  2290  0F3C                     	;# 
  2291  0F3D                     	;# 
  2292  0F3E                     	;# 
  2293  0F3F                     	;# 
  2294  0F40                     	;# 
  2295  0F41                     	;# 
  2296  0F43                     	;# 
  2297  0F44                     	;# 
  2298  0F45                     	;# 
  2299  0F46                     	;# 
  2300  0F47                     	;# 
  2301  0F48                     	;# 
  2302  0F49                     	;# 
  2303  0F4A                     	;# 
  2304  0F4B                     	;# 
  2305  0F4C                     	;# 
  2306  0F4E                     	;# 
  2307  0F4F                     	;# 
  2308  0F50                     	;# 
  2309  0F51                     	;# 
  2310  0F52                     	;# 
  2311  0F53                     	;# 
  2312  0F54                     	;# 
  2313  0F55                     	;# 
  2314  0F56                     	;# 
  2315  0F57                     	;# 
  2316  0F59                     	;# 
  2317  0F5A                     	;# 
  2318  0F5B                     	;# 
  2319  0F5C                     	;# 
  2320  0F5D                     	;# 
  2321  0F61                     	;# 
  2322  0F62                     	;# 
  2323  0F64                     	;# 
  2324  0F65                     	;# 
  2325  0F66                     	;# 
  2326  0F67                     	;# 
  2327  0F68                     	;# 
  2328  0F69                     	;# 
  2329  0F6A                     	;# 
  2330  0F6B                     	;# 
  2331  0F6C                     	;# 
  2332  0F6D                     	;# 
  2333  0FE4                     	;# 
  2334  0FE5                     	;# 
  2335  0FE6                     	;# 
  2336  0FE7                     	;# 
  2337  0FE8                     	;# 
  2338  0FE9                     	;# 
  2339  0FEA                     	;# 
  2340  0FEB                     	;# 
  2341  0FED                     	;# 
  2342  0FEE                     	;# 
  2343  0FEF                     	;# 
  2344  0000                     	;# 
  2345  0001                     	;# 
  2346  0002                     	;# 
  2347  0003                     	;# 
  2348  0004                     	;# 
  2349  0005                     	;# 
  2350  0006                     	;# 
  2351  0007                     	;# 
  2352  0008                     	;# 
  2353  0009                     	;# 
  2354  000A                     	;# 
  2355  000B                     	;# 
  2356  000C                     	;# 
  2357  000D                     	;# 
  2358  000E                     	;# 
  2359  000F                     	;# 
  2360  0010                     	;# 
  2361  0011                     	;# 
  2362  0012                     	;# 
  2363  0013                     	;# 
  2364  0014                     	;# 
  2365  0015                     	;# 
  2366  0016                     	;# 
  2367  0017                     	;# 
  2368  0018                     	;# 
  2369  0019                     	;# 
  2370  001A                     	;# 
  2371  001C                     	;# 
  2372  001C                     	;# 
  2373  001D                     	;# 
  2374  001D                     	;# 
  2375  001E                     	;# 
  2376  001F                     	;# 
  2377  008C                     	;# 
  2378  008C                     	;# 
  2379  008D                     	;# 
  2380  008E                     	;# 
  2381  008E                     	;# 
  2382  008F                     	;# 
  2383  0090                     	;# 
  2384  0090                     	;# 
  2385  0091                     	;# 
  2386  0093                     	;# 
  2387  0094                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0098                     	;# 
  2392  0099                     	;# 
  2393  009A                     	;# 
  2394  009B                     	;# 
  2395  009C                     	;# 
  2396  009D                     	;# 
  2397  009E                     	;# 
  2398  010C                     	;# 
  2399  010D                     	;# 
  2400  010E                     	;# 
  2401  010E                     	;# 
  2402  010F                     	;# 
  2403  0110                     	;# 
  2404  0110                     	;# 
  2405  0111                     	;# 
  2406  0112                     	;# 
  2407  0112                     	;# 
  2408  0113                     	;# 
  2409  0114                     	;# 
  2410  0114                     	;# 
  2411  0115                     	;# 
  2412  0116                     	;# 
  2413  0116                     	;# 
  2414  0117                     	;# 
  2415  0119                     	;# 
  2416  0119                     	;# 
  2417  0119                     	;# 
  2418  011A                     	;# 
  2419  011A                     	;# 
  2420  011A                     	;# 
  2421  011B                     	;# 
  2422  011B                     	;# 
  2423  011B                     	;# 
  2424  011B                     	;# 
  2425  011B                     	;# 
  2426  011C                     	;# 
  2427  011C                     	;# 
  2428  011C                     	;# 
  2429  011D                     	;# 
  2430  011D                     	;# 
  2431  011D                     	;# 
  2432  011E                     	;# 
  2433  011E                     	;# 
  2434  011E                     	;# 
  2435  011F                     	;# 
  2436  011F                     	;# 
  2437  011F                     	;# 
  2438  011F                     	;# 
  2439  011F                     	;# 
  2440  018C                     	;# 
  2441  018D                     	;# 
  2442  018E                     	;# 
  2443  018F                     	;# 
  2444  0190                     	;# 
  2445  0191                     	;# 
  2446  0192                     	;# 
  2447  0196                     	;# 
  2448  0197                     	;# 
  2449  0198                     	;# 
  2450  0199                     	;# 
  2451  019A                     	;# 
  2452  019B                     	;# 
  2453  019C                     	;# 
  2454  020C                     	;# 
  2455  020C                     	;# 
  2456  020D                     	;# 
  2457  020E                     	;# 
  2458  020F                     	;# 
  2459  020F                     	;# 
  2460  0210                     	;# 
  2461  0210                     	;# 
  2462  0211                     	;# 
  2463  0211                     	;# 
  2464  0212                     	;# 
  2465  0212                     	;# 
  2466  0213                     	;# 
  2467  0214                     	;# 
  2468  0215                     	;# 
  2469  0215                     	;# 
  2470  0216                     	;# 
  2471  0216                     	;# 
  2472  0217                     	;# 
  2473  0217                     	;# 
  2474  0218                     	;# 
  2475  0218                     	;# 
  2476  0219                     	;# 
  2477  021A                     	;# 
  2478  021B                     	;# 
  2479  021B                     	;# 
  2480  021C                     	;# 
  2481  021C                     	;# 
  2482  021D                     	;# 
  2483  021D                     	;# 
  2484  021E                     	;# 
  2485  021F                     	;# 
  2486  028C                     	;# 
  2487  028C                     	;# 
  2488  028D                     	;# 
  2489  028D                     	;# 
  2490  028E                     	;# 
  2491  028F                     	;# 
  2492  0290                     	;# 
  2493  0290                     	;# 
  2494  0291                     	;# 
  2495  0292                     	;# 
  2496  0292                     	;# 
  2497  0293                     	;# 
  2498  0293                     	;# 
  2499  0294                     	;# 
  2500  0295                     	;# 
  2501  0296                     	;# 
  2502  0296                     	;# 
  2503  0297                     	;# 
  2504  0298                     	;# 
  2505  0298                     	;# 
  2506  0299                     	;# 
  2507  0299                     	;# 
  2508  029A                     	;# 
  2509  029B                     	;# 
  2510  029C                     	;# 
  2511  029C                     	;# 
  2512  029D                     	;# 
  2513  030C                     	;# 
  2514  030C                     	;# 
  2515  030D                     	;# 
  2516  030E                     	;# 
  2517  030F                     	;# 
  2518  0310                     	;# 
  2519  0310                     	;# 
  2520  0311                     	;# 
  2521  0312                     	;# 
  2522  0313                     	;# 
  2523  0314                     	;# 
  2524  0314                     	;# 
  2525  0315                     	;# 
  2526  0316                     	;# 
  2527  0317                     	;# 
  2528  0318                     	;# 
  2529  0318                     	;# 
  2530  0319                     	;# 
  2531  031A                     	;# 
  2532  031B                     	;# 
  2533  031C                     	;# 
  2534  031C                     	;# 
  2535  031D                     	;# 
  2536  031E                     	;# 
  2537  031F                     	;# 
  2538  038C                     	;# 
  2539  038C                     	;# 
  2540  038D                     	;# 
  2541  038E                     	;# 
  2542  0390                     	;# 
  2543  0390                     	;# 
  2544  0391                     	;# 
  2545  0392                     	;# 
  2546  040C                     	;# 
  2547  040D                     	;# 
  2548  040E                     	;# 
  2549  040F                     	;# 
  2550  0410                     	;# 
  2551  0411                     	;# 
  2552  0416                     	;# 
  2553  0416                     	;# 
  2554  0417                     	;# 
  2555  0418                     	;# 
  2556  0418                     	;# 
  2557  0419                     	;# 
  2558  041A                     	;# 
  2559  041A                     	;# 
  2560  041B                     	;# 
  2561  041C                     	;# 
  2562  041C                     	;# 
  2563  041D                     	;# 
  2564  041E                     	;# 
  2565  041F                     	;# 
  2566  048C                     	;# 
  2567  048C                     	;# 
  2568  048D                     	;# 
  2569  048E                     	;# 
  2570  048F                     	;# 
  2571  048F                     	;# 
  2572  0490                     	;# 
  2573  0491                     	;# 
  2574  0492                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0494                     	;# 
  2578  0495                     	;# 
  2579  0495                     	;# 
  2580  0496                     	;# 
  2581  0497                     	;# 
  2582  0498                     	;# 
  2583  0499                     	;# 
  2584  049A                     	;# 
  2585  049B                     	;# 
  2586  049C                     	;# 
  2587  049D                     	;# 
  2588  050C                     	;# 
  2589  050C                     	;# 
  2590  050D                     	;# 
  2591  050E                     	;# 
  2592  050F                     	;# 
  2593  050F                     	;# 
  2594  0510                     	;# 
  2595  0511                     	;# 
  2596  0512                     	;# 
  2597  0512                     	;# 
  2598  0513                     	;# 
  2599  0514                     	;# 
  2600  0515                     	;# 
  2601  0515                     	;# 
  2602  0516                     	;# 
  2603  0517                     	;# 
  2604  0518                     	;# 
  2605  0519                     	;# 
  2606  051A                     	;# 
  2607  051B                     	;# 
  2608  051C                     	;# 
  2609  051D                     	;# 
  2610  058C                     	;# 
  2611  058C                     	;# 
  2612  058D                     	;# 
  2613  058E                     	;# 
  2614  058F                     	;# 
  2615  058F                     	;# 
  2616  0590                     	;# 
  2617  0591                     	;# 
  2618  0592                     	;# 
  2619  0593                     	;# 
  2620  060C                     	;# 
  2621  060D                     	;# 
  2622  060E                     	;# 
  2623  060F                     	;# 
  2624  0610                     	;# 
  2625  0611                     	;# 
  2626  0612                     	;# 
  2627  0613                     	;# 
  2628  0614                     	;# 
  2629  0616                     	;# 
  2630  0617                     	;# 
  2631  0618                     	;# 
  2632  0619                     	;# 
  2633  061A                     	;# 
  2634  061B                     	;# 
  2635  061C                     	;# 
  2636  061D                     	;# 
  2637  061E                     	;# 
  2638  068C                     	;# 
  2639  068D                     	;# 
  2640  068E                     	;# 
  2641  068F                     	;# 
  2642  0690                     	;# 
  2643  0691                     	;# 
  2644  0692                     	;# 
  2645  0693                     	;# 
  2646  0694                     	;# 
  2647  070C                     	;# 
  2648  070D                     	;# 
  2649  070E                     	;# 
  2650  070F                     	;# 
  2651  0710                     	;# 
  2652  0711                     	;# 
  2653  0712                     	;# 
  2654  0713                     	;# 
  2655  0714                     	;# 
  2656  0716                     	;# 
  2657  0717                     	;# 
  2658  0718                     	;# 
  2659  0719                     	;# 
  2660  071A                     	;# 
  2661  071B                     	;# 
  2662  071C                     	;# 
  2663  071D                     	;# 
  2664  071E                     	;# 
  2665  0796                     	;# 
  2666  0797                     	;# 
  2667  0798                     	;# 
  2668  0799                     	;# 
  2669  079A                     	;# 
  2670  079B                     	;# 
  2671  080C                     	;# 
  2672  080D                     	;# 
  2673  080E                     	;# 
  2674  080F                     	;# 
  2675  0810                     	;# 
  2676  0811                     	;# 
  2677  0812                     	;# 
  2678  0813                     	;# 
  2679  0814                     	;# 
  2680  081A                     	;# 
  2681  081B                     	;# 
  2682  081C                     	;# 
  2683  081D                     	;# 
  2684  081E                     	;# 
  2685  081F                     	;# 
  2686  088C                     	;# 
  2687  088D                     	;# 
  2688  088E                     	;# 
  2689  088F                     	;# 
  2690  0890                     	;# 
  2691  0891                     	;# 
  2692  0892                     	;# 
  2693  0893                     	;# 
  2694  0895                     	;# 
  2695  0896                     	;# 
  2696  0897                     	;# 
  2697  0898                     	;# 
  2698  0899                     	;# 
  2699  089A                     	;# 
  2700  089B                     	;# 
  2701  090C                     	;# 
  2702  090E                     	;# 
  2703  090F                     	;# 
  2704  091F                     	;# 
  2705  091F                     	;# 
  2706  098F                     	;# 
  2707  098F                     	;# 
  2708  0990                     	;# 
  2709  0991                     	;# 
  2710  0992                     	;# 
  2711  0993                     	;# 
  2712  0994                     	;# 
  2713  0995                     	;# 
  2714  0996                     	;# 
  2715  0997                     	;# 
  2716  0E0F                     	;# 
  2717  0E10                     	;# 
  2718  0E11                     	;# 
  2719  0E12                     	;# 
  2720  0E13                     	;# 
  2721  0E14                     	;# 
  2722  0E15                     	;# 
  2723  0E16                     	;# 
  2724  0E17                     	;# 
  2725  0E18                     	;# 
  2726  0E19                     	;# 
  2727  0E1A                     	;# 
  2728  0E1B                     	;# 
  2729  0E1C                     	;# 
  2730  0E1D                     	;# 
  2731  0E1E                     	;# 
  2732  0E1F                     	;# 
  2733  0E20                     	;# 
  2734  0E21                     	;# 
  2735  0E22                     	;# 
  2736  0E23                     	;# 
  2737  0E24                     	;# 
  2738  0E25                     	;# 
  2739  0E26                     	;# 
  2740  0E27                     	;# 
  2741  0E28                     	;# 
  2742  0E29                     	;# 
  2743  0E2A                     	;# 
  2744  0E2B                     	;# 
  2745  0E2C                     	;# 
  2746  0E2D                     	;# 
  2747  0E2E                     	;# 
  2748  0E2F                     	;# 
  2749  0E30                     	;# 
  2750  0E31                     	;# 
  2751  0E32                     	;# 
  2752  0E33                     	;# 
  2753  0E34                     	;# 
  2754  0E35                     	;# 
  2755  0E36                     	;# 
  2756  0E37                     	;# 
  2757  0E8F                     	;# 
  2758  0E90                     	;# 
  2759  0E91                     	;# 
  2760  0E92                     	;# 
  2761  0E93                     	;# 
  2762  0E94                     	;# 
  2763  0E95                     	;# 
  2764  0E96                     	;# 
  2765  0E97                     	;# 
  2766  0E9C                     	;# 
  2767  0E9D                     	;# 
  2768  0E9E                     	;# 
  2769  0EA1                     	;# 
  2770  0EA2                     	;# 
  2771  0EA3                     	;# 
  2772  0EA4                     	;# 
  2773  0EA5                     	;# 
  2774  0EA9                     	;# 
  2775  0EAA                     	;# 
  2776  0EAB                     	;# 
  2777  0EAC                     	;# 
  2778  0EB1                     	;# 
  2779  0EB2                     	;# 
  2780  0EB3                     	;# 
  2781  0EB8                     	;# 
  2782  0EB9                     	;# 
  2783  0EBA                     	;# 
  2784  0EBB                     	;# 
  2785  0EBC                     	;# 
  2786  0EBD                     	;# 
  2787  0EBE                     	;# 
  2788  0EC3                     	;# 
  2789  0EC5                     	;# 
  2790  0EC6                     	;# 
  2791  0EC7                     	;# 
  2792  0EC8                     	;# 
  2793  0EC9                     	;# 
  2794  0ECA                     	;# 
  2795  0ECB                     	;# 
  2796  0ECC                     	;# 
  2797  0F10                     	;# 
  2798  0F11                     	;# 
  2799  0F12                     	;# 
  2800  0F13                     	;# 
  2801  0F14                     	;# 
  2802  0F15                     	;# 
  2803  0F16                     	;# 
  2804  0F17                     	;# 
  2805  0F18                     	;# 
  2806  0F19                     	;# 
  2807  0F1A                     	;# 
  2808  0F1B                     	;# 
  2809  0F1C                     	;# 
  2810  0F1D                     	;# 
  2811  0F1E                     	;# 
  2812  0F1F                     	;# 
  2813  0F20                     	;# 
  2814  0F21                     	;# 
  2815  0F22                     	;# 
  2816  0F23                     	;# 
  2817  0F24                     	;# 
  2818  0F25                     	;# 
  2819  0F26                     	;# 
  2820  0F27                     	;# 
  2821  0F28                     	;# 
  2822  0F29                     	;# 
  2823  0F2A                     	;# 
  2824  0F2B                     	;# 
  2825  0F2C                     	;# 
  2826  0F2D                     	;# 
  2827  0F2E                     	;# 
  2828  0F2F                     	;# 
  2829  0F30                     	;# 
  2830  0F31                     	;# 
  2831  0F32                     	;# 
  2832  0F38                     	;# 
  2833  0F39                     	;# 
  2834  0F3A                     	;# 
  2835  0F3B                     	;# 
  2836  0F3C                     	;# 
  2837  0F3D                     	;# 
  2838  0F3E                     	;# 
  2839  0F3F                     	;# 
  2840  0F40                     	;# 
  2841  0F41                     	;# 
  2842  0F43                     	;# 
  2843  0F44                     	;# 
  2844  0F45                     	;# 
  2845  0F46                     	;# 
  2846  0F47                     	;# 
  2847  0F48                     	;# 
  2848  0F49                     	;# 
  2849  0F4A                     	;# 
  2850  0F4B                     	;# 
  2851  0F4C                     	;# 
  2852  0F4E                     	;# 
  2853  0F4F                     	;# 
  2854  0F50                     	;# 
  2855  0F51                     	;# 
  2856  0F52                     	;# 
  2857  0F53                     	;# 
  2858  0F54                     	;# 
  2859  0F55                     	;# 
  2860  0F56                     	;# 
  2861  0F57                     	;# 
  2862  0F59                     	;# 
  2863  0F5A                     	;# 
  2864  0F5B                     	;# 
  2865  0F5C                     	;# 
  2866  0F5D                     	;# 
  2867  0F61                     	;# 
  2868  0F62                     	;# 
  2869  0F64                     	;# 
  2870  0F65                     	;# 
  2871  0F66                     	;# 
  2872  0F67                     	;# 
  2873  0F68                     	;# 
  2874  0F69                     	;# 
  2875  0F6A                     	;# 
  2876  0F6B                     	;# 
  2877  0F6C                     	;# 
  2878  0F6D                     	;# 
  2879  0FE4                     	;# 
  2880  0FE5                     	;# 
  2881  0FE6                     	;# 
  2882  0FE7                     	;# 
  2883  0FE8                     	;# 
  2884  0FE9                     	;# 
  2885  0FEA                     	;# 
  2886  0FEB                     	;# 
  2887  0FED                     	;# 
  2888  0FEE                     	;# 
  2889  0FEF                     	;# 
  2890  0000                     	;# 
  2891  0001                     	;# 
  2892  0002                     	;# 
  2893  0003                     	;# 
  2894  0004                     	;# 
  2895  0005                     	;# 
  2896  0006                     	;# 
  2897  0007                     	;# 
  2898  0008                     	;# 
  2899  0009                     	;# 
  2900  000A                     	;# 
  2901  000B                     	;# 
  2902  000C                     	;# 
  2903  000D                     	;# 
  2904  000E                     	;# 
  2905  000F                     	;# 
  2906  0010                     	;# 
  2907  0011                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0014                     	;# 
  2911  0015                     	;# 
  2912  0016                     	;# 
  2913  0017                     	;# 
  2914  0018                     	;# 
  2915  0019                     	;# 
  2916  001A                     	;# 
  2917  001C                     	;# 
  2918  001C                     	;# 
  2919  001D                     	;# 
  2920  001D                     	;# 
  2921  001E                     	;# 
  2922  001F                     	;# 
  2923  008C                     	;# 
  2924  008C                     	;# 
  2925  008D                     	;# 
  2926  008E                     	;# 
  2927  008E                     	;# 
  2928  008F                     	;# 
  2929  0090                     	;# 
  2930  0090                     	;# 
  2931  0091                     	;# 
  2932  0093                     	;# 
  2933  0094                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009C                     	;# 
  2942  009D                     	;# 
  2943  009E                     	;# 
  2944  010C                     	;# 
  2945  010D                     	;# 
  2946  010E                     	;# 
  2947  010E                     	;# 
  2948  010F                     	;# 
  2949  0110                     	;# 
  2950  0110                     	;# 
  2951  0111                     	;# 
  2952  0112                     	;# 
  2953  0112                     	;# 
  2954  0113                     	;# 
  2955  0114                     	;# 
  2956  0114                     	;# 
  2957  0115                     	;# 
  2958  0116                     	;# 
  2959  0116                     	;# 
  2960  0117                     	;# 
  2961  0119                     	;# 
  2962  0119                     	;# 
  2963  0119                     	;# 
  2964  011A                     	;# 
  2965  011A                     	;# 
  2966  011A                     	;# 
  2967  011B                     	;# 
  2968  011B                     	;# 
  2969  011B                     	;# 
  2970  011B                     	;# 
  2971  011B                     	;# 
  2972  011C                     	;# 
  2973  011C                     	;# 
  2974  011C                     	;# 
  2975  011D                     	;# 
  2976  011D                     	;# 
  2977  011D                     	;# 
  2978  011E                     	;# 
  2979  011E                     	;# 
  2980  011E                     	;# 
  2981  011F                     	;# 
  2982  011F                     	;# 
  2983  011F                     	;# 
  2984  011F                     	;# 
  2985  011F                     	;# 
  2986  018C                     	;# 
  2987  018D                     	;# 
  2988  018E                     	;# 
  2989  018F                     	;# 
  2990  0190                     	;# 
  2991  0191                     	;# 
  2992  0192                     	;# 
  2993  0196                     	;# 
  2994  0197                     	;# 
  2995  0198                     	;# 
  2996  0199                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019C                     	;# 
  3000  020C                     	;# 
  3001  020C                     	;# 
  3002  020D                     	;# 
  3003  020E                     	;# 
  3004  020F                     	;# 
  3005  020F                     	;# 
  3006  0210                     	;# 
  3007  0210                     	;# 
  3008  0211                     	;# 
  3009  0211                     	;# 
  3010  0212                     	;# 
  3011  0212                     	;# 
  3012  0213                     	;# 
  3013  0214                     	;# 
  3014  0215                     	;# 
  3015  0215                     	;# 
  3016  0216                     	;# 
  3017  0216                     	;# 
  3018  0217                     	;# 
  3019  0217                     	;# 
  3020  0218                     	;# 
  3021  0218                     	;# 
  3022  0219                     	;# 
  3023  021A                     	;# 
  3024  021B                     	;# 
  3025  021B                     	;# 
  3026  021C                     	;# 
  3027  021C                     	;# 
  3028  021D                     	;# 
  3029  021D                     	;# 
  3030  021E                     	;# 
  3031  021F                     	;# 
  3032  028C                     	;# 
  3033  028C                     	;# 
  3034  028D                     	;# 
  3035  028D                     	;# 
  3036  028E                     	;# 
  3037  028F                     	;# 
  3038  0290                     	;# 
  3039  0290                     	;# 
  3040  0291                     	;# 
  3041  0292                     	;# 
  3042  0292                     	;# 
  3043  0293                     	;# 
  3044  0293                     	;# 
  3045  0294                     	;# 
  3046  0295                     	;# 
  3047  0296                     	;# 
  3048  0296                     	;# 
  3049  0297                     	;# 
  3050  0298                     	;# 
  3051  0298                     	;# 
  3052  0299                     	;# 
  3053  0299                     	;# 
  3054  029A                     	;# 
  3055  029B                     	;# 
  3056  029C                     	;# 
  3057  029C                     	;# 
  3058  029D                     	;# 
  3059  030C                     	;# 
  3060  030C                     	;# 
  3061  030D                     	;# 
  3062  030E                     	;# 
  3063  030F                     	;# 
  3064  0310                     	;# 
  3065  0310                     	;# 
  3066  0311                     	;# 
  3067  0312                     	;# 
  3068  0313                     	;# 
  3069  0314                     	;# 
  3070  0314                     	;# 
  3071  0315                     	;# 
  3072  0316                     	;# 
  3073  0317                     	;# 
  3074  0318                     	;# 
  3075  0318                     	;# 
  3076  0319                     	;# 
  3077  031A                     	;# 
  3078  031B                     	;# 
  3079  031C                     	;# 
  3080  031C                     	;# 
  3081  031D                     	;# 
  3082  031E                     	;# 
  3083  031F                     	;# 
  3084  038C                     	;# 
  3085  038C                     	;# 
  3086  038D                     	;# 
  3087  038E                     	;# 
  3088  0390                     	;# 
  3089  0390                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  040C                     	;# 
  3093  040D                     	;# 
  3094  040E                     	;# 
  3095  040F                     	;# 
  3096  0410                     	;# 
  3097  0411                     	;# 
  3098  0416                     	;# 
  3099  0416                     	;# 
  3100  0417                     	;# 
  3101  0418                     	;# 
  3102  0418                     	;# 
  3103  0419                     	;# 
  3104  041A                     	;# 
  3105  041A                     	;# 
  3106  041B                     	;# 
  3107  041C                     	;# 
  3108  041C                     	;# 
  3109  041D                     	;# 
  3110  041E                     	;# 
  3111  041F                     	;# 
  3112  048C                     	;# 
  3113  048C                     	;# 
  3114  048D                     	;# 
  3115  048E                     	;# 
  3116  048F                     	;# 
  3117  048F                     	;# 
  3118  0490                     	;# 
  3119  0491                     	;# 
  3120  0492                     	;# 
  3121  0492                     	;# 
  3122  0493                     	;# 
  3123  0494                     	;# 
  3124  0495                     	;# 
  3125  0495                     	;# 
  3126  0496                     	;# 
  3127  0497                     	;# 
  3128  0498                     	;# 
  3129  0499                     	;# 
  3130  049A                     	;# 
  3131  049B                     	;# 
  3132  049C                     	;# 
  3133  049D                     	;# 
  3134  050C                     	;# 
  3135  050C                     	;# 
  3136  050D                     	;# 
  3137  050E                     	;# 
  3138  050F                     	;# 
  3139  050F                     	;# 
  3140  0510                     	;# 
  3141  0511                     	;# 
  3142  0512                     	;# 
  3143  0512                     	;# 
  3144  0513                     	;# 
  3145  0514                     	;# 
  3146  0515                     	;# 
  3147  0515                     	;# 
  3148  0516                     	;# 
  3149  0517                     	;# 
  3150  0518                     	;# 
  3151  0519                     	;# 
  3152  051A                     	;# 
  3153  051B                     	;# 
  3154  051C                     	;# 
  3155  051D                     	;# 
  3156  058C                     	;# 
  3157  058C                     	;# 
  3158  058D                     	;# 
  3159  058E                     	;# 
  3160  058F                     	;# 
  3161  058F                     	;# 
  3162  0590                     	;# 
  3163  0591                     	;# 
  3164  0592                     	;# 
  3165  0593                     	;# 
  3166  060C                     	;# 
  3167  060D                     	;# 
  3168  060E                     	;# 
  3169  060F                     	;# 
  3170  0610                     	;# 
  3171  0611                     	;# 
  3172  0612                     	;# 
  3173  0613                     	;# 
  3174  0614                     	;# 
  3175  0616                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  061A                     	;# 
  3180  061B                     	;# 
  3181  061C                     	;# 
  3182  061D                     	;# 
  3183  061E                     	;# 
  3184  068C                     	;# 
  3185  068D                     	;# 
  3186  068E                     	;# 
  3187  068F                     	;# 
  3188  0690                     	;# 
  3189  0691                     	;# 
  3190  0692                     	;# 
  3191  0693                     	;# 
  3192  0694                     	;# 
  3193  070C                     	;# 
  3194  070D                     	;# 
  3195  070E                     	;# 
  3196  070F                     	;# 
  3197  0710                     	;# 
  3198  0711                     	;# 
  3199  0712                     	;# 
  3200  0713                     	;# 
  3201  0714                     	;# 
  3202  0716                     	;# 
  3203  0717                     	;# 
  3204  0718                     	;# 
  3205  0719                     	;# 
  3206  071A                     	;# 
  3207  071B                     	;# 
  3208  071C                     	;# 
  3209  071D                     	;# 
  3210  071E                     	;# 
  3211  0796                     	;# 
  3212  0797                     	;# 
  3213  0798                     	;# 
  3214  0799                     	;# 
  3215  079A                     	;# 
  3216  079B                     	;# 
  3217  080C                     	;# 
  3218  080D                     	;# 
  3219  080E                     	;# 
  3220  080F                     	;# 
  3221  0810                     	;# 
  3222  0811                     	;# 
  3223  0812                     	;# 
  3224  0813                     	;# 
  3225  0814                     	;# 
  3226  081A                     	;# 
  3227  081B                     	;# 
  3228  081C                     	;# 
  3229  081D                     	;# 
  3230  081E                     	;# 
  3231  081F                     	;# 
  3232  088C                     	;# 
  3233  088D                     	;# 
  3234  088E                     	;# 
  3235  088F                     	;# 
  3236  0890                     	;# 
  3237  0891                     	;# 
  3238  0892                     	;# 
  3239  0893                     	;# 
  3240  0895                     	;# 
  3241  0896                     	;# 
  3242  0897                     	;# 
  3243  0898                     	;# 
  3244  0899                     	;# 
  3245  089A                     	;# 
  3246  089B                     	;# 
  3247  090C                     	;# 
  3248  090E                     	;# 
  3249  090F                     	;# 
  3250  091F                     	;# 
  3251  091F                     	;# 
  3252  098F                     	;# 
  3253  098F                     	;# 
  3254  0990                     	;# 
  3255  0991                     	;# 
  3256  0992                     	;# 
  3257  0993                     	;# 
  3258  0994                     	;# 
  3259  0995                     	;# 
  3260  0996                     	;# 
  3261  0997                     	;# 
  3262  0E0F                     	;# 
  3263  0E10                     	;# 
  3264  0E11                     	;# 
  3265  0E12                     	;# 
  3266  0E13                     	;# 
  3267  0E14                     	;# 
  3268  0E15                     	;# 
  3269  0E16                     	;# 
  3270  0E17                     	;# 
  3271  0E18                     	;# 
  3272  0E19                     	;# 
  3273  0E1A                     	;# 
  3274  0E1B                     	;# 
  3275  0E1C                     	;# 
  3276  0E1D                     	;# 
  3277  0E1E                     	;# 
  3278  0E1F                     	;# 
  3279  0E20                     	;# 
  3280  0E21                     	;# 
  3281  0E22                     	;# 
  3282  0E23                     	;# 
  3283  0E24                     	;# 
  3284  0E25                     	;# 
  3285  0E26                     	;# 
  3286  0E27                     	;# 
  3287  0E28                     	;# 
  3288  0E29                     	;# 
  3289  0E2A                     	;# 
  3290  0E2B                     	;# 
  3291  0E2C                     	;# 
  3292  0E2D                     	;# 
  3293  0E2E                     	;# 
  3294  0E2F                     	;# 
  3295  0E30                     	;# 
  3296  0E31                     	;# 
  3297  0E32                     	;# 
  3298  0E33                     	;# 
  3299  0E34                     	;# 
  3300  0E35                     	;# 
  3301  0E36                     	;# 
  3302  0E37                     	;# 
  3303  0E8F                     	;# 
  3304  0E90                     	;# 
  3305  0E91                     	;# 
  3306  0E92                     	;# 
  3307  0E93                     	;# 
  3308  0E94                     	;# 
  3309  0E95                     	;# 
  3310  0E96                     	;# 
  3311  0E97                     	;# 
  3312  0E9C                     	;# 
  3313  0E9D                     	;# 
  3314  0E9E                     	;# 
  3315  0EA1                     	;# 
  3316  0EA2                     	;# 
  3317  0EA3                     	;# 
  3318  0EA4                     	;# 
  3319  0EA5                     	;# 
  3320  0EA9                     	;# 
  3321  0EAA                     	;# 
  3322  0EAB                     	;# 
  3323  0EAC                     	;# 
  3324  0EB1                     	;# 
  3325  0EB2                     	;# 
  3326  0EB3                     	;# 
  3327  0EB8                     	;# 
  3328  0EB9                     	;# 
  3329  0EBA                     	;# 
  3330  0EBB                     	;# 
  3331  0EBC                     	;# 
  3332  0EBD                     	;# 
  3333  0EBE                     	;# 
  3334  0EC3                     	;# 
  3335  0EC5                     	;# 
  3336  0EC6                     	;# 
  3337  0EC7                     	;# 
  3338  0EC8                     	;# 
  3339  0EC9                     	;# 
  3340  0ECA                     	;# 
  3341  0ECB                     	;# 
  3342  0ECC                     	;# 
  3343  0F10                     	;# 
  3344  0F11                     	;# 
  3345  0F12                     	;# 
  3346  0F13                     	;# 
  3347  0F14                     	;# 
  3348  0F15                     	;# 
  3349  0F16                     	;# 
  3350  0F17                     	;# 
  3351  0F18                     	;# 
  3352  0F19                     	;# 
  3353  0F1A                     	;# 
  3354  0F1B                     	;# 
  3355  0F1C                     	;# 
  3356  0F1D                     	;# 
  3357  0F1E                     	;# 
  3358  0F1F                     	;# 
  3359  0F20                     	;# 
  3360  0F21                     	;# 
  3361  0F22                     	;# 
  3362  0F23                     	;# 
  3363  0F24                     	;# 
  3364  0F25                     	;# 
  3365  0F26                     	;# 
  3366  0F27                     	;# 
  3367  0F28                     	;# 
  3368  0F29                     	;# 
  3369  0F2A                     	;# 
  3370  0F2B                     	;# 
  3371  0F2C                     	;# 
  3372  0F2D                     	;# 
  3373  0F2E                     	;# 
  3374  0F2F                     	;# 
  3375  0F30                     	;# 
  3376  0F31                     	;# 
  3377  0F32                     	;# 
  3378  0F38                     	;# 
  3379  0F39                     	;# 
  3380  0F3A                     	;# 
  3381  0F3B                     	;# 
  3382  0F3C                     	;# 
  3383  0F3D                     	;# 
  3384  0F3E                     	;# 
  3385  0F3F                     	;# 
  3386  0F40                     	;# 
  3387  0F41                     	;# 
  3388  0F43                     	;# 
  3389  0F44                     	;# 
  3390  0F45                     	;# 
  3391  0F46                     	;# 
  3392  0F47                     	;# 
  3393  0F48                     	;# 
  3394  0F49                     	;# 
  3395  0F4A                     	;# 
  3396  0F4B                     	;# 
  3397  0F4C                     	;# 
  3398  0F4E                     	;# 
  3399  0F4F                     	;# 
  3400  0F50                     	;# 
  3401  0F51                     	;# 
  3402  0F52                     	;# 
  3403  0F53                     	;# 
  3404  0F54                     	;# 
  3405  0F55                     	;# 
  3406  0F56                     	;# 
  3407  0F57                     	;# 
  3408  0F59                     	;# 
  3409  0F5A                     	;# 
  3410  0F5B                     	;# 
  3411  0F5C                     	;# 
  3412  0F5D                     	;# 
  3413  0F61                     	;# 
  3414  0F62                     	;# 
  3415  0F64                     	;# 
  3416  0F65                     	;# 
  3417  0F66                     	;# 
  3418  0F67                     	;# 
  3419  0F68                     	;# 
  3420  0F69                     	;# 
  3421  0F6A                     	;# 
  3422  0F6B                     	;# 
  3423  0F6C                     	;# 
  3424  0F6D                     	;# 
  3425  0FE4                     	;# 
  3426  0FE5                     	;# 
  3427  0FE6                     	;# 
  3428  0FE7                     	;# 
  3429  0FE8                     	;# 
  3430  0FE9                     	;# 
  3431  0FEA                     	;# 
  3432  0FEB                     	;# 
  3433  0FED                     	;# 
  3434  0FEE                     	;# 
  3435  0FEF                     	;# 
  3436  0000                     	;# 
  3437  0001                     	;# 
  3438  0002                     	;# 
  3439  0003                     	;# 
  3440  0004                     	;# 
  3441  0005                     	;# 
  3442  0006                     	;# 
  3443  0007                     	;# 
  3444  0008                     	;# 
  3445  0009                     	;# 
  3446  000A                     	;# 
  3447  000B                     	;# 
  3448  000C                     	;# 
  3449  000D                     	;# 
  3450  000E                     	;# 
  3451  000F                     	;# 
  3452  0010                     	;# 
  3453  0011                     	;# 
  3454  0012                     	;# 
  3455  0013                     	;# 
  3456  0014                     	;# 
  3457  0015                     	;# 
  3458  0016                     	;# 
  3459  0017                     	;# 
  3460  0018                     	;# 
  3461  0019                     	;# 
  3462  001A                     	;# 
  3463  001C                     	;# 
  3464  001C                     	;# 
  3465  001D                     	;# 
  3466  001D                     	;# 
  3467  001E                     	;# 
  3468  001F                     	;# 
  3469  008C                     	;# 
  3470  008C                     	;# 
  3471  008D                     	;# 
  3472  008E                     	;# 
  3473  008E                     	;# 
  3474  008F                     	;# 
  3475  0090                     	;# 
  3476  0090                     	;# 
  3477  0091                     	;# 
  3478  0093                     	;# 
  3479  0094                     	;# 
  3480  0095                     	;# 
  3481  0096                     	;# 
  3482  0097                     	;# 
  3483  0098                     	;# 
  3484  0099                     	;# 
  3485  009A                     	;# 
  3486  009B                     	;# 
  3487  009C                     	;# 
  3488  009D                     	;# 
  3489  009E                     	;# 
  3490  010C                     	;# 
  3491  010D                     	;# 
  3492  010E                     	;# 
  3493  010E                     	;# 
  3494  010F                     	;# 
  3495  0110                     	;# 
  3496  0110                     	;# 
  3497  0111                     	;# 
  3498  0112                     	;# 
  3499  0112                     	;# 
  3500  0113                     	;# 
  3501  0114                     	;# 
  3502  0114                     	;# 
  3503  0115                     	;# 
  3504  0116                     	;# 
  3505  0116                     	;# 
  3506  0117                     	;# 
  3507  0119                     	;# 
  3508  0119                     	;# 
  3509  0119                     	;# 
  3510  011A                     	;# 
  3511  011A                     	;# 
  3512  011A                     	;# 
  3513  011B                     	;# 
  3514  011B                     	;# 
  3515  011B                     	;# 
  3516  011B                     	;# 
  3517  011B                     	;# 
  3518  011C                     	;# 
  3519  011C                     	;# 
  3520  011C                     	;# 
  3521  011D                     	;# 
  3522  011D                     	;# 
  3523  011D                     	;# 
  3524  011E                     	;# 
  3525  011E                     	;# 
  3526  011E                     	;# 
  3527  011F                     	;# 
  3528  011F                     	;# 
  3529  011F                     	;# 
  3530  011F                     	;# 
  3531  011F                     	;# 
  3532  018C                     	;# 
  3533  018D                     	;# 
  3534  018E                     	;# 
  3535  018F                     	;# 
  3536  0190                     	;# 
  3537  0191                     	;# 
  3538  0192                     	;# 
  3539  0196                     	;# 
  3540  0197                     	;# 
  3541  0198                     	;# 
  3542  0199                     	;# 
  3543  019A                     	;# 
  3544  019B                     	;# 
  3545  019C                     	;# 
  3546  020C                     	;# 
  3547  020C                     	;# 
  3548  020D                     	;# 
  3549  020E                     	;# 
  3550  020F                     	;# 
  3551  020F                     	;# 
  3552  0210                     	;# 
  3553  0210                     	;# 
  3554  0211                     	;# 
  3555  0211                     	;# 
  3556  0212                     	;# 
  3557  0212                     	;# 
  3558  0213                     	;# 
  3559  0214                     	;# 
  3560  0215                     	;# 
  3561  0215                     	;# 
  3562  0216                     	;# 
  3563  0216                     	;# 
  3564  0217                     	;# 
  3565  0217                     	;# 
  3566  0218                     	;# 
  3567  0218                     	;# 
  3568  0219                     	;# 
  3569  021A                     	;# 
  3570  021B                     	;# 
  3571  021B                     	;# 
  3572  021C                     	;# 
  3573  021C                     	;# 
  3574  021D                     	;# 
  3575  021D                     	;# 
  3576  021E                     	;# 
  3577  021F                     	;# 
  3578  028C                     	;# 
  3579  028C                     	;# 
  3580  028D                     	;# 
  3581  028D                     	;# 
  3582  028E                     	;# 
  3583  028F                     	;# 
  3584  0290                     	;# 
  3585  0290                     	;# 
  3586  0291                     	;# 
  3587  0292                     	;# 
  3588  0292                     	;# 
  3589  0293                     	;# 
  3590  0293                     	;# 
  3591  0294                     	;# 
  3592  0295                     	;# 
  3593  0296                     	;# 
  3594  0296                     	;# 
  3595  0297                     	;# 
  3596  0298                     	;# 
  3597  0298                     	;# 
  3598  0299                     	;# 
  3599  0299                     	;# 
  3600  029A                     	;# 
  3601  029B                     	;# 
  3602  029C                     	;# 
  3603  029C                     	;# 
  3604  029D                     	;# 
  3605  030C                     	;# 
  3606  030C                     	;# 
  3607  030D                     	;# 
  3608  030E                     	;# 
  3609  030F                     	;# 
  3610  0310                     	;# 
  3611  0310                     	;# 
  3612  0311                     	;# 
  3613  0312                     	;# 
  3614  0313                     	;# 
  3615  0314                     	;# 
  3616  0314                     	;# 
  3617  0315                     	;# 
  3618  0316                     	;# 
  3619  0317                     	;# 
  3620  0318                     	;# 
  3621  0318                     	;# 
  3622  0319                     	;# 
  3623  031A                     	;# 
  3624  031B                     	;# 
  3625  031C                     	;# 
  3626  031C                     	;# 
  3627  031D                     	;# 
  3628  031E                     	;# 
  3629  031F                     	;# 
  3630  038C                     	;# 
  3631  038C                     	;# 
  3632  038D                     	;# 
  3633  038E                     	;# 
  3634  0390                     	;# 
  3635  0390                     	;# 
  3636  0391                     	;# 
  3637  0392                     	;# 
  3638  040C                     	;# 
  3639  040D                     	;# 
  3640  040E                     	;# 
  3641  040F                     	;# 
  3642  0410                     	;# 
  3643  0411                     	;# 
  3644  0416                     	;# 
  3645  0416                     	;# 
  3646  0417                     	;# 
  3647  0418                     	;# 
  3648  0418                     	;# 
  3649  0419                     	;# 
  3650  041A                     	;# 
  3651  041A                     	;# 
  3652  041B                     	;# 
  3653  041C                     	;# 
  3654  041C                     	;# 
  3655  041D                     	;# 
  3656  041E                     	;# 
  3657  041F                     	;# 
  3658  048C                     	;# 
  3659  048C                     	;# 
  3660  048D                     	;# 
  3661  048E                     	;# 
  3662  048F                     	;# 
  3663  048F                     	;# 
  3664  0490                     	;# 
  3665  0491                     	;# 
  3666  0492                     	;# 
  3667  0492                     	;# 
  3668  0493                     	;# 
  3669  0494                     	;# 
  3670  0495                     	;# 
  3671  0495                     	;# 
  3672  0496                     	;# 
  3673  0497                     	;# 
  3674  0498                     	;# 
  3675  0499                     	;# 
  3676  049A                     	;# 
  3677  049B                     	;# 
  3678  049C                     	;# 
  3679  049D                     	;# 
  3680  050C                     	;# 
  3681  050C                     	;# 
  3682  050D                     	;# 
  3683  050E                     	;# 
  3684  050F                     	;# 
  3685  050F                     	;# 
  3686  0510                     	;# 
  3687  0511                     	;# 
  3688  0512                     	;# 
  3689  0512                     	;# 
  3690  0513                     	;# 
  3691  0514                     	;# 
  3692  0515                     	;# 
  3693  0515                     	;# 
  3694  0516                     	;# 
  3695  0517                     	;# 
  3696  0518                     	;# 
  3697  0519                     	;# 
  3698  051A                     	;# 
  3699  051B                     	;# 
  3700  051C                     	;# 
  3701  051D                     	;# 
  3702  058C                     	;# 
  3703  058C                     	;# 
  3704  058D                     	;# 
  3705  058E                     	;# 
  3706  058F                     	;# 
  3707  058F                     	;# 
  3708  0590                     	;# 
  3709  0591                     	;# 
  3710  0592                     	;# 
  3711  0593                     	;# 
  3712  060C                     	;# 
  3713  060D                     	;# 
  3714  060E                     	;# 
  3715  060F                     	;# 
  3716  0610                     	;# 
  3717  0611                     	;# 
  3718  0612                     	;# 
  3719  0613                     	;# 
  3720  0614                     	;# 
  3721  0616                     	;# 
  3722  0617                     	;# 
  3723  0618                     	;# 
  3724  0619                     	;# 
  3725  061A                     	;# 
  3726  061B                     	;# 
  3727  061C                     	;# 
  3728  061D                     	;# 
  3729  061E                     	;# 
  3730  068C                     	;# 
  3731  068D                     	;# 
  3732  068E                     	;# 
  3733  068F                     	;# 
  3734  0690                     	;# 
  3735  0691                     	;# 
  3736  0692                     	;# 
  3737  0693                     	;# 
  3738  0694                     	;# 
  3739  070C                     	;# 
  3740  070D                     	;# 
  3741  070E                     	;# 
  3742  070F                     	;# 
  3743  0710                     	;# 
  3744  0711                     	;# 
  3745  0712                     	;# 
  3746  0713                     	;# 
  3747  0714                     	;# 
  3748  0716                     	;# 
  3749  0717                     	;# 
  3750  0718                     	;# 
  3751  0719                     	;# 
  3752  071A                     	;# 
  3753  071B                     	;# 
  3754  071C                     	;# 
  3755  071D                     	;# 
  3756  071E                     	;# 
  3757  0796                     	;# 
  3758  0797                     	;# 
  3759  0798                     	;# 
  3760  0799                     	;# 
  3761  079A                     	;# 
  3762  079B                     	;# 
  3763  080C                     	;# 
  3764  080D                     	;# 
  3765  080E                     	;# 
  3766  080F                     	;# 
  3767  0810                     	;# 
  3768  0811                     	;# 
  3769  0812                     	;# 
  3770  0813                     	;# 
  3771  0814                     	;# 
  3772  081A                     	;# 
  3773  081B                     	;# 
  3774  081C                     	;# 
  3775  081D                     	;# 
  3776  081E                     	;# 
  3777  081F                     	;# 
  3778  088C                     	;# 
  3779  088D                     	;# 
  3780  088E                     	;# 
  3781  088F                     	;# 
  3782  0890                     	;# 
  3783  0891                     	;# 
  3784  0892                     	;# 
  3785  0893                     	;# 
  3786  0895                     	;# 
  3787  0896                     	;# 
  3788  0897                     	;# 
  3789  0898                     	;# 
  3790  0899                     	;# 
  3791  089A                     	;# 
  3792  089B                     	;# 
  3793  090C                     	;# 
  3794  090E                     	;# 
  3795  090F                     	;# 
  3796  091F                     	;# 
  3797  091F                     	;# 
  3798  098F                     	;# 
  3799  098F                     	;# 
  3800  0990                     	;# 
  3801  0991                     	;# 
  3802  0992                     	;# 
  3803  0993                     	;# 
  3804  0994                     	;# 
  3805  0995                     	;# 
  3806  0996                     	;# 
  3807  0997                     	;# 
  3808  0E0F                     	;# 
  3809  0E10                     	;# 
  3810  0E11                     	;# 
  3811  0E12                     	;# 
  3812  0E13                     	;# 
  3813  0E14                     	;# 
  3814  0E15                     	;# 
  3815  0E16                     	;# 
  3816  0E17                     	;# 
  3817  0E18                     	;# 
  3818  0E19                     	;# 
  3819  0E1A                     	;# 
  3820  0E1B                     	;# 
  3821  0E1C                     	;# 
  3822  0E1D                     	;# 
  3823  0E1E                     	;# 
  3824  0E1F                     	;# 
  3825  0E20                     	;# 
  3826  0E21                     	;# 
  3827  0E22                     	;# 
  3828  0E23                     	;# 
  3829  0E24                     	;# 
  3830  0E25                     	;# 
  3831  0E26                     	;# 
  3832  0E27                     	;# 
  3833  0E28                     	;# 
  3834  0E29                     	;# 
  3835  0E2A                     	;# 
  3836  0E2B                     	;# 
  3837  0E2C                     	;# 
  3838  0E2D                     	;# 
  3839  0E2E                     	;# 
  3840  0E2F                     	;# 
  3841  0E30                     	;# 
  3842  0E31                     	;# 
  3843  0E32                     	;# 
  3844  0E33                     	;# 
  3845  0E34                     	;# 
  3846  0E35                     	;# 
  3847  0E36                     	;# 
  3848  0E37                     	;# 
  3849  0E8F                     	;# 
  3850  0E90                     	;# 
  3851  0E91                     	;# 
  3852  0E92                     	;# 
  3853  0E93                     	;# 
  3854  0E94                     	;# 
  3855  0E95                     	;# 
  3856  0E96                     	;# 
  3857  0E97                     	;# 
  3858  0E9C                     	;# 
  3859  0E9D                     	;# 
  3860  0E9E                     	;# 
  3861  0EA1                     	;# 
  3862  0EA2                     	;# 
  3863  0EA3                     	;# 
  3864  0EA4                     	;# 
  3865  0EA5                     	;# 
  3866  0EA9                     	;# 
  3867  0EAA                     	;# 
  3868  0EAB                     	;# 
  3869  0EAC                     	;# 
  3870  0EB1                     	;# 
  3871  0EB2                     	;# 
  3872  0EB3                     	;# 
  3873  0EB8                     	;# 
  3874  0EB9                     	;# 
  3875  0EBA                     	;# 
  3876  0EBB                     	;# 
  3877  0EBC                     	;# 
  3878  0EBD                     	;# 
  3879  0EBE                     	;# 
  3880  0EC3                     	;# 
  3881  0EC5                     	;# 
  3882  0EC6                     	;# 
  3883  0EC7                     	;# 
  3884  0EC8                     	;# 
  3885  0EC9                     	;# 
  3886  0ECA                     	;# 
  3887  0ECB                     	;# 
  3888  0ECC                     	;# 
  3889  0F10                     	;# 
  3890  0F11                     	;# 
  3891  0F12                     	;# 
  3892  0F13                     	;# 
  3893  0F14                     	;# 
  3894  0F15                     	;# 
  3895  0F16                     	;# 
  3896  0F17                     	;# 
  3897  0F18                     	;# 
  3898  0F19                     	;# 
  3899  0F1A                     	;# 
  3900  0F1B                     	;# 
  3901  0F1C                     	;# 
  3902  0F1D                     	;# 
  3903  0F1E                     	;# 
  3904  0F1F                     	;# 
  3905  0F20                     	;# 
  3906  0F21                     	;# 
  3907  0F22                     	;# 
  3908  0F23                     	;# 
  3909  0F24                     	;# 
  3910  0F25                     	;# 
  3911  0F26                     	;# 
  3912  0F27                     	;# 
  3913  0F28                     	;# 
  3914  0F29                     	;# 
  3915  0F2A                     	;# 
  3916  0F2B                     	;# 
  3917  0F2C                     	;# 
  3918  0F2D                     	;# 
  3919  0F2E                     	;# 
  3920  0F2F                     	;# 
  3921  0F30                     	;# 
  3922  0F31                     	;# 
  3923  0F32                     	;# 
  3924  0F38                     	;# 
  3925  0F39                     	;# 
  3926  0F3A                     	;# 
  3927  0F3B                     	;# 
  3928  0F3C                     	;# 
  3929  0F3D                     	;# 
  3930  0F3E                     	;# 
  3931  0F3F                     	;# 
  3932  0F40                     	;# 
  3933  0F41                     	;# 
  3934  0F43                     	;# 
  3935  0F44                     	;# 
  3936  0F45                     	;# 
  3937  0F46                     	;# 
  3938  0F47                     	;# 
  3939  0F48                     	;# 
  3940  0F49                     	;# 
  3941  0F4A                     	;# 
  3942  0F4B                     	;# 
  3943  0F4C                     	;# 
  3944  0F4E                     	;# 
  3945  0F4F                     	;# 
  3946  0F50                     	;# 
  3947  0F51                     	;# 
  3948  0F52                     	;# 
  3949  0F53                     	;# 
  3950  0F54                     	;# 
  3951  0F55                     	;# 
  3952  0F56                     	;# 
  3953  0F57                     	;# 
  3954  0F59                     	;# 
  3955  0F5A                     	;# 
  3956  0F5B                     	;# 
  3957  0F5C                     	;# 
  3958  0F5D                     	;# 
  3959  0F61                     	;# 
  3960  0F62                     	;# 
  3961  0F64                     	;# 
  3962  0F65                     	;# 
  3963  0F66                     	;# 
  3964  0F67                     	;# 
  3965  0F68                     	;# 
  3966  0F69                     	;# 
  3967  0F6A                     	;# 
  3968  0F6B                     	;# 
  3969  0F6C                     	;# 
  3970  0F6D                     	;# 
  3971  0FE4                     	;# 
  3972  0FE5                     	;# 
  3973  0FE6                     	;# 
  3974  0FE7                     	;# 
  3975  0FE8                     	;# 
  3976  0FE9                     	;# 
  3977  0FEA                     	;# 
  3978  0FEB                     	;# 
  3979  0FED                     	;# 
  3980  0FEE                     	;# 
  3981  0FEF                     	;# 
  3982  0000                     	;# 
  3983  0001                     	;# 
  3984  0002                     	;# 
  3985  0003                     	;# 
  3986  0004                     	;# 
  3987  0005                     	;# 
  3988  0006                     	;# 
  3989  0007                     	;# 
  3990  0008                     	;# 
  3991  0009                     	;# 
  3992  000A                     	;# 
  3993  000B                     	;# 
  3994  000C                     	;# 
  3995  000D                     	;# 
  3996  000E                     	;# 
  3997  000F                     	;# 
  3998  0010                     	;# 
  3999  0011                     	;# 
  4000  0012                     	;# 
  4001  0013                     	;# 
  4002  0014                     	;# 
  4003  0015                     	;# 
  4004  0016                     	;# 
  4005  0017                     	;# 
  4006  0018                     	;# 
  4007  0019                     	;# 
  4008  001A                     	;# 
  4009  001C                     	;# 
  4010  001C                     	;# 
  4011  001D                     	;# 
  4012  001D                     	;# 
  4013  001E                     	;# 
  4014  001F                     	;# 
  4015  008C                     	;# 
  4016  008C                     	;# 
  4017  008D                     	;# 
  4018  008E                     	;# 
  4019  008E                     	;# 
  4020  008F                     	;# 
  4021  0090                     	;# 
  4022  0090                     	;# 
  4023  0091                     	;# 
  4024  0093                     	;# 
  4025  0094                     	;# 
  4026  0095                     	;# 
  4027  0096                     	;# 
  4028  0097                     	;# 
  4029  0098                     	;# 
  4030  0099                     	;# 
  4031  009A                     	;# 
  4032  009B                     	;# 
  4033  009C                     	;# 
  4034  009D                     	;# 
  4035  009E                     	;# 
  4036  010C                     	;# 
  4037  010D                     	;# 
  4038  010E                     	;# 
  4039  010E                     	;# 
  4040  010F                     	;# 
  4041  0110                     	;# 
  4042  0110                     	;# 
  4043  0111                     	;# 
  4044  0112                     	;# 
  4045  0112                     	;# 
  4046  0113                     	;# 
  4047  0114                     	;# 
  4048  0114                     	;# 
  4049  0115                     	;# 
  4050  0116                     	;# 
  4051  0116                     	;# 
  4052  0117                     	;# 
  4053  0119                     	;# 
  4054  0119                     	;# 
  4055  0119                     	;# 
  4056  011A                     	;# 
  4057  011A                     	;# 
  4058  011A                     	;# 
  4059  011B                     	;# 
  4060  011B                     	;# 
  4061  011B                     	;# 
  4062  011B                     	;# 
  4063  011B                     	;# 
  4064  011C                     	;# 
  4065  011C                     	;# 
  4066  011C                     	;# 
  4067  011D                     	;# 
  4068  011D                     	;# 
  4069  011D                     	;# 
  4070  011E                     	;# 
  4071  011E                     	;# 
  4072  011E                     	;# 
  4073  011F                     	;# 
  4074  011F                     	;# 
  4075  011F                     	;# 
  4076  011F                     	;# 
  4077  011F                     	;# 
  4078  018C                     	;# 
  4079  018D                     	;# 
  4080  018E                     	;# 
  4081  018F                     	;# 
  4082  0190                     	;# 
  4083  0191                     	;# 
  4084  0192                     	;# 
  4085  0196                     	;# 
  4086  0197                     	;# 
  4087  0198                     	;# 
  4088  0199                     	;# 
  4089  019A                     	;# 
  4090  019B                     	;# 
  4091  019C                     	;# 
  4092  020C                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  020F                     	;# 
  4097  020F                     	;# 
  4098  0210                     	;# 
  4099  0210                     	;# 
  4100  0211                     	;# 
  4101  0211                     	;# 
  4102  0212                     	;# 
  4103  0212                     	;# 
  4104  0213                     	;# 
  4105  0214                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0216                     	;# 
  4109  0216                     	;# 
  4110  0217                     	;# 
  4111  0217                     	;# 
  4112  0218                     	;# 
  4113  0218                     	;# 
  4114  0219                     	;# 
  4115  021A                     	;# 
  4116  021B                     	;# 
  4117  021B                     	;# 
  4118  021C                     	;# 
  4119  021C                     	;# 
  4120  021D                     	;# 
  4121  021D                     	;# 
  4122  021E                     	;# 
  4123  021F                     	;# 
  4124  028C                     	;# 
  4125  028C                     	;# 
  4126  028D                     	;# 
  4127  028D                     	;# 
  4128  028E                     	;# 
  4129  028F                     	;# 
  4130  0290                     	;# 
  4131  0290                     	;# 
  4132  0291                     	;# 
  4133  0292                     	;# 
  4134  0292                     	;# 
  4135  0293                     	;# 
  4136  0293                     	;# 
  4137  0294                     	;# 
  4138  0295                     	;# 
  4139  0296                     	;# 
  4140  0296                     	;# 
  4141  0297                     	;# 
  4142  0298                     	;# 
  4143  0298                     	;# 
  4144  0299                     	;# 
  4145  0299                     	;# 
  4146  029A                     	;# 
  4147  029B                     	;# 
  4148  029C                     	;# 
  4149  029C                     	;# 
  4150  029D                     	;# 
  4151  030C                     	;# 
  4152  030C                     	;# 
  4153  030D                     	;# 
  4154  030E                     	;# 
  4155  030F                     	;# 
  4156  0310                     	;# 
  4157  0310                     	;# 
  4158  0311                     	;# 
  4159  0312                     	;# 
  4160  0313                     	;# 
  4161  0314                     	;# 
  4162  0314                     	;# 
  4163  0315                     	;# 
  4164  0316                     	;# 
  4165  0317                     	;# 
  4166  0318                     	;# 
  4167  0318                     	;# 
  4168  0319                     	;# 
  4169  031A                     	;# 
  4170  031B                     	;# 
  4171  031C                     	;# 
  4172  031C                     	;# 
  4173  031D                     	;# 
  4174  031E                     	;# 
  4175  031F                     	;# 
  4176  038C                     	;# 
  4177  038C                     	;# 
  4178  038D                     	;# 
  4179  038E                     	;# 
  4180  0390                     	;# 
  4181  0390                     	;# 
  4182  0391                     	;# 
  4183  0392                     	;# 
  4184  040C                     	;# 
  4185  040D                     	;# 
  4186  040E                     	;# 
  4187  040F                     	;# 
  4188  0410                     	;# 
  4189  0411                     	;# 
  4190  0416                     	;# 
  4191  0416                     	;# 
  4192  0417                     	;# 
  4193  0418                     	;# 
  4194  0418                     	;# 
  4195  0419                     	;# 
  4196  041A                     	;# 
  4197  041A                     	;# 
  4198  041B                     	;# 
  4199  041C                     	;# 
  4200  041C                     	;# 
  4201  041D                     	;# 
  4202  041E                     	;# 
  4203  041F                     	;# 
  4204  048C                     	;# 
  4205  048C                     	;# 
  4206  048D                     	;# 
  4207  048E                     	;# 
  4208  048F                     	;# 
  4209  048F                     	;# 
  4210  0490                     	;# 
  4211  0491                     	;# 
  4212  0492                     	;# 
  4213  0492                     	;# 
  4214  0493                     	;# 
  4215  0494                     	;# 
  4216  0495                     	;# 
  4217  0495                     	;# 
  4218  0496                     	;# 
  4219  0497                     	;# 
  4220  0498                     	;# 
  4221  0499                     	;# 
  4222  049A                     	;# 
  4223  049B                     	;# 
  4224  049C                     	;# 
  4225  049D                     	;# 
  4226  050C                     	;# 
  4227  050C                     	;# 
  4228  050D                     	;# 
  4229  050E                     	;# 
  4230  050F                     	;# 
  4231  050F                     	;# 
  4232  0510                     	;# 
  4233  0511                     	;# 
  4234  0512                     	;# 
  4235  0512                     	;# 
  4236  0513                     	;# 
  4237  0514                     	;# 
  4238  0515                     	;# 
  4239  0515                     	;# 
  4240  0516                     	;# 
  4241  0517                     	;# 
  4242  0518                     	;# 
  4243  0519                     	;# 
  4244  051A                     	;# 
  4245  051B                     	;# 
  4246  051C                     	;# 
  4247  051D                     	;# 
  4248  058C                     	;# 
  4249  058C                     	;# 
  4250  058D                     	;# 
  4251  058E                     	;# 
  4252  058F                     	;# 
  4253  058F                     	;# 
  4254  0590                     	;# 
  4255  0591                     	;# 
  4256  0592                     	;# 
  4257  0593                     	;# 
  4258  060C                     	;# 
  4259  060D                     	;# 
  4260  060E                     	;# 
  4261  060F                     	;# 
  4262  0610                     	;# 
  4263  0611                     	;# 
  4264  0612                     	;# 
  4265  0613                     	;# 
  4266  0614                     	;# 
  4267  0616                     	;# 
  4268  0617                     	;# 
  4269  0618                     	;# 
  4270  0619                     	;# 
  4271  061A                     	;# 
  4272  061B                     	;# 
  4273  061C                     	;# 
  4274  061D                     	;# 
  4275  061E                     	;# 
  4276  068C                     	;# 
  4277  068D                     	;# 
  4278  068E                     	;# 
  4279  068F                     	;# 
  4280  0690                     	;# 
  4281  0691                     	;# 
  4282  0692                     	;# 
  4283  0693                     	;# 
  4284  0694                     	;# 
  4285  070C                     	;# 
  4286  070D                     	;# 
  4287  070E                     	;# 
  4288  070F                     	;# 
  4289  0710                     	;# 
  4290  0711                     	;# 
  4291  0712                     	;# 
  4292  0713                     	;# 
  4293  0714                     	;# 
  4294  0716                     	;# 
  4295  0717                     	;# 
  4296  0718                     	;# 
  4297  0719                     	;# 
  4298  071A                     	;# 
  4299  071B                     	;# 
  4300  071C                     	;# 
  4301  071D                     	;# 
  4302  071E                     	;# 
  4303  0796                     	;# 
  4304  0797                     	;# 
  4305  0798                     	;# 
  4306  0799                     	;# 
  4307  079A                     	;# 
  4308  079B                     	;# 
  4309  080C                     	;# 
  4310  080D                     	;# 
  4311  080E                     	;# 
  4312  080F                     	;# 
  4313  0810                     	;# 
  4314  0811                     	;# 
  4315  0812                     	;# 
  4316  0813                     	;# 
  4317  0814                     	;# 
  4318  081A                     	;# 
  4319  081B                     	;# 
  4320  081C                     	;# 
  4321  081D                     	;# 
  4322  081E                     	;# 
  4323  081F                     	;# 
  4324  088C                     	;# 
  4325  088D                     	;# 
  4326  088E                     	;# 
  4327  088F                     	;# 
  4328  0890                     	;# 
  4329  0891                     	;# 
  4330  0892                     	;# 
  4331  0893                     	;# 
  4332  0895                     	;# 
  4333  0896                     	;# 
  4334  0897                     	;# 
  4335  0898                     	;# 
  4336  0899                     	;# 
  4337  089A                     	;# 
  4338  089B                     	;# 
  4339  090C                     	;# 
  4340  090E                     	;# 
  4341  090F                     	;# 
  4342  091F                     	;# 
  4343  091F                     	;# 
  4344  098F                     	;# 
  4345  098F                     	;# 
  4346  0990                     	;# 
  4347  0991                     	;# 
  4348  0992                     	;# 
  4349  0993                     	;# 
  4350  0994                     	;# 
  4351  0995                     	;# 
  4352  0996                     	;# 
  4353  0997                     	;# 
  4354  0E0F                     	;# 
  4355  0E10                     	;# 
  4356  0E11                     	;# 
  4357  0E12                     	;# 
  4358  0E13                     	;# 
  4359  0E14                     	;# 
  4360  0E15                     	;# 
  4361  0E16                     	;# 
  4362  0E17                     	;# 
  4363  0E18                     	;# 
  4364  0E19                     	;# 
  4365  0E1A                     	;# 
  4366  0E1B                     	;# 
  4367  0E1C                     	;# 
  4368  0E1D                     	;# 
  4369  0E1E                     	;# 
  4370  0E1F                     	;# 
  4371  0E20                     	;# 
  4372  0E21                     	;# 
  4373  0E22                     	;# 
  4374  0E23                     	;# 
  4375  0E24                     	;# 
  4376  0E25                     	;# 
  4377  0E26                     	;# 
  4378  0E27                     	;# 
  4379  0E28                     	;# 
  4380  0E29                     	;# 
  4381  0E2A                     	;# 
  4382  0E2B                     	;# 
  4383  0E2C                     	;# 
  4384  0E2D                     	;# 
  4385  0E2E                     	;# 
  4386  0E2F                     	;# 
  4387  0E30                     	;# 
  4388  0E31                     	;# 
  4389  0E32                     	;# 
  4390  0E33                     	;# 
  4391  0E34                     	;# 
  4392  0E35                     	;# 
  4393  0E36                     	;# 
  4394  0E37                     	;# 
  4395  0E8F                     	;# 
  4396  0E90                     	;# 
  4397  0E91                     	;# 
  4398  0E92                     	;# 
  4399  0E93                     	;# 
  4400  0E94                     	;# 
  4401  0E95                     	;# 
  4402  0E96                     	;# 
  4403  0E97                     	;# 
  4404  0E9C                     	;# 
  4405  0E9D                     	;# 
  4406  0E9E                     	;# 
  4407  0EA1                     	;# 
  4408  0EA2                     	;# 
  4409  0EA3                     	;# 
  4410  0EA4                     	;# 
  4411  0EA5                     	;# 
  4412  0EA9                     	;# 
  4413  0EAA                     	;# 
  4414  0EAB                     	;# 
  4415  0EAC                     	;# 
  4416  0EB1                     	;# 
  4417  0EB2                     	;# 
  4418  0EB3                     	;# 
  4419  0EB8                     	;# 
  4420  0EB9                     	;# 
  4421  0EBA                     	;# 
  4422  0EBB                     	;# 
  4423  0EBC                     	;# 
  4424  0EBD                     	;# 
  4425  0EBE                     	;# 
  4426  0EC3                     	;# 
  4427  0EC5                     	;# 
  4428  0EC6                     	;# 
  4429  0EC7                     	;# 
  4430  0EC8                     	;# 
  4431  0EC9                     	;# 
  4432  0ECA                     	;# 
  4433  0ECB                     	;# 
  4434  0ECC                     	;# 
  4435  0F10                     	;# 
  4436  0F11                     	;# 
  4437  0F12                     	;# 
  4438  0F13                     	;# 
  4439  0F14                     	;# 
  4440  0F15                     	;# 
  4441  0F16                     	;# 
  4442  0F17                     	;# 
  4443  0F18                     	;# 
  4444  0F19                     	;# 
  4445  0F1A                     	;# 
  4446  0F1B                     	;# 
  4447  0F1C                     	;# 
  4448  0F1D                     	;# 
  4449  0F1E                     	;# 
  4450  0F1F                     	;# 
  4451  0F20                     	;# 
  4452  0F21                     	;# 
  4453  0F22                     	;# 
  4454  0F23                     	;# 
  4455  0F24                     	;# 
  4456  0F25                     	;# 
  4457  0F26                     	;# 
  4458  0F27                     	;# 
  4459  0F28                     	;# 
  4460  0F29                     	;# 
  4461  0F2A                     	;# 
  4462  0F2B                     	;# 
  4463  0F2C                     	;# 
  4464  0F2D                     	;# 
  4465  0F2E                     	;# 
  4466  0F2F                     	;# 
  4467  0F30                     	;# 
  4468  0F31                     	;# 
  4469  0F32                     	;# 
  4470  0F38                     	;# 
  4471  0F39                     	;# 
  4472  0F3A                     	;# 
  4473  0F3B                     	;# 
  4474  0F3C                     	;# 
  4475  0F3D                     	;# 
  4476  0F3E                     	;# 
  4477  0F3F                     	;# 
  4478  0F40                     	;# 
  4479  0F41                     	;# 
  4480  0F43                     	;# 
  4481  0F44                     	;# 
  4482  0F45                     	;# 
  4483  0F46                     	;# 
  4484  0F47                     	;# 
  4485  0F48                     	;# 
  4486  0F49                     	;# 
  4487  0F4A                     	;# 
  4488  0F4B                     	;# 
  4489  0F4C                     	;# 
  4490  0F4E                     	;# 
  4491  0F4F                     	;# 
  4492  0F50                     	;# 
  4493  0F51                     	;# 
  4494  0F52                     	;# 
  4495  0F53                     	;# 
  4496  0F54                     	;# 
  4497  0F55                     	;# 
  4498  0F56                     	;# 
  4499  0F57                     	;# 
  4500  0F59                     	;# 
  4501  0F5A                     	;# 
  4502  0F5B                     	;# 
  4503  0F5C                     	;# 
  4504  0F5D                     	;# 
  4505  0F61                     	;# 
  4506  0F62                     	;# 
  4507  0F64                     	;# 
  4508  0F65                     	;# 
  4509  0F66                     	;# 
  4510  0F67                     	;# 
  4511  0F68                     	;# 
  4512  0F69                     	;# 
  4513  0F6A                     	;# 
  4514  0F6B                     	;# 
  4515  0F6C                     	;# 
  4516  0F6D                     	;# 
  4517  0FE4                     	;# 
  4518  0FE5                     	;# 
  4519  0FE6                     	;# 
  4520  0FE7                     	;# 
  4521  0FE8                     	;# 
  4522  0FE9                     	;# 
  4523  0FEA                     	;# 
  4524  0FEB                     	;# 
  4525  0FED                     	;# 
  4526  0FEE                     	;# 
  4527  0FEF                     	;# 
  4528  0000                     	;# 
  4529  0001                     	;# 
  4530  0002                     	;# 
  4531  0003                     	;# 
  4532  0004                     	;# 
  4533  0005                     	;# 
  4534  0006                     	;# 
  4535  0007                     	;# 
  4536  0008                     	;# 
  4537  0009                     	;# 
  4538  000A                     	;# 
  4539  000B                     	;# 
  4540  000C                     	;# 
  4541  000D                     	;# 
  4542  000E                     	;# 
  4543  000F                     	;# 
  4544  0010                     	;# 
  4545  0011                     	;# 
  4546  0012                     	;# 
  4547  0013                     	;# 
  4548  0014                     	;# 
  4549  0015                     	;# 
  4550  0016                     	;# 
  4551  0017                     	;# 
  4552  0018                     	;# 
  4553  0019                     	;# 
  4554  001A                     	;# 
  4555  001C                     	;# 
  4556  001C                     	;# 
  4557  001D                     	;# 
  4558  001D                     	;# 
  4559  001E                     	;# 
  4560  001F                     	;# 
  4561  008C                     	;# 
  4562  008C                     	;# 
  4563  008D                     	;# 
  4564  008E                     	;# 
  4565  008E                     	;# 
  4566  008F                     	;# 
  4567  0090                     	;# 
  4568  0090                     	;# 
  4569  0091                     	;# 
  4570  0093                     	;# 
  4571  0094                     	;# 
  4572  0095                     	;# 
  4573  0096                     	;# 
  4574  0097                     	;# 
  4575  0098                     	;# 
  4576  0099                     	;# 
  4577  009A                     	;# 
  4578  009B                     	;# 
  4579  009C                     	;# 
  4580  009D                     	;# 
  4581  009E                     	;# 
  4582  010C                     	;# 
  4583  010D                     	;# 
  4584  010E                     	;# 
  4585  010E                     	;# 
  4586  010F                     	;# 
  4587  0110                     	;# 
  4588  0110                     	;# 
  4589  0111                     	;# 
  4590  0112                     	;# 
  4591  0112                     	;# 
  4592  0113                     	;# 
  4593  0114                     	;# 
  4594  0114                     	;# 
  4595  0115                     	;# 
  4596  0116                     	;# 
  4597  0116                     	;# 
  4598  0117                     	;# 
  4599  0119                     	;# 
  4600  0119                     	;# 
  4601  0119                     	;# 
  4602  011A                     	;# 
  4603  011A                     	;# 
  4604  011A                     	;# 
  4605  011B                     	;# 
  4606  011B                     	;# 
  4607  011B                     	;# 
  4608  011B                     	;# 
  4609  011B                     	;# 
  4610  011C                     	;# 
  4611  011C                     	;# 
  4612  011C                     	;# 
  4613  011D                     	;# 
  4614  011D                     	;# 
  4615  011D                     	;# 
  4616  011E                     	;# 
  4617  011E                     	;# 
  4618  011E                     	;# 
  4619  011F                     	;# 
  4620  011F                     	;# 
  4621  011F                     	;# 
  4622  011F                     	;# 
  4623  011F                     	;# 
  4624  018C                     	;# 
  4625  018D                     	;# 
  4626  018E                     	;# 
  4627  018F                     	;# 
  4628  0190                     	;# 
  4629  0191                     	;# 
  4630  0192                     	;# 
  4631  0196                     	;# 
  4632  0197                     	;# 
  4633  0198                     	;# 
  4634  0199                     	;# 
  4635  019A                     	;# 
  4636  019B                     	;# 
  4637  019C                     	;# 
  4638  020C                     	;# 
  4639  020C                     	;# 
  4640  020D                     	;# 
  4641  020E                     	;# 
  4642  020F                     	;# 
  4643  020F                     	;# 
  4644  0210                     	;# 
  4645  0210                     	;# 
  4646  0211                     	;# 
  4647  0211                     	;# 
  4648  0212                     	;# 
  4649  0212                     	;# 
  4650  0213                     	;# 
  4651  0214                     	;# 
  4652  0215                     	;# 
  4653  0215                     	;# 
  4654  0216                     	;# 
  4655  0216                     	;# 
  4656  0217                     	;# 
  4657  0217                     	;# 
  4658  0218                     	;# 
  4659  0218                     	;# 
  4660  0219                     	;# 
  4661  021A                     	;# 
  4662  021B                     	;# 
  4663  021B                     	;# 
  4664  021C                     	;# 
  4665  021C                     	;# 
  4666  021D                     	;# 
  4667  021D                     	;# 
  4668  021E                     	;# 
  4669  021F                     	;# 
  4670  028C                     	;# 
  4671  028C                     	;# 
  4672  028D                     	;# 
  4673  028D                     	;# 
  4674  028E                     	;# 
  4675  028F                     	;# 
  4676  0290                     	;# 
  4677  0290                     	;# 
  4678  0291                     	;# 
  4679  0292                     	;# 
  4680  0292                     	;# 
  4681  0293                     	;# 
  4682  0293                     	;# 
  4683  0294                     	;# 
  4684  0295                     	;# 
  4685  0296                     	;# 
  4686  0296                     	;# 
  4687  0297                     	;# 
  4688  0298                     	;# 
  4689  0298                     	;# 
  4690  0299                     	;# 
  4691  0299                     	;# 
  4692  029A                     	;# 
  4693  029B                     	;# 
  4694  029C                     	;# 
  4695  029C                     	;# 
  4696  029D                     	;# 
  4697  030C                     	;# 
  4698  030C                     	;# 
  4699  030D                     	;# 
  4700  030E                     	;# 
  4701  030F                     	;# 
  4702  0310                     	;# 
  4703  0310                     	;# 
  4704  0311                     	;# 
  4705  0312                     	;# 
  4706  0313                     	;# 
  4707  0314                     	;# 
  4708  0314                     	;# 
  4709  0315                     	;# 
  4710  0316                     	;# 
  4711  0317                     	;# 
  4712  0318                     	;# 
  4713  0318                     	;# 
  4714  0319                     	;# 
  4715  031A                     	;# 
  4716  031B                     	;# 
  4717  031C                     	;# 
  4718  031C                     	;# 
  4719  031D                     	;# 
  4720  031E                     	;# 
  4721  031F                     	;# 
  4722  038C                     	;# 
  4723  038C                     	;# 
  4724  038D                     	;# 
  4725  038E                     	;# 
  4726  0390                     	;# 
  4727  0390                     	;# 
  4728  0391                     	;# 
  4729  0392                     	;# 
  4730  040C                     	;# 
  4731  040D                     	;# 
  4732  040E                     	;# 
  4733  040F                     	;# 
  4734  0410                     	;# 
  4735  0411                     	;# 
  4736  0416                     	;# 
  4737  0416                     	;# 
  4738  0417                     	;# 
  4739  0418                     	;# 
  4740  0418                     	;# 
  4741  0419                     	;# 
  4742  041A                     	;# 
  4743  041A                     	;# 
  4744  041B                     	;# 
  4745  041C                     	;# 
  4746  041C                     	;# 
  4747  041D                     	;# 
  4748  041E                     	;# 
  4749  041F                     	;# 
  4750  048C                     	;# 
  4751  048C                     	;# 
  4752  048D                     	;# 
  4753  048E                     	;# 
  4754  048F                     	;# 
  4755  048F                     	;# 
  4756  0490                     	;# 
  4757  0491                     	;# 
  4758  0492                     	;# 
  4759  0492                     	;# 
  4760  0493                     	;# 
  4761  0494                     	;# 
  4762  0495                     	;# 
  4763  0495                     	;# 
  4764  0496                     	;# 
  4765  0497                     	;# 
  4766  0498                     	;# 
  4767  0499                     	;# 
  4768  049A                     	;# 
  4769  049B                     	;# 
  4770  049C                     	;# 
  4771  049D                     	;# 
  4772  050C                     	;# 
  4773  050C                     	;# 
  4774  050D                     	;# 
  4775  050E                     	;# 
  4776  050F                     	;# 
  4777  050F                     	;# 
  4778  0510                     	;# 
  4779  0511                     	;# 
  4780  0512                     	;# 
  4781  0512                     	;# 
  4782  0513                     	;# 
  4783  0514                     	;# 
  4784  0515                     	;# 
  4785  0515                     	;# 
  4786  0516                     	;# 
  4787  0517                     	;# 
  4788  0518                     	;# 
  4789  0519                     	;# 
  4790  051A                     	;# 
  4791  051B                     	;# 
  4792  051C                     	;# 
  4793  051D                     	;# 
  4794  058C                     	;# 
  4795  058C                     	;# 
  4796  058D                     	;# 
  4797  058E                     	;# 
  4798  058F                     	;# 
  4799  058F                     	;# 
  4800  0590                     	;# 
  4801  0591                     	;# 
  4802  0592                     	;# 
  4803  0593                     	;# 
  4804  060C                     	;# 
  4805  060D                     	;# 
  4806  060E                     	;# 
  4807  060F                     	;# 
  4808  0610                     	;# 
  4809  0611                     	;# 
  4810  0612                     	;# 
  4811  0613                     	;# 
  4812  0614                     	;# 
  4813  0616                     	;# 
  4814  0617                     	;# 
  4815  0618                     	;# 
  4816  0619                     	;# 
  4817  061A                     	;# 
  4818  061B                     	;# 
  4819  061C                     	;# 
  4820  061D                     	;# 
  4821  061E                     	;# 
  4822  068C                     	;# 
  4823  068D                     	;# 
  4824  068E                     	;# 
  4825  068F                     	;# 
  4826  0690                     	;# 
  4827  0691                     	;# 
  4828  0692                     	;# 
  4829  0693                     	;# 
  4830  0694                     	;# 
  4831  070C                     	;# 
  4832  070D                     	;# 
  4833  070E                     	;# 
  4834  070F                     	;# 
  4835  0710                     	;# 
  4836  0711                     	;# 
  4837  0712                     	;# 
  4838  0713                     	;# 
  4839  0714                     	;# 
  4840  0716                     	;# 
  4841  0717                     	;# 
  4842  0718                     	;# 
  4843  0719                     	;# 
  4844  071A                     	;# 
  4845  071B                     	;# 
  4846  071C                     	;# 
  4847  071D                     	;# 
  4848  071E                     	;# 
  4849  0796                     	;# 
  4850  0797                     	;# 
  4851  0798                     	;# 
  4852  0799                     	;# 
  4853  079A                     	;# 
  4854  079B                     	;# 
  4855  080C                     	;# 
  4856  080D                     	;# 
  4857  080E                     	;# 
  4858  080F                     	;# 
  4859  0810                     	;# 
  4860  0811                     	;# 
  4861  0812                     	;# 
  4862  0813                     	;# 
  4863  0814                     	;# 
  4864  081A                     	;# 
  4865  081B                     	;# 
  4866  081C                     	;# 
  4867  081D                     	;# 
  4868  081E                     	;# 
  4869  081F                     	;# 
  4870  088C                     	;# 
  4871  088D                     	;# 
  4872  088E                     	;# 
  4873  088F                     	;# 
  4874  0890                     	;# 
  4875  0891                     	;# 
  4876  0892                     	;# 
  4877  0893                     	;# 
  4878  0895                     	;# 
  4879  0896                     	;# 
  4880  0897                     	;# 
  4881  0898                     	;# 
  4882  0899                     	;# 
  4883  089A                     	;# 
  4884  089B                     	;# 
  4885  090C                     	;# 
  4886  090E                     	;# 
  4887  090F                     	;# 
  4888  091F                     	;# 
  4889  091F                     	;# 
  4890  098F                     	;# 
  4891  098F                     	;# 
  4892  0990                     	;# 
  4893  0991                     	;# 
  4894  0992                     	;# 
  4895  0993                     	;# 
  4896  0994                     	;# 
  4897  0995                     	;# 
  4898  0996                     	;# 
  4899  0997                     	;# 
  4900  0E0F                     	;# 
  4901  0E10                     	;# 
  4902  0E11                     	;# 
  4903  0E12                     	;# 
  4904  0E13                     	;# 
  4905  0E14                     	;# 
  4906  0E15                     	;# 
  4907  0E16                     	;# 
  4908  0E17                     	;# 
  4909  0E18                     	;# 
  4910  0E19                     	;# 
  4911  0E1A                     	;# 
  4912  0E1B                     	;# 
  4913  0E1C                     	;# 
  4914  0E1D                     	;# 
  4915  0E1E                     	;# 
  4916  0E1F                     	;# 
  4917  0E20                     	;# 
  4918  0E21                     	;# 
  4919  0E22                     	;# 
  4920  0E23                     	;# 
  4921  0E24                     	;# 
  4922  0E25                     	;# 
  4923  0E26                     	;# 
  4924  0E27                     	;# 
  4925  0E28                     	;# 
  4926  0E29                     	;# 
  4927  0E2A                     	;# 
  4928  0E2B                     	;# 
  4929  0E2C                     	;# 
  4930  0E2D                     	;# 
  4931  0E2E                     	;# 
  4932  0E2F                     	;# 
  4933  0E30                     	;# 
  4934  0E31                     	;# 
  4935  0E32                     	;# 
  4936  0E33                     	;# 
  4937  0E34                     	;# 
  4938  0E35                     	;# 
  4939  0E36                     	;# 
  4940  0E37                     	;# 
  4941  0E8F                     	;# 
  4942  0E90                     	;# 
  4943  0E91                     	;# 
  4944  0E92                     	;# 
  4945  0E93                     	;# 
  4946  0E94                     	;# 
  4947  0E95                     	;# 
  4948  0E96                     	;# 
  4949  0E97                     	;# 
  4950  0E9C                     	;# 
  4951  0E9D                     	;# 
  4952  0E9E                     	;# 
  4953  0EA1                     	;# 
  4954  0EA2                     	;# 
  4955  0EA3                     	;# 
  4956  0EA4                     	;# 
  4957  0EA5                     	;# 
  4958  0EA9                     	;# 
  4959  0EAA                     	;# 
  4960  0EAB                     	;# 
  4961  0EAC                     	;# 
  4962  0EB1                     	;# 
  4963  0EB2                     	;# 
  4964  0EB3                     	;# 
  4965  0EB8                     	;# 
  4966  0EB9                     	;# 
  4967  0EBA                     	;# 
  4968  0EBB                     	;# 
  4969  0EBC                     	;# 
  4970  0EBD                     	;# 
  4971  0EBE                     	;# 
  4972  0EC3                     	;# 
  4973  0EC5                     	;# 
  4974  0EC6                     	;# 
  4975  0EC7                     	;# 
  4976  0EC8                     	;# 
  4977  0EC9                     	;# 
  4978  0ECA                     	;# 
  4979  0ECB                     	;# 
  4980  0ECC                     	;# 
  4981  0F10                     	;# 
  4982  0F11                     	;# 
  4983  0F12                     	;# 
  4984  0F13                     	;# 
  4985  0F14                     	;# 
  4986  0F15                     	;# 
  4987  0F16                     	;# 
  4988  0F17                     	;# 
  4989  0F18                     	;# 
  4990  0F19                     	;# 
  4991  0F1A                     	;# 
  4992  0F1B                     	;# 
  4993  0F1C                     	;# 
  4994  0F1D                     	;# 
  4995  0F1E                     	;# 
  4996  0F1F                     	;# 
  4997  0F20                     	;# 
  4998  0F21                     	;# 
  4999  0F22                     	;# 
  5000  0F23                     	;# 
  5001  0F24                     	;# 
  5002  0F25                     	;# 
  5003  0F26                     	;# 
  5004  0F27                     	;# 
  5005  0F28                     	;# 
  5006  0F29                     	;# 
  5007  0F2A                     	;# 
  5008  0F2B                     	;# 
  5009  0F2C                     	;# 
  5010  0F2D                     	;# 
  5011  0F2E                     	;# 
  5012  0F2F                     	;# 
  5013  0F30                     	;# 
  5014  0F31                     	;# 
  5015  0F32                     	;# 
  5016  0F38                     	;# 
  5017  0F39                     	;# 
  5018  0F3A                     	;# 
  5019  0F3B                     	;# 
  5020  0F3C                     	;# 
  5021  0F3D                     	;# 
  5022  0F3E                     	;# 
  5023  0F3F                     	;# 
  5024  0F40                     	;# 
  5025  0F41                     	;# 
  5026  0F43                     	;# 
  5027  0F44                     	;# 
  5028  0F45                     	;# 
  5029  0F46                     	;# 
  5030  0F47                     	;# 
  5031  0F48                     	;# 
  5032  0F49                     	;# 
  5033  0F4A                     	;# 
  5034  0F4B                     	;# 
  5035  0F4C                     	;# 
  5036  0F4E                     	;# 
  5037  0F4F                     	;# 
  5038  0F50                     	;# 
  5039  0F51                     	;# 
  5040  0F52                     	;# 
  5041  0F53                     	;# 
  5042  0F54                     	;# 
  5043  0F55                     	;# 
  5044  0F56                     	;# 
  5045  0F57                     	;# 
  5046  0F59                     	;# 
  5047  0F5A                     	;# 
  5048  0F5B                     	;# 
  5049  0F5C                     	;# 
  5050  0F5D                     	;# 
  5051  0F61                     	;# 
  5052  0F62                     	;# 
  5053  0F64                     	;# 
  5054  0F65                     	;# 
  5055  0F66                     	;# 
  5056  0F67                     	;# 
  5057  0F68                     	;# 
  5058  0F69                     	;# 
  5059  0F6A                     	;# 
  5060  0F6B                     	;# 
  5061  0F6C                     	;# 
  5062  0F6D                     	;# 
  5063  0FE4                     	;# 
  5064  0FE5                     	;# 
  5065  0FE6                     	;# 
  5066  0FE7                     	;# 
  5067  0FE8                     	;# 
  5068  0FE9                     	;# 
  5069  0FEA                     	;# 
  5070  0FEB                     	;# 
  5071  0FED                     	;# 
  5072  0FEE                     	;# 
  5073  0FEF                     	;# 
  5074  0000                     	;# 
  5075  0001                     	;# 
  5076  0002                     	;# 
  5077  0003                     	;# 
  5078  0004                     	;# 
  5079  0005                     	;# 
  5080  0006                     	;# 
  5081  0007                     	;# 
  5082  0008                     	;# 
  5083  0009                     	;# 
  5084  000A                     	;# 
  5085  000B                     	;# 
  5086  000C                     	;# 
  5087  000D                     	;# 
  5088  000E                     	;# 
  5089  000F                     	;# 
  5090  0010                     	;# 
  5091  0011                     	;# 
  5092  0012                     	;# 
  5093  0013                     	;# 
  5094  0014                     	;# 
  5095  0015                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  001A                     	;# 
  5101  001C                     	;# 
  5102  001C                     	;# 
  5103  001D                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008C                     	;# 
  5109  008D                     	;# 
  5110  008E                     	;# 
  5111  008E                     	;# 
  5112  008F                     	;# 
  5113  0090                     	;# 
  5114  0090                     	;# 
  5115  0091                     	;# 
  5116  0093                     	;# 
  5117  0094                     	;# 
  5118  0095                     	;# 
  5119  0096                     	;# 
  5120  0097                     	;# 
  5121  0098                     	;# 
  5122  0099                     	;# 
  5123  009A                     	;# 
  5124  009B                     	;# 
  5125  009C                     	;# 
  5126  009D                     	;# 
  5127  009E                     	;# 
  5128  010C                     	;# 
  5129  010D                     	;# 
  5130  010E                     	;# 
  5131  010E                     	;# 
  5132  010F                     	;# 
  5133  0110                     	;# 
  5134  0110                     	;# 
  5135  0111                     	;# 
  5136  0112                     	;# 
  5137  0112                     	;# 
  5138  0113                     	;# 
  5139  0114                     	;# 
  5140  0114                     	;# 
  5141  0115                     	;# 
  5142  0116                     	;# 
  5143  0116                     	;# 
  5144  0117                     	;# 
  5145  0119                     	;# 
  5146  0119                     	;# 
  5147  0119                     	;# 
  5148  011A                     	;# 
  5149  011A                     	;# 
  5150  011A                     	;# 
  5151  011B                     	;# 
  5152  011B                     	;# 
  5153  011B                     	;# 
  5154  011B                     	;# 
  5155  011B                     	;# 
  5156  011C                     	;# 
  5157  011C                     	;# 
  5158  011C                     	;# 
  5159  011D                     	;# 
  5160  011D                     	;# 
  5161  011D                     	;# 
  5162  011E                     	;# 
  5163  011E                     	;# 
  5164  011E                     	;# 
  5165  011F                     	;# 
  5166  011F                     	;# 
  5167  011F                     	;# 
  5168  011F                     	;# 
  5169  011F                     	;# 
  5170  018C                     	;# 
  5171  018D                     	;# 
  5172  018E                     	;# 
  5173  018F                     	;# 
  5174  0190                     	;# 
  5175  0191                     	;# 
  5176  0192                     	;# 
  5177  0196                     	;# 
  5178  0197                     	;# 
  5179  0198                     	;# 
  5180  0199                     	;# 
  5181  019A                     	;# 
  5182  019B                     	;# 
  5183  019C                     	;# 
  5184  020C                     	;# 
  5185  020C                     	;# 
  5186  020D                     	;# 
  5187  020E                     	;# 
  5188  020F                     	;# 
  5189  020F                     	;# 
  5190  0210                     	;# 
  5191  0210                     	;# 
  5192  0211                     	;# 
  5193  0211                     	;# 
  5194  0212                     	;# 
  5195  0212                     	;# 
  5196  0213                     	;# 
  5197  0214                     	;# 
  5198  0215                     	;# 
  5199  0215                     	;# 
  5200  0216                     	;# 
  5201  0216                     	;# 
  5202  0217                     	;# 
  5203  0217                     	;# 
  5204  0218                     	;# 
  5205  0218                     	;# 
  5206  0219                     	;# 
  5207  021A                     	;# 
  5208  021B                     	;# 
  5209  021B                     	;# 
  5210  021C                     	;# 
  5211  021C                     	;# 
  5212  021D                     	;# 
  5213  021D                     	;# 
  5214  021E                     	;# 
  5215  021F                     	;# 
  5216  028C                     	;# 
  5217  028C                     	;# 
  5218  028D                     	;# 
  5219  028D                     	;# 
  5220  028E                     	;# 
  5221  028F                     	;# 
  5222  0290                     	;# 
  5223  0290                     	;# 
  5224  0291                     	;# 
  5225  0292                     	;# 
  5226  0292                     	;# 
  5227  0293                     	;# 
  5228  0293                     	;# 
  5229  0294                     	;# 
  5230  0295                     	;# 
  5231  0296                     	;# 
  5232  0296                     	;# 
  5233  0297                     	;# 
  5234  0298                     	;# 
  5235  0298                     	;# 
  5236  0299                     	;# 
  5237  0299                     	;# 
  5238  029A                     	;# 
  5239  029B                     	;# 
  5240  029C                     	;# 
  5241  029C                     	;# 
  5242  029D                     	;# 
  5243  030C                     	;# 
  5244  030C                     	;# 
  5245  030D                     	;# 
  5246  030E                     	;# 
  5247  030F                     	;# 
  5248  0310                     	;# 
  5249  0310                     	;# 
  5250  0311                     	;# 
  5251  0312                     	;# 
  5252  0313                     	;# 
  5253  0314                     	;# 
  5254  0314                     	;# 
  5255  0315                     	;# 
  5256  0316                     	;# 
  5257  0317                     	;# 
  5258  0318                     	;# 
  5259  0318                     	;# 
  5260  0319                     	;# 
  5261  031A                     	;# 
  5262  031B                     	;# 
  5263  031C                     	;# 
  5264  031C                     	;# 
  5265  031D                     	;# 
  5266  031E                     	;# 
  5267  031F                     	;# 
  5268  038C                     	;# 
  5269  038C                     	;# 
  5270  038D                     	;# 
  5271  038E                     	;# 
  5272  0390                     	;# 
  5273  0390                     	;# 
  5274  0391                     	;# 
  5275  0392                     	;# 
  5276  040C                     	;# 
  5277  040D                     	;# 
  5278  040E                     	;# 
  5279  040F                     	;# 
  5280  0410                     	;# 
  5281  0411                     	;# 
  5282  0416                     	;# 
  5283  0416                     	;# 
  5284  0417                     	;# 
  5285  0418                     	;# 
  5286  0418                     	;# 
  5287  0419                     	;# 
  5288  041A                     	;# 
  5289  041A                     	;# 
  5290  041B                     	;# 
  5291  041C                     	;# 
  5292  041C                     	;# 
  5293  041D                     	;# 
  5294  041E                     	;# 
  5295  041F                     	;# 
  5296  048C                     	;# 
  5297  048C                     	;# 
  5298  048D                     	;# 
  5299  048E                     	;# 
  5300  048F                     	;# 
  5301  048F                     	;# 
  5302  0490                     	;# 
  5303  0491                     	;# 
  5304  0492                     	;# 
  5305  0492                     	;# 
  5306  0493                     	;# 
  5307  0494                     	;# 
  5308  0495                     	;# 
  5309  0495                     	;# 
  5310  0496                     	;# 
  5311  0497                     	;# 
  5312  0498                     	;# 
  5313  0499                     	;# 
  5314  049A                     	;# 
  5315  049B                     	;# 
  5316  049C                     	;# 
  5317  049D                     	;# 
  5318  050C                     	;# 
  5319  050C                     	;# 
  5320  050D                     	;# 
  5321  050E                     	;# 
  5322  050F                     	;# 
  5323  050F                     	;# 
  5324  0510                     	;# 
  5325  0511                     	;# 
  5326  0512                     	;# 
  5327  0512                     	;# 
  5328  0513                     	;# 
  5329  0514                     	;# 
  5330  0515                     	;# 
  5331  0515                     	;# 
  5332  0516                     	;# 
  5333  0517                     	;# 
  5334  0518                     	;# 
  5335  0519                     	;# 
  5336  051A                     	;# 
  5337  051B                     	;# 
  5338  051C                     	;# 
  5339  051D                     	;# 
  5340  058C                     	;# 
  5341  058C                     	;# 
  5342  058D                     	;# 
  5343  058E                     	;# 
  5344  058F                     	;# 
  5345  058F                     	;# 
  5346  0590                     	;# 
  5347  0591                     	;# 
  5348  0592                     	;# 
  5349  0593                     	;# 
  5350  060C                     	;# 
  5351  060D                     	;# 
  5352  060E                     	;# 
  5353  060F                     	;# 
  5354  0610                     	;# 
  5355  0611                     	;# 
  5356  0612                     	;# 
  5357  0613                     	;# 
  5358  0614                     	;# 
  5359  0616                     	;# 
  5360  0617                     	;# 
  5361  0618                     	;# 
  5362  0619                     	;# 
  5363  061A                     	;# 
  5364  061B                     	;# 
  5365  061C                     	;# 
  5366  061D                     	;# 
  5367  061E                     	;# 
  5368  068C                     	;# 
  5369  068D                     	;# 
  5370  068E                     	;# 
  5371  068F                     	;# 
  5372  0690                     	;# 
  5373  0691                     	;# 
  5374  0692                     	;# 
  5375  0693                     	;# 
  5376  0694                     	;# 
  5377  070C                     	;# 
  5378  070D                     	;# 
  5379  070E                     	;# 
  5380  070F                     	;# 
  5381  0710                     	;# 
  5382  0711                     	;# 
  5383  0712                     	;# 
  5384  0713                     	;# 
  5385  0714                     	;# 
  5386  0716                     	;# 
  5387  0717                     	;# 
  5388  0718                     	;# 
  5389  0719                     	;# 
  5390  071A                     	;# 
  5391  071B                     	;# 
  5392  071C                     	;# 
  5393  071D                     	;# 
  5394  071E                     	;# 
  5395  0796                     	;# 
  5396  0797                     	;# 
  5397  0798                     	;# 
  5398  0799                     	;# 
  5399  079A                     	;# 
  5400  079B                     	;# 
  5401  080C                     	;# 
  5402  080D                     	;# 
  5403  080E                     	;# 
  5404  080F                     	;# 
  5405  0810                     	;# 
  5406  0811                     	;# 
  5407  0812                     	;# 
  5408  0813                     	;# 
  5409  0814                     	;# 
  5410  081A                     	;# 
  5411  081B                     	;# 
  5412  081C                     	;# 
  5413  081D                     	;# 
  5414  081E                     	;# 
  5415  081F                     	;# 
  5416  088C                     	;# 
  5417  088D                     	;# 
  5418  088E                     	;# 
  5419  088F                     	;# 
  5420  0890                     	;# 
  5421  0891                     	;# 
  5422  0892                     	;# 
  5423  0893                     	;# 
  5424  0895                     	;# 
  5425  0896                     	;# 
  5426  0897                     	;# 
  5427  0898                     	;# 
  5428  0899                     	;# 
  5429  089A                     	;# 
  5430  089B                     	;# 
  5431  090C                     	;# 
  5432  090E                     	;# 
  5433  090F                     	;# 
  5434  091F                     	;# 
  5435  091F                     	;# 
  5436  098F                     	;# 
  5437  098F                     	;# 
  5438  0990                     	;# 
  5439  0991                     	;# 
  5440  0992                     	;# 
  5441  0993                     	;# 
  5442  0994                     	;# 
  5443  0995                     	;# 
  5444  0996                     	;# 
  5445  0997                     	;# 
  5446  0E0F                     	;# 
  5447  0E10                     	;# 
  5448  0E11                     	;# 
  5449  0E12                     	;# 
  5450  0E13                     	;# 
  5451  0E14                     	;# 
  5452  0E15                     	;# 
  5453  0E16                     	;# 
  5454  0E17                     	;# 
  5455  0E18                     	;# 
  5456  0E19                     	;# 
  5457  0E1A                     	;# 
  5458  0E1B                     	;# 
  5459  0E1C                     	;# 
  5460  0E1D                     	;# 
  5461  0E1E                     	;# 
  5462  0E1F                     	;# 
  5463  0E20                     	;# 
  5464  0E21                     	;# 
  5465  0E22                     	;# 
  5466  0E23                     	;# 
  5467  0E24                     	;# 
  5468  0E25                     	;# 
  5469  0E26                     	;# 
  5470  0E27                     	;# 
  5471  0E28                     	;# 
  5472  0E29                     	;# 
  5473  0E2A                     	;# 
  5474  0E2B                     	;# 
  5475  0E2C                     	;# 
  5476  0E2D                     	;# 
  5477  0E2E                     	;# 
  5478  0E2F                     	;# 
  5479  0E30                     	;# 
  5480  0E31                     	;# 
  5481  0E32                     	;# 
  5482  0E33                     	;# 
  5483  0E34                     	;# 
  5484  0E35                     	;# 
  5485  0E36                     	;# 
  5486  0E37                     	;# 
  5487  0E8F                     	;# 
  5488  0E90                     	;# 
  5489  0E91                     	;# 
  5490  0E92                     	;# 
  5491  0E93                     	;# 
  5492  0E94                     	;# 
  5493  0E95                     	;# 
  5494  0E96                     	;# 
  5495  0E97                     	;# 
  5496  0E9C                     	;# 
  5497  0E9D                     	;# 
  5498  0E9E                     	;# 
  5499  0EA1                     	;# 
  5500  0EA2                     	;# 
  5501  0EA3                     	;# 
  5502  0EA4                     	;# 
  5503  0EA5                     	;# 
  5504  0EA9                     	;# 
  5505  0EAA                     	;# 
  5506  0EAB                     	;# 
  5507  0EAC                     	;# 
  5508  0EB1                     	;# 
  5509  0EB2                     	;# 
  5510  0EB3                     	;# 
  5511  0EB8                     	;# 
  5512  0EB9                     	;# 
  5513  0EBA                     	;# 
  5514  0EBB                     	;# 
  5515  0EBC                     	;# 
  5516  0EBD                     	;# 
  5517  0EBE                     	;# 
  5518  0EC3                     	;# 
  5519  0EC5                     	;# 
  5520  0EC6                     	;# 
  5521  0EC7                     	;# 
  5522  0EC8                     	;# 
  5523  0EC9                     	;# 
  5524  0ECA                     	;# 
  5525  0ECB                     	;# 
  5526  0ECC                     	;# 
  5527  0F10                     	;# 
  5528  0F11                     	;# 
  5529  0F12                     	;# 
  5530  0F13                     	;# 
  5531  0F14                     	;# 
  5532  0F15                     	;# 
  5533  0F16                     	;# 
  5534  0F17                     	;# 
  5535  0F18                     	;# 
  5536  0F19                     	;# 
  5537  0F1A                     	;# 
  5538  0F1B                     	;# 
  5539  0F1C                     	;# 
  5540  0F1D                     	;# 
  5541  0F1E                     	;# 
  5542  0F1F                     	;# 
  5543  0F20                     	;# 
  5544  0F21                     	;# 
  5545  0F22                     	;# 
  5546  0F23                     	;# 
  5547  0F24                     	;# 
  5548  0F25                     	;# 
  5549  0F26                     	;# 
  5550  0F27                     	;# 
  5551  0F28                     	;# 
  5552  0F29                     	;# 
  5553  0F2A                     	;# 
  5554  0F2B                     	;# 
  5555  0F2C                     	;# 
  5556  0F2D                     	;# 
  5557  0F2E                     	;# 
  5558  0F2F                     	;# 
  5559  0F30                     	;# 
  5560  0F31                     	;# 
  5561  0F32                     	;# 
  5562  0F38                     	;# 
  5563  0F39                     	;# 
  5564  0F3A                     	;# 
  5565  0F3B                     	;# 
  5566  0F3C                     	;# 
  5567  0F3D                     	;# 
  5568  0F3E                     	;# 
  5569  0F3F                     	;# 
  5570  0F40                     	;# 
  5571  0F41                     	;# 
  5572  0F43                     	;# 
  5573  0F44                     	;# 
  5574  0F45                     	;# 
  5575  0F46                     	;# 
  5576  0F47                     	;# 
  5577  0F48                     	;# 
  5578  0F49                     	;# 
  5579  0F4A                     	;# 
  5580  0F4B                     	;# 
  5581  0F4C                     	;# 
  5582  0F4E                     	;# 
  5583  0F4F                     	;# 
  5584  0F50                     	;# 
  5585  0F51                     	;# 
  5586  0F52                     	;# 
  5587  0F53                     	;# 
  5588  0F54                     	;# 
  5589  0F55                     	;# 
  5590  0F56                     	;# 
  5591  0F57                     	;# 
  5592  0F59                     	;# 
  5593  0F5A                     	;# 
  5594  0F5B                     	;# 
  5595  0F5C                     	;# 
  5596  0F5D                     	;# 
  5597  0F61                     	;# 
  5598  0F62                     	;# 
  5599  0F64                     	;# 
  5600  0F65                     	;# 
  5601  0F66                     	;# 
  5602  0F67                     	;# 
  5603  0F68                     	;# 
  5604  0F69                     	;# 
  5605  0F6A                     	;# 
  5606  0F6B                     	;# 
  5607  0F6C                     	;# 
  5608  0F6D                     	;# 
  5609  0FE4                     	;# 
  5610  0FE5                     	;# 
  5611  0FE6                     	;# 
  5612  0FE7                     	;# 
  5613  0FE8                     	;# 
  5614  0FE9                     	;# 
  5615  0FEA                     	;# 
  5616  0FEB                     	;# 
  5617  0FED                     	;# 
  5618  0FEE                     	;# 
  5619  0FEF                     	;# 
  5620  0000                     	;# 
  5621  0001                     	;# 
  5622  0002                     	;# 
  5623  0003                     	;# 
  5624  0004                     	;# 
  5625  0005                     	;# 
  5626  0006                     	;# 
  5627  0007                     	;# 
  5628  0008                     	;# 
  5629  0009                     	;# 
  5630  000A                     	;# 
  5631  000B                     	;# 
  5632  000C                     	;# 
  5633  000D                     	;# 
  5634  000E                     	;# 
  5635  000F                     	;# 
  5636  0010                     	;# 
  5637  0011                     	;# 
  5638  0012                     	;# 
  5639  0013                     	;# 
  5640  0014                     	;# 
  5641  0015                     	;# 
  5642  0016                     	;# 
  5643  0017                     	;# 
  5644  0018                     	;# 
  5645  0019                     	;# 
  5646  001A                     	;# 
  5647  001C                     	;# 
  5648  001C                     	;# 
  5649  001D                     	;# 
  5650  001D                     	;# 
  5651  001E                     	;# 
  5652  001F                     	;# 
  5653  008C                     	;# 
  5654  008C                     	;# 
  5655  008D                     	;# 
  5656  008E                     	;# 
  5657  008E                     	;# 
  5658  008F                     	;# 
  5659  0090                     	;# 
  5660  0090                     	;# 
  5661  0091                     	;# 
  5662  0093                     	;# 
  5663  0094                     	;# 
  5664  0095                     	;# 
  5665  0096                     	;# 
  5666  0097                     	;# 
  5667  0098                     	;# 
  5668  0099                     	;# 
  5669  009A                     	;# 
  5670  009B                     	;# 
  5671  009C                     	;# 
  5672  009D                     	;# 
  5673  009E                     	;# 
  5674  010C                     	;# 
  5675  010D                     	;# 
  5676  010E                     	;# 
  5677  010E                     	;# 
  5678  010F                     	;# 
  5679  0110                     	;# 
  5680  0110                     	;# 
  5681  0111                     	;# 
  5682  0112                     	;# 
  5683  0112                     	;# 
  5684  0113                     	;# 
  5685  0114                     	;# 
  5686  0114                     	;# 
  5687  0115                     	;# 
  5688  0116                     	;# 
  5689  0116                     	;# 
  5690  0117                     	;# 
  5691  0119                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  011A                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011B                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011C                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011D                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011E                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011F                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  018C                     	;# 
  5717  018D                     	;# 
  5718  018E                     	;# 
  5719  018F                     	;# 
  5720  0190                     	;# 
  5721  0191                     	;# 
  5722  0192                     	;# 
  5723  0196                     	;# 
  5724  0197                     	;# 
  5725  0198                     	;# 
  5726  0199                     	;# 
  5727  019A                     	;# 
  5728  019B                     	;# 
  5729  019C                     	;# 
  5730  020C                     	;# 
  5731  020C                     	;# 
  5732  020D                     	;# 
  5733  020E                     	;# 
  5734  020F                     	;# 
  5735  020F                     	;# 
  5736  0210                     	;# 
  5737  0210                     	;# 
  5738  0211                     	;# 
  5739  0211                     	;# 
  5740  0212                     	;# 
  5741  0212                     	;# 
  5742  0213                     	;# 
  5743  0214                     	;# 
  5744  0215                     	;# 
  5745  0215                     	;# 
  5746  0216                     	;# 
  5747  0216                     	;# 
  5748  0217                     	;# 
  5749  0217                     	;# 
  5750  0218                     	;# 
  5751  0218                     	;# 
  5752  0219                     	;# 
  5753  021A                     	;# 
  5754  021B                     	;# 
  5755  021B                     	;# 
  5756  021C                     	;# 
  5757  021C                     	;# 
  5758  021D                     	;# 
  5759  021D                     	;# 
  5760  021E                     	;# 
  5761  021F                     	;# 
  5762  028C                     	;# 
  5763  028C                     	;# 
  5764  028D                     	;# 
  5765  028D                     	;# 
  5766  028E                     	;# 
  5767  028F                     	;# 
  5768  0290                     	;# 
  5769  0290                     	;# 
  5770  0291                     	;# 
  5771  0292                     	;# 
  5772  0292                     	;# 
  5773  0293                     	;# 
  5774  0293                     	;# 
  5775  0294                     	;# 
  5776  0295                     	;# 
  5777  0296                     	;# 
  5778  0296                     	;# 
  5779  0297                     	;# 
  5780  0298                     	;# 
  5781  0298                     	;# 
  5782  0299                     	;# 
  5783  0299                     	;# 
  5784  029A                     	;# 
  5785  029B                     	;# 
  5786  029C                     	;# 
  5787  029C                     	;# 
  5788  029D                     	;# 
  5789  030C                     	;# 
  5790  030C                     	;# 
  5791  030D                     	;# 
  5792  030E                     	;# 
  5793  030F                     	;# 
  5794  0310                     	;# 
  5795  0310                     	;# 
  5796  0311                     	;# 
  5797  0312                     	;# 
  5798  0313                     	;# 
  5799  0314                     	;# 
  5800  0314                     	;# 
  5801  0315                     	;# 
  5802  0316                     	;# 
  5803  0317                     	;# 
  5804  0318                     	;# 
  5805  0318                     	;# 
  5806  0319                     	;# 
  5807  031A                     	;# 
  5808  031B                     	;# 
  5809  031C                     	;# 
  5810  031C                     	;# 
  5811  031D                     	;# 
  5812  031E                     	;# 
  5813  031F                     	;# 
  5814  038C                     	;# 
  5815  038C                     	;# 
  5816  038D                     	;# 
  5817  038E                     	;# 
  5818  0390                     	;# 
  5819  0390                     	;# 
  5820  0391                     	;# 
  5821  0392                     	;# 
  5822  040C                     	;# 
  5823  040D                     	;# 
  5824  040E                     	;# 
  5825  040F                     	;# 
  5826  0410                     	;# 
  5827  0411                     	;# 
  5828  0416                     	;# 
  5829  0416                     	;# 
  5830  0417                     	;# 
  5831  0418                     	;# 
  5832  0418                     	;# 
  5833  0419                     	;# 
  5834  041A                     	;# 
  5835  041A                     	;# 
  5836  041B                     	;# 
  5837  041C                     	;# 
  5838  041C                     	;# 
  5839  041D                     	;# 
  5840  041E                     	;# 
  5841  041F                     	;# 
  5842  048C                     	;# 
  5843  048C                     	;# 
  5844  048D                     	;# 
  5845  048E                     	;# 
  5846  048F                     	;# 
  5847  048F                     	;# 
  5848  0490                     	;# 
  5849  0491                     	;# 
  5850  0492                     	;# 
  5851  0492                     	;# 
  5852  0493                     	;# 
  5853  0494                     	;# 
  5854  0495                     	;# 
  5855  0495                     	;# 
  5856  0496                     	;# 
  5857  0497                     	;# 
  5858  0498                     	;# 
  5859  0499                     	;# 
  5860  049A                     	;# 
  5861  049B                     	;# 
  5862  049C                     	;# 
  5863  049D                     	;# 
  5864  050C                     	;# 
  5865  050C                     	;# 
  5866  050D                     	;# 
  5867  050E                     	;# 
  5868  050F                     	;# 
  5869  050F                     	;# 
  5870  0510                     	;# 
  5871  0511                     	;# 
  5872  0512                     	;# 
  5873  0512                     	;# 
  5874  0513                     	;# 
  5875  0514                     	;# 
  5876  0515                     	;# 
  5877  0515                     	;# 
  5878  0516                     	;# 
  5879  0517                     	;# 
  5880  0518                     	;# 
  5881  0519                     	;# 
  5882  051A                     	;# 
  5883  051B                     	;# 
  5884  051C                     	;# 
  5885  051D                     	;# 
  5886  058C                     	;# 
  5887  058C                     	;# 
  5888  058D                     	;# 
  5889  058E                     	;# 
  5890  058F                     	;# 
  5891  058F                     	;# 
  5892  0590                     	;# 
  5893  0591                     	;# 
  5894  0592                     	;# 
  5895  0593                     	;# 
  5896  060C                     	;# 
  5897  060D                     	;# 
  5898  060E                     	;# 
  5899  060F                     	;# 
  5900  0610                     	;# 
  5901  0611                     	;# 
  5902  0612                     	;# 
  5903  0613                     	;# 
  5904  0614                     	;# 
  5905  0616                     	;# 
  5906  0617                     	;# 
  5907  0618                     	;# 
  5908  0619                     	;# 
  5909  061A                     	;# 
  5910  061B                     	;# 
  5911  061C                     	;# 
  5912  061D                     	;# 
  5913  061E                     	;# 
  5914  068C                     	;# 
  5915  068D                     	;# 
  5916  068E                     	;# 
  5917  068F                     	;# 
  5918  0690                     	;# 
  5919  0691                     	;# 
  5920  0692                     	;# 
  5921  0693                     	;# 
  5922  0694                     	;# 
  5923  070C                     	;# 
  5924  070D                     	;# 
  5925  070E                     	;# 
  5926  070F                     	;# 
  5927  0710                     	;# 
  5928  0711                     	;# 
  5929  0712                     	;# 
  5930  0713                     	;# 
  5931  0714                     	;# 
  5932  0716                     	;# 
  5933  0717                     	;# 
  5934  0718                     	;# 
  5935  0719                     	;# 
  5936  071A                     	;# 
  5937  071B                     	;# 
  5938  071C                     	;# 
  5939  071D                     	;# 
  5940  071E                     	;# 
  5941  0796                     	;# 
  5942  0797                     	;# 
  5943  0798                     	;# 
  5944  0799                     	;# 
  5945  079A                     	;# 
  5946  079B                     	;# 
  5947  080C                     	;# 
  5948  080D                     	;# 
  5949  080E                     	;# 
  5950  080F                     	;# 
  5951  0810                     	;# 
  5952  0811                     	;# 
  5953  0812                     	;# 
  5954  0813                     	;# 
  5955  0814                     	;# 
  5956  081A                     	;# 
  5957  081B                     	;# 
  5958  081C                     	;# 
  5959  081D                     	;# 
  5960  081E                     	;# 
  5961  081F                     	;# 
  5962  088C                     	;# 
  5963  088D                     	;# 
  5964  088E                     	;# 
  5965  088F                     	;# 
  5966  0890                     	;# 
  5967  0891                     	;# 
  5968  0892                     	;# 
  5969  0893                     	;# 
  5970  0895                     	;# 
  5971  0896                     	;# 
  5972  0897                     	;# 
  5973  0898                     	;# 
  5974  0899                     	;# 
  5975  089A                     	;# 
  5976  089B                     	;# 
  5977  090C                     	;# 
  5978  090E                     	;# 
  5979  090F                     	;# 
  5980  091F                     	;# 
  5981  091F                     	;# 
  5982  098F                     	;# 
  5983  098F                     	;# 
  5984  0990                     	;# 
  5985  0991                     	;# 
  5986  0992                     	;# 
  5987  0993                     	;# 
  5988  0994                     	;# 
  5989  0995                     	;# 
  5990  0996                     	;# 
  5991  0997                     	;# 
  5992  0E0F                     	;# 
  5993  0E10                     	;# 
  5994  0E11                     	;# 
  5995  0E12                     	;# 
  5996  0E13                     	;# 
  5997  0E14                     	;# 
  5998  0E15                     	;# 
  5999  0E16                     	;# 
  6000  0E17                     	;# 
  6001  0E18                     	;# 
  6002  0E19                     	;# 
  6003  0E1A                     	;# 
  6004  0E1B                     	;# 
  6005  0E1C                     	;# 
  6006  0E1D                     	;# 
  6007  0E1E                     	;# 
  6008  0E1F                     	;# 
  6009  0E20                     	;# 
  6010  0E21                     	;# 
  6011  0E22                     	;# 
  6012  0E23                     	;# 
  6013  0E24                     	;# 
  6014  0E25                     	;# 
  6015  0E26                     	;# 
  6016  0E27                     	;# 
  6017  0E28                     	;# 
  6018  0E29                     	;# 
  6019  0E2A                     	;# 
  6020  0E2B                     	;# 
  6021  0E2C                     	;# 
  6022  0E2D                     	;# 
  6023  0E2E                     	;# 
  6024  0E2F                     	;# 
  6025  0E30                     	;# 
  6026  0E31                     	;# 
  6027  0E32                     	;# 
  6028  0E33                     	;# 
  6029  0E34                     	;# 
  6030  0E35                     	;# 
  6031  0E36                     	;# 
  6032  0E37                     	;# 
  6033  0E8F                     	;# 
  6034  0E90                     	;# 
  6035  0E91                     	;# 
  6036  0E92                     	;# 
  6037  0E93                     	;# 
  6038  0E94                     	;# 
  6039  0E95                     	;# 
  6040  0E96                     	;# 
  6041  0E97                     	;# 
  6042  0E9C                     	;# 
  6043  0E9D                     	;# 
  6044  0E9E                     	;# 
  6045  0EA1                     	;# 
  6046  0EA2                     	;# 
  6047  0EA3                     	;# 
  6048  0EA4                     	;# 
  6049  0EA5                     	;# 
  6050  0EA9                     	;# 
  6051  0EAA                     	;# 
  6052  0EAB                     	;# 
  6053  0EAC                     	;# 
  6054  0EB1                     	;# 
  6055  0EB2                     	;# 
  6056  0EB3                     	;# 
  6057  0EB8                     	;# 
  6058  0EB9                     	;# 
  6059  0EBA                     	;# 
  6060  0EBB                     	;# 
  6061  0EBC                     	;# 
  6062  0EBD                     	;# 
  6063  0EBE                     	;# 
  6064  0EC3                     	;# 
  6065  0EC5                     	;# 
  6066  0EC6                     	;# 
  6067  0EC7                     	;# 
  6068  0EC8                     	;# 
  6069  0EC9                     	;# 
  6070  0ECA                     	;# 
  6071  0ECB                     	;# 
  6072  0ECC                     	;# 
  6073  0F10                     	;# 
  6074  0F11                     	;# 
  6075  0F12                     	;# 
  6076  0F13                     	;# 
  6077  0F14                     	;# 
  6078  0F15                     	;# 
  6079  0F16                     	;# 
  6080  0F17                     	;# 
  6081  0F18                     	;# 
  6082  0F19                     	;# 
  6083  0F1A                     	;# 
  6084  0F1B                     	;# 
  6085  0F1C                     	;# 
  6086  0F1D                     	;# 
  6087  0F1E                     	;# 
  6088  0F1F                     	;# 
  6089  0F20                     	;# 
  6090  0F21                     	;# 
  6091  0F22                     	;# 
  6092  0F23                     	;# 
  6093  0F24                     	;# 
  6094  0F25                     	;# 
  6095  0F26                     	;# 
  6096  0F27                     	;# 
  6097  0F28                     	;# 
  6098  0F29                     	;# 
  6099  0F2A                     	;# 
  6100  0F2B                     	;# 
  6101  0F2C                     	;# 
  6102  0F2D                     	;# 
  6103  0F2E                     	;# 
  6104  0F2F                     	;# 
  6105  0F30                     	;# 
  6106  0F31                     	;# 
  6107  0F32                     	;# 
  6108  0F38                     	;# 
  6109  0F39                     	;# 
  6110  0F3A                     	;# 
  6111  0F3B                     	;# 
  6112  0F3C                     	;# 
  6113  0F3D                     	;# 
  6114  0F3E                     	;# 
  6115  0F3F                     	;# 
  6116  0F40                     	;# 
  6117  0F41                     	;# 
  6118  0F43                     	;# 
  6119  0F44                     	;# 
  6120  0F45                     	;# 
  6121  0F46                     	;# 
  6122  0F47                     	;# 
  6123  0F48                     	;# 
  6124  0F49                     	;# 
  6125  0F4A                     	;# 
  6126  0F4B                     	;# 
  6127  0F4C                     	;# 
  6128  0F4E                     	;# 
  6129  0F4F                     	;# 
  6130  0F50                     	;# 
  6131  0F51                     	;# 
  6132  0F52                     	;# 
  6133  0F53                     	;# 
  6134  0F54                     	;# 
  6135  0F55                     	;# 
  6136  0F56                     	;# 
  6137  0F57                     	;# 
  6138  0F59                     	;# 
  6139  0F5A                     	;# 
  6140  0F5B                     	;# 
  6141  0F5C                     	;# 
  6142  0F5D                     	;# 
  6143  0F61                     	;# 
  6144  0F62                     	;# 
  6145  0F64                     	;# 
  6146  0F65                     	;# 
  6147  0F66                     	;# 
  6148  0F67                     	;# 
  6149  0F68                     	;# 
  6150  0F69                     	;# 
  6151  0F6A                     	;# 
  6152  0F6B                     	;# 
  6153  0F6C                     	;# 
  6154  0F6D                     	;# 
  6155  0FE4                     	;# 
  6156  0FE5                     	;# 
  6157  0FE6                     	;# 
  6158  0FE7                     	;# 
  6159  0FE8                     	;# 
  6160  0FE9                     	;# 
  6161  0FEA                     	;# 
  6162  0FEB                     	;# 
  6163  0FED                     	;# 
  6164  0FEE                     	;# 
  6165  0FEF                     	;# 
  6166  0000                     	;# 
  6167  0001                     	;# 
  6168  0002                     	;# 
  6169  0003                     	;# 
  6170  0004                     	;# 
  6171  0005                     	;# 
  6172  0006                     	;# 
  6173  0007                     	;# 
  6174  0008                     	;# 
  6175  0009                     	;# 
  6176  000A                     	;# 
  6177  000B                     	;# 
  6178  000C                     	;# 
  6179  000D                     	;# 
  6180  000E                     	;# 
  6181  000F                     	;# 
  6182  0010                     	;# 
  6183  0011                     	;# 
  6184  0012                     	;# 
  6185  0013                     	;# 
  6186  0014                     	;# 
  6187  0015                     	;# 
  6188  0016                     	;# 
  6189  0017                     	;# 
  6190  0018                     	;# 
  6191  0019                     	;# 
  6192  001A                     	;# 
  6193  001C                     	;# 
  6194  001C                     	;# 
  6195  001D                     	;# 
  6196  001D                     	;# 
  6197  001E                     	;# 
  6198  001F                     	;# 
  6199  008C                     	;# 
  6200  008C                     	;# 
  6201  008D                     	;# 
  6202  008E                     	;# 
  6203  008E                     	;# 
  6204  008F                     	;# 
  6205  0090                     	;# 
  6206  0090                     	;# 
  6207  0091                     	;# 
  6208  0093                     	;# 
  6209  0094                     	;# 
  6210  0095                     	;# 
  6211  0096                     	;# 
  6212  0097                     	;# 
  6213  0098                     	;# 
  6214  0099                     	;# 
  6215  009A                     	;# 
  6216  009B                     	;# 
  6217  009C                     	;# 
  6218  009D                     	;# 
  6219  009E                     	;# 
  6220  010C                     	;# 
  6221  010D                     	;# 
  6222  010E                     	;# 
  6223  010E                     	;# 
  6224  010F                     	;# 
  6225  0110                     	;# 
  6226  0110                     	;# 
  6227  0111                     	;# 
  6228  0112                     	;# 
  6229  0112                     	;# 
  6230  0113                     	;# 
  6231  0114                     	;# 
  6232  0114                     	;# 
  6233  0115                     	;# 
  6234  0116                     	;# 
  6235  0116                     	;# 
  6236  0117                     	;# 
  6237  0119                     	;# 
  6238  0119                     	;# 
  6239  0119                     	;# 
  6240  011A                     	;# 
  6241  011A                     	;# 
  6242  011A                     	;# 
  6243  011B                     	;# 
  6244  011B                     	;# 
  6245  011B                     	;# 
  6246  011B                     	;# 
  6247  011B                     	;# 
  6248  011C                     	;# 
  6249  011C                     	;# 
  6250  011C                     	;# 
  6251  011D                     	;# 
  6252  011D                     	;# 
  6253  011D                     	;# 
  6254  011E                     	;# 
  6255  011E                     	;# 
  6256  011E                     	;# 
  6257  011F                     	;# 
  6258  011F                     	;# 
  6259  011F                     	;# 
  6260  011F                     	;# 
  6261  011F                     	;# 
  6262  018C                     	;# 
  6263  018D                     	;# 
  6264  018E                     	;# 
  6265  018F                     	;# 
  6266  0190                     	;# 
  6267  0191                     	;# 
  6268  0192                     	;# 
  6269  0196                     	;# 
  6270  0197                     	;# 
  6271  0198                     	;# 
  6272  0199                     	;# 
  6273  019A                     	;# 
  6274  019B                     	;# 
  6275  019C                     	;# 
  6276  020C                     	;# 
  6277  020C                     	;# 
  6278  020D                     	;# 
  6279  020E                     	;# 
  6280  020F                     	;# 
  6281  020F                     	;# 
  6282  0210                     	;# 
  6283  0210                     	;# 
  6284  0211                     	;# 
  6285  0211                     	;# 
  6286  0212                     	;# 
  6287  0212                     	;# 
  6288  0213                     	;# 
  6289  0214                     	;# 
  6290  0215                     	;# 
  6291  0215                     	;# 
  6292  0216                     	;# 
  6293  0216                     	;# 
  6294  0217                     	;# 
  6295  0217                     	;# 
  6296  0218                     	;# 
  6297  0218                     	;# 
  6298  0219                     	;# 
  6299  021A                     	;# 
  6300  021B                     	;# 
  6301  021B                     	;# 
  6302  021C                     	;# 
  6303  021C                     	;# 
  6304  021D                     	;# 
  6305  021D                     	;# 
  6306  021E                     	;# 
  6307  021F                     	;# 
  6308  028C                     	;# 
  6309  028C                     	;# 
  6310  028D                     	;# 
  6311  028D                     	;# 
  6312  028E                     	;# 
  6313  028F                     	;# 
  6314  0290                     	;# 
  6315  0290                     	;# 
  6316  0291                     	;# 
  6317  0292                     	;# 
  6318  0292                     	;# 
  6319  0293                     	;# 
  6320  0293                     	;# 
  6321  0294                     	;# 
  6322  0295                     	;# 
  6323  0296                     	;# 
  6324  0296                     	;# 
  6325  0297                     	;# 
  6326  0298                     	;# 
  6327  0298                     	;# 
  6328  0299                     	;# 
  6329  0299                     	;# 
  6330  029A                     	;# 
  6331  029B                     	;# 
  6332  029C                     	;# 
  6333  029C                     	;# 
  6334  029D                     	;# 
  6335  030C                     	;# 
  6336  030C                     	;# 
  6337  030D                     	;# 
  6338  030E                     	;# 
  6339  030F                     	;# 
  6340  0310                     	;# 
  6341  0310                     	;# 
  6342  0311                     	;# 
  6343  0312                     	;# 
  6344  0313                     	;# 
  6345  0314                     	;# 
  6346  0314                     	;# 
  6347  0315                     	;# 
  6348  0316                     	;# 
  6349  0317                     	;# 
  6350  0318                     	;# 
  6351  0318                     	;# 
  6352  0319                     	;# 
  6353  031A                     	;# 
  6354  031B                     	;# 
  6355  031C                     	;# 
  6356  031C                     	;# 
  6357  031D                     	;# 
  6358  031E                     	;# 
  6359  031F                     	;# 
  6360  038C                     	;# 
  6361  038C                     	;# 
  6362  038D                     	;# 
  6363  038E                     	;# 
  6364  0390                     	;# 
  6365  0390                     	;# 
  6366  0391                     	;# 
  6367  0392                     	;# 
  6368  040C                     	;# 
  6369  040D                     	;# 
  6370  040E                     	;# 
  6371  040F                     	;# 
  6372  0410                     	;# 
  6373  0411                     	;# 
  6374  0416                     	;# 
  6375  0416                     	;# 
  6376  0417                     	;# 
  6377  0418                     	;# 
  6378  0418                     	;# 
  6379  0419                     	;# 
  6380  041A                     	;# 
  6381  041A                     	;# 
  6382  041B                     	;# 
  6383  041C                     	;# 
  6384  041C                     	;# 
  6385  041D                     	;# 
  6386  041E                     	;# 
  6387  041F                     	;# 
  6388  048C                     	;# 
  6389  048C                     	;# 
  6390  048D                     	;# 
  6391  048E                     	;# 
  6392  048F                     	;# 
  6393  048F                     	;# 
  6394  0490                     	;# 
  6395  0491                     	;# 
  6396  0492                     	;# 
  6397  0492                     	;# 
  6398  0493                     	;# 
  6399  0494                     	;# 
  6400  0495                     	;# 
  6401  0495                     	;# 
  6402  0496                     	;# 
  6403  0497                     	;# 
  6404  0498                     	;# 
  6405  0499                     	;# 
  6406  049A                     	;# 
  6407  049B                     	;# 
  6408  049C                     	;# 
  6409  049D                     	;# 
  6410  050C                     	;# 
  6411  050C                     	;# 
  6412  050D                     	;# 
  6413  050E                     	;# 
  6414  050F                     	;# 
  6415  050F                     	;# 
  6416  0510                     	;# 
  6417  0511                     	;# 
  6418  0512                     	;# 
  6419  0512                     	;# 
  6420  0513                     	;# 
  6421  0514                     	;# 
  6422  0515                     	;# 
  6423  0515                     	;# 
  6424  0516                     	;# 
  6425  0517                     	;# 
  6426  0518                     	;# 
  6427  0519                     	;# 
  6428  051A                     	;# 
  6429  051B                     	;# 
  6430  051C                     	;# 
  6431  051D                     	;# 
  6432  058C                     	;# 
  6433  058C                     	;# 
  6434  058D                     	;# 
  6435  058E                     	;# 
  6436  058F                     	;# 
  6437  058F                     	;# 
  6438  0590                     	;# 
  6439  0591                     	;# 
  6440  0592                     	;# 
  6441  0593                     	;# 
  6442  060C                     	;# 
  6443  060D                     	;# 
  6444  060E                     	;# 
  6445  060F                     	;# 
  6446  0610                     	;# 
  6447  0611                     	;# 
  6448  0612                     	;# 
  6449  0613                     	;# 
  6450  0614                     	;# 
  6451  0616                     	;# 
  6452  0617                     	;# 
  6453  0618                     	;# 
  6454  0619                     	;# 
  6455  061A                     	;# 
  6456  061B                     	;# 
  6457  061C                     	;# 
  6458  061D                     	;# 
  6459  061E                     	;# 
  6460  068C                     	;# 
  6461  068D                     	;# 
  6462  068E                     	;# 
  6463  068F                     	;# 
  6464  0690                     	;# 
  6465  0691                     	;# 
  6466  0692                     	;# 
  6467  0693                     	;# 
  6468  0694                     	;# 
  6469  070C                     	;# 
  6470  070D                     	;# 
  6471  070E                     	;# 
  6472  070F                     	;# 
  6473  0710                     	;# 
  6474  0711                     	;# 
  6475  0712                     	;# 
  6476  0713                     	;# 
  6477  0714                     	;# 
  6478  0716                     	;# 
  6479  0717                     	;# 
  6480  0718                     	;# 
  6481  0719                     	;# 
  6482  071A                     	;# 
  6483  071B                     	;# 
  6484  071C                     	;# 
  6485  071D                     	;# 
  6486  071E                     	;# 
  6487  0796                     	;# 
  6488  0797                     	;# 
  6489  0798                     	;# 
  6490  0799                     	;# 
  6491  079A                     	;# 
  6492  079B                     	;# 
  6493  080C                     	;# 
  6494  080D                     	;# 
  6495  080E                     	;# 
  6496  080F                     	;# 
  6497  0810                     	;# 
  6498  0811                     	;# 
  6499  0812                     	;# 
  6500  0813                     	;# 
  6501  0814                     	;# 
  6502  081A                     	;# 
  6503  081B                     	;# 
  6504  081C                     	;# 
  6505  081D                     	;# 
  6506  081E                     	;# 
  6507  081F                     	;# 
  6508  088C                     	;# 
  6509  088D                     	;# 
  6510  088E                     	;# 
  6511  088F                     	;# 
  6512  0890                     	;# 
  6513  0891                     	;# 
  6514  0892                     	;# 
  6515  0893                     	;# 
  6516  0895                     	;# 
  6517  0896                     	;# 
  6518  0897                     	;# 
  6519  0898                     	;# 
  6520  0899                     	;# 
  6521  089A                     	;# 
  6522  089B                     	;# 
  6523  090C                     	;# 
  6524  090E                     	;# 
  6525  090F                     	;# 
  6526  091F                     	;# 
  6527  091F                     	;# 
  6528  098F                     	;# 
  6529  098F                     	;# 
  6530  0990                     	;# 
  6531  0991                     	;# 
  6532  0992                     	;# 
  6533  0993                     	;# 
  6534  0994                     	;# 
  6535  0995                     	;# 
  6536  0996                     	;# 
  6537  0997                     	;# 
  6538  0E0F                     	;# 
  6539  0E10                     	;# 
  6540  0E11                     	;# 
  6541  0E12                     	;# 
  6542  0E13                     	;# 
  6543  0E14                     	;# 
  6544  0E15                     	;# 
  6545  0E16                     	;# 
  6546  0E17                     	;# 
  6547  0E18                     	;# 
  6548  0E19                     	;# 
  6549  0E1A                     	;# 
  6550  0E1B                     	;# 
  6551  0E1C                     	;# 
  6552  0E1D                     	;# 
  6553  0E1E                     	;# 
  6554  0E1F                     	;# 
  6555  0E20                     	;# 
  6556  0E21                     	;# 
  6557  0E22                     	;# 
  6558  0E23                     	;# 
  6559  0E24                     	;# 
  6560  0E25                     	;# 
  6561  0E26                     	;# 
  6562  0E27                     	;# 
  6563  0E28                     	;# 
  6564  0E29                     	;# 
  6565  0E2A                     	;# 
  6566  0E2B                     	;# 
  6567  0E2C                     	;# 
  6568  0E2D                     	;# 
  6569  0E2E                     	;# 
  6570  0E2F                     	;# 
  6571  0E30                     	;# 
  6572  0E31                     	;# 
  6573  0E32                     	;# 
  6574  0E33                     	;# 
  6575  0E34                     	;# 
  6576  0E35                     	;# 
  6577  0E36                     	;# 
  6578  0E37                     	;# 
  6579  0E8F                     	;# 
  6580  0E90                     	;# 
  6581  0E91                     	;# 
  6582  0E92                     	;# 
  6583  0E93                     	;# 
  6584  0E94                     	;# 
  6585  0E95                     	;# 
  6586  0E96                     	;# 
  6587  0E97                     	;# 
  6588  0E9C                     	;# 
  6589  0E9D                     	;# 
  6590  0E9E                     	;# 
  6591  0EA1                     	;# 
  6592  0EA2                     	;# 
  6593  0EA3                     	;# 
  6594  0EA4                     	;# 
  6595  0EA5                     	;# 
  6596  0EA9                     	;# 
  6597  0EAA                     	;# 
  6598  0EAB                     	;# 
  6599  0EAC                     	;# 
  6600  0EB1                     	;# 
  6601  0EB2                     	;# 
  6602  0EB3                     	;# 
  6603  0EB8                     	;# 
  6604  0EB9                     	;# 
  6605  0EBA                     	;# 
  6606  0EBB                     	;# 
  6607  0EBC                     	;# 
  6608  0EBD                     	;# 
  6609  0EBE                     	;# 
  6610  0EC3                     	;# 
  6611  0EC5                     	;# 
  6612  0EC6                     	;# 
  6613  0EC7                     	;# 
  6614  0EC8                     	;# 
  6615  0EC9                     	;# 
  6616  0ECA                     	;# 
  6617  0ECB                     	;# 
  6618  0ECC                     	;# 
  6619  0F10                     	;# 
  6620  0F11                     	;# 
  6621  0F12                     	;# 
  6622  0F13                     	;# 
  6623  0F14                     	;# 
  6624  0F15                     	;# 
  6625  0F16                     	;# 
  6626  0F17                     	;# 
  6627  0F18                     	;# 
  6628  0F19                     	;# 
  6629  0F1A                     	;# 
  6630  0F1B                     	;# 
  6631  0F1C                     	;# 
  6632  0F1D                     	;# 
  6633  0F1E                     	;# 
  6634  0F1F                     	;# 
  6635  0F20                     	;# 
  6636  0F21                     	;# 
  6637  0F22                     	;# 
  6638  0F23                     	;# 
  6639  0F24                     	;# 
  6640  0F25                     	;# 
  6641  0F26                     	;# 
  6642  0F27                     	;# 
  6643  0F28                     	;# 
  6644  0F29                     	;# 
  6645  0F2A                     	;# 
  6646  0F2B                     	;# 
  6647  0F2C                     	;# 
  6648  0F2D                     	;# 
  6649  0F2E                     	;# 
  6650  0F2F                     	;# 
  6651  0F30                     	;# 
  6652  0F31                     	;# 
  6653  0F32                     	;# 
  6654  0F38                     	;# 
  6655  0F39                     	;# 
  6656  0F3A                     	;# 
  6657  0F3B                     	;# 
  6658  0F3C                     	;# 
  6659  0F3D                     	;# 
  6660  0F3E                     	;# 
  6661  0F3F                     	;# 
  6662  0F40                     	;# 
  6663  0F41                     	;# 
  6664  0F43                     	;# 
  6665  0F44                     	;# 
  6666  0F45                     	;# 
  6667  0F46                     	;# 
  6668  0F47                     	;# 
  6669  0F48                     	;# 
  6670  0F49                     	;# 
  6671  0F4A                     	;# 
  6672  0F4B                     	;# 
  6673  0F4C                     	;# 
  6674  0F4E                     	;# 
  6675  0F4F                     	;# 
  6676  0F50                     	;# 
  6677  0F51                     	;# 
  6678  0F52                     	;# 
  6679  0F53                     	;# 
  6680  0F54                     	;# 
  6681  0F55                     	;# 
  6682  0F56                     	;# 
  6683  0F57                     	;# 
  6684  0F59                     	;# 
  6685  0F5A                     	;# 
  6686  0F5B                     	;# 
  6687  0F5C                     	;# 
  6688  0F5D                     	;# 
  6689  0F61                     	;# 
  6690  0F62                     	;# 
  6691  0F64                     	;# 
  6692  0F65                     	;# 
  6693  0F66                     	;# 
  6694  0F67                     	;# 
  6695  0F68                     	;# 
  6696  0F69                     	;# 
  6697  0F6A                     	;# 
  6698  0F6B                     	;# 
  6699  0F6C                     	;# 
  6700  0F6D                     	;# 
  6701  0FE4                     	;# 
  6702  0FE5                     	;# 
  6703  0FE6                     	;# 
  6704  0FE7                     	;# 
  6705  0FE8                     	;# 
  6706  0FE9                     	;# 
  6707  0FEA                     	;# 
  6708  0FEB                     	;# 
  6709  0FED                     	;# 
  6710  0FEE                     	;# 
  6711  0FEF                     	;# 
  6712  0000                     	;# 
  6713  0001                     	;# 
  6714  0002                     	;# 
  6715  0003                     	;# 
  6716  0004                     	;# 
  6717  0005                     	;# 
  6718  0006                     	;# 
  6719  0007                     	;# 
  6720  0008                     	;# 
  6721  0009                     	;# 
  6722  000A                     	;# 
  6723  000B                     	;# 
  6724  000C                     	;# 
  6725  000D                     	;# 
  6726  000E                     	;# 
  6727  000F                     	;# 
  6728  0010                     	;# 
  6729  0011                     	;# 
  6730  0012                     	;# 
  6731  0013                     	;# 
  6732  0014                     	;# 
  6733  0015                     	;# 
  6734  0016                     	;# 
  6735  0017                     	;# 
  6736  0018                     	;# 
  6737  0019                     	;# 
  6738  001A                     	;# 
  6739  001C                     	;# 
  6740  001C                     	;# 
  6741  001D                     	;# 
  6742  001D                     	;# 
  6743  001E                     	;# 
  6744  001F                     	;# 
  6745  008C                     	;# 
  6746  008C                     	;# 
  6747  008D                     	;# 
  6748  008E                     	;# 
  6749  008E                     	;# 
  6750  008F                     	;# 
  6751  0090                     	;# 
  6752  0090                     	;# 
  6753  0091                     	;# 
  6754  0093                     	;# 
  6755  0094                     	;# 
  6756  0095                     	;# 
  6757  0096                     	;# 
  6758  0097                     	;# 
  6759  0098                     	;# 
  6760  0099                     	;# 
  6761  009A                     	;# 
  6762  009B                     	;# 
  6763  009C                     	;# 
  6764  009D                     	;# 
  6765  009E                     	;# 
  6766  010C                     	;# 
  6767  010D                     	;# 
  6768  010E                     	;# 
  6769  010E                     	;# 
  6770  010F                     	;# 
  6771  0110                     	;# 
  6772  0110                     	;# 
  6773  0111                     	;# 
  6774  0112                     	;# 
  6775  0112                     	;# 
  6776  0113                     	;# 
  6777  0114                     	;# 
  6778  0114                     	;# 
  6779  0115                     	;# 
  6780  0116                     	;# 
  6781  0116                     	;# 
  6782  0117                     	;# 
  6783  0119                     	;# 
  6784  0119                     	;# 
  6785  0119                     	;# 
  6786  011A                     	;# 
  6787  011A                     	;# 
  6788  011A                     	;# 
  6789  011B                     	;# 
  6790  011B                     	;# 
  6791  011B                     	;# 
  6792  011B                     	;# 
  6793  011B                     	;# 
  6794  011C                     	;# 
  6795  011C                     	;# 
  6796  011C                     	;# 
  6797  011D                     	;# 
  6798  011D                     	;# 
  6799  011D                     	;# 
  6800  011E                     	;# 
  6801  011E                     	;# 
  6802  011E                     	;# 
  6803  011F                     	;# 
  6804  011F                     	;# 
  6805  011F                     	;# 
  6806  011F                     	;# 
  6807  011F                     	;# 
  6808  018C                     	;# 
  6809  018D                     	;# 
  6810  018E                     	;# 
  6811  018F                     	;# 
  6812  0190                     	;# 
  6813  0191                     	;# 
  6814  0192                     	;# 
  6815  0196                     	;# 
  6816  0197                     	;# 
  6817  0198                     	;# 
  6818  0199                     	;# 
  6819  019A                     	;# 
  6820  019B                     	;# 
  6821  019C                     	;# 
  6822  020C                     	;# 
  6823  020C                     	;# 
  6824  020D                     	;# 
  6825  020E                     	;# 
  6826  020F                     	;# 
  6827  020F                     	;# 
  6828  0210                     	;# 
  6829  0210                     	;# 
  6830  0211                     	;# 
  6831  0211                     	;# 
  6832  0212                     	;# 
  6833  0212                     	;# 
  6834  0213                     	;# 
  6835  0214                     	;# 
  6836  0215                     	;# 
  6837  0215                     	;# 
  6838  0216                     	;# 
  6839  0216                     	;# 
  6840  0217                     	;# 
  6841  0217                     	;# 
  6842  0218                     	;# 
  6843  0218                     	;# 
  6844  0219                     	;# 
  6845  021A                     	;# 
  6846  021B                     	;# 
  6847  021B                     	;# 
  6848  021C                     	;# 
  6849  021C                     	;# 
  6850  021D                     	;# 
  6851  021D                     	;# 
  6852  021E                     	;# 
  6853  021F                     	;# 
  6854  028C                     	;# 
  6855  028C                     	;# 
  6856  028D                     	;# 
  6857  028D                     	;# 
  6858  028E                     	;# 
  6859  028F                     	;# 
  6860  0290                     	;# 
  6861  0290                     	;# 
  6862  0291                     	;# 
  6863  0292                     	;# 
  6864  0292                     	;# 
  6865  0293                     	;# 
  6866  0293                     	;# 
  6867  0294                     	;# 
  6868  0295                     	;# 
  6869  0296                     	;# 
  6870  0296                     	;# 
  6871  0297                     	;# 
  6872  0298                     	;# 
  6873  0298                     	;# 
  6874  0299                     	;# 
  6875  0299                     	;# 
  6876  029A                     	;# 
  6877  029B                     	;# 
  6878  029C                     	;# 
  6879  029C                     	;# 
  6880  029D                     	;# 
  6881  030C                     	;# 
  6882  030C                     	;# 
  6883  030D                     	;# 
  6884  030E                     	;# 
  6885  030F                     	;# 
  6886  0310                     	;# 
  6887  0310                     	;# 
  6888  0311                     	;# 
  6889  0312                     	;# 
  6890  0313                     	;# 
  6891  0314                     	;# 
  6892  0314                     	;# 
  6893  0315                     	;# 
  6894  0316                     	;# 
  6895  0317                     	;# 
  6896  0318                     	;# 
  6897  0318                     	;# 
  6898  0319                     	;# 
  6899  031A                     	;# 
  6900  031B                     	;# 
  6901  031C                     	;# 
  6902  031C                     	;# 
  6903  031D                     	;# 
  6904  031E                     	;# 
  6905  031F                     	;# 
  6906  038C                     	;# 
  6907  038C                     	;# 
  6908  038D                     	;# 
  6909  038E                     	;# 
  6910  0390                     	;# 
  6911  0390                     	;# 
  6912  0391                     	;# 
  6913  0392                     	;# 
  6914  040C                     	;# 
  6915  040D                     	;# 
  6916  040E                     	;# 
  6917  040F                     	;# 
  6918  0410                     	;# 
  6919  0411                     	;# 
  6920  0416                     	;# 
  6921  0416                     	;# 
  6922  0417                     	;# 
  6923  0418                     	;# 
  6924  0418                     	;# 
  6925  0419                     	;# 
  6926  041A                     	;# 
  6927  041A                     	;# 
  6928  041B                     	;# 
  6929  041C                     	;# 
  6930  041C                     	;# 
  6931  041D                     	;# 
  6932  041E                     	;# 
  6933  041F                     	;# 
  6934  048C                     	;# 
  6935  048C                     	;# 
  6936  048D                     	;# 
  6937  048E                     	;# 
  6938  048F                     	;# 
  6939  048F                     	;# 
  6940  0490                     	;# 
  6941  0491                     	;# 
  6942  0492                     	;# 
  6943  0492                     	;# 
  6944  0493                     	;# 
  6945  0494                     	;# 
  6946  0495                     	;# 
  6947  0495                     	;# 
  6948  0496                     	;# 
  6949  0497                     	;# 
  6950  0498                     	;# 
  6951  0499                     	;# 
  6952  049A                     	;# 
  6953  049B                     	;# 
  6954  049C                     	;# 
  6955  049D                     	;# 
  6956  050C                     	;# 
  6957  050C                     	;# 
  6958  050D                     	;# 
  6959  050E                     	;# 
  6960  050F                     	;# 
  6961  050F                     	;# 
  6962  0510                     	;# 
  6963  0511                     	;# 
  6964  0512                     	;# 
  6965  0512                     	;# 
  6966  0513                     	;# 
  6967  0514                     	;# 
  6968  0515                     	;# 
  6969  0515                     	;# 
  6970  0516                     	;# 
  6971  0517                     	;# 
  6972  0518                     	;# 
  6973  0519                     	;# 
  6974  051A                     	;# 
  6975  051B                     	;# 
  6976  051C                     	;# 
  6977  051D                     	;# 
  6978  058C                     	;# 
  6979  058C                     	;# 
  6980  058D                     	;# 
  6981  058E                     	;# 
  6982  058F                     	;# 
  6983  058F                     	;# 
  6984  0590                     	;# 
  6985  0591                     	;# 
  6986  0592                     	;# 
  6987  0593                     	;# 
  6988  060C                     	;# 
  6989  060D                     	;# 
  6990  060E                     	;# 
  6991  060F                     	;# 
  6992  0610                     	;# 
  6993  0611                     	;# 
  6994  0612                     	;# 
  6995  0613                     	;# 
  6996  0614                     	;# 
  6997  0616                     	;# 
  6998  0617                     	;# 
  6999  0618                     	;# 
  7000  0619                     	;# 
  7001  061A                     	;# 
  7002  061B                     	;# 
  7003  061C                     	;# 
  7004  061D                     	;# 
  7005  061E                     	;# 
  7006  068C                     	;# 
  7007  068D                     	;# 
  7008  068E                     	;# 
  7009  068F                     	;# 
  7010  0690                     	;# 
  7011  0691                     	;# 
  7012  0692                     	;# 
  7013  0693                     	;# 
  7014  0694                     	;# 
  7015  070C                     	;# 
  7016  070D                     	;# 
  7017  070E                     	;# 
  7018  070F                     	;# 
  7019  0710                     	;# 
  7020  0711                     	;# 
  7021  0712                     	;# 
  7022  0713                     	;# 
  7023  0714                     	;# 
  7024  0716                     	;# 
  7025  0717                     	;# 
  7026  0718                     	;# 
  7027  0719                     	;# 
  7028  071A                     	;# 
  7029  071B                     	;# 
  7030  071C                     	;# 
  7031  071D                     	;# 
  7032  071E                     	;# 
  7033  0796                     	;# 
  7034  0797                     	;# 
  7035  0798                     	;# 
  7036  0799                     	;# 
  7037  079A                     	;# 
  7038  079B                     	;# 
  7039  080C                     	;# 
  7040  080D                     	;# 
  7041  080E                     	;# 
  7042  080F                     	;# 
  7043  0810                     	;# 
  7044  0811                     	;# 
  7045  0812                     	;# 
  7046  0813                     	;# 
  7047  0814                     	;# 
  7048  081A                     	;# 
  7049  081B                     	;# 
  7050  081C                     	;# 
  7051  081D                     	;# 
  7052  081E                     	;# 
  7053  081F                     	;# 
  7054  088C                     	;# 
  7055  088D                     	;# 
  7056  088E                     	;# 
  7057  088F                     	;# 
  7058  0890                     	;# 
  7059  0891                     	;# 
  7060  0892                     	;# 
  7061  0893                     	;# 
  7062  0895                     	;# 
  7063  0896                     	;# 
  7064  0897                     	;# 
  7065  0898                     	;# 
  7066  0899                     	;# 
  7067  089A                     	;# 
  7068  089B                     	;# 
  7069  090C                     	;# 
  7070  090E                     	;# 
  7071  090F                     	;# 
  7072  091F                     	;# 
  7073  091F                     	;# 
  7074  098F                     	;# 
  7075  098F                     	;# 
  7076  0990                     	;# 
  7077  0991                     	;# 
  7078  0992                     	;# 
  7079  0993                     	;# 
  7080  0994                     	;# 
  7081  0995                     	;# 
  7082  0996                     	;# 
  7083  0997                     	;# 
  7084  0E0F                     	;# 
  7085  0E10                     	;# 
  7086  0E11                     	;# 
  7087  0E12                     	;# 
  7088  0E13                     	;# 
  7089  0E14                     	;# 
  7090  0E15                     	;# 
  7091  0E16                     	;# 
  7092  0E17                     	;# 
  7093  0E18                     	;# 
  7094  0E19                     	;# 
  7095  0E1A                     	;# 
  7096  0E1B                     	;# 
  7097  0E1C                     	;# 
  7098  0E1D                     	;# 
  7099  0E1E                     	;# 
  7100  0E1F                     	;# 
  7101  0E20                     	;# 
  7102  0E21                     	;# 
  7103  0E22                     	;# 
  7104  0E23                     	;# 
  7105  0E24                     	;# 
  7106  0E25                     	;# 
  7107  0E26                     	;# 
  7108  0E27                     	;# 
  7109  0E28                     	;# 
  7110  0E29                     	;# 
  7111  0E2A                     	;# 
  7112  0E2B                     	;# 
  7113  0E2C                     	;# 
  7114  0E2D                     	;# 
  7115  0E2E                     	;# 
  7116  0E2F                     	;# 
  7117  0E30                     	;# 
  7118  0E31                     	;# 
  7119  0E32                     	;# 
  7120  0E33                     	;# 
  7121  0E34                     	;# 
  7122  0E35                     	;# 
  7123  0E36                     	;# 
  7124  0E37                     	;# 
  7125  0E8F                     	;# 
  7126  0E90                     	;# 
  7127  0E91                     	;# 
  7128  0E92                     	;# 
  7129  0E93                     	;# 
  7130  0E94                     	;# 
  7131  0E95                     	;# 
  7132  0E96                     	;# 
  7133  0E97                     	;# 
  7134  0E9C                     	;# 
  7135  0E9D                     	;# 
  7136  0E9E                     	;# 
  7137  0EA1                     	;# 
  7138  0EA2                     	;# 
  7139  0EA3                     	;# 
  7140  0EA4                     	;# 
  7141  0EA5                     	;# 
  7142  0EA9                     	;# 
  7143  0EAA                     	;# 
  7144  0EAB                     	;# 
  7145  0EAC                     	;# 
  7146  0EB1                     	;# 
  7147  0EB2                     	;# 
  7148  0EB3                     	;# 
  7149  0EB8                     	;# 
  7150  0EB9                     	;# 
  7151  0EBA                     	;# 
  7152  0EBB                     	;# 
  7153  0EBC                     	;# 
  7154  0EBD                     	;# 
  7155  0EBE                     	;# 
  7156  0EC3                     	;# 
  7157  0EC5                     	;# 
  7158  0EC6                     	;# 
  7159  0EC7                     	;# 
  7160  0EC8                     	;# 
  7161  0EC9                     	;# 
  7162  0ECA                     	;# 
  7163  0ECB                     	;# 
  7164  0ECC                     	;# 
  7165  0F10                     	;# 
  7166  0F11                     	;# 
  7167  0F12                     	;# 
  7168  0F13                     	;# 
  7169  0F14                     	;# 
  7170  0F15                     	;# 
  7171  0F16                     	;# 
  7172  0F17                     	;# 
  7173  0F18                     	;# 
  7174  0F19                     	;# 
  7175  0F1A                     	;# 
  7176  0F1B                     	;# 
  7177  0F1C                     	;# 
  7178  0F1D                     	;# 
  7179  0F1E                     	;# 
  7180  0F1F                     	;# 
  7181  0F20                     	;# 
  7182  0F21                     	;# 
  7183  0F22                     	;# 
  7184  0F23                     	;# 
  7185  0F24                     	;# 
  7186  0F25                     	;# 
  7187  0F26                     	;# 
  7188  0F27                     	;# 
  7189  0F28                     	;# 
  7190  0F29                     	;# 
  7191  0F2A                     	;# 
  7192  0F2B                     	;# 
  7193  0F2C                     	;# 
  7194  0F2D                     	;# 
  7195  0F2E                     	;# 
  7196  0F2F                     	;# 
  7197  0F30                     	;# 
  7198  0F31                     	;# 
  7199  0F32                     	;# 
  7200  0F38                     	;# 
  7201  0F39                     	;# 
  7202  0F3A                     	;# 
  7203  0F3B                     	;# 
  7204  0F3C                     	;# 
  7205  0F3D                     	;# 
  7206  0F3E                     	;# 
  7207  0F3F                     	;# 
  7208  0F40                     	;# 
  7209  0F41                     	;# 
  7210  0F43                     	;# 
  7211  0F44                     	;# 
  7212  0F45                     	;# 
  7213  0F46                     	;# 
  7214  0F47                     	;# 
  7215  0F48                     	;# 
  7216  0F49                     	;# 
  7217  0F4A                     	;# 
  7218  0F4B                     	;# 
  7219  0F4C                     	;# 
  7220  0F4E                     	;# 
  7221  0F4F                     	;# 
  7222  0F50                     	;# 
  7223  0F51                     	;# 
  7224  0F52                     	;# 
  7225  0F53                     	;# 
  7226  0F54                     	;# 
  7227  0F55                     	;# 
  7228  0F56                     	;# 
  7229  0F57                     	;# 
  7230  0F59                     	;# 
  7231  0F5A                     	;# 
  7232  0F5B                     	;# 
  7233  0F5C                     	;# 
  7234  0F5D                     	;# 
  7235  0F61                     	;# 
  7236  0F62                     	;# 
  7237  0F64                     	;# 
  7238  0F65                     	;# 
  7239  0F66                     	;# 
  7240  0F67                     	;# 
  7241  0F68                     	;# 
  7242  0F69                     	;# 
  7243  0F6A                     	;# 
  7244  0F6B                     	;# 
  7245  0F6C                     	;# 
  7246  0F6D                     	;# 
  7247  0FE4                     	;# 
  7248  0FE5                     	;# 
  7249  0FE6                     	;# 
  7250  0FE7                     	;# 
  7251  0FE8                     	;# 
  7252  0FE9                     	;# 
  7253  0FEA                     	;# 
  7254  0FEB                     	;# 
  7255  0FED                     	;# 
  7256  0FEE                     	;# 
  7257  0FEF                     	;# 
  7258  0000                     	;# 
  7259  0001                     	;# 
  7260  0002                     	;# 
  7261  0003                     	;# 
  7262  0004                     	;# 
  7263  0005                     	;# 
  7264  0006                     	;# 
  7265  0007                     	;# 
  7266  0008                     	;# 
  7267  0009                     	;# 
  7268  000A                     	;# 
  7269  000B                     	;# 
  7270  000C                     	;# 
  7271  000D                     	;# 
  7272  000E                     	;# 
  7273  000F                     	;# 
  7274  0010                     	;# 
  7275  0011                     	;# 
  7276  0012                     	;# 
  7277  0013                     	;# 
  7278  0014                     	;# 
  7279  0015                     	;# 
  7280  0016                     	;# 
  7281  0017                     	;# 
  7282  0018                     	;# 
  7283  0019                     	;# 
  7284  001A                     	;# 
  7285  001C                     	;# 
  7286  001C                     	;# 
  7287  001D                     	;# 
  7288  001D                     	;# 
  7289  001E                     	;# 
  7290  001F                     	;# 
  7291  008C                     	;# 
  7292  008C                     	;# 
  7293  008D                     	;# 
  7294  008E                     	;# 
  7295  008E                     	;# 
  7296  008F                     	;# 
  7297  0090                     	;# 
  7298  0090                     	;# 
  7299  0091                     	;# 
  7300  0093                     	;# 
  7301  0094                     	;# 
  7302  0095                     	;# 
  7303  0096                     	;# 
  7304  0097                     	;# 
  7305  0098                     	;# 
  7306  0099                     	;# 
  7307  009A                     	;# 
  7308  009B                     	;# 
  7309  009C                     	;# 
  7310  009D                     	;# 
  7311  009E                     	;# 
  7312  010C                     	;# 
  7313  010D                     	;# 
  7314  010E                     	;# 
  7315  010E                     	;# 
  7316  010F                     	;# 
  7317  0110                     	;# 
  7318  0110                     	;# 
  7319  0111                     	;# 
  7320  0112                     	;# 
  7321  0112                     	;# 
  7322  0113                     	;# 
  7323  0114                     	;# 
  7324  0114                     	;# 
  7325  0115                     	;# 
  7326  0116                     	;# 
  7327  0116                     	;# 
  7328  0117                     	;# 
  7329  0119                     	;# 
  7330  0119                     	;# 
  7331  0119                     	;# 
  7332  011A                     	;# 
  7333  011A                     	;# 
  7334  011A                     	;# 
  7335  011B                     	;# 
  7336  011B                     	;# 
  7337  011B                     	;# 
  7338  011B                     	;# 
  7339  011B                     	;# 
  7340  011C                     	;# 
  7341  011C                     	;# 
  7342  011C                     	;# 
  7343  011D                     	;# 
  7344  011D                     	;# 
  7345  011D                     	;# 
  7346  011E                     	;# 
  7347  011E                     	;# 
  7348  011E                     	;# 
  7349  011F                     	;# 
  7350  011F                     	;# 
  7351  011F                     	;# 
  7352  011F                     	;# 
  7353  011F                     	;# 
  7354  018C                     	;# 
  7355  018D                     	;# 
  7356  018E                     	;# 
  7357  018F                     	;# 
  7358  0190                     	;# 
  7359  0191                     	;# 
  7360  0192                     	;# 
  7361  0196                     	;# 
  7362  0197                     	;# 
  7363  0198                     	;# 
  7364  0199                     	;# 
  7365  019A                     	;# 
  7366  019B                     	;# 
  7367  019C                     	;# 
  7368  020C                     	;# 
  7369  020C                     	;# 
  7370  020D                     	;# 
  7371  020E                     	;# 
  7372  020F                     	;# 
  7373  020F                     	;# 
  7374  0210                     	;# 
  7375  0210                     	;# 
  7376  0211                     	;# 
  7377  0211                     	;# 
  7378  0212                     	;# 
  7379  0212                     	;# 
  7380  0213                     	;# 
  7381  0214                     	;# 
  7382  0215                     	;# 
  7383  0215                     	;# 
  7384  0216                     	;# 
  7385  0216                     	;# 
  7386  0217                     	;# 
  7387  0217                     	;# 
  7388  0218                     	;# 
  7389  0218                     	;# 
  7390  0219                     	;# 
  7391  021A                     	;# 
  7392  021B                     	;# 
  7393  021B                     	;# 
  7394  021C                     	;# 
  7395  021C                     	;# 
  7396  021D                     	;# 
  7397  021D                     	;# 
  7398  021E                     	;# 
  7399  021F                     	;# 
  7400  028C                     	;# 
  7401  028C                     	;# 
  7402  028D                     	;# 
  7403  028D                     	;# 
  7404  028E                     	;# 
  7405  028F                     	;# 
  7406  0290                     	;# 
  7407  0290                     	;# 
  7408  0291                     	;# 
  7409  0292                     	;# 
  7410  0292                     	;# 
  7411  0293                     	;# 
  7412  0293                     	;# 
  7413  0294                     	;# 
  7414  0295                     	;# 
  7415  0296                     	;# 
  7416  0296                     	;# 
  7417  0297                     	;# 
  7418  0298                     	;# 
  7419  0298                     	;# 
  7420  0299                     	;# 
  7421  0299                     	;# 
  7422  029A                     	;# 
  7423  029B                     	;# 
  7424  029C                     	;# 
  7425  029C                     	;# 
  7426  029D                     	;# 
  7427  030C                     	;# 
  7428  030C                     	;# 
  7429  030D                     	;# 
  7430  030E                     	;# 
  7431  030F                     	;# 
  7432  0310                     	;# 
  7433  0310                     	;# 
  7434  0311                     	;# 
  7435  0312                     	;# 
  7436  0313                     	;# 
  7437  0314                     	;# 
  7438  0314                     	;# 
  7439  0315                     	;# 
  7440  0316                     	;# 
  7441  0317                     	;# 
  7442  0318                     	;# 
  7443  0318                     	;# 
  7444  0319                     	;# 
  7445  031A                     	;# 
  7446  031B                     	;# 
  7447  031C                     	;# 
  7448  031C                     	;# 
  7449  031D                     	;# 
  7450  031E                     	;# 
  7451  031F                     	;# 
  7452  038C                     	;# 
  7453  038C                     	;# 
  7454  038D                     	;# 
  7455  038E                     	;# 
  7456  0390                     	;# 
  7457  0390                     	;# 
  7458  0391                     	;# 
  7459  0392                     	;# 
  7460  040C                     	;# 
  7461  040D                     	;# 
  7462  040E                     	;# 
  7463  040F                     	;# 
  7464  0410                     	;# 
  7465  0411                     	;# 
  7466  0416                     	;# 
  7467  0416                     	;# 
  7468  0417                     	;# 
  7469  0418                     	;# 
  7470  0418                     	;# 
  7471  0419                     	;# 
  7472  041A                     	;# 
  7473  041A                     	;# 
  7474  041B                     	;# 
  7475  041C                     	;# 
  7476  041C                     	;# 
  7477  041D                     	;# 
  7478  041E                     	;# 
  7479  041F                     	;# 
  7480  048C                     	;# 
  7481  048C                     	;# 
  7482  048D                     	;# 
  7483  048E                     	;# 
  7484  048F                     	;# 
  7485  048F                     	;# 
  7486  0490                     	;# 
  7487  0491                     	;# 
  7488  0492                     	;# 
  7489  0492                     	;# 
  7490  0493                     	;# 
  7491  0494                     	;# 
  7492  0495                     	;# 
  7493  0495                     	;# 
  7494  0496                     	;# 
  7495  0497                     	;# 
  7496  0498                     	;# 
  7497  0499                     	;# 
  7498  049A                     	;# 
  7499  049B                     	;# 
  7500  049C                     	;# 
  7501  049D                     	;# 
  7502  050C                     	;# 
  7503  050C                     	;# 
  7504  050D                     	;# 
  7505  050E                     	;# 
  7506  050F                     	;# 
  7507  050F                     	;# 
  7508  0510                     	;# 
  7509  0511                     	;# 
  7510  0512                     	;# 
  7511  0512                     	;# 
  7512  0513                     	;# 
  7513  0514                     	;# 
  7514  0515                     	;# 
  7515  0515                     	;# 
  7516  0516                     	;# 
  7517  0517                     	;# 
  7518  0518                     	;# 
  7519  0519                     	;# 
  7520  051A                     	;# 
  7521  051B                     	;# 
  7522  051C                     	;# 
  7523  051D                     	;# 
  7524  058C                     	;# 
  7525  058C                     	;# 
  7526  058D                     	;# 
  7527  058E                     	;# 
  7528  058F                     	;# 
  7529  058F                     	;# 
  7530  0590                     	;# 
  7531  0591                     	;# 
  7532  0592                     	;# 
  7533  0593                     	;# 
  7534  060C                     	;# 
  7535  060D                     	;# 
  7536  060E                     	;# 
  7537  060F                     	;# 
  7538  0610                     	;# 
  7539  0611                     	;# 
  7540  0612                     	;# 
  7541  0613                     	;# 
  7542  0614                     	;# 
  7543  0616                     	;# 
  7544  0617                     	;# 
  7545  0618                     	;# 
  7546  0619                     	;# 
  7547  061A                     	;# 
  7548  061B                     	;# 
  7549  061C                     	;# 
  7550  061D                     	;# 
  7551  061E                     	;# 
  7552  068C                     	;# 
  7553  068D                     	;# 
  7554  068E                     	;# 
  7555  068F                     	;# 
  7556  0690                     	;# 
  7557  0691                     	;# 
  7558  0692                     	;# 
  7559  0693                     	;# 
  7560  0694                     	;# 
  7561  070C                     	;# 
  7562  070D                     	;# 
  7563  070E                     	;# 
  7564  070F                     	;# 
  7565  0710                     	;# 
  7566  0711                     	;# 
  7567  0712                     	;# 
  7568  0713                     	;# 
  7569  0714                     	;# 
  7570  0716                     	;# 
  7571  0717                     	;# 
  7572  0718                     	;# 
  7573  0719                     	;# 
  7574  071A                     	;# 
  7575  071B                     	;# 
  7576  071C                     	;# 
  7577  071D                     	;# 
  7578  071E                     	;# 
  7579  0796                     	;# 
  7580  0797                     	;# 
  7581  0798                     	;# 
  7582  0799                     	;# 
  7583  079A                     	;# 
  7584  079B                     	;# 
  7585  080C                     	;# 
  7586  080D                     	;# 
  7587  080E                     	;# 
  7588  080F                     	;# 
  7589  0810                     	;# 
  7590  0811                     	;# 
  7591  0812                     	;# 
  7592  0813                     	;# 
  7593  0814                     	;# 
  7594  081A                     	;# 
  7595  081B                     	;# 
  7596  081C                     	;# 
  7597  081D                     	;# 
  7598  081E                     	;# 
  7599  081F                     	;# 
  7600  088C                     	;# 
  7601  088D                     	;# 
  7602  088E                     	;# 
  7603  088F                     	;# 
  7604  0890                     	;# 
  7605  0891                     	;# 
  7606  0892                     	;# 
  7607  0893                     	;# 
  7608  0895                     	;# 
  7609  0896                     	;# 
  7610  0897                     	;# 
  7611  0898                     	;# 
  7612  0899                     	;# 
  7613  089A                     	;# 
  7614  089B                     	;# 
  7615  090C                     	;# 
  7616  090E                     	;# 
  7617  090F                     	;# 
  7618  091F                     	;# 
  7619  091F                     	;# 
  7620  098F                     	;# 
  7621  098F                     	;# 
  7622  0990                     	;# 
  7623  0991                     	;# 
  7624  0992                     	;# 
  7625  0993                     	;# 
  7626  0994                     	;# 
  7627  0995                     	;# 
  7628  0996                     	;# 
  7629  0997                     	;# 
  7630  0E0F                     	;# 
  7631  0E10                     	;# 
  7632  0E11                     	;# 
  7633  0E12                     	;# 
  7634  0E13                     	;# 
  7635  0E14                     	;# 
  7636  0E15                     	;# 
  7637  0E16                     	;# 
  7638  0E17                     	;# 
  7639  0E18                     	;# 
  7640  0E19                     	;# 
  7641  0E1A                     	;# 
  7642  0E1B                     	;# 
  7643  0E1C                     	;# 
  7644  0E1D                     	;# 
  7645  0E1E                     	;# 
  7646  0E1F                     	;# 
  7647  0E20                     	;# 
  7648  0E21                     	;# 
  7649  0E22                     	;# 
  7650  0E23                     	;# 
  7651  0E24                     	;# 
  7652  0E25                     	;# 
  7653  0E26                     	;# 
  7654  0E27                     	;# 
  7655  0E28                     	;# 
  7656  0E29                     	;# 
  7657  0E2A                     	;# 
  7658  0E2B                     	;# 
  7659  0E2C                     	;# 
  7660  0E2D                     	;# 
  7661  0E2E                     	;# 
  7662  0E2F                     	;# 
  7663  0E30                     	;# 
  7664  0E31                     	;# 
  7665  0E32                     	;# 
  7666  0E33                     	;# 
  7667  0E34                     	;# 
  7668  0E35                     	;# 
  7669  0E36                     	;# 
  7670  0E37                     	;# 
  7671  0E8F                     	;# 
  7672  0E90                     	;# 
  7673  0E91                     	;# 
  7674  0E92                     	;# 
  7675  0E93                     	;# 
  7676  0E94                     	;# 
  7677  0E95                     	;# 
  7678  0E96                     	;# 
  7679  0E97                     	;# 
  7680  0E9C                     	;# 
  7681  0E9D                     	;# 
  7682  0E9E                     	;# 
  7683  0EA1                     	;# 
  7684  0EA2                     	;# 
  7685  0EA3                     	;# 
  7686  0EA4                     	;# 
  7687  0EA5                     	;# 
  7688  0EA9                     	;# 
  7689  0EAA                     	;# 
  7690  0EAB                     	;# 
  7691  0EAC                     	;# 
  7692  0EB1                     	;# 
  7693  0EB2                     	;# 
  7694  0EB3                     	;# 
  7695  0EB8                     	;# 
  7696  0EB9                     	;# 
  7697  0EBA                     	;# 
  7698  0EBB                     	;# 
  7699  0EBC                     	;# 
  7700  0EBD                     	;# 
  7701  0EBE                     	;# 
  7702  0EC3                     	;# 
  7703  0EC5                     	;# 
  7704  0EC6                     	;# 
  7705  0EC7                     	;# 
  7706  0EC8                     	;# 
  7707  0EC9                     	;# 
  7708  0ECA                     	;# 
  7709  0ECB                     	;# 
  7710  0ECC                     	;# 
  7711  0F10                     	;# 
  7712  0F11                     	;# 
  7713  0F12                     	;# 
  7714  0F13                     	;# 
  7715  0F14                     	;# 
  7716  0F15                     	;# 
  7717  0F16                     	;# 
  7718  0F17                     	;# 
  7719  0F18                     	;# 
  7720  0F19                     	;# 
  7721  0F1A                     	;# 
  7722  0F1B                     	;# 
  7723  0F1C                     	;# 
  7724  0F1D                     	;# 
  7725  0F1E                     	;# 
  7726  0F1F                     	;# 
  7727  0F20                     	;# 
  7728  0F21                     	;# 
  7729  0F22                     	;# 
  7730  0F23                     	;# 
  7731  0F24                     	;# 
  7732  0F25                     	;# 
  7733  0F26                     	;# 
  7734  0F27                     	;# 
  7735  0F28                     	;# 
  7736  0F29                     	;# 
  7737  0F2A                     	;# 
  7738  0F2B                     	;# 
  7739  0F2C                     	;# 
  7740  0F2D                     	;# 
  7741  0F2E                     	;# 
  7742  0F2F                     	;# 
  7743  0F30                     	;# 
  7744  0F31                     	;# 
  7745  0F32                     	;# 
  7746  0F38                     	;# 
  7747  0F39                     	;# 
  7748  0F3A                     	;# 
  7749  0F3B                     	;# 
  7750  0F3C                     	;# 
  7751  0F3D                     	;# 
  7752  0F3E                     	;# 
  7753  0F3F                     	;# 
  7754  0F40                     	;# 
  7755  0F41                     	;# 
  7756  0F43                     	;# 
  7757  0F44                     	;# 
  7758  0F45                     	;# 
  7759  0F46                     	;# 
  7760  0F47                     	;# 
  7761  0F48                     	;# 
  7762  0F49                     	;# 
  7763  0F4A                     	;# 
  7764  0F4B                     	;# 
  7765  0F4C                     	;# 
  7766  0F4E                     	;# 
  7767  0F4F                     	;# 
  7768  0F50                     	;# 
  7769  0F51                     	;# 
  7770  0F52                     	;# 
  7771  0F53                     	;# 
  7772  0F54                     	;# 
  7773  0F55                     	;# 
  7774  0F56                     	;# 
  7775  0F57                     	;# 
  7776  0F59                     	;# 
  7777  0F5A                     	;# 
  7778  0F5B                     	;# 
  7779  0F5C                     	;# 
  7780  0F5D                     	;# 
  7781  0F61                     	;# 
  7782  0F62                     	;# 
  7783  0F64                     	;# 
  7784  0F65                     	;# 
  7785  0F66                     	;# 
  7786  0F67                     	;# 
  7787  0F68                     	;# 
  7788  0F69                     	;# 
  7789  0F6A                     	;# 
  7790  0F6B                     	;# 
  7791  0F6C                     	;# 
  7792  0F6D                     	;# 
  7793  0FE4                     	;# 
  7794  0FE5                     	;# 
  7795  0FE6                     	;# 
  7796  0FE7                     	;# 
  7797  0FE8                     	;# 
  7798  0FE9                     	;# 
  7799  0FEA                     	;# 
  7800  0FEB                     	;# 
  7801  0FED                     	;# 
  7802  0FEE                     	;# 
  7803  0FEF                     	;# 
  7804  0000                     	;# 
  7805  0001                     	;# 
  7806  0002                     	;# 
  7807  0003                     	;# 
  7808  0004                     	;# 
  7809  0005                     	;# 
  7810  0006                     	;# 
  7811  0007                     	;# 
  7812  0008                     	;# 
  7813  0009                     	;# 
  7814  000A                     	;# 
  7815  000B                     	;# 
  7816  000C                     	;# 
  7817  000D                     	;# 
  7818  000E                     	;# 
  7819  000F                     	;# 
  7820  0010                     	;# 
  7821  0011                     	;# 
  7822  0012                     	;# 
  7823  0013                     	;# 
  7824  0014                     	;# 
  7825  0015                     	;# 
  7826  0016                     	;# 
  7827  0017                     	;# 
  7828  0018                     	;# 
  7829  0019                     	;# 
  7830  001A                     	;# 
  7831  001C                     	;# 
  7832  001C                     	;# 
  7833  001D                     	;# 
  7834  001D                     	;# 
  7835  001E                     	;# 
  7836  001F                     	;# 
  7837  008C                     	;# 
  7838  008C                     	;# 
  7839  008D                     	;# 
  7840  008E                     	;# 
  7841  008E                     	;# 
  7842  008F                     	;# 
  7843  0090                     	;# 
  7844  0090                     	;# 
  7845  0091                     	;# 
  7846  0093                     	;# 
  7847  0094                     	;# 
  7848  0095                     	;# 
  7849  0096                     	;# 
  7850  0097                     	;# 
  7851  0098                     	;# 
  7852  0099                     	;# 
  7853  009A                     	;# 
  7854  009B                     	;# 
  7855  009C                     	;# 
  7856  009D                     	;# 
  7857  009E                     	;# 
  7858  010C                     	;# 
  7859  010D                     	;# 
  7860  010E                     	;# 
  7861  010E                     	;# 
  7862  010F                     	;# 
  7863  0110                     	;# 
  7864  0110                     	;# 
  7865  0111                     	;# 
  7866  0112                     	;# 
  7867  0112                     	;# 
  7868  0113                     	;# 
  7869  0114                     	;# 
  7870  0114                     	;# 
  7871  0115                     	;# 
  7872  0116                     	;# 
  7873  0116                     	;# 
  7874  0117                     	;# 
  7875  0119                     	;# 
  7876  0119                     	;# 
  7877  0119                     	;# 
  7878  011A                     	;# 
  7879  011A                     	;# 
  7880  011A                     	;# 
  7881  011B                     	;# 
  7882  011B                     	;# 
  7883  011B                     	;# 
  7884  011B                     	;# 
  7885  011B                     	;# 
  7886  011C                     	;# 
  7887  011C                     	;# 
  7888  011C                     	;# 
  7889  011D                     	;# 
  7890  011D                     	;# 
  7891  011D                     	;# 
  7892  011E                     	;# 
  7893  011E                     	;# 
  7894  011E                     	;# 
  7895  011F                     	;# 
  7896  011F                     	;# 
  7897  011F                     	;# 
  7898  011F                     	;# 
  7899  011F                     	;# 
  7900  018C                     	;# 
  7901  018D                     	;# 
  7902  018E                     	;# 
  7903  018F                     	;# 
  7904  0190                     	;# 
  7905  0191                     	;# 
  7906  0192                     	;# 
  7907  0196                     	;# 
  7908  0197                     	;# 
  7909  0198                     	;# 
  7910  0199                     	;# 
  7911  019A                     	;# 
  7912  019B                     	;# 
  7913  019C                     	;# 
  7914  020C                     	;# 
  7915  020C                     	;# 
  7916  020D                     	;# 
  7917  020E                     	;# 
  7918  020F                     	;# 
  7919  020F                     	;# 
  7920  0210                     	;# 
  7921  0210                     	;# 
  7922  0211                     	;# 
  7923  0211                     	;# 
  7924  0212                     	;# 
  7925  0212                     	;# 
  7926  0213                     	;# 
  7927  0214                     	;# 
  7928  0215                     	;# 
  7929  0215                     	;# 
  7930  0216                     	;# 
  7931  0216                     	;# 
  7932  0217                     	;# 
  7933  0217                     	;# 
  7934  0218                     	;# 
  7935  0218                     	;# 
  7936  0219                     	;# 
  7937  021A                     	;# 
  7938  021B                     	;# 
  7939  021B                     	;# 
  7940  021C                     	;# 
  7941  021C                     	;# 
  7942  021D                     	;# 
  7943  021D                     	;# 
  7944  021E                     	;# 
  7945  021F                     	;# 
  7946  028C                     	;# 
  7947  028C                     	;# 
  7948  028D                     	;# 
  7949  028D                     	;# 
  7950  028E                     	;# 
  7951  028F                     	;# 
  7952  0290                     	;# 
  7953  0290                     	;# 
  7954  0291                     	;# 
  7955  0292                     	;# 
  7956  0292                     	;# 
  7957  0293                     	;# 
  7958  0293                     	;# 
  7959  0294                     	;# 
  7960  0295                     	;# 
  7961  0296                     	;# 
  7962  0296                     	;# 
  7963  0297                     	;# 
  7964  0298                     	;# 
  7965  0298                     	;# 
  7966  0299                     	;# 
  7967  0299                     	;# 
  7968  029A                     	;# 
  7969  029B                     	;# 
  7970  029C                     	;# 
  7971  029C                     	;# 
  7972  029D                     	;# 
  7973  030C                     	;# 
  7974  030C                     	;# 
  7975  030D                     	;# 
  7976  030E                     	;# 
  7977  030F                     	;# 
  7978  0310                     	;# 
  7979  0310                     	;# 
  7980  0311                     	;# 
  7981  0312                     	;# 
  7982  0313                     	;# 
  7983  0314                     	;# 
  7984  0314                     	;# 
  7985  0315                     	;# 
  7986  0316                     	;# 
  7987  0317                     	;# 
  7988  0318                     	;# 
  7989  0318                     	;# 
  7990  0319                     	;# 
  7991  031A                     	;# 
  7992  031B                     	;# 
  7993  031C                     	;# 
  7994  031C                     	;# 
  7995  031D                     	;# 
  7996  031E                     	;# 
  7997  031F                     	;# 
  7998  038C                     	;# 
  7999  038C                     	;# 
  8000  038D                     	;# 
  8001  038E                     	;# 
  8002  0390                     	;# 
  8003  0390                     	;# 
  8004  0391                     	;# 
  8005  0392                     	;# 
  8006  040C                     	;# 
  8007  040D                     	;# 
  8008  040E                     	;# 
  8009  040F                     	;# 
  8010  0410                     	;# 
  8011  0411                     	;# 
  8012  0416                     	;# 
  8013  0416                     	;# 
  8014  0417                     	;# 
  8015  0418                     	;# 
  8016  0418                     	;# 
  8017  0419                     	;# 
  8018  041A                     	;# 
  8019  041A                     	;# 
  8020  041B                     	;# 
  8021  041C                     	;# 
  8022  041C                     	;# 
  8023  041D                     	;# 
  8024  041E                     	;# 
  8025  041F                     	;# 
  8026  048C                     	;# 
  8027  048C                     	;# 
  8028  048D                     	;# 
  8029  048E                     	;# 
  8030  048F                     	;# 
  8031  048F                     	;# 
  8032  0490                     	;# 
  8033  0491                     	;# 
  8034  0492                     	;# 
  8035  0492                     	;# 
  8036  0493                     	;# 
  8037  0494                     	;# 
  8038  0495                     	;# 
  8039  0495                     	;# 
  8040  0496                     	;# 
  8041  0497                     	;# 
  8042  0498                     	;# 
  8043  0499                     	;# 
  8044  049A                     	;# 
  8045  049B                     	;# 
  8046  049C                     	;# 
  8047  049D                     	;# 
  8048  050C                     	;# 
  8049  050C                     	;# 
  8050  050D                     	;# 
  8051  050E                     	;# 
  8052  050F                     	;# 
  8053  050F                     	;# 
  8054  0510                     	;# 
  8055  0511                     	;# 
  8056  0512                     	;# 
  8057  0512                     	;# 
  8058  0513                     	;# 
  8059  0514                     	;# 
  8060  0515                     	;# 
  8061  0515                     	;# 
  8062  0516                     	;# 
  8063  0517                     	;# 
  8064  0518                     	;# 
  8065  0519                     	;# 
  8066  051A                     	;# 
  8067  051B                     	;# 
  8068  051C                     	;# 
  8069  051D                     	;# 
  8070  058C                     	;# 
  8071  058C                     	;# 
  8072  058D                     	;# 
  8073  058E                     	;# 
  8074  058F                     	;# 
  8075  058F                     	;# 
  8076  0590                     	;# 
  8077  0591                     	;# 
  8078  0592                     	;# 
  8079  0593                     	;# 
  8080  060C                     	;# 
  8081  060D                     	;# 
  8082  060E                     	;# 
  8083  060F                     	;# 
  8084  0610                     	;# 
  8085  0611                     	;# 
  8086  0612                     	;# 
  8087  0613                     	;# 
  8088  0614                     	;# 
  8089  0616                     	;# 
  8090  0617                     	;# 
  8091  0618                     	;# 
  8092  0619                     	;# 
  8093  061A                     	;# 
  8094  061B                     	;# 
  8095  061C                     	;# 
  8096  061D                     	;# 
  8097  061E                     	;# 
  8098  068C                     	;# 
  8099  068D                     	;# 
  8100  068E                     	;# 
  8101  068F                     	;# 
  8102  0690                     	;# 
  8103  0691                     	;# 
  8104  0692                     	;# 
  8105  0693                     	;# 
  8106  0694                     	;# 
  8107  070C                     	;# 
  8108  070D                     	;# 
  8109  070E                     	;# 
  8110  070F                     	;# 
  8111  0710                     	;# 
  8112  0711                     	;# 
  8113  0712                     	;# 
  8114  0713                     	;# 
  8115  0714                     	;# 
  8116  0716                     	;# 
  8117  0717                     	;# 
  8118  0718                     	;# 
  8119  0719                     	;# 
  8120  071A                     	;# 
  8121  071B                     	;# 
  8122  071C                     	;# 
  8123  071D                     	;# 
  8124  071E                     	;# 
  8125  0796                     	;# 
  8126  0797                     	;# 
  8127  0798                     	;# 
  8128  0799                     	;# 
  8129  079A                     	;# 
  8130  079B                     	;# 
  8131  080C                     	;# 
  8132  080D                     	;# 
  8133  080E                     	;# 
  8134  080F                     	;# 
  8135  0810                     	;# 
  8136  0811                     	;# 
  8137  0812                     	;# 
  8138  0813                     	;# 
  8139  0814                     	;# 
  8140  081A                     	;# 
  8141  081B                     	;# 
  8142  081C                     	;# 
  8143  081D                     	;# 
  8144  081E                     	;# 
  8145  081F                     	;# 
  8146  088C                     	;# 
  8147  088D                     	;# 
  8148  088E                     	;# 
  8149  088F                     	;# 
  8150  0890                     	;# 
  8151  0891                     	;# 
  8152  0892                     	;# 
  8153  0893                     	;# 
  8154  0895                     	;# 
  8155  0896                     	;# 
  8156  0897                     	;# 
  8157  0898                     	;# 
  8158  0899                     	;# 
  8159  089A                     	;# 
  8160  089B                     	;# 
  8161  090C                     	;# 
  8162  090E                     	;# 
  8163  090F                     	;# 
  8164  091F                     	;# 
  8165  091F                     	;# 
  8166  098F                     	;# 
  8167  098F                     	;# 
  8168  0990                     	;# 
  8169  0991                     	;# 
  8170  0992                     	;# 
  8171  0993                     	;# 
  8172  0994                     	;# 
  8173  0995                     	;# 
  8174  0996                     	;# 
  8175  0997                     	;# 
  8176  0E0F                     	;# 
  8177  0E10                     	;# 
  8178  0E11                     	;# 
  8179  0E12                     	;# 
  8180  0E13                     	;# 
  8181  0E14                     	;# 
  8182  0E15                     	;# 
  8183  0E16                     	;# 
  8184  0E17                     	;# 
  8185  0E18                     	;# 
  8186  0E19                     	;# 
  8187  0E1A                     	;# 
  8188  0E1B                     	;# 
  8189  0E1C                     	;# 
  8190  0E1D                     	;# 
  8191  0E1E                     	;# 
  8192  0E1F                     	;# 
  8193  0E20                     	;# 
  8194  0E21                     	;# 
  8195  0E22                     	;# 
  8196  0E23                     	;# 
  8197  0E24                     	;# 
  8198  0E25                     	;# 
  8199  0E26                     	;# 
  8200  0E27                     	;# 
  8201  0E28                     	;# 
  8202  0E29                     	;# 
  8203  0E2A                     	;# 
  8204  0E2B                     	;# 
  8205  0E2C                     	;# 
  8206  0E2D                     	;# 
  8207  0E2E                     	;# 
  8208  0E2F                     	;# 
  8209  0E30                     	;# 
  8210  0E31                     	;# 
  8211  0E32                     	;# 
  8212  0E33                     	;# 
  8213  0E34                     	;# 
  8214  0E35                     	;# 
  8215  0E36                     	;# 
  8216  0E37                     	;# 
  8217  0E8F                     	;# 
  8218  0E90                     	;# 
  8219  0E91                     	;# 
  8220  0E92                     	;# 
  8221  0E93                     	;# 
  8222  0E94                     	;# 
  8223  0E95                     	;# 
  8224  0E96                     	;# 
  8225  0E97                     	;# 
  8226  0E9C                     	;# 
  8227  0E9D                     	;# 
  8228  0E9E                     	;# 
  8229  0EA1                     	;# 
  8230  0EA2                     	;# 
  8231  0EA3                     	;# 
  8232  0EA4                     	;# 
  8233  0EA5                     	;# 
  8234  0EA9                     	;# 
  8235  0EAA                     	;# 
  8236  0EAB                     	;# 
  8237  0EAC                     	;# 
  8238  0EB1                     	;# 
  8239  0EB2                     	;# 
  8240  0EB3                     	;# 
  8241  0EB8                     	;# 
  8242  0EB9                     	;# 
  8243  0EBA                     	;# 
  8244  0EBB                     	;# 
  8245  0EBC                     	;# 
  8246  0EBD                     	;# 
  8247  0EBE                     	;# 
  8248  0EC3                     	;# 
  8249  0EC5                     	;# 
  8250  0EC6                     	;# 
  8251  0EC7                     	;# 
  8252  0EC8                     	;# 
  8253  0EC9                     	;# 
  8254  0ECA                     	;# 
  8255  0ECB                     	;# 
  8256  0ECC                     	;# 
  8257  0F10                     	;# 
  8258  0F11                     	;# 
  8259  0F12                     	;# 
  8260  0F13                     	;# 
  8261  0F14                     	;# 
  8262  0F15                     	;# 
  8263  0F16                     	;# 
  8264  0F17                     	;# 
  8265  0F18                     	;# 
  8266  0F19                     	;# 
  8267  0F1A                     	;# 
  8268  0F1B                     	;# 
  8269  0F1C                     	;# 
  8270  0F1D                     	;# 
  8271  0F1E                     	;# 
  8272  0F1F                     	;# 
  8273  0F20                     	;# 
  8274  0F21                     	;# 
  8275  0F22                     	;# 
  8276  0F23                     	;# 
  8277  0F24                     	;# 
  8278  0F25                     	;# 
  8279  0F26                     	;# 
  8280  0F27                     	;# 
  8281  0F28                     	;# 
  8282  0F29                     	;# 
  8283  0F2A                     	;# 
  8284  0F2B                     	;# 
  8285  0F2C                     	;# 
  8286  0F2D                     	;# 
  8287  0F2E                     	;# 
  8288  0F2F                     	;# 
  8289  0F30                     	;# 
  8290  0F31                     	;# 
  8291  0F32                     	;# 
  8292  0F38                     	;# 
  8293  0F39                     	;# 
  8294  0F3A                     	;# 
  8295  0F3B                     	;# 
  8296  0F3C                     	;# 
  8297  0F3D                     	;# 
  8298  0F3E                     	;# 
  8299  0F3F                     	;# 
  8300  0F40                     	;# 
  8301  0F41                     	;# 
  8302  0F43                     	;# 
  8303  0F44                     	;# 
  8304  0F45                     	;# 
  8305  0F46                     	;# 
  8306  0F47                     	;# 
  8307  0F48                     	;# 
  8308  0F49                     	;# 
  8309  0F4A                     	;# 
  8310  0F4B                     	;# 
  8311  0F4C                     	;# 
  8312  0F4E                     	;# 
  8313  0F4F                     	;# 
  8314  0F50                     	;# 
  8315  0F51                     	;# 
  8316  0F52                     	;# 
  8317  0F53                     	;# 
  8318  0F54                     	;# 
  8319  0F55                     	;# 
  8320  0F56                     	;# 
  8321  0F57                     	;# 
  8322  0F59                     	;# 
  8323  0F5A                     	;# 
  8324  0F5B                     	;# 
  8325  0F5C                     	;# 
  8326  0F5D                     	;# 
  8327  0F61                     	;# 
  8328  0F62                     	;# 
  8329  0F64                     	;# 
  8330  0F65                     	;# 
  8331  0F66                     	;# 
  8332  0F67                     	;# 
  8333  0F68                     	;# 
  8334  0F69                     	;# 
  8335  0F6A                     	;# 
  8336  0F6B                     	;# 
  8337  0F6C                     	;# 
  8338  0F6D                     	;# 
  8339  0FE4                     	;# 
  8340  0FE5                     	;# 
  8341  0FE6                     	;# 
  8342  0FE7                     	;# 
  8343  0FE8                     	;# 
  8344  0FE9                     	;# 
  8345  0FEA                     	;# 
  8346  0FEB                     	;# 
  8347  0FED                     	;# 
  8348  0FEE                     	;# 
  8349  0FEF                     	;# 
  8350  0000                     	;# 
  8351  0001                     	;# 
  8352  0002                     	;# 
  8353  0003                     	;# 
  8354  0004                     	;# 
  8355  0005                     	;# 
  8356  0006                     	;# 
  8357  0007                     	;# 
  8358  0008                     	;# 
  8359  0009                     	;# 
  8360  000A                     	;# 
  8361  000B                     	;# 
  8362  000C                     	;# 
  8363  000D                     	;# 
  8364  000E                     	;# 
  8365  000F                     	;# 
  8366  0010                     	;# 
  8367  0011                     	;# 
  8368  0012                     	;# 
  8369  0013                     	;# 
  8370  0014                     	;# 
  8371  0015                     	;# 
  8372  0016                     	;# 
  8373  0017                     	;# 
  8374  0018                     	;# 
  8375  0019                     	;# 
  8376  001A                     	;# 
  8377  001C                     	;# 
  8378  001C                     	;# 
  8379  001D                     	;# 
  8380  001D                     	;# 
  8381  001E                     	;# 
  8382  001F                     	;# 
  8383  008C                     	;# 
  8384  008C                     	;# 
  8385  008D                     	;# 
  8386  008E                     	;# 
  8387  008E                     	;# 
  8388  008F                     	;# 
  8389  0090                     	;# 
  8390  0090                     	;# 
  8391  0091                     	;# 
  8392  0093                     	;# 
  8393  0094                     	;# 
  8394  0095                     	;# 
  8395  0096                     	;# 
  8396  0097                     	;# 
  8397  0098                     	;# 
  8398  0099                     	;# 
  8399  009A                     	;# 
  8400  009B                     	;# 
  8401  009C                     	;# 
  8402  009D                     	;# 
  8403  009E                     	;# 
  8404  010C                     	;# 
  8405  010D                     	;# 
  8406  010E                     	;# 
  8407  010E                     	;# 
  8408  010F                     	;# 
  8409  0110                     	;# 
  8410  0110                     	;# 
  8411  0111                     	;# 
  8412  0112                     	;# 
  8413  0112                     	;# 
  8414  0113                     	;# 
  8415  0114                     	;# 
  8416  0114                     	;# 
  8417  0115                     	;# 
  8418  0116                     	;# 
  8419  0116                     	;# 
  8420  0117                     	;# 
  8421  0119                     	;# 
  8422  0119                     	;# 
  8423  0119                     	;# 
  8424  011A                     	;# 
  8425  011A                     	;# 
  8426  011A                     	;# 
  8427  011B                     	;# 
  8428  011B                     	;# 
  8429  011B                     	;# 
  8430  011B                     	;# 
  8431  011B                     	;# 
  8432  011C                     	;# 
  8433  011C                     	;# 
  8434  011C                     	;# 
  8435  011D                     	;# 
  8436  011D                     	;# 
  8437  011D                     	;# 
  8438  011E                     	;# 
  8439  011E                     	;# 
  8440  011E                     	;# 
  8441  011F                     	;# 
  8442  011F                     	;# 
  8443  011F                     	;# 
  8444  011F                     	;# 
  8445  011F                     	;# 
  8446  018C                     	;# 
  8447  018D                     	;# 
  8448  018E                     	;# 
  8449  018F                     	;# 
  8450  0190                     	;# 
  8451  0191                     	;# 
  8452  0192                     	;# 
  8453  0196                     	;# 
  8454  0197                     	;# 
  8455  0198                     	;# 
  8456  0199                     	;# 
  8457  019A                     	;# 
  8458  019B                     	;# 
  8459  019C                     	;# 
  8460  020C                     	;# 
  8461  020C                     	;# 
  8462  020D                     	;# 
  8463  020E                     	;# 
  8464  020F                     	;# 
  8465  020F                     	;# 
  8466  0210                     	;# 
  8467  0210                     	;# 
  8468  0211                     	;# 
  8469  0211                     	;# 
  8470  0212                     	;# 
  8471  0212                     	;# 
  8472  0213                     	;# 
  8473  0214                     	;# 
  8474  0215                     	;# 
  8475  0215                     	;# 
  8476  0216                     	;# 
  8477  0216                     	;# 
  8478  0217                     	;# 
  8479  0217                     	;# 
  8480  0218                     	;# 
  8481  0218                     	;# 
  8482  0219                     	;# 
  8483  021A                     	;# 
  8484  021B                     	;# 
  8485  021B                     	;# 
  8486  021C                     	;# 
  8487  021C                     	;# 
  8488  021D                     	;# 
  8489  021D                     	;# 
  8490  021E                     	;# 
  8491  021F                     	;# 
  8492  028C                     	;# 
  8493  028C                     	;# 
  8494  028D                     	;# 
  8495  028D                     	;# 
  8496  028E                     	;# 
  8497  028F                     	;# 
  8498  0290                     	;# 
  8499  0290                     	;# 
  8500  0291                     	;# 
  8501  0292                     	;# 
  8502  0292                     	;# 
  8503  0293                     	;# 
  8504  0293                     	;# 
  8505  0294                     	;# 
  8506  0295                     	;# 
  8507  0296                     	;# 
  8508  0296                     	;# 
  8509  0297                     	;# 
  8510  0298                     	;# 
  8511  0298                     	;# 
  8512  0299                     	;# 
  8513  0299                     	;# 
  8514  029A                     	;# 
  8515  029B                     	;# 
  8516  029C                     	;# 
  8517  029C                     	;# 
  8518  029D                     	;# 
  8519  030C                     	;# 
  8520  030C                     	;# 
  8521  030D                     	;# 
  8522  030E                     	;# 
  8523  030F                     	;# 
  8524  0310                     	;# 
  8525  0310                     	;# 
  8526  0311                     	;# 
  8527  0312                     	;# 
  8528  0313                     	;# 
  8529  0314                     	;# 
  8530  0314                     	;# 
  8531  0315                     	;# 
  8532  0316                     	;# 
  8533  0317                     	;# 
  8534  0318                     	;# 
  8535  0318                     	;# 
  8536  0319                     	;# 
  8537  031A                     	;# 
  8538  031B                     	;# 
  8539  031C                     	;# 
  8540  031C                     	;# 
  8541  031D                     	;# 
  8542  031E                     	;# 
  8543  031F                     	;# 
  8544  038C                     	;# 
  8545  038C                     	;# 
  8546  038D                     	;# 
  8547  038E                     	;# 
  8548  0390                     	;# 
  8549  0390                     	;# 
  8550  0391                     	;# 
  8551  0392                     	;# 
  8552  040C                     	;# 
  8553  040D                     	;# 
  8554  040E                     	;# 
  8555  040F                     	;# 
  8556  0410                     	;# 
  8557  0411                     	;# 
  8558  0416                     	;# 
  8559  0416                     	;# 
  8560  0417                     	;# 
  8561  0418                     	;# 
  8562  0418                     	;# 
  8563  0419                     	;# 
  8564  041A                     	;# 
  8565  041A                     	;# 
  8566  041B                     	;# 
  8567  041C                     	;# 
  8568  041C                     	;# 
  8569  041D                     	;# 
  8570  041E                     	;# 
  8571  041F                     	;# 
  8572  048C                     	;# 
  8573  048C                     	;# 
  8574  048D                     	;# 
  8575  048E                     	;# 
  8576  048F                     	;# 
  8577  048F                     	;# 
  8578  0490                     	;# 
  8579  0491                     	;# 
  8580  0492                     	;# 
  8581  0492                     	;# 
  8582  0493                     	;# 
  8583  0494                     	;# 
  8584  0495                     	;# 
  8585  0495                     	;# 
  8586  0496                     	;# 
  8587  0497                     	;# 
  8588  0498                     	;# 
  8589  0499                     	;# 
  8590  049A                     	;# 
  8591  049B                     	;# 
  8592  049C                     	;# 
  8593  049D                     	;# 
  8594  050C                     	;# 
  8595  050C                     	;# 
  8596  050D                     	;# 
  8597  050E                     	;# 
  8598  050F                     	;# 
  8599  050F                     	;# 
  8600  0510                     	;# 
  8601  0511                     	;# 
  8602  0512                     	;# 
  8603  0512                     	;# 
  8604  0513                     	;# 
  8605  0514                     	;# 
  8606  0515                     	;# 
  8607  0515                     	;# 
  8608  0516                     	;# 
  8609  0517                     	;# 
  8610  0518                     	;# 
  8611  0519                     	;# 
  8612  051A                     	;# 
  8613  051B                     	;# 
  8614  051C                     	;# 
  8615  051D                     	;# 
  8616  058C                     	;# 
  8617  058C                     	;# 
  8618  058D                     	;# 
  8619  058E                     	;# 
  8620  058F                     	;# 
  8621  058F                     	;# 
  8622  0590                     	;# 
  8623  0591                     	;# 
  8624  0592                     	;# 
  8625  0593                     	;# 
  8626  060C                     	;# 
  8627  060D                     	;# 
  8628  060E                     	;# 
  8629  060F                     	;# 
  8630  0610                     	;# 
  8631  0611                     	;# 
  8632  0612                     	;# 
  8633  0613                     	;# 
  8634  0614                     	;# 
  8635  0616                     	;# 
  8636  0617                     	;# 
  8637  0618                     	;# 
  8638  0619                     	;# 
  8639  061A                     	;# 
  8640  061B                     	;# 
  8641  061C                     	;# 
  8642  061D                     	;# 
  8643  061E                     	;# 
  8644  068C                     	;# 
  8645  068D                     	;# 
  8646  068E                     	;# 
  8647  068F                     	;# 
  8648  0690                     	;# 
  8649  0691                     	;# 
  8650  0692                     	;# 
  8651  0693                     	;# 
  8652  0694                     	;# 
  8653  070C                     	;# 
  8654  070D                     	;# 
  8655  070E                     	;# 
  8656  070F                     	;# 
  8657  0710                     	;# 
  8658  0711                     	;# 
  8659  0712                     	;# 
  8660  0713                     	;# 
  8661  0714                     	;# 
  8662  0716                     	;# 
  8663  0717                     	;# 
  8664  0718                     	;# 
  8665  0719                     	;# 
  8666  071A                     	;# 
  8667  071B                     	;# 
  8668  071C                     	;# 
  8669  071D                     	;# 
  8670  071E                     	;# 
  8671  0796                     	;# 
  8672  0797                     	;# 
  8673  0798                     	;# 
  8674  0799                     	;# 
  8675  079A                     	;# 
  8676  079B                     	;# 
  8677  080C                     	;# 
  8678  080D                     	;# 
  8679  080E                     	;# 
  8680  080F                     	;# 
  8681  0810                     	;# 
  8682  0811                     	;# 
  8683  0812                     	;# 
  8684  0813                     	;# 
  8685  0814                     	;# 
  8686  081A                     	;# 
  8687  081B                     	;# 
  8688  081C                     	;# 
  8689  081D                     	;# 
  8690  081E                     	;# 
  8691  081F                     	;# 
  8692  088C                     	;# 
  8693  088D                     	;# 
  8694  088E                     	;# 
  8695  088F                     	;# 
  8696  0890                     	;# 
  8697  0891                     	;# 
  8698  0892                     	;# 
  8699  0893                     	;# 
  8700  0895                     	;# 
  8701  0896                     	;# 
  8702  0897                     	;# 
  8703  0898                     	;# 
  8704  0899                     	;# 
  8705  089A                     	;# 
  8706  089B                     	;# 
  8707  090C                     	;# 
  8708  090E                     	;# 
  8709  090F                     	;# 
  8710  091F                     	;# 
  8711  091F                     	;# 
  8712  098F                     	;# 
  8713  098F                     	;# 
  8714  0990                     	;# 
  8715  0991                     	;# 
  8716  0992                     	;# 
  8717  0993                     	;# 
  8718  0994                     	;# 
  8719  0995                     	;# 
  8720  0996                     	;# 
  8721  0997                     	;# 
  8722  0E0F                     	;# 
  8723  0E10                     	;# 
  8724  0E11                     	;# 
  8725  0E12                     	;# 
  8726  0E13                     	;# 
  8727  0E14                     	;# 
  8728  0E15                     	;# 
  8729  0E16                     	;# 
  8730  0E17                     	;# 
  8731  0E18                     	;# 
  8732  0E19                     	;# 
  8733  0E1A                     	;# 
  8734  0E1B                     	;# 
  8735  0E1C                     	;# 
  8736  0E1D                     	;# 
  8737  0E1E                     	;# 
  8738  0E1F                     	;# 
  8739  0E20                     	;# 
  8740  0E21                     	;# 
  8741  0E22                     	;# 
  8742  0E23                     	;# 
  8743  0E24                     	;# 
  8744  0E25                     	;# 
  8745  0E26                     	;# 
  8746  0E27                     	;# 
  8747  0E28                     	;# 
  8748  0E29                     	;# 
  8749  0E2A                     	;# 
  8750  0E2B                     	;# 
  8751  0E2C                     	;# 
  8752  0E2D                     	;# 
  8753  0E2E                     	;# 
  8754  0E2F                     	;# 
  8755  0E30                     	;# 
  8756  0E31                     	;# 
  8757  0E32                     	;# 
  8758  0E33                     	;# 
  8759  0E34                     	;# 
  8760  0E35                     	;# 
  8761  0E36                     	;# 
  8762  0E37                     	;# 
  8763  0E8F                     	;# 
  8764  0E90                     	;# 
  8765  0E91                     	;# 
  8766  0E92                     	;# 
  8767  0E93                     	;# 
  8768  0E94                     	;# 
  8769  0E95                     	;# 
  8770  0E96                     	;# 
  8771  0E97                     	;# 
  8772  0E9C                     	;# 
  8773  0E9D                     	;# 
  8774  0E9E                     	;# 
  8775  0EA1                     	;# 
  8776  0EA2                     	;# 
  8777  0EA3                     	;# 
  8778  0EA4                     	;# 
  8779  0EA5                     	;# 
  8780  0EA9                     	;# 
  8781  0EAA                     	;# 
  8782  0EAB                     	;# 
  8783  0EAC                     	;# 
  8784  0EB1                     	;# 
  8785  0EB2                     	;# 
  8786  0EB3                     	;# 
  8787  0EB8                     	;# 
  8788  0EB9                     	;# 
  8789  0EBA                     	;# 
  8790  0EBB                     	;# 
  8791  0EBC                     	;# 
  8792  0EBD                     	;# 
  8793  0EBE                     	;# 
  8794  0EC3                     	;# 
  8795  0EC5                     	;# 
  8796  0EC6                     	;# 
  8797  0EC7                     	;# 
  8798  0EC8                     	;# 
  8799  0EC9                     	;# 
  8800  0ECA                     	;# 
  8801  0ECB                     	;# 
  8802  0ECC                     	;# 
  8803  0F10                     	;# 
  8804  0F11                     	;# 
  8805  0F12                     	;# 
  8806  0F13                     	;# 
  8807  0F14                     	;# 
  8808  0F15                     	;# 
  8809  0F16                     	;# 
  8810  0F17                     	;# 
  8811  0F18                     	;# 
  8812  0F19                     	;# 
  8813  0F1A                     	;# 
  8814  0F1B                     	;# 
  8815  0F1C                     	;# 
  8816  0F1D                     	;# 
  8817  0F1E                     	;# 
  8818  0F1F                     	;# 
  8819  0F20                     	;# 
  8820  0F21                     	;# 
  8821  0F22                     	;# 
  8822  0F23                     	;# 
  8823  0F24                     	;# 
  8824  0F25                     	;# 
  8825  0F26                     	;# 
  8826  0F27                     	;# 
  8827  0F28                     	;# 
  8828  0F29                     	;# 
  8829  0F2A                     	;# 
  8830  0F2B                     	;# 
  8831  0F2C                     	;# 
  8832  0F2D                     	;# 
  8833  0F2E                     	;# 
  8834  0F2F                     	;# 
  8835  0F30                     	;# 
  8836  0F31                     	;# 
  8837  0F32                     	;# 
  8838  0F38                     	;# 
  8839  0F39                     	;# 
  8840  0F3A                     	;# 
  8841  0F3B                     	;# 
  8842  0F3C                     	;# 
  8843  0F3D                     	;# 
  8844  0F3E                     	;# 
  8845  0F3F                     	;# 
  8846  0F40                     	;# 
  8847  0F41                     	;# 
  8848  0F43                     	;# 
  8849  0F44                     	;# 
  8850  0F45                     	;# 
  8851  0F46                     	;# 
  8852  0F47                     	;# 
  8853  0F48                     	;# 
  8854  0F49                     	;# 
  8855  0F4A                     	;# 
  8856  0F4B                     	;# 
  8857  0F4C                     	;# 
  8858  0F4E                     	;# 
  8859  0F4F                     	;# 
  8860  0F50                     	;# 
  8861  0F51                     	;# 
  8862  0F52                     	;# 
  8863  0F53                     	;# 
  8864  0F54                     	;# 
  8865  0F55                     	;# 
  8866  0F56                     	;# 
  8867  0F57                     	;# 
  8868  0F59                     	;# 
  8869  0F5A                     	;# 
  8870  0F5B                     	;# 
  8871  0F5C                     	;# 
  8872  0F5D                     	;# 
  8873  0F61                     	;# 
  8874  0F62                     	;# 
  8875  0F64                     	;# 
  8876  0F65                     	;# 
  8877  0F66                     	;# 
  8878  0F67                     	;# 
  8879  0F68                     	;# 
  8880  0F69                     	;# 
  8881  0F6A                     	;# 
  8882  0F6B                     	;# 
  8883  0F6C                     	;# 
  8884  0F6D                     	;# 
  8885  0FE4                     	;# 
  8886  0FE5                     	;# 
  8887  0FE6                     	;# 
  8888  0FE7                     	;# 
  8889  0FE8                     	;# 
  8890  0FE9                     	;# 
  8891  0FEA                     	;# 
  8892  0FEB                     	;# 
  8893  0FED                     	;# 
  8894  0FEE                     	;# 
  8895  0FEF                     	;# 
  8896                           
  8897                           	psect	idataBANK0
  8898  0B1E                     __pidataBANK0:	
  8899                           
  8900                           ;initializer for _mode_field_subfield
  8901  0B1E  34FF               	retlw	255
  8902  0B1F  34FF               	retlw	255
  8903  0B20  34FF               	retlw	255
  8904  0B21  34FF               	retlw	255
  8905                           
  8906                           ;initializer for _tala
  8907  0B22  3403               	retlw	3
  8908                           
  8909                           ;initializer for _pmon
  8910  0B23  3405               	retlw	5
  8911                           
  8912                           ;initializer for _nreg
  8913  0B24  341E               	retlw	30
  8914                           
  8915                           	psect	stringtext1
  8916  1000                     __pstringtext1:	
  8917  1000                     _fsmStateTable:	
  8918  1000  34CA               	retlw	low _do_I2C_IDLE
  8919  1001  340A               	retlw	high _do_I2C_IDLE
  8920  1002  344D               	retlw	low _do_I2C_SEND_ADR_READ
  8921  1003  340B               	retlw	high _do_I2C_SEND_ADR_READ
  8922  1004  3435               	retlw	low _do_I2C_SEND_ADR_WRITE
  8923  1005  340B               	retlw	high _do_I2C_SEND_ADR_WRITE
  8924  1006  3476               	retlw	low _do_I2C_TX
  8925  1007  3406               	retlw	high _do_I2C_TX
  8926  1008  3417               	retlw	low _do_I2C_RX
  8927  1009  3407               	retlw	high _do_I2C_RX
  8928  100A  3410               	retlw	low _do_I2C_RCEN
  8929  100B  340B               	retlw	high _do_I2C_RCEN
  8930  100C  341A               	retlw	low _do_I2C_TX_EMPTY
  8931  100D  340F               	retlw	high _do_I2C_TX_EMPTY
  8932  100E  34CF               	retlw	low _do_I2C_SEND_RESTART_READ
  8933  100F  340A               	retlw	high _do_I2C_SEND_RESTART_READ
  8934  1010  34D4               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8935  1011  340A               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8936  1012  34D9               	retlw	low _do_I2C_SEND_RESTART
  8937  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  8938  1014  34DE               	retlw	low _do_I2C_SEND_STOP
  8939  1015  340A               	retlw	high _do_I2C_SEND_STOP
  8940  1016  34E3               	retlw	low _do_I2C_DO_ACK
  8941  1017  340A               	retlw	high _do_I2C_DO_ACK
  8942  1018  34E8               	retlw	low _do_I2C_DO_NACK_STOP
  8943  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  8944  101A  34ED               	retlw	low _do_I2C_DO_NACK_RESTART
  8945  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  8946  101C  342D               	retlw	low _do_I2C_RESET
  8947  101D  340B               	retlw	high _do_I2C_RESET
  8948  101E  3493               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8949  101F  340E               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8950  1020                     __end_of_fsmStateTable:	
  8951                           
  8952                           	psect	nvBANK0
  8953  0064                     __pnvBANK0:	
  8954  0064                     _TMR1_InterruptHandler:	
  8955  0064                     	ds	2
  8956  0066                     _timer1ReloadVal:	
  8957  0066                     	ds	2
  8958  0068                     _INT_InterruptHandler:	
  8959  0068                     	ds	2
  8960                           
  8961                           	psect	nvBANK1
  8962  00C8                     __pnvBANK1:	
  8963  00C8                     _TMR0_InterruptHandler:	
  8964  00C8                     	ds	2
  8965  00CA                     _TMR2_InterruptHandler:	
  8966  00CA                     	ds	2
  8967  001E                     _T0CON0bits	set	30
  8968  001E                     _T0CON0	set	30
  8969  001C                     _TMR0L	set	28
  8970  001D                     _TMR0H	set	29
  8971  001F                     _T0CON1	set	31
  8972  0013                     _TRISCbits	set	19
  8973  000E                     _PORTCbits	set	14
  8974  000D                     _PORTBbits	set	13
  8975  0016                     _LATAbits	set	22
  8976  0014                     _TRISD	set	20
  8977  0013                     _TRISC	set	19
  8978  0012                     _TRISB	set	18
  8979  0011                     _TRISA	set	17
  8980  0015                     _TRISE	set	21
  8981  0018                     _LATC	set	24
  8982  0017                     _LATB	set	23
  8983  0016                     _LATA	set	22
  8984  0019                     _LATD	set	25
  8985  001A                     _LATE	set	26
  8986  000B                     _INTCONbits	set	11
  8987  0094                     _ADCON1bits	set	148
  8988  008E                     _ADPREVL	set	142
  8989  008F                     _ADPREVH	set	143
  8990  0097                     _ADSTATbits	set	151
  8991  0090                     _ADACCL	set	144
  8992  0091                     _ADACCH	set	145
  8993  0095                     _ADCON2bits	set	149
  8994  009C                     _ADPRE	set	156
  8995  0096                     _ADCON3bits	set	150
  8996  008C                     _ADRESL	set	140
  8997  008D                     _ADRESH	set	141
  8998  0093                     _ADCON0bits	set	147
  8999  009D                     _ADACQ	set	157
  9000  0093                     _ADCON0	set	147
  9001  0098                     _ADCLK	set	152
  9002  0099                     _ADACT	set	153
  9003  009A                     _ADREF	set	154
  9004  0097                     _ADSTAT	set	151
  9005  0096                     _ADCON3	set	150
  9006  0095                     _ADCON2	set	149
  9007  0094                     _ADCON1	set	148
  9008  009B                     _ADCAP	set	155
  9009  009E                     _ADPCH	set	158
  9010  0116                     _ADERRL	set	278
  9011  0117                     _ADERRH	set	279
  9012  0114                     _ADFLTRL	set	276
  9013  0115                     _ADFLTRH	set	277
  9014  010C                     _ADCNT	set	268
  9015  010D                     _ADRPT	set	269
  9016  0113                     _ADSTPTH	set	275
  9017  0112                     _ADSTPTL	set	274
  9018  0111                     _ADUTHH	set	273
  9019  0110                     _ADUTHL	set	272
  9020  010F                     _ADLTHH	set	271
  9021  010E                     _ADLTHL	set	270
  9022  018F                     _SSP1STATbits	set	399
  9023  018E                     _SSP1MSK	set	398
  9024  018C                     _SSP1BUF	set	396
  9025  0191                     _SSP1CON2bits	set	401
  9026  018D                     _SSP1ADD	set	397
  9027  0191                     _SSP1CON2	set	401
  9028  0190                     _SSP1CON1	set	400
  9029  018F                     _SSP1STAT	set	399
  9030  0190                     _SSP1CON1bits	set	400
  9031  021F                     _CCPTMRS1bits	set	543
  9032  020F                     _T1GCONbits	set	527
  9033  020E                     _T1CONbits	set	526
  9034  020E                     _T1CON	set	526
  9035  020C                     _TMR1L	set	524
  9036  020D                     _TMR1H	set	525
  9037  0211                     _T1CLK	set	529
  9038  0210                     _T1GATE	set	528
  9039  020F                     _T1GCON	set	527
  9040  028D                     _PR2	set	653
  9041  028C                     _TMR2	set	652
  9042  028E                     _T2CONbits	set	654
  9043  0291                     _T2RSTbits	set	657
  9044  028F                     _T2HLTbits	set	655
  9045  028E                     _T2CON	set	654
  9046  028C                     _T2TMR	set	652
  9047  028D                     _T2PR	set	653
  9048  0291                     _T2RST	set	657
  9049  028F                     _T2HLT	set	655
  9050  0290                     _T2CLKCON	set	656
  9051  038C                     _PWM6DCL	set	908
  9052  038D                     _PWM6DCH	set	909
  9053  038E                     _PWM6CON	set	910
  9054  070F                     _PIR3bits	set	1807
  9055  0719                     _PIE3bits	set	1817
  9056  0710                     _PIR4bits	set	1808
  9057  071A                     _PIE4bits	set	1818
  9058  0716                     _PIE0bits	set	1814
  9059  070C                     _PIR0bits	set	1804
  9060  079B                     _PMD5	set	1947
  9061  079A                     _PMD4	set	1946
  9062  0799                     _PMD3	set	1945
  9063  0798                     _PMD2	set	1944
  9064  0797                     _PMD1	set	1943
  9065  0796                     _PMD0	set	1942
  9066  081F                     _NVMCON2	set	2079
  9067  081C                     _NVMDATL	set	2076
  9068  081D                     _NVMDATH	set	2077
  9069  081E                     _NVMCON1bits	set	2078
  9070  081B                     _NVMADRH	set	2075
  9071  081A                     _NVMADRL	set	2074
  9072  0892                     _OSCTUNE	set	2194
  9073  0893                     _OSCFRQ	set	2195
  9074  0891                     _OSCEN	set	2193
  9075  088F                     _OSCCON3	set	2191
  9076  088D                     _OSCCON1	set	2189
  9077  0EC6                     _SSP1DATPPS	set	3782
  9078  0EC5                     _SSP1CLKPPS	set	3781
  9079  0E90                     _INTPPS	set	3728
  9080  0F44                     _WPUBbits	set	3908
  9081  0F16                     _RA6PPS	set	3862
  9082  0F24                     _RC4PPS	set	3876
  9083  0F23                     _RC3PPS	set	3875
  9084  0F68                     _INLVLE	set	3944
  9085  0F5D                     _INLVLD	set	3933
  9086  0F52                     _INLVLC	set	3922
  9087  0F47                     _INLVLB	set	3911
  9088  0F3C                     _INLVLA	set	3900
  9089  0F67                     _SLRCONE	set	3943
  9090  0F5C                     _SLRCOND	set	3932
  9091  0F51                     _SLRCONC	set	3921
  9092  0F46                     _SLRCONB	set	3910
  9093  0F3B                     _SLRCONA	set	3899
  9094  0F5B                     _ODCOND	set	3931
  9095  0F50                     _ODCONC	set	3920
  9096  0F45                     _ODCONB	set	3909
  9097  0F3A                     _ODCONA	set	3898
  9098  0F66                     _ODCONE	set	3942
  9099  0F4F                     _WPUC	set	3919
  9100  0F39                     _WPUA	set	3897
  9101  0F44                     _WPUB	set	3908
  9102  0F65                     _WPUE	set	3941
  9103  0F5A                     _WPUD	set	3930
  9104  0F38                     _ANSELA	set	3896
  9105  0F64                     _ANSELE	set	3940
  9106  0F43                     _ANSELB	set	3907
  9107  0F4E                     _ANSELC	set	3918
  9108  0F59                     _ANSELD	set	3929
  9109  7A7C                     _WPUC4	set	31356
  9110  7A7B                     _WPUC3	set	31355
  9111                           
  9112                           ; #config settings
  9113  0000                     
  9114                           	psect	cinit
  9115  005D                     start_initialization:	
  9116  005D                     __initialization:	
  9117                           
  9118                           ; Initialize objects allocated to BANK0
  9119  005D  301E               	movlw	low __pidataBANK0
  9120  005E  0084               	movwf	4
  9121  005F  308B               	movlw	(high __pidataBANK0)| (0+128)
  9122  0060  0085               	movwf	5
  9123  0061  305D               	movlw	low __pdataBANK0
  9124  0062  0086               	movwf	6
  9125  0063  3000               	movlw	high __pdataBANK0
  9126  0064  0087               	movwf	7
  9127  0065  3007               	movlw	7
  9128  0066  318B  230A  3180   	fcall	init_ram
  9129                           
  9130                           ; Clear objects allocated to COMMON
  9131  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9132                           
  9133                           ; Clear objects allocated to BANK0
  9134  006A  3020               	movlw	low __pbssBANK0
  9135  006B  0084               	movwf	4
  9136  006C  3000               	movlw	high __pbssBANK0
  9137  006D  0085               	movwf	5
  9138  006E  3024               	movlw	36
  9139  006F  318B  2304  3180   	fcall	clear_ram0
  9140                           
  9141                           ; Clear objects allocated to BANK1
  9142  0072  30A0               	movlw	low __pbssBANK1
  9143  0073  0084               	movwf	4
  9144  0074  3000               	movlw	high __pbssBANK1
  9145  0075  0085               	movwf	5
  9146  0076  3022               	movlw	34
  9147  0077  318B  2304  3180   	fcall	clear_ram0
  9148  007A                     end_of_initialization:	
  9149                           ;End of C runtime variable initialization code
  9150                           
  9151  007A                     __end_of__initialization:	
  9152  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9153  007B  0020               	movlb	0
  9154  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9155                           
  9156                           	psect	bssCOMMON
  9157  007D                     __pbssCOMMON:	
  9158  007D                     _clkms:	
  9159  007D                     	ds	1
  9160                           
  9161                           	psect	bssBANK0
  9162  0020                     __pbssBANK0:	
  9163  0020                     _lum_threshold:	
  9164  0020                     	ds	2
  9165  0022                     _lum_bin:	
  9166  0022                     	ds	2
  9167  0024                     _duty_cycle:	
  9168  0024                     	ds	2
  9169  0026                     _convertedValue:	
  9170  0026                     	ds	2
  9171  0028                     _min_units:	
  9172  0028                     	ds	2
  9173  002A                     _min_tens:	
  9174  002A                     	ds	2
  9175  002C                     _hours_units:	
  9176  002C                     	ds	2
  9177  002E                     _hours_tens:	
  9178  002E                     	ds	2
  9179  0030                     _value:	
  9180  0030                     	ds	2
  9181  0032                     _i2c1_driver_i2cISR:	
  9182  0032                     	ds	2
  9183  0034                     _i2c1_driver_busCollisionISR:	
  9184  0034                     	ds	2
  9185  0036                     _alaf:	
  9186  0036                     	ds	1
  9187  0037                     _temp:	
  9188  0037                     	ds	1
  9189  0038                     _alarm:	
  9190  0038                     	ds	1
  9191  0039                     _config_mode:	
  9192  0039                     	ds	1
  9193  003A                     _set_mode:	
  9194  003A                     	ds	1
  9195  003B                     _last1m:	
  9196  003B                     	ds	1
  9197  003C                     _last5s:	
  9198  003C                     	ds	1
  9199  003D                     _last_ms2:	
  9200  003D                     	ds	1
  9201  003E                     _last_ms:	
  9202  003E                     	ds	1
  9203  003F                     _seg:	
  9204  003F                     	ds	1
  9205  0040                     _clkm:	
  9206  0040                     	ds	1
  9207  0041                     _clkh:	
  9208  0041                     	ds	1
  9209  0042                     _nreg_pt:	
  9210  0042                     	ds	1
  9211  0043                     _nreg_init:	
  9212  0043                     	ds	1
  9213                           
  9214                           	psect	dataBANK0
  9215  005D                     __pdataBANK0:	
  9216  005D                     _mode_field_subfield:	
  9217  005D                     	ds	4
  9218  0061                     _tala:	
  9219  0061                     	ds	1
  9220  0062                     _pmon:	
  9221  0062                     	ds	1
  9222  0063                     _nreg:	
  9223  0063                     	ds	1
  9224                           
  9225                           	psect	bssBANK1
  9226  00A0                     __pbssBANK1:	
  9227  00A0                     _i2c_status:	
  9228  00A0                     	ds	29
  9229  00BD                     _ring_byte:	
  9230  00BD                     	ds	5
  9231                           
  9232                           	psect	inittext
  9233  0B0A                     init_ram:	
  9234  0B0A  00FE               	movwf	btemp
  9235  0B0B                     initloop:	
  9236  0B0B  0012               	moviw fsr0++
  9237  0B0C  001E               	movwi fsr1++
  9238  0B0D  0BFE               	decfsz	btemp,f
  9239  0B0E  2B0B               	goto	initloop
  9240  0B0F  3400               	retlw	0
  9241                           
  9242                           	psect	clrtext
  9243  0B04                     clear_ram0:	
  9244                           ;	Called with FSR0 containing the base address, and
  9245                           ;	WREG with the size to clear
  9246                           
  9247  0B04  0064               	clrwdt	;clear the watchdog before getting into this loop
  9248  0B05                     clrloop0:	
  9249  0B05  0180               	clrf	0	;clear RAM location pointed to by FSR
  9250  0B06  3101               	addfsr 0,1
  9251  0B07  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9252  0B08  2B05               	goto	clrloop0	;have we reached the end yet?
  9253  0B09  3400               	retlw	0	;all done for this memory range, return
  9254                           
  9255                           	psect	cstackBANK1
  9256  00C2                     __pcstackBANK1:	
  9257  00C2                     main@aux:	
  9258                           
  9259                           ; 1 bytes @ 0x0
  9260  00C2                     	ds	1
  9261  00C3                     main@aux1:	
  9262                           
  9263                           ; 1 bytes @ 0x1
  9264  00C3                     	ds	3
  9265  00C6                     main@t5s:	
  9266                           
  9267                           ; 1 bytes @ 0x4
  9268  00C6                     	ds	1
  9269  00C7                     _main$2314:	
  9270                           
  9271                           ; 1 bytes @ 0x5
  9272  00C7                     	ds	1
  9273                           
  9274                           	psect	cstackCOMMON
  9275  0070                     __pcstackCOMMON:	
  9276  0070                     ?_i2c1_driver_open:	
  9277  0070                     ?_i2c1_driver_isNACK:	
  9278                           ; 1 bit 
  9279                           
  9280  0070                     ?_setCallBack:	
  9281                           ; 1 bit 
  9282                           
  9283  0070                     ?_mssp1_clearIRQ:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0070                     ??_mssp1_clearIRQ:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0070                     ?_i2c_busCollisionISR:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0070                     ??_i2c_busCollisionISR:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0070                     ?_i2c_ISR:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0070                     ?_i2c1_driver_resetBus:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0070                     ??_i2c1_driver_resetBus:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0070                     ?_i2c1_driver_restart:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0070                     ??_i2c1_driver_restart:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0070                     ?_i2c1_driver_stop:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0070                     ??_i2c1_driver_stop:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0070                     ?_i2c1_driver_TXData:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0070                     ??_i2c1_driver_TXData:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0070                     ?_i2c1_driver_startRX:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0070                     ??_i2c1_driver_startRX:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0070                     ?_i2c1_driver_sendACK:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0070                     ??_i2c1_driver_sendACK:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0070                     ?_i2c1_driver_sendNACK:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0070                     ??_i2c1_driver_sendNACK:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0070                     ??_i2c1_driver_isNACK:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0070                     ?_i2c1_driver_getRXData:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0070                     ??_i2c1_driver_getRXData:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0070                     ?_mssp1_setIRQ:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0070                     ??_mssp1_setIRQ:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0070                     ?_i2c1_driver_clearBusCollision:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0070                     ??_i2c1_driver_clearBusCollision:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0070                     ?_INT_CallBack:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0070                     ?_TMR0_ISR:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0070                     ?_TMR1_ISR:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0070                     ?_TMR2_ISR:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0070                     ?_PMD_Initialize:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0070                     ?_PIN_MANAGER_Initialize:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0070                     ?_OSCILLATOR_Initialize:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0070                     ?_PWM6_Initialize:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0070                     ?_ADCC_Initialize:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0070                     ?_TMR2_Initialize:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0070                     ?_TMR1_Initialize:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0070                     ?_TMR0_Initialize:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0070                     ?_TMR1_DefaultInterruptHandler:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0070                     ??_TMR1_DefaultInterruptHandler:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0070                     ?_TMR2_DefaultInterruptHandler:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0070                     ??_TMR2_DefaultInterruptHandler:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0070                     ?_checkDebounceSW1:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0070                     ?_TMR0_StopTimer:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0070                     ??_TMR0_StopTimer:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0070                     ?_I2C_Initialize:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0070                     ?_handler_clock_hms:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0070                     ??_handler_clock_hms:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0070                     ?_handler_clock_ms:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0070                     ??_handler_clock_ms:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0070                     ?_recoverData:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0070                     ?_tsttc:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0070                     ?_cksum_w:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0070                     ?_TMR0_StartTimer:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0070                     ?_config_routine:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448  0070                     ?_all_LED:	
  9449                           ; 1 bytes @ 0x0
  9450                           
  9451  0070                     ?_mod1_LED:	
  9452                           ; 1 bytes @ 0x0
  9453                           
  9454  0070                     ?_mod2_LED:	
  9455                           ; 1 bytes @ 0x0
  9456                           
  9457  0070                     ?_mod3_LED:	
  9458                           ; 1 bytes @ 0x0
  9459                           
  9460  0070                     ?_mod4_LED:	
  9461                           ; 1 bytes @ 0x0
  9462                           
  9463  0070                     ?_checkDebounceSW2:	
  9464                           ; 1 bytes @ 0x0
  9465                           
  9466  0070                     ?_mode_select_LED:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0070                     ?_clock_subfields:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0070                     ?_cksum:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0070                     ?_reset_recv:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0070                     ?_WriteI2C:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0070                     ?_ReadI2C:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0070                     ?_TMR0_DefaultInterruptHandler:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0070                     ??_TMR0_DefaultInterruptHandler:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0070                     ?_i2c_setBuffer:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0070                     ?_do_I2C_RESET:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0070                     ??_do_I2C_RESET:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0070                     ?_do_I2C_IDLE:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0070                     ??_do_I2C_IDLE:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0070                     ?_do_I2C_SEND_RESTART:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0070                     ??_do_I2C_SEND_RESTART:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0070                     ?_do_I2C_SEND_STOP:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0070                     ??_do_I2C_SEND_STOP:	
  9527                           ; 1 bytes @ 0x0
  9528                           
  9529  0070                     ?_do_I2C_SEND_ADR_READ:	
  9530                           ; 1 bytes @ 0x0
  9531                           
  9532  0070                     ??_do_I2C_SEND_ADR_READ:	
  9533                           ; 1 bytes @ 0x0
  9534                           
  9535  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9536                           ; 1 bytes @ 0x0
  9537                           
  9538  0070                     ?_do_I2C_RCEN:	
  9539                           ; 1 bytes @ 0x0
  9540                           
  9541  0070                     ??_do_I2C_RCEN:	
  9542                           ; 1 bytes @ 0x0
  9543                           
  9544  0070                     ?_do_I2C_DO_ACK:	
  9545                           ; 1 bytes @ 0x0
  9546                           
  9547  0070                     ??_do_I2C_DO_ACK:	
  9548                           ; 1 bytes @ 0x0
  9549                           
  9550  0070                     ?_do_I2C_DO_NACK_STOP:	
  9551                           ; 1 bytes @ 0x0
  9552                           
  9553  0070                     ??_do_I2C_DO_NACK_STOP:	
  9554                           ; 1 bytes @ 0x0
  9555                           
  9556  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9557                           ; 1 bytes @ 0x0
  9558                           
  9559  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9560                           ; 1 bytes @ 0x0
  9561                           
  9562  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9563                           ; 1 bytes @ 0x0
  9564                           
  9565  0070                     ?_do_I2C_TX:	
  9566                           ; 1 bytes @ 0x0
  9567                           
  9568  0070                     ?_do_I2C_RX:	
  9569                           ; 1 bytes @ 0x0
  9570                           
  9571  0070                     ?_do_I2C_TX_EMPTY:	
  9572                           ; 1 bytes @ 0x0
  9573                           
  9574  0070                     ?_INT_ISR:	
  9575                           ; 1 bytes @ 0x0
  9576                           
  9577  0070                     ?_INT_DefaultInterruptHandler:	
  9578                           ; 1 bytes @ 0x0
  9579                           
  9580  0070                     ??_INT_DefaultInterruptHandler:	
  9581                           ; 1 bytes @ 0x0
  9582                           
  9583  0070                     ?_EXT_INT_Initialize:	
  9584                           ; 1 bytes @ 0x0
  9585                           
  9586  0070                     ?_INTERRUPT_InterruptManager:	
  9587                           ; 1 bytes @ 0x0
  9588                           
  9589  0070                     ?_SYSTEM_Initialize:	
  9590                           ; 1 bytes @ 0x0
  9591                           
  9592  0070                     ?_ADCC_StartConversion:	
  9593                           ; 1 bytes @ 0x0
  9594                           
  9595  0070                     ?_ADCC_IsConversionDone:	
  9596                           ; 1 bytes @ 0x0
  9597                           
  9598  0070                     ?_TMR1_WriteTimer:	
  9599                           ; 1 bytes @ 0x0
  9600                           
  9601  0070                     ?_sw1_EXT:	
  9602                           ; 1 bytes @ 0x0
  9603                           
  9604  0070                     ?_ISR_3s:	
  9605                           ; 1 bytes @ 0x0
  9606                           
  9607  0070                     ?_main:	
  9608                           ; 1 bytes @ 0x0
  9609                           
  9610  0070                     ?_increment_subfield:	
  9611                           ; 1 bytes @ 0x0
  9612                           
  9613  0070                     ?i1_PWM6_LoadDutyValue:	
  9614                           ; 1 bytes @ 0x0
  9615                           
  9616  0070                     ?i1_checkDebounceSW1:	
  9617                           ; 1 bytes @ 0x0
  9618                           
  9619  0070                     ??i1_checkDebounceSW1:	
  9620                           ; 1 bytes @ 0x0
  9621                           
  9622  0070                     i2c1_driver_TXData@d:	
  9623                           ; 1 bytes @ 0x0
  9624                           
  9625  0070                     i2c_setBuffer@bufferSize:	
  9626                           ; 1 bytes @ 0x0
  9627                           
  9628  0070                     setCallBack@cb:	
  9629                           ; 2 bytes @ 0x0
  9630                           
  9631  0070                     TMR1_WriteTimer@timerVal:	
  9632                           ; 2 bytes @ 0x0
  9633                           
  9634  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9635                           ; 2 bytes @ 0x0
  9636                           
  9637                           
  9638                           ; 2 bytes @ 0x0
  9639  0070                     	ds	1
  9640  0071                     ??_TMR2_ISR:	
  9641  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9642                           ; 1 bytes @ 0x1
  9643                           
  9644                           
  9645                           ; 1 bytes @ 0x1
  9646  0071                     	ds	1
  9647  0072                     ??_TMR1_ISR:	
  9648  0072                     ??_i2c_setBuffer:	
  9649                           ; 1 bytes @ 0x2
  9650                           
  9651  0072                     ??_TMR1_WriteTimer:	
  9652                           ; 1 bytes @ 0x2
  9653                           
  9654  0072                     ??i1_PWM6_LoadDutyValue:	
  9655                           ; 1 bytes @ 0x2
  9656                           
  9657  0072                     setCallBack@p:	
  9658                           ; 1 bytes @ 0x2
  9659                           
  9660                           
  9661                           ; 1 bytes @ 0x2
  9662  0072                     	ds	1
  9663  0073                     ??_setCallBack:	
  9664  0073                     i2c_setBuffer@buffer:	
  9665                           ; 1 bytes @ 0x3
  9666                           
  9667                           
  9668                           ; 1 bytes @ 0x3
  9669  0073                     	ds	1
  9670  0074                     ??_ISR_3s:	
  9671  0074                     setCallBack@idx:	
  9672                           ; 1 bytes @ 0x4
  9673                           
  9674                           
  9675                           ; 1 bytes @ 0x4
  9676  0074                     	ds	1
  9677  0075                     ??_TMR0_ISR:	
  9678  0075                     ?_i2c_setDataCompleteCallback:	
  9679                           ; 1 bytes @ 0x5
  9680                           
  9681  0075                     i2c_setDataCompleteCallback@cb:	
  9682                           ; 1 bytes @ 0x5
  9683                           
  9684                           
  9685                           ; 2 bytes @ 0x5
  9686  0075                     	ds	2
  9687  0077                     ??_sw1_EXT:	
  9688  0077                     i2c_setDataCompleteCallback@p:	
  9689                           ; 1 bytes @ 0x7
  9690                           
  9691                           
  9692                           ; 1 bytes @ 0x7
  9693  0077                     	ds	1
  9694  0078                     ??_INT_CallBack:	
  9695  0078                     ??_i2c_setDataCompleteCallback:	
  9696                           ; 1 bytes @ 0x8
  9697                           
  9698  0078                     ??_INT_ISR:	
  9699                           ; 1 bytes @ 0x8
  9700                           
  9701                           
  9702                           ; 1 bytes @ 0x8
  9703  0078                     	ds	1
  9704  0079                     ?_returnStop:	
  9705  0079                     ?_returnReset:	
  9706                           ; 1 bytes @ 0x9
  9707                           
  9708  0079                     ?_i2c_restartWrite:	
  9709                           ; 1 bytes @ 0x9
  9710                           
  9711  0079                     ?_wr1RegCompleteHandler:	
  9712                           ; 1 bytes @ 0x9
  9713                           
  9714  0079                     ?_rd1RegCompleteHandler:	
  9715                           ; 1 bytes @ 0x9
  9716                           
  9717  0079                     ?_rd2RegCompleteHandler:	
  9718                           ; 1 bytes @ 0x9
  9719                           
  9720  0079                     ?_wr2RegCompleteHandler:	
  9721                           ; 1 bytes @ 0x9
  9722                           
  9723  0079                     ?_rdBlkRegCompleteHandler:	
  9724                           ; 1 bytes @ 0x9
  9725                           
  9726  0079                     i2c_restartWrite@p:	
  9727                           ; 1 bytes @ 0x9
  9728                           
  9729  0079                     returnStop@p:	
  9730                           ; 1 bytes @ 0x9
  9731                           
  9732  0079                     returnReset@p:	
  9733                           ; 1 bytes @ 0x9
  9734                           
  9735  0079                     wr1RegCompleteHandler@p:	
  9736                           ; 1 bytes @ 0x9
  9737                           
  9738  0079                     rd1RegCompleteHandler@p:	
  9739                           ; 1 bytes @ 0x9
  9740                           
  9741  0079                     rd2RegCompleteHandler@p:	
  9742                           ; 1 bytes @ 0x9
  9743                           
  9744  0079                     wr2RegCompleteHandler@p:	
  9745                           ; 1 bytes @ 0x9
  9746                           
  9747  0079                     rdBlkRegCompleteHandler@p:	
  9748                           ; 1 bytes @ 0x9
  9749                           
  9750                           
  9751                           ; 1 bytes @ 0x9
  9752  0079                     	ds	1
  9753  007A                     ??_returnStop:	
  9754  007A                     ??_returnReset:	
  9755                           ; 1 bytes @ 0xA
  9756                           
  9757  007A                     ??_i2c_restartWrite:	
  9758                           ; 1 bytes @ 0xA
  9759                           
  9760  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9761                           ; 1 bytes @ 0xA
  9762                           
  9763  007A                     ??_do_I2C_TX:	
  9764                           ; 1 bytes @ 0xA
  9765                           
  9766  007A                     ??_do_I2C_RX:	
  9767                           ; 1 bytes @ 0xA
  9768                           
  9769  007A                     ??_do_I2C_TX_EMPTY:	
  9770                           ; 1 bytes @ 0xA
  9771                           
  9772  007A                     ??_wr1RegCompleteHandler:	
  9773                           ; 1 bytes @ 0xA
  9774                           
  9775  007A                     ??_rd1RegCompleteHandler:	
  9776                           ; 1 bytes @ 0xA
  9777                           
  9778  007A                     ??_rd2RegCompleteHandler:	
  9779                           ; 1 bytes @ 0xA
  9780                           
  9781  007A                     ??_wr2RegCompleteHandler:	
  9782                           ; 1 bytes @ 0xA
  9783                           
  9784  007A                     ??_rdBlkRegCompleteHandler:	
  9785                           ; 1 bytes @ 0xA
  9786                           
  9787                           
  9788                           ; 1 bytes @ 0xA
  9789  007A                     	ds	3
  9790  007D                     ??_INTERRUPT_InterruptManager:	
  9791                           
  9792                           	psect	cstackBANK0
  9793  0044                     __pcstackBANK0:	
  9794                           ; 1 bytes @ 0xD
  9795                           
  9796  0044                     ??_i2c_ISR:	
  9797                           
  9798                           ; 1 bytes @ 0x0
  9799  0044                     	ds	3
  9800  0047                     ??_i2c1_driver_open:	
  9801  0047                     ??_PMD_Initialize:	
  9802                           ; 1 bytes @ 0x3
  9803                           
  9804  0047                     ??_PIN_MANAGER_Initialize:	
  9805                           ; 1 bytes @ 0x3
  9806                           
  9807  0047                     ??_OSCILLATOR_Initialize:	
  9808                           ; 1 bytes @ 0x3
  9809                           
  9810  0047                     ??_PWM6_Initialize:	
  9811                           ; 1 bytes @ 0x3
  9812                           
  9813  0047                     ??_ADCC_Initialize:	
  9814                           ; 1 bytes @ 0x3
  9815                           
  9816  0047                     ?_TMR1_SetInterruptHandler:	
  9817                           ; 1 bytes @ 0x3
  9818                           
  9819  0047                     ?_TMR2_SetInterruptHandler:	
  9820                           ; 1 bytes @ 0x3
  9821                           
  9822  0047                     ??_checkDebounceSW1:	
  9823                           ; 1 bytes @ 0x3
  9824                           
  9825  0047                     ??_I2C_Initialize:	
  9826                           ; 1 bytes @ 0x3
  9827                           
  9828  0047                     ?_TMR0_SetInterruptHandler:	
  9829                           ; 1 bytes @ 0x3
  9830                           
  9831  0047                     ?_LED_bin:	
  9832                           ; 1 bytes @ 0x3
  9833                           
  9834  0047                     ??_TMR0_StartTimer:	
  9835                           ; 1 bytes @ 0x3
  9836                           
  9837  0047                     ??_checkDebounceSW2:	
  9838                           ; 1 bytes @ 0x3
  9839                           
  9840  0047                     ??_WriteI2C:	
  9841                           ; 1 bytes @ 0x3
  9842                           
  9843  0047                     ??_ReadI2C:	
  9844                           ; 1 bytes @ 0x3
  9845                           
  9846  0047                     ?_INT_SetInterruptHandler:	
  9847                           ; 1 bytes @ 0x3
  9848                           
  9849  0047                     ??_ADCC_StartConversion:	
  9850                           ; 1 bytes @ 0x3
  9851                           
  9852  0047                     ??_ADCC_IsConversionDone:	
  9853                           ; 1 bytes @ 0x3
  9854                           
  9855  0047                     ?_PWM6_LoadDutyValue:	
  9856                           ; 1 bytes @ 0x3
  9857                           
  9858  0047                     ?_DATAEE_ReadByte:	
  9859                           ; 1 bytes @ 0x3
  9860                           
  9861  0047                     ?___bmul:	
  9862                           ; 1 bytes @ 0x3
  9863                           
  9864  0047                     ?_ADCC_GetConversionResult:	
  9865                           ; 1 bytes @ 0x3
  9866                           
  9867  0047                     ADCC_StartConversion@channel:	
  9868                           ; 2 bytes @ 0x3
  9869                           
  9870  0047                     ___bmul@multiplicand:	
  9871                           ; 1 bytes @ 0x3
  9872                           
  9873  0047                     INT_SetInterruptHandler@InterruptHandler:	
  9874                           ; 1 bytes @ 0x3
  9875                           
  9876  0047                     TMR1_SetInterruptHandler@InterruptHandler:	
  9877                           ; 2 bytes @ 0x3
  9878                           
  9879  0047                     PWM6_LoadDutyValue@dutyValue:	
  9880                           ; 2 bytes @ 0x3
  9881                           
  9882  0047                     DATAEE_ReadByte@bAdd:	
  9883                           ; 2 bytes @ 0x3
  9884                           
  9885  0047                     TMR2_SetInterruptHandler@InterruptHandler:	
  9886                           ; 2 bytes @ 0x3
  9887                           
  9888  0047                     LED_bin@value:	
  9889                           ; 2 bytes @ 0x3
  9890                           
  9891  0047                     TMR0_SetInterruptHandler@InterruptHandler:	
  9892                           ; 2 bytes @ 0x3
  9893                           
  9894                           
  9895                           ; 2 bytes @ 0x3
  9896  0047                     	ds	1
  9897  0048                     ??___bmul:	
  9898  0048                     WriteI2C@data_out:	
  9899                           ; 1 bytes @ 0x4
  9900                           
  9901                           
  9902                           ; 1 bytes @ 0x4
  9903  0048                     	ds	1
  9904  0049                     ??_TMR2_Initialize:	
  9905  0049                     ??_TMR1_Initialize:	
  9906                           ; 1 bytes @ 0x5
  9907                           
  9908  0049                     ??_TMR0_Initialize:	
  9909                           ; 1 bytes @ 0x5
  9910                           
  9911  0049                     ??_TMR1_SetInterruptHandler:	
  9912                           ; 1 bytes @ 0x5
  9913                           
  9914  0049                     ??_TMR2_SetInterruptHandler:	
  9915                           ; 1 bytes @ 0x5
  9916                           
  9917  0049                     ??_TMR0_SetInterruptHandler:	
  9918                           ; 1 bytes @ 0x5
  9919                           
  9920  0049                     ??_LED_bin:	
  9921                           ; 1 bytes @ 0x5
  9922                           
  9923  0049                     ??_tsttc:	
  9924                           ; 1 bytes @ 0x5
  9925                           
  9926  0049                     ??_cksum:	
  9927                           ; 1 bytes @ 0x5
  9928                           
  9929  0049                     ??_INT_SetInterruptHandler:	
  9930                           ; 1 bytes @ 0x5
  9931                           
  9932  0049                     ??_EXT_INT_Initialize:	
  9933                           ; 1 bytes @ 0x5
  9934                           
  9935  0049                     ??_SYSTEM_Initialize:	
  9936                           ; 1 bytes @ 0x5
  9937                           
  9938  0049                     ??_ADCC_GetConversionResult:	
  9939                           ; 1 bytes @ 0x5
  9940                           
  9941  0049                     ??_PWM6_LoadDutyValue:	
  9942                           ; 1 bytes @ 0x5
  9943                           
  9944  0049                     ??_DATAEE_ReadByte:	
  9945                           ; 1 bytes @ 0x5
  9946                           
  9947  0049                     ?_ADC_read:	
  9948                           ; 1 bytes @ 0x5
  9949                           
  9950  0049                     ___bmul@product:	
  9951                           ; 2 bytes @ 0x5
  9952                           
  9953                           
  9954                           ; 1 bytes @ 0x5
  9955  0049                     	ds	1
  9956  004A                     tsttc@value:	
  9957  004A                     cksum@res:	
  9958                           ; 1 bytes @ 0x6
  9959                           
  9960  004A                     ___bmul@multiplier:	
  9961                           ; 1 bytes @ 0x6
  9962                           
  9963                           
  9964                           ; 1 bytes @ 0x6
  9965  004A                     	ds	1
  9966  004B                     ??_ADC_read:	
  9967  004B                     ?_read_ring:	
  9968                           ; 1 bytes @ 0x7
  9969                           
  9970  004B                     ??_all_LED:	
  9971                           ; 1 bytes @ 0x7
  9972                           
  9973  004B                     ??_mod1_LED:	
  9974                           ; 1 bytes @ 0x7
  9975                           
  9976  004B                     ??_mod2_LED:	
  9977                           ; 1 bytes @ 0x7
  9978                           
  9979  004B                     ??_mod3_LED:	
  9980                           ; 1 bytes @ 0x7
  9981                           
  9982  004B                     ??_mod4_LED:	
  9983                           ; 1 bytes @ 0x7
  9984                           
  9985  004B                     ??_mode_select_LED:	
  9986                           ; 1 bytes @ 0x7
  9987                           
  9988  004B                     read_ring@nreg:	
  9989                           ; 1 bytes @ 0x7
  9990                           
  9991  004B                     cksum@i:	
  9992                           ; 1 bytes @ 0x7
  9993                           
  9994                           
  9995                           ; 2 bytes @ 0x7
  9996  004B                     	ds	1
  9997  004C                     read_ring@nreg_init:	
  9998                           
  9999                           ; 1 bytes @ 0x8
 10000  004C                     	ds	1
 10001  004D                     ?_DATAEE_WriteByte:	
 10002  004D                     read_ring@index:	
 10003                           ; 1 bytes @ 0x9
 10004                           
 10005  004D                     DATAEE_WriteByte@bAdd:	
 10006                           ; 1 bytes @ 0x9
 10007                           
 10008                           
 10009                           ; 2 bytes @ 0x9
 10010  004D                     	ds	1
 10011  004E                     ??_increment_subfield:	
 10012  004E                     read_ring@subindex:	
 10013                           ; 1 bytes @ 0xA
 10014                           
 10015  004E                     increment_subfield@plus:	
 10016                           ; 1 bytes @ 0xA
 10017                           
 10018                           
 10019                           ; 2 bytes @ 0xA
 10020  004E                     	ds	1
 10021  004F                     ??_read_ring:	
 10022  004F                     DATAEE_WriteByte@bData:	
 10023                           ; 1 bytes @ 0xB
 10024                           
 10025                           
 10026                           ; 1 bytes @ 0xB
 10027  004F                     	ds	1
 10028  0050                     ??_DATAEE_WriteByte:	
 10029  0050                     DATAEE_WriteByte@GIEBitValue:	
 10030                           ; 1 bytes @ 0xC
 10031                           
 10032  0050                     increment_subfield@exit:	
 10033                           ; 1 bytes @ 0xC
 10034                           
 10035                           
 10036                           ; 2 bytes @ 0xC
 10037  0050                     	ds	1
 10038  0051                     ?_push_ring:	
 10039  0051                     ??_cksum_w:	
 10040                           ; 1 bytes @ 0xD
 10041                           
 10042  0051                     ??_reset_recv:	
 10043                           ; 1 bytes @ 0xD
 10044                           
 10045  0051                     push_ring@nreg:	
 10046                           ; 1 bytes @ 0xD
 10047                           
 10048  0051                     read_ring@i:	
 10049                           ; 1 bytes @ 0xD
 10050                           
 10051  0051                     reset_recv@i:	
 10052                           ; 1 bytes @ 0xD
 10053                           
 10054                           
 10055                           ; 2 bytes @ 0xD
 10056  0051                     	ds	1
 10057  0052                     ??_clock_subfields:	
 10058  0052                     push_ring@nreg_init:	
 10059                           ; 1 bytes @ 0xE
 10060                           
 10061  0052                     read_ring@nreg_pt:	
 10062                           ; 1 bytes @ 0xE
 10063                           
 10064                           
 10065                           ; 1 bytes @ 0xE
 10066  0052                     	ds	1
 10067  0053                     ??_recoverData:	
 10068  0053                     push_ring@ring_byte:	
 10069                           ; 1 bytes @ 0xF
 10070                           
 10071  0053                     read_ring@absindex:	
 10072                           ; 1 bytes @ 0xF
 10073                           
 10074  0053                     clock_subfields@subfield:	
 10075                           ; 1 bytes @ 0xF
 10076                           
 10077                           
 10078                           ; 2 bytes @ 0xF
 10079  0053                     	ds	1
 10080  0054                     ??_push_ring:	
 10081                           
 10082                           ; 1 bytes @ 0x10
 10083  0054                     	ds	1
 10084  0055                     ??_config_routine:	
 10085                           
 10086                           ; 1 bytes @ 0x11
 10087  0055                     	ds	1
 10088  0056                     push_ring@i:	
 10089  0056                     config_routine@select_mode:	
 10090                           ; 1 bytes @ 0x12
 10091                           
 10092                           
 10093                           ; 2 bytes @ 0x12
 10094  0056                     	ds	1
 10095  0057                     push_ring@nreg_pt:	
 10096                           
 10097                           ; 1 bytes @ 0x13
 10098  0057                     	ds	1
 10099  0058                     ??_main:	
 10100                           
 10101                           ; 1 bytes @ 0x14
 10102  0058                     	ds	5
 10103                           
 10104                           	psect	maintext
 10105  007E                     __pmaintext:	
 10106 ;;
 10107 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10108 ;;
 10109 ;; *************** function _main *****************
 10110 ;; Defined at:
 10111 ;;		line 144 in file "main.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;		None
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  t5s             1    4[BANK1 ] unsigned char 
 10116 ;;  aux1            1    1[BANK1 ] unsigned char 
 10117 ;;  aux             1    0[BANK1 ] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : B1F/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Totals:         0       5       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;Total ram usage:       11 bytes
 10132 ;; Hardware stack levels required when called:   10
 10133 ;; This function calls:
 10134 ;;		_ADC_read
 10135 ;;		_DATAEE_WriteByte
 10136 ;;		_I2C_Initialize
 10137 ;;		_INT_SetInterruptHandler
 10138 ;;		_LED_bin
 10139 ;;		_PWM6_LoadDutyValue
 10140 ;;		_SYSTEM_Initialize
 10141 ;;		_TMR0_SetInterruptHandler
 10142 ;;		_TMR0_StartTimer
 10143 ;;		_TMR1_SetInterruptHandler
 10144 ;;		_TMR2_SetInterruptHandler
 10145 ;;		_cksum_w
 10146 ;;		_config_routine
 10147 ;;		_i2c1_driver_open
 10148 ;;		_push_ring
 10149 ;;		_read_ring
 10150 ;;		_recoverData
 10151 ;;		_tsttc
 10152 ;; This function is called by:
 10153 ;;		Startup code after reset
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _main
 10159  007E                     _main:	
 10160  007E                     l6591:	
 10161                           ;incstack = 0
 10162                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10163                           
 10164                           
 10165                           ;main.c: 146:     SYSTEM_Initialize();
 10166  007E  318D  2593  3180   	fcall	_SYSTEM_Initialize
 10167                           
 10168                           ;main.c: 147:     I2C_Initialize();
 10169  0081  318B  237A  3180   	fcall	_I2C_Initialize
 10170                           
 10171                           ;main.c: 148:     TMR0_SetInterruptHandler(ISR_3s);
 10172  0084  302D               	movlw	low _ISR_3s
 10173  0085  0020               	movlb	0	; select bank0
 10174  0086  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10175  0087  300D               	movlw	high _ISR_3s
 10176  0088  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10177  0089  318B  2368  3180   	fcall	_TMR0_SetInterruptHandler
 10178                           
 10179                           ;main.c: 149:     TMR1_SetInterruptHandler(handler_clock_hms);
 10180  008C  304D               	movlw	low _handler_clock_hms
 10181  008D  0020               	movlb	0	; select bank0
 10182  008E  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10183  008F  300F               	movlw	high _handler_clock_hms
 10184  0090  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10185  0091  318A  22FE  3180   	fcall	_TMR1_SetInterruptHandler
 10186                           
 10187                           ;main.c: 150:     INT_SetInterruptHandler(sw1_EXT);
 10188  0094  30EC               	movlw	low _sw1_EXT
 10189  0095  0020               	movlb	0	; select bank0
 10190  0096  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 10191  0097  300E               	movlw	high _sw1_EXT
 10192  0098  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10193  0099  318A  22F8  3180   	fcall	_INT_SetInterruptHandler
 10194                           
 10195                           ;main.c: 151:     TMR2_SetInterruptHandler(handler_clock_ms);
 10196  009C  30AF               	movlw	low _handler_clock_ms
 10197  009D  0020               	movlb	0	; select bank0
 10198  009E  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10199  009F  300B               	movlw	high _handler_clock_ms
 10200  00A0  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10201  00A1  318B  2371  3180   	fcall	_TMR2_SetInterruptHandler
 10202  00A4                     l6593:	
 10203  00A4                     l6595:	
 10204  00A4                     l1220:	
 10205  00A4  3096               	movlw	150
 10206  00A5  0020               	movlb	0	; select bank0
 10207  00A6  00D8               	movwf	??_main
 10208  00A7  0858               	movf	??_main,w
 10209  00A8  00E3               	movwf	_nreg
 10210  00A9                     l6599:	
 10211                           
 10212                           ;main.c: 159:     nreg_pt = 0;
 10213  00A9  01C2               	clrf	_nreg_pt
 10214  00AA                     l6601:	
 10215                           
 10216                           ;main.c: 160:     nreg_init = 0;
 10217  00AA  01C3               	clrf	_nreg_init
 10218  00AB                     l6603:	
 10219                           
 10220                           ;main.c: 161:     alaf = 1;
 10221  00AB  01B6               	clrf	_alaf
 10222  00AC  0AB6               	incf	_alaf,f
 10223  00AD                     l6605:	
 10224                           
 10225                           ;main.c: 162:     temp = 0;
 10226  00AD  01B7               	clrf	_temp
 10227  00AE                     l6607:	
 10228                           
 10229                           ;main.c: 163:     lum_bin = 0;
 10230  00AE  01A2               	clrf	_lum_bin
 10231  00AF  01A3               	clrf	_lum_bin+1
 10232  00B0                     l6609:	
 10233                           
 10234                           ;main.c: 164:     lum_threshold = 0;
 10235  00B0  01A0               	clrf	_lum_threshold
 10236  00B1  01A1               	clrf	_lum_threshold+1
 10237  00B2                     l6611:	
 10238                           
 10239                           ;main.c: 165:     duty_cycle = 0;
 10240  00B2  01A4               	clrf	_duty_cycle
 10241  00B3  01A5               	clrf	_duty_cycle+1
 10242  00B4                     l6613:	
 10243                           
 10244                           ;main.c: 166:     set_mode= 0;
 10245  00B4  01BA               	clrf	_set_mode	;volatile
 10246  00B5                     l6615:	
 10247                           
 10248                           ;main.c: 168:     i2c1_driver_open();
 10249  00B5  318B  23BB  3180   	fcall	_i2c1_driver_open
 10250  00B8                     l6617:	
 10251                           
 10252                           ;main.c: 174:     recoverData();
 10253  00B8  3183  2385  3180   	fcall	_recoverData
 10254  00BB                     l6619:	
 10255                           
 10256                           ;main.c: 176:     PWM6_LoadDutyValue(0);
 10257  00BB  3000               	movlw	0
 10258  00BC  0020               	movlb	0	; select bank0
 10259  00BD  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10260  00BE  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10261  00BF  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10262  00C2                     l6621:	
 10263                           
 10264                           ;main.c: 177:     alarm = 0 ;
 10265  00C2  0020               	movlb	0	; select bank0
 10266  00C3  01B8               	clrf	_alarm	;volatile
 10267  00C4                     l6623:	
 10268  00C4  003E               	movlb	30	; select bank30
 10269  00C5  1644               	bsf	68,4	;volatile
 10270  00C6                     l6625:	
 10271                           
 10272                           ;main.c: 181:     (INTCONbits.GIE = 1);
 10273  00C6  178B               	bsf	11,7	;volatile
 10274  00C7                     l6627:	
 10275                           
 10276                           ;main.c: 184:     (INTCONbits.PEIE = 1);
 10277  00C7  170B               	bsf	11,6	;volatile
 10278  00C8                     l1223:	
 10279                           ;main.c: 187:     while (1)
 10280                           
 10281  00C8  0063               	sleep	;# 
 10282  00C9                     l6629:	
 10283                           
 10284                           ;main.c: 191:             __nop();
 10285  00C9  0000               	nop
 10286  00CA                     l6631:	
 10287                           
 10288                           ;main.c: 193:              PIE4bits.TMR1IE = 0;
 10289  00CA  002E               	movlb	14	; select bank14
 10290  00CB  101A               	bcf	26,0	;volatile
 10291  00CC                     l6633:	
 10292                           
 10293                           ;main.c: 194:              t5s = last5s;
 10294  00CC  0020               	movlb	0	; select bank0
 10295  00CD  083C               	movf	_last5s,w	;volatile
 10296  00CE  00D8               	movwf	??_main
 10297  00CF  0858               	movf	??_main,w
 10298  00D0  0021               	movlb	1	; select bank1
 10299  00D1  00C6               	movwf	main@t5s^(0+128)
 10300  00D2                     l6635:	
 10301                           
 10302                           ;main.c: 195:              PIE4bits.TMR1IE = 1;
 10303  00D2  002E               	movlb	14	; select bank14
 10304  00D3  141A               	bsf	26,0	;volatile
 10305  00D4                     l6637:	
 10306                           
 10307                           ;main.c: 197:              if(t5s >= pmon){
 10308  00D4  0020               	movlb	0	; select bank0
 10309  00D5  0862               	movf	_pmon,w
 10310  00D6  0021               	movlb	1	; select bank1
 10311  00D7  0246               	subwf	main@t5s^(0+128),w
 10312  00D8  1C03               	skipc
 10313  00D9  28DB               	goto	u4151
 10314  00DA  28DC               	goto	u4150
 10315  00DB                     u4151:	
 10316  00DB  28C8               	goto	l1223
 10317  00DC                     u4150:	
 10318  00DC                     l6639:	
 10319                           
 10320                           ;main.c: 198:                     PIE4bits.TMR1IE = 0;
 10321  00DC  002E               	movlb	14	; select bank14
 10322  00DD  101A               	bcf	26,0	;volatile
 10323  00DE                     l6641:	
 10324                           
 10325                           ;main.c: 199:                     last5s =0;
 10326  00DE  0020               	movlb	0	; select bank0
 10327  00DF  01BC               	clrf	_last5s	;volatile
 10328  00E0                     l6643:	
 10329                           
 10330                           ;main.c: 200:                     PIE4bits.TMR1IE = 1;
 10331  00E0  002E               	movlb	14	; select bank14
 10332  00E1  141A               	bsf	26,0	;volatile
 10333  00E2                     l6645:	
 10334                           
 10335                           ;main.c: 203:                          if(!config_mode){
 10336  00E2  0020               	movlb	0	; select bank0
 10337  00E3  0839               	movf	_config_mode,w	;volatile
 10338  00E4  1D03               	btfss	3,2
 10339  00E5  28E7               	goto	u4161
 10340  00E6  28E8               	goto	u4160
 10341  00E7                     u4161:	
 10342  00E7  29DE               	goto	l6707
 10343  00E8                     u4160:	
 10344  00E8                     l6647:	
 10345                           
 10346                           ;main.c: 205:                              convertedValue = ADC_read();
 10347  00E8  318D  255F  3180   	fcall	_ADC_read
 10348  00EB  0020               	movlb	0	; select bank0
 10349  00EC  084A               	movf	?_ADC_read+1,w
 10350  00ED  00A7               	movwf	_convertedValue+1
 10351  00EE  0849               	movf	?_ADC_read,w
 10352  00EF  00A6               	movwf	_convertedValue
 10353  00F0                     l6649:	
 10354                           
 10355                           ;main.c: 207:                              lum_bin = (convertedValue >> 8);
 10356  00F0  0827               	movf	_convertedValue+1,w
 10357  00F1  00D9               	movwf	??_main+1
 10358  00F2  0826               	movf	_convertedValue,w
 10359  00F3  00D8               	movwf	??_main
 10360  00F4  0859               	movf	??_main+1,w
 10361  00F5  00D8               	movwf	??_main
 10362  00F6  01D9               	clrf	??_main+1
 10363  00F7  0858               	movf	??_main,w
 10364  00F8  00A2               	movwf	_lum_bin
 10365  00F9  0859               	movf	??_main+1,w
 10366  00FA  00A3               	movwf	_lum_bin+1
 10367  00FB                     l6651:	
 10368                           
 10369                           ;main.c: 209:                              LED_bin(lum_bin);
 10370  00FB  0823               	movf	_lum_bin+1,w
 10371  00FC  00C8               	movwf	LED_bin@value+1
 10372  00FD  0822               	movf	_lum_bin,w
 10373  00FE  00C7               	movwf	LED_bin@value
 10374  00FF  318D  2579  3180   	fcall	_LED_bin
 10375  0102                     l6653:	
 10376                           
 10377                           ;main.c: 211:                              _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 10378  0102  3053               	movlw	83
 10379  0103                     u4307:	
 10380  0103  0B89               	decfsz	9,f
 10381  0104  2903               	goto	u4307
 10382  0105  0000               	nop
 10383  0106                     l6655:	
 10384                           
 10385                           ;main.c: 214:                              __nop();
 10386  0106  0000               	nop
 10387  0107                     l6657:	
 10388                           
 10389                           ;main.c: 215:                              temp = tsttc();
 10390  0107  3182  2235  3180   	fcall	_tsttc
 10391  010A  0020               	movlb	0	; select bank0
 10392  010B  00D8               	movwf	??_main
 10393  010C  0858               	movf	??_main,w
 10394  010D  00B7               	movwf	_temp
 10395  010E                     l6659:	
 10396                           
 10397                           ;main.c: 216:                              __nop();
 10398  010E  0000               	nop
 10399  010F                     l6661:	
 10400                           
 10401                           ;main.c: 219:                              lum_threshold = (lum_bin > 2 || temp > 100 ) 
      +                          & alaf;
 10402  010F  0021               	movlb	1	; select bank1
 10403  0110  01C7               	clrf	_main$2314^(0+128)
 10404  0111  0AC7               	incf	_main$2314^(0+128),f
 10405  0112                     l6663:	
 10406  0112  3000               	movlw	0
 10407  0113  0020               	movlb	0	; select bank0
 10408  0114  0223               	subwf	_lum_bin+1,w
 10409  0115  3003               	movlw	3
 10410  0116  1903               	skipnz
 10411  0117  0222               	subwf	_lum_bin,w
 10412  0118  1803               	skipnc
 10413  0119  291B               	goto	u4171
 10414  011A  291C               	goto	u4170
 10415  011B                     u4171:	
 10416  011B  2924               	goto	l6669
 10417  011C                     u4170:	
 10418  011C                     l6665:	
 10419  011C  3065               	movlw	101
 10420  011D  0237               	subwf	_temp,w
 10421  011E  1803               	skipnc
 10422  011F  2921               	goto	u4181
 10423  0120  2922               	goto	u4180
 10424  0121                     u4181:	
 10425  0121  2924               	goto	l6669
 10426  0122                     u4180:	
 10427  0122                     l6667:	
 10428  0122  0021               	movlb	1	; select bank1
 10429  0123  01C7               	clrf	_main$2314^(0+128)
 10430  0124                     l6669:	
 10431  0124  0021               	movlb	1	; select bank1
 10432  0125  0847               	movf	_main$2314^(0+128),w
 10433  0126  0020               	movlb	0	; select bank0
 10434  0127  0536               	andwf	_alaf,w
 10435  0128  00D8               	movwf	??_main
 10436  0129  01D9               	clrf	??_main+1
 10437  012A  0858               	movf	??_main,w
 10438  012B  00A0               	movwf	_lum_threshold
 10439  012C  0859               	movf	??_main+1,w
 10440  012D  00A1               	movwf	_lum_threshold+1
 10441  012E                     l6671:	
 10442                           
 10443                           ;main.c: 221:                            if (temp != read_ring(nreg_pt, nreg, nreg_init,
      +                           0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10444  012E  0863               	movf	_nreg,w
 10445  012F  00D8               	movwf	??_main
 10446  0130  0858               	movf	??_main,w
 10447  0131  00CB               	movwf	read_ring@nreg
 10448  0132  0843               	movf	_nreg_init,w
 10449  0133  00D9               	movwf	??_main+1
 10450  0134  0859               	movf	??_main+1,w
 10451  0135  00CC               	movwf	read_ring@nreg_init
 10452  0136  01CD               	clrf	read_ring@index
 10453  0137  3003               	movlw	3
 10454  0138  00DA               	movwf	??_main+2
 10455  0139  085A               	movf	??_main+2,w
 10456  013A  00CE               	movwf	read_ring@subindex
 10457  013B  0842               	movf	_nreg_pt,w
 10458  013C  318F  2781  3180   	fcall	_read_ring
 10459  013F  0020               	movlb	0	; select bank0
 10460  0140  0637               	xorwf	_temp,w
 10461  0141  1D03               	skipz
 10462  0142  2944               	goto	u4191
 10463  0143  2945               	goto	u4190
 10464  0144                     u4191:	
 10465  0144  2963               	goto	l1231
 10466  0145                     u4190:	
 10467  0145                     l6673:	
 10468  0145  0863               	movf	_nreg,w
 10469  0146  00D8               	movwf	??_main
 10470  0147  0858               	movf	??_main,w
 10471  0148  00CB               	movwf	read_ring@nreg
 10472  0149  0843               	movf	_nreg_init,w
 10473  014A  00D9               	movwf	??_main+1
 10474  014B  0859               	movf	??_main+1,w
 10475  014C  00CC               	movwf	read_ring@nreg_init
 10476  014D  01CD               	clrf	read_ring@index
 10477  014E  3004               	movlw	4
 10478  014F  00DA               	movwf	??_main+2
 10479  0150  085A               	movf	??_main+2,w
 10480  0151  00CE               	movwf	read_ring@subindex
 10481  0152  0842               	movf	_nreg_pt,w
 10482  0153  318F  2781  3180   	fcall	_read_ring
 10483  0156  0020               	movlb	0	; select bank0
 10484  0157  00DB               	movwf	??_main+3
 10485  0158  01DC               	clrf	??_main+4
 10486  0159  0823               	movf	_lum_bin+1,w
 10487  015A  065C               	xorwf	??_main+4,w
 10488  015B  1D03               	skipz
 10489  015C  295F               	goto	u4205
 10490  015D  0822               	movf	_lum_bin,w
 10491  015E  065B               	xorwf	??_main+3,w
 10492  015F                     u4205:	
 10493  015F  1903               	skipnz
 10494  0160  2962               	goto	u4201
 10495  0161  2963               	goto	u4200
 10496  0162                     u4201:	
 10497  0162  29A5               	goto	l6685
 10498  0163                     u4200:	
 10499  0163                     l1231:	
 10500                           
 10501                           ;main.c: 223:                                  PIE4bits.TMR1IE = 0;
 10502  0163  002E               	movlb	14	; select bank14
 10503  0164  101A               	bcf	26,0	;volatile
 10504  0165                     l6675:	
 10505                           
 10506                           ;main.c: 224:                                  ring_byte[0] = clkh;
 10507  0165  0020               	movlb	0	; select bank0
 10508  0166  0841               	movf	_clkh,w	;volatile
 10509  0167  00D8               	movwf	??_main
 10510  0168  0858               	movf	??_main,w
 10511  0169  0021               	movlb	1	; select bank1
 10512  016A  00BD               	movwf	_ring_byte^(0+128)
 10513                           
 10514                           ;main.c: 225:                                  ring_byte[1] = clkm;
 10515  016B  0020               	movlb	0	; select bank0
 10516  016C  0840               	movf	_clkm,w	;volatile
 10517  016D  00D8               	movwf	??_main
 10518  016E  0858               	movf	??_main,w
 10519  016F  0021               	movlb	1	; select bank1
 10520  0170  00BE               	movwf	(_ring_byte^(0+128)+1)
 10521                           
 10522                           ;main.c: 226:                                  ring_byte[2] = seg;
 10523  0171  0020               	movlb	0	; select bank0
 10524  0172  083F               	movf	_seg,w	;volatile
 10525  0173  00D8               	movwf	??_main
 10526  0174  0858               	movf	??_main,w
 10527  0175  0021               	movlb	1	; select bank1
 10528  0176  00BF               	movwf	(_ring_byte^(0+128)+2)
 10529  0177                     l6677:	
 10530                           
 10531                           ;main.c: 227:                                   PIE4bits.TMR1IE = 1;
 10532  0177  002E               	movlb	14	; select bank14
 10533  0178  141A               	bsf	26,0	;volatile
 10534                           
 10535                           ;main.c: 228:                                  ring_byte[3] = temp;
 10536  0179  0020               	movlb	0	; select bank0
 10537  017A  0837               	movf	_temp,w
 10538  017B  00D8               	movwf	??_main
 10539  017C  0858               	movf	??_main,w
 10540  017D  0021               	movlb	1	; select bank1
 10541  017E  00C0               	movwf	(_ring_byte^(0+128)+3)
 10542                           
 10543                           ;main.c: 229:                                  ring_byte[4] = lum_bin;
 10544  017F  0020               	movlb	0	; select bank0
 10545  0180  0822               	movf	_lum_bin,w
 10546  0181  00D8               	movwf	??_main
 10547  0182  0858               	movf	??_main,w
 10548  0183  0021               	movlb	1	; select bank1
 10549  0184  00C1               	movwf	(_ring_byte^(0+128)+4)
 10550  0185                     l6679:	
 10551                           
 10552                           ;main.c: 230:                                  push_ring(&nreg_pt, nreg, &nreg_init, rin
      +                          g_byte);
 10553  0185  0020               	movlb	0	; select bank0
 10554  0186  0863               	movf	_nreg,w
 10555  0187  00D8               	movwf	??_main
 10556  0188  0858               	movf	??_main,w
 10557  0189  00D1               	movwf	push_ring@nreg
 10558  018A  3043               	movlw	(low (_nreg_init| 0))& (0+255)
 10559  018B  00D9               	movwf	??_main+1
 10560  018C  0859               	movf	??_main+1,w
 10561  018D  00D2               	movwf	push_ring@nreg_init
 10562  018E  30BD               	movlw	(low (_ring_byte| 0))& (0+255)
 10563  018F  00DA               	movwf	??_main+2
 10564  0190  085A               	movf	??_main+2,w
 10565  0191  00D3               	movwf	push_ring@ring_byte
 10566  0192  3042               	movlw	(low (_nreg_pt| 0))& (0+255)
 10567  0193  3187  27AA  3180   	fcall	_push_ring
 10568  0196                     l6681:	
 10569                           
 10570                           ;main.c: 232:                                  DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt
      +                          );
 10571  0196  30F9               	movlw	249
 10572  0197  0020               	movlb	0	; select bank0
 10573  0198  00CD               	movwf	DATAEE_WriteByte@bAdd
 10574  0199  30F0               	movlw	240
 10575  019A  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10576  019B  0842               	movf	_nreg_pt,w
 10577  019C  00D8               	movwf	??_main
 10578  019D  0858               	movf	??_main,w
 10579  019E  00CF               	movwf	DATAEE_WriteByte@bData
 10580  019F  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10581  01A2                     l6683:	
 10582                           
 10583                           ;main.c: 233:                                  cksum_w();
 10584  01A2  318C  242A  3180   	fcall	_cksum_w
 10585  01A5                     l6685:	
 10586                           
 10587                           ;main.c: 238:                              if(lum_threshold){
 10588  01A5  0020               	movlb	0	; select bank0
 10589  01A6  0820               	movf	_lum_threshold,w
 10590  01A7  0421               	iorwf	_lum_threshold+1,w
 10591  01A8  1903               	btfsc	3,2
 10592  01A9  29AB               	goto	u4211
 10593  01AA  29AC               	goto	u4210
 10594  01AB                     u4211:	
 10595  01AB  29CE               	goto	l6701
 10596  01AC                     u4210:	
 10597  01AC                     l6687:	
 10598                           
 10599                           ;main.c: 239:                                  if(alarm == 2){
 10600  01AC  3002               	movlw	2
 10601  01AD  0638               	xorwf	_alarm,w	;volatile
 10602  01AE  1D03               	btfss	3,2
 10603  01AF  29B1               	goto	u4221
 10604  01B0  29B2               	goto	u4220
 10605  01B1                     u4221:	
 10606  01B1  29BE               	goto	l6693
 10607  01B2                     u4220:	
 10608  01B2                     l6689:	
 10609                           
 10610                           ;main.c: 240:                                      duty_cycle +=1 ;
 10611  01B2  3001               	movlw	1
 10612  01B3  07A4               	addwf	_duty_cycle,f
 10613  01B4  3000               	movlw	0
 10614  01B5  3DA5               	addwfc	_duty_cycle+1,f
 10615  01B6                     l6691:	
 10616                           
 10617                           ;main.c: 241:                                      PWM6_LoadDutyValue(duty_cycle);
 10618  01B6  0825               	movf	_duty_cycle+1,w
 10619  01B7  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10620  01B8  0824               	movf	_duty_cycle,w
 10621  01B9  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10622  01BA  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10623                           
 10624                           ;main.c: 242:                                  }
 10625  01BD  29EA               	goto	l6715
 10626  01BE                     l6693:	
 10627  01BE  0838               	movf	_alarm,w	;volatile
 10628  01BF  1D03               	btfss	3,2
 10629  01C0  29C2               	goto	u4231
 10630  01C1  29C3               	goto	u4230
 10631  01C2                     u4231:	
 10632  01C2  29DD               	goto	l1236
 10633  01C3                     u4230:	
 10634  01C3                     l6695:	
 10635                           
 10636                           ;main.c: 244:                                      PIE0bits.TMR0IE = 1;
 10637  01C3  002E               	movlb	14	; select bank14
 10638  01C4  1696               	bsf	22,5	;volatile
 10639  01C5                     l6697:	
 10640                           
 10641                           ;main.c: 245:                                      TMR0_StartTimer();
 10642  01C5  318A  22B6  3180   	fcall	_TMR0_StartTimer
 10643  01C8                     l6699:	
 10644                           
 10645                           ;main.c: 246:                                      alarm = 2 ;
 10646  01C8  3002               	movlw	2
 10647  01C9  0020               	movlb	0	; select bank0
 10648  01CA  00D8               	movwf	??_main
 10649  01CB  0858               	movf	??_main,w
 10650  01CC  00B8               	movwf	_alarm	;volatile
 10651  01CD  29EA               	goto	l6715
 10652  01CE                     l6701:	
 10653                           
 10654                           ;main.c: 250:                                  if(alarm == 2){
 10655  01CE  3002               	movlw	2
 10656  01CF  0638               	xorwf	_alarm,w	;volatile
 10657  01D0  1D03               	btfss	3,2
 10658  01D1  29D3               	goto	u4241
 10659  01D2  29D4               	goto	u4240
 10660  01D3                     u4241:	
 10661  01D3  29EA               	goto	l6715
 10662  01D4                     u4240:	
 10663  01D4                     l6703:	
 10664                           
 10665                           ;main.c: 251:                                      PWM6_LoadDutyValue(0);
 10666  01D4  3000               	movlw	0
 10667  01D5  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10668  01D6  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10669  01D7  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10670  01DA                     l6705:	
 10671                           
 10672                           ;main.c: 252:                                      alarm = 0 ;
 10673  01DA  0020               	movlb	0	; select bank0
 10674  01DB  01B8               	clrf	_alarm	;volatile
 10675  01DC  29EA               	goto	l6715
 10676  01DD                     l1236:	
 10677                           ;main.c: 254:                              }
 10678                           
 10679                           
 10680                           ;main.c: 256:                           }
 10681  01DD  29EA               	goto	l6715
 10682  01DE                     l6707:	
 10683  01DE  0339               	decf	_config_mode,w	;volatile
 10684  01DF  1D03               	btfss	3,2
 10685  01E0  29E2               	goto	u4251
 10686  01E1  29E3               	goto	u4250
 10687  01E2                     u4251:	
 10688  01E2  29EA               	goto	l6715
 10689  01E3                     u4250:	
 10690  01E3                     l6709:	
 10691                           
 10692                           ;main.c: 260:                            (PIE0bits.INTE = 0);
 10693  01E3  002E               	movlb	14	; select bank14
 10694  01E4  1016               	bcf	22,0	;volatile
 10695  01E5                     l6711:	
 10696                           
 10697                           ;main.c: 261:                            config_routine();
 10698  01E5  3184  241D  3180   	fcall	_config_routine
 10699  01E8                     l6713:	
 10700                           
 10701                           ;main.c: 262:                            (PIE0bits.INTE = 1);
 10702  01E8  002E               	movlb	14	; select bank14
 10703  01E9  1416               	bsf	22,0	;volatile
 10704  01EA                     l6715:	
 10705                           
 10706                           ;main.c: 265:                      _delay((unsigned long)((10)*(1000000/4000.0)));
 10707  01EA  3004               	movlw	4
 10708  01EB  0020               	movlb	0	; select bank0
 10709  01EC  00D8               	movwf	??_main
 10710  01ED  303D               	movlw	61
 10711  01EE                     u4317:	
 10712  01EE  0B89               	decfsz	9,f
 10713  01EF  29EE               	goto	u4317
 10714  01F0  0BD8               	decfsz	??_main,f
 10715  01F1  29EE               	goto	u4317
 10716  01F2  3200               	nop2
 10717  01F3                     l6717:	
 10718                           
 10719                           ;main.c: 267:                     }while(alarm == 2);
 10720  01F3  3002               	movlw	2
 10721  01F4  0020               	movlb	0	; select bank0
 10722  01F5  0638               	xorwf	_alarm,w	;volatile
 10723  01F6  1903               	btfsc	3,2
 10724  01F7  29F9               	goto	u4261
 10725  01F8  29FA               	goto	u4260
 10726  01F9                     u4261:	
 10727  01F9  28E2               	goto	l6645
 10728  01FA                     u4260:	
 10729  01FA                     l1240:	
 10730                           
 10731                           ;main.c: 269:                         PIE4bits.TMR1IE = 0;
 10732  01FA  002E               	movlb	14	; select bank14
 10733  01FB  101A               	bcf	26,0	;volatile
 10734  01FC                     l6719:	
 10735                           
 10736                           ;main.c: 270:                         if (last1m >= 1) {
 10737  01FC  0020               	movlb	0	; select bank0
 10738  01FD  083B               	movf	_last1m,w	;volatile
 10739  01FE  1903               	btfsc	3,2
 10740  01FF  2A01               	goto	u4271
 10741  0200  2A02               	goto	u4270
 10742  0201                     u4271:	
 10743  0201  2A30               	goto	l1241
 10744  0202                     u4270:	
 10745  0202                     l6721:	
 10746                           
 10747                           ;main.c: 272:                             last1m = 0;
 10748  0202  01BB               	clrf	_last1m	;volatile
 10749  0203                     l6723:	
 10750                           
 10751                           ;main.c: 273:                             aux = clkh;
 10752  0203  0841               	movf	_clkh,w	;volatile
 10753  0204  00D8               	movwf	??_main
 10754  0205  0858               	movf	??_main,w
 10755  0206  0021               	movlb	1	; select bank1
 10756  0207  00C2               	movwf	main@aux^(0+128)
 10757  0208                     l6725:	
 10758                           
 10759                           ;main.c: 274:                             aux1 = clkm;
 10760  0208  0020               	movlb	0	; select bank0
 10761  0209  0840               	movf	_clkm,w	;volatile
 10762  020A  00D8               	movwf	??_main
 10763  020B  0858               	movf	??_main,w
 10764  020C  0021               	movlb	1	; select bank1
 10765  020D  00C3               	movwf	main@aux1^(0+128)
 10766  020E                     l6727:	
 10767                           
 10768                           ;main.c: 275:                             PIE4bits.TMR1IE = 1;
 10769  020E  002E               	movlb	14	; select bank14
 10770  020F  141A               	bsf	26,0	;volatile
 10771  0210                     l6729:	
 10772                           
 10773                           ;main.c: 276:                             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10774  0210  30F6               	movlw	246
 10775  0211  0020               	movlb	0	; select bank0
 10776  0212  00CD               	movwf	DATAEE_WriteByte@bAdd
 10777  0213  30F0               	movlw	240
 10778  0214  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10779  0215  0021               	movlb	1	; select bank1
 10780  0216  0842               	movf	main@aux^(0+128),w
 10781  0217  0020               	movlb	0	; select bank0
 10782  0218  00D8               	movwf	??_main
 10783  0219  0858               	movf	??_main,w
 10784  021A  00CF               	movwf	DATAEE_WriteByte@bData
 10785  021B  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10786  021E                     l6731:	
 10787                           
 10788                           ;main.c: 277:                             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10789  021E  30F7               	movlw	247
 10790  021F  0020               	movlb	0	; select bank0
 10791  0220  00CD               	movwf	DATAEE_WriteByte@bAdd
 10792  0221  30F0               	movlw	240
 10793  0222  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10794  0223  0021               	movlb	1	; select bank1
 10795  0224  0843               	movf	main@aux1^(0+128),w
 10796  0225  0020               	movlb	0	; select bank0
 10797  0226  00D8               	movwf	??_main
 10798  0227  0858               	movf	??_main,w
 10799  0228  00CF               	movwf	DATAEE_WriteByte@bData
 10800  0229  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10801  022C                     l6733:	
 10802                           
 10803                           ;main.c: 278:                             cksum_w();
 10804  022C  318C  242A  3180   	fcall	_cksum_w
 10805                           
 10806                           ;main.c: 280:                         }else{
 10807  022F  28C8               	goto	l1223
 10808  0230                     l1241:	
 10809                           
 10810                           ;main.c: 281:                           PIE4bits.TMR1IE = 1;}
 10811  0230  002E               	movlb	14	; select bank14
 10812  0231  141A               	bsf	26,0	;volatile
 10813  0232  28C8               	goto	l1223
 10814  0233  3180  285B         	ljmp	start
 10815  0235                     __end_of_main:	
 10816                           
 10817                           	psect	text1
 10818  0235                     __ptext1:	
 10819 ;; *************** function _tsttc *****************
 10820 ;; Defined at:
 10821 ;;		line 15 in file "I2C/i2c.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  value           1    6[BANK0 ] unsigned char 
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      unsigned char 
 10828 ;; Registers used:
 10829 ;;		wreg, status,2, status,0, pclath, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;Total ram usage:        2 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    7
 10842 ;; This function calls:
 10843 ;;		_ReadI2C
 10844 ;;		_WriteI2C
 10845 ;; This function is called by:
 10846 ;;		_main
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _tsttc
 10852  0235                     _tsttc:	
 10853  0235                     l1416:	
 10854                           ;incstack = 0
 10855                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 10856                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 10857                           
 10858  0235                     l6333:	
 10859                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10860                           
 10861  0235  0023               	movlb	3	; select bank3
 10862  0236  0C0F               	rrf	15,w	;volatile
 10863  0237  0C89               	rrf	9,f
 10864  0238  3901               	andlw	1
 10865  0239  0020               	movlb	0	; select bank0
 10866  023A  00C9               	movwf	??_tsttc
 10867  023B  0023               	movlb	3	; select bank3
 10868  023C  0811               	movf	17,w	;volatile
 10869  023D  391F               	andlw	31
 10870  023E  0020               	movlb	0	; select bank0
 10871  023F  0449               	iorwf	??_tsttc,w
 10872  0240  1D03               	btfss	3,2
 10873  0241  2A43               	goto	u3601
 10874  0242  2A44               	goto	u3600
 10875  0243                     u3601:	
 10876  0243  2A35               	goto	l6333
 10877  0244                     u3600:	
 10878  0244                     l1419:	
 10879                           
 10880                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 10881  0244  0023               	movlb	3	; select bank3
 10882  0245  1411               	bsf	17,0	;volatile
 10883  0246                     l1420:	
 10884  0246  1811               	btfsc	17,0	;volatile
 10885  0247  2A49               	goto	u3611
 10886  0248  2A4A               	goto	u3610
 10887  0249                     u3611:	
 10888  0249  2A46               	goto	l1420
 10889  024A                     u3610:	
 10890  024A                     l6335:	
 10891  024A  0023               	movlb	3	; select bank3
 10892  024B  0C0F               	rrf	15,w	;volatile
 10893  024C  0C89               	rrf	9,f
 10894  024D  3901               	andlw	1
 10895  024E  0020               	movlb	0	; select bank0
 10896  024F  00C9               	movwf	??_tsttc
 10897  0250  0023               	movlb	3	; select bank3
 10898  0251  0811               	movf	17,w	;volatile
 10899  0252  391F               	andlw	31
 10900  0253  0020               	movlb	0	; select bank0
 10901  0254  0449               	iorwf	??_tsttc,w
 10902  0255  1D03               	btfss	3,2
 10903  0256  2A58               	goto	u3621
 10904  0257  2A59               	goto	u3620
 10905  0258                     u3621:	
 10906  0258  2A4A               	goto	l6335
 10907  0259                     u3620:	
 10908  0259                     l6337:	
 10909                           
 10910                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10911  0259  309A               	movlw	154
 10912  025A  3185  2568  3182   	fcall	_WriteI2C
 10913  025D                     l6339:	
 10914  025D  0023               	movlb	3	; select bank3
 10915  025E  0C0F               	rrf	15,w	;volatile
 10916  025F  0C89               	rrf	9,f
 10917  0260  3901               	andlw	1
 10918  0261  0020               	movlb	0	; select bank0
 10919  0262  00C9               	movwf	??_tsttc
 10920  0263  0023               	movlb	3	; select bank3
 10921  0264  0811               	movf	17,w	;volatile
 10922  0265  391F               	andlw	31
 10923  0266  0020               	movlb	0	; select bank0
 10924  0267  0449               	iorwf	??_tsttc,w
 10925  0268  1D03               	btfss	3,2
 10926  0269  2A6B               	goto	u3631
 10927  026A  2A6C               	goto	u3630
 10928  026B                     u3631:	
 10929  026B  2A5D               	goto	l6339
 10930  026C                     u3630:	
 10931  026C                     l6341:	
 10932                           
 10933                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10934  026C  3001               	movlw	1
 10935  026D  3185  2568  3182   	fcall	_WriteI2C
 10936  0270                     l6343:	
 10937  0270  0023               	movlb	3	; select bank3
 10938  0271  0C0F               	rrf	15,w	;volatile
 10939  0272  0C89               	rrf	9,f
 10940  0273  3901               	andlw	1
 10941  0274  0020               	movlb	0	; select bank0
 10942  0275  00C9               	movwf	??_tsttc
 10943  0276  0023               	movlb	3	; select bank3
 10944  0277  0811               	movf	17,w	;volatile
 10945  0278  391F               	andlw	31
 10946  0279  0020               	movlb	0	; select bank0
 10947  027A  0449               	iorwf	??_tsttc,w
 10948  027B  1D03               	btfss	3,2
 10949  027C  2A7E               	goto	u3641
 10950  027D  2A7F               	goto	u3640
 10951  027E                     u3641:	
 10952  027E  2A70               	goto	l6343
 10953  027F                     u3640:	
 10954  027F                     l1431:	
 10955                           
 10956                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 10957  027F  0023               	movlb	3	; select bank3
 10958  0280  1491               	bsf	17,1	;volatile
 10959  0281                     l1432:	
 10960  0281  1891               	btfsc	17,1	;volatile
 10961  0282  2A84               	goto	u3651
 10962  0283  2A85               	goto	u3650
 10963  0284                     u3651:	
 10964  0284  2A81               	goto	l1432
 10965  0285                     u3650:	
 10966  0285                     l6345:	
 10967  0285  0023               	movlb	3	; select bank3
 10968  0286  0C0F               	rrf	15,w	;volatile
 10969  0287  0C89               	rrf	9,f
 10970  0288  3901               	andlw	1
 10971  0289  0020               	movlb	0	; select bank0
 10972  028A  00C9               	movwf	??_tsttc
 10973  028B  0023               	movlb	3	; select bank3
 10974  028C  0811               	movf	17,w	;volatile
 10975  028D  391F               	andlw	31
 10976  028E  0020               	movlb	0	; select bank0
 10977  028F  0449               	iorwf	??_tsttc,w
 10978  0290  1D03               	btfss	3,2
 10979  0291  2A93               	goto	u3661
 10980  0292  2A94               	goto	u3660
 10981  0293                     u3661:	
 10982  0293  2A85               	goto	l6345
 10983  0294                     u3660:	
 10984  0294                     l6347:	
 10985                           
 10986                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10987  0294  309B               	movlw	155
 10988  0295  3185  2568  3182   	fcall	_WriteI2C
 10989  0298                     l6349:	
 10990  0298  0023               	movlb	3	; select bank3
 10991  0299  0C0F               	rrf	15,w	;volatile
 10992  029A  0C89               	rrf	9,f
 10993  029B  3901               	andlw	1
 10994  029C  0020               	movlb	0	; select bank0
 10995  029D  00C9               	movwf	??_tsttc
 10996  029E  0023               	movlb	3	; select bank3
 10997  029F  0811               	movf	17,w	;volatile
 10998  02A0  391F               	andlw	31
 10999  02A1  0020               	movlb	0	; select bank0
 11000  02A2  0449               	iorwf	??_tsttc,w
 11001  02A3  1D03               	btfss	3,2
 11002  02A4  2AA6               	goto	u3671
 11003  02A5  2AA7               	goto	u3670
 11004  02A6                     u3671:	
 11005  02A6  2A98               	goto	l6349
 11006  02A7                     u3670:	
 11007  02A7                     l6351:	
 11008                           
 11009                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11010  02A7  318D  25EA  3182   	fcall	_ReadI2C
 11011  02AA  0020               	movlb	0	; select bank0
 11012  02AB  00C9               	movwf	??_tsttc
 11013  02AC  0849               	movf	??_tsttc,w
 11014  02AD  00CA               	movwf	tsttc@value
 11015  02AE                     l6353:	
 11016  02AE  0023               	movlb	3	; select bank3
 11017  02AF  0C0F               	rrf	15,w	;volatile
 11018  02B0  0C89               	rrf	9,f
 11019  02B1  3901               	andlw	1
 11020  02B2  0020               	movlb	0	; select bank0
 11021  02B3  00C9               	movwf	??_tsttc
 11022  02B4  0023               	movlb	3	; select bank3
 11023  02B5  0811               	movf	17,w	;volatile
 11024  02B6  391F               	andlw	31
 11025  02B7  0020               	movlb	0	; select bank0
 11026  02B8  0449               	iorwf	??_tsttc,w
 11027  02B9  1D03               	btfss	3,2
 11028  02BA  2ABC               	goto	u3681
 11029  02BB  2ABD               	goto	u3680
 11030  02BC                     u3681:	
 11031  02BC  2AAE               	goto	l6353
 11032  02BD                     u3680:	
 11033  02BD                     l1443:	
 11034                           
 11035                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11036  02BD  0023               	movlb	3	; select bank3
 11037  02BE  1691               	bsf	17,5	;volatile
 11038  02BF  1611               	bsf	17,4	;volatile
 11039  02C0                     l1444:	
 11040  02C0  1A11               	btfsc	17,4	;volatile
 11041  02C1  2AC3               	goto	u3691
 11042  02C2  2AC4               	goto	u3690
 11043  02C3                     u3691:	
 11044  02C3  2AC0               	goto	l1444
 11045  02C4                     u3690:	
 11046  02C4                     l6355:	
 11047  02C4  0023               	movlb	3	; select bank3
 11048  02C5  0C0F               	rrf	15,w	;volatile
 11049  02C6  0C89               	rrf	9,f
 11050  02C7  3901               	andlw	1
 11051  02C8  0020               	movlb	0	; select bank0
 11052  02C9  00C9               	movwf	??_tsttc
 11053  02CA  0023               	movlb	3	; select bank3
 11054  02CB  0811               	movf	17,w	;volatile
 11055  02CC  391F               	andlw	31
 11056  02CD  0020               	movlb	0	; select bank0
 11057  02CE  0449               	iorwf	??_tsttc,w
 11058  02CF  1D03               	btfss	3,2
 11059  02D0  2AD2               	goto	u3701
 11060  02D1  2AD3               	goto	u3700
 11061  02D2                     u3701:	
 11062  02D2  2AC4               	goto	l6355
 11063  02D3                     u3700:	
 11064  02D3                     l1449:	
 11065                           
 11066                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11067  02D3  0023               	movlb	3	; select bank3
 11068  02D4  1511               	bsf	17,2	;volatile
 11069  02D5                     l1450:	
 11070  02D5  1911               	btfsc	17,2	;volatile
 11071  02D6  2AD8               	goto	u3711
 11072  02D7  2AD9               	goto	u3710
 11073  02D8                     u3711:	
 11074  02D8  2AD5               	goto	l1450
 11075  02D9                     u3710:	
 11076  02D9                     l1452:	
 11077                           
 11078                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11079  02D9  0020               	movlb	0	; select bank0
 11080  02DA  1F4A               	btfss	tsttc@value,6
 11081  02DB  2ADD               	goto	u3721
 11082  02DC  2ADE               	goto	u3720
 11083  02DD                     u3721:	
 11084  02DD  2A35               	goto	l1416
 11085  02DE                     u3720:	
 11086  02DE                     l6357:	
 11087  02DE  0023               	movlb	3	; select bank3
 11088  02DF  0C0F               	rrf	15,w	;volatile
 11089  02E0  0C89               	rrf	9,f
 11090  02E1  3901               	andlw	1
 11091  02E2  0020               	movlb	0	; select bank0
 11092  02E3  00C9               	movwf	??_tsttc
 11093  02E4  0023               	movlb	3	; select bank3
 11094  02E5  0811               	movf	17,w	;volatile
 11095  02E6  391F               	andlw	31
 11096  02E7  0020               	movlb	0	; select bank0
 11097  02E8  0449               	iorwf	??_tsttc,w
 11098  02E9  1D03               	btfss	3,2
 11099  02EA  2AEC               	goto	u3731
 11100  02EB  2AED               	goto	u3730
 11101  02EC                     u3731:	
 11102  02EC  2ADE               	goto	l6357
 11103  02ED                     u3730:	
 11104  02ED                     l1456:	
 11105                           
 11106                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11107  02ED  0023               	movlb	3	; select bank3
 11108  02EE  1411               	bsf	17,0	;volatile
 11109  02EF                     l1457:	
 11110  02EF  1811               	btfsc	17,0	;volatile
 11111  02F0  2AF2               	goto	u3741
 11112  02F1  2AF3               	goto	u3740
 11113  02F2                     u3741:	
 11114  02F2  2AEF               	goto	l1457
 11115  02F3                     u3740:	
 11116  02F3                     l6359:	
 11117  02F3  0023               	movlb	3	; select bank3
 11118  02F4  0C0F               	rrf	15,w	;volatile
 11119  02F5  0C89               	rrf	9,f
 11120  02F6  3901               	andlw	1
 11121  02F7  0020               	movlb	0	; select bank0
 11122  02F8  00C9               	movwf	??_tsttc
 11123  02F9  0023               	movlb	3	; select bank3
 11124  02FA  0811               	movf	17,w	;volatile
 11125  02FB  391F               	andlw	31
 11126  02FC  0020               	movlb	0	; select bank0
 11127  02FD  0449               	iorwf	??_tsttc,w
 11128  02FE  1D03               	btfss	3,2
 11129  02FF  2B01               	goto	u3751
 11130  0300  2B02               	goto	u3750
 11131  0301                     u3751:	
 11132  0301  2AF3               	goto	l6359
 11133  0302                     u3750:	
 11134  0302                     l6361:	
 11135                           
 11136                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11137  0302  309A               	movlw	154
 11138  0303  3185  2568  3182   	fcall	_WriteI2C
 11139  0306                     l6363:	
 11140  0306  0023               	movlb	3	; select bank3
 11141  0307  0C0F               	rrf	15,w	;volatile
 11142  0308  0C89               	rrf	9,f
 11143  0309  3901               	andlw	1
 11144  030A  0020               	movlb	0	; select bank0
 11145  030B  00C9               	movwf	??_tsttc
 11146  030C  0023               	movlb	3	; select bank3
 11147  030D  0811               	movf	17,w	;volatile
 11148  030E  391F               	andlw	31
 11149  030F  0020               	movlb	0	; select bank0
 11150  0310  0449               	iorwf	??_tsttc,w
 11151  0311  1D03               	btfss	3,2
 11152  0312  2B14               	goto	u3761
 11153  0313  2B15               	goto	u3760
 11154  0314                     u3761:	
 11155  0314  2B06               	goto	l6363
 11156  0315                     u3760:	
 11157  0315                     l6365:	
 11158                           
 11159                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11160  0315  3000               	movlw	0
 11161  0316  3185  2568  3182   	fcall	_WriteI2C
 11162  0319                     l6367:	
 11163  0319  0023               	movlb	3	; select bank3
 11164  031A  0C0F               	rrf	15,w	;volatile
 11165  031B  0C89               	rrf	9,f
 11166  031C  3901               	andlw	1
 11167  031D  0020               	movlb	0	; select bank0
 11168  031E  00C9               	movwf	??_tsttc
 11169  031F  0023               	movlb	3	; select bank3
 11170  0320  0811               	movf	17,w	;volatile
 11171  0321  391F               	andlw	31
 11172  0322  0020               	movlb	0	; select bank0
 11173  0323  0449               	iorwf	??_tsttc,w
 11174  0324  1D03               	btfss	3,2
 11175  0325  2B27               	goto	u3771
 11176  0326  2B28               	goto	u3770
 11177  0327                     u3771:	
 11178  0327  2B19               	goto	l6367
 11179  0328                     u3770:	
 11180  0328                     l1468:	
 11181                           
 11182                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11183  0328  0023               	movlb	3	; select bank3
 11184  0329  1491               	bsf	17,1	;volatile
 11185  032A                     l1469:	
 11186  032A  1891               	btfsc	17,1	;volatile
 11187  032B  2B2D               	goto	u3781
 11188  032C  2B2E               	goto	u3780
 11189  032D                     u3781:	
 11190  032D  2B2A               	goto	l1469
 11191  032E                     u3780:	
 11192  032E                     l6369:	
 11193  032E  0023               	movlb	3	; select bank3
 11194  032F  0C0F               	rrf	15,w	;volatile
 11195  0330  0C89               	rrf	9,f
 11196  0331  3901               	andlw	1
 11197  0332  0020               	movlb	0	; select bank0
 11198  0333  00C9               	movwf	??_tsttc
 11199  0334  0023               	movlb	3	; select bank3
 11200  0335  0811               	movf	17,w	;volatile
 11201  0336  391F               	andlw	31
 11202  0337  0020               	movlb	0	; select bank0
 11203  0338  0449               	iorwf	??_tsttc,w
 11204  0339  1D03               	btfss	3,2
 11205  033A  2B3C               	goto	u3791
 11206  033B  2B3D               	goto	u3790
 11207  033C                     u3791:	
 11208  033C  2B2E               	goto	l6369
 11209  033D                     u3790:	
 11210  033D                     l6371:	
 11211                           
 11212                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11213  033D  309B               	movlw	155
 11214  033E  3185  2568  3182   	fcall	_WriteI2C
 11215  0341                     l6373:	
 11216  0341  0023               	movlb	3	; select bank3
 11217  0342  0C0F               	rrf	15,w	;volatile
 11218  0343  0C89               	rrf	9,f
 11219  0344  3901               	andlw	1
 11220  0345  0020               	movlb	0	; select bank0
 11221  0346  00C9               	movwf	??_tsttc
 11222  0347  0023               	movlb	3	; select bank3
 11223  0348  0811               	movf	17,w	;volatile
 11224  0349  391F               	andlw	31
 11225  034A  0020               	movlb	0	; select bank0
 11226  034B  0449               	iorwf	??_tsttc,w
 11227  034C  1D03               	btfss	3,2
 11228  034D  2B4F               	goto	u3801
 11229  034E  2B50               	goto	u3800
 11230  034F                     u3801:	
 11231  034F  2B41               	goto	l6373
 11232  0350                     u3800:	
 11233  0350                     l6375:	
 11234                           
 11235                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11236  0350  318D  25EA  3182   	fcall	_ReadI2C
 11237  0353  0020               	movlb	0	; select bank0
 11238  0354  00C9               	movwf	??_tsttc
 11239  0355  0849               	movf	??_tsttc,w
 11240  0356  00CA               	movwf	tsttc@value
 11241  0357                     l6377:	
 11242  0357  0023               	movlb	3	; select bank3
 11243  0358  0C0F               	rrf	15,w	;volatile
 11244  0359  0C89               	rrf	9,f
 11245  035A  3901               	andlw	1
 11246  035B  0020               	movlb	0	; select bank0
 11247  035C  00C9               	movwf	??_tsttc
 11248  035D  0023               	movlb	3	; select bank3
 11249  035E  0811               	movf	17,w	;volatile
 11250  035F  391F               	andlw	31
 11251  0360  0020               	movlb	0	; select bank0
 11252  0361  0449               	iorwf	??_tsttc,w
 11253  0362  1D03               	btfss	3,2
 11254  0363  2B65               	goto	u3811
 11255  0364  2B66               	goto	u3810
 11256  0365                     u3811:	
 11257  0365  2B57               	goto	l6377
 11258  0366                     u3810:	
 11259  0366                     l1480:	
 11260                           
 11261                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11262  0366  0023               	movlb	3	; select bank3
 11263  0367  1691               	bsf	17,5	;volatile
 11264  0368  1611               	bsf	17,4	;volatile
 11265  0369                     l1481:	
 11266  0369  1A11               	btfsc	17,4	;volatile
 11267  036A  2B6C               	goto	u3821
 11268  036B  2B6D               	goto	u3820
 11269  036C                     u3821:	
 11270  036C  2B69               	goto	l1481
 11271  036D                     u3820:	
 11272  036D                     l6379:	
 11273  036D  0023               	movlb	3	; select bank3
 11274  036E  0C0F               	rrf	15,w	;volatile
 11275  036F  0C89               	rrf	9,f
 11276  0370  3901               	andlw	1
 11277  0371  0020               	movlb	0	; select bank0
 11278  0372  00C9               	movwf	??_tsttc
 11279  0373  0023               	movlb	3	; select bank3
 11280  0374  0811               	movf	17,w	;volatile
 11281  0375  391F               	andlw	31
 11282  0376  0020               	movlb	0	; select bank0
 11283  0377  0449               	iorwf	??_tsttc,w
 11284  0378  1D03               	btfss	3,2
 11285  0379  2B7B               	goto	u3831
 11286  037A  2B7C               	goto	u3830
 11287  037B                     u3831:	
 11288  037B  2B6D               	goto	l6379
 11289  037C                     u3830:	
 11290  037C                     l1486:	
 11291                           
 11292                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11293  037C  0023               	movlb	3	; select bank3
 11294  037D  1511               	bsf	17,2	;volatile
 11295  037E                     l1487:	
 11296  037E  1911               	btfsc	17,2	;volatile
 11297  037F  2B81               	goto	u3841
 11298  0380  2B82               	goto	u3840
 11299  0381                     u3841:	
 11300  0381  2B7E               	goto	l1487
 11301  0382                     u3840:	
 11302  0382                     l6381:	
 11303                           
 11304                           ;I2C/i2c.c: 42:  return value;
 11305  0382  0020               	movlb	0	; select bank0
 11306  0383  084A               	movf	tsttc@value,w
 11307  0384                     l1490:	
 11308  0384  0008               	return
 11309  0385                     __end_of_tsttc:	
 11310                           
 11311                           	psect	text2
 11312  0568                     __ptext2:	
 11313 ;; *************** function _WriteI2C *****************
 11314 ;; Defined at:
 11315 ;;		line 88 in file "I2C/i2c.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  data_out        1    wreg     unsigned char 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;  data_out        1    4[BANK0 ] unsigned char 
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      char 
 11322 ;; Registers used:
 11323 ;;		wreg, status,2, status,0
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;Total ram usage:        2 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; Hardware stack levels required when called:    6
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_tsttc
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           
 11344                           ;psect for function _WriteI2C
 11345  0568                     _WriteI2C:	
 11346                           
 11347                           ;incstack = 0
 11348                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11349                           ;WriteI2C@data_out stored from wreg
 11350  0568  0020               	movlb	0	; select bank0
 11351  0569  00C8               	movwf	WriteI2C@data_out
 11352  056A                     l6187:	
 11353                           
 11354                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11355  056A  0848               	movf	WriteI2C@data_out,w
 11356  056B  0023               	movlb	3	; select bank3
 11357  056C  008C               	movwf	12	;volatile
 11358  056D                     l6189:	
 11359                           
 11360                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11361  056D  1F90               	btfss	16,7	;volatile
 11362  056E  2D70               	goto	u3421
 11363  056F  2D71               	goto	u3420
 11364  0570                     u3421:	
 11365  0570  2D72               	goto	l6195
 11366  0571                     u3420:	
 11367  0571  2DC1               	goto	l1506
 11368  0572                     l6195:	
 11369                           
 11370                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11371  0572  300F               	movlw	15
 11372  0573  0510               	andwf	16,w	;volatile
 11373  0574  0020               	movlb	0	; select bank0
 11374  0575  00C7               	movwf	??_WriteI2C
 11375  0576  3008               	movlw	8
 11376  0577  0647               	xorwf	??_WriteI2C,w
 11377  0578  1903               	btfsc	3,2
 11378  0579  2D7B               	goto	u3431
 11379  057A  2D7C               	goto	u3430
 11380  057B                     u3431:	
 11381  057B  2D95               	goto	l6207
 11382  057C                     u3430:	
 11383  057C                     l6197:	
 11384  057C  300F               	movlw	15
 11385  057D  0023               	movlb	3	; select bank3
 11386  057E  0510               	andwf	16,w	;volatile
 11387  057F  0020               	movlb	0	; select bank0
 11388  0580  00C7               	movwf	??_WriteI2C
 11389  0581  300B               	movlw	11
 11390  0582  0647               	xorwf	??_WriteI2C,w
 11391  0583  1903               	btfsc	3,2
 11392  0584  2D86               	goto	u3441
 11393  0585  2D87               	goto	u3440
 11394  0586                     u3441:	
 11395  0586  2D95               	goto	l6207
 11396  0587                     u3440:	
 11397  0587                     l6199:	
 11398                           
 11399                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11400  0587  0023               	movlb	3	; select bank3
 11401  0588  1610               	bsf	16,4	;volatile
 11402  0589                     l1509:	
 11403                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11404                           
 11405  0589  002E               	movlb	14	; select bank14
 11406  058A  1C0F               	btfss	15,0	;volatile
 11407  058B  2D8D               	goto	u3451
 11408  058C  2D8E               	goto	u3450
 11409  058D                     u3451:	
 11410  058D  2D89               	goto	l1509
 11411  058E                     u3450:	
 11412  058E                     l1511:	
 11413                           
 11414                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11415  058E  0023               	movlb	3	; select bank3
 11416  058F  190F               	btfsc	15,2	;volatile
 11417  0590  2D92               	goto	u3461
 11418  0591  2D93               	goto	u3460
 11419  0592                     u3461:	
 11420  0592  2DC1               	goto	l1506
 11421  0593                     u3460:	
 11422  0593                     l6201:	
 11423  0593  080F               	movf	15,w	;volatile
 11424  0594  2DC1               	goto	l1506
 11425  0595                     l6207:	
 11426  0595  300F               	movlw	15
 11427  0596  0023               	movlb	3	; select bank3
 11428  0597  0510               	andwf	16,w	;volatile
 11429  0598  0020               	movlb	0	; select bank0
 11430  0599  00C7               	movwf	??_WriteI2C
 11431  059A  3008               	movlw	8
 11432  059B  0647               	xorwf	??_WriteI2C,w
 11433  059C  1903               	btfsc	3,2
 11434  059D  2D9F               	goto	u3471
 11435  059E  2DA0               	goto	u3470
 11436  059F                     u3471:	
 11437  059F  2DAB               	goto	l1518
 11438  05A0                     u3470:	
 11439  05A0                     l6209:	
 11440  05A0  300F               	movlw	15
 11441  05A1  0023               	movlb	3	; select bank3
 11442  05A2  0510               	andwf	16,w	;volatile
 11443  05A3  0020               	movlb	0	; select bank0
 11444  05A4  00C7               	movwf	??_WriteI2C
 11445  05A5  300B               	movlw	11
 11446  05A6  0647               	xorwf	??_WriteI2C,w
 11447  05A7  1D03               	btfss	3,2
 11448  05A8  2DAA               	goto	u3481
 11449  05A9  2DAB               	goto	u3480
 11450  05AA                     u3481:	
 11451  05AA  2DC1               	goto	l1506
 11452  05AB                     u3480:	
 11453  05AB                     l1518:	
 11454  05AB  0023               	movlb	3	; select bank3
 11455  05AC  180F               	btfsc	15,0	;volatile
 11456  05AD  2DAF               	goto	u3491
 11457  05AE  2DB0               	goto	u3490
 11458  05AF                     u3491:	
 11459  05AF  2DAB               	goto	l1518
 11460  05B0                     u3490:	
 11461  05B0                     l6211:	
 11462  05B0  0023               	movlb	3	; select bank3
 11463  05B1  0C0F               	rrf	15,w	;volatile
 11464  05B2  0C89               	rrf	9,f
 11465  05B3  3901               	andlw	1
 11466  05B4  0020               	movlb	0	; select bank0
 11467  05B5  00C7               	movwf	??_WriteI2C
 11468  05B6  0023               	movlb	3	; select bank3
 11469  05B7  0811               	movf	17,w	;volatile
 11470  05B8  391F               	andlw	31
 11471  05B9  0020               	movlb	0	; select bank0
 11472  05BA  0447               	iorwf	??_WriteI2C,w
 11473  05BB  1D03               	btfss	3,2
 11474  05BC  2DBE               	goto	u3501
 11475  05BD  2DBF               	goto	u3500
 11476  05BE                     u3501:	
 11477  05BE  2DB0               	goto	l6211
 11478  05BF                     u3500:	
 11479  05BF                     l1523:	
 11480                           
 11481                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 11482  05BF  0023               	movlb	3	; select bank3
 11483  05C0  0811               	movf	17,w	;volatile
 11484  05C1                     l1506:	
 11485  05C1  0008               	return
 11486  05C2                     __end_of_WriteI2C:	
 11487                           
 11488                           	psect	text3
 11489  0DEA                     __ptext3:	
 11490 ;; *************** function _ReadI2C *****************
 11491 ;; Defined at:
 11492 ;;		line 73 in file "I2C/i2c.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;		None
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;		None
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      unsigned char 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;Total ram usage:        1 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    6
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_tsttc
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function _ReadI2C
 11522  0DEA                     _ReadI2C:	
 11523  0DEA                     l6217:	
 11524                           ;incstack = 0
 11525                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11526                           
 11527                           
 11528                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11529  0DEA  300F               	movlw	15
 11530  0DEB  0023               	movlb	3	; select bank3
 11531  0DEC  0510               	andwf	16,w	;volatile
 11532  0DED  0020               	movlb	0	; select bank0
 11533  0DEE  00C7               	movwf	??_ReadI2C
 11534  0DEF  3008               	movlw	8
 11535  0DF0  0647               	xorwf	??_ReadI2C,w
 11536  0DF1  1903               	btfsc	3,2
 11537  0DF2  2DF4               	goto	u3511
 11538  0DF3  2DF5               	goto	u3510
 11539  0DF4                     u3511:	
 11540  0DF4  2E00               	goto	l1498
 11541  0DF5                     u3510:	
 11542  0DF5                     l6219:	
 11543  0DF5  300F               	movlw	15
 11544  0DF6  0023               	movlb	3	; select bank3
 11545  0DF7  0510               	andwf	16,w	;volatile
 11546  0DF8  0020               	movlb	0	; select bank0
 11547  0DF9  00C7               	movwf	??_ReadI2C
 11548  0DFA  300B               	movlw	11
 11549  0DFB  0647               	xorwf	??_ReadI2C,w
 11550  0DFC  1D03               	btfss	3,2
 11551  0DFD  2DFF               	goto	u3521
 11552  0DFE  2E00               	goto	u3520
 11553  0DFF                     u3521:	
 11554  0DFF  2E02               	goto	l1499
 11555  0E00                     u3520:	
 11556  0E00                     l1498:	
 11557                           
 11558                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 11559  0E00  0023               	movlb	3	; select bank3
 11560  0E01  1591               	bsf	17,3	;volatile
 11561  0E02                     l1499:	
 11562  0E02  0023               	movlb	3	; select bank3
 11563  0E03  1C0F               	btfss	15,0	;volatile
 11564  0E04  2E06               	goto	u3531
 11565  0E05  2E07               	goto	u3530
 11566  0E06                     u3531:	
 11567  0E06  2E02               	goto	l1499
 11568  0E07                     u3530:	
 11569  0E07                     l6221:	
 11570                           
 11571                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 11572  0E07  080C               	movf	12,w	;volatile
 11573  0E08                     l1502:	
 11574  0E08  0008               	return
 11575  0E09                     __end_of_ReadI2C:	
 11576                           
 11577                           	psect	text4
 11578  0385                     __ptext4:	
 11579 ;; *************** function _recoverData *****************
 11580 ;; Defined at:
 11581 ;;		line 11 in file "eeprom_rw.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;		None
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;		None
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, status,2, status,0, pclath, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;Total ram usage:        1 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    9
 11602 ;; This function calls:
 11603 ;;		_DATAEE_ReadByte
 11604 ;;		_DATAEE_WriteByte
 11605 ;;		_cksum
 11606 ;;		_cksum_w
 11607 ;;		_reset_recv
 11608 ;; This function is called by:
 11609 ;;		_main
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           
 11614                           ;psect for function _recoverData
 11615  0385                     _recoverData:	
 11616  0385                     l6303:	
 11617                           ;incstack = 0
 11618                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11619                           
 11620                           
 11621                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11622  0385  30F5               	movlw	245
 11623  0386  0020               	movlb	0	; select bank0
 11624  0387  00C7               	movwf	DATAEE_ReadByte@bAdd
 11625  0388  30F0               	movlw	240
 11626  0389  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11627  038A  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11628  038D  3AAB               	xorlw	171
 11629  038E  1D03               	skipz
 11630  038F  2B91               	goto	u3571
 11631  0390  2B92               	goto	u3570
 11632  0391                     u3571:	
 11633  0391  2BE6               	goto	l6309
 11634  0392                     u3570:	
 11635  0392                     l6305:	
 11636                           
 11637                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11638  0392  318E  2629  3183   	fcall	_cksum
 11639  0395  0020               	movlb	0	; select bank0
 11640  0396  00D3               	movwf	??_recoverData
 11641  0397  30FF               	movlw	255
 11642  0398  00C7               	movwf	DATAEE_ReadByte@bAdd
 11643  0399  30F0               	movlw	240
 11644  039A  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11645  039B  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11646  039E  0020               	movlb	0	; select bank0
 11647  039F  0653               	xorwf	??_recoverData,w
 11648  03A0  1D03               	skipz
 11649  03A1  2BA3               	goto	u3581
 11650  03A2  2BA4               	goto	u3580
 11651  03A3                     u3581:	
 11652  03A3  2BE6               	goto	l6309
 11653  03A4                     u3580:	
 11654  03A4                     l6307:	
 11655                           
 11656                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11657  03A4  30F6               	movlw	246
 11658  03A5  00C7               	movwf	DATAEE_ReadByte@bAdd
 11659  03A6  30F0               	movlw	240
 11660  03A7  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11661  03A8  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11662  03AB  0020               	movlb	0	; select bank0
 11663  03AC  00D3               	movwf	??_recoverData
 11664  03AD  0853               	movf	??_recoverData,w
 11665  03AE  00C1               	movwf	_clkh	;volatile
 11666                           
 11667                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11668  03AF  30F7               	movlw	247
 11669  03B0  00C7               	movwf	DATAEE_ReadByte@bAdd
 11670  03B1  30F0               	movlw	240
 11671  03B2  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11672  03B3  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11673  03B6  0020               	movlb	0	; select bank0
 11674  03B7  00D3               	movwf	??_recoverData
 11675  03B8  0853               	movf	??_recoverData,w
 11676  03B9  00C0               	movwf	_clkm	;volatile
 11677                           
 11678                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11679  03BA  30F8               	movlw	248
 11680  03BB  00C7               	movwf	DATAEE_ReadByte@bAdd
 11681  03BC  30F0               	movlw	240
 11682  03BD  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11683  03BE  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11684  03C1  0020               	movlb	0	; select bank0
 11685  03C2  00D3               	movwf	??_recoverData
 11686  03C3  0853               	movf	??_recoverData,w
 11687  03C4  00E3               	movwf	_nreg
 11688                           
 11689                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11690  03C5  30F9               	movlw	249
 11691  03C6  00C7               	movwf	DATAEE_ReadByte@bAdd
 11692  03C7  30F0               	movlw	240
 11693  03C8  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11694  03C9  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11695  03CC  0020               	movlb	0	; select bank0
 11696  03CD  00D3               	movwf	??_recoverData
 11697  03CE  0853               	movf	??_recoverData,w
 11698  03CF  00C2               	movwf	_nreg_pt
 11699                           
 11700                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11701  03D0  30FA               	movlw	250
 11702  03D1  00C7               	movwf	DATAEE_ReadByte@bAdd
 11703  03D2  30F0               	movlw	240
 11704  03D3  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11705  03D4  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11706  03D7  0020               	movlb	0	; select bank0
 11707  03D8  00D3               	movwf	??_recoverData
 11708  03D9  0853               	movf	??_recoverData,w
 11709  03DA  00E2               	movwf	_pmon
 11710                           
 11711                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11712  03DB  30FB               	movlw	251
 11713  03DC  00C7               	movwf	DATAEE_ReadByte@bAdd
 11714  03DD  30F0               	movlw	240
 11715  03DE  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11716  03DF  3187  27F1  3183   	fcall	_DATAEE_ReadByte
 11717  03E2  0020               	movlb	0	; select bank0
 11718  03E3  00D3               	movwf	??_recoverData
 11719  03E4  0853               	movf	??_recoverData,w
 11720  03E5  00E1               	movwf	_tala
 11721  03E6                     l6309:	
 11722                           
 11723                           ;eeprom_rw.c: 24:     reset_recv();
 11724  03E6  318D  25AF  3183   	fcall	_reset_recv
 11725  03E9                     l6311:	
 11726                           
 11727                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11728  03E9  30F5               	movlw	245
 11729  03EA  0020               	movlb	0	; select bank0
 11730  03EB  00CD               	movwf	DATAEE_WriteByte@bAdd
 11731  03EC  30F0               	movlw	240
 11732  03ED  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11733  03EE  30AB               	movlw	171
 11734  03EF  00D3               	movwf	??_recoverData
 11735  03F0  0853               	movf	??_recoverData,w
 11736  03F1  00CF               	movwf	DATAEE_WriteByte@bData
 11737  03F2  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11738  03F5                     l6313:	
 11739                           
 11740                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11741  03F5  30F8               	movlw	248
 11742  03F6  0020               	movlb	0	; select bank0
 11743  03F7  00CD               	movwf	DATAEE_WriteByte@bAdd
 11744  03F8  30F0               	movlw	240
 11745  03F9  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11746  03FA  0863               	movf	_nreg,w
 11747  03FB  00D3               	movwf	??_recoverData
 11748  03FC  0853               	movf	??_recoverData,w
 11749  03FD  00CF               	movwf	DATAEE_WriteByte@bData
 11750  03FE  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11751  0401                     l6315:	
 11752                           
 11753                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11754  0401  30FA               	movlw	250
 11755  0402  0020               	movlb	0	; select bank0
 11756  0403  00CD               	movwf	DATAEE_WriteByte@bAdd
 11757  0404  30F0               	movlw	240
 11758  0405  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11759  0406  0862               	movf	_pmon,w
 11760  0407  00D3               	movwf	??_recoverData
 11761  0408  0853               	movf	??_recoverData,w
 11762  0409  00CF               	movwf	DATAEE_WriteByte@bData
 11763  040A  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11764  040D                     l6317:	
 11765                           
 11766                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11767  040D  30FB               	movlw	251
 11768  040E  0020               	movlb	0	; select bank0
 11769  040F  00CD               	movwf	DATAEE_WriteByte@bAdd
 11770  0410  30F0               	movlw	240
 11771  0411  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11772  0412  0861               	movf	_tala,w
 11773  0413  00D3               	movwf	??_recoverData
 11774  0414  0853               	movf	??_recoverData,w
 11775  0415  00CF               	movwf	DATAEE_WriteByte@bData
 11776  0416  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11777  0419                     l6319:	
 11778                           
 11779                           ;eeprom_rw.c: 31:     cksum_w();
 11780  0419  318C  242A  3183   	fcall	_cksum_w
 11781  041C                     l1556:	
 11782  041C  0008               	return
 11783  041D                     __end_of_recoverData:	
 11784                           
 11785                           	psect	text5
 11786  0DAF                     __ptext5:	
 11787 ;; *************** function _reset_recv *****************
 11788 ;; Defined at:
 11789 ;;		line 75 in file "eeprom_rw.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;		None
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;  i               2   13[BANK0 ] unsigned int 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, status,2, status,0, pclath, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;Total ram usage:        2 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:    7
 11810 ;; This function calls:
 11811 ;;		_DATAEE_WriteByte
 11812 ;; This function is called by:
 11813 ;;		_recoverData
 11814 ;;		_recover
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _reset_recv
 11820  0DAF                     _reset_recv:	
 11821  0DAF                     l6177:	
 11822                           ;incstack = 0
 11823                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11824                           
 11825                           
 11826                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11827  0DAF  30F5               	movlw	245
 11828  0DB0  0020               	movlb	0	; select bank0
 11829  0DB1  00D1               	movwf	reset_recv@i
 11830  0DB2  30F0               	movlw	240
 11831  0DB3  00D2               	movwf	reset_recv@i+1
 11832  0DB4                     l6181:	
 11833                           
 11834                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11835  0DB4  0852               	movf	reset_recv@i+1,w
 11836  0DB5  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11837  0DB6  0851               	movf	reset_recv@i,w
 11838  0DB7  00CD               	movwf	DATAEE_WriteByte@bAdd
 11839  0DB8  01CF               	clrf	DATAEE_WriteByte@bData
 11840  0DB9  318E  2649  318D   	fcall	_DATAEE_WriteByte
 11841  0DBC                     l6183:	
 11842  0DBC  3001               	movlw	1
 11843  0DBD  0020               	movlb	0	; select bank0
 11844  0DBE  07D1               	addwf	reset_recv@i,f
 11845  0DBF  3000               	movlw	0
 11846  0DC0  3DD2               	addwfc	reset_recv@i+1,f
 11847  0DC1                     l6185:	
 11848  0DC1  30F1               	movlw	241
 11849  0DC2  0252               	subwf	reset_recv@i+1,w
 11850  0DC3  3000               	movlw	0
 11851  0DC4  1903               	skipnz
 11852  0DC5  0251               	subwf	reset_recv@i,w
 11853  0DC6  1C03               	skipc
 11854  0DC7  2DC9               	goto	u3411
 11855  0DC8  2DCA               	goto	u3410
 11856  0DC9                     u3411:	
 11857  0DC9  2DB4               	goto	l6181
 11858  0DCA                     u3410:	
 11859  0DCA                     l1583:	
 11860  0DCA  0008               	return
 11861  0DCB                     __end_of_reset_recv:	
 11862                           
 11863                           	psect	text6
 11864  0C2A                     __ptext6:	
 11865 ;; *************** function _cksum_w *****************
 11866 ;; Defined at:
 11867 ;;		line 61 in file "eeprom_rw.c"
 11868 ;; Parameters:    Size  Location     Type
 11869 ;;		None
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;		None
 11872 ;; Return value:  Size  Location     Type
 11873 ;;                  1    wreg      void 
 11874 ;; Registers used:
 11875 ;;		wreg, status,2, status,0, pclath, cstack
 11876 ;; Tracked objects:
 11877 ;;		On entry : 0/0
 11878 ;;		On exit  : 0/0
 11879 ;;		Unchanged: 0/0
 11880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11884 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;Total ram usage:        1 bytes
 11886 ;; Hardware stack levels used:    1
 11887 ;; Hardware stack levels required when called:    8
 11888 ;; This function calls:
 11889 ;;		_DATAEE_WriteByte
 11890 ;;		_cksum
 11891 ;; This function is called by:
 11892 ;;		_main
 11893 ;;		_recoverData
 11894 ;;		_recover
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           
 11899                           ;psect for function _cksum_w
 11900  0C2A                     _cksum_w:	
 11901  0C2A                     l6103:	
 11902                           ;incstack = 0
 11903                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11904                           
 11905                           
 11906                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 11907  0C2A  30FF               	movlw	255
 11908  0C2B  0020               	movlb	0	; select bank0
 11909  0C2C  00CD               	movwf	DATAEE_WriteByte@bAdd
 11910  0C2D  30F0               	movlw	240
 11911  0C2E  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11912  0C2F  318E  2629  318C   	fcall	_cksum
 11913  0C32  0020               	movlb	0	; select bank0
 11914  0C33  00D1               	movwf	??_cksum_w
 11915  0C34  0851               	movf	??_cksum_w,w
 11916  0C35  00CF               	movwf	DATAEE_WriteByte@bData
 11917  0C36  318E  2649  318C   	fcall	_DATAEE_WriteByte
 11918  0C39                     l1573:	
 11919  0C39  0008               	return
 11920  0C3A                     __end_of_cksum_w:	
 11921                           
 11922                           	psect	text7
 11923  0E29                     __ptext7:	
 11924 ;; *************** function _cksum *****************
 11925 ;; Defined at:
 11926 ;;		line 66 in file "eeprom_rw.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;  i               2    7[BANK0 ] unsigned int 
 11931 ;;  res             1    6[BANK0 ] unsigned char 
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      unsigned char 
 11934 ;; Registers used:
 11935 ;;		wreg, status,2, status,0, pclath, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;Total ram usage:        4 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    7
 11948 ;; This function calls:
 11949 ;;		_DATAEE_ReadByte
 11950 ;; This function is called by:
 11951 ;;		_recoverData
 11952 ;;		_cksum_w
 11953 ;;		_recover
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           
 11958                           ;psect for function _cksum
 11959  0E29                     _cksum:	
 11960  0E29                     l5935:	
 11961                           ;incstack = 0
 11962                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 11963                           
 11964                           
 11965                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 11966  0E29  0020               	movlb	0	; select bank0
 11967  0E2A  01CA               	clrf	cksum@res
 11968  0E2B                     l5937:	
 11969                           
 11970                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 11971  0E2B  30F5               	movlw	245
 11972  0E2C  00CB               	movwf	cksum@i
 11973  0E2D  30F0               	movlw	240
 11974  0E2E  00CC               	movwf	cksum@i+1
 11975  0E2F                     l5943:	
 11976                           
 11977                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 11978  0E2F  084C               	movf	cksum@i+1,w
 11979  0E30  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11980  0E31  084B               	movf	cksum@i,w
 11981  0E32  00C7               	movwf	DATAEE_ReadByte@bAdd
 11982  0E33  3187  27F1  318E   	fcall	_DATAEE_ReadByte
 11983  0E36  0020               	movlb	0	; select bank0
 11984  0E37  00C9               	movwf	??_cksum
 11985  0E38  0849               	movf	??_cksum,w
 11986  0E39  07CA               	addwf	cksum@res,f
 11987  0E3A                     l5945:	
 11988                           
 11989                           ;eeprom_rw.c: 71:     }
 11990  0E3A  3001               	movlw	1
 11991  0E3B  07CB               	addwf	cksum@i,f
 11992  0E3C  3000               	movlw	0
 11993  0E3D  3DCC               	addwfc	cksum@i+1,f
 11994  0E3E                     l5947:	
 11995  0E3E  30F0               	movlw	240
 11996  0E3F  024C               	subwf	cksum@i+1,w
 11997  0E40  30FF               	movlw	255
 11998  0E41  1903               	skipnz
 11999  0E42  024B               	subwf	cksum@i,w
 12000  0E43  1C03               	skipc
 12001  0E44  2E46               	goto	u3341
 12002  0E45  2E47               	goto	u3340
 12003  0E46                     u3341:	
 12004  0E46  2E2F               	goto	l5943
 12005  0E47                     u3340:	
 12006  0E47                     l5949:	
 12007                           
 12008                           ;eeprom_rw.c: 72:     return res;
 12009  0E47  084A               	movf	cksum@res,w
 12010  0E48                     l1578:	
 12011  0E48  0008               	return
 12012  0E49                     __end_of_cksum:	
 12013                           
 12014                           	psect	text8
 12015  0F81                     __ptext8:	
 12016 ;; *************** function _read_ring *****************
 12017 ;; Defined at:
 12018 ;;		line 43 in file "eeprom_rw.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  nreg_pt         1    wreg     unsigned char 
 12021 ;;  nreg            1    7[BANK0 ] unsigned char 
 12022 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12023 ;;  index           1    9[BANK0 ] unsigned char 
 12024 ;;  subindex        1   10[BANK0 ] unsigned char 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12027 ;;  absindex        1   15[BANK0 ] unsigned char 
 12028 ;;  i               1   13[BANK0 ] unsigned char 
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      unsigned char 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, pclath, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        9 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    7
 12045 ;; This function calls:
 12046 ;;		_DATAEE_ReadByte
 12047 ;;		___bmul
 12048 ;; This function is called by:
 12049 ;;		_main
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function _read_ring
 12055  0F81                     _read_ring:	
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12059                           ;read_ring@nreg_pt stored from wreg
 12060  0F81  0020               	movlb	0	; select bank0
 12061  0F82  00D2               	movwf	read_ring@nreg_pt
 12062  0F83                     l6385:	
 12063  0F83                     l6387:	
 12064                           
 12065                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12066  0F83  084D               	movf	read_ring@index,w
 12067  0F84  024B               	subwf	read_ring@nreg,w
 12068  0F85  1C03               	skipc
 12069  0F86  2F88               	goto	u3851
 12070  0F87  2F89               	goto	u3850
 12071  0F88                     u3851:	
 12072  0F88  2FB3               	goto	l6399
 12073  0F89                     u3850:	
 12074  0F89                     l6389:	
 12075  0F89  084C               	movf	read_ring@nreg_init,w
 12076  0F8A  1903               	btfsc	3,2
 12077  0F8B  2F8D               	goto	u3861
 12078  0F8C  2F8E               	goto	u3860
 12079  0F8D                     u3861:	
 12080  0F8D  2FB3               	goto	l6399
 12081  0F8E                     u3860:	
 12082  0F8E                     l6391:	
 12083                           
 12084                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12085  0F8E  3005               	movlw	5
 12086  0F8F  00CF               	movwf	??_read_ring
 12087  0F90  084F               	movf	??_read_ring,w
 12088  0F91  00C7               	movwf	___bmul@multiplicand
 12089  0F92  084D               	movf	read_ring@index,w
 12090  0F93  318C  24D0  318F   	fcall	___bmul
 12091  0F96  0020               	movlb	0	; select bank0
 12092  0F97  074E               	addwf	read_ring@subindex,w
 12093  0F98  00D0               	movwf	??_read_ring+1
 12094  0F99  0850               	movf	??_read_ring+1,w
 12095  0F9A  00D3               	movwf	read_ring@absindex
 12096  0F9B                     l6393:	
 12097                           
 12098                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12099  0F9B  0853               	movf	read_ring@absindex,w
 12100  0F9C  0252               	subwf	read_ring@nreg_pt,w
 12101  0F9D  1C03               	skipc
 12102  0F9E  2FA0               	goto	u3871
 12103  0F9F  2FA1               	goto	u3870
 12104  0FA0                     u3871:	
 12105  0FA0  2FA8               	goto	l6397
 12106  0FA1                     u3870:	
 12107  0FA1                     l6395:	
 12108                           
 12109                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12110  0FA1  0852               	movf	read_ring@nreg_pt,w
 12111  0FA2  0753               	addwf	read_ring@absindex,w
 12112  0FA3  3EFB               	addlw	251
 12113  0FA4  00CF               	movwf	??_read_ring
 12114  0FA5  084F               	movf	??_read_ring,w
 12115  0FA6  00D1               	movwf	read_ring@i
 12116  0FA7  2FB5               	goto	l6403
 12117  0FA8                     l6397:	
 12118                           
 12119                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12120  0FA8  0352               	decf	read_ring@nreg_pt,w
 12121  0FA9  3AFF               	xorlw	255
 12122  0FAA  00CF               	movwf	??_read_ring
 12123  0FAB  0853               	movf	read_ring@absindex,w
 12124  0FAC  024F               	subwf	??_read_ring,w
 12125  0FAD  074B               	addwf	read_ring@nreg,w
 12126  0FAE  3E05               	addlw	5
 12127  0FAF  00D0               	movwf	??_read_ring+1
 12128  0FB0  0850               	movf	??_read_ring+1,w
 12129  0FB1  00D1               	movwf	read_ring@i
 12130  0FB2  2FB5               	goto	l6403
 12131  0FB3                     l6399:	
 12132                           
 12133                           ;eeprom_rw.c: 56:         return 0;
 12134  0FB3  3000               	movlw	0
 12135  0FB4  2FBF               	goto	l1570
 12136  0FB5                     l6403:	
 12137                           
 12138                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12139  0FB5  0851               	movf	read_ring@i,w
 12140  0FB6  3E00               	addlw	0
 12141  0FB7  00C7               	movwf	DATAEE_ReadByte@bAdd
 12142  0FB8  30F0               	movlw	240
 12143  0FB9  1803               	skipnc
 12144  0FBA  30F1               	movlw	241
 12145  0FBB  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 12146  0FBC  3187  27F1  318F   	fcall	_DATAEE_ReadByte
 12147  0FBF                     l1570:	
 12148  0FBF  0008               	return
 12149  0FC0                     __end_of_read_ring:	
 12150                           
 12151                           	psect	text9
 12152  0CD0                     __ptext9:	
 12153 ;; *************** function ___bmul *****************
 12154 ;; Defined at:
 12155 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  multiplier      1    wreg     unsigned char 
 12158 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12161 ;;  product         1    5[BANK0 ] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      unsigned char 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, status,0
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12171 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;Total ram usage:        4 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:    6
 12178 ;; This function calls:
 12179 ;;		Nothing
 12180 ;; This function is called by:
 12181 ;;		_read_ring
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           
 12186                           ;psect for function ___bmul
 12187  0CD0                     ___bmul:	
 12188                           
 12189                           ;incstack = 0
 12190                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12191                           ;___bmul@multiplier stored from wreg
 12192  0CD0  0020               	movlb	0	; select bank0
 12193  0CD1  00CA               	movwf	___bmul@multiplier
 12194  0CD2                     l6225:	
 12195  0CD2  01C9               	clrf	___bmul@product
 12196  0CD3                     l6227:	
 12197  0CD3  1C4A               	btfss	___bmul@multiplier,0
 12198  0CD4  2CD6               	goto	u3541
 12199  0CD5  2CD7               	goto	u3540
 12200  0CD6                     u3541:	
 12201  0CD6  2CDB               	goto	l6231
 12202  0CD7                     u3540:	
 12203  0CD7                     l6229:	
 12204  0CD7  0847               	movf	___bmul@multiplicand,w
 12205  0CD8  00C8               	movwf	??___bmul
 12206  0CD9  0848               	movf	??___bmul,w
 12207  0CDA  07C9               	addwf	___bmul@product,f
 12208  0CDB                     l6231:	
 12209  0CDB  1003               	clrc
 12210  0CDC  0DC7               	rlf	___bmul@multiplicand,f
 12211  0CDD                     l6233:	
 12212  0CDD  1003               	clrc
 12213  0CDE  0CCA               	rrf	___bmul@multiplier,f
 12214  0CDF  084A               	movf	___bmul@multiplier,w
 12215  0CE0  1D03               	btfss	3,2
 12216  0CE1  2CE3               	goto	u3551
 12217  0CE2  2CE4               	goto	u3550
 12218  0CE3                     u3551:	
 12219  0CE3  2CD3               	goto	l6227
 12220  0CE4                     u3550:	
 12221  0CE4                     l6235:	
 12222  0CE4  0849               	movf	___bmul@product,w
 12223  0CE5                     l1809:	
 12224  0CE5  0008               	return
 12225  0CE6                     __end_of___bmul:	
 12226                           
 12227                           	psect	text10
 12228  07F1                     __ptext10:	
 12229 ;; *************** function _DATAEE_ReadByte *****************
 12230 ;; Defined at:
 12231 ;;		line 202 in file "mcc_generated_files/memory.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;		None
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      unsigned char 
 12238 ;; Registers used:
 12239 ;;		wreg, status,2
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;Total ram usage:        2 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:    6
 12252 ;; This function calls:
 12253 ;;		Nothing
 12254 ;; This function is called by:
 12255 ;;		_recoverData
 12256 ;;		_read_ring
 12257 ;;		_cksum
 12258 ;;		_recover
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           
 12263                           ;psect for function _DATAEE_ReadByte
 12264  07F1                     _DATAEE_ReadByte:	
 12265  07F1                     l5803:	
 12266                           ;incstack = 0
 12267                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12268                           
 12269                           
 12270                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12271  07F1  0020               	movlb	0	; select bank0
 12272  07F2  0848               	movf	DATAEE_ReadByte@bAdd+1,w
 12273  07F3  0030               	movlb	16	; select bank16
 12274  07F4  009B               	movwf	27	;volatile
 12275  07F5                     l5805:	
 12276                           
 12277                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12278  07F5  0020               	movlb	0	; select bank0
 12279  07F6  0847               	movf	DATAEE_ReadByte@bAdd,w
 12280  07F7  0030               	movlb	16	; select bank16
 12281  07F8  009A               	movwf	26	;volatile
 12282  07F9                     l5807:	
 12283                           
 12284                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12285  07F9  171E               	bsf	30,6	;volsfr
 12286  07FA                     l5809:	
 12287                           
 12288                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12289  07FA  141E               	bsf	30,0	;volsfr
 12290  07FB                     l5811:	
 12291                           
 12292                           ;mcc_generated_files/memory.c: 208:     __nop();
 12293  07FB  0000               	nop
 12294  07FC                     l5813:	
 12295                           
 12296                           ;mcc_generated_files/memory.c: 209:     __nop();
 12297  07FC  0000               	nop
 12298  07FD                     l5815:	
 12299                           
 12300                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12301  07FD  0030               	movlb	16	; select bank16
 12302  07FE  081C               	movf	28,w	;volatile
 12303  07FF                     l963:	
 12304  07FF  0008               	return
 12305  0800                     __end_of_DATAEE_ReadByte:	
 12306                           
 12307                           	psect	text11
 12308  07AA                     __ptext11:	
 12309 ;; *************** function _push_ring *****************
 12310 ;; Defined at:
 12311 ;;		line 34 in file "eeprom_rw.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12314 ;;		 -> nreg_pt(1), 
 12315 ;;  nreg            1   13[BANK0 ] unsigned char 
 12316 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12317 ;;		 -> nreg_init(1), 
 12318 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12319 ;;		 -> ring_byte(5), 
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12322 ;;		 -> nreg_pt(1), 
 12323 ;;  i               1   18[BANK0 ] unsigned char 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:        7 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    7
 12340 ;; This function calls:
 12341 ;;		_DATAEE_WriteByte
 12342 ;; This function is called by:
 12343 ;;		_main
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function _push_ring
 12349  07AA                     _push_ring:	
 12350                           
 12351                           ;incstack = 0
 12352                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12353                           ;push_ring@nreg_pt stored from wreg
 12354  07AA  0020               	movlb	0	; select bank0
 12355  07AB  00D7               	movwf	push_ring@nreg_pt
 12356  07AC                     l6407:	
 12357                           
 12358                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12359  07AC  0852               	movf	push_ring@nreg_init,w
 12360  07AD  0086               	movwf	6
 12361  07AE  0187               	clrf	7
 12362  07AF  0801               	movf	1,w
 12363  07B0  1D03               	btfss	3,2
 12364  07B1  2FB3               	goto	u3881
 12365  07B2  2FB4               	goto	u3880
 12366  07B3                     u3881:	
 12367  07B3  2FB9               	goto	l6411
 12368  07B4                     u3880:	
 12369  07B4                     l6409:	
 12370  07B4  0852               	movf	push_ring@nreg_init,w
 12371  07B5  0086               	movwf	6
 12372  07B6  0187               	clrf	7
 12373  07B7  0181               	clrf	1
 12374  07B8  0A81               	incf	1,f
 12375  07B9                     l6411:	
 12376                           
 12377                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12378  07B9  01D6               	clrf	push_ring@i
 12379  07BA                     l6417:	
 12380                           
 12381                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12382  07BA  0857               	movf	push_ring@nreg_pt,w
 12383  07BB  0086               	movwf	6
 12384  07BC  0187               	clrf	7
 12385  07BD  0851               	movf	push_ring@nreg,w
 12386  07BE  0201               	subwf	1,w
 12387  07BF  1C03               	skipc
 12388  07C0  2FC2               	goto	u3891
 12389  07C1  2FC3               	goto	u3890
 12390  07C2                     u3891:	
 12391  07C2  2FC7               	goto	l6421
 12392  07C3                     u3890:	
 12393  07C3                     l6419:	
 12394  07C3  0857               	movf	push_ring@nreg_pt,w
 12395  07C4  0086               	movwf	6
 12396  07C5  0187               	clrf	7
 12397  07C6  0181               	clrf	1
 12398  07C7                     l6421:	
 12399                           
 12400                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12401  07C7  0857               	movf	push_ring@nreg_pt,w
 12402  07C8  0086               	movwf	6
 12403  07C9  0187               	clrf	7
 12404  07CA  0801               	movf	1,w
 12405  07CB  3E00               	addlw	0
 12406  07CC  00CD               	movwf	DATAEE_WriteByte@bAdd
 12407  07CD  30F0               	movlw	240
 12408  07CE  1803               	skipnc
 12409  07CF  30F1               	movlw	241
 12410  07D0  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 12411  07D1  0856               	movf	push_ring@i,w
 12412  07D2  0753               	addwf	push_ring@ring_byte,w
 12413  07D3  00D4               	movwf	??_push_ring
 12414  07D4  0854               	movf	??_push_ring,w
 12415  07D5  0086               	movwf	6
 12416  07D6  0187               	clrf	7
 12417  07D7  0801               	movf	1,w
 12418  07D8  00D5               	movwf	??_push_ring+1
 12419  07D9  0855               	movf	??_push_ring+1,w
 12420  07DA  00CF               	movwf	DATAEE_WriteByte@bData
 12421  07DB  318E  2649  3187   	fcall	_DATAEE_WriteByte
 12422  07DE                     l6423:	
 12423                           
 12424                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12425  07DE  3001               	movlw	1
 12426  07DF  0020               	movlb	0	; select bank0
 12427  07E0  00D4               	movwf	??_push_ring
 12428  07E1  0857               	movf	push_ring@nreg_pt,w
 12429  07E2  0086               	movwf	6
 12430  07E3  0187               	clrf	7
 12431  07E4  0854               	movf	??_push_ring,w
 12432  07E5  0781               	addwf	1,f
 12433  07E6                     l6425:	
 12434                           
 12435                           ;eeprom_rw.c: 40:     }
 12436  07E6  3001               	movlw	1
 12437  07E7  00D4               	movwf	??_push_ring
 12438  07E8  0854               	movf	??_push_ring,w
 12439  07E9  07D6               	addwf	push_ring@i,f
 12440  07EA                     l6427:	
 12441  07EA  3005               	movlw	5
 12442  07EB  0256               	subwf	push_ring@i,w
 12443  07EC  1C03               	skipc
 12444  07ED  2FEF               	goto	u3901
 12445  07EE  2FF0               	goto	u3900
 12446  07EF                     u3901:	
 12447  07EF  2FBA               	goto	l6417
 12448  07F0                     u3900:	
 12449  07F0                     l1563:	
 12450  07F0  0008               	return
 12451  07F1                     __end_of_push_ring:	
 12452                           
 12453                           	psect	text12
 12454  0E49                     __ptext12:	
 12455 ;; *************** function _DATAEE_WriteByte *****************
 12456 ;; Defined at:
 12457 ;;		line 180 in file "mcc_generated_files/memory.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12460 ;;  bData           1   11[BANK0 ] unsigned char 
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  1    wreg      void 
 12465 ;; Registers used:
 12466 ;;		wreg, status,2, status,0
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12472 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;Total ram usage:        4 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    6
 12479 ;; This function calls:
 12480 ;;		Nothing
 12481 ;; This function is called by:
 12482 ;;		_main
 12483 ;;		_recoverData
 12484 ;;		_push_ring
 12485 ;;		_cksum_w
 12486 ;;		_reset_recv
 12487 ;;		_recover
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           
 12492                           ;psect for function _DATAEE_WriteByte
 12493  0E49                     _DATAEE_WriteByte:	
 12494  0E49                     l5869:	
 12495                           ;incstack = 0
 12496                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12497                           
 12498                           
 12499                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12500  0E49  3000               	movlw	0
 12501  0E4A  1B8B               	btfsc	11,7	;volatile
 12502  0E4B  3001               	movlw	1
 12503  0E4C  0020               	movlb	0	; select bank0
 12504  0E4D  00D0               	movwf	DATAEE_WriteByte@GIEBitValue
 12505                           
 12506                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12507  0E4E  084E               	movf	DATAEE_WriteByte@bAdd+1,w
 12508  0E4F  0030               	movlb	16	; select bank16
 12509  0E50  009B               	movwf	27	;volatile
 12510  0E51                     l5871:	
 12511                           
 12512                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12513  0E51  0020               	movlb	0	; select bank0
 12514  0E52  084D               	movf	DATAEE_WriteByte@bAdd,w
 12515  0E53  0030               	movlb	16	; select bank16
 12516  0E54  009A               	movwf	26	;volatile
 12517  0E55                     l5873:	
 12518                           
 12519                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12520  0E55  0020               	movlb	0	; select bank0
 12521  0E56  084F               	movf	DATAEE_WriteByte@bData,w
 12522  0E57  0030               	movlb	16	; select bank16
 12523  0E58  009C               	movwf	28	;volatile
 12524  0E59                     l5875:	
 12525                           
 12526                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12527  0E59  171E               	bsf	30,6	;volsfr
 12528  0E5A                     l5877:	
 12529                           
 12530                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12531  0E5A  151E               	bsf	30,2	;volsfr
 12532  0E5B                     l5879:	
 12533                           
 12534                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12535  0E5B  138B               	bcf	11,7	;volatile
 12536  0E5C                     l5881:	
 12537                           
 12538                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12539  0E5C  3055               	movlw	85
 12540  0E5D  009F               	movwf	31	;volsfr
 12541  0E5E                     l5883:	
 12542                           
 12543                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12544  0E5E  30AA               	movlw	170
 12545  0E5F  009F               	movwf	31	;volsfr
 12546  0E60                     l5885:	
 12547                           
 12548                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12549  0E60  149E               	bsf	30,1	;volsfr
 12550  0E61                     l957:	
 12551                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12552                           
 12553                           
 12554                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12555  0E61  189E               	btfsc	30,1	;volsfr
 12556  0E62  2E64               	goto	u3281
 12557  0E63  2E65               	goto	u3280
 12558  0E64                     u3281:	
 12559  0E64  2E61               	goto	l957
 12560  0E65                     u3280:	
 12561  0E65                     l959:	
 12562                           
 12563                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12564  0E65  111E               	bcf	30,2	;volsfr
 12565  0E66                     l5887:	
 12566                           
 12567                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12568  0E66  0020               	movlb	0	; select bank0
 12569  0E67  0C50               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12570  0E68  1C03               	skipc
 12571  0E69  138B               	bcf	11,7	;volatile
 12572  0E6A  1803               	skipnc
 12573  0E6B  178B               	bsf	11,7	;volatile
 12574  0E6C                     l960:	
 12575  0E6C  0008               	return
 12576  0E6D                     __end_of_DATAEE_WriteByte:	
 12577                           
 12578                           	psect	text13
 12579  041D                     __ptext13:	
 12580 ;; *************** function _config_routine *****************
 12581 ;; Defined at:
 12582 ;;		line 292 in file "main.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;		None
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;  select_mode     2   18[BANK0 ] unsigned int 
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1    wreg      void 
 12589 ;; Registers used:
 12590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;Total ram usage:        3 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; Hardware stack levels required when called:    9
 12603 ;; This function calls:
 12604 ;;		_all_LED
 12605 ;;		_checkDebounceSW1
 12606 ;;		_checkDebounceSW2
 12607 ;;		_clock_subfields
 12608 ;;		_mod1_LED
 12609 ;;		_mod2_LED
 12610 ;;		_mod3_LED
 12611 ;;		_mod4_LED
 12612 ;;		_mode_select_LED
 12613 ;; This function is called by:
 12614 ;;		_main
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           
 12619                           ;psect for function _config_routine
 12620  041D                     _config_routine:	
 12621  041D                     l6431:	
 12622                           ;incstack = 0
 12623                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12624                           
 12625                           
 12626                           ;main.c: 294:     unsigned int select_mode =0;
 12627  041D  0020               	movlb	0	; select bank0
 12628  041E  01D6               	clrf	config_routine@select_mode
 12629  041F  01D7               	clrf	config_routine@select_mode+1
 12630  0420                     l6433:	
 12631                           
 12632                           ;main.c: 295:       last_ms = clkms;
 12633  0420  087D               	movf	_clkms,w	;volatile
 12634  0421  00D5               	movwf	??_config_routine
 12635  0422  0855               	movf	??_config_routine,w
 12636  0423  00BE               	movwf	_last_ms
 12637  0424                     l6435:	
 12638                           
 12639                           ;main.c: 296:       last_ms2 = clkms;
 12640  0424  087D               	movf	_clkms,w	;volatile
 12641  0425  00D5               	movwf	??_config_routine
 12642  0426  0855               	movf	??_config_routine,w
 12643  0427  00BD               	movwf	_last_ms2
 12644  0428                     l6437:	
 12645                           
 12646                           ;main.c: 300:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 12647  0428  0A5D               	incf	_mode_field_subfield,w
 12648  0429  1D03               	skipz
 12649  042A  2C2F               	goto	u3911
 12650  042B  0A5E               	incf	_mode_field_subfield+1,w
 12651  042C  1D03               	btfss	3,2
 12652  042D  2C2F               	goto	u3911
 12653  042E  2C30               	goto	u3910
 12654  042F                     u3911:	
 12655  042F  2C39               	goto	l6443
 12656  0430                     u3910:	
 12657  0430                     l6439:	
 12658  0430  0856               	movf	config_routine@select_mode,w
 12659  0431  0457               	iorwf	config_routine@select_mode+1,w
 12660  0432  1D03               	btfss	3,2
 12661  0433  2C35               	goto	u3921
 12662  0434  2C36               	goto	u3920
 12663  0435                     u3921:	
 12664  0435  2C39               	goto	l6443
 12665  0436                     u3920:	
 12666  0436                     l6441:	
 12667                           
 12668                           ;main.c: 301:                         all_LED();}
 12669  0436  3185  250D  3184   	fcall	_all_LED
 12670  0439                     l6443:	
 12671                           
 12672                           ;main.c: 303:                 if(!PORTBbits.RB4){
 12673  0439  0020               	movlb	0	; select bank0
 12674  043A  1A0D               	btfsc	13,4	;volatile
 12675  043B  2C3D               	goto	u3931
 12676  043C  2C3E               	goto	u3930
 12677  043D                     u3931:	
 12678  043D  2C79               	goto	l6465
 12679  043E                     u3930:	
 12680  043E                     l6445:	
 12681                           
 12682                           ;main.c: 304:                     if(checkDebounceSW1()){
 12683  043E  3185  25C2  3184   	fcall	_checkDebounceSW1
 12684  0441  3A00               	xorlw	0
 12685  0442  1903               	skipnz
 12686  0443  2C45               	goto	u3941
 12687  0444  2C46               	goto	u3940
 12688  0445                     u3941:	
 12689  0445  2C74               	goto	l6463
 12690  0446                     u3940:	
 12691  0446                     l6447:	
 12692                           
 12693                           ;main.c: 306:                             select_mode +=1;
 12694  0446  3001               	movlw	1
 12695  0447  0020               	movlb	0	; select bank0
 12696  0448  07D6               	addwf	config_routine@select_mode,f
 12697  0449  3000               	movlw	0
 12698  044A  3DD7               	addwfc	config_routine@select_mode+1,f
 12699                           
 12700                           ;main.c: 308:                         switch(select_mode){
 12701  044B  2C61               	goto	l6461
 12702  044C                     l6449:	
 12703  044C  318B  238E  3184   	fcall	_mod1_LED
 12704  044F  2C74               	goto	l6463
 12705  0450                     l6451:	
 12706  0450  318B  2384  3184   	fcall	_mod2_LED
 12707  0453  2C74               	goto	l6463
 12708  0454                     l6453:	
 12709  0454  318B  2399  3184   	fcall	_mod3_LED
 12710  0457  2C74               	goto	l6463
 12711  0458                     l6455:	
 12712  0458  318B  23A4  3184   	fcall	_mod4_LED
 12713  045B  2C74               	goto	l6463
 12714  045C                     l6457:	
 12715  045C  01D6               	clrf	config_routine@select_mode
 12716  045D  01D7               	clrf	config_routine@select_mode+1
 12717  045E  01B9               	clrf	_config_mode	;volatile
 12718  045F  01B8               	clrf	_alarm	;volatile
 12719                           
 12720                           ;main.c: 314:                             break;
 12721  0460  2C74               	goto	l6463
 12722  0461                     l6461:	
 12723                           
 12724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12725                           ; Switch size 1, requested type "simple"
 12726                           ; Number of cases is 1, Range of values is 0 to 0
 12727                           ; switch strategies available:
 12728                           ; Name         Instructions Cycles
 12729                           ; simple_byte            4     3 (average)
 12730                           ; direct_byte            8     6 (fixed)
 12731                           ; jumptable            260     6 (fixed)
 12732                           ;	Chosen strategy is simple_byte
 12733  0461  0857               	movf	config_routine@select_mode+1,w
 12734  0462  3A00               	xorlw	0	; case 0
 12735  0463  1903               	skipnz
 12736  0464  2C66               	goto	l6903
 12737  0465  2C5C               	goto	l6457
 12738  0466                     l6903:	
 12739                           
 12740                           ; Switch size 1, requested type "simple"
 12741                           ; Number of cases is 4, Range of values is 1 to 4
 12742                           ; switch strategies available:
 12743                           ; Name         Instructions Cycles
 12744                           ; simple_byte           13     7 (average)
 12745                           ; direct_byte           17     9 (fixed)
 12746                           ; jumptable            263     9 (fixed)
 12747                           ;	Chosen strategy is simple_byte
 12748  0466  0856               	movf	config_routine@select_mode,w
 12749  0467  3A01               	xorlw	1	; case 1
 12750  0468  1903               	skipnz
 12751  0469  2C4C               	goto	l6449
 12752  046A  3A03               	xorlw	3	; case 2
 12753  046B  1903               	skipnz
 12754  046C  2C50               	goto	l6451
 12755  046D  3A01               	xorlw	1	; case 3
 12756  046E  1903               	skipnz
 12757  046F  2C54               	goto	l6453
 12758  0470  3A07               	xorlw	7	; case 4
 12759  0471  1903               	skipnz
 12760  0472  2C58               	goto	l6455
 12761  0473  2C5C               	goto	l6457
 12762  0474                     l6463:	
 12763                           
 12764                           ;main.c: 319:                         last_ms = clkms;
 12765  0474  087D               	movf	_clkms,w	;volatile
 12766  0475  0020               	movlb	0	; select bank0
 12767  0476  00D5               	movwf	??_config_routine
 12768  0477  0855               	movf	??_config_routine,w
 12769  0478  00BE               	movwf	_last_ms
 12770  0479                     l6465:	
 12771                           
 12772                           ;main.c: 323:                 if(!PORTCbits.RC5){
 12773  0479  1A8E               	btfsc	14,5	;volatile
 12774  047A  2C7C               	goto	u3951
 12775  047B  2C7D               	goto	u3950
 12776  047C                     u3951:	
 12777  047C  2C97               	goto	l6477
 12778  047D                     u3950:	
 12779  047D                     l6467:	
 12780                           
 12781                           ;main.c: 324:                     if(checkDebounceSW2()){
 12782  047D  3186  26CA  3184   	fcall	_checkDebounceSW2
 12783  0480  3A00               	xorlw	0
 12784  0481  1903               	skipnz
 12785  0482  2C84               	goto	u3961
 12786  0483  2C85               	goto	u3960
 12787  0484                     u3961:	
 12788  0484  2C97               	goto	l6477
 12789  0485                     u3960:	
 12790  0485                     l6469:	
 12791                           
 12792                           ;main.c: 325:                         mode_field_subfield[0] = select_mode;
 12793  0485  0020               	movlb	0	; select bank0
 12794  0486  0857               	movf	config_routine@select_mode+1,w
 12795  0487  00DE               	movwf	_mode_field_subfield+1
 12796  0488  0856               	movf	config_routine@select_mode,w
 12797  0489  00DD               	movwf	_mode_field_subfield
 12798  048A                     l6471:	
 12799                           
 12800                           ;main.c: 326:                         mode_select_LED();
 12801  048A  318E  2609  3184   	fcall	_mode_select_LED
 12802  048D                     l6473:	
 12803                           
 12804                           ;main.c: 328:                         if(select_mode== 1){
 12805  048D  0020               	movlb	0	; select bank0
 12806  048E  0356               	decf	config_routine@select_mode,w
 12807  048F  0457               	iorwf	config_routine@select_mode+1,w
 12808  0490  1D03               	btfss	3,2
 12809  0491  2C93               	goto	u3971
 12810  0492  2C94               	goto	u3970
 12811  0493                     u3971:	
 12812  0493  2C97               	goto	l6477
 12813  0494                     u3970:	
 12814  0494                     l6475:	
 12815                           
 12816                           ;main.c: 329:                             clock_subfields();
 12817  0494  3184  24AA  3184   	fcall	_clock_subfields
 12818  0497                     l6477:	
 12819                           
 12820                           ;main.c: 335:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 12821  0497  30A6               	movlw	166
 12822  0498                     u4327:	
 12823  0498  0B89               	decfsz	9,f
 12824  0499  2C98               	goto	u4327
 12825  049A  3200               	nop2
 12826  049B                     l6479:	
 12827                           
 12828                           ;main.c: 337:             }while(config_mode == 1);
 12829  049B  0020               	movlb	0	; select bank0
 12830  049C  0339               	decf	_config_mode,w	;volatile
 12831  049D  1903               	btfsc	3,2
 12832  049E  2CA0               	goto	u3981
 12833  049F  2CA1               	goto	u3980
 12834  04A0                     u3981:	
 12835  04A0  2C28               	goto	l6437
 12836  04A1                     u3980:	
 12837  04A1                     l6481:	
 12838                           
 12839                           ;main.c: 339:     mode_field_subfield[0] = -1;
 12840  04A1  30FF               	movlw	255
 12841  04A2  00DD               	movwf	_mode_field_subfield
 12842  04A3  30FF               	movlw	255
 12843  04A4  00DE               	movwf	_mode_field_subfield+1
 12844                           
 12845                           ;main.c: 340:     mode_field_subfield[1] = -1;
 12846  04A5  30FF               	movlw	255
 12847  04A6  00DF               	movwf	_mode_field_subfield+2
 12848  04A7  30FF               	movlw	255
 12849  04A8  00E0               	movwf	_mode_field_subfield+3
 12850  04A9                     l1263:	
 12851  04A9  0008               	return
 12852  04AA                     __end_of_config_routine:	
 12853                           
 12854                           	psect	text14
 12855  0E09                     __ptext14:	
 12856 ;; *************** function _mode_select_LED *****************
 12857 ;; Defined at:
 12858 ;;		line 569 in file "main.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;		None
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;		None
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      void 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2, status,0, pclath, cstack
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;Total ram usage:        1 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:    7
 12879 ;; This function calls:
 12880 ;;		_PWM6_LoadDutyValue
 12881 ;; This function is called by:
 12882 ;;		_config_routine
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           
 12887                           ;psect for function _mode_select_LED
 12888  0E09                     _mode_select_LED:	
 12889  0E09                     l6129:	
 12890                           ;incstack = 0
 12891                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 12892                           
 12893                           
 12894                           ;main.c: 572:             PWM6_LoadDutyValue(1023);
 12895  0E09  30FF               	movlw	255
 12896  0E0A  0020               	movlb	0	; select bank0
 12897  0E0B  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12898  0E0C  3003               	movlw	3
 12899  0E0D  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12900  0E0E  318D  2546  318E   	fcall	_PWM6_LoadDutyValue
 12901  0E11                     l6131:	
 12902  0E11  0020               	movlb	0	; select bank0
 12903  0E12  1616               	bsf	22,4	;volatile
 12904  0E13                     l6133:	
 12905                           
 12906                           ;main.c: 574:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12907  0E13  30A3               	movlw	163
 12908  0E14  0020               	movlb	0	; select bank0
 12909  0E15  00CB               	movwf	??_mode_select_LED
 12910  0E16  3055               	movlw	85
 12911  0E17                     u4337:	
 12912  0E17  0B89               	decfsz	9,f
 12913  0E18  2E17               	goto	u4337
 12914  0E19  0BCB               	decfsz	??_mode_select_LED,f
 12915  0E1A  2E17               	goto	u4337
 12916  0E1B                     l6135:	
 12917  0E1B  0020               	movlb	0	; select bank0
 12918  0E1C  1696               	bsf	22,5	;volatile
 12919  0E1D                     l6137:	
 12920                           
 12921                           ;main.c: 576:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12922  0E1D  30A3               	movlw	163
 12923  0E1E  0020               	movlb	0	; select bank0
 12924  0E1F  00CB               	movwf	??_mode_select_LED
 12925  0E20  3055               	movlw	85
 12926  0E21                     u4347:	
 12927  0E21  0B89               	decfsz	9,f
 12928  0E22  2E21               	goto	u4347
 12929  0E23  0BCB               	decfsz	??_mode_select_LED,f
 12930  0E24  2E21               	goto	u4347
 12931  0E25                     l6139:	
 12932  0E25  0020               	movlb	0	; select bank0
 12933  0E26  1216               	bcf	22,4	;volatile
 12934  0E27                     l6141:	
 12935  0E27  1296               	bcf	22,5	;volatile
 12936  0E28                     l1371:	
 12937  0E28  0008               	return
 12938  0E29                     __end_of_mode_select_LED:	
 12939                           
 12940                           	psect	text15
 12941  04AA                     __ptext15:	
 12942 ;; *************** function _clock_subfields *****************
 12943 ;; Defined at:
 12944 ;;		line 367 in file "main.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;		None
 12947 ;; Auto vars:     Size  Location     Type
 12948 ;;  subfield        2   15[BANK0 ] unsigned int 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  1    wreg      void 
 12951 ;; Registers used:
 12952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;Total ram usage:        3 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    8
 12965 ;; This function calls:
 12966 ;;		_checkDebounceSW1
 12967 ;;		_checkDebounceSW2
 12968 ;;		_increment_subfield
 12969 ;;		_mod1_LED
 12970 ;;		_mod2_LED
 12971 ;;		_mod3_LED
 12972 ;;		_mod4_LED
 12973 ;; This function is called by:
 12974 ;;		_config_routine
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           
 12979                           ;psect for function _clock_subfields
 12980  04AA                     _clock_subfields:	
 12981  04AA                     l6143:	
 12982                           ;incstack = 0
 12983                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12984                           
 12985                           
 12986                           ;main.c: 369:     unsigned int subfield = 1;
 12987  04AA  3001               	movlw	1
 12988  04AB  0020               	movlb	0	; select bank0
 12989  04AC  00D3               	movwf	clock_subfields@subfield
 12990  04AD  3000               	movlw	0
 12991  04AE  00D4               	movwf	clock_subfields@subfield+1
 12992  04AF                     l6145:	
 12993                           
 12994                           ;main.c: 373:                 if(!PORTBbits.RB4){
 12995  04AF  1A0D               	btfsc	13,4	;volatile
 12996  04B0  2CB2               	goto	u3361
 12997  04B1  2CB3               	goto	u3360
 12998  04B2                     u3361:	
 12999  04B2  2CD6               	goto	l6161
 13000  04B3                     u3360:	
 13001  04B3                     l6147:	
 13002                           
 13003                           ;main.c: 374:                     if(checkDebounceSW1()){
 13004  04B3  3185  25C2  3184   	fcall	_checkDebounceSW1
 13005  04B6  3A00               	xorlw	0
 13006  04B7  1903               	skipnz
 13007  04B8  2CBA               	goto	u3371
 13008  04B9  2CBB               	goto	u3370
 13009  04BA                     u3371:	
 13010  04BA  2CC0               	goto	l1278
 13011  04BB                     u3370:	
 13012  04BB                     l6149:	
 13013                           
 13014                           ;main.c: 375:                             subfield +=1;
 13015  04BB  3001               	movlw	1
 13016  04BC  0020               	movlb	0	; select bank0
 13017  04BD  07D3               	addwf	clock_subfields@subfield,f
 13018  04BE  3000               	movlw	0
 13019  04BF  3DD4               	addwfc	clock_subfields@subfield+1,f
 13020  04C0                     l1278:	
 13021                           ;main.c: 376:                         }
 13022                           
 13023                           
 13024                           ;main.c: 377:                         last_ms = clkms;
 13025  04C0  087D               	movf	_clkms,w	;volatile
 13026  04C1  0020               	movlb	0	; select bank0
 13027  04C2  00D2               	movwf	??_clock_subfields
 13028  04C3  0852               	movf	??_clock_subfields,w
 13029  04C4  00BE               	movwf	_last_ms
 13030  04C5  2CD6               	goto	l6161
 13031  04C6                     l6151:	
 13032  04C6  318B  238E  3184   	fcall	_mod1_LED
 13033  04C9  2CE9               	goto	l1281
 13034  04CA                     l6153:	
 13035  04CA  318B  2384  3184   	fcall	_mod2_LED
 13036  04CD  2CE9               	goto	l1281
 13037  04CE                     l6155:	
 13038  04CE  318B  2399  3184   	fcall	_mod3_LED
 13039  04D1  2CE9               	goto	l1281
 13040  04D2                     l6157:	
 13041  04D2  318B  23A4  3184   	fcall	_mod4_LED
 13042  04D5  2CE9               	goto	l1281
 13043  04D6                     l6161:	
 13044                           
 13045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13046                           ; Switch size 1, requested type "simple"
 13047                           ; Number of cases is 1, Range of values is 0 to 0
 13048                           ; switch strategies available:
 13049                           ; Name         Instructions Cycles
 13050                           ; simple_byte            4     3 (average)
 13051                           ; direct_byte            8     6 (fixed)
 13052                           ; jumptable            260     6 (fixed)
 13053                           ;	Chosen strategy is simple_byte
 13054  04D6  0854               	movf	clock_subfields@subfield+1,w
 13055  04D7  3A00               	xorlw	0	; case 0
 13056  04D8  1903               	skipnz
 13057  04D9  2CDB               	goto	l6905
 13058  04DA  2CE9               	goto	l1281
 13059  04DB                     l6905:	
 13060                           
 13061                           ; Switch size 1, requested type "simple"
 13062                           ; Number of cases is 4, Range of values is 1 to 4
 13063                           ; switch strategies available:
 13064                           ; Name         Instructions Cycles
 13065                           ; simple_byte           13     7 (average)
 13066                           ; direct_byte           17     9 (fixed)
 13067                           ; jumptable            263     9 (fixed)
 13068                           ;	Chosen strategy is simple_byte
 13069  04DB  0853               	movf	clock_subfields@subfield,w
 13070  04DC  3A01               	xorlw	1	; case 1
 13071  04DD  1903               	skipnz
 13072  04DE  2CC6               	goto	l6151
 13073  04DF  3A03               	xorlw	3	; case 2
 13074  04E0  1903               	skipnz
 13075  04E1  2CCA               	goto	l6153
 13076  04E2  3A01               	xorlw	1	; case 3
 13077  04E3  1903               	skipnz
 13078  04E4  2CCE               	goto	l6155
 13079  04E5  3A07               	xorlw	7	; case 4
 13080  04E6  1903               	skipnz
 13081  04E7  2CD2               	goto	l6157
 13082  04E8  2CE9               	goto	l1281
 13083  04E9                     l1281:	
 13084                           
 13085                           ;main.c: 391:                 if(!PORTCbits.RC5){
 13086  04E9  0020               	movlb	0	; select bank0
 13087  04EA  1A8E               	btfsc	14,5	;volatile
 13088  04EB  2CED               	goto	u3381
 13089  04EC  2CEE               	goto	u3380
 13090  04ED                     u3381:	
 13091  04ED  2CFE               	goto	l6169
 13092  04EE                     u3380:	
 13093  04EE                     l6163:	
 13094                           
 13095                           ;main.c: 392:                     if(checkDebounceSW2()){
 13096  04EE  3186  26CA  3184   	fcall	_checkDebounceSW2
 13097  04F1  3A00               	xorlw	0
 13098  04F2  1903               	skipnz
 13099  04F3  2CF5               	goto	u3391
 13100  04F4  2CF6               	goto	u3390
 13101  04F5                     u3391:	
 13102  04F5  2CFE               	goto	l6169
 13103  04F6                     u3390:	
 13104  04F6                     l6165:	
 13105                           
 13106                           ;main.c: 394:                         mode_field_subfield[1] = subfield;
 13107  04F6  0020               	movlb	0	; select bank0
 13108  04F7  0854               	movf	clock_subfields@subfield+1,w
 13109  04F8  00E0               	movwf	_mode_field_subfield+3
 13110  04F9  0853               	movf	clock_subfields@subfield,w
 13111  04FA  00DF               	movwf	_mode_field_subfield+2
 13112  04FB                     l6167:	
 13113                           
 13114                           ;main.c: 395:                         increment_subfield();
 13115  04FB  318F  27C0  3184   	fcall	_increment_subfield
 13116  04FE                     l6169:	
 13117                           
 13118                           ;main.c: 399:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 13119  04FE  30A6               	movlw	166
 13120  04FF                     u4357:	
 13121  04FF  0B89               	decfsz	9,f
 13122  0500  2CFF               	goto	u4357
 13123  0501  3200               	nop2
 13124  0502                     l6171:	
 13125                           
 13126                           ;main.c: 401:             }while(subfield <= 4 );
 13127  0502  3000               	movlw	0
 13128  0503  0020               	movlb	0	; select bank0
 13129  0504  0254               	subwf	clock_subfields@subfield+1,w
 13130  0505  3005               	movlw	5
 13131  0506  1903               	skipnz
 13132  0507  0253               	subwf	clock_subfields@subfield,w
 13133  0508  1C03               	skipc
 13134  0509  2D0B               	goto	u3401
 13135  050A  2D0C               	goto	u3400
 13136  050B                     u3401:	
 13137  050B  2CAF               	goto	l6145
 13138  050C                     u3400:	
 13139  050C                     l1289:	
 13140  050C  0008               	return
 13141  050D                     __end_of_clock_subfields:	
 13142                           
 13143                           	psect	text16
 13144  0BA4                     __ptext16:	
 13145 ;; *************** function _mod4_LED *****************
 13146 ;; Defined at:
 13147 ;;		line 520 in file "main.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;		None
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;                  1    wreg      void 
 13154 ;; Registers used:
 13155 ;;		wreg, status,2, status,0, pclath, cstack
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;Total ram usage:        0 bytes
 13166 ;; Hardware stack levels used:    1
 13167 ;; Hardware stack levels required when called:    7
 13168 ;; This function calls:
 13169 ;;		_PWM6_LoadDutyValue
 13170 ;; This function is called by:
 13171 ;;		_config_routine
 13172 ;;		_clock_subfields
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           
 13177                           ;psect for function _mod4_LED
 13178  0BA4                     _mod4_LED:	
 13179  0BA4                     l5909:	
 13180                           ;incstack = 0
 13181                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13182                           
 13183                           
 13184                           ;main.c: 521:     LATA = 0;
 13185  0BA4  0020               	movlb	0	; select bank0
 13186  0BA5  0196               	clrf	22	;volatile
 13187  0BA6                     l5911:	
 13188                           
 13189                           ;main.c: 522:     PWM6_LoadDutyValue(0);
 13190  0BA6  3000               	movlw	0
 13191  0BA7  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13192  0BA8  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13193  0BA9  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13194  0BAC                     l5913:	
 13195  0BAC  0020               	movlb	0	; select bank0
 13196  0BAD  1616               	bsf	22,4	;volatile
 13197  0BAE                     l1346:	
 13198  0BAE  0008               	return
 13199  0BAF                     __end_of_mod4_LED:	
 13200                           
 13201                           	psect	text17
 13202  0B99                     __ptext17:	
 13203 ;; *************** function _mod3_LED *****************
 13204 ;; Defined at:
 13205 ;;		line 513 in file "main.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;		None
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		wreg, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;Total ram usage:        0 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    7
 13226 ;; This function calls:
 13227 ;;		_PWM6_LoadDutyValue
 13228 ;; This function is called by:
 13229 ;;		_config_routine
 13230 ;;		_clock_subfields
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           
 13235                           ;psect for function _mod3_LED
 13236  0B99                     _mod3_LED:	
 13237  0B99                     l5903:	
 13238                           ;incstack = 0
 13239                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13240                           
 13241                           
 13242                           ;main.c: 514:     LATA = 0;
 13243  0B99  0020               	movlb	0	; select bank0
 13244  0B9A  0196               	clrf	22	;volatile
 13245  0B9B                     l5905:	
 13246                           
 13247                           ;main.c: 515:     PWM6_LoadDutyValue(0);
 13248  0B9B  3000               	movlw	0
 13249  0B9C  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13250  0B9D  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13251  0B9E  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13252  0BA1                     l5907:	
 13253  0BA1  0020               	movlb	0	; select bank0
 13254  0BA2  1696               	bsf	22,5	;volatile
 13255  0BA3                     l1341:	
 13256  0BA3  0008               	return
 13257  0BA4                     __end_of_mod3_LED:	
 13258                           
 13259                           	psect	text18
 13260  0B84                     __ptext18:	
 13261 ;; *************** function _mod2_LED *****************
 13262 ;; Defined at:
 13263 ;;		line 508 in file "main.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;		None
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;		None
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  1    wreg      void 
 13270 ;; Registers used:
 13271 ;;		wreg, status,2, status,0, pclath, cstack
 13272 ;; Tracked objects:
 13273 ;;		On entry : 0/0
 13274 ;;		On exit  : 0/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;Total ram usage:        0 bytes
 13282 ;; Hardware stack levels used:    1
 13283 ;; Hardware stack levels required when called:    7
 13284 ;; This function calls:
 13285 ;;		_PWM6_LoadDutyValue
 13286 ;; This function is called by:
 13287 ;;		_config_routine
 13288 ;;		_clock_subfields
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           
 13293                           ;psect for function _mod2_LED
 13294  0B84                     _mod2_LED:	
 13295  0B84                     l5899:	
 13296                           ;incstack = 0
 13297                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13298                           
 13299                           
 13300                           ;main.c: 509:     LATA = 0;
 13301  0B84  0020               	movlb	0	; select bank0
 13302  0B85  0196               	clrf	22	;volatile
 13303  0B86                     l5901:	
 13304                           
 13305                           ;main.c: 510:     PWM6_LoadDutyValue(1023);
 13306  0B86  30FF               	movlw	255
 13307  0B87  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13308  0B88  3003               	movlw	3
 13309  0B89  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13310  0B8A  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13311  0B8D                     l1336:	
 13312  0B8D  0008               	return
 13313  0B8E                     __end_of_mod2_LED:	
 13314                           
 13315                           	psect	text19
 13316  0B8E                     __ptext19:	
 13317 ;; *************** function _mod1_LED *****************
 13318 ;; Defined at:
 13319 ;;		line 501 in file "main.c"
 13320 ;; Parameters:    Size  Location     Type
 13321 ;;		None
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;		None
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  1    wreg      void 
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0, pclath, cstack
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;Total ram usage:        0 bytes
 13338 ;; Hardware stack levels used:    1
 13339 ;; Hardware stack levels required when called:    7
 13340 ;; This function calls:
 13341 ;;		_PWM6_LoadDutyValue
 13342 ;; This function is called by:
 13343 ;;		_config_routine
 13344 ;;		_clock_subfields
 13345 ;; This function uses a non-reentrant model
 13346 ;;
 13347                           
 13348                           
 13349                           ;psect for function _mod1_LED
 13350  0B8E                     _mod1_LED:	
 13351  0B8E                     l5893:	
 13352                           ;incstack = 0
 13353                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13354                           
 13355                           
 13356                           ;main.c: 502:     LATA = 0;
 13357  0B8E  0020               	movlb	0	; select bank0
 13358  0B8F  0196               	clrf	22	;volatile
 13359  0B90                     l5895:	
 13360                           
 13361                           ;main.c: 503:     PWM6_LoadDutyValue(0);
 13362  0B90  3000               	movlw	0
 13363  0B91  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13364  0B92  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13365  0B93  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13366  0B96                     l5897:	
 13367  0B96  0020               	movlb	0	; select bank0
 13368  0B97  1796               	bsf	22,7	;volatile
 13369  0B98                     l1333:	
 13370  0B98  0008               	return
 13371  0B99                     __end_of_mod1_LED:	
 13372                           
 13373                           	psect	text20
 13374  0FC0                     __ptext20:	
 13375 ;; *************** function _increment_subfield *****************
 13376 ;; Defined at:
 13377 ;;		line 343 in file "main.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  exit            2   12[BANK0 ] int 
 13382 ;;  plus            2   10[BANK0 ] int 
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, status,2, status,0, pclath, cstack
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;Total ram usage:        4 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    7
 13399 ;; This function calls:
 13400 ;;		_PWM6_LoadDutyValue
 13401 ;;		_checkDebounceSW1
 13402 ;;		_checkDebounceSW2
 13403 ;; This function is called by:
 13404 ;;		_clock_subfields
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _increment_subfield
 13410  0FC0                     _increment_subfield:	
 13411  0FC0                     l5915:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;main.c: 345:     int plus = 10;
 13417  0FC0  300A               	movlw	10
 13418  0FC1  0020               	movlb	0	; select bank0
 13419  0FC2  00CE               	movwf	increment_subfield@plus
 13420  0FC3  3000               	movlw	0
 13421  0FC4  00CF               	movwf	increment_subfield@plus+1
 13422  0FC5                     l5917:	
 13423                           
 13424                           ;main.c: 346:     int exit = 0;
 13425  0FC5  01D0               	clrf	increment_subfield@exit
 13426  0FC6  01D1               	clrf	increment_subfield@exit+1
 13427  0FC7                     l5919:	
 13428                           
 13429                           ;main.c: 348:     PWM6_LoadDutyValue(0);
 13430  0FC7  3000               	movlw	0
 13431  0FC8  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13432  0FC9  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13433  0FCA  318D  2546  318F   	fcall	_PWM6_LoadDutyValue
 13434                           
 13435                           ;main.c: 350:            while(exit == 0) {
 13436  0FCD  2FF8               	goto	l5933
 13437  0FCE                     l1267:	
 13438                           
 13439                           ;main.c: 352:                if(!PORTCbits.RC5){
 13440  0FCE  1A8E               	btfsc	14,5	;volatile
 13441  0FCF  2FD1               	goto	u3291
 13442  0FD0  2FD2               	goto	u3290
 13443  0FD1                     u3291:	
 13444  0FD1  2FE6               	goto	l5927
 13445  0FD2                     u3290:	
 13446  0FD2                     l5921:	
 13447                           
 13448                           ;main.c: 353:                     if(checkDebounceSW2()){
 13449  0FD2  3186  26CA  318F   	fcall	_checkDebounceSW2
 13450  0FD5  3A00               	xorlw	0
 13451  0FD6  1903               	skipnz
 13452  0FD7  2FD9               	goto	u3301
 13453  0FD8  2FDA               	goto	u3300
 13454  0FD9                     u3301:	
 13455  0FD9  2FE6               	goto	l5927
 13456  0FDA                     u3300:	
 13457  0FDA                     l5923:	
 13458                           
 13459                           ;main.c: 354:                          plus += 100;
 13460  0FDA  3064               	movlw	100
 13461  0FDB  0020               	movlb	0	; select bank0
 13462  0FDC  07CE               	addwf	increment_subfield@plus,f
 13463  0FDD  3000               	movlw	0
 13464  0FDE  3DCF               	addwfc	increment_subfield@plus+1,f
 13465  0FDF                     l5925:	
 13466                           
 13467                           ;main.c: 355:                          PWM6_LoadDutyValue(plus);
 13468  0FDF  084F               	movf	increment_subfield@plus+1,w
 13469  0FE0  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13470  0FE1  084E               	movf	increment_subfield@plus,w
 13471  0FE2  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13472  0FE3  318D  2546  318F   	fcall	_PWM6_LoadDutyValue
 13473  0FE6                     l5927:	
 13474                           
 13475                           ;main.c: 358:                if(!PORTBbits.RB4){
 13476  0FE6  0020               	movlb	0	; select bank0
 13477  0FE7  1A0D               	btfsc	13,4	;volatile
 13478  0FE8  2FEA               	goto	u3311
 13479  0FE9  2FEB               	goto	u3310
 13480  0FEA                     u3311:	
 13481  0FEA  2FF8               	goto	l5933
 13482  0FEB                     u3310:	
 13483  0FEB                     l5929:	
 13484                           
 13485                           ;main.c: 359:                     if(checkDebounceSW1()){
 13486  0FEB  3185  25C2  318F   	fcall	_checkDebounceSW1
 13487  0FEE  3A00               	xorlw	0
 13488  0FEF  1903               	skipnz
 13489  0FF0  2FF2               	goto	u3321
 13490  0FF1  2FF3               	goto	u3320
 13491  0FF2                     u3321:	
 13492  0FF2  2FF8               	goto	l5933
 13493  0FF3                     u3320:	
 13494  0FF3                     l5931:	
 13495                           
 13496                           ;main.c: 360:                         exit = 1;
 13497  0FF3  3001               	movlw	1
 13498  0FF4  0020               	movlb	0	; select bank0
 13499  0FF5  00D0               	movwf	increment_subfield@exit
 13500  0FF6  3000               	movlw	0
 13501  0FF7  00D1               	movwf	increment_subfield@exit+1
 13502  0FF8                     l5933:	
 13503                           
 13504                           ;main.c: 350:            while(exit == 0) {
 13505  0FF8  0020               	movlb	0	; select bank0
 13506  0FF9  0850               	movf	increment_subfield@exit,w
 13507  0FFA  0451               	iorwf	increment_subfield@exit+1,w
 13508  0FFB  1903               	btfsc	3,2
 13509  0FFC  2FFE               	goto	u3331
 13510  0FFD  2FFF               	goto	u3330
 13511  0FFE                     u3331:	
 13512  0FFE  2FCE               	goto	l1267
 13513  0FFF                     u3330:	
 13514  0FFF                     l1273:	
 13515  0FFF  0008               	return
 13516  1000                     __end_of_increment_subfield:	
 13517                           
 13518                           	psect	text21
 13519  06CA                     __ptext21:	
 13520 ;; *************** function _checkDebounceSW2 *****************
 13521 ;; Defined at:
 13522 ;;		line 549 in file "main.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;		None
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;		None
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  1    wreg      unsigned char 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;Total ram usage:        7 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:    6
 13543 ;; This function calls:
 13544 ;;		Nothing
 13545 ;; This function is called by:
 13546 ;;		_config_routine
 13547 ;;		_increment_subfield
 13548 ;;		_clock_subfields
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function _checkDebounceSW2
 13554  06CA                     _checkDebounceSW2:	
 13555  06CA                     l5845:	
 13556                           ;incstack = 0
 13557                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 13558                           
 13559                           
 13560                           ;main.c: 552:     if(clkms - last_ms2 < 0){
 13561  06CA  087D               	movf	_clkms,w	;volatile
 13562  06CB  0020               	movlb	0	; select bank0
 13563  06CC  00C7               	movwf	??_checkDebounceSW2
 13564  06CD  01C8               	clrf	??_checkDebounceSW2+1
 13565  06CE  0848               	movf	??_checkDebounceSW2+1,w
 13566  06CF  00CA               	movwf	??_checkDebounceSW2+3
 13567  06D0  083D               	movf	_last_ms2,w
 13568  06D1  0247               	subwf	??_checkDebounceSW2,w
 13569  06D2  00C9               	movwf	??_checkDebounceSW2+2
 13570  06D3  1C03               	skipc
 13571  06D4  03CA               	decf	??_checkDebounceSW2+3,f
 13572  06D5  1FCA               	btfss	??_checkDebounceSW2+3,7
 13573  06D6  2ED8               	goto	u3251
 13574  06D7  2ED9               	goto	u3250
 13575  06D8                     u3251:	
 13576  06D8  2EFD               	goto	l5853
 13577  06D9                     u3250:	
 13578  06D9                     l5847:	
 13579                           
 13580                           ;main.c: 554:         if ((200 - last_ms2)+ clkms > 2 ){
 13581  06D9  087D               	movf	_clkms,w	;volatile
 13582  06DA  00C7               	movwf	??_checkDebounceSW2
 13583  06DB  01C8               	clrf	??_checkDebounceSW2+1
 13584  06DC  0848               	movf	??_checkDebounceSW2+1,w
 13585  06DD  00CA               	movwf	??_checkDebounceSW2+3
 13586  06DE  083D               	movf	_last_ms2,w
 13587  06DF  0247               	subwf	??_checkDebounceSW2,w
 13588  06E0  00C9               	movwf	??_checkDebounceSW2+2
 13589  06E1  1C03               	skipc
 13590  06E2  03CA               	decf	??_checkDebounceSW2+3,f
 13591  06E3  0849               	movf	??_checkDebounceSW2+2,w
 13592  06E4  3EC8               	addlw	200
 13593  06E5  00CB               	movwf	??_checkDebounceSW2+4
 13594  06E6  3000               	movlw	0
 13595  06E7  3D4A               	addwfc	??_checkDebounceSW2+3,w
 13596  06E8  00CC               	movwf	??_checkDebounceSW2+5
 13597  06E9  084C               	movf	??_checkDebounceSW2+5,w
 13598  06EA  3A80               	xorlw	128
 13599  06EB  00CD               	movwf	??_checkDebounceSW2+6
 13600  06EC  3080               	movlw	128
 13601  06ED  024D               	subwf	??_checkDebounceSW2+6,w
 13602  06EE  1D03               	skipz
 13603  06EF  2EF2               	goto	u3265
 13604  06F0  3003               	movlw	3
 13605  06F1  024B               	subwf	??_checkDebounceSW2+4,w
 13606  06F2                     u3265:	
 13607  06F2  1C03               	skipc
 13608  06F3  2EF5               	goto	u3261
 13609  06F4  2EF6               	goto	u3260
 13610  06F5                     u3261:	
 13611  06F5  2EFD               	goto	l5853
 13612  06F6                     u3260:	
 13613  06F6                     l5849:	
 13614                           
 13615                           ;main.c: 555:             last_ms2 = clkms;
 13616  06F6  087D               	movf	_clkms,w	;volatile
 13617  06F7  0020               	movlb	0	; select bank0
 13618  06F8  00C7               	movwf	??_checkDebounceSW2
 13619  06F9  0847               	movf	??_checkDebounceSW2,w
 13620  06FA  00BD               	movwf	_last_ms2
 13621                           
 13622                           ;main.c: 556:             return 1;
 13623  06FB  3001               	movlw	1
 13624  06FC  2F16               	goto	l1358
 13625  06FD                     l5853:	
 13626                           
 13627                           ;main.c: 560:     if(clkms - last_ms2 < 2){
 13628  06FD  087D               	movf	_clkms,w	;volatile
 13629  06FE  0020               	movlb	0	; select bank0
 13630  06FF  00C7               	movwf	??_checkDebounceSW2
 13631  0700  01C8               	clrf	??_checkDebounceSW2+1
 13632  0701  0848               	movf	??_checkDebounceSW2+1,w
 13633  0702  00CA               	movwf	??_checkDebounceSW2+3
 13634  0703  083D               	movf	_last_ms2,w
 13635  0704  0247               	subwf	??_checkDebounceSW2,w
 13636  0705  00C9               	movwf	??_checkDebounceSW2+2
 13637  0706  1C03               	skipc
 13638  0707  03CA               	decf	??_checkDebounceSW2+3,f
 13639  0708  084A               	movf	??_checkDebounceSW2+3,w
 13640  0709  3A80               	xorlw	128
 13641  070A  00CB               	movwf	??_checkDebounceSW2+4
 13642  070B  3080               	movlw	128
 13643  070C  024B               	subwf	??_checkDebounceSW2+4,w
 13644  070D  1D03               	skipz
 13645  070E  2F11               	goto	u3275
 13646  070F  3002               	movlw	2
 13647  0710  0249               	subwf	??_checkDebounceSW2+2,w
 13648  0711                     u3275:	
 13649  0711  1803               	skipnc
 13650  0712  2F14               	goto	u3271
 13651  0713  2F15               	goto	u3270
 13652  0714                     u3271:	
 13653  0714  2EF6               	goto	l5849
 13654  0715                     u3270:	
 13655  0715                     l5855:	
 13656                           
 13657                           ;main.c: 561:         return 0;
 13658  0715  3000               	movlw	0
 13659  0716                     l1358:	
 13660  0716  0008               	return
 13661  0717                     __end_of_checkDebounceSW2:	
 13662                           
 13663                           	psect	text22
 13664  05C2                     __ptext22:	
 13665 ;; *************** function _checkDebounceSW1 *****************
 13666 ;; Defined at:
 13667 ;;		line 526 in file "main.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      unsigned char 
 13674 ;; Registers used:
 13675 ;;		wreg, status,2, status,0
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13685 ;;Total ram usage:        7 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:    6
 13688 ;; This function calls:
 13689 ;;		Nothing
 13690 ;; This function is called by:
 13691 ;;		_config_routine
 13692 ;;		_increment_subfield
 13693 ;;		_clock_subfields
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           
 13698                           ;psect for function _checkDebounceSW1
 13699  05C2                     _checkDebounceSW1:	
 13700  05C2                     l5819:	
 13701                           ;incstack = 0
 13702                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 13703                           
 13704                           
 13705                           ;main.c: 527:    PIE4bits.TMR1IE = 0;
 13706  05C2  002E               	movlb	14	; select bank14
 13707  05C3  101A               	bcf	26,0	;volatile
 13708  05C4                     l5821:	
 13709                           
 13710                           ;main.c: 529:     if(clkms - last_ms < 0){
 13711  05C4  087D               	movf	_clkms,w	;volatile
 13712  05C5  0020               	movlb	0	; select bank0
 13713  05C6  00C7               	movwf	??_checkDebounceSW1
 13714  05C7  01C8               	clrf	??_checkDebounceSW1+1
 13715  05C8  0848               	movf	??_checkDebounceSW1+1,w
 13716  05C9  00CA               	movwf	??_checkDebounceSW1+3
 13717  05CA  083E               	movf	_last_ms,w
 13718  05CB  0247               	subwf	??_checkDebounceSW1,w
 13719  05CC  00C9               	movwf	??_checkDebounceSW1+2
 13720  05CD  1C03               	skipc
 13721  05CE  03CA               	decf	??_checkDebounceSW1+3,f
 13722  05CF  1FCA               	btfss	??_checkDebounceSW1+3,7
 13723  05D0  2DD2               	goto	u3221
 13724  05D1  2DD3               	goto	u3220
 13725  05D2                     u3221:	
 13726  05D2  2DF9               	goto	l5831
 13727  05D3                     u3220:	
 13728  05D3                     l5823:	
 13729                           
 13730                           ;main.c: 531:         if ((200 - last_ms)+ clkms > 2 ){
 13731  05D3  087D               	movf	_clkms,w	;volatile
 13732  05D4  00C7               	movwf	??_checkDebounceSW1
 13733  05D5  01C8               	clrf	??_checkDebounceSW1+1
 13734  05D6  0848               	movf	??_checkDebounceSW1+1,w
 13735  05D7  00CA               	movwf	??_checkDebounceSW1+3
 13736  05D8  083E               	movf	_last_ms,w
 13737  05D9  0247               	subwf	??_checkDebounceSW1,w
 13738  05DA  00C9               	movwf	??_checkDebounceSW1+2
 13739  05DB  1C03               	skipc
 13740  05DC  03CA               	decf	??_checkDebounceSW1+3,f
 13741  05DD  0849               	movf	??_checkDebounceSW1+2,w
 13742  05DE  3EC8               	addlw	200
 13743  05DF  00CB               	movwf	??_checkDebounceSW1+4
 13744  05E0  3000               	movlw	0
 13745  05E1  3D4A               	addwfc	??_checkDebounceSW1+3,w
 13746  05E2  00CC               	movwf	??_checkDebounceSW1+5
 13747  05E3  084C               	movf	??_checkDebounceSW1+5,w
 13748  05E4  3A80               	xorlw	128
 13749  05E5  00CD               	movwf	??_checkDebounceSW1+6
 13750  05E6  3080               	movlw	128
 13751  05E7  024D               	subwf	??_checkDebounceSW1+6,w
 13752  05E8  1D03               	skipz
 13753  05E9  2DEC               	goto	u3235
 13754  05EA  3003               	movlw	3
 13755  05EB  024B               	subwf	??_checkDebounceSW1+4,w
 13756  05EC                     u3235:	
 13757  05EC  1C03               	skipc
 13758  05ED  2DEF               	goto	u3231
 13759  05EE  2DF0               	goto	u3230
 13760  05EF                     u3231:	
 13761  05EF  2DF9               	goto	l5831
 13762  05F0                     u3230:	
 13763  05F0                     l5825:	
 13764                           
 13765                           ;main.c: 532:             last_ms = clkms;
 13766  05F0  087D               	movf	_clkms,w	;volatile
 13767  05F1  0020               	movlb	0	; select bank0
 13768  05F2  00C7               	movwf	??_checkDebounceSW1
 13769  05F3  0847               	movf	??_checkDebounceSW1,w
 13770  05F4  00BE               	movwf	_last_ms
 13771  05F5                     l5827:	
 13772                           
 13773                           ;main.c: 533:             PIE4bits.TMR1IE = 1;
 13774  05F5  002E               	movlb	14	; select bank14
 13775  05F6  141A               	bsf	26,0	;volatile
 13776                           
 13777                           ;main.c: 534:             return 1;
 13778  05F7  3001               	movlw	1
 13779  05F8  2E1B               	goto	l1351
 13780  05F9                     l5831:	
 13781                           
 13782                           ;main.c: 538:     if(clkms - last_ms < 2){
 13783  05F9  087D               	movf	_clkms,w	;volatile
 13784  05FA  0020               	movlb	0	; select bank0
 13785  05FB  00C7               	movwf	??_checkDebounceSW1
 13786  05FC  01C8               	clrf	??_checkDebounceSW1+1
 13787  05FD  0848               	movf	??_checkDebounceSW1+1,w
 13788  05FE  00CA               	movwf	??_checkDebounceSW1+3
 13789  05FF  083E               	movf	_last_ms,w
 13790  0600  0247               	subwf	??_checkDebounceSW1,w
 13791  0601  00C9               	movwf	??_checkDebounceSW1+2
 13792  0602  1C03               	skipc
 13793  0603  03CA               	decf	??_checkDebounceSW1+3,f
 13794  0604  084A               	movf	??_checkDebounceSW1+3,w
 13795  0605  3A80               	xorlw	128
 13796  0606  00CB               	movwf	??_checkDebounceSW1+4
 13797  0607  3080               	movlw	128
 13798  0608  024B               	subwf	??_checkDebounceSW1+4,w
 13799  0609  1D03               	skipz
 13800  060A  2E0D               	goto	u3245
 13801  060B  3002               	movlw	2
 13802  060C  0249               	subwf	??_checkDebounceSW1+2,w
 13803  060D                     u3245:	
 13804  060D  1803               	skipnc
 13805  060E  2E10               	goto	u3241
 13806  060F  2E11               	goto	u3240
 13807  0610                     u3241:	
 13808  0610  2E13               	goto	l5839
 13809  0611                     u3240:	
 13810  0611                     l5833:	
 13811                           
 13812                           ;main.c: 539:         return 0;
 13813  0611  3000               	movlw	0
 13814  0612  2E1B               	goto	l1351
 13815  0613                     l5839:	
 13816                           
 13817                           ;main.c: 542:         last_ms = clkms;
 13818  0613  087D               	movf	_clkms,w	;volatile
 13819  0614  0020               	movlb	0	; select bank0
 13820  0615  00C7               	movwf	??_checkDebounceSW1
 13821  0616  0847               	movf	??_checkDebounceSW1,w
 13822  0617  00BE               	movwf	_last_ms
 13823  0618                     l5841:	
 13824                           
 13825                           ;main.c: 543:         PIE4bits.TMR1IE = 1;
 13826  0618  002E               	movlb	14	; select bank14
 13827  0619  141A               	bsf	26,0	;volatile
 13828                           
 13829                           ;main.c: 544:         return 1;
 13830  061A  3001               	movlw	1
 13831  061B                     l1351:	
 13832  061B  0008               	return
 13833  061C                     __end_of_checkDebounceSW1:	
 13834                           
 13835                           	psect	text23
 13836  050D                     __ptext23:	
 13837 ;; *************** function _all_LED *****************
 13838 ;; Defined at:
 13839 ;;		line 416 in file "main.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, status,2, status,0, pclath, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;Total ram usage:        1 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    7
 13860 ;; This function calls:
 13861 ;;		_PWM6_LoadDutyValue
 13862 ;; This function is called by:
 13863 ;;		_config_routine
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           
 13868                           ;psect for function _all_LED
 13869  050D                     _all_LED:	
 13870  050D                     l1292:	
 13871                           ;incstack = 0
 13872                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 13873                           ;main.c: 418:        do { LATAbits.LATA7 = 1; } while(0);
 13874                           
 13875  050D  0020               	movlb	0	; select bank0
 13876  050E  1796               	bsf	22,7	;volatile
 13877  050F                     l6105:	
 13878                           
 13879                           ;main.c: 419:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13880  050F  3021               	movlw	33
 13881  0510  0020               	movlb	0	; select bank0
 13882  0511  00CB               	movwf	??_all_LED
 13883  0512  3076               	movlw	118
 13884  0513                     u4367:	
 13885  0513  0B89               	decfsz	9,f
 13886  0514  2D13               	goto	u4367
 13887  0515  0BCB               	decfsz	??_all_LED,f
 13888  0516  2D13               	goto	u4367
 13889  0517  0000               	nop
 13890  0518                     l6107:	
 13891  0518  0020               	movlb	0	; select bank0
 13892  0519  1396               	bcf	22,7	;volatile
 13893  051A                     l1295:	
 13894                           
 13895                           ;main.c: 421:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13896  051A  3021               	movlw	33
 13897  051B  0020               	movlb	0	; select bank0
 13898  051C  00CB               	movwf	??_all_LED
 13899  051D  3076               	movlw	118
 13900  051E                     u4377:	
 13901  051E  0B89               	decfsz	9,f
 13902  051F  2D1E               	goto	u4377
 13903  0520  0BCB               	decfsz	??_all_LED,f
 13904  0521  2D1E               	goto	u4377
 13905  0522  0000               	nop
 13906  0523                     l6109:	
 13907                           
 13908                           ;main.c: 423:        PWM6_LoadDutyValue(1023);
 13909  0523  30FF               	movlw	255
 13910  0524  0020               	movlb	0	; select bank0
 13911  0525  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13912  0526  3003               	movlw	3
 13913  0527  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13914  0528  318D  2546  3185   	fcall	_PWM6_LoadDutyValue
 13915  052B                     l6111:	
 13916                           
 13917                           ;main.c: 424:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13918  052B  3021               	movlw	33
 13919  052C  0020               	movlb	0	; select bank0
 13920  052D  00CB               	movwf	??_all_LED
 13921  052E  3076               	movlw	118
 13922  052F                     u4387:	
 13923  052F  0B89               	decfsz	9,f
 13924  0530  2D2F               	goto	u4387
 13925  0531  0BCB               	decfsz	??_all_LED,f
 13926  0532  2D2F               	goto	u4387
 13927  0533  0000               	nop
 13928                           
 13929                           ;main.c: 426:         PWM6_LoadDutyValue(0);
 13930  0534  3000               	movlw	0
 13931  0535  0020               	movlb	0	; select bank0
 13932  0536  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13933  0537  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13934  0538  318D  2546  3185   	fcall	_PWM6_LoadDutyValue
 13935  053B                     l6113:	
 13936                           
 13937                           ;main.c: 427:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13938  053B  3021               	movlw	33
 13939  053C  0020               	movlb	0	; select bank0
 13940  053D  00CB               	movwf	??_all_LED
 13941  053E  3076               	movlw	118
 13942  053F                     u4397:	
 13943  053F  0B89               	decfsz	9,f
 13944  0540  2D3F               	goto	u4397
 13945  0541  0BCB               	decfsz	??_all_LED,f
 13946  0542  2D3F               	goto	u4397
 13947  0543  0000               	nop
 13948  0544                     l6115:	
 13949  0544  0020               	movlb	0	; select bank0
 13950  0545  1696               	bsf	22,5	;volatile
 13951  0546                     l6117:	
 13952                           
 13953                           ;main.c: 429:          _delay((unsigned long)((100)*(1000000/4000.0)));
 13954  0546  3021               	movlw	33
 13955  0547  0020               	movlb	0	; select bank0
 13956  0548  00CB               	movwf	??_all_LED
 13957  0549  3076               	movlw	118
 13958  054A                     u4407:	
 13959  054A  0B89               	decfsz	9,f
 13960  054B  2D4A               	goto	u4407
 13961  054C  0BCB               	decfsz	??_all_LED,f
 13962  054D  2D4A               	goto	u4407
 13963  054E  0000               	nop
 13964  054F                     l6119:	
 13965  054F  0020               	movlb	0	; select bank0
 13966  0550  1296               	bcf	22,5	;volatile
 13967  0551                     l6121:	
 13968                           
 13969                           ;main.c: 431:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13970  0551  3021               	movlw	33
 13971  0552  0020               	movlb	0	; select bank0
 13972  0553  00CB               	movwf	??_all_LED
 13973  0554  3076               	movlw	118
 13974  0555                     u4417:	
 13975  0555  0B89               	decfsz	9,f
 13976  0556  2D55               	goto	u4417
 13977  0557  0BCB               	decfsz	??_all_LED,f
 13978  0558  2D55               	goto	u4417
 13979  0559  0000               	nop
 13980  055A                     l6123:	
 13981  055A  0020               	movlb	0	; select bank0
 13982  055B  1616               	bsf	22,4	;volatile
 13983  055C                     l6125:	
 13984                           
 13985                           ;main.c: 433:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13986  055C  3021               	movlw	33
 13987  055D  0020               	movlb	0	; select bank0
 13988  055E  00CB               	movwf	??_all_LED
 13989  055F  3076               	movlw	118
 13990  0560                     u4427:	
 13991  0560  0B89               	decfsz	9,f
 13992  0561  2D60               	goto	u4427
 13993  0562  0BCB               	decfsz	??_all_LED,f
 13994  0563  2D60               	goto	u4427
 13995  0564  0000               	nop
 13996  0565                     l6127:	
 13997  0565  0020               	movlb	0	; select bank0
 13998  0566  1216               	bcf	22,4	;volatile
 13999  0567                     l1304:	
 14000  0567  0008               	return
 14001  0568                     __end_of_all_LED:	
 14002                           
 14003                           	psect	text24
 14004  0D46                     __ptext24:	
 14005 ;; *************** function _PWM6_LoadDutyValue *****************
 14006 ;; Defined at:
 14007 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;		None
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  1    wreg      void 
 14014 ;; Registers used:
 14015 ;;		wreg, status,2, status,0
 14016 ;; Tracked objects:
 14017 ;;		On entry : 0/0
 14018 ;;		On exit  : 0/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;Total ram usage:        4 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:    6
 14028 ;; This function calls:
 14029 ;;		Nothing
 14030 ;; This function is called by:
 14031 ;;		_main
 14032 ;;		_increment_subfield
 14033 ;;		_all_LED
 14034 ;;		_mod1_LED
 14035 ;;		_mod2_LED
 14036 ;;		_mod3_LED
 14037 ;;		_mod4_LED
 14038 ;;		_mode_select_LED
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           
 14043                           ;psect for function _PWM6_LoadDutyValue
 14044  0D46                     _PWM6_LoadDutyValue:	
 14045  0D46                     l5801:	
 14046                           ;incstack = 0
 14047                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14048                           
 14049                           
 14050                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 14051  0D46  0020               	movlb	0	; select bank0
 14052  0D47  0848               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14053  0D48  00CA               	movwf	??_PWM6_LoadDutyValue+1
 14054  0D49  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 14055  0D4A  00C9               	movwf	??_PWM6_LoadDutyValue
 14056  0D4B  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 14057  0D4C  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 14058  0D4D  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 14059  0D4E  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 14060  0D4F  0849               	movf	??_PWM6_LoadDutyValue,w
 14061  0D50  0027               	movlb	7	; select bank7
 14062  0D51  008D               	movwf	13	;volatile
 14063                           
 14064                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 14065  0D52  0020               	movlb	0	; select bank0
 14066  0D53  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 14067  0D54  3903               	andlw	3
 14068  0D55  00C9               	movwf	??_PWM6_LoadDutyValue
 14069  0D56  3005               	movlw	5
 14070  0D57                     u3215:	
 14071  0D57  35C9               	lslf	??_PWM6_LoadDutyValue,f
 14072  0D58  3EFF               	addlw	-1
 14073  0D59  1D03               	skipz
 14074  0D5A  2D57               	goto	u3215
 14075  0D5B  3549               	lslf	??_PWM6_LoadDutyValue,w
 14076  0D5C  0027               	movlb	7	; select bank7
 14077  0D5D  008C               	movwf	12	;volatile
 14078  0D5E                     l916:	
 14079  0D5E  0008               	return
 14080  0D5F                     __end_of_PWM6_LoadDutyValue:	
 14081                           
 14082                           	psect	text25
 14083  0AB6                     __ptext25:	
 14084 ;; *************** function _TMR0_StartTimer *****************
 14085 ;; Defined at:
 14086 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;		None
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		None
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;Total ram usage:        0 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    6
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_main
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           
 14115                           ;psect for function _TMR0_StartTimer
 14116  0AB6                     _TMR0_StartTimer:	
 14117  0AB6                     l6429:	
 14118                           ;incstack = 0
 14119                           ; Regs used in _TMR0_StartTimer: []
 14120                           
 14121                           
 14122                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 14123  0AB6  0020               	movlb	0	; select bank0
 14124  0AB7  179E               	bsf	30,7	;volatile
 14125  0AB8                     l1609:	
 14126  0AB8  0008               	return
 14127  0AB9                     __end_of_TMR0_StartTimer:	
 14128                           
 14129                           	psect	text26
 14130  0D93                     __ptext26:	
 14131 ;; *************** function _SYSTEM_Initialize *****************
 14132 ;; Defined at:
 14133 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;		None
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;		None
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		wreg, status,2, status,0, pclath, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:    8
 14154 ;; This function calls:
 14155 ;;		_ADCC_Initialize
 14156 ;;		_EXT_INT_Initialize
 14157 ;;		_OSCILLATOR_Initialize
 14158 ;;		_PIN_MANAGER_Initialize
 14159 ;;		_PMD_Initialize
 14160 ;;		_PWM6_Initialize
 14161 ;;		_TMR0_Initialize
 14162 ;;		_TMR1_Initialize
 14163 ;;		_TMR2_Initialize
 14164 ;; This function is called by:
 14165 ;;		_main
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           
 14170                           ;psect for function _SYSTEM_Initialize
 14171  0D93                     _SYSTEM_Initialize:	
 14172  0D93                     l6275:	
 14173                           ;incstack = 0
 14174                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14175                           
 14176                           
 14177                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 14178  0D93  318B  2345  318D   	fcall	_PMD_Initialize
 14179  0D96                     l6277:	
 14180                           
 14181                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 14182  0D96  3187  2761  318D   	fcall	_PIN_MANAGER_Initialize
 14183  0D99                     l6279:	
 14184                           
 14185                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 14186  0D99  318B  235F  318D   	fcall	_OSCILLATOR_Initialize
 14187  0D9C                     l6281:	
 14188                           
 14189                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 14190  0D9C  318B  23E1  318D   	fcall	_PWM6_Initialize
 14191  0D9F                     l6283:	
 14192                           
 14193                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14194  0D9F  318C  24BA  318D   	fcall	_ADCC_Initialize
 14195  0DA2                     l6285:	
 14196                           
 14197                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 14198  0DA2  318D  2515  318D   	fcall	_TMR2_Initialize
 14199  0DA5                     l6287:	
 14200                           
 14201                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 14202  0DA5  318D  25CB  318D   	fcall	_TMR1_Initialize
 14203  0DA8                     l6289:	
 14204                           
 14205                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 14206  0DA8  318B  23EE  318D   	fcall	_EXT_INT_Initialize
 14207  0DAB                     l6291:	
 14208                           
 14209                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 14210  0DAB  318C  248F  318D   	fcall	_TMR0_Initialize
 14211  0DAE                     l439:	
 14212  0DAE  0008               	return
 14213  0DAF                     __end_of_SYSTEM_Initialize:	
 14214                           
 14215                           	psect	text27
 14216  0D15                     __ptext27:	
 14217 ;; *************** function _TMR2_Initialize *****************
 14218 ;; Defined at:
 14219 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;		None
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg, status,2, status,0, pclath, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    7
 14240 ;; This function calls:
 14241 ;;		_TMR2_SetInterruptHandler
 14242 ;; This function is called by:
 14243 ;;		_SYSTEM_Initialize
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           
 14248                           ;psect for function _TMR2_Initialize
 14249  0D15                     _TMR2_Initialize:	
 14250  0D15                     l6045:	
 14251                           ;incstack = 0
 14252                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14253                           
 14254                           
 14255                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 14256  0D15  3001               	movlw	1
 14257  0D16  0025               	movlb	5	; select bank5
 14258  0D17  0090               	movwf	16	;volatile
 14259                           
 14260                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 14261  0D18  3020               	movlw	32
 14262  0D19  008F               	movwf	15	;volatile
 14263  0D1A                     l6047:	
 14264                           
 14265                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 14266  0D1A  0191               	clrf	17	;volatile
 14267  0D1B                     l6049:	
 14268                           
 14269                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 14270  0D1B  309B               	movlw	155
 14271  0D1C  008D               	movwf	13	;volatile
 14272                           
 14273                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 14274  0D1D  018C               	clrf	12	;volatile
 14275  0D1E                     l6051:	
 14276                           
 14277                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 14278  0D1E  002E               	movlb	14	; select bank14
 14279  0D1F  1090               	bcf	16,1	;volatile
 14280  0D20                     l6053:	
 14281                           
 14282                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 14283  0D20  149A               	bsf	26,1	;volatile
 14284  0D21                     l6055:	
 14285                           
 14286                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 14287  0D21  3098               	movlw	low _TMR2_DefaultInterruptHandler
 14288  0D22  0020               	movlb	0	; select bank0
 14289  0D23  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 14290  0D24  300A               	movlw	high _TMR2_DefaultInterruptHandler
 14291  0D25  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 14292  0D26  318B  2371  318D   	fcall	_TMR2_SetInterruptHandler
 14293  0D29                     l6057:	
 14294                           
 14295                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 14296  0D29  30B1               	movlw	177
 14297  0D2A  0025               	movlb	5	; select bank5
 14298  0D2B  008E               	movwf	14	;volatile
 14299  0D2C                     l998:	
 14300  0D2C  0008               	return
 14301  0D2D                     __end_of_TMR2_Initialize:	
 14302                           
 14303                           	psect	text28
 14304  0B71                     __ptext28:	
 14305 ;; *************** function _TMR2_SetInterruptHandler *****************
 14306 ;; Defined at:
 14307 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14310 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;		None
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  1    wreg      void 
 14315 ;; Registers used:
 14316 ;;		wreg
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;Total ram usage:        2 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:    6
 14329 ;; This function calls:
 14330 ;;		Nothing
 14331 ;; This function is called by:
 14332 ;;		_TMR2_Initialize
 14333 ;;		_main
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           
 14338                           ;psect for function _TMR2_SetInterruptHandler
 14339  0B71                     _TMR2_SetInterruptHandler:	
 14340  0B71                     l5889:	
 14341                           ;incstack = 0
 14342                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 14343                           
 14344                           
 14345                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 14346  0B71  0020               	movlb	0	; select bank0
 14347  0B72  0848               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 14348  0B73  0021               	movlb	1	; select bank1
 14349  0B74  00CB               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 14350  0B75  0020               	movlb	0	; select bank0
 14351  0B76  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 14352  0B77  0021               	movlb	1	; select bank1
 14353  0B78  00CA               	movwf	_TMR2_InterruptHandler^(0+128)
 14354  0B79                     l1041:	
 14355  0B79  0008               	return
 14356  0B7A                     __end_of_TMR2_SetInterruptHandler:	
 14357                           
 14358                           	psect	text29
 14359  0DCB                     __ptext29:	
 14360 ;; *************** function _TMR1_Initialize *****************
 14361 ;; Defined at:
 14362 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;		None
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      void 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, status,0, pclath, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        0 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:    7
 14383 ;; This function calls:
 14384 ;;		_TMR1_SetInterruptHandler
 14385 ;; This function is called by:
 14386 ;;		_SYSTEM_Initialize
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           
 14391                           ;psect for function _TMR1_Initialize
 14392  0DCB                     _TMR1_Initialize:	
 14393  0DCB                     l6059:	
 14394                           ;incstack = 0
 14395                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14396                           
 14397                           
 14398                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 14399  0DCB  0024               	movlb	4	; select bank4
 14400  0DCC  018F               	clrf	15	;volatile
 14401                           
 14402                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 14403  0DCD  0190               	clrf	16	;volatile
 14404  0DCE                     l6061:	
 14405                           
 14406                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 14407  0DCE  3004               	movlw	4
 14408  0DCF  0091               	movwf	17	;volatile
 14409  0DD0                     l6063:	
 14410                           
 14411                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 14412  0DD0  30E1               	movlw	225
 14413  0DD1  008D               	movwf	13	;volatile
 14414  0DD2                     l6065:	
 14415                           
 14416                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 14417  0DD2  30BA               	movlw	186
 14418  0DD3  008C               	movwf	12	;volatile
 14419  0DD4                     l6067:	
 14420                           
 14421                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 14422  0DD4  080D               	movf	13,w	;volatile
 14423  0DD5  0020               	movlb	0	; select bank0
 14424  0DD6  00E7               	movwf	_timer1ReloadVal+1	;volatile
 14425  0DD7  0024               	movlb	4	; select bank4
 14426  0DD8  080C               	movf	12,w	;volatile
 14427  0DD9  0020               	movlb	0	; select bank0
 14428  0DDA  00E6               	movwf	_timer1ReloadVal	;volatile
 14429  0DDB                     l6069:	
 14430                           
 14431                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 14432  0DDB  002E               	movlb	14	; select bank14
 14433  0DDC  1010               	bcf	16,0	;volatile
 14434  0DDD                     l6071:	
 14435                           
 14436                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 14437  0DDD  141A               	bsf	26,0	;volatile
 14438  0DDE                     l6073:	
 14439                           
 14440                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 14441  0DDE  3097               	movlw	low _TMR1_DefaultInterruptHandler
 14442  0DDF  0020               	movlb	0	; select bank0
 14443  0DE0  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 14444  0DE1  300A               	movlw	high _TMR1_DefaultInterruptHandler
 14445  0DE2  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 14446  0DE3  318A  22FE  318D   	fcall	_TMR1_SetInterruptHandler
 14447  0DE6                     l6075:	
 14448                           
 14449                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 14450  0DE6  3015               	movlw	21
 14451  0DE7  0024               	movlb	4	; select bank4
 14452  0DE8  008E               	movwf	14	;volatile
 14453  0DE9                     l869:	
 14454  0DE9  0008               	return
 14455  0DEA                     __end_of_TMR1_Initialize:	
 14456                           
 14457                           	psect	text30
 14458  0AFE                     __ptext30:	
 14459 ;; *************** function _TMR1_SetInterruptHandler *****************
 14460 ;; Defined at:
 14461 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14464 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;		None
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  1    wreg      void 
 14469 ;; Registers used:
 14470 ;;		wreg
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;Total ram usage:        2 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    6
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		_TMR1_Initialize
 14487 ;;		_main
 14488 ;; This function uses a non-reentrant model
 14489 ;;
 14490                           
 14491                           
 14492                           ;psect for function _TMR1_SetInterruptHandler
 14493  0AFE                     _TMR1_SetInterruptHandler:	
 14494  0AFE                     l5867:	
 14495                           ;incstack = 0
 14496                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 14497                           
 14498                           
 14499                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 14500  0AFE  0020               	movlb	0	; select bank0
 14501  0AFF  0848               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 14502  0B00  00E5               	movwf	_TMR1_InterruptHandler+1
 14503  0B01  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 14504  0B02  00E4               	movwf	_TMR1_InterruptHandler
 14505  0B03                     l899:	
 14506  0B03  0008               	return
 14507  0B04                     __end_of_TMR1_SetInterruptHandler:	
 14508                           
 14509                           	psect	text31
 14510  0C8F                     __ptext31:	
 14511 ;; *************** function _TMR0_Initialize *****************
 14512 ;; Defined at:
 14513 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;		None
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  1    wreg      void 
 14520 ;; Registers used:
 14521 ;;		wreg, status,2, status,0, pclath, cstack
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;Total ram usage:        0 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:    7
 14534 ;; This function calls:
 14535 ;;		_TMR0_SetInterruptHandler
 14536 ;; This function is called by:
 14537 ;;		_SYSTEM_Initialize
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           
 14542                           ;psect for function _TMR0_Initialize
 14543  0C8F                     _TMR0_Initialize:	
 14544  0C8F                     l6077:	
 14545                           ;incstack = 0
 14546                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14547                           
 14548                           
 14549                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 14550  0C8F  3095               	movlw	149
 14551  0C90  0020               	movlb	0	; select bank0
 14552  0C91  009F               	movwf	31	;volatile
 14553                           
 14554                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 14555  0C92  30F1               	movlw	241
 14556  0C93  009D               	movwf	29	;volatile
 14557  0C94                     l6079:	
 14558                           
 14559                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 14560  0C94  019C               	clrf	28	;volatile
 14561  0C95                     l6081:	
 14562                           
 14563                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 14564  0C95  002E               	movlb	14	; select bank14
 14565  0C96  128C               	bcf	12,5	;volatile
 14566  0C97                     l6083:	
 14567                           
 14568                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 14569  0C97  1696               	bsf	22,5	;volatile
 14570  0C98                     l6085:	
 14571                           
 14572                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 14573  0C98  3096               	movlw	low _TMR0_DefaultInterruptHandler
 14574  0C99  0020               	movlb	0	; select bank0
 14575  0C9A  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 14576  0C9B  300A               	movlw	high _TMR0_DefaultInterruptHandler
 14577  0C9C  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 14578  0C9D  318B  2368  318C   	fcall	_TMR0_SetInterruptHandler
 14579  0CA0                     l6087:	
 14580                           
 14581                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 14582  0CA0  300B               	movlw	11
 14583  0CA1  0020               	movlb	0	; select bank0
 14584  0CA2  009E               	movwf	30	;volatile
 14585  0CA3                     l1606:	
 14586  0CA3  0008               	return
 14587  0CA4                     __end_of_TMR0_Initialize:	
 14588                           
 14589                           	psect	text32
 14590  0B68                     __ptext32:	
 14591 ;; *************** function _TMR0_SetInterruptHandler *****************
 14592 ;; Defined at:
 14593 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14596 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;		None
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1    wreg      void 
 14601 ;; Registers used:
 14602 ;;		wreg
 14603 ;; Tracked objects:
 14604 ;;		On entry : 0/0
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14612 ;;Total ram usage:        2 bytes
 14613 ;; Hardware stack levels used:    1
 14614 ;; Hardware stack levels required when called:    6
 14615 ;; This function calls:
 14616 ;;		Nothing
 14617 ;; This function is called by:
 14618 ;;		_main
 14619 ;;		_TMR0_Initialize
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           
 14624                           ;psect for function _TMR0_SetInterruptHandler
 14625  0B68                     _TMR0_SetInterruptHandler:	
 14626  0B68                     l5891:	
 14627                           ;incstack = 0
 14628                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 14629                           
 14630                           
 14631                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 14632  0B68  0020               	movlb	0	; select bank0
 14633  0B69  0848               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 14634  0B6A  0021               	movlb	1	; select bank1
 14635  0B6B  00C9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 14636  0B6C  0020               	movlb	0	; select bank0
 14637  0B6D  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 14638  0B6E  0021               	movlb	1	; select bank1
 14639  0B6F  00C8               	movwf	_TMR0_InterruptHandler^(0+128)
 14640  0B70                     l1628:	
 14641  0B70  0008               	return
 14642  0B71                     __end_of_TMR0_SetInterruptHandler:	
 14643                           
 14644                           	psect	text33
 14645  0BE1                     __ptext33:	
 14646 ;; *************** function _PWM6_Initialize *****************
 14647 ;; Defined at:
 14648 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;		None
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;		None
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      void 
 14655 ;; Registers used:
 14656 ;;		wreg, status,2, status,0
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;Total ram usage:        0 bytes
 14667 ;; Hardware stack levels used:    1
 14668 ;; Hardware stack levels required when called:    6
 14669 ;; This function calls:
 14670 ;;		Nothing
 14671 ;; This function is called by:
 14672 ;;		_SYSTEM_Initialize
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           
 14677                           ;psect for function _PWM6_Initialize
 14678  0BE1                     _PWM6_Initialize:	
 14679  0BE1                     l6035:	
 14680                           ;incstack = 0
 14681                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 14682                           
 14683                           
 14684                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14685  0BE1  3080               	movlw	128
 14686  0BE2  0027               	movlb	7	; select bank7
 14687  0BE3  008E               	movwf	14	;volatile
 14688                           
 14689                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 14690  0BE4  303E               	movlw	62
 14691  0BE5  008D               	movwf	13	;volatile
 14692                           
 14693                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14694  0BE6  3040               	movlw	64
 14695  0BE7  008C               	movwf	12	;volatile
 14696  0BE8                     l6037:	
 14697                           
 14698                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14699  0BE8  0024               	movlb	4	; select bank4
 14700  0BE9  081F               	movf	31,w	;volatile
 14701  0BEA  39F3               	andlw	-13
 14702  0BEB  3804               	iorlw	4
 14703  0BEC  009F               	movwf	31	;volatile
 14704  0BED                     l913:	
 14705  0BED  0008               	return
 14706  0BEE                     __end_of_PWM6_Initialize:	
 14707                           
 14708                           	psect	text34
 14709  0B45                     __ptext34:	
 14710 ;; *************** function _PMD_Initialize *****************
 14711 ;; Defined at:
 14712 ;;		line 77 in file "mcc_generated_files/mcc.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;		None
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;		None
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  1    wreg      void 
 14719 ;; Registers used:
 14720 ;;		status,2
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;Total ram usage:        0 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:    6
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_SYSTEM_Initialize
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           
 14741                           ;psect for function _PMD_Initialize
 14742  0B45                     _PMD_Initialize:	
 14743  0B45                     l5971:	
 14744                           ;incstack = 0
 14745                           ; Regs used in _PMD_Initialize: [status,2]
 14746                           
 14747                           
 14748                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 14749  0B45  002F               	movlb	15	; select bank15
 14750  0B46  0196               	clrf	22	;volatile
 14751                           
 14752                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 14753  0B47  0197               	clrf	23	;volatile
 14754                           
 14755                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 14756  0B48  0198               	clrf	24	;volatile
 14757                           
 14758                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 14759  0B49  0199               	clrf	25	;volatile
 14760                           
 14761                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 14762  0B4A  019A               	clrf	26	;volatile
 14763                           
 14764                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 14765  0B4B  019B               	clrf	27	;volatile
 14766  0B4C                     l445:	
 14767  0B4C  0008               	return
 14768  0B4D                     __end_of_PMD_Initialize:	
 14769                           
 14770                           	psect	text35
 14771  0761                     __ptext35:	
 14772 ;; *************** function _PIN_MANAGER_Initialize *****************
 14773 ;; Defined at:
 14774 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;		None
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      void 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14792 ;;Total ram usage:        0 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    6
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_SYSTEM_Initialize
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           
 14803                           ;psect for function _PIN_MANAGER_Initialize
 14804  0761                     _PIN_MANAGER_Initialize:	
 14805  0761                     l5973:	
 14806                           ;incstack = 0
 14807                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14808                           
 14809                           
 14810                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14811  0761  0020               	movlb	0	; select bank0
 14812  0762  019A               	clrf	26	;volatile
 14813                           
 14814                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14815  0763  0199               	clrf	25	;volatile
 14816                           
 14817                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 14818  0764  0196               	clrf	22	;volatile
 14819                           
 14820                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14821  0765  0197               	clrf	23	;volatile
 14822                           
 14823                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14824  0766  0198               	clrf	24	;volatile
 14825  0767                     l5975:	
 14826                           
 14827                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14828  0767  3007               	movlw	7
 14829  0768  0095               	movwf	21	;volatile
 14830  0769                     l5977:	
 14831                           
 14832                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 14833  0769  300F               	movlw	15
 14834  076A  0091               	movwf	17	;volatile
 14835  076B                     l5979:	
 14836                           
 14837                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 14838  076B  30FF               	movlw	255
 14839  076C  0092               	movwf	18	;volatile
 14840  076D                     l5981:	
 14841                           
 14842                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14843  076D  30FF               	movlw	255
 14844  076E  0093               	movwf	19	;volatile
 14845  076F                     l5983:	
 14846                           
 14847                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14848  076F  30FF               	movlw	255
 14849  0770  0094               	movwf	20	;volatile
 14850  0771                     l5985:	
 14851                           
 14852                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 14853  0771  30FF               	movlw	255
 14854  0772  003E               	movlb	30	; select bank30
 14855  0773  00D9               	movwf	89	;volatile
 14856  0774                     l5987:	
 14857                           
 14858                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 14859  0774  30C7               	movlw	199
 14860  0775  00CE               	movwf	78	;volatile
 14861  0776                     l5989:	
 14862                           
 14863                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 14864  0776  30EF               	movlw	239
 14865  0777  00C3               	movwf	67	;volatile
 14866  0778                     l5991:	
 14867                           
 14868                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14869  0778  3007               	movlw	7
 14870  0779  00E4               	movwf	100	;volatile
 14871  077A                     l5993:	
 14872                           
 14873                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 14874  077A  30FF               	movlw	255
 14875  077B  00B8               	movwf	56	;volatile
 14876                           
 14877                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14878  077C  01DA               	clrf	90	;volatile
 14879                           
 14880                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14881  077D  01E5               	clrf	101	;volatile
 14882                           
 14883                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14884  077E  01C4               	clrf	68	;volatile
 14885                           
 14886                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14887  077F  01B9               	clrf	57	;volatile
 14888                           
 14889                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14890  0780  01CF               	clrf	79	;volatile
 14891                           
 14892                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 14893  0781  01E6               	clrf	102	;volatile
 14894                           
 14895                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 14896  0782  01BA               	clrf	58	;volatile
 14897                           
 14898                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 14899  0783  01C5               	clrf	69	;volatile
 14900                           
 14901                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 14902  0784  01D0               	clrf	80	;volatile
 14903                           
 14904                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 14905  0785  01DB               	clrf	91	;volatile
 14906  0786                     l5995:	
 14907                           
 14908                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 14909  0786  30FF               	movlw	255
 14910  0787  00BB               	movwf	59	;volatile
 14911  0788                     l5997:	
 14912                           
 14913                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 14914  0788  30FF               	movlw	255
 14915  0789  00C6               	movwf	70	;volatile
 14916  078A                     l5999:	
 14917                           
 14918                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 14919  078A  30FF               	movlw	255
 14920  078B  00D1               	movwf	81	;volatile
 14921  078C                     l6001:	
 14922                           
 14923                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 14924  078C  30FF               	movlw	255
 14925  078D  00DC               	movwf	92	;volatile
 14926  078E                     l6003:	
 14927                           
 14928                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 14929  078E  3007               	movlw	7
 14930  078F  00E7               	movwf	103	;volatile
 14931  0790                     l6005:	
 14932                           
 14933                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 14934  0790  30FF               	movlw	255
 14935  0791  00BC               	movwf	60	;volatile
 14936  0792                     l6007:	
 14937                           
 14938                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 14939  0792  30FF               	movlw	255
 14940  0793  00C7               	movwf	71	;volatile
 14941  0794                     l6009:	
 14942                           
 14943                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 14944  0794  30FF               	movlw	255
 14945  0795  00D2               	movwf	82	;volatile
 14946  0796                     l6011:	
 14947                           
 14948                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 14949  0796  30FF               	movlw	255
 14950  0797  00DD               	movwf	93	;volatile
 14951  0798                     l6013:	
 14952                           
 14953                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 14954  0798  3007               	movlw	7
 14955  0799  00E8               	movwf	104	;volatile
 14956  079A                     l6015:	
 14957                           
 14958                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 14959  079A  300C               	movlw	12
 14960  079B  003D               	movlb	29	; select bank29
 14961  079C  0090               	movwf	16	;volatile
 14962  079D                     l6017:	
 14963                           
 14964                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 14965  079D  3013               	movlw	19
 14966  079E  00C5               	movwf	69	;volatile
 14967  079F                     l6019:	
 14968                           
 14969                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 14970  079F  3014               	movlw	20
 14971  07A0  003E               	movlb	30	; select bank30
 14972  07A1  00A3               	movwf	35	;volatile
 14973  07A2                     l6021:	
 14974                           
 14975                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 14976  07A2  3015               	movlw	21
 14977  07A3  00A4               	movwf	36	;volatile
 14978  07A4                     l6023:	
 14979                           
 14980                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 14981  07A4  300E               	movlw	14
 14982  07A5  0096               	movwf	22	;volatile
 14983  07A6                     l6025:	
 14984                           
 14985                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 14986  07A6  3014               	movlw	20
 14987  07A7  003D               	movlb	29	; select bank29
 14988  07A8  00C6               	movwf	70	;volatile
 14989  07A9                     l530:	
 14990  07A9  0008               	return
 14991  07AA                     __end_of_PIN_MANAGER_Initialize:	
 14992                           
 14993                           	psect	text36
 14994  0B5F                     __ptext36:	
 14995 ;; *************** function _OSCILLATOR_Initialize *****************
 14996 ;; Defined at:
 14997 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;		None
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;		None
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      void 
 15004 ;; Registers used:
 15005 ;;		wreg, status,2
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;Total ram usage:        0 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:    6
 15018 ;; This function calls:
 15019 ;;		Nothing
 15020 ;; This function is called by:
 15021 ;;		_SYSTEM_Initialize
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           
 15026                           ;psect for function _OSCILLATOR_Initialize
 15027  0B5F                     _OSCILLATOR_Initialize:	
 15028  0B5F                     l6027:	
 15029                           ;incstack = 0
 15030                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15031                           
 15032                           
 15033                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 15034  0B5F  3062               	movlw	98
 15035  0B60  0031               	movlb	17	; select bank17
 15036  0B61  008D               	movwf	13	;volatile
 15037  0B62                     l6029:	
 15038                           
 15039                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 15040  0B62  018F               	clrf	15	;volatile
 15041  0B63                     l6031:	
 15042                           
 15043                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 15044  0B63  0191               	clrf	17	;volatile
 15045                           
 15046                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 15047  0B64  3002               	movlw	2
 15048  0B65  0093               	movwf	19	;volatile
 15049  0B66                     l6033:	
 15050                           
 15051                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 15052  0B66  0192               	clrf	18	;volatile
 15053  0B67                     l442:	
 15054  0B67  0008               	return
 15055  0B68                     __end_of_OSCILLATOR_Initialize:	
 15056                           
 15057                           	psect	text37
 15058  0BEE                     __ptext37:	
 15059 ;; *************** function _EXT_INT_Initialize *****************
 15060 ;; Defined at:
 15061 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15062 ;; Parameters:    Size  Location     Type
 15063 ;;		None
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;		None
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  1    wreg      void 
 15068 ;; Registers used:
 15069 ;;		wreg, status,2, status,0, pclath, cstack
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 0/0
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;Total ram usage:        0 bytes
 15080 ;; Hardware stack levels used:    1
 15081 ;; Hardware stack levels required when called:    7
 15082 ;; This function calls:
 15083 ;;		_INT_SetInterruptHandler
 15084 ;; This function is called by:
 15085 ;;		_SYSTEM_Initialize
 15086 ;; This function uses a non-reentrant model
 15087 ;;
 15088                           
 15089                           
 15090                           ;psect for function _EXT_INT_Initialize
 15091  0BEE                     _EXT_INT_Initialize:	
 15092  0BEE                     l5965:	
 15093                           ;incstack = 0
 15094                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15095                           
 15096                           
 15097                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 15098  0BEE  002E               	movlb	14	; select bank14
 15099  0BEF  100C               	bcf	12,0	;volatile
 15100                           
 15101                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 15102  0BF0  140B               	bsf	11,0	;volatile
 15103  0BF1                     l5967:	
 15104                           
 15105                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 15106  0BF1  3095               	movlw	low _INT_DefaultInterruptHandler
 15107  0BF2  0020               	movlb	0	; select bank0
 15108  0BF3  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 15109  0BF4  300A               	movlw	high _INT_DefaultInterruptHandler
 15110  0BF5  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 15111  0BF6  318A  22F8  318B   	fcall	_INT_SetInterruptHandler
 15112  0BF9                     l5969:	
 15113                           
 15114                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 15115  0BF9  002E               	movlb	14	; select bank14
 15116  0BFA  1416               	bsf	22,0	;volatile
 15117  0BFB                     l347:	
 15118  0BFB  0008               	return
 15119  0BFC                     __end_of_EXT_INT_Initialize:	
 15120                           
 15121                           	psect	text38
 15122  0AF8                     __ptext38:	
 15123 ;; *************** function _INT_SetInterruptHandler *****************
 15124 ;; Defined at:
 15125 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15128 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;		None
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      void 
 15133 ;; Registers used:
 15134 ;;		wreg
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;Total ram usage:        2 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    6
 15147 ;; This function calls:
 15148 ;;		Nothing
 15149 ;; This function is called by:
 15150 ;;		_EXT_INT_Initialize
 15151 ;;		_main
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155                           
 15156                           ;psect for function _INT_SetInterruptHandler
 15157  0AF8                     _INT_SetInterruptHandler:	
 15158  0AF8                     l5865:	
 15159                           ;incstack = 0
 15160                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 15161                           
 15162                           
 15163                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 15164  0AF8  0020               	movlb	0	; select bank0
 15165  0AF9  0848               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 15166  0AFA  00E9               	movwf	_INT_InterruptHandler+1
 15167  0AFB  0847               	movf	INT_SetInterruptHandler@InterruptHandler,w
 15168  0AFC  00E8               	movwf	_INT_InterruptHandler
 15169  0AFD                     l341:	
 15170  0AFD  0008               	return
 15171  0AFE                     __end_of_INT_SetInterruptHandler:	
 15172                           
 15173                           	psect	text39
 15174  0CBA                     __ptext39:	
 15175 ;; *************** function _ADCC_Initialize *****************
 15176 ;; Defined at:
 15177 ;;		line 63 in file "mcc_generated_files/adcc.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:    6
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_SYSTEM_Initialize
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           
 15206                           ;psect for function _ADCC_Initialize
 15207  0CBA                     _ADCC_Initialize:	
 15208  0CBA                     l6039:	
 15209                           ;incstack = 0
 15210                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 15211                           
 15212                           
 15213                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 15214  0CBA  0022               	movlb	2	; select bank2
 15215  0CBB  018E               	clrf	14	;volatile
 15216                           
 15217                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 15218  0CBC  018F               	clrf	15	;volatile
 15219                           
 15220                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 15221  0CBD  0190               	clrf	16	;volatile
 15222                           
 15223                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 15224  0CBE  0191               	clrf	17	;volatile
 15225                           
 15226                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 15227  0CBF  0192               	clrf	18	;volatile
 15228                           
 15229                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 15230  0CC0  0193               	clrf	19	;volatile
 15231                           
 15232                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 15233  0CC1  018D               	clrf	13	;volatile
 15234                           
 15235                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 15236  0CC2  0021               	movlb	1	; select bank1
 15237  0CC3  019E               	clrf	30	;volatile
 15238                           
 15239                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 15240  0CC4  019B               	clrf	27	;volatile
 15241                           
 15242                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 15243  0CC5  0194               	clrf	20	;volatile
 15244                           
 15245                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 15246  0CC6  0195               	clrf	21	;volatile
 15247                           
 15248                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 15249  0CC7  0196               	clrf	22	;volatile
 15250                           
 15251                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 15252  0CC8  0197               	clrf	23	;volatile
 15253                           
 15254                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 15255  0CC9  019A               	clrf	26	;volatile
 15256                           
 15257                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 15258  0CCA  0199               	clrf	25	;volatile
 15259                           
 15260                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 15261  0CCB  0198               	clrf	24	;volatile
 15262  0CCC                     l6041:	
 15263                           
 15264                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 15265  0CCC  3084               	movlw	132
 15266  0CCD  0093               	movwf	19	;volatile
 15267  0CCE                     l6043:	
 15268                           
 15269                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 15270  0CCE  019D               	clrf	29	;volatile
 15271  0CCF                     l757:	
 15272  0CCF  0008               	return
 15273  0CD0                     __end_of_ADCC_Initialize:	
 15274                           
 15275                           	psect	text40
 15276  0D79                     __ptext40:	
 15277 ;; *************** function _LED_bin *****************
 15278 ;; Defined at:
 15279 ;;		line 446 in file "main.c"
 15280 ;; Parameters:    Size  Location     Type
 15281 ;;  value           2    3[BANK0 ] unsigned int 
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;		None
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  1    wreg      void 
 15286 ;; Registers used:
 15287 ;;		wreg, status,2, status,0
 15288 ;; Tracked objects:
 15289 ;;		On entry : 0/0
 15290 ;;		On exit  : 0/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;Total ram usage:        5 bytes
 15298 ;; Hardware stack levels used:    1
 15299 ;; Hardware stack levels required when called:    6
 15300 ;; This function calls:
 15301 ;;		Nothing
 15302 ;; This function is called by:
 15303 ;;		_main
 15304 ;; This function uses a non-reentrant model
 15305 ;;
 15306                           
 15307                           
 15308                           ;psect for function _LED_bin
 15309  0D79                     _LED_bin:	
 15310  0D79                     l6331:	
 15311                           ;incstack = 0
 15312                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 15313                           
 15314                           
 15315                           ;main.c: 448:     LATAbits.LATA4 = (value & 1);
 15316  0D79  0020               	movlb	0	; select bank0
 15317  0D7A  0847               	movf	LED_bin@value,w
 15318  0D7B  3901               	andlw	1
 15319  0D7C  00C9               	movwf	??_LED_bin
 15320  0D7D  0EC9               	swapf	??_LED_bin,f
 15321  0D7E  0816               	movf	22,w	;volatile
 15322  0D7F  0649               	xorwf	??_LED_bin,w
 15323  0D80  39EF               	andlw	-17
 15324  0D81  0649               	xorwf	??_LED_bin,w
 15325  0D82  0096               	movwf	22	;volatile
 15326                           
 15327                           ;main.c: 449:     LATAbits.LATA5 = (value >>1);
 15328  0D83  0848               	movf	LED_bin@value+1,w
 15329  0D84  00CA               	movwf	??_LED_bin+1
 15330  0D85  0847               	movf	LED_bin@value,w
 15331  0D86  00C9               	movwf	??_LED_bin
 15332  0D87  36CA               	lsrf	??_LED_bin+1,f
 15333  0D88  0CC9               	rrf	??_LED_bin,f
 15334  0D89  0849               	movf	??_LED_bin,w
 15335  0D8A  00CB               	movwf	??_LED_bin+2
 15336  0D8B  0ECB               	swapf	??_LED_bin+2,f
 15337  0D8C  0DCB               	rlf	??_LED_bin+2,f
 15338  0D8D  0816               	movf	22,w	;volatile
 15339  0D8E  064B               	xorwf	??_LED_bin+2,w
 15340  0D8F  39DF               	andlw	-33
 15341  0D90  064B               	xorwf	??_LED_bin+2,w
 15342  0D91  0096               	movwf	22	;volatile
 15343  0D92                     l1307:	
 15344  0D92  0008               	return
 15345  0D93                     __end_of_LED_bin:	
 15346                           
 15347                           	psect	text41
 15348  0B7A                     __ptext41:	
 15349 ;; *************** function _I2C_Initialize *****************
 15350 ;; Defined at:
 15351 ;;		line 5 in file "I2C/i2c.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		wreg, status,2, status,0, pclath, cstack
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;Total ram usage:        0 bytes
 15370 ;; Hardware stack levels used:    1
 15371 ;; Hardware stack levels required when called:    7
 15372 ;; This function calls:
 15373 ;;		_i2c1_driver_open
 15374 ;; This function is called by:
 15375 ;;		_main
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           
 15380                           ;psect for function _I2C_Initialize
 15381  0B7A                     _I2C_Initialize:	
 15382  0B7A                     l6293:	
 15383                           ;incstack = 0
 15384                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15385                           
 15386                           
 15387                           ;I2C/i2c.c: 7:     i2c1_driver_open();
 15388  0B7A  318B  23BB  318B   	fcall	_i2c1_driver_open
 15389  0B7D                     l6295:	
 15390                           
 15391                           ;I2C/i2c.c: 8:     TRISCbits.TRISC3 = 1;
 15392  0B7D  0020               	movlb	0	; select bank0
 15393  0B7E  1593               	bsf	19,3	;volatile
 15394  0B7F                     l6297:	
 15395                           
 15396                           ;I2C/i2c.c: 9:     TRISCbits.TRISC4 = 1;
 15397  0B7F  1613               	bsf	19,4	;volatile
 15398  0B80                     l6299:	
 15399                           
 15400                           ;I2C/i2c.c: 10:     WPUC3 = 1;
 15401  0B80  003E               	movlb	30	; select bank30
 15402  0B81  15CF               	bsf	79,3	;volatile
 15403  0B82                     l6301:	
 15404                           
 15405                           ;I2C/i2c.c: 11:     WPUC4 = 1;
 15406  0B82  164F               	bsf	79,4	;volatile
 15407  0B83                     l1413:	
 15408  0B83  0008               	return
 15409  0B84                     __end_of_I2C_Initialize:	
 15410                           
 15411                           	psect	text42
 15412  0BBB                     __ptext42:	
 15413 ;; *************** function _i2c1_driver_open *****************
 15414 ;; Defined at:
 15415 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;		None
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;		None
 15420 ;; Return value:  Size  Location     Type
 15421 ;;		None               void
 15422 ;; Registers used:
 15423 ;;		wreg, status,2
 15424 ;; Tracked objects:
 15425 ;;		On entry : 0/0
 15426 ;;		On exit  : 0/0
 15427 ;;		Unchanged: 0/0
 15428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;Total ram usage:        0 bytes
 15434 ;; Hardware stack levels used:    1
 15435 ;; Hardware stack levels required when called:    6
 15436 ;; This function calls:
 15437 ;;		Nothing
 15438 ;; This function is called by:
 15439 ;;		_main
 15440 ;;		_I2C_Initialize
 15441 ;;		_i2c_open
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           
 15446                           ;psect for function _i2c1_driver_open
 15447  0BBB                     _i2c1_driver_open:	
 15448  0BBB                     l5953:	
 15449                           ;incstack = 0
 15450                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 15451                           
 15452  0BBB  0023               	movlb	3	; select bank3
 15453  0BBC  1A90               	btfsc	16,5	;volatile
 15454  0BBD  2BBF               	goto	u3351
 15455  0BBE  2BC0               	goto	u3350
 15456  0BBF                     u3351:	
 15457  0BBF  2BC6               	goto	l594
 15458  0BC0                     u3350:	
 15459  0BC0                     l5955:	
 15460  0BC0  018F               	clrf	15	;volatile
 15461  0BC1                     l5957:	
 15462  0BC1  3028               	movlw	40
 15463  0BC2  0090               	movwf	16	;volatile
 15464  0BC3                     l5959:	
 15465  0BC3  0191               	clrf	17	;volatile
 15466  0BC4  3003               	movlw	3
 15467  0BC5  008D               	movwf	13	;volatile
 15468  0BC6                     l594:	
 15469  0BC6  0008               	return
 15470  0BC7                     __end_of_i2c1_driver_open:	
 15471                           
 15472                           	psect	text43
 15473  0D5F                     __ptext43:	
 15474 ;; *************** function _ADC_read *****************
 15475 ;; Defined at:
 15476 ;;		line 459 in file "main.c"
 15477 ;; Parameters:    Size  Location     Type
 15478 ;;		None
 15479 ;; Auto vars:     Size  Location     Type
 15480 ;;		None
 15481 ;; Return value:  Size  Location     Type
 15482 ;;                  2    5[BANK0 ] unsigned int 
 15483 ;; Registers used:
 15484 ;;		wreg, status,2, status,0, pclath, cstack
 15485 ;; Tracked objects:
 15486 ;;		On entry : 0/0
 15487 ;;		On exit  : 0/0
 15488 ;;		Unchanged: 0/0
 15489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15494 ;;Total ram usage:        2 bytes
 15495 ;; Hardware stack levels used:    1
 15496 ;; Hardware stack levels required when called:    7
 15497 ;; This function calls:
 15498 ;;		_ADCC_GetConversionResult
 15499 ;;		_ADCC_IsConversionDone
 15500 ;;		_ADCC_StartConversion
 15501 ;; This function is called by:
 15502 ;;		_main
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           
 15507                           ;psect for function _ADC_read
 15508  0D5F                     _ADC_read:	
 15509  0D5F                     l6321:	
 15510                           ;incstack = 0
 15511                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 15512                           
 15513                           
 15514                           ;main.c: 461:     ADCC_StartConversion(channel_ANA0);
 15515  0D5F  3000               	movlw	0
 15516  0D60  318B  233D  318D   	fcall	_ADCC_StartConversion
 15517                           
 15518                           ;main.c: 462:     while(!ADCC_IsConversionDone()){
 15519  0D63  2D68               	goto	l6325
 15520  0D64                     l6323:	
 15521                           
 15522                           ;main.c: 463:         _delay((unsigned long)((1)*(1000000/4000.0)));
 15523  0D64  3053               	movlw	83
 15524  0D65                     u4437:	
 15525  0D65  0B89               	decfsz	9,f
 15526  0D66  2D65               	goto	u4437
 15527  0D67  0000               	nop
 15528  0D68                     l6325:	
 15529                           
 15530                           ;main.c: 462:     while(!ADCC_IsConversionDone()){
 15531  0D68  318B  2317  318D   	fcall	_ADCC_IsConversionDone
 15532  0D6B  3A00               	xorlw	0
 15533  0D6C  1903               	skipnz
 15534  0D6D  2D6F               	goto	u3591
 15535  0D6E  2D70               	goto	u3590
 15536  0D6F                     u3591:	
 15537  0D6F  2D64               	goto	l6323
 15538  0D70                     u3590:	
 15539  0D70                     l6327:	
 15540                           
 15541                           ;main.c: 466:     return ADCC_GetConversionResult();
 15542  0D70  318B  2356  318D   	fcall	_ADCC_GetConversionResult
 15543  0D73  0020               	movlb	0	; select bank0
 15544  0D74  0848               	movf	?_ADCC_GetConversionResult+1,w
 15545  0D75  00CA               	movwf	?_ADC_read+1
 15546  0D76  0847               	movf	?_ADCC_GetConversionResult,w
 15547  0D77  00C9               	movwf	?_ADC_read
 15548  0D78                     l1313:	
 15549  0D78  0008               	return
 15550  0D79                     __end_of_ADC_read:	
 15551                           
 15552                           	psect	text44
 15553  0B3D                     __ptext44:	
 15554 ;; *************** function _ADCC_StartConversion *****************
 15555 ;; Defined at:
 15556 ;;		line 106 in file "mcc_generated_files/adcc.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;  channel         1    wreg     enum E12246
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;  channel         1    3[BANK0 ] enum E12246
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15573 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15574 ;;Total ram usage:        1 bytes
 15575 ;; Hardware stack levels used:    1
 15576 ;; Hardware stack levels required when called:    6
 15577 ;; This function calls:
 15578 ;;		Nothing
 15579 ;; This function is called by:
 15580 ;;		_ADC_read
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           
 15585                           ;psect for function _ADCC_StartConversion
 15586  0B3D                     _ADCC_StartConversion:	
 15587                           
 15588                           ;incstack = 0
 15589                           ; Regs used in _ADCC_StartConversion: [wreg]
 15590                           ;ADCC_StartConversion@channel stored from wreg
 15591  0B3D  0020               	movlb	0	; select bank0
 15592  0B3E  00C7               	movwf	ADCC_StartConversion@channel
 15593  0B3F                     l6089:	
 15594                           
 15595                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 15596  0B3F  0847               	movf	ADCC_StartConversion@channel,w
 15597  0B40  0021               	movlb	1	; select bank1
 15598  0B41  009E               	movwf	30	;volatile
 15599  0B42                     l6091:	
 15600                           
 15601                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 15602  0B42  1793               	bsf	19,7	;volatile
 15603  0B43                     l6093:	
 15604                           
 15605                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 15606  0B43  1413               	bsf	19,0	;volatile
 15607  0B44                     l760:	
 15608  0B44  0008               	return
 15609  0B45                     __end_of_ADCC_StartConversion:	
 15610                           
 15611                           	psect	text45
 15612  0B17                     __ptext45:	
 15613 ;; *************** function _ADCC_IsConversionDone *****************
 15614 ;; Defined at:
 15615 ;;		line 118 in file "mcc_generated_files/adcc.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;		None
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;		None
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1    wreg      _Bool 
 15622 ;; Registers used:
 15623 ;;		wreg, status,0
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;Total ram usage:        0 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:    6
 15636 ;; This function calls:
 15637 ;;		Nothing
 15638 ;; This function is called by:
 15639 ;;		_ADC_read
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           
 15644                           ;psect for function _ADCC_IsConversionDone
 15645  0B17                     _ADCC_IsConversionDone:	
 15646  0B17                     l6095:	
 15647                           ;incstack = 0
 15648                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 15649                           
 15650                           
 15651                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 15652  0B17  1003               	clrc
 15653  0B18  0021               	movlb	1	; select bank1
 15654  0B19  1C13               	btfss	19,0	;volatile
 15655  0B1A  1403               	setc
 15656  0B1B  3000               	movlw	0
 15657  0B1C  3D09               	addwfc	9,w
 15658  0B1D                     l763:	
 15659  0B1D  0008               	return
 15660  0B1E                     __end_of_ADCC_IsConversionDone:	
 15661                           
 15662                           	psect	text46
 15663  0B56                     __ptext46:	
 15664 ;; *************** function _ADCC_GetConversionResult *****************
 15665 ;; Defined at:
 15666 ;;		line 124 in file "mcc_generated_files/adcc.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;		None
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  2    3[BANK0 ] unsigned short 
 15673 ;; Registers used:
 15674 ;;		wreg
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/0
 15677 ;;		On exit  : 0/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;Total ram usage:        2 bytes
 15685 ;; Hardware stack levels used:    1
 15686 ;; Hardware stack levels required when called:    6
 15687 ;; This function calls:
 15688 ;;		Nothing
 15689 ;; This function is called by:
 15690 ;;		_ADC_read
 15691 ;; This function uses a non-reentrant model
 15692 ;;
 15693                           
 15694                           
 15695                           ;psect for function _ADCC_GetConversionResult
 15696  0B56                     _ADCC_GetConversionResult:	
 15697  0B56                     l6099:	
 15698                           ;incstack = 0
 15699                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 15700                           
 15701                           
 15702                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15703  0B56  0021               	movlb	1	; select bank1
 15704  0B57  080D               	movf	13,w	;volatile
 15705  0B58  0020               	movlb	0	; select bank0
 15706  0B59  00C8               	movwf	?_ADCC_GetConversionResult+1
 15707  0B5A  0021               	movlb	1	; select bank1
 15708  0B5B  080C               	movf	12,w	;volatile
 15709  0B5C  0020               	movlb	0	; select bank0
 15710  0B5D  00C7               	movwf	?_ADCC_GetConversionResult
 15711  0B5E                     l766:	
 15712  0B5E  0008               	return
 15713  0B5F                     __end_of_ADCC_GetConversionResult:	
 15714                           
 15715                           	psect	intentry
 15716  0004                     __pintentry:	
 15717 ;; *************** function _INTERRUPT_InterruptManager *****************
 15718 ;; Defined at:
 15719 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;		None
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;		None
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  1    wreg      void 
 15726 ;; Registers used:
 15727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;Total ram usage:        0 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    5
 15740 ;; This function calls:
 15741 ;;		Absolute function
 15742 ;;		_INT_ISR
 15743 ;;		_TMR0_ISR
 15744 ;;		_TMR1_ISR
 15745 ;;		_TMR2_ISR
 15746 ;;		_i2c_ISR
 15747 ;;		_i2c_busCollisionISR
 15748 ;; This function is called by:
 15749 ;;		Interrupt level 1
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753  0004                     _INTERRUPT_InterruptManager:	
 15754                           
 15755                           ;incstack = 0
 15756  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15757                           
 15758                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15759  0005  3180               	pagesel	$
 15760  0006                     i1l5459:	
 15761                           
 15762                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 15763  0006  002E               	movlb	14	; select bank14
 15764  0007  1C16               	btfss	22,0	;volatile
 15765  0008  280A               	goto	u293_21
 15766  0009  280B               	goto	u293_20
 15767  000A                     u293_21:	
 15768  000A  2813               	goto	i1l378
 15769  000B                     u293_20:	
 15770  000B                     i1l5461:	
 15771  000B  1C0C               	btfss	12,0	;volatile
 15772  000C  280E               	goto	u294_21
 15773  000D  280F               	goto	u294_20
 15774  000E                     u294_21:	
 15775  000E  2813               	goto	i1l378
 15776  000F                     u294_20:	
 15777  000F                     i1l5463:	
 15778                           
 15779                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 15780  000F  318A  22F2  3180   	fcall	_INT_ISR
 15781                           
 15782                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15783  0012  2859               	goto	i1l392
 15784  0013                     i1l378:	
 15785                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 15786                           
 15787  0013  1E96               	btfss	22,5	;volatile
 15788  0014  2816               	goto	u295_21
 15789  0015  2817               	goto	u295_20
 15790  0016                     u295_21:	
 15791  0016  281F               	goto	i1l380
 15792  0017                     u295_20:	
 15793  0017                     i1l5465:	
 15794  0017  1E8C               	btfss	12,5	;volatile
 15795  0018  281A               	goto	u296_21
 15796  0019  281B               	goto	u296_20
 15797  001A                     u296_21:	
 15798  001A  281F               	goto	i1l380
 15799  001B                     u296_20:	
 15800  001B                     i1l5467:	
 15801                           
 15802                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 15803  001B  318B  23FC  3180   	fcall	_TMR0_ISR
 15804                           
 15805                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 15806  001E  2859               	goto	i1l392
 15807  001F                     i1l380:	
 15808                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 15809                           
 15810  001F  1F0B               	btfss	11,6	;volatile
 15811  0020  2822               	goto	u297_21
 15812  0021  2823               	goto	u297_20
 15813  0022                     u297_21:	
 15814  0022  2859               	goto	i1l386
 15815  0023                     u297_20:	
 15816  0023                     i1l5469:	
 15817                           
 15818                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15819  0023  1C1A               	btfss	26,0	;volatile
 15820  0024  2826               	goto	u298_21
 15821  0025  2827               	goto	u298_20
 15822  0026                     u298_21:	
 15823  0026  282F               	goto	i1l383
 15824  0027                     u298_20:	
 15825  0027                     i1l5471:	
 15826  0027  1C10               	btfss	16,0	;volatile
 15827  0028  282A               	goto	u299_21
 15828  0029  282B               	goto	u299_20
 15829  002A                     u299_21:	
 15830  002A  282F               	goto	i1l383
 15831  002B                     u299_20:	
 15832  002B                     i1l5473:	
 15833                           
 15834                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 15835  002B  318C  24E6  3180   	fcall	_TMR1_ISR
 15836                           
 15837                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 15838  002E  2859               	goto	i1l392
 15839  002F                     i1l383:	
 15840                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 15841                           
 15842  002F  1C99               	btfss	25,1	;volatile
 15843  0030  2832               	goto	u300_21
 15844  0031  2833               	goto	u300_20
 15845  0032                     u300_21:	
 15846  0032  283E               	goto	i1l385
 15847  0033                     u300_20:	
 15848  0033                     i1l5475:	
 15849  0033  1C8F               	btfss	15,1	;volatile
 15850  0034  2836               	goto	u301_21
 15851  0035  2837               	goto	u301_20
 15852  0036                     u301_21:	
 15853  0036  283E               	goto	i1l385
 15854  0037                     u301_20:	
 15855  0037                     i1l5477:	
 15856                           
 15857                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_busCollisionISR();
 15858  0037  0020               	movlb	0	; select bank0
 15859  0038  0835               	movf	_i2c1_driver_busCollisionISR+1,w
 15860  0039  008A               	movwf	10
 15861  003A  0834               	movf	_i2c1_driver_busCollisionISR,w
 15862  003B  000A               	callw
 15863  003C  3180               	pagesel	$
 15864                           
 15865                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 15866  003D  2859               	goto	i1l392
 15867  003E                     i1l385:	
 15868                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 15869                           
 15870  003E  1C19               	btfss	25,0	;volatile
 15871  003F  2841               	goto	u302_21
 15872  0040  2842               	goto	u302_20
 15873  0041                     u302_21:	
 15874  0041  284D               	goto	i1l387
 15875  0042                     u302_20:	
 15876  0042                     i1l5479:	
 15877  0042  1C0F               	btfss	15,0	;volatile
 15878  0043  2845               	goto	u303_21
 15879  0044  2846               	goto	u303_20
 15880  0045                     u303_21:	
 15881  0045  284D               	goto	i1l387
 15882  0046                     u303_20:	
 15883  0046                     i1l5481:	
 15884                           
 15885                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_i2cISR();
 15886  0046  0020               	movlb	0	; select bank0
 15887  0047  0833               	movf	_i2c1_driver_i2cISR+1,w
 15888  0048  008A               	movwf	10
 15889  0049  0832               	movf	_i2c1_driver_i2cISR,w
 15890  004A  000A               	callw
 15891  004B  3180               	pagesel	$
 15892                           
 15893                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 15894  004C  2859               	goto	i1l392
 15895  004D                     i1l387:	
 15896                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 15897                           
 15898  004D  1C9A               	btfss	26,1	;volatile
 15899  004E  2850               	goto	u304_21
 15900  004F  2851               	goto	u304_20
 15901  0050                     u304_21:	
 15902  0050  2859               	goto	i1l386
 15903  0051                     u304_20:	
 15904  0051                     i1l5483:	
 15905  0051  1C90               	btfss	16,1	;volatile
 15906  0052  2854               	goto	u305_21
 15907  0053  2855               	goto	u305_20
 15908  0054                     u305_21:	
 15909  0054  2859               	goto	i1l386
 15910  0055                     u305_20:	
 15911  0055                     i1l5485:	
 15912                           
 15913                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 15914  0055  318C  240B  3180   	fcall	_TMR2_ISR
 15915                           
 15916                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 15917  0058  2859               	goto	i1l392
 15918  0059                     i1l386:	
 15919  0059                     i1l392:	
 15920  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15921  005A  0009               	retfie
 15922  005B                     __end_of_INTERRUPT_InterruptManager:	
 15923                           
 15924                           	psect	text48
 15925  0AC1                     __ptext48:	
 15926 ;; *************** function _i2c_busCollisionISR *****************
 15927 ;; Defined at:
 15928 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;		None
 15931 ;; Auto vars:     Size  Location     Type
 15932 ;;		None
 15933 ;; Return value:  Size  Location     Type
 15934 ;;                  1    wreg      void 
 15935 ;; Registers used:
 15936 ;;		status,2, status,0, pclath, cstack
 15937 ;; Tracked objects:
 15938 ;;		On entry : 0/0
 15939 ;;		On exit  : 0/0
 15940 ;;		Unchanged: 0/0
 15941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15946 ;;Total ram usage:        0 bytes
 15947 ;; Hardware stack levels used:    1
 15948 ;; Hardware stack levels required when called:    1
 15949 ;; This function calls:
 15950 ;;		_i2c1_driver_clearBusCollision
 15951 ;; This function is called by:
 15952 ;;		_i2c_open
 15953 ;;		_INTERRUPT_InterruptManager
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           
 15958                           ;psect for function _i2c_busCollisionISR
 15959  0AC1                     _i2c_busCollisionISR:	
 15960  0AC1                     i1l5083:	
 15961                           ;incstack = 0
 15962                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15963                           
 15964                           
 15965                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 15966  0AC1  318A  22B3  318A   	fcall	_i2c1_driver_clearBusCollision
 15967  0AC4                     i1l213:	
 15968  0AC4  0008               	return
 15969  0AC5                     __end_of_i2c_busCollisionISR:	
 15970                           
 15971                           	psect	text49
 15972  0AB3                     __ptext49:	
 15973 ;; *************** function _i2c1_driver_clearBusCollision *****************
 15974 ;; Defined at:
 15975 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;		None
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;		None
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  1    wreg      void 
 15982 ;; Registers used:
 15983 ;;		None
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15993 ;;Total ram usage:        0 bytes
 15994 ;; Hardware stack levels used:    1
 15995 ;; This function calls:
 15996 ;;		Nothing
 15997 ;; This function is called by:
 15998 ;;		_i2c_busCollisionISR
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           
 16003                           ;psect for function _i2c1_driver_clearBusCollision
 16004  0AB3                     _i2c1_driver_clearBusCollision:	
 16005  0AB3                     i1l4687:	
 16006                           ;incstack = 0
 16007                           ; Regs used in _i2c1_driver_clearBusCollision: []
 16008                           
 16009                           
 16010                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 16011  0AB3  002E               	movlb	14	; select bank14
 16012  0AB4  108F               	bcf	15,1	;volatile
 16013  0AB5                     i1l672:	
 16014  0AB5  0008               	return
 16015  0AB6                     __end_of_i2c1_driver_clearBusCollision:	
 16016                           
 16017                           	psect	text50
 16018  0EBF                     __ptext50:	
 16019 ;; *************** function _i2c_ISR *****************
 16020 ;; Defined at:
 16021 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;		None
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1    wreg      void 
 16028 ;; Registers used:
 16029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;Total ram usage:        3 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    4
 16042 ;; This function calls:
 16043 ;;		_do_I2C_DO_ACK
 16044 ;;		_do_I2C_DO_ADDRESS_NACK
 16045 ;;		_do_I2C_DO_NACK_RESTART
 16046 ;;		_do_I2C_DO_NACK_STOP
 16047 ;;		_do_I2C_IDLE
 16048 ;;		_do_I2C_RCEN
 16049 ;;		_do_I2C_RESET
 16050 ;;		_do_I2C_RX
 16051 ;;		_do_I2C_SEND_ADR_READ
 16052 ;;		_do_I2C_SEND_ADR_WRITE
 16053 ;;		_do_I2C_SEND_RESTART
 16054 ;;		_do_I2C_SEND_RESTART_READ
 16055 ;;		_do_I2C_SEND_RESTART_WRITE
 16056 ;;		_do_I2C_SEND_STOP
 16057 ;;		_do_I2C_TX
 16058 ;;		_do_I2C_TX_EMPTY
 16059 ;;		_i2c1_driver_isNACK
 16060 ;;		_mssp1_clearIRQ
 16061 ;; This function is called by:
 16062 ;;		_i2c_open
 16063 ;;		_i2c_poller
 16064 ;;		_INTERRUPT_InterruptManager
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           
 16069                           ;psect for function _i2c_ISR
 16070  0EBF                     _i2c_ISR:	
 16071  0EBF                     i1l5073:	
 16072                           ;incstack = 0
 16073                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16074                           
 16075                           
 16076                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 16077  0EBF  318A  22B0  318E   	fcall	_mssp1_clearIRQ
 16078  0EC2                     i1l5075:	
 16079                           
 16080                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 16081  0EC2  0021               	movlb	1	; select bank1
 16082  0EC3  1DA0               	btfss	_i2c_status^(0+128),3
 16083  0EC4  2EC6               	goto	u228_21
 16084  0EC5  2EC7               	goto	u228_20
 16085  0EC6                     u228_21:	
 16086  0EC6  2ED4               	goto	i1l5081
 16087  0EC7                     u228_20:	
 16088  0EC7                     i1l5077:	
 16089  0EC7  318B  2325  318E   	fcall	_i2c1_driver_isNACK
 16090  0ECA  1C03               	btfss	3,0
 16091  0ECB  2ECD               	goto	u229_21
 16092  0ECC  2ECE               	goto	u229_20
 16093  0ECD                     u229_21:	
 16094  0ECD  2ED4               	goto	i1l5081
 16095  0ECE                     u229_20:	
 16096  0ECE                     i1l5079:	
 16097                           
 16098                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 16099  0ECE  300F               	movlw	15
 16100  0ECF  0020               	movlb	0	; select bank0
 16101  0ED0  00C4               	movwf	??_i2c_ISR
 16102  0ED1  0844               	movf	??_i2c_ISR,w
 16103  0ED2  0021               	movlb	1	; select bank1
 16104  0ED3  00A9               	movwf	(_i2c_status^(0+128)+9)
 16105  0ED4                     i1l5081:	
 16106                           
 16107                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 16108  0ED4  0021               	movlb	1	; select bank1
 16109  0ED5  0829               	movf	(_i2c_status^(0+128)+9),w
 16110  0ED6  0020               	movlb	0	; select bank0
 16111  0ED7  00C4               	movwf	??_i2c_ISR
 16112  0ED8  01C5               	clrf	??_i2c_ISR+1
 16113  0ED9  35C4               	lslf	??_i2c_ISR,f
 16114  0EDA  0DC5               	rlf	??_i2c_ISR+1,f
 16115  0EDB  3000               	movlw	low (_fsmStateTable| (0+32768))
 16116  0EDC  0744               	addwf	??_i2c_ISR,w
 16117  0EDD  0084               	movwf	4
 16118  0EDE  3090               	movlw	high (_fsmStateTable| (0+32768))
 16119  0EDF  3D45               	addwfc	??_i2c_ISR+1,w
 16120  0EE0  0085               	movwf	5
 16121  0EE1  3F01               	moviw [1]fsr0
 16122  0EE2  008A               	movwf	10
 16123  0EE3  3F00               	moviw [0]fsr0
 16124  0EE4  000A               	callw
 16125  0EE5  318E               	pagesel	$
 16126  0EE6  0020               	movlb	0	; select bank0
 16127  0EE7  00C6               	movwf	??_i2c_ISR+2
 16128  0EE8  0846               	movf	??_i2c_ISR+2,w
 16129  0EE9  0021               	movlb	1	; select bank1
 16130  0EEA  00A9               	movwf	(_i2c_status^(0+128)+9)
 16131  0EEB                     i1l210:	
 16132  0EEB  0008               	return
 16133  0EEC                     __end_of_i2c_ISR:	
 16134                           
 16135                           	psect	text51
 16136  0AB0                     __ptext51:	
 16137 ;; *************** function _mssp1_clearIRQ *****************
 16138 ;; Defined at:
 16139 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;		None
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;		None
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  1    wreg      void 
 16146 ;; Registers used:
 16147 ;;		None
 16148 ;; Tracked objects:
 16149 ;;		On entry : 0/0
 16150 ;;		On exit  : 0/0
 16151 ;;		Unchanged: 0/0
 16152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;Total ram usage:        0 bytes
 16158 ;; Hardware stack levels used:    1
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_i2c_ISR
 16163 ;;		_i2c_open
 16164 ;;		_i2c_close
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           
 16169                           ;psect for function _mssp1_clearIRQ
 16170  0AB0                     _mssp1_clearIRQ:	
 16171  0AB0                     i1l4503:	
 16172                           ;incstack = 0
 16173                           ; Regs used in _mssp1_clearIRQ: []
 16174                           
 16175                           
 16176                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 16177  0AB0  002E               	movlb	14	; select bank14
 16178  0AB1  100F               	bcf	15,0	;volatile
 16179  0AB2                     i1l576:	
 16180  0AB2  0008               	return
 16181  0AB3                     __end_of_mssp1_clearIRQ:	
 16182                           
 16183                           	psect	text52
 16184  0717                     __ptext52:	
 16185 ;; *************** function _do_I2C_RX *****************
 16186 ;; Defined at:
 16187 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;		None
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;		None
 16192 ;; Return value:  Size  Location     Type
 16193 ;;                  1    wreg      enum E12722
 16194 ;; Registers used:
 16195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16196 ;; Tracked objects:
 16197 ;;		On entry : 0/0
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;Total ram usage:        3 bytes
 16206 ;; Hardware stack levels used:    1
 16207 ;; Hardware stack levels required when called:    3
 16208 ;; This function calls:
 16209 ;;		Absolute function
 16210 ;;		_do_I2C_DO_NACK_RESTART
 16211 ;;		_do_I2C_DO_NACK_STOP
 16212 ;;		_i2c1_driver_getRXData
 16213 ;;		_i2c1_driver_sendACK
 16214 ;;		_i2c_restartWrite
 16215 ;;		_rd1RegCompleteHandler
 16216 ;;		_rd2RegCompleteHandler
 16217 ;;		_rdBlkRegCompleteHandler
 16218 ;;		_returnReset
 16219 ;;		_returnStop
 16220 ;;		_wr1RegCompleteHandler
 16221 ;;		_wr2RegCompleteHandler
 16222 ;; This function is called by:
 16223 ;;		_i2c_ISR
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           
 16227                           
 16228                           ;psect for function _do_I2C_RX
 16229  0717                     _do_I2C_RX:	
 16230  0717                     i1l4629:	
 16231                           ;incstack = 0
 16232                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16233                           
 16234                           
 16235                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 16236  0717  318A  22AA  3187   	fcall	_i2c1_driver_getRXData
 16237  071A  00FA               	movwf	??_do_I2C_RX
 16238  071B  0021               	movlb	1	; select bank1
 16239  071C  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 16240  071D  0086               	movwf	6
 16241  071E  0187               	clrf	7
 16242  071F  087A               	movf	??_do_I2C_RX,w
 16243  0720  0081               	movwf	1
 16244  0721                     i1l4631:	
 16245  0721  3001               	movlw	1
 16246  0722  00FA               	movwf	??_do_I2C_RX
 16247  0723  087A               	movf	??_do_I2C_RX,w
 16248  0724  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 16249  0725                     i1l4633:	
 16250                           
 16251                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 16252  0725  3001               	movlw	1
 16253  0726  02A3               	subwf	(_i2c_status^(0+128)+3),f
 16254  0727  3000               	movlw	0
 16255  0728  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 16256  0729  0823               	movf	(_i2c_status^(0+128)+3),w
 16257  072A  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 16258  072B  1903               	btfsc	3,2
 16259  072C  2F2E               	goto	u196_21
 16260  072D  2F2F               	goto	u196_20
 16261  072E                     u196_21:	
 16262  072E  2F34               	goto	i1l185
 16263  072F                     u196_20:	
 16264  072F                     i1l4635:	
 16265                           
 16266                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 16267  072F  318A  22B9  3187   	fcall	_i2c1_driver_sendACK
 16268  0732                     i1l4637:	
 16269                           
 16270                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 16271  0732  3005               	movlw	5
 16272  0733  2F60               	goto	i1l186
 16273  0734                     i1l185:	
 16274                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 16275                           
 16276                           
 16277                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 16278  0734  1520               	bsf	_i2c_status^(0+128),2
 16279                           
 16280                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16281  0735  2F3E               	goto	i1l4653
 16282  0736                     i1l4643:	
 16283                           
 16284                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 16285  0736  318A  22ED  3187   	fcall	_do_I2C_DO_NACK_RESTART
 16286  0739  2F60               	goto	i1l186
 16287  073A                     i1l4647:	
 16288                           
 16289                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 16290  073A  318A  22E8  3187   	fcall	_do_I2C_DO_NACK_STOP
 16291  073D  2F60               	goto	i1l186
 16292  073E                     i1l4653:	
 16293  073E  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16294  073F  00FA               	movwf	??_do_I2C_RX
 16295  0740  087A               	movf	??_do_I2C_RX,w
 16296  0741  00F9               	movwf	rdBlkRegCompleteHandler@p
 16297  0742  300B               	movlw	11
 16298  0743  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16299  0744  0086               	movwf	6
 16300  0745  0187               	clrf	7
 16301  0746  3F41               	moviw [1]fsr1
 16302  0747  008A               	movwf	10
 16303  0748  3F40               	moviw [0]fsr1
 16304  0749  000A               	callw
 16305  074A  3187               	pagesel	$
 16306  074B  00FB               	movwf	??_do_I2C_RX+1
 16307  074C  01FC               	clrf	??_do_I2C_RX+2
 16308                           
 16309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16310                           ; Switch size 1, requested type "simple"
 16311                           ; Number of cases is 1, Range of values is 0 to 0
 16312                           ; switch strategies available:
 16313                           ; Name         Instructions Cycles
 16314                           ; simple_byte            4     3 (average)
 16315                           ; direct_byte            8     6 (fixed)
 16316                           ; jumptable            260     6 (fixed)
 16317                           ;	Chosen strategy is simple_byte
 16318  074D  087C               	movf	??_do_I2C_RX+2,w
 16319  074E  3A00               	xorlw	0	; case 0
 16320  074F  1903               	skipnz
 16321  0750  2F52               	goto	i1l6907
 16322  0751  2F3A               	goto	i1l4647
 16323  0752                     i1l6907:	
 16324                           
 16325                           ; Switch size 1, requested type "simple"
 16326                           ; Number of cases is 4, Range of values is 1 to 4
 16327                           ; switch strategies available:
 16328                           ; Name         Instructions Cycles
 16329                           ; simple_byte           13     7 (average)
 16330                           ; direct_byte           17     9 (fixed)
 16331                           ; jumptable            263     9 (fixed)
 16332                           ;	Chosen strategy is simple_byte
 16333  0752  087B               	movf	??_do_I2C_RX+1,w
 16334  0753  3A01               	xorlw	1	; case 1
 16335  0754  1903               	skipnz
 16336  0755  2F3A               	goto	i1l4647
 16337  0756  3A03               	xorlw	3	; case 2
 16338  0757  1903               	skipnz
 16339  0758  2F36               	goto	i1l4643
 16340  0759  3A01               	xorlw	1	; case 3
 16341  075A  1903               	skipnz
 16342  075B  2F36               	goto	i1l4643
 16343  075C  3A07               	xorlw	7	; case 4
 16344  075D  1903               	skipnz
 16345  075E  2F3A               	goto	i1l4647
 16346  075F  2F3A               	goto	i1l4647
 16347  0760                     i1l186:	
 16348  0760  0008               	return
 16349  0761                     __end_of_do_I2C_RX:	
 16350                           
 16351                           	psect	text53
 16352  0676                     __ptext53:	
 16353 ;; *************** function _do_I2C_TX *****************
 16354 ;; Defined at:
 16355 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;		None
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;		None
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1    wreg      enum E12722
 16362 ;; Registers used:
 16363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16364 ;; Tracked objects:
 16365 ;;		On entry : 0/0
 16366 ;;		On exit  : 0/0
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16371 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16373 ;;Total ram usage:        3 bytes
 16374 ;; Hardware stack levels used:    1
 16375 ;; Hardware stack levels required when called:    3
 16376 ;; This function calls:
 16377 ;;		Absolute function
 16378 ;;		_do_I2C_SEND_RESTART_READ
 16379 ;;		_do_I2C_SEND_RESTART_WRITE
 16380 ;;		_do_I2C_SEND_STOP
 16381 ;;		_i2c1_driver_TXData
 16382 ;;		_i2c1_driver_isNACK
 16383 ;;		_i2c_restartWrite
 16384 ;;		_rd1RegCompleteHandler
 16385 ;;		_rd2RegCompleteHandler
 16386 ;;		_rdBlkRegCompleteHandler
 16387 ;;		_returnReset
 16388 ;;		_returnStop
 16389 ;;		_wr1RegCompleteHandler
 16390 ;;		_wr2RegCompleteHandler
 16391 ;; This function is called by:
 16392 ;;		_i2c_ISR
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           
 16397                           ;psect for function _do_I2C_TX
 16398  0676                     _do_I2C_TX:	
 16399  0676                     i1l4595:	
 16400                           ;incstack = 0
 16401                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16402                           
 16403                           
 16404                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 16405  0676  318B  2325  3186   	fcall	_i2c1_driver_isNACK
 16406  0679  1C03               	btfss	3,0
 16407  067A  2E7C               	goto	u194_21
 16408  067B  2E7D               	goto	u194_20
 16409  067C                     u194_21:	
 16410  067C  2EAD               	goto	i1l169
 16411  067D                     u194_20:	
 16412  067D  2E8A               	goto	i1l4613
 16413  067E                     i1l4599:	
 16414                           
 16415                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 16416  067E  318A  22CF  3186   	fcall	_do_I2C_SEND_RESTART_READ
 16417  0681  2EC9               	goto	i1l172
 16418  0682                     i1l4603:	
 16419                           
 16420                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 16421  0682  318A  22D4  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 16422  0685  2EC9               	goto	i1l172
 16423  0686                     i1l4607:	
 16424                           
 16425                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 16426  0686  318A  22DE  3186   	fcall	_do_I2C_SEND_STOP
 16427  0689  2EC9               	goto	i1l172
 16428  068A                     i1l4613:	
 16429  068A  0021               	movlb	1	; select bank1
 16430  068B  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 16431  068C  00FA               	movwf	??_do_I2C_TX
 16432  068D  087A               	movf	??_do_I2C_TX,w
 16433  068E  00F9               	movwf	rdBlkRegCompleteHandler@p
 16434  068F  3011               	movlw	17
 16435  0690  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16436  0691  0086               	movwf	6
 16437  0692  0187               	clrf	7
 16438  0693  3F41               	moviw [1]fsr1
 16439  0694  008A               	movwf	10
 16440  0695  3F40               	moviw [0]fsr1
 16441  0696  000A               	callw
 16442  0697  3186               	pagesel	$
 16443  0698  00FB               	movwf	??_do_I2C_TX+1
 16444  0699  01FC               	clrf	??_do_I2C_TX+2
 16445                           
 16446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16447                           ; Switch size 1, requested type "simple"
 16448                           ; Number of cases is 1, Range of values is 0 to 0
 16449                           ; switch strategies available:
 16450                           ; Name         Instructions Cycles
 16451                           ; simple_byte            4     3 (average)
 16452                           ; direct_byte            8     6 (fixed)
 16453                           ; jumptable            260     6 (fixed)
 16454                           ;	Chosen strategy is simple_byte
 16455  069A  087C               	movf	??_do_I2C_TX+2,w
 16456  069B  3A00               	xorlw	0	; case 0
 16457  069C  1903               	skipnz
 16458  069D  2E9F               	goto	i1l6909
 16459  069E  2E86               	goto	i1l4607
 16460  069F                     i1l6909:	
 16461                           
 16462                           ; Switch size 1, requested type "simple"
 16463                           ; Number of cases is 4, Range of values is 1 to 4
 16464                           ; switch strategies available:
 16465                           ; Name         Instructions Cycles
 16466                           ; simple_byte           13     7 (average)
 16467                           ; direct_byte           17     9 (fixed)
 16468                           ; jumptable            263     9 (fixed)
 16469                           ;	Chosen strategy is simple_byte
 16470  069F  087B               	movf	??_do_I2C_TX+1,w
 16471  06A0  3A01               	xorlw	1	; case 1
 16472  06A1  1903               	skipnz
 16473  06A2  2E86               	goto	i1l4607
 16474  06A3  3A03               	xorlw	3	; case 2
 16475  06A4  1903               	skipnz
 16476  06A5  2E7E               	goto	i1l4599
 16477  06A6  3A01               	xorlw	1	; case 3
 16478  06A7  1903               	skipnz
 16479  06A8  2E82               	goto	i1l4603
 16480  06A9  3A07               	xorlw	7	; case 4
 16481  06AA  1903               	skipnz
 16482  06AB  2E86               	goto	i1l4607
 16483  06AC  2E86               	goto	i1l4607
 16484  06AD                     i1l169:	
 16485                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 16486                           
 16487                           
 16488                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 16489  06AD  0021               	movlb	1	; select bank1
 16490  06AE  11A0               	bcf	_i2c_status^(0+128),3
 16491  06AF                     i1l4615:	
 16492                           
 16493                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 16494  06AF  3002               	movlw	2
 16495  06B0  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16496  06B1  0086               	movwf	6
 16497  06B2  0187               	clrf	7
 16498  06B3  3F40               	moviw [0]fsr1
 16499  06B4  0084               	movwf	4
 16500  06B5  0185               	clrf	5
 16501  06B6  0A81               	incf	1,f
 16502  06B7  0800               	movf	0,w
 16503  06B8  318A  22C5  3186   	fcall	_i2c1_driver_TXData
 16504  06BB                     i1l4617:	
 16505                           
 16506                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 16507  06BB  3001               	movlw	1
 16508  06BC  0021               	movlb	1	; select bank1
 16509  06BD  02A3               	subwf	(_i2c_status^(0+128)+3),f
 16510  06BE  3000               	movlw	0
 16511  06BF  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 16512  06C0  0823               	movf	(_i2c_status^(0+128)+3),w
 16513  06C1  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 16514  06C2  1D03               	btfss	3,2
 16515  06C3  2EC5               	goto	u195_21
 16516  06C4  2EC6               	goto	u195_20
 16517  06C5                     u195_21:	
 16518  06C5  2EC8               	goto	i1l4621
 16519  06C6                     u195_20:	
 16520  06C6                     i1l4619:	
 16521  06C6  3006               	movlw	6
 16522  06C7  2EC9               	goto	i1l172
 16523  06C8                     i1l4621:	
 16524  06C8  3003               	movlw	3
 16525  06C9                     i1l172:	
 16526  06C9  0008               	return
 16527  06CA                     __end_of_do_I2C_TX:	
 16528                           
 16529                           	psect	text54
 16530  0E93                     __ptext54:	
 16531 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 16532 ;; Defined at:
 16533 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;		None
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      enum E12722
 16540 ;; Registers used:
 16541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16549 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;Total ram usage:        3 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; Hardware stack levels required when called:    3
 16554 ;; This function calls:
 16555 ;;		Absolute function
 16556 ;;		_do_I2C_SEND_RESTART
 16557 ;;		_do_I2C_SEND_STOP
 16558 ;;		_i2c_restartWrite
 16559 ;;		_rd1RegCompleteHandler
 16560 ;;		_rd2RegCompleteHandler
 16561 ;;		_rdBlkRegCompleteHandler
 16562 ;;		_returnReset
 16563 ;;		_returnStop
 16564 ;;		_wr1RegCompleteHandler
 16565 ;;		_wr2RegCompleteHandler
 16566 ;; This function is called by:
 16567 ;;		_i2c_ISR
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           
 16572                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16573  0E93                     _do_I2C_DO_ADDRESS_NACK:	
 16574  0E93                     i1l4573:	
 16575                           ;incstack = 0
 16576                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16577                           
 16578                           
 16579                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 16580  0E93  0021               	movlb	1	; select bank1
 16581  0E94  11A0               	bcf	_i2c_status^(0+128),3
 16582  0E95                     i1l4575:	
 16583                           
 16584                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 16585  0E95  3002               	movlw	2
 16586  0E96  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16587  0E97  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16588  0E98  00AA               	movwf	(_i2c_status^(0+128)+10)
 16589                           
 16590                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 16591  0E99  2EA2               	goto	i1l4587
 16592  0E9A                     i1l4577:	
 16593                           
 16594                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 16595  0E9A  318A  22D9  318E   	fcall	_do_I2C_SEND_RESTART
 16596  0E9D  2EBE               	goto	i1l164
 16597  0E9E                     i1l4581:	
 16598                           
 16599                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 16600  0E9E  318A  22DE  318E   	fcall	_do_I2C_SEND_STOP
 16601  0EA1  2EBE               	goto	i1l164
 16602  0EA2                     i1l4587:	
 16603  0EA2  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 16604  0EA3  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16605  0EA4  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16606  0EA5  00F9               	movwf	rdBlkRegCompleteHandler@p
 16607  0EA6  300F               	movlw	15
 16608  0EA7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16609  0EA8  0086               	movwf	6
 16610  0EA9  0187               	clrf	7
 16611  0EAA  3F41               	moviw [1]fsr1
 16612  0EAB  008A               	movwf	10
 16613  0EAC  3F40               	moviw [0]fsr1
 16614  0EAD  000A               	callw
 16615  0EAE  318E               	pagesel	$
 16616  0EAF  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 16617  0EB0  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 16618                           
 16619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16620                           ; Switch size 1, requested type "simple"
 16621                           ; Number of cases is 1, Range of values is 0 to 0
 16622                           ; switch strategies available:
 16623                           ; Name         Instructions Cycles
 16624                           ; simple_byte            4     3 (average)
 16625                           ; direct_byte            8     6 (fixed)
 16626                           ; jumptable            260     6 (fixed)
 16627                           ;	Chosen strategy is simple_byte
 16628  0EB1  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 16629  0EB2  3A00               	xorlw	0	; case 0
 16630  0EB3  1903               	skipnz
 16631  0EB4  2EB6               	goto	i1l6911
 16632  0EB5  2E9E               	goto	i1l4581
 16633  0EB6                     i1l6911:	
 16634                           
 16635                           ; Switch size 1, requested type "simple"
 16636                           ; Number of cases is 2, Range of values is 2 to 3
 16637                           ; switch strategies available:
 16638                           ; Name         Instructions Cycles
 16639                           ; simple_byte            7     4 (average)
 16640                           ; direct_byte           13     9 (fixed)
 16641                           ; jumptable            263     9 (fixed)
 16642                           ;	Chosen strategy is simple_byte
 16643  0EB6  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 16644  0EB7  3A02               	xorlw	2	; case 2
 16645  0EB8  1903               	skipnz
 16646  0EB9  2E9A               	goto	i1l4577
 16647  0EBA  3A01               	xorlw	1	; case 3
 16648  0EBB  1903               	skipnz
 16649  0EBC  2E9A               	goto	i1l4577
 16650  0EBD  2E9E               	goto	i1l4581
 16651  0EBE                     i1l164:	
 16652  0EBE  0008               	return
 16653  0EBF                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16654                           
 16655                           	psect	text55
 16656  0AED                     __ptext55:	
 16657 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16658 ;; Defined at:
 16659 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;		None
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;		None
 16664 ;; Return value:  Size  Location     Type
 16665 ;;                  1    wreg      enum E12722
 16666 ;; Registers used:
 16667 ;;		wreg, status,2, status,0, pclath, cstack
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;Total ram usage:        0 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    1
 16680 ;; This function calls:
 16681 ;;		_i2c1_driver_sendNACK
 16682 ;; This function is called by:
 16683 ;;		_do_I2C_RX
 16684 ;;		_i2c_ISR
 16685 ;; This function uses a non-reentrant model
 16686 ;;
 16687                           
 16688                           
 16689                           ;psect for function _do_I2C_DO_NACK_RESTART
 16690  0AED                     _do_I2C_DO_NACK_RESTART:	
 16691  0AED                     i1l4323:	
 16692                           ;incstack = 0
 16693                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16694                           
 16695                           
 16696                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 16697  0AED  318A  22BD  318A   	fcall	_i2c1_driver_sendNACK
 16698  0AF0                     i1l4325:	
 16699                           
 16700                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 16701  0AF0  3009               	movlw	9
 16702  0AF1                     i1l158:	
 16703  0AF1  0008               	return
 16704  0AF2                     __end_of_do_I2C_DO_NACK_RESTART:	
 16705                           
 16706                           	psect	text56
 16707  0AE8                     __ptext56:	
 16708 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16709 ;; Defined at:
 16710 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;		None
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;		None
 16715 ;; Return value:  Size  Location     Type
 16716 ;;                  1    wreg      enum E12722
 16717 ;; Registers used:
 16718 ;;		wreg, status,2, status,0, pclath, cstack
 16719 ;; Tracked objects:
 16720 ;;		On entry : 0/0
 16721 ;;		On exit  : 0/0
 16722 ;;		Unchanged: 0/0
 16723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16728 ;;Total ram usage:        0 bytes
 16729 ;; Hardware stack levels used:    1
 16730 ;; Hardware stack levels required when called:    1
 16731 ;; This function calls:
 16732 ;;		_i2c1_driver_sendNACK
 16733 ;; This function is called by:
 16734 ;;		_do_I2C_RX
 16735 ;;		_i2c_ISR
 16736 ;; This function uses a non-reentrant model
 16737 ;;
 16738                           
 16739                           
 16740                           ;psect for function _do_I2C_DO_NACK_STOP
 16741  0AE8                     _do_I2C_DO_NACK_STOP:	
 16742  0AE8                     i1l4317:	
 16743                           ;incstack = 0
 16744                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16745                           
 16746                           
 16747                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 16748  0AE8  318A  22BD  318A   	fcall	_i2c1_driver_sendNACK
 16749  0AEB                     i1l4319:	
 16750                           
 16751                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 16752  0AEB  300A               	movlw	10
 16753  0AEC                     i1l155:	
 16754  0AEC  0008               	return
 16755  0AED                     __end_of_do_I2C_DO_NACK_STOP:	
 16756                           
 16757                           	psect	text57
 16758  0AE3                     __ptext57:	
 16759 ;; *************** function _do_I2C_DO_ACK *****************
 16760 ;; Defined at:
 16761 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;		None
 16764 ;; Auto vars:     Size  Location     Type
 16765 ;;		None
 16766 ;; Return value:  Size  Location     Type
 16767 ;;                  1    wreg      enum E12722
 16768 ;; Registers used:
 16769 ;;		wreg, status,2, status,0, pclath, cstack
 16770 ;; Tracked objects:
 16771 ;;		On entry : 0/0
 16772 ;;		On exit  : 0/0
 16773 ;;		Unchanged: 0/0
 16774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;Total ram usage:        0 bytes
 16780 ;; Hardware stack levels used:    1
 16781 ;; Hardware stack levels required when called:    1
 16782 ;; This function calls:
 16783 ;;		_i2c1_driver_sendACK
 16784 ;; This function is called by:
 16785 ;;		_i2c_ISR
 16786 ;; This function uses a non-reentrant model
 16787 ;;
 16788                           
 16789                           
 16790                           ;psect for function _do_I2C_DO_ACK
 16791  0AE3                     _do_I2C_DO_ACK:	
 16792  0AE3                     i1l4567:	
 16793                           ;incstack = 0
 16794                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16795                           
 16796                           
 16797                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 16798  0AE3  318A  22B9  318A   	fcall	_i2c1_driver_sendACK
 16799  0AE6                     i1l4569:	
 16800                           
 16801                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 16802  0AE6  3005               	movlw	5
 16803  0AE7                     i1l152:	
 16804  0AE7  0008               	return
 16805  0AE8                     __end_of_do_I2C_DO_ACK:	
 16806                           
 16807                           	psect	text58
 16808  0B10                     __ptext58:	
 16809 ;; *************** function _do_I2C_RCEN *****************
 16810 ;; Defined at:
 16811 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16812 ;; Parameters:    Size  Location     Type
 16813 ;;		None
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;		None
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  1    wreg      enum E12722
 16818 ;; Registers used:
 16819 ;;		wreg, status,2, status,0, pclath, cstack
 16820 ;; Tracked objects:
 16821 ;;		On entry : 0/0
 16822 ;;		On exit  : 0/0
 16823 ;;		Unchanged: 0/0
 16824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;Total ram usage:        0 bytes
 16830 ;; Hardware stack levels used:    1
 16831 ;; Hardware stack levels required when called:    1
 16832 ;; This function calls:
 16833 ;;		_i2c1_driver_startRX
 16834 ;; This function is called by:
 16835 ;;		_i2c_ISR
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           
 16840                           ;psect for function _do_I2C_RCEN
 16841  0B10                     _do_I2C_RCEN:	
 16842  0B10                     i1l4559:	
 16843                           ;incstack = 0
 16844                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16845                           
 16846                           
 16847                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 16848  0B10  0021               	movlb	1	; select bank1
 16849  0B11  11A0               	bcf	_i2c_status^(0+128),3
 16850  0B12                     i1l4561:	
 16851                           
 16852                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 16853  0B12  318A  22A7  318B   	fcall	_i2c1_driver_startRX
 16854  0B15                     i1l4563:	
 16855                           
 16856                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 16857  0B15  3004               	movlw	4
 16858  0B16                     i1l149:	
 16859  0B16  0008               	return
 16860  0B17                     __end_of_do_I2C_RCEN:	
 16861                           
 16862                           	psect	text59
 16863  0B35                     __ptext59:	
 16864 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16865 ;; Defined at:
 16866 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16867 ;; Parameters:    Size  Location     Type
 16868 ;;		None
 16869 ;; Auto vars:     Size  Location     Type
 16870 ;;		None
 16871 ;; Return value:  Size  Location     Type
 16872 ;;                  1    wreg      enum E12722
 16873 ;; Registers used:
 16874 ;;		wreg, status,2, status,0, pclath, cstack
 16875 ;; Tracked objects:
 16876 ;;		On entry : 0/0
 16877 ;;		On exit  : 0/0
 16878 ;;		Unchanged: 0/0
 16879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16884 ;;Total ram usage:        0 bytes
 16885 ;; Hardware stack levels used:    1
 16886 ;; Hardware stack levels required when called:    1
 16887 ;; This function calls:
 16888 ;;		_i2c1_driver_TXData
 16889 ;; This function is called by:
 16890 ;;		_i2c_ISR
 16891 ;; This function uses a non-reentrant model
 16892 ;;
 16893                           
 16894                           
 16895                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16896  0B35                     _do_I2C_SEND_ADR_WRITE:	
 16897  0B35                     i1l4551:	
 16898                           ;incstack = 0
 16899                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16900                           
 16901                           
 16902                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 16903  0B35  0021               	movlb	1	; select bank1
 16904  0B36  15A0               	bsf	_i2c_status^(0+128),3
 16905  0B37                     i1l4553:	
 16906                           
 16907                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 16908  0B37  3521               	lslf	(_i2c_status^(0+128)+1),w
 16909  0B38  318A  22C5  318B   	fcall	_i2c1_driver_TXData
 16910  0B3B                     i1l4555:	
 16911                           
 16912                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 16913  0B3B  3003               	movlw	3
 16914  0B3C                     i1l146:	
 16915  0B3C  0008               	return
 16916  0B3D                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16917                           
 16918                           	psect	text60
 16919  0B4D                     __ptext60:	
 16920 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16921 ;; Defined at:
 16922 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;		None
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;		None
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  1    wreg      enum E12722
 16929 ;; Registers used:
 16930 ;;		wreg, status,2, status,0, pclath, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16940 ;;Total ram usage:        0 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:    1
 16943 ;; This function calls:
 16944 ;;		_i2c1_driver_TXData
 16945 ;; This function is called by:
 16946 ;;		_i2c_ISR
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           
 16951                           ;psect for function _do_I2C_SEND_ADR_READ
 16952  0B4D                     _do_I2C_SEND_ADR_READ:	
 16953  0B4D                     i1l4543:	
 16954                           ;incstack = 0
 16955                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16956                           
 16957                           
 16958                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 16959  0B4D  0021               	movlb	1	; select bank1
 16960  0B4E  15A0               	bsf	_i2c_status^(0+128),3
 16961  0B4F                     i1l4545:	
 16962                           
 16963                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 16964  0B4F  1403               	setc
 16965  0B50  0D21               	rlf	(_i2c_status^(0+128)+1),w
 16966  0B51  318A  22C5  318B   	fcall	_i2c1_driver_TXData
 16967  0B54                     i1l4547:	
 16968                           
 16969                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 16970  0B54  3005               	movlw	5
 16971  0B55                     i1l143:	
 16972  0B55  0008               	return
 16973  0B56                     __end_of_do_I2C_SEND_ADR_READ:	
 16974                           
 16975                           	psect	text61
 16976  0ADE                     __ptext61:	
 16977 ;; *************** function _do_I2C_SEND_STOP *****************
 16978 ;; Defined at:
 16979 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;		None
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;		None
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      enum E12722
 16986 ;; Registers used:
 16987 ;;		wreg, status,2, status,0, pclath, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16997 ;;Total ram usage:        0 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:    1
 17000 ;; This function calls:
 17001 ;;		_i2c1_driver_stop
 17002 ;; This function is called by:
 17003 ;;		_do_I2C_DO_ADDRESS_NACK
 17004 ;;		_do_I2C_TX
 17005 ;;		_do_I2C_TX_EMPTY
 17006 ;;		_i2c_ISR
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           
 17011                           ;psect for function _do_I2C_SEND_STOP
 17012  0ADE                     _do_I2C_SEND_STOP:	
 17013  0ADE                     i1l4305:	
 17014                           ;incstack = 0
 17015                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 17016                           
 17017                           
 17018                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 17019  0ADE  318A  22A4  318A   	fcall	_i2c1_driver_stop
 17020  0AE1                     i1l4307:	
 17021                           
 17022                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 17023  0AE1  3000               	movlw	0
 17024  0AE2                     i1l140:	
 17025  0AE2  0008               	return
 17026  0AE3                     __end_of_do_I2C_SEND_STOP:	
 17027                           
 17028                           	psect	text62
 17029  0AD9                     __ptext62:	
 17030 ;; *************** function _do_I2C_SEND_RESTART *****************
 17031 ;; Defined at:
 17032 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 17033 ;; Parameters:    Size  Location     Type
 17034 ;;		None
 17035 ;; Auto vars:     Size  Location     Type
 17036 ;;		None
 17037 ;; Return value:  Size  Location     Type
 17038 ;;                  1    wreg      enum E12722
 17039 ;; Registers used:
 17040 ;;		wreg, status,2, status,0, pclath, cstack
 17041 ;; Tracked objects:
 17042 ;;		On entry : 0/0
 17043 ;;		On exit  : 0/0
 17044 ;;		Unchanged: 0/0
 17045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17050 ;;Total ram usage:        0 bytes
 17051 ;; Hardware stack levels used:    1
 17052 ;; Hardware stack levels required when called:    1
 17053 ;; This function calls:
 17054 ;;		_i2c1_driver_restart
 17055 ;; This function is called by:
 17056 ;;		_do_I2C_DO_ADDRESS_NACK
 17057 ;;		_do_I2C_TX_EMPTY
 17058 ;;		_i2c_ISR
 17059 ;; This function uses a non-reentrant model
 17060 ;;
 17061                           
 17062                           
 17063                           ;psect for function _do_I2C_SEND_RESTART
 17064  0AD9                     _do_I2C_SEND_RESTART:	
 17065  0AD9                     i1l4299:	
 17066                           ;incstack = 0
 17067                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17068                           
 17069                           
 17070                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 17071  0AD9  318A  22A1  318A   	fcall	_i2c1_driver_restart
 17072  0ADC                     i1l4301:	
 17073                           
 17074                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 17075  0ADC  3001               	movlw	1
 17076  0ADD                     i1l137:	
 17077  0ADD  0008               	return
 17078  0ADE                     __end_of_do_I2C_SEND_RESTART:	
 17079                           
 17080                           	psect	text63
 17081  0AD4                     __ptext63:	
 17082 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 17083 ;; Defined at:
 17084 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 17085 ;; Parameters:    Size  Location     Type
 17086 ;;		None
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;		None
 17089 ;; Return value:  Size  Location     Type
 17090 ;;                  1    wreg      enum E12722
 17091 ;; Registers used:
 17092 ;;		wreg, status,2, status,0, pclath, cstack
 17093 ;; Tracked objects:
 17094 ;;		On entry : 0/0
 17095 ;;		On exit  : 0/0
 17096 ;;		Unchanged: 0/0
 17097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17102 ;;Total ram usage:        0 bytes
 17103 ;; Hardware stack levels used:    1
 17104 ;; Hardware stack levels required when called:    1
 17105 ;; This function calls:
 17106 ;;		_i2c1_driver_restart
 17107 ;; This function is called by:
 17108 ;;		_do_I2C_TX
 17109 ;;		_i2c_ISR
 17110 ;; This function uses a non-reentrant model
 17111 ;;
 17112                           
 17113                           
 17114                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 17115  0AD4                     _do_I2C_SEND_RESTART_WRITE:	
 17116  0AD4                     i1l4293:	
 17117                           ;incstack = 0
 17118                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 17119                           
 17120                           
 17121                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 17122  0AD4  318A  22A1  318A   	fcall	_i2c1_driver_restart
 17123  0AD7                     i1l4295:	
 17124                           
 17125                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 17126  0AD7  3002               	movlw	2
 17127  0AD8                     i1l134:	
 17128  0AD8  0008               	return
 17129  0AD9                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 17130                           
 17131                           	psect	text64
 17132  0ACF                     __ptext64:	
 17133 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 17134 ;; Defined at:
 17135 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 17136 ;; Parameters:    Size  Location     Type
 17137 ;;		None
 17138 ;; Auto vars:     Size  Location     Type
 17139 ;;		None
 17140 ;; Return value:  Size  Location     Type
 17141 ;;                  1    wreg      enum E12722
 17142 ;; Registers used:
 17143 ;;		wreg, status,2, status,0, pclath, cstack
 17144 ;; Tracked objects:
 17145 ;;		On entry : 0/0
 17146 ;;		On exit  : 0/0
 17147 ;;		Unchanged: 0/0
 17148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17153 ;;Total ram usage:        0 bytes
 17154 ;; Hardware stack levels used:    1
 17155 ;; Hardware stack levels required when called:    1
 17156 ;; This function calls:
 17157 ;;		_i2c1_driver_restart
 17158 ;; This function is called by:
 17159 ;;		_do_I2C_TX
 17160 ;;		_i2c_ISR
 17161 ;; This function uses a non-reentrant model
 17162 ;;
 17163                           
 17164                           
 17165                           ;psect for function _do_I2C_SEND_RESTART_READ
 17166  0ACF                     _do_I2C_SEND_RESTART_READ:	
 17167  0ACF                     i1l4287:	
 17168                           ;incstack = 0
 17169                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 17170                           
 17171                           
 17172                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 17173  0ACF  318A  22A1  318A   	fcall	_i2c1_driver_restart
 17174  0AD2                     i1l4289:	
 17175                           
 17176                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 17177  0AD2  3001               	movlw	1
 17178  0AD3                     i1l131:	
 17179  0AD3  0008               	return
 17180  0AD4                     __end_of_do_I2C_SEND_RESTART_READ:	
 17181                           
 17182                           	psect	text65
 17183  0ACA                     __ptext65:	
 17184 ;; *************** function _do_I2C_IDLE *****************
 17185 ;; Defined at:
 17186 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;		None
 17189 ;; Auto vars:     Size  Location     Type
 17190 ;;		None
 17191 ;; Return value:  Size  Location     Type
 17192 ;;                  1    wreg      enum E12722
 17193 ;; Registers used:
 17194 ;;		wreg, status,2
 17195 ;; Tracked objects:
 17196 ;;		On entry : 0/0
 17197 ;;		On exit  : 0/0
 17198 ;;		Unchanged: 0/0
 17199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17204 ;;Total ram usage:        0 bytes
 17205 ;; Hardware stack levels used:    1
 17206 ;; This function calls:
 17207 ;;		Nothing
 17208 ;; This function is called by:
 17209 ;;		_i2c_ISR
 17210 ;; This function uses a non-reentrant model
 17211 ;;
 17212                           
 17213                           
 17214                           ;psect for function _do_I2C_IDLE
 17215  0ACA                     _do_I2C_IDLE:	
 17216  0ACA                     i1l4535:	
 17217                           ;incstack = 0
 17218                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 17219                           
 17220                           
 17221                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 17222  0ACA  0021               	movlb	1	; select bank1
 17223  0ACB  1020               	bcf	_i2c_status^(0+128),0
 17224  0ACC                     i1l4537:	
 17225                           
 17226                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 17227  0ACC  01AA               	clrf	(_i2c_status^(0+128)+10)
 17228  0ACD                     i1l4539:	
 17229                           
 17230                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 17231  0ACD  300E               	movlw	14
 17232  0ACE                     i1l128:	
 17233  0ACE  0008               	return
 17234  0ACF                     __end_of_do_I2C_IDLE:	
 17235                           
 17236                           	psect	text66
 17237  0B2D                     __ptext66:	
 17238 ;; *************** function _do_I2C_RESET *****************
 17239 ;; Defined at:
 17240 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 17241 ;; Parameters:    Size  Location     Type
 17242 ;;		None
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      enum E12722
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0, pclath, cstack
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17258 ;;Total ram usage:        0 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:    1
 17261 ;; This function calls:
 17262 ;;		_i2c1_driver_resetBus
 17263 ;; This function is called by:
 17264 ;;		_i2c_ISR
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           
 17269                           ;psect for function _do_I2C_RESET
 17270  0B2D                     _do_I2C_RESET:	
 17271  0B2D                     i1l4525:	
 17272                           ;incstack = 0
 17273                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 17274                           
 17275                           
 17276                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 17277  0B2D  318A  2299  318B   	fcall	_i2c1_driver_resetBus
 17278  0B30                     i1l4527:	
 17279                           
 17280                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 17281  0B30  0021               	movlb	1	; select bank1
 17282  0B31  1020               	bcf	_i2c_status^(0+128),0
 17283  0B32                     i1l4529:	
 17284                           
 17285                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 17286  0B32  01AA               	clrf	(_i2c_status^(0+128)+10)
 17287  0B33                     i1l4531:	
 17288                           
 17289                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 17290  0B33  300E               	movlw	14
 17291  0B34                     i1l125:	
 17292  0B34  0008               	return
 17293  0B35                     __end_of_do_I2C_RESET:	
 17294                           
 17295                           	psect	text67
 17296  0F1A                     __ptext67:	
 17297 ;; *************** function _do_I2C_TX_EMPTY *****************
 17298 ;; Defined at:
 17299 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;		None
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;		None
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      enum E12722
 17306 ;; Registers used:
 17307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17317 ;;Total ram usage:        3 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:    3
 17320 ;; This function calls:
 17321 ;;		Absolute function
 17322 ;;		_do_I2C_SEND_RESTART
 17323 ;;		_do_I2C_SEND_STOP
 17324 ;;		_i2c_restartWrite
 17325 ;;		_mssp1_setIRQ
 17326 ;;		_rd1RegCompleteHandler
 17327 ;;		_rd2RegCompleteHandler
 17328 ;;		_rdBlkRegCompleteHandler
 17329 ;;		_returnReset
 17330 ;;		_returnStop
 17331 ;;		_wr1RegCompleteHandler
 17332 ;;		_wr2RegCompleteHandler
 17333 ;; This function is called by:
 17334 ;;		_i2c_ISR
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           
 17339                           ;psect for function _do_I2C_TX_EMPTY
 17340  0F1A                     _do_I2C_TX_EMPTY:	
 17341  0F1A                     i1l4661:	
 17342                           ;incstack = 0
 17343                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17344                           
 17345                           
 17346                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 17347  0F1A  0021               	movlb	1	; select bank1
 17348  0F1B  1520               	bsf	_i2c_status^(0+128),2
 17349                           
 17350                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17351  0F1C  2F2A               	goto	i1l4679
 17352  0F1D                     i1l4663:	
 17353                           
 17354                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 17355  0F1D  318A  22D9  318F   	fcall	_do_I2C_SEND_RESTART
 17356  0F20  2F4C               	goto	i1l200
 17357  0F21                     i1l4667:	
 17358                           
 17359                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 17360  0F21  318A  22AD  318F   	fcall	_mssp1_setIRQ
 17361  0F24                     i1l4669:	
 17362                           
 17363                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 17364  0F24  3003               	movlw	3
 17365  0F25  2F4C               	goto	i1l200
 17366  0F26                     i1l4673:	
 17367                           
 17368                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 17369  0F26  318A  22DE  318F   	fcall	_do_I2C_SEND_STOP
 17370  0F29  2F4C               	goto	i1l200
 17371  0F2A                     i1l4679:	
 17372  0F2A  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17373  0F2B  00FA               	movwf	??_do_I2C_TX_EMPTY
 17374  0F2C  087A               	movf	??_do_I2C_TX_EMPTY,w
 17375  0F2D  00F9               	movwf	rdBlkRegCompleteHandler@p
 17376  0F2E  300B               	movlw	11
 17377  0F2F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17378  0F30  0086               	movwf	6
 17379  0F31  0187               	clrf	7
 17380  0F32  3F41               	moviw [1]fsr1
 17381  0F33  008A               	movwf	10
 17382  0F34  3F40               	moviw [0]fsr1
 17383  0F35  000A               	callw
 17384  0F36  318F               	pagesel	$
 17385  0F37  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 17386  0F38  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 17387                           
 17388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17389                           ; Switch size 1, requested type "simple"
 17390                           ; Number of cases is 1, Range of values is 0 to 0
 17391                           ; switch strategies available:
 17392                           ; Name         Instructions Cycles
 17393                           ; simple_byte            4     3 (average)
 17394                           ; direct_byte            8     6 (fixed)
 17395                           ; jumptable            260     6 (fixed)
 17396                           ;	Chosen strategy is simple_byte
 17397  0F39  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 17398  0F3A  3A00               	xorlw	0	; case 0
 17399  0F3B  1903               	skipnz
 17400  0F3C  2F3E               	goto	i1l6913
 17401  0F3D  2F26               	goto	i1l4673
 17402  0F3E                     i1l6913:	
 17403                           
 17404                           ; Switch size 1, requested type "simple"
 17405                           ; Number of cases is 4, Range of values is 1 to 4
 17406                           ; switch strategies available:
 17407                           ; Name         Instructions Cycles
 17408                           ; simple_byte           13     7 (average)
 17409                           ; direct_byte           17     9 (fixed)
 17410                           ; jumptable            263     9 (fixed)
 17411                           ;	Chosen strategy is simple_byte
 17412  0F3E  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 17413  0F3F  3A01               	xorlw	1	; case 1
 17414  0F40  1903               	skipnz
 17415  0F41  2F26               	goto	i1l4673
 17416  0F42  3A03               	xorlw	3	; case 2
 17417  0F43  1903               	skipnz
 17418  0F44  2F1D               	goto	i1l4663
 17419  0F45  3A01               	xorlw	1	; case 3
 17420  0F46  1903               	skipnz
 17421  0F47  2F1D               	goto	i1l4663
 17422  0F48  3A07               	xorlw	7	; case 4
 17423  0F49  1903               	skipnz
 17424  0F4A  2F21               	goto	i1l4667
 17425  0F4B  2F26               	goto	i1l4673
 17426  0F4C                     i1l200:	
 17427  0F4C  0008               	return
 17428  0F4D                     __end_of_do_I2C_TX_EMPTY:	
 17429                           
 17430                           	psect	text68
 17431  0AAD                     __ptext68:	
 17432 ;; *************** function _mssp1_setIRQ *****************
 17433 ;; Defined at:
 17434 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;		None
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;		None
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      void 
 17441 ;; Registers used:
 17442 ;;		None
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17452 ;;Total ram usage:        0 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_do_I2C_TX_EMPTY
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           
 17462                           ;psect for function _mssp1_setIRQ
 17463  0AAD                     _mssp1_setIRQ:	
 17464  0AAD                     i1l4337:	
 17465                           ;incstack = 0
 17466                           ; Regs used in _mssp1_setIRQ: []
 17467                           
 17468                           
 17469                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 17470  0AAD  002E               	movlb	14	; select bank14
 17471  0AAE  140F               	bsf	15,0	;volatile
 17472  0AAF                     i1l579:	
 17473  0AAF  0008               	return
 17474  0AB0                     __end_of_mssp1_setIRQ:	
 17475                           
 17476                           	psect	text69
 17477  0B25                     __ptext69:	
 17478 ;; *************** function _i2c1_driver_isNACK *****************
 17479 ;; Defined at:
 17480 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;		None
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;		None
 17485 ;; Return value:  Size  Location     Type
 17486 ;;		None               void
 17487 ;; Registers used:
 17488 ;;		wreg, status,2, status,0
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17498 ;;Total ram usage:        1 bytes
 17499 ;; Hardware stack levels used:    1
 17500 ;; This function calls:
 17501 ;;		Nothing
 17502 ;; This function is called by:
 17503 ;;		_do_I2C_TX
 17504 ;;		_i2c_ISR
 17505 ;; This function uses a non-reentrant model
 17506 ;;
 17507                           
 17508                           
 17509                           ;psect for function _i2c1_driver_isNACK
 17510  0B25                     _i2c1_driver_isNACK:	
 17511  0B25                     i1l4329:	
 17512                           ;incstack = 0
 17513                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 17514                           
 17515                           
 17516                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 17517  0B25  0023               	movlb	3	; select bank3
 17518  0B26  0E11               	swapf	17,w	;volatile
 17519  0B27  0C89               	rrf	9,f
 17520  0B28  0C89               	rrf	9,f
 17521  0B29  3901               	andlw	1
 17522  0B2A  00F0               	movwf	??_i2c1_driver_isNACK
 17523  0B2B  0C70               	rrf	??_i2c1_driver_isNACK,w
 17524  0B2C                     i1l614:	
 17525  0B2C  0008               	return
 17526  0B2D                     __end_of_i2c1_driver_isNACK:	
 17527                           
 17528                           	psect	text70
 17529  0AC5                     __ptext70:	
 17530 ;; *************** function _i2c1_driver_TXData *****************
 17531 ;; Defined at:
 17532 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;  d               1    wreg     unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;  d               1    0[COMMON] unsigned char 
 17537 ;; Return value:  Size  Location     Type
 17538 ;;                  1    wreg      void 
 17539 ;; Registers used:
 17540 ;;		wreg
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;Total ram usage:        1 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; This function calls:
 17553 ;;		Nothing
 17554 ;; This function is called by:
 17555 ;;		_do_I2C_SEND_ADR_READ
 17556 ;;		_do_I2C_SEND_ADR_WRITE
 17557 ;;		_do_I2C_TX
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           
 17562                           ;psect for function _i2c1_driver_TXData
 17563  0AC5                     _i2c1_driver_TXData:	
 17564                           
 17565                           ;incstack = 0
 17566                           ; Regs used in _i2c1_driver_TXData: [wreg]
 17567                           ;i2c1_driver_TXData@d stored from wreg
 17568  0AC5  00F0               	movwf	i2c1_driver_TXData@d
 17569  0AC6                     i1l4311:	
 17570                           
 17571                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 17572  0AC6  0870               	movf	i2c1_driver_TXData@d,w
 17573  0AC7  0023               	movlb	3	; select bank3
 17574  0AC8  008C               	movwf	12	;volatile
 17575  0AC9                     i1l629:	
 17576  0AC9  0008               	return
 17577  0ACA                     __end_of_i2c1_driver_TXData:	
 17578                           
 17579                           	psect	text71
 17580  0AAA                     __ptext71:	
 17581 ;; *************** function _i2c1_driver_getRXData *****************
 17582 ;; Defined at:
 17583 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 17584 ;; Parameters:    Size  Location     Type
 17585 ;;		None
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;		None
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      unsigned char 
 17590 ;; Registers used:
 17591 ;;		wreg
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17601 ;;Total ram usage:        0 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_do_I2C_RX
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           
 17611                           ;psect for function _i2c1_driver_getRXData
 17612  0AAA                     _i2c1_driver_getRXData:	
 17613  0AAA                     i1l4333:	
 17614                           ;incstack = 0
 17615                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 17616                           
 17617                           
 17618                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 17619  0AAA  0023               	movlb	3	; select bank3
 17620  0AAB  080C               	movf	12,w	;volatile
 17621  0AAC                     i1l620:	
 17622  0AAC  0008               	return
 17623  0AAD                     __end_of_i2c1_driver_getRXData:	
 17624                           
 17625                           	psect	text72
 17626  0ABD                     __ptext72:	
 17627 ;; *************** function _i2c1_driver_sendNACK *****************
 17628 ;; Defined at:
 17629 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;		None
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;		None
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  1    wreg      void 
 17636 ;; Registers used:
 17637 ;;		None
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17647 ;;Total ram usage:        0 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; This function calls:
 17650 ;;		Nothing
 17651 ;; This function is called by:
 17652 ;;		_do_I2C_DO_NACK_STOP
 17653 ;;		_do_I2C_DO_NACK_RESTART
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           
 17658                           ;psect for function _i2c1_driver_sendNACK
 17659  0ABD                     _i2c1_driver_sendNACK:	
 17660  0ABD                     i1l4181:	
 17661                           ;incstack = 0
 17662                           ; Regs used in _i2c1_driver_sendNACK: []
 17663                           
 17664                           
 17665                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 17666  0ABD  0023               	movlb	3	; select bank3
 17667  0ABE  1691               	bsf	17,5	;volatile
 17668                           
 17669                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 17670  0ABF  1611               	bsf	17,4	;volatile
 17671  0AC0                     i1l638:	
 17672  0AC0  0008               	return
 17673  0AC1                     __end_of_i2c1_driver_sendNACK:	
 17674                           
 17675                           	psect	text73
 17676  0A99                     __ptext73:	
 17677 ;; *************** function _i2c1_driver_resetBus *****************
 17678 ;; Defined at:
 17679 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;		None
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;		None
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1    wreg      void 
 17686 ;; Registers used:
 17687 ;;		None
 17688 ;; Tracked objects:
 17689 ;;		On entry : 0/0
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;Total ram usage:        0 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; This function calls:
 17700 ;;		Nothing
 17701 ;; This function is called by:
 17702 ;;		_do_I2C_RESET
 17703 ;; This function uses a non-reentrant model
 17704 ;;
 17705                           
 17706                           
 17707                           ;psect for function _i2c1_driver_resetBus
 17708  0A99                     _i2c1_driver_resetBus:	
 17709  0A99                     i1l602:	
 17710                           ;incstack = 0
 17711                           ; Regs used in _i2c1_driver_resetBus: []
 17712                           
 17713  0A99  0008               	return
 17714  0A9A                     __end_of_i2c1_driver_resetBus:	
 17715                           
 17716                           	psect	text74
 17717  0AA7                     __ptext74:	
 17718 ;; *************** function _i2c1_driver_startRX *****************
 17719 ;; Defined at:
 17720 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;		None
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;		None
 17725 ;; Return value:  Size  Location     Type
 17726 ;;                  1    wreg      void 
 17727 ;; Registers used:
 17728 ;;		None
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;Total ram usage:        0 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; This function calls:
 17741 ;;		Nothing
 17742 ;; This function is called by:
 17743 ;;		_do_I2C_RCEN
 17744 ;; This function uses a non-reentrant model
 17745 ;;
 17746                           
 17747                           
 17748                           ;psect for function _i2c1_driver_startRX
 17749  0AA7                     _i2c1_driver_startRX:	
 17750  0AA7                     i1l4313:	
 17751                           ;incstack = 0
 17752                           ; Regs used in _i2c1_driver_startRX: []
 17753                           
 17754                           
 17755                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 17756  0AA7  0023               	movlb	3	; select bank3
 17757  0AA8  1591               	bsf	17,3	;volatile
 17758  0AA9                     i1l617:	
 17759  0AA9  0008               	return
 17760  0AAA                     __end_of_i2c1_driver_startRX:	
 17761                           
 17762                           	psect	text75
 17763  0CFD                     __ptext75:	
 17764 ;; *************** function _rdBlkRegCompleteHandler *****************
 17765 ;; Defined at:
 17766 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17767 ;; Parameters:    Size  Location     Type
 17768 ;;  p               1    9[COMMON] PTR void 
 17769 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17770 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;		None
 17773 ;; Return value:  Size  Location     Type
 17774 ;;                  1    wreg      enum E358
 17775 ;; Registers used:
 17776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17777 ;; Tracked objects:
 17778 ;;		On entry : 0/0
 17779 ;;		On exit  : 0/0
 17780 ;;		Unchanged: 0/0
 17781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17782 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;Total ram usage:        1 bytes
 17787 ;; Hardware stack levels used:    1
 17788 ;; Hardware stack levels required when called:    2
 17789 ;; This function calls:
 17790 ;;		_i2c_setBuffer
 17791 ;;		_i2c_setDataCompleteCallback
 17792 ;; This function is called by:
 17793 ;;		_i2c_readDataBlock
 17794 ;;		_do_I2C_DO_ADDRESS_NACK
 17795 ;;		_do_I2C_TX
 17796 ;;		_do_I2C_RX
 17797 ;;		_do_I2C_TX_EMPTY
 17798 ;; This function uses a non-reentrant model
 17799 ;;
 17800                           
 17801                           
 17802                           ;psect for function _rdBlkRegCompleteHandler
 17803  0CFD                     _rdBlkRegCompleteHandler:	
 17804  0CFD                     i1l4379:	
 17805                           ;incstack = 0
 17806                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17807                           
 17808                           
 17809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 17810  0CFD  0879               	movf	rdBlkRegCompleteHandler@p,w
 17811  0CFE  0086               	movwf	6
 17812  0CFF  0187               	clrf	7
 17813  0D00  3F40               	moviw [0]fsr1
 17814  0D01  00F0               	movwf	i2c_setBuffer@bufferSize
 17815  0D02  3F41               	moviw [1]fsr1
 17816  0D03  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17817  0D04  0879               	movf	rdBlkRegCompleteHandler@p,w
 17818  0D05  3E02               	addlw	2
 17819  0D06  0086               	movwf	6
 17820  0D07  0187               	clrf	7
 17821  0D08  0801               	movf	1,w
 17822  0D09  318C  241A  318C   	fcall	_i2c_setBuffer
 17823                           
 17824                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17825  0D0C  3000               	movlw	0
 17826  0D0D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17827  0D0E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17828  0D0F  01F7               	clrf	i2c_setDataCompleteCallback@p
 17829  0D10  318B  23D4  318C   	fcall	_i2c_setDataCompleteCallback
 17830  0D13                     i1l4381:	
 17831                           
 17832                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 17833  0D13  3002               	movlw	2
 17834  0D14                     i1l303:	
 17835  0D14  0008               	return
 17836  0D15                     __end_of_rdBlkRegCompleteHandler:	
 17837                           
 17838                           	psect	text76
 17839  0C7E                     __ptext76:	
 17840 ;; *************** function _rd2RegCompleteHandler *****************
 17841 ;; Defined at:
 17842 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17843 ;; Parameters:    Size  Location     Type
 17844 ;;  p               1    9[COMMON] PTR void 
 17845 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17846 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17847 ;; Auto vars:     Size  Location     Type
 17848 ;;		None
 17849 ;; Return value:  Size  Location     Type
 17850 ;;                  1    wreg      enum E358
 17851 ;; Registers used:
 17852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17853 ;; Tracked objects:
 17854 ;;		On entry : 0/0
 17855 ;;		On exit  : 0/0
 17856 ;;		Unchanged: 0/0
 17857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17862 ;;Total ram usage:        1 bytes
 17863 ;; Hardware stack levels used:    1
 17864 ;; Hardware stack levels required when called:    2
 17865 ;; This function calls:
 17866 ;;		_i2c_setBuffer
 17867 ;;		_i2c_setDataCompleteCallback
 17868 ;; This function is called by:
 17869 ;;		_i2c_read2ByteRegister
 17870 ;;		_do_I2C_DO_ADDRESS_NACK
 17871 ;;		_do_I2C_TX
 17872 ;;		_do_I2C_RX
 17873 ;;		_do_I2C_TX_EMPTY
 17874 ;; This function uses a non-reentrant model
 17875 ;;
 17876                           
 17877                           
 17878                           ;psect for function _rd2RegCompleteHandler
 17879  0C7E                     _rd2RegCompleteHandler:	
 17880  0C7E                     i1l4363:	
 17881                           ;incstack = 0
 17882                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17883                           
 17884                           
 17885                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 17886  0C7E  3002               	movlw	2
 17887  0C7F  00F0               	movwf	i2c_setBuffer@bufferSize
 17888  0C80  3000               	movlw	0
 17889  0C81  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17890  0C82  0879               	movf	rd2RegCompleteHandler@p,w
 17891  0C83  318C  241A  318C   	fcall	_i2c_setBuffer
 17892  0C86                     i1l4365:	
 17893                           
 17894                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17895  0C86  3000               	movlw	0
 17896  0C87  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17897  0C88  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17898  0C89  01F7               	clrf	i2c_setDataCompleteCallback@p
 17899  0C8A  318B  23D4  318C   	fcall	_i2c_setDataCompleteCallback
 17900  0C8D                     i1l4367:	
 17901                           
 17902                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 17903  0C8D  3002               	movlw	2
 17904  0C8E                     i1l279:	
 17905  0C8E  0008               	return
 17906  0C8F                     __end_of_rd2RegCompleteHandler:	
 17907                           
 17908                           	psect	text77
 17909  0C6D                     __ptext77:	
 17910 ;; *************** function _rd1RegCompleteHandler *****************
 17911 ;; Defined at:
 17912 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17913 ;; Parameters:    Size  Location     Type
 17914 ;;  p               1    9[COMMON] PTR void 
 17915 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17916 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17917 ;; Auto vars:     Size  Location     Type
 17918 ;;		None
 17919 ;; Return value:  Size  Location     Type
 17920 ;;                  1    wreg      enum E358
 17921 ;; Registers used:
 17922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17923 ;; Tracked objects:
 17924 ;;		On entry : 0/0
 17925 ;;		On exit  : 0/0
 17926 ;;		Unchanged: 0/0
 17927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17932 ;;Total ram usage:        1 bytes
 17933 ;; Hardware stack levels used:    1
 17934 ;; Hardware stack levels required when called:    2
 17935 ;; This function calls:
 17936 ;;		_i2c_setBuffer
 17937 ;;		_i2c_setDataCompleteCallback
 17938 ;; This function is called by:
 17939 ;;		_i2c_read1ByteRegister
 17940 ;;		_do_I2C_DO_ADDRESS_NACK
 17941 ;;		_do_I2C_TX
 17942 ;;		_do_I2C_RX
 17943 ;;		_do_I2C_TX_EMPTY
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           
 17948                           ;psect for function _rd1RegCompleteHandler
 17949  0C6D                     _rd1RegCompleteHandler:	
 17950  0C6D                     i1l4355:	
 17951                           ;incstack = 0
 17952                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17953                           
 17954                           
 17955                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 17956  0C6D  3001               	movlw	1
 17957  0C6E  00F0               	movwf	i2c_setBuffer@bufferSize
 17958  0C6F  3000               	movlw	0
 17959  0C70  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17960  0C71  0879               	movf	rd1RegCompleteHandler@p,w
 17961  0C72  318C  241A  318C   	fcall	_i2c_setBuffer
 17962  0C75                     i1l4357:	
 17963                           
 17964                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17965  0C75  3000               	movlw	0
 17966  0C76  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17967  0C77  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17968  0C78  01F7               	clrf	i2c_setDataCompleteCallback@p
 17969  0C79  318B  23D4  318C   	fcall	_i2c_setDataCompleteCallback
 17970  0C7C                     i1l4359:	
 17971                           
 17972                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 17973  0C7C  3002               	movlw	2
 17974  0C7D                     i1l264:	
 17975  0C7D  0008               	return
 17976  0C7E                     __end_of_rd1RegCompleteHandler:	
 17977                           
 17978                           	psect	text78
 17979  0C5C                     __ptext78:	
 17980 ;; *************** function _wr1RegCompleteHandler *****************
 17981 ;; Defined at:
 17982 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;  p               1    9[COMMON] PTR void 
 17985 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17986 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;		None
 17989 ;; Return value:  Size  Location     Type
 17990 ;;                  1    wreg      enum E358
 17991 ;; Registers used:
 17992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17993 ;; Tracked objects:
 17994 ;;		On entry : 0/0
 17995 ;;		On exit  : 0/0
 17996 ;;		Unchanged: 0/0
 17997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;Total ram usage:        1 bytes
 18003 ;; Hardware stack levels used:    1
 18004 ;; Hardware stack levels required when called:    2
 18005 ;; This function calls:
 18006 ;;		_i2c_setBuffer
 18007 ;;		_i2c_setDataCompleteCallback
 18008 ;; This function is called by:
 18009 ;;		_i2c_write1ByteRegister
 18010 ;;		_do_I2C_DO_ADDRESS_NACK
 18011 ;;		_do_I2C_TX
 18012 ;;		_do_I2C_RX
 18013 ;;		_do_I2C_TX_EMPTY
 18014 ;; This function uses a non-reentrant model
 18015 ;;
 18016                           
 18017                           
 18018                           ;psect for function _wr1RegCompleteHandler
 18019  0C5C                     _wr1RegCompleteHandler:	
 18020  0C5C                     i1l4347:	
 18021                           ;incstack = 0
 18022                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18023                           
 18024                           
 18025                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 18026  0C5C  3001               	movlw	1
 18027  0C5D  00F0               	movwf	i2c_setBuffer@bufferSize
 18028  0C5E  3000               	movlw	0
 18029  0C5F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 18030  0C60  0879               	movf	wr1RegCompleteHandler@p,w
 18031  0C61  318C  241A  318C   	fcall	_i2c_setBuffer
 18032  0C64                     i1l4349:	
 18033                           
 18034                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 18035  0C64  3000               	movlw	0
 18036  0C65  00F5               	movwf	i2c_setDataCompleteCallback@cb
 18037  0C66  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 18038  0C67  01F7               	clrf	i2c_setDataCompleteCallback@p
 18039  0C68  318B  23D4  318C   	fcall	_i2c_setDataCompleteCallback
 18040  0C6B                     i1l4351:	
 18041                           
 18042                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 18043  0C6B  3004               	movlw	4
 18044  0C6C                     i1l243:	
 18045  0C6C  0008               	return
 18046  0C6D                     __end_of_wr1RegCompleteHandler:	
 18047                           
 18048                           	psect	text79
 18049  0002                     __ptext79:	
 18050 ;; *************** function _returnReset *****************
 18051 ;; Defined at:
 18052 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;  p               1    9[COMMON] PTR void 
 18055 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18056 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;		None
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1    wreg      enum E12568
 18061 ;; Registers used:
 18062 ;;		wreg
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18072 ;;Total ram usage:        1 bytes
 18073 ;; Hardware stack levels used:    1
 18074 ;; This function calls:
 18075 ;;		Nothing
 18076 ;; This function is called by:
 18077 ;;		_i2c_open
 18078 ;;		_do_I2C_DO_ADDRESS_NACK
 18079 ;;		_do_I2C_TX
 18080 ;;		_do_I2C_RX
 18081 ;;		_do_I2C_TX_EMPTY
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           
 18085                           
 18086                           ;psect for function _returnReset
 18087  0002                     _returnReset:	
 18088  0002                     i1l4343:	
 18089                           ;incstack = 0
 18090                           ; Regs used in _returnReset: [wreg]
 18091                           
 18092                           
 18093                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 18094  0002  3005               	movlw	5
 18095  0003                     i1l219:	
 18096  0003  0008               	return
 18097  0004                     __end_of_returnReset:	
 18098                           
 18099                           	psect	text80
 18100  0A9C                     __ptext80:	
 18101 ;; *************** function _returnStop *****************
 18102 ;; Defined at:
 18103 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;  p               1    9[COMMON] PTR void 
 18106 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18107 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18108 ;; Auto vars:     Size  Location     Type
 18109 ;;		None
 18110 ;; Return value:  Size  Location     Type
 18111 ;;                  1    wreg      enum E12568
 18112 ;; Registers used:
 18113 ;;		wreg
 18114 ;; Tracked objects:
 18115 ;;		On entry : 0/0
 18116 ;;		On exit  : 0/0
 18117 ;;		Unchanged: 0/0
 18118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18119 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18123 ;;Total ram usage:        1 bytes
 18124 ;; Hardware stack levels used:    1
 18125 ;; This function calls:
 18126 ;;		Nothing
 18127 ;; This function is called by:
 18128 ;;		_setCallBack
 18129 ;;		_i2c_open
 18130 ;;		_do_I2C_DO_ADDRESS_NACK
 18131 ;;		_do_I2C_TX
 18132 ;;		_do_I2C_RX
 18133 ;;		_do_I2C_TX_EMPTY
 18134 ;; This function uses a non-reentrant model
 18135 ;;
 18136                           
 18137                           
 18138                           ;psect for function _returnStop
 18139  0A9C                     _returnStop:	
 18140  0A9C                     i1l4339:	
 18141                           ;incstack = 0
 18142                           ; Regs used in _returnStop: [wreg]
 18143                           
 18144                           
 18145                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 18146  0A9C  3001               	movlw	1
 18147  0A9D                     i1l216:	
 18148  0A9D  0008               	return
 18149  0A9E                     __end_of_returnStop:	
 18150                           
 18151                           	psect	text81
 18152  0A9A                     __ptext81:	
 18153 ;; *************** function _i2c_restartWrite *****************
 18154 ;; Defined at:
 18155 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 18156 ;; Parameters:    Size  Location     Type
 18157 ;;  p               1    9[COMMON] PTR void 
 18158 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18159 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18160 ;; Auto vars:     Size  Location     Type
 18161 ;;		None
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  1    wreg      enum E358
 18164 ;; Registers used:
 18165 ;;		wreg
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18171 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18175 ;;Total ram usage:        1 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; This function calls:
 18178 ;;		Nothing
 18179 ;; This function is called by:
 18180 ;;		_i2c_write1ByteRegister
 18181 ;;		_i2c_writeNBytes
 18182 ;;		_i2c_read1ByteRegister
 18183 ;;		_i2c_read2ByteRegister
 18184 ;;		_i2c_write2ByteRegister
 18185 ;;		_i2c_readDataBlock
 18186 ;;		_do_I2C_DO_ADDRESS_NACK
 18187 ;;		_do_I2C_TX
 18188 ;;		_do_I2C_RX
 18189 ;;		_do_I2C_TX_EMPTY
 18190 ;; This function uses a non-reentrant model
 18191 ;;
 18192                           
 18193                           
 18194                           ;psect for function _i2c_restartWrite
 18195  0A9A                     _i2c_restartWrite:	
 18196  0A9A                     i1l4275:	
 18197                           ;incstack = 0
 18198                           ; Regs used in _i2c_restartWrite: [wreg]
 18199                           
 18200                           
 18201                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 18202  0A9A  3003               	movlw	3
 18203  0A9B                     i1l9:	
 18204  0A9B  0008               	return
 18205  0A9C                     __end_of_i2c_restartWrite:	
 18206                           
 18207                           	psect	text82
 18208  0C4B                     __ptext82:	
 18209 ;; *************** function _wr2RegCompleteHandler *****************
 18210 ;; Defined at:
 18211 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  p               1    9[COMMON] PTR void 
 18214 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18215 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;		None
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  1    wreg      enum E358
 18220 ;; Registers used:
 18221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18227 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18231 ;;Total ram usage:        1 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    2
 18234 ;; This function calls:
 18235 ;;		_i2c_setBuffer
 18236 ;;		_i2c_setDataCompleteCallback
 18237 ;; This function is called by:
 18238 ;;		_i2c_write2ByteRegister
 18239 ;;		_do_I2C_DO_ADDRESS_NACK
 18240 ;;		_do_I2C_TX
 18241 ;;		_do_I2C_RX
 18242 ;;		_do_I2C_TX_EMPTY
 18243 ;; This function uses a non-reentrant model
 18244 ;;
 18245                           
 18246                           
 18247                           ;psect for function _wr2RegCompleteHandler
 18248  0C4B                     _wr2RegCompleteHandler:	
 18249  0C4B                     i1l4371:	
 18250                           ;incstack = 0
 18251                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18252                           
 18253                           
 18254                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 18255  0C4B  3002               	movlw	2
 18256  0C4C  00F0               	movwf	i2c_setBuffer@bufferSize
 18257  0C4D  3000               	movlw	0
 18258  0C4E  00F1               	movwf	i2c_setBuffer@bufferSize+1
 18259  0C4F  0879               	movf	wr2RegCompleteHandler@p,w
 18260  0C50  318C  241A  318C   	fcall	_i2c_setBuffer
 18261  0C53                     i1l4373:	
 18262                           
 18263                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18264  0C53  3000               	movlw	0
 18265  0C54  00F5               	movwf	i2c_setDataCompleteCallback@cb
 18266  0C55  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 18267  0C56  01F7               	clrf	i2c_setDataCompleteCallback@p
 18268  0C57  318B  23D4  318C   	fcall	_i2c_setDataCompleteCallback
 18269  0C5A                     i1l4375:	
 18270                           
 18271                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 18272  0C5A  3004               	movlw	4
 18273  0C5B                     i1l291:	
 18274  0C5B  0008               	return
 18275  0C5C                     __end_of_wr2RegCompleteHandler:	
 18276                           
 18277                           	psect	text83
 18278  0BD4                     __ptext83:	
 18279 ;; *************** function _i2c_setDataCompleteCallback *****************
 18280 ;; Defined at:
 18281 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 18282 ;; Parameters:    Size  Location     Type
 18283 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 18284 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18285 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 18286 ;;  p               1    7[COMMON] PTR void 
 18287 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18288 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;		None
 18291 ;; Return value:  Size  Location     Type
 18292 ;;                  1    wreg      void 
 18293 ;; Registers used:
 18294 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18295 ;; Tracked objects:
 18296 ;;		On entry : 0/0
 18297 ;;		On exit  : 0/0
 18298 ;;		Unchanged: 0/0
 18299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18300 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18304 ;;Total ram usage:        4 bytes
 18305 ;; Hardware stack levels used:    1
 18306 ;; Hardware stack levels required when called:    1
 18307 ;; This function calls:
 18308 ;;		_setCallBack
 18309 ;; This function is called by:
 18310 ;;		_wr1RegCompleteHandler
 18311 ;;		_rd1RegCompleteHandler
 18312 ;;		_rd2RegCompleteHandler
 18313 ;;		_wr2RegCompleteHandler
 18314 ;;		_rdBlkRegCompleteHandler
 18315 ;;		_i2c_write1ByteRegister
 18316 ;;		_i2c_read1ByteRegister
 18317 ;;		_i2c_read2ByteRegister
 18318 ;;		_i2c_write2ByteRegister
 18319 ;;		_i2c_readDataBlock
 18320 ;; This function uses a non-reentrant model
 18321 ;;
 18322                           
 18323                           
 18324                           ;psect for function _i2c_setDataCompleteCallback
 18325  0BD4                     _i2c_setDataCompleteCallback:	
 18326  0BD4                     i1l4169:	
 18327                           ;incstack = 0
 18328                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18329                           
 18330                           
 18331                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 18332  0BD4  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 18333  0BD5  00F1               	movwf	setCallBack@cb+1
 18334  0BD6  0875               	movf	i2c_setDataCompleteCallback@cb,w
 18335  0BD7  00F0               	movwf	setCallBack@cb
 18336  0BD8  0877               	movf	i2c_setDataCompleteCallback@p,w
 18337  0BD9  00F8               	movwf	??_i2c_setDataCompleteCallback
 18338  0BDA  0878               	movf	??_i2c_setDataCompleteCallback,w
 18339  0BDB  00F2               	movwf	setCallBack@p
 18340  0BDC  3000               	movlw	0
 18341  0BDD  318E  266D  318B   	fcall	_setCallBack
 18342  0BE0                     i1l73:	
 18343  0BE0  0008               	return
 18344  0BE1                     __end_of_i2c_setDataCompleteCallback:	
 18345                           
 18346                           	psect	text84
 18347  0E6D                     __ptext84:	
 18348 ;; *************** function _setCallBack *****************
 18349 ;; Defined at:
 18350 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  idx             1    wreg     enum E12740
 18353 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 18354 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18355 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 18356 ;;  p               1    2[COMMON] PTR void 
 18357 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18358 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18359 ;; Auto vars:     Size  Location     Type
 18360 ;;  idx             1    4[COMMON] enum E12740
 18361 ;; Return value:  Size  Location     Type
 18362 ;;                  1    wreg      void 
 18363 ;; Registers used:
 18364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18365 ;; Tracked objects:
 18366 ;;		On entry : 0/0
 18367 ;;		On exit  : 0/0
 18368 ;;		Unchanged: 0/0
 18369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18370 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18373 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18374 ;;Total ram usage:        5 bytes
 18375 ;; Hardware stack levels used:    1
 18376 ;; This function calls:
 18377 ;;		Nothing
 18378 ;; This function is called by:
 18379 ;;		_i2c_setDataCompleteCallback
 18380 ;;		_i2c_setWriteCollisionCallback
 18381 ;;		_i2c_setAddressNACKCallback
 18382 ;;		_i2c_setDataNACKCallback
 18383 ;;		_i2c_setTimeOutCallback
 18384 ;; This function uses a non-reentrant model
 18385 ;;
 18386                           
 18387                           
 18388                           ;psect for function _setCallBack
 18389  0E6D                     _setCallBack:	
 18390                           
 18391                           ;incstack = 0
 18392                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 18393                           ;setCallBack@idx stored from wreg
 18394  0E6D  00F4               	movwf	setCallBack@idx
 18395  0E6E                     i1l4163:	
 18396                           
 18397                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 18398  0E6E  0870               	movf	setCallBack@cb,w
 18399  0E6F  0471               	iorwf	setCallBack@cb+1,w
 18400  0E70  1903               	btfsc	3,2
 18401  0E71  2E73               	goto	u165_21
 18402  0E72  2E74               	goto	u165_20
 18403  0E73                     u165_21:	
 18404  0E73  2E85               	goto	i1l4167
 18405  0E74                     u165_20:	
 18406  0E74                     i1l4165:	
 18407                           
 18408                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 18409  0E74  3574               	lslf	setCallBack@idx,w
 18410  0E75  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18411  0E76  0086               	movwf	6
 18412  0E77  0187               	clrf	7
 18413  0E78  0870               	movf	setCallBack@cb,w
 18414  0E79  3FC0               	movwi [0]fsr1
 18415  0E7A  0871               	movf	setCallBack@cb+1,w
 18416  0E7B  3FC1               	movwi [1]fsr1
 18417                           
 18418                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 18419  0E7C  0872               	movf	setCallBack@p,w
 18420  0E7D  00F3               	movwf	??_setCallBack
 18421  0E7E  0874               	movf	setCallBack@idx,w
 18422  0E7F  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18423  0E80  0086               	movwf	6
 18424  0E81  0187               	clrf	7
 18425  0E82  0873               	movf	??_setCallBack,w
 18426  0E83  0081               	movwf	1
 18427                           
 18428                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 18429  0E84  2E92               	goto	i1l224
 18430  0E85                     i1l4167:	
 18431                           
 18432                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 18433  0E85  3574               	lslf	setCallBack@idx,w
 18434  0E86  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18435  0E87  0086               	movwf	6
 18436  0E88  0187               	clrf	7
 18437  0E89  309C               	movlw	low _returnStop
 18438  0E8A  3FC0               	movwi [0]fsr1
 18439  0E8B  300A               	movlw	high _returnStop
 18440  0E8C  3FC1               	movwi [1]fsr1
 18441                           
 18442                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 18443  0E8D  0874               	movf	setCallBack@idx,w
 18444  0E8E  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18445  0E8F  0086               	movwf	6
 18446  0E90  0187               	clrf	7
 18447  0E91  0181               	clrf	1
 18448  0E92                     i1l224:	
 18449  0E92  0008               	return
 18450  0E93                     __end_of_setCallBack:	
 18451                           
 18452                           	psect	text85
 18453  0C1A                     __ptext85:	
 18454 ;; *************** function _i2c_setBuffer *****************
 18455 ;; Defined at:
 18456 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;  buffer          1    wreg     PTR void 
 18459 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18460 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18461 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18462 ;;  bufferSize      2    0[COMMON] unsigned int 
 18463 ;; Auto vars:     Size  Location     Type
 18464 ;;  buffer          1    3[COMMON] PTR void 
 18465 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18466 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18467 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18468 ;; Return value:  Size  Location     Type
 18469 ;;                  1    wreg      void 
 18470 ;; Registers used:
 18471 ;;		wreg
 18472 ;; Tracked objects:
 18473 ;;		On entry : 0/0
 18474 ;;		On exit  : 0/0
 18475 ;;		Unchanged: 0/0
 18476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18481 ;;Total ram usage:        4 bytes
 18482 ;; Hardware stack levels used:    1
 18483 ;; This function calls:
 18484 ;;		Nothing
 18485 ;; This function is called by:
 18486 ;;		_wr1RegCompleteHandler
 18487 ;;		_rd1RegCompleteHandler
 18488 ;;		_rd2RegCompleteHandler
 18489 ;;		_wr2RegCompleteHandler
 18490 ;;		_rdBlkRegCompleteHandler
 18491 ;;		_i2c_write1ByteRegister
 18492 ;;		_i2c_writeNBytes
 18493 ;;		_i2c_read1ByteRegister
 18494 ;;		_i2c_read2ByteRegister
 18495 ;;		_i2c_write2ByteRegister
 18496 ;;		_i2c_readDataBlock
 18497 ;;		_i2c_readNBytes
 18498 ;; This function uses a non-reentrant model
 18499 ;;
 18500                           
 18501                           
 18502                           ;psect for function _i2c_setBuffer
 18503  0C1A                     _i2c_setBuffer:	
 18504                           
 18505                           ;incstack = 0
 18506                           ; Regs used in _i2c_setBuffer: [wreg]
 18507                           ;i2c_setBuffer@buffer stored from wreg
 18508  0C1A  00F3               	movwf	i2c_setBuffer@buffer
 18509  0C1B                     i1l4171:	
 18510                           
 18511                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 18512  0C1B  0021               	movlb	1	; select bank1
 18513  0C1C  1D20               	btfss	_i2c_status^(0+128),2
 18514  0C1D  2C1F               	goto	u166_21
 18515  0C1E  2C20               	goto	u166_20
 18516  0C1F                     u166_21:	
 18517  0C1F  2C29               	goto	i1l103
 18518  0C20                     u166_20:	
 18519  0C20                     i1l4173:	
 18520                           
 18521                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 18522  0C20  0873               	movf	i2c_setBuffer@buffer,w
 18523  0C21  00F2               	movwf	??_i2c_setBuffer
 18524  0C22  0872               	movf	??_i2c_setBuffer,w
 18525  0C23  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 18526                           
 18527                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 18528  0C24  0871               	movf	i2c_setBuffer@bufferSize+1,w
 18529  0C25  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 18530  0C26  0870               	movf	i2c_setBuffer@bufferSize,w
 18531  0C27  00A3               	movwf	(_i2c_status^(0+128)+3)
 18532  0C28                     i1l4175:	
 18533                           
 18534                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 18535  0C28  1120               	bcf	_i2c_status^(0+128),2
 18536  0C29                     i1l103:	
 18537  0C29  0008               	return
 18538  0C2A                     __end_of_i2c_setBuffer:	
 18539                           
 18540                           	psect	text86
 18541  0AA4                     __ptext86:	
 18542 ;; *************** function _i2c1_driver_stop *****************
 18543 ;; Defined at:
 18544 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 18545 ;; Parameters:    Size  Location     Type
 18546 ;;		None
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;		None
 18549 ;; Return value:  Size  Location     Type
 18550 ;;                  1    wreg      void 
 18551 ;; Registers used:
 18552 ;;		None
 18553 ;; Tracked objects:
 18554 ;;		On entry : 0/0
 18555 ;;		On exit  : 0/0
 18556 ;;		Unchanged: 0/0
 18557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18562 ;;Total ram usage:        0 bytes
 18563 ;; Hardware stack levels used:    1
 18564 ;; This function calls:
 18565 ;;		Nothing
 18566 ;; This function is called by:
 18567 ;;		_do_I2C_SEND_STOP
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           
 18572                           ;psect for function _i2c1_driver_stop
 18573  0AA4                     _i2c1_driver_stop:	
 18574  0AA4                     i1l4179:	
 18575                           ;incstack = 0
 18576                           ; Regs used in _i2c1_driver_stop: []
 18577                           
 18578                           
 18579                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 18580  0AA4  0023               	movlb	3	; select bank3
 18581  0AA5  1511               	bsf	17,2	;volatile
 18582  0AA6                     i1l611:	
 18583  0AA6  0008               	return
 18584  0AA7                     __end_of_i2c1_driver_stop:	
 18585                           
 18586                           	psect	text87
 18587  0AA1                     __ptext87:	
 18588 ;; *************** function _i2c1_driver_restart *****************
 18589 ;; Defined at:
 18590 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 18591 ;; Parameters:    Size  Location     Type
 18592 ;;		None
 18593 ;; Auto vars:     Size  Location     Type
 18594 ;;		None
 18595 ;; Return value:  Size  Location     Type
 18596 ;;                  1    wreg      void 
 18597 ;; Registers used:
 18598 ;;		None
 18599 ;; Tracked objects:
 18600 ;;		On entry : 0/0
 18601 ;;		On exit  : 0/0
 18602 ;;		Unchanged: 0/0
 18603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18608 ;;Total ram usage:        0 bytes
 18609 ;; Hardware stack levels used:    1
 18610 ;; This function calls:
 18611 ;;		Nothing
 18612 ;; This function is called by:
 18613 ;;		_do_I2C_SEND_RESTART_READ
 18614 ;;		_do_I2C_SEND_RESTART_WRITE
 18615 ;;		_do_I2C_SEND_RESTART
 18616 ;; This function uses a non-reentrant model
 18617 ;;
 18618                           
 18619                           
 18620                           ;psect for function _i2c1_driver_restart
 18621  0AA1                     _i2c1_driver_restart:	
 18622  0AA1                     i1l4177:	
 18623                           ;incstack = 0
 18624                           ; Regs used in _i2c1_driver_restart: []
 18625                           
 18626                           
 18627                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 18628  0AA1  0023               	movlb	3	; select bank3
 18629  0AA2  1491               	bsf	17,1	;volatile
 18630  0AA3                     i1l608:	
 18631  0AA3  0008               	return
 18632  0AA4                     __end_of_i2c1_driver_restart:	
 18633                           
 18634                           	psect	text88
 18635  0AB9                     __ptext88:	
 18636 ;; *************** function _i2c1_driver_sendACK *****************
 18637 ;; Defined at:
 18638 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 18639 ;; Parameters:    Size  Location     Type
 18640 ;;		None
 18641 ;; Auto vars:     Size  Location     Type
 18642 ;;		None
 18643 ;; Return value:  Size  Location     Type
 18644 ;;                  1    wreg      void 
 18645 ;; Registers used:
 18646 ;;		None
 18647 ;; Tracked objects:
 18648 ;;		On entry : 0/0
 18649 ;;		On exit  : 0/0
 18650 ;;		Unchanged: 0/0
 18651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18656 ;;Total ram usage:        0 bytes
 18657 ;; Hardware stack levels used:    1
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		_do_I2C_DO_ACK
 18662 ;;		_do_I2C_RX
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           
 18667                           ;psect for function _i2c1_driver_sendACK
 18668  0AB9                     _i2c1_driver_sendACK:	
 18669  0AB9                     i1l4315:	
 18670                           ;incstack = 0
 18671                           ; Regs used in _i2c1_driver_sendACK: []
 18672                           
 18673                           
 18674                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 18675  0AB9  0023               	movlb	3	; select bank3
 18676  0ABA  1291               	bcf	17,5	;volatile
 18677                           
 18678                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 18679  0ABB  1611               	bsf	17,4	;volatile
 18680  0ABC                     i1l635:	
 18681  0ABC  0008               	return
 18682  0ABD                     __end_of_i2c1_driver_sendACK:	
 18683                           
 18684                           	psect	text89
 18685  0C0B                     __ptext89:	
 18686 ;; *************** function _TMR2_ISR *****************
 18687 ;; Defined at:
 18688 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;		None
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;		None
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg, status,2, status,0, pclath, cstack
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18706 ;;Total ram usage:        0 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    1
 18709 ;; This function calls:
 18710 ;;		Absolute function
 18711 ;;		_TMR2_DefaultInterruptHandler
 18712 ;;		_handler_clock_ms
 18713 ;; This function is called by:
 18714 ;;		_INTERRUPT_InterruptManager
 18715 ;; This function uses a non-reentrant model
 18716 ;;
 18717                           
 18718                           
 18719                           ;psect for function _TMR2_ISR
 18720  0C0B                     _TMR2_ISR:	
 18721  0C0B                     i1l5103:	
 18722                           ;incstack = 0
 18723                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18724                           
 18725                           
 18726                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 18727  0C0B  002E               	movlb	14	; select bank14
 18728  0C0C  1090               	bcf	16,1	;volatile
 18729  0C0D                     i1l5105:	
 18730                           
 18731                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 18732  0C0D  0021               	movlb	1	; select bank1
 18733  0C0E  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 18734  0C0F  044B               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 18735  0C10  1903               	btfsc	3,2
 18736  0C11  2C13               	goto	u232_21
 18737  0C12  2C14               	goto	u232_20
 18738  0C13                     u232_21:	
 18739  0C13  2C19               	goto	i1l1038
 18740  0C14                     u232_20:	
 18741  0C14                     i1l5107:	
 18742                           
 18743                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 18744  0C14  084B               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 18745  0C15  008A               	movwf	10
 18746  0C16  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 18747  0C17  000A               	callw
 18748  0C18  318C               	pagesel	$
 18749  0C19                     i1l1038:	
 18750  0C19  0008               	return
 18751  0C1A                     __end_of_TMR2_ISR:	
 18752                           
 18753                           	psect	text90
 18754  0A98                     __ptext90:	
 18755 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 18756 ;; Defined at:
 18757 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;		None
 18760 ;; Auto vars:     Size  Location     Type
 18761 ;;		None
 18762 ;; Return value:  Size  Location     Type
 18763 ;;                  1    wreg      void 
 18764 ;; Registers used:
 18765 ;;		None
 18766 ;; Tracked objects:
 18767 ;;		On entry : 0/0
 18768 ;;		On exit  : 0/0
 18769 ;;		Unchanged: 0/0
 18770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18775 ;;Total ram usage:        0 bytes
 18776 ;; Hardware stack levels used:    1
 18777 ;; This function calls:
 18778 ;;		Nothing
 18779 ;; This function is called by:
 18780 ;;		_TMR2_Initialize
 18781 ;;		_TMR2_ISR
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           
 18786                           ;psect for function _TMR2_DefaultInterruptHandler
 18787  0A98                     _TMR2_DefaultInterruptHandler:	
 18788  0A98                     i1l1044:	
 18789                           ;incstack = 0
 18790                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 18791                           
 18792  0A98  0008               	return
 18793  0A99                     __end_of_TMR2_DefaultInterruptHandler:	
 18794                           
 18795                           	psect	text91
 18796  0BAF                     __ptext91:	
 18797 ;; *************** function _handler_clock_ms *****************
 18798 ;; Defined at:
 18799 ;;		line 488 in file "main.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18817 ;;Total ram usage:        1 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; This function calls:
 18820 ;;		Nothing
 18821 ;; This function is called by:
 18822 ;;		_main
 18823 ;;		_TMR2_ISR
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           
 18828                           ;psect for function _handler_clock_ms
 18829  0BAF                     _handler_clock_ms:	
 18830  0BAF                     i1l4947:	
 18831                           ;incstack = 0
 18832                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 18833                           
 18834                           
 18835                           ;main.c: 489:     clkms++;
 18836  0BAF  3001               	movlw	1
 18837  0BB0  00F0               	movwf	??_handler_clock_ms
 18838  0BB1  0870               	movf	??_handler_clock_ms,w
 18839  0BB2  07FD               	addwf	_clkms,f	;volatile
 18840  0BB3                     i1l4949:	
 18841                           
 18842                           ;main.c: 491:     if(clkms > 200){
 18843  0BB3  30C9               	movlw	201
 18844  0BB4  027D               	subwf	_clkms,w	;volatile
 18845  0BB5  1C03               	skipc
 18846  0BB6  2BB8               	goto	u210_21
 18847  0BB7  2BB9               	goto	u210_20
 18848  0BB8                     u210_21:	
 18849  0BB8  2BBA               	goto	i1l1325
 18850  0BB9                     u210_20:	
 18851  0BB9                     i1l4951:	
 18852                           
 18853                           ;main.c: 492:         clkms = 0;
 18854  0BB9  01FD               	clrf	_clkms	;volatile
 18855  0BBA                     i1l1325:	
 18856  0BBA  0008               	return
 18857  0BBB                     __end_of_handler_clock_ms:	
 18858                           
 18859                           	psect	text92
 18860  0CE6                     __ptext92:	
 18861 ;; *************** function _TMR1_ISR *****************
 18862 ;; Defined at:
 18863 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 18864 ;; Parameters:    Size  Location     Type
 18865 ;;		None
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;		None
 18868 ;; Return value:  Size  Location     Type
 18869 ;;                  1    wreg      void 
 18870 ;; Registers used:
 18871 ;;		wreg, status,2, status,0, pclath, cstack
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18881 ;;Total ram usage:        0 bytes
 18882 ;; Hardware stack levels used:    1
 18883 ;; Hardware stack levels required when called:    1
 18884 ;; This function calls:
 18885 ;;		Absolute function
 18886 ;;		_TMR1_DefaultInterruptHandler
 18887 ;;		_TMR1_WriteTimer
 18888 ;;		_handler_clock_hms
 18889 ;; This function is called by:
 18890 ;;		_INTERRUPT_InterruptManager
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           
 18895                           ;psect for function _TMR1_ISR
 18896  0CE6                     _TMR1_ISR:	
 18897  0CE6                     i1l5095:	
 18898                           ;incstack = 0
 18899                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18900                           
 18901                           
 18902                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 18903  0CE6  002E               	movlb	14	; select bank14
 18904  0CE7  1010               	bcf	16,0	;volatile
 18905  0CE8                     i1l5097:	
 18906                           
 18907                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 18908  0CE8  0020               	movlb	0	; select bank0
 18909  0CE9  0867               	movf	_timer1ReloadVal+1,w	;volatile
 18910  0CEA  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18911  0CEB  0866               	movf	_timer1ReloadVal,w	;volatile
 18912  0CEC  00F0               	movwf	TMR1_WriteTimer@timerVal
 18913  0CED  318C  243A  318C   	fcall	_TMR1_WriteTimer
 18914  0CF0                     i1l5099:	
 18915                           
 18916                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 18917  0CF0  0020               	movlb	0	; select bank0
 18918  0CF1  0864               	movf	_TMR1_InterruptHandler,w
 18919  0CF2  0465               	iorwf	_TMR1_InterruptHandler+1,w
 18920  0CF3  1903               	btfsc	3,2
 18921  0CF4  2CF6               	goto	u231_21
 18922  0CF5  2CF7               	goto	u231_20
 18923  0CF6                     u231_21:	
 18924  0CF6  2CFC               	goto	i1l896
 18925  0CF7                     u231_20:	
 18926  0CF7                     i1l5101:	
 18927                           
 18928                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 18929  0CF7  0865               	movf	_TMR1_InterruptHandler+1,w
 18930  0CF8  008A               	movwf	10
 18931  0CF9  0864               	movf	_TMR1_InterruptHandler,w
 18932  0CFA  000A               	callw
 18933  0CFB  318C               	pagesel	$
 18934  0CFC                     i1l896:	
 18935  0CFC  0008               	return
 18936  0CFD                     __end_of_TMR1_ISR:	
 18937                           
 18938                           	psect	text93
 18939  0A97                     __ptext93:	
 18940 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18941 ;; Defined at:
 18942 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18943 ;; Parameters:    Size  Location     Type
 18944 ;;		None
 18945 ;; Auto vars:     Size  Location     Type
 18946 ;;		None
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  1    wreg      void 
 18949 ;; Registers used:
 18950 ;;		None
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/0
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18960 ;;Total ram usage:        0 bytes
 18961 ;; Hardware stack levels used:    1
 18962 ;; This function calls:
 18963 ;;		Nothing
 18964 ;; This function is called by:
 18965 ;;		_TMR1_Initialize
 18966 ;;		_TMR1_ISR
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970                           
 18971                           ;psect for function _TMR1_DefaultInterruptHandler
 18972  0A97                     _TMR1_DefaultInterruptHandler:	
 18973  0A97                     i1l902:	
 18974                           ;incstack = 0
 18975                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18976                           
 18977  0A97  0008               	return
 18978  0A98                     __end_of_TMR1_DefaultInterruptHandler:	
 18979                           
 18980                           	psect	text94
 18981  0F4D                     __ptext94:	
 18982 ;; *************** function _handler_clock_hms *****************
 18983 ;; Defined at:
 18984 ;;		line 469 in file "main.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;		None
 18987 ;; Auto vars:     Size  Location     Type
 18988 ;;		None
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      void 
 18991 ;; Registers used:
 18992 ;;		wreg, status,2, status,0
 18993 ;; Tracked objects:
 18994 ;;		On entry : 0/0
 18995 ;;		On exit  : 0/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19002 ;;Total ram usage:        1 bytes
 19003 ;; Hardware stack levels used:    1
 19004 ;; This function calls:
 19005 ;;		Nothing
 19006 ;; This function is called by:
 19007 ;;		_main
 19008 ;;		_TMR1_ISR
 19009 ;; This function uses a non-reentrant model
 19010 ;;
 19011                           
 19012                           
 19013                           ;psect for function _handler_clock_hms
 19014  0F4D                     _handler_clock_hms:	
 19015  0F4D                     i1l4927:	
 19016                           ;incstack = 0
 19017                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 19018                           
 19019                           
 19020                           ;main.c: 471:     if(!config_mode){
 19021  0F4D  0020               	movlb	0	; select bank0
 19022  0F4E  0839               	movf	_config_mode,w	;volatile
 19023  0F4F  1D03               	btfss	3,2
 19024  0F50  2F52               	goto	u205_21
 19025  0F51  2F53               	goto	u205_20
 19026  0F52                     u205_21:	
 19027  0F52  2F5E               	goto	i1l4931
 19028  0F53                     u205_20:	
 19029  0F53                     i1l4929:	
 19030  0F53  1003               	clrc
 19031  0F54  1F96               	btfss	22,7	;volatile
 19032  0F55  1403               	setc
 19033  0F56  1803               	btfsc	3,0
 19034  0F57  2F59               	goto	u206_21
 19035  0F58  2F5C               	goto	u206_20
 19036  0F59                     u206_21:	
 19037  0F59  0020               	movlb	0	; select bank0
 19038  0F5A  1796               	bsf	22,7	;volatile
 19039  0F5B  2F5E               	goto	u207_24
 19040  0F5C                     u206_20:	
 19041  0F5C  0020               	movlb	0	; select bank0
 19042  0F5D  1396               	bcf	22,7	;volatile
 19043  0F5E                     u207_24:	
 19044  0F5E                     i1l4931:	
 19045                           
 19046                           ;main.c: 475:     last5s++;
 19047  0F5E  3001               	movlw	1
 19048  0F5F  00F0               	movwf	??_handler_clock_hms
 19049  0F60  0870               	movf	??_handler_clock_hms,w
 19050  0F61  07BC               	addwf	_last5s,f	;volatile
 19051  0F62                     i1l4933:	
 19052                           
 19053                           ;main.c: 476:     seg++;
 19054  0F62  3001               	movlw	1
 19055  0F63  00F0               	movwf	??_handler_clock_hms
 19056  0F64  0870               	movf	??_handler_clock_hms,w
 19057  0F65  07BF               	addwf	_seg,f	;volatile
 19058  0F66                     i1l4935:	
 19059                           
 19060                           ;main.c: 477:     if(seg >= 60) {
 19061  0F66  303C               	movlw	60
 19062  0F67  023F               	subwf	_seg,w	;volatile
 19063  0F68  1C03               	skipc
 19064  0F69  2F6B               	goto	u208_21
 19065  0F6A  2F6C               	goto	u208_20
 19066  0F6B                     u208_21:	
 19067  0F6B  2F80               	goto	i1l1321
 19068  0F6C                     u208_20:	
 19069  0F6C                     i1l4937:	
 19070                           
 19071                           ;main.c: 478:         clkm++;
 19072  0F6C  3001               	movlw	1
 19073  0F6D  00F0               	movwf	??_handler_clock_hms
 19074  0F6E  0870               	movf	??_handler_clock_hms,w
 19075  0F6F  07C0               	addwf	_clkm,f	;volatile
 19076                           
 19077                           ;main.c: 479:         last1m++;
 19078  0F70  3001               	movlw	1
 19079  0F71  00F0               	movwf	??_handler_clock_hms
 19080  0F72  0870               	movf	??_handler_clock_hms,w
 19081  0F73  07BB               	addwf	_last1m,f	;volatile
 19082  0F74                     i1l4939:	
 19083                           
 19084                           ;main.c: 480:         seg = 0;
 19085  0F74  01BF               	clrf	_seg	;volatile
 19086  0F75                     i1l4941:	
 19087                           
 19088                           ;main.c: 481:         if(clkm >= 60) {
 19089  0F75  303C               	movlw	60
 19090  0F76  0240               	subwf	_clkm,w	;volatile
 19091  0F77  1C03               	skipc
 19092  0F78  2F7A               	goto	u209_21
 19093  0F79  2F7B               	goto	u209_20
 19094  0F7A                     u209_21:	
 19095  0F7A  2F80               	goto	i1l1321
 19096  0F7B                     u209_20:	
 19097  0F7B                     i1l4943:	
 19098                           
 19099                           ;main.c: 482:             clkh++;
 19100  0F7B  3001               	movlw	1
 19101  0F7C  00F0               	movwf	??_handler_clock_hms
 19102  0F7D  0870               	movf	??_handler_clock_hms,w
 19103  0F7E  07C1               	addwf	_clkh,f	;volatile
 19104  0F7F                     i1l4945:	
 19105                           
 19106                           ;main.c: 483:             clkm = 0;
 19107  0F7F  01C0               	clrf	_clkm	;volatile
 19108  0F80                     i1l1321:	
 19109  0F80  0008               	return
 19110  0F81                     __end_of_handler_clock_hms:	
 19111                           
 19112                           	psect	text95
 19113  0C3A                     __ptext95:	
 19114 ;; *************** function _TMR1_WriteTimer *****************
 19115 ;; Defined at:
 19116 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;  timerVal        2    0[COMMON] unsigned short 
 19119 ;; Auto vars:     Size  Location     Type
 19120 ;;		None
 19121 ;; Return value:  Size  Location     Type
 19122 ;;                  1    wreg      void 
 19123 ;; Registers used:
 19124 ;;		wreg, status,2
 19125 ;; Tracked objects:
 19126 ;;		On entry : 0/0
 19127 ;;		On exit  : 0/0
 19128 ;;		Unchanged: 0/0
 19129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19134 ;;Total ram usage:        2 bytes
 19135 ;; Hardware stack levels used:    1
 19136 ;; This function calls:
 19137 ;;		Nothing
 19138 ;; This function is called by:
 19139 ;;		_TMR1_ISR
 19140 ;;		_TMR1_Reload
 19141 ;; This function uses a non-reentrant model
 19142 ;;
 19143                           
 19144                           
 19145                           ;psect for function _TMR1_WriteTimer
 19146  0C3A                     _TMR1_WriteTimer:	
 19147  0C3A                     i1l4831:	
 19148                           ;incstack = 0
 19149                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 19150                           
 19151                           
 19152                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 19153  0C3A  0024               	movlb	4	; select bank4
 19154  0C3B  1D0E               	btfss	14,2	;volatile
 19155  0C3C  2C3E               	goto	u198_21
 19156  0C3D  2C3F               	goto	u198_20
 19157  0C3E                     u198_21:	
 19158  0C3E  2C46               	goto	i1l4841
 19159  0C3F                     u198_20:	
 19160  0C3F                     i1l4833:	
 19161                           
 19162                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 19163  0C3F  100E               	bcf	14,0	;volatile
 19164  0C40                     i1l4835:	
 19165                           
 19166                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 19167  0C40  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 19168  0C41  008D               	movwf	13	;volatile
 19169  0C42                     i1l4837:	
 19170                           
 19171                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 19172  0C42  0870               	movf	TMR1_WriteTimer@timerVal,w
 19173  0C43  008C               	movwf	12	;volatile
 19174  0C44                     i1l4839:	
 19175                           
 19176                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 19177  0C44  140E               	bsf	14,0	;volatile
 19178                           
 19179                           ;mcc_generated_files/tmr1.c: 140:     }
 19180  0C45  2C4A               	goto	i1l883
 19181  0C46                     i1l4841:	
 19182                           
 19183                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 19184  0C46  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 19185  0C47  008D               	movwf	13	;volatile
 19186  0C48                     i1l4843:	
 19187                           
 19188                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 19189  0C48  0870               	movf	TMR1_WriteTimer@timerVal,w
 19190  0C49  008C               	movwf	12	;volatile
 19191  0C4A                     i1l883:	
 19192  0C4A  0008               	return
 19193  0C4B                     __end_of_TMR1_WriteTimer:	
 19194                           
 19195                           	psect	text96
 19196  0BFC                     __ptext96:	
 19197 ;; *************** function _TMR0_ISR *****************
 19198 ;; Defined at:
 19199 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;		None
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  1    wreg      void 
 19206 ;; Registers used:
 19207 ;;		wreg, status,2, status,0, pclath, cstack
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/0
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:    2
 19220 ;; This function calls:
 19221 ;;		Absolute function
 19222 ;;		_ISR_3s
 19223 ;;		_TMR0_DefaultInterruptHandler
 19224 ;; This function is called by:
 19225 ;;		_INTERRUPT_InterruptManager
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           
 19230                           ;psect for function _TMR0_ISR
 19231  0BFC                     _TMR0_ISR:	
 19232  0BFC                     i1l5089:	
 19233                           ;incstack = 0
 19234                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 19235                           
 19236                           
 19237                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 19238  0BFC  002E               	movlb	14	; select bank14
 19239  0BFD  128C               	bcf	12,5	;volatile
 19240  0BFE                     i1l5091:	
 19241                           
 19242                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 19243  0BFE  0021               	movlb	1	; select bank1
 19244  0BFF  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 19245  0C00  0449               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 19246  0C01  1903               	btfsc	3,2
 19247  0C02  2C04               	goto	u230_21
 19248  0C03  2C05               	goto	u230_20
 19249  0C04                     u230_21:	
 19250  0C04  2C0A               	goto	i1l1625
 19251  0C05                     u230_20:	
 19252  0C05                     i1l5093:	
 19253                           
 19254                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 19255  0C05  0849               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 19256  0C06  008A               	movwf	10
 19257  0C07  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 19258  0C08  000A               	callw
 19259  0C09  318B               	pagesel	$
 19260  0C0A                     i1l1625:	
 19261  0C0A  0008               	return
 19262  0C0B                     __end_of_TMR0_ISR:	
 19263                           
 19264                           	psect	text97
 19265  0D2D                     __ptext97:	
 19266 ;; *************** function _ISR_3s *****************
 19267 ;; Defined at:
 19268 ;;		line 131 in file "main.c"
 19269 ;; Parameters:    Size  Location     Type
 19270 ;;		None
 19271 ;; Auto vars:     Size  Location     Type
 19272 ;;		None
 19273 ;; Return value:  Size  Location     Type
 19274 ;;                  1    wreg      void 
 19275 ;; Registers used:
 19276 ;;		wreg, status,2, status,0, pclath, cstack
 19277 ;; Tracked objects:
 19278 ;;		On entry : 0/0
 19279 ;;		On exit  : 0/0
 19280 ;;		Unchanged: 0/0
 19281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19286 ;;Total ram usage:        1 bytes
 19287 ;; Hardware stack levels used:    1
 19288 ;; Hardware stack levels required when called:    1
 19289 ;; This function calls:
 19290 ;;		_TMR0_StopTimer
 19291 ;;		i1_PWM6_LoadDutyValue
 19292 ;; This function is called by:
 19293 ;;		_main
 19294 ;;		_TMR0_ISR
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           
 19299                           ;psect for function _ISR_3s
 19300  0D2D                     _ISR_3s:	
 19301  0D2D                     i1l4845:	
 19302                           ;incstack = 0
 19303                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 19304                           
 19305                           
 19306                           ;main.c: 133:     if (lum_threshold){
 19307  0D2D  0020               	movlb	0	; select bank0
 19308  0D2E  0820               	movf	_lum_threshold,w
 19309  0D2F  0421               	iorwf	_lum_threshold+1,w
 19310  0D30  1903               	btfsc	3,2
 19311  0D31  2D33               	goto	u199_21
 19312  0D32  2D34               	goto	u199_20
 19313  0D33                     u199_21:	
 19314  0D33  2D40               	goto	i1l1211
 19315  0D34                     u199_20:	
 19316  0D34                     i1l4847:	
 19317                           
 19318                           ;main.c: 134:         PWM6_LoadDutyValue(1023);
 19319  0D34  30FF               	movlw	255
 19320  0D35  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 19321  0D36  3003               	movlw	3
 19322  0D37  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 19323  0D38  318C  24A4  318D   	fcall	i1_PWM6_LoadDutyValue
 19324  0D3B                     i1l4849:	
 19325                           
 19326                           ;main.c: 135:         alarm = 1;
 19327  0D3B  3001               	movlw	1
 19328  0D3C  00F4               	movwf	??_ISR_3s
 19329  0D3D  0874               	movf	??_ISR_3s,w
 19330  0D3E  0020               	movlb	0	; select bank0
 19331  0D3F  00B8               	movwf	_alarm	;volatile
 19332  0D40                     i1l1211:	
 19333                           ;main.c: 137:     }
 19334                           
 19335                           
 19336                           ;main.c: 139:     TMR0_StopTimer();
 19337  0D40  318A  229E  318D   	fcall	_TMR0_StopTimer
 19338  0D43                     i1l4851:	
 19339                           
 19340                           ;main.c: 140:     PIE0bits.TMR0IE = 0;
 19341  0D43  002E               	movlb	14	; select bank14
 19342  0D44  1296               	bcf	22,5	;volatile
 19343  0D45                     i1l1212:	
 19344  0D45  0008               	return
 19345  0D46                     __end_of_ISR_3s:	
 19346                           
 19347                           	psect	text98
 19348  0A96                     __ptext98:	
 19349 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 19350 ;; Defined at:
 19351 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;		None
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;		None
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  1    wreg      void 
 19358 ;; Registers used:
 19359 ;;		None
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/0
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19369 ;;Total ram usage:        0 bytes
 19370 ;; Hardware stack levels used:    1
 19371 ;; This function calls:
 19372 ;;		Nothing
 19373 ;; This function is called by:
 19374 ;;		_TMR0_Initialize
 19375 ;;		_TMR0_ISR
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           
 19380                           ;psect for function _TMR0_DefaultInterruptHandler
 19381  0A96                     _TMR0_DefaultInterruptHandler:	
 19382  0A96                     i1l1631:	
 19383                           ;incstack = 0
 19384                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 19385                           
 19386  0A96  0008               	return
 19387  0A97                     __end_of_TMR0_DefaultInterruptHandler:	
 19388                           
 19389                           	psect	text99
 19390  0A9E                     __ptext99:	
 19391 ;; *************** function _TMR0_StopTimer *****************
 19392 ;; Defined at:
 19393 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 19394 ;; Parameters:    Size  Location     Type
 19395 ;;		None
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;		None
 19398 ;; Return value:  Size  Location     Type
 19399 ;;                  1    wreg      void 
 19400 ;; Registers used:
 19401 ;;		None
 19402 ;; Tracked objects:
 19403 ;;		On entry : 0/0
 19404 ;;		On exit  : 0/0
 19405 ;;		Unchanged: 0/0
 19406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19411 ;;Total ram usage:        0 bytes
 19412 ;; Hardware stack levels used:    1
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		_ISR_3s
 19417 ;; This function uses a non-reentrant model
 19418 ;;
 19419                           
 19420                           
 19421                           ;psect for function _TMR0_StopTimer
 19422  0A9E                     _TMR0_StopTimer:	
 19423  0A9E                     i1l4427:	
 19424                           ;incstack = 0
 19425                           ; Regs used in _TMR0_StopTimer: []
 19426                           
 19427                           
 19428                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 19429  0A9E  0020               	movlb	0	; select bank0
 19430  0A9F  139E               	bcf	30,7	;volatile
 19431  0AA0                     i1l1612:	
 19432  0AA0  0008               	return
 19433  0AA1                     __end_of_TMR0_StopTimer:	
 19434                           
 19435                           	psect	text100
 19436  0AF2                     __ptext100:	
 19437 ;; *************** function _INT_ISR *****************
 19438 ;; Defined at:
 19439 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 19440 ;; Parameters:    Size  Location     Type
 19441 ;;		None
 19442 ;; Auto vars:     Size  Location     Type
 19443 ;;		None
 19444 ;; Return value:  Size  Location     Type
 19445 ;;                  1    wreg      void 
 19446 ;; Registers used:
 19447 ;;		wreg, status,2, status,0, pclath, cstack
 19448 ;; Tracked objects:
 19449 ;;		On entry : 0/0
 19450 ;;		On exit  : 0/0
 19451 ;;		Unchanged: 0/0
 19452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19457 ;;Total ram usage:        0 bytes
 19458 ;; Hardware stack levels used:    1
 19459 ;; Hardware stack levels required when called:    3
 19460 ;; This function calls:
 19461 ;;		_INT_CallBack
 19462 ;; This function is called by:
 19463 ;;		_INTERRUPT_InterruptManager
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           
 19468                           ;psect for function _INT_ISR
 19469  0AF2                     _INT_ISR:	
 19470  0AF2                     i1l5085:	
 19471                           ;incstack = 0
 19472                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 19473                           
 19474                           
 19475                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 19476  0AF2  002E               	movlb	14	; select bank14
 19477  0AF3  100C               	bcf	12,0	;volatile
 19478  0AF4                     i1l5087:	
 19479                           
 19480                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 19481  0AF4  318B  23C7  318A   	fcall	_INT_CallBack
 19482  0AF7                     i1l334:	
 19483  0AF7  0008               	return
 19484  0AF8                     __end_of_INT_ISR:	
 19485                           
 19486                           	psect	text101
 19487  0BC7                     __ptext101:	
 19488 ;; *************** function _INT_CallBack *****************
 19489 ;; Defined at:
 19490 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 19491 ;; Parameters:    Size  Location     Type
 19492 ;;		None
 19493 ;; Auto vars:     Size  Location     Type
 19494 ;;		None
 19495 ;; Return value:  Size  Location     Type
 19496 ;;                  1    wreg      void 
 19497 ;; Registers used:
 19498 ;;		wreg, status,2, status,0, pclath, cstack
 19499 ;; Tracked objects:
 19500 ;;		On entry : 0/0
 19501 ;;		On exit  : 0/0
 19502 ;;		Unchanged: 0/0
 19503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19508 ;;Total ram usage:        0 bytes
 19509 ;; Hardware stack levels used:    1
 19510 ;; Hardware stack levels required when called:    2
 19511 ;; This function calls:
 19512 ;;		Absolute function
 19513 ;;		_INT_DefaultInterruptHandler
 19514 ;;		_sw1_EXT
 19515 ;; This function is called by:
 19516 ;;		_INT_ISR
 19517 ;; This function uses a non-reentrant model
 19518 ;;
 19519                           
 19520                           
 19521                           ;psect for function _INT_CallBack
 19522  0BC7                     _INT_CallBack:	
 19523  0BC7                     i1l4689:	
 19524                           ;incstack = 0
 19525                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 19526                           
 19527                           
 19528                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 19529  0BC7  0020               	movlb	0	; select bank0
 19530  0BC8  0868               	movf	_INT_InterruptHandler,w
 19531  0BC9  0469               	iorwf	_INT_InterruptHandler+1,w
 19532  0BCA  1903               	btfsc	3,2
 19533  0BCB  2BCD               	goto	u197_21
 19534  0BCC  2BCE               	goto	u197_20
 19535  0BCD                     u197_21:	
 19536  0BCD  2BD3               	goto	i1l338
 19537  0BCE                     u197_20:	
 19538  0BCE                     i1l4691:	
 19539                           
 19540                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 19541  0BCE  0869               	movf	_INT_InterruptHandler+1,w
 19542  0BCF  008A               	movwf	10
 19543  0BD0  0868               	movf	_INT_InterruptHandler,w
 19544  0BD1  000A               	callw
 19545  0BD2  318B               	pagesel	$
 19546  0BD3                     i1l338:	
 19547  0BD3  0008               	return
 19548  0BD4                     __end_of_INT_CallBack:	
 19549                           
 19550                           	psect	text102
 19551  0A95                     __ptext102:	
 19552 ;; *************** function _INT_DefaultInterruptHandler *****************
 19553 ;; Defined at:
 19554 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;		None
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  1    wreg      void 
 19561 ;; Registers used:
 19562 ;;		None
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19572 ;;Total ram usage:        0 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; This function calls:
 19575 ;;		Nothing
 19576 ;; This function is called by:
 19577 ;;		_EXT_INT_Initialize
 19578 ;;		_INT_CallBack
 19579 ;; This function uses a non-reentrant model
 19580 ;;
 19581                           
 19582                           
 19583                           ;psect for function _INT_DefaultInterruptHandler
 19584  0A95                     _INT_DefaultInterruptHandler:	
 19585  0A95                     i1l344:	
 19586                           ;incstack = 0
 19587                           ; Regs used in _INT_DefaultInterruptHandler: []
 19588                           
 19589  0A95  0008               	return
 19590  0A96                     __end_of_INT_DefaultInterruptHandler:	
 19591                           
 19592                           	psect	text103
 19593  0EEC                     __ptext103:	
 19594 ;; *************** function _sw1_EXT *****************
 19595 ;; Defined at:
 19596 ;;		line 99 in file "main.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;		None
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;		None
 19601 ;; Return value:  Size  Location     Type
 19602 ;;                  1    wreg      void 
 19603 ;; Registers used:
 19604 ;;		wreg, status,2, status,0, pclath, cstack
 19605 ;; Tracked objects:
 19606 ;;		On entry : 0/0
 19607 ;;		On exit  : 0/0
 19608 ;;		Unchanged: 0/0
 19609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19614 ;;Total ram usage:        1 bytes
 19615 ;; Hardware stack levels used:    1
 19616 ;; Hardware stack levels required when called:    1
 19617 ;; This function calls:
 19618 ;;		i1_PWM6_LoadDutyValue
 19619 ;;		i1_checkDebounceSW1
 19620 ;; This function is called by:
 19621 ;;		_main
 19622 ;;		_INT_CallBack
 19623 ;; This function uses a non-reentrant model
 19624 ;;
 19625                           
 19626                           
 19627                           ;psect for function _sw1_EXT
 19628  0EEC                     _sw1_EXT:	
 19629  0EEC                     i1l4411:	
 19630                           ;incstack = 0
 19631                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 19632                           
 19633                           
 19634                           ;main.c: 102:     if(checkDebounceSW1()){
 19635  0EEC  3186  261C  318E   	fcall	i1_checkDebounceSW1
 19636  0EEF  3A00               	xorlw	0
 19637  0EF0  1903               	skipnz
 19638  0EF1  2EF3               	goto	u180_21
 19639  0EF2  2EF4               	goto	u180_20
 19640  0EF3                     u180_21:	
 19641  0EF3  2F19               	goto	i1l1208
 19642  0EF4                     u180_20:	
 19643  0EF4                     i1l4413:	
 19644                           
 19645                           ;main.c: 103:         if (alarm == 1){
 19646  0EF4  0020               	movlb	0	; select bank0
 19647  0EF5  0338               	decf	_alarm,w	;volatile
 19648  0EF6  1D03               	btfss	3,2
 19649  0EF7  2EF9               	goto	u181_21
 19650  0EF8  2EFA               	goto	u181_20
 19651  0EF9                     u181_21:	
 19652  0EF9  2F08               	goto	i1l1202
 19653  0EFA                     u181_20:	
 19654  0EFA                     i1l4415:	
 19655                           
 19656                           ;main.c: 104:             alarm = 0;
 19657  0EFA  01B8               	clrf	_alarm	;volatile
 19658  0EFB                     i1l4417:	
 19659  0EFB  1316               	bcf	22,6	;volatile
 19660  0EFC                     i1l4419:	
 19661                           
 19662                           ;main.c: 106:             PWM6_LoadDutyValue(0);
 19663  0EFC  3000               	movlw	0
 19664  0EFD  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 19665  0EFE  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 19666  0EFF  318C  24A4  318E   	fcall	i1_PWM6_LoadDutyValue
 19667  0F02                     i1l4421:	
 19668                           
 19669                           ;main.c: 107:             last_ms = clkms;
 19670  0F02  087D               	movf	_clkms,w	;volatile
 19671  0F03  00F7               	movwf	??_sw1_EXT
 19672  0F04  0877               	movf	??_sw1_EXT,w
 19673  0F05  0020               	movlb	0	; select bank0
 19674  0F06  00BE               	movwf	_last_ms
 19675                           
 19676                           ;main.c: 108:         }
 19677  0F07  2F15               	goto	i1l1205
 19678  0F08                     i1l1202:	
 19679                           ;main.c: 109:         else{
 19680                           
 19681                           
 19682                           ;main.c: 110:             if(!PORTBbits.RB4){
 19683  0F08  1A0D               	btfsc	13,4	;volatile
 19684  0F09  2F0B               	goto	u182_21
 19685  0F0A  2F0C               	goto	u182_20
 19686  0F0B                     u182_21:	
 19687  0F0B  2F15               	goto	i1l1205
 19688  0F0C                     u182_20:	
 19689  0F0C                     i1l4423:	
 19690                           
 19691                           ;main.c: 112:                 if(config_mode == 0){
 19692  0F0C  0839               	movf	_config_mode,w	;volatile
 19693  0F0D  1D03               	btfss	3,2
 19694  0F0E  2F10               	goto	u183_21
 19695  0F0F  2F11               	goto	u183_20
 19696  0F10                     u183_21:	
 19697  0F10  2F15               	goto	i1l1205
 19698  0F11                     u183_20:	
 19699  0F11                     i1l4425:	
 19700                           
 19701                           ;main.c: 113:                     config_mode = 1;
 19702  0F11  3001               	movlw	1
 19703  0F12  00F7               	movwf	??_sw1_EXT
 19704  0F13  0877               	movf	??_sw1_EXT,w
 19705  0F14  00B9               	movwf	_config_mode	;volatile
 19706  0F15                     i1l1205:	
 19707                           ;main.c: 119:             }
 19708                           
 19709                           
 19710                           ;main.c: 120:             last_ms = clkms;
 19711  0F15  087D               	movf	_clkms,w	;volatile
 19712  0F16  00F7               	movwf	??_sw1_EXT
 19713  0F17  0877               	movf	??_sw1_EXT,w
 19714  0F18  00BE               	movwf	_last_ms
 19715  0F19                     i1l1208:	
 19716  0F19  0008               	return
 19717  0F1A                     __end_of_sw1_EXT:	
 19718                           
 19719                           	psect	text104
 19720  061C                     __ptext104:	
 19721 ;; *************** function i1_checkDebounceSW1 *****************
 19722 ;; Defined at:
 19723 ;;		line 526 in file "main.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;		None
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;		None
 19728 ;; Return value:  Size  Location     Type
 19729 ;;                  1    wreg      unsigned char 
 19730 ;; Registers used:
 19731 ;;		wreg, status,2, status,0
 19732 ;; Tracked objects:
 19733 ;;		On entry : 0/0
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19739 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19741 ;;Total ram usage:        7 bytes
 19742 ;; Hardware stack levels used:    1
 19743 ;; This function calls:
 19744 ;;		Nothing
 19745 ;; This function is called by:
 19746 ;;		_sw1_EXT
 19747 ;; This function uses a non-reentrant model
 19748 ;;
 19749                           
 19750                           
 19751                           ;psect for function i1_checkDebounceSW1
 19752  061C                     i1_checkDebounceSW1:	
 19753  061C                     i1l4249:	
 19754                           ;incstack = 0
 19755                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 19756                           
 19757                           
 19758                           ;main.c: 527:    PIE4bits.TMR1IE = 0;
 19759  061C  002E               	movlb	14	; select bank14
 19760  061D  101A               	bcf	26,0	;volatile
 19761  061E                     i1l4251:	
 19762                           
 19763                           ;main.c: 529:     if(clkms - last_ms < 0){
 19764  061E  087D               	movf	_clkms,w	;volatile
 19765  061F  00F0               	movwf	??i1_checkDebounceSW1
 19766  0620  01F1               	clrf	??i1_checkDebounceSW1+1
 19767  0621  0871               	movf	??i1_checkDebounceSW1+1,w
 19768  0622  00F3               	movwf	??i1_checkDebounceSW1+3
 19769  0623  0020               	movlb	0	; select bank0
 19770  0624  083E               	movf	_last_ms,w
 19771  0625  0270               	subwf	??i1_checkDebounceSW1,w
 19772  0626  00F2               	movwf	??i1_checkDebounceSW1+2
 19773  0627  1C03               	skipc
 19774  0628  03F3               	decf	??i1_checkDebounceSW1+3,f
 19775  0629  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 19776  062A  2E2C               	goto	u175_21
 19777  062B  2E2D               	goto	u175_20
 19778  062C                     u175_21:	
 19779  062C  2E53               	goto	i1l4261
 19780  062D                     u175_20:	
 19781  062D                     i1l4253:	
 19782                           
 19783                           ;main.c: 531:         if ((200 - last_ms)+ clkms > 2 ){
 19784  062D  087D               	movf	_clkms,w	;volatile
 19785  062E  00F0               	movwf	??i1_checkDebounceSW1
 19786  062F  01F1               	clrf	??i1_checkDebounceSW1+1
 19787  0630  0871               	movf	??i1_checkDebounceSW1+1,w
 19788  0631  00F3               	movwf	??i1_checkDebounceSW1+3
 19789  0632  083E               	movf	_last_ms,w
 19790  0633  0270               	subwf	??i1_checkDebounceSW1,w
 19791  0634  00F2               	movwf	??i1_checkDebounceSW1+2
 19792  0635  1C03               	skipc
 19793  0636  03F3               	decf	??i1_checkDebounceSW1+3,f
 19794  0637  0872               	movf	??i1_checkDebounceSW1+2,w
 19795  0638  3EC8               	addlw	200
 19796  0639  00F4               	movwf	??i1_checkDebounceSW1+4
 19797  063A  3000               	movlw	0
 19798  063B  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 19799  063C  00F5               	movwf	??i1_checkDebounceSW1+5
 19800  063D  0875               	movf	??i1_checkDebounceSW1+5,w
 19801  063E  3A80               	xorlw	128
 19802  063F  00F6               	movwf	??i1_checkDebounceSW1+6
 19803  0640  3080               	movlw	128
 19804  0641  0276               	subwf	??i1_checkDebounceSW1+6,w
 19805  0642  1D03               	skipz
 19806  0643  2E46               	goto	u176_25
 19807  0644  3003               	movlw	3
 19808  0645  0274               	subwf	??i1_checkDebounceSW1+4,w
 19809  0646                     u176_25:	
 19810  0646  1C03               	skipc
 19811  0647  2E49               	goto	u176_21
 19812  0648  2E4A               	goto	u176_20
 19813  0649                     u176_21:	
 19814  0649  2E53               	goto	i1l4261
 19815  064A                     u176_20:	
 19816  064A                     i1l4255:	
 19817                           
 19818                           ;main.c: 532:             last_ms = clkms;
 19819  064A  087D               	movf	_clkms,w	;volatile
 19820  064B  00F0               	movwf	??i1_checkDebounceSW1
 19821  064C  0870               	movf	??i1_checkDebounceSW1,w
 19822  064D  0020               	movlb	0	; select bank0
 19823  064E  00BE               	movwf	_last_ms
 19824  064F                     i1l4257:	
 19825                           
 19826                           ;main.c: 533:             PIE4bits.TMR1IE = 1;
 19827  064F  002E               	movlb	14	; select bank14
 19828  0650  141A               	bsf	26,0	;volatile
 19829                           
 19830                           ;main.c: 534:             return 1;
 19831  0651  3001               	movlw	1
 19832  0652  2E75               	goto	i1l1351
 19833  0653                     i1l4261:	
 19834                           
 19835                           ;main.c: 538:     if(clkms - last_ms < 2){
 19836  0653  087D               	movf	_clkms,w	;volatile
 19837  0654  00F0               	movwf	??i1_checkDebounceSW1
 19838  0655  01F1               	clrf	??i1_checkDebounceSW1+1
 19839  0656  0871               	movf	??i1_checkDebounceSW1+1,w
 19840  0657  00F3               	movwf	??i1_checkDebounceSW1+3
 19841  0658  0020               	movlb	0	; select bank0
 19842  0659  083E               	movf	_last_ms,w
 19843  065A  0270               	subwf	??i1_checkDebounceSW1,w
 19844  065B  00F2               	movwf	??i1_checkDebounceSW1+2
 19845  065C  1C03               	skipc
 19846  065D  03F3               	decf	??i1_checkDebounceSW1+3,f
 19847  065E  0873               	movf	??i1_checkDebounceSW1+3,w
 19848  065F  3A80               	xorlw	128
 19849  0660  00F4               	movwf	??i1_checkDebounceSW1+4
 19850  0661  3080               	movlw	128
 19851  0662  0274               	subwf	??i1_checkDebounceSW1+4,w
 19852  0663  1D03               	skipz
 19853  0664  2E67               	goto	u177_25
 19854  0665  3002               	movlw	2
 19855  0666  0272               	subwf	??i1_checkDebounceSW1+2,w
 19856  0667                     u177_25:	
 19857  0667  1803               	skipnc
 19858  0668  2E6A               	goto	u177_21
 19859  0669  2E6B               	goto	u177_20
 19860  066A                     u177_21:	
 19861  066A  2E6D               	goto	i1l4269
 19862  066B                     u177_20:	
 19863  066B                     i1l4263:	
 19864                           
 19865                           ;main.c: 539:         return 0;
 19866  066B  3000               	movlw	0
 19867  066C  2E75               	goto	i1l1351
 19868  066D                     i1l4269:	
 19869                           
 19870                           ;main.c: 542:         last_ms = clkms;
 19871  066D  087D               	movf	_clkms,w	;volatile
 19872  066E  00F0               	movwf	??i1_checkDebounceSW1
 19873  066F  0870               	movf	??i1_checkDebounceSW1,w
 19874  0670  0020               	movlb	0	; select bank0
 19875  0671  00BE               	movwf	_last_ms
 19876  0672                     i1l4271:	
 19877                           
 19878                           ;main.c: 543:         PIE4bits.TMR1IE = 1;
 19879  0672  002E               	movlb	14	; select bank14
 19880  0673  141A               	bsf	26,0	;volatile
 19881                           
 19882                           ;main.c: 544:         return 1;
 19883  0674  3001               	movlw	1
 19884  0675                     i1l1351:	
 19885  0675  0008               	return
 19886  0676                     __end_ofi1_checkDebounceSW1:	
 19887                           
 19888                           	psect	text105
 19889  0CA4                     __ptext105:	
 19890 ;; *************** function i1_PWM6_LoadDutyValue *****************
 19891 ;; Defined at:
 19892 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 19893 ;; Parameters:    Size  Location     Type
 19894 ;;  dutyValue       2    0[COMMON] unsigned short 
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;		None
 19897 ;; Return value:  Size  Location     Type
 19898 ;;                  1    wreg      void 
 19899 ;; Registers used:
 19900 ;;		wreg, status,2, status,0
 19901 ;; Tracked objects:
 19902 ;;		On entry : 0/0
 19903 ;;		On exit  : 0/0
 19904 ;;		Unchanged: 0/0
 19905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19910 ;;Total ram usage:        4 bytes
 19911 ;; Hardware stack levels used:    1
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		_sw1_EXT
 19916 ;;		_ISR_3s
 19917 ;; This function uses a non-reentrant model
 19918 ;;
 19919                           
 19920                           
 19921                           ;psect for function i1_PWM6_LoadDutyValue
 19922  0CA4                     i1_PWM6_LoadDutyValue:	
 19923  0CA4                     i1l4247:	
 19924                           ;incstack = 0
 19925                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 19926                           
 19927                           
 19928                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19929  0CA4  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 19930  0CA5  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 19931  0CA6  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 19932  0CA7  00F2               	movwf	??i1_PWM6_LoadDutyValue
 19933  0CA8  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 19934  0CA9  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 19935  0CAA  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 19936  0CAB  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 19937  0CAC  0872               	movf	??i1_PWM6_LoadDutyValue,w
 19938  0CAD  0027               	movlb	7	; select bank7
 19939  0CAE  008D               	movwf	13	;volatile
 19940                           
 19941                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 19942  0CAF  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 19943  0CB0  3903               	andlw	3
 19944  0CB1  00F2               	movwf	??i1_PWM6_LoadDutyValue
 19945  0CB2  3005               	movlw	5
 19946  0CB3                     u174_25:	
 19947  0CB3  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 19948  0CB4  3EFF               	addlw	-1
 19949  0CB5  1D03               	skipz
 19950  0CB6  2CB3               	goto	u174_25
 19951  0CB7  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 19952  0CB8  008C               	movwf	12	;volatile
 19953  0CB9                     i1l916:	
 19954  0CB9  0008               	return
 19955  0CBA                     __end_ofi1_PWM6_LoadDutyValue:	
 19956  007E                     btemp	set	126	;btemp
 19957  007E                     int$flags	set	126
 19958  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         71
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      74
    BANK1            80      6      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3632$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3638	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3637	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3632	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_push_ring
    _tsttc->_WriteI2C
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _mode_select_LED->_PWM6_LoadDutyValue
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   44292
                                             20 BANK0      5     5      0
                                              0 BANK1      6     6      0
                           _ADC_read
                   _DATAEE_WriteByte
                     _I2C_Initialize
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   13358
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4465
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   14078
                                             17 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    6433
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1326
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _I2C_Initialize
     _i2c1_driver_open
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      2C       7       55.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      84      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      84      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 20:27:56 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0B7A  
                          ___bmul@product 0049                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0AD9  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 0050                    increment_subfield@plus 004E  
                             __CFG_LVP$ON 0000                                       l341 0AFD  
                                     l442 0B67                                       l530 07A9  
                                     l347 0BFB                                       l445 0B4C  
                                     l439 0DAE                                       l760 0B44  
                                     l913 0BED                                       l594 0BC6  
                                     l763 0B1D                                       l916 0D5E  
                                     l757 0CCF                                       l766 0B5E  
                                     l960 0E6C                                       l963 07FF  
                                     l869 0DE9                                       l957 0E61  
                                     l959 0E65                                       l899 0B03  
                                     l998 0D2C                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0A9B  
                         _timer1ReloadVal 0066                                       _seg 003F  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0D15                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0D93  
                                    l1041 0B79                                      l1220 00A4  
                 ??_rd2RegCompleteHandler 007A                                      l1231 0163  
                                    l1223 00C8                                      l1304 0567  
                                    l1240 01FA                                      l1313 0D78  
                                    l1241 0230                                      l1307 0D92  
                                    l1420 0246                                      l1236 01DD  
                                    l1413 0B83                                      l1333 0B98  
                                    l1341 0BA3                                      l1502 0E08  
                                    l1351 061B                                      l1263 04A9  
                                    l1511 058E                                      l1431 027F  
                                    l1336 0B8D                                      l1432 0281  
                                    l1416 0235                                      l1273 0FFF  
                                    l1281 04E9                                      l1346 0BAE  
                                    l1506 05C1                                      l1450 02D5  
                                    l1267 0FCE                                      l1371 0E28  
                                    l1523 05BF                                      l1443 02BD  
                                    l1419 0244                                      l1292 050D  
                                    l1452 02D9                                      l1444 02C0  
                                    l1509 0589                                      l1606 0CA3  
                                    l1358 0716                                      l1278 04C0  
                                    l1518 05AB                                      l1295 051A  
                                    l1480 0366                                      l1456 02ED  
                                    l1609 0AB8                                      l1289 050C  
                                    l1481 0369                                      l1457 02EF  
                                    l1449 02D3                                      l1570 0FBF  
                                    l1490 0384                                      l1563 07F0  
                                    l1628 0B70                                      l1556 041C  
                                    l1468 0328                                      l1573 0C39  
                                    l1469 032A                                      l1486 037C  
                                    l1583 0DCA                                      l1487 037E  
                                    l6001 078C                                      l1809 0CE5  
                                    l1578 0E48                                      l1498 0E00  
                                    l6011 0796                                      l6003 078E  
                                    l1499 0E02                                      l6021 07A2  
                                    l6013 0798                                      l6005 0790  
                    _ADCC_StartConversion 0B3D                                      l6031 0B63  
                                    l6023 07A4                                      l6015 079A  
                                    l6007 0792                                      l6111 052B  
                                    l6103 0C2A                                      l6041 0CCC  
                                    l6033 0B66                                      l6025 07A6  
                                    l6017 079D                                      l6009 0794  
                                    l6121 0551                                      l6113 053B  
                                    l6105 050F                                      l6201 0593  
                                    l6043 0CCE                                      l6027 0B5F  
                                    l6019 079F                                      l6035 0BE1  
                                    l6051 0D1E                                      l6123 055A  
                                    l6115 0544                                      l6107 0518  
                                    l6131 0E11                                      l6211 05B0  
                                    l6301 0B82                                      l6029 0B62  
                                    l6037 0BE8                                      l6061 0DCE  
                                    l6053 0D20                                      l6045 0D15  
                                    l6125 055C                                      l6117 0546  
                                    l6109 0523                                      l6141 0E27  
                                    l6133 0E13                                      l6221 0E07  
                                    l6039 0CBA                                      l6071 0DDD  
                                    l6063 0DD0                                      l6055 0D21  
                                    l6047 0D1A                                      l6127 0565  
                                    l6119 054F                                      l6151 04C6  
                                    l6143 04AA                                      l6135 0E1B  
                                    l6231 0CDB                                      l6311 03E9  
                                    l6303 0385                                      l6207 0595  
                                    l6321 0D5F                                      l6081 0C95  
                                    l6073 0DDE                                      l6065 0DD2  
                                    l6057 0D29                                      l6049 0D1B  
                                    l6153 04CA                                      l6161 04D6  
                                    l6145 04AF                                      l6137 0E1D  
                                    l6129 0E09                                      l6233 0CDD  
                                    l6225 0CD2                                      l6313 03F5  
                                    l6305 0392                                      l6217 0DEA  
                                    l6209 05A0                                      l6091 0B42  
                                    l6323 0D64                                      l6331 0D79  
                                    l6083 0C97                                      l6075 0DE6  
                                    l6067 0DD4                                      l6059 0DCB  
                                    l6171 0502                                      l6163 04EE  
                                    l6155 04CE                                      l6147 04B3  
                                    l6139 0E25                                      l6411 07B9  
                                    l6235 0CE4                                      l6227 0CD3  
                                    l6403 0FB5                                      l6315 0401  
                                    l6307 03A4                                      l6219 0DF5  
                                    l6093 0B43                                      l6325 0D68  
                                    l6085 0C98                                      l6077 0C8F  
                                    l6069 0DDB                                      l6165 04F6  
                                    l6157 04D2                                      l6149 04BB  
                                    l6421 07C7                                      l6229 0CD7  
                                    l6181 0DB4                                      l6317 040D  
                                    l6309 03E6                                      l6341 026C  
                                    l6333 0235                                      l6095 0B17  
                                    l6327 0D70                                      l6087 0CA0  
                                    l6079 0C94                                      l6167 04FB  
                                    l6431 041D                                      l6423 07DE  
                                    l6407 07AC                                      l6183 0DBC  
                                    l6319 0419                                      l6351 02A7  
                                    l6343 0270                                      l6335 024A  
                                    l6089 0B3F                                      l6281 0D9C  
                                    l5801 0D46                                      l6169 04FE  
                                    l6441 0436                                      l6433 0420  
                                    l6425 07E6                                      l6417 07BA  
                                    l6409 07B4                                      l6185 0DC1  
                                    l6177 0DAF                                      l6361 0302  
                                    l6353 02AE                                      l6345 0285  
                                    l6337 0259                                      l6601 00AA  
                                    l6099 0B56                                      l6291 0DAB  
                                    l6283 0D9F                                      l6275 0D93  
                                    l6451 0450                                      l6443 0439  
                                    l6435 0424                                      l6427 07EA  
                                    l6419 07C3                                      l5811 07FB  
                                    l5803 07F1                                      l6195 0572  
                                    l6187 056A                                      l6371 033D  
                                    l6363 0306                                      l6355 02C4  
                                    l6347 0294                                      l6339 025D  
                                    l6611 00B2                                      l6603 00AB  
                                    l6293 0B7A                                      l6285 0DA2  
                                    l6277 0D96                                      l6429 0AB6  
                                    l5821 05C4                                      l5901 0B86  
                                    l6453 0454                                      l6461 0461  
                                    l6445 043E                                      l6437 0428  
                                    l5813 07FC                                      l5805 07F5  
                                    l6197 057C                                      l6189 056D  
                                    l6381 0382                                      l6373 0341  
                                    l6365 0315                                      l6357 02DE  
                                    l6349 0298                                      l6701 01CE  
                                    l6621 00C2                                      l6613 00B4  
                                    l6605 00AD                                      l6295 0B7D  
                                    l6287 0DA5                                      l6279 0D99  
                                    l5823 05D3                                      l5831 05F9  
                                    l5903 0B99                                      l5911 0BA6  
                                    l6471 048A                                      l6455 0458  
                                    l6447 0446                                      l6463 0474  
                                    l6439 0430                                      l5815 07FD  
                                    l5807 07F9                                      l6391 0F8E  
                                    l6199 0587                                      l6375 0350  
                                    l6367 0319                                      l6359 02F3  
                                    l6711 01E5                                      l6703 01D4  
                                    l6631 00CA                                      l6623 00C4  
                                    l6615 00B5                                      l6607 00AE  
                                    l6297 0B7F                                      l6289 0DA8  
                                    l5841 0618                                      l5833 0611  
                                    l5825 05F0                                      l5921 0FD2  
                                    l5905 0B9B                                      l5913 0BAC  
                                    l6481 04A1                                      l6473 048D  
                                    l6457 045C                                      l6449 044C  
                                    l6465 0479                                      l5809 07FA  
                                    l6393 0F9B                                      l6385 0F83  
                                    l6377 0357                                      l6369 032E  
                                    l6721 0202                                      l6713 01E8  
                                    l6705 01DA                                      l6641 00DE  
                                    l6633 00CC                                      l6625 00C6  
                                    l6617 00B8                                      l6609 00B0  
                                    l6299 0B80                                      l5827 05F5  
                                    l5819 05C2                                      l5931 0FF3  
                                    l5923 0FDA                                      l5915 0FC0  
                                    l5907 0BA1                                      l6475 0494  
                                    l6467 047D                                      l6395 0FA1  
                                    l6387 0F83                                      l6379 036D  
                                    l6731 021E                                      l6723 0203  
                                    l6715 01EA                                      l6651 00FB  
                                    l6707 01DE                                      l6643 00E0  
                                    l6635 00D2                                      l6627 00C7  
                                    l6619 00BB                                      l5853 06FD  
                                    l5845 06CA                                      l5925 0FDF  
                                    l5933 0FF8                                      l5917 0FC5  
                                    l5909 0BA4                                      l6469 0485  
                                    l6477 0497                                      l6397 0FA8  
                                    l6389 0F89                                      l6733 022C  
                                    l6725 0208                                      l6717 01F3  
                                    l6709 01E3                                      l6661 010F  
                                    l6653 0102                                      l6645 00E2  
                                    l6637 00D4                                      l6629 00C9  
                                    l5839 0613                                      l5855 0715  
                                    l5847 06D9                                      l5927 0FE6  
                                    l5919 0FC7                                      l6479 049B  
                                    l6903 0466                                      l5871 0E51  
                                    l6399 0FB3                                      l5943 0E2F  
                                    l5935 0E29                                      l6727 020E  
                                    l6719 01FC                                      l6671 012E  
                                    l6663 0112                                      l6655 0106  
                                    l6647 00E8                                      l6639 00DC  
                                    l6591 007E                                      l5953 0BBB  
                                    l5865 0AF8                                      l5849 06F6  
                                    l5929 0FEB                                      l6905 04DB  
                                    l5881 0E5C                                      l5873 0E55  
                                    l5945 0E3A                                      l5937 0E2B  
                                    l6729 0210                                      l6681 0196  
                                    l6673 0145                                      l6665 011C  
                                    l6657 0107                                      l6649 00F0  
                                    l6593 00A4                                      l5955 0BC0  
                                    l5971 0B45                                      l5891 0B68  
                                    l5867 0AFE                                      l5883 0E5E  
                                    l5875 0E59                                      l5947 0E3E  
                                    l6691 01B6                                      l6683 01A2  
                                    l6675 0165                                      l6667 0122  
                                    l6659 010E                                      l6595 00A4  
                                    l5957 0BC1                                      l5965 0BEE  
                                    l5981 076D                                      l5973 0761  
                                    l5893 0B8E                                      l5885 0E60  
                                    l5877 0E5A                                      l5869 0E49  
                                    l5949 0E47                                      l6693 01BE  
                                    l6677 0177                                      l6685 01A5  
                                    l6669 0124                                      l5959 0BC3  
                                    l5967 0BF1                                      l5991 0778  
                                    l5983 076F                                      l5975 0767  
                                    l5895 0B90                                      l5887 0E66  
                                    l5879 0E5B                                      l6695 01C3  
                                    l6687 01AC                                      l6679 0185  
                                    l6599 00A9                                      l5969 0BF9  
                                    l5993 077A                                      l5985 0771  
                                    l5977 0769                                      l5889 0B71  
                                    l5897 0B96                                      l6697 01C5  
                                    l6689 01B2                                      l5995 0786  
                                    l5987 0774                                      l5979 076B  
                                    l5899 0B84                                      l6699 01C8  
                                    l5997 0788                                      l5989 0776  
                                    l5999 078A                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 0AF8  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u3220 05D3  
                                    u3300 0FDA                                      u3221 05D2  
                                    u3301 0FD9                                      u3230 05F0  
                                    u3310 0FEB                                      u3215 0D57  
                                    u3231 05EF                                      u3311 0FEA  
                                    u3240 0611                                      u3320 0FF3  
                                    u3400 050C                                      u4200 0163  
                                    u3241 0610                                      u3321 0FF2  
                                    u3401 050B                                      u4201 0162  
                                    u3250 06D9                                      u3330 0FFF  
                                    u3410 0DCA                                      u4210 01AC  
                                    _T2PR 028D                                      u3235 05EC  
                                    u3251 06D8                                      u3331 0FFE  
                                    u3411 0DC9                                      u4211 01AB  
                                    u3260 06F6                                      u3340 0E47  
                                    u3500 05BF                                      u3420 0571  
                                    u4220 01B2                                      u3245 060D  
                                    u3261 06F5                                      u3341 0E46  
                                    u3501 05BE                                      u3421 0570  
                                    u4221 01B1                                      u4205 015F  
                                    u3350 0BC0                                      u3270 0715  
                                    u3510 0DF5                                      u3430 057C  
                                    u4230 01C3                                      u4150 00DC  
                                    u3351 0BBF                                      u3271 0714  
                                    u3511 0DF4                                      u3431 057B  
                                    u4231 01C2                                      u4151 00DB  
                                    u3360 04B3                                      u3280 0E65  
                                    u3520 0E00                                      u3440 0587  
                                    u3600 0244                                      u4240 01D4  
                                    u4160 00E8                                      u3265 06F2  
                                    u3361 04B2                                      u3281 0E64  
                                    u3521 0DFF                                      u3441 0586  
                                    u3601 0243                                      u4241 01D3  
                                    u4161 00E7                                      u3290 0FD2  
                                    u3370 04BB                                      u3530 0E07  
                                    u3450 058E                                      u3610 024A  
                                    u4250 01E3                                      u4170 011C  
                                    u3275 0711                                      u3291 0FD1  
                                    u3371 04BA                                      u3531 0E06  
                                    u3451 058D                                      u3611 0249  
                                    u4251 01E2                                      u4171 011B  
                                    u4307 0103                                      u3380 04EE  
                                    u3540 0CD7                                      u3460 0593  
                                    u3700 02D3                                      u3620 0259  
                                    u4260 01FA                                      u4180 0122  
                                    u3381 04ED                                      u3541 0CD6  
                                    u3461 0592                                      u3701 02D2  
                                    u3621 0258                                      u4261 01F9  
                                    u4317 01EE                                      u4181 0121  
                                    u3390 04F6                                      u3550 0CE4  
                                    u3470 05A0                                      u3710 02D9  
                                    u3630 026C                                      u4270 0202  
                                    u4190 0145                                      u4407 054A  
                                    u3391 04F5                                      u4327 0498  
                                    u3551 0CE3                                      u3471 059F  
                                    u3711 02D8                                      u3631 026B  
                                    u4271 0201                                      u4191 0144  
                                    u3480 05AB                                      u3800 0350  
                                    u3720 02DE                                      u3640 027F  
                                    u4417 0555                                      u4337 0E17  
                                    u3481 05AA                                      u3801 034F  
                                    u3721 02DD                                      u3641 027E  
                                    u3570 0392                                      u3490 05B0  
                                    u3810 0366                                      u3730 02ED  
                                    u3650 0285                                      u4427 0560  
                                    u4347 0E21                                      u3571 0391  
                                    u3491 05AF                                      u3811 0365  
                                    u3731 02EC                                      u3651 0284  
                                    u3900 07F0                                      u3580 03A4  
                                    u3820 036D                                      u3740 02F3  
                                    u3660 0294                                      _PMD0 0796  
                                    u4437 0D65                                      u4357 04FF  
                                    u3901 07EF                                      u3581 03A3  
                                    u3821 036C                                      u3741 02F2  
                                    u3661 0293                                      _PMD1 0797  
                                    u3590 0D70                                      u3910 0430  
                                    u3830 037C                                      u3750 0302  
                                    u3670 02A7                                      _PMD2 0798  
                                    u3591 0D6F                                      u4367 0513  
                                    u3911 042F                                      u3831 037B  
                                    u3751 0301                                      u3671 02A6  
                                    _PMD3 0799                                      u3920 0436  
                                    u3840 0382                                      u3760 0315  
                                    u3680 02BD                                      _PMD4 079A  
                                    u4377 051E                                      u3921 0435  
                                    u3841 0381                                      u3761 0314  
                                    u3681 02BC                                      _PMD5 079B  
                                    u3930 043E                                      u3850 0F89  
                                    u3770 0328                                      u3690 02C4  
                                    u4387 052F                                      u3931 043D  
                                    u3851 0F88                                      u3771 0327  
                                    u3691 02C3                                      u3940 0446  
                                    u3860 0F8E                                      u3780 032E  
                                    u4397 053F                                      u3941 0445  
                                    u3861 0F8D                                      u3781 032D  
                                    u3950 047D                                      u3870 0FA1  
                                    u3790 033D                                      u3951 047C  
                                    u3871 0FA0                                      u3791 033C  
                                    u3960 0485                                      u3880 07B4  
                                    i1l73 0BE0                                      u3961 0484  
                                    u3881 07B3                                      u3970 0494  
                                    u3890 07C3                                      u3971 0493  
                                    u3891 07C2                                      u3980 04A1  
                                    u3981 04A0                      ?_do_I2C_SEND_RESTART 0070  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 007A                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _alaf 0036                                      _clkh 0041  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0040  
                                    _main 007E                                      _tala 0061  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 0063                           _TMR0_StartTimer 0AB6  
                                    _temp 0037                                      _pmon 0062  
                      _increment_subfield 0FC0                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0A96  
             _INT_DefaultInterruptHandler 0A95                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0D79           __end_of_INT_SetInterruptHandler 0AFE  
                           _i2c_setBuffer 0C1A                ??_TMR1_SetInterruptHandler 0049  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 004A  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0EEC  
                         __end_of_ReadI2C 0E09                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0056                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0CA4                              _do_I2C_RESET 0B2D  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0B68                         ??_clock_subfields 0052  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0BC7  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0AA7  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0ACA  
                          __CFG_DEBUG$OFF 0000                                     i1l103 0C29  
                                   i1l200 0F4C                                     i1l210 0EEB  
                                   i1l131 0AD3                                     i1l140 0AE2  
                                   _T2TMR 028C                                     i1l125 0B34  
                                   i1l213 0AC4                                     i1l134 0AD8  
                                   i1l303 0D14                                     i1l143 0B55  
                                   i1l224 0E92                                     i1l216 0A9D  
                                   i1l128 0ACE                                     i1l152 0AE7  
                                   i1l137 0ADD                                     i1l146 0B3C  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0C6C                                     i1l155 0AEC  
                                   i1l164 0EBE                                     i1l172 06C9  
                                   i1l149 0B16                                     i1l334 0AF7  
                                   i1l158 0AF1                                     i1l344 0A95  
                                   i1l264 0C7D                                     i1l169 06AD  
                                   i1l185 0734                                     i1l338 0BD3  
                                   i1l602 0A99                                     i1l186 0760  
                                   i1l611 0AA6                                     i1l291 0C5B  
                                   i1l620 0AAC                                     i1l380 001F  
                                   i1l614 0B2C                                     i1l279 0C8E  
                                   i1l383 002F                                     i1l608 0AA3  
                                   i1l392 0059                                     i1l617 0AA9  
                                   i1l385 003E                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0ABC  
                                   i1l387 004D                                     i1l629 0AC9  
                                   i1l902 0A97                                     i1l638 0AC0  
                                   i1l576 0AB2                                     i1l672 0AB5  
                                   i1l579 0AAF                                     i1l916 0CB9  
                                   i1l883 0C4A                                     i1l896 0CFC  
                                   _OSCEN 0891                           __end_of_all_LED 0568  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 0BE1                 ?_TMR0_SetInterruptHandler 0047  
                 ??_ADCC_IsConversionDone 0047                          __end_of_TMR0_ISR 0C0B  
                        __end_of_TMR1_ISR 0CFD                          __end_of_TMR2_ISR 0C1A  
                         __end_of_sw1_EXT 0F1A                           __end_of_cksum_w 0C3A  
                    ??_increment_subfield 004E                           _DATAEE_ReadByte 07F1  
                                   _alarm 0038                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 0B2D                                     _cksum 0E29  
                   ?_ADCC_StartConversion 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 0030                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                                   _tsttc 0235                   __end_of_TMR1_Initialize 0DEA  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0047                        ??_checkDebounceSW2 0047  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0C3A  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 1000                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 0235  
                 __end_of_TMR2_Initialize 0D2D               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0AE3                  _TMR2_SetInterruptHandler 0B71  
                                  ??_main 0058                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 0049  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0AB9               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 05C2                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1202 0F08                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1211 0D40                                    _RC4PPS 0F24  
                                  i1l1212 0D45                                    i1l1044 0A98  
                                  i1l1205 0F15                                    i1l1038 0C19  
                                  i1l1208 0F19                                    i1l1321 0F80  
                                  i1l1325 0BBA                                    i1l1351 0675  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l1612 0AA0  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1631 0A96                                    i1l1625 0C0A  
                                  i1l5101 0CF7                                    i1l4301 0ADC  
                                  i1l5103 0C0B                                    i1l4311 0AC6  
                                  u210_20 0BB9                                    u210_21 0BB8  
                                  i1l5105 0C0D                                    i1l4313 0AA7  
                                  i1l4305 0ADE                                    i1l4251 061E  
                                  i1l4411 0EEC                                    i1l5107 0C14  
                                  i1l4315 0AB9                                    i1l4171 0C1B  
                                  i1l4163 0E6E                                    i1l4307 0AE1  
                                  i1l4323 0AED                                    i1l4253 062D  
                                  i1l4261 0653                                    i1l4421 0F02  
                                  i1l4413 0EF4                                    i1l4173 0C20  
                                  i1l4165 0E74                                    i1l4181 0ABD  
                                  i1l4333 0AAA                                    i1l4317 0AE8  
                                  i1l4325 0AF0                                    i1l4247 0CA4  
                                  i1l4271 0672                                    i1l4263 066B  
                                  i1l4255 064A                                    i1l4423 0F0C  
                                  i1l4415 0EFA                                    i1l4175 0C28  
                                  i1l4167 0E85                                    i1l4343 0002  
                                  i1l4351 0C6B                                    i1l4319 0AEB  
                                  i1l4503 0AB0                                    i1l4257 064F  
                                  i1l4249 061C                                    i1l4425 0F11  
                                  i1l4417 0EFB                                    i1l4177 0AA1  
                                  i1l4169 0BD4                                    i1l4329 0B25  
                                  i1l4337 0AAD                                    i1l5081 0ED4  
                                  i1l5073 0EBF                                    i1l4419 0EFC  
                                  i1l4427 0A9E                                    i1l5091 0BFE  
                                  i1l4179 0AA4                                    i1l4371 0C4B  
                                  i1l4275 0A9A                                    i1l4339 0A9C  
                                  i1l4347 0C5C                                    i1l4355 0C6D  
                                  i1l4363 0C7E                                    i1l4531 0B33  
                                  i1l4603 0682                                    i1l5075 0EC2  
                                  i1l5083 0AC1                                    i1l4269 066D  
                                  i1l5085 0AF2                                    i1l5093 0C05  
                                  i1l4373 0C53                                    i1l4349 0C64  
                                  i1l4357 0C75                                    i1l4365 0C86  
                                  i1l4381 0D13                                    i1l4525 0B2D  
                                  i1l4293 0AD4                                    i1l4621 06C8  
                                  i1l4613 068A                                    i1l5077 0EC7  
                                  i1l5087 0AF4                                    i1l5095 0CE6  
                                  i1l4375 0C5A                                    i1l4359 0C7C  
                                  i1l4367 0C8D                                    i1l4527 0B30  
                                  i1l4535 0ACA                                    i1l4287 0ACF  
                                  i1l4295 0AD7                                    i1l4543 0B4D  
                                  i1l4551 0B35                                    i1l4615 06AF  
                                  i1l4607 0686                                    i1l4631 0721  
                                  i1l5079 0ECE                                    u300_20 0033  
                                  i1l5089 0BFC                                    i1l5097 0CE8  
                                  i1l4529 0B32                                    i1l4537 0ACC  
                                  i1l4289 0AD2                                    i1l4545 0B4F  
                                  i1l4553 0B37                                    i1l4561 0B12  
                                  i1l4617 06BB                                    i1l4633 0725  
                                  u300_21 0032                                    i1l5099 0CF0  
                                  i1l4379 0CFD                                    i1l4539 0ACD  
                                  i1l4299 0AD9                                    i1l4547 0B54  
                                  i1l4555 0B3B                                    i1l4563 0B15  
                                  i1l4619 06C6                                    i1l4643 0736  
                                  i1l4635 072F                                    i1l4661 0F1A  
                                  i1l4581 0E9E                                    i1l4573 0E93  
                                  i1l4653 073E                                    i1l4637 0732  
                                  i1l4629 0717                                    i1l5461 000B  
                                  i1l4831 0C3A                                    i1l4663 0F1D  
                                  i1l4559 0B10                                    i1l4567 0AE3  
                                  i1l4575 0E95                                    i1l4647 073A  
                                  i1l5471 0027                                    i1l5463 000F  
                                  u205_20 0F53                                    u301_20 0037  
                                  i1l4833 0C3F                                    i1l4841 0C46  
                                  u205_21 0F52                                    i1l4673 0F26  
                                  i1l4569 0AE6                                    i1l4577 0E9A  
                                  i1l5481 0046                                    u301_21 0036  
                                  i1l5473 002B                                    i1l5465 0017  
                                  i1l4691 0BCE                                    i1l4851 0D43  
                                  i1l4843 0C48                                    i1l4835 0C40  
                                  i1l4931 0F5E                                    i1l4667 0F21  
                                  i1l4587 0EA2                                    i1l4595 0676  
                                  i1l5483 0051                                    i1l5475 0033  
                                  i1l5467 001B                                    i1l5459 0006  
                                  i1l4845 0D2D                                    i1l4837 0C42  
                                  i1l4941 0F75                                    i1l4933 0F62  
                                  i1l4669 0F24                                    i1l5485 0055  
                                  i1l5477 0037                                    i1l5469 0023  
                                  i1l4847 0D34                                    i1l4839 0C44  
                                  i1l4943 0F7B                                    i1l4935 0F66  
                                  i1l4927 0F4D                                    i1l4951 0BB9  
                                  i1l4679 0F2A                                    i1l4599 067E  
                                  i1l4687 0AB3                                    i1l5479 0042  
                                  u230_20 0C05                                    u206_20 0F5C  
                                  u302_20 0042                                    i1l4689 0BC7  
                                  i1l4849 0D3B                                    u230_21 0C04  
                                  i1l4945 0F7F                                    i1l4937 0F6C  
                                  u206_21 0F59                                    i1l4929 0F53  
                                  u302_21 0041                                    i1l4939 0F74  
                                  i1l4947 0BAF                                    i1l4949 0BB3  
                                  i1l6911 0EB6                                    u231_20 0CF7  
                                  u303_20 0046                                    u231_21 0CF6  
                                  i1l6913 0F3E                                    u303_21 0045  
                                  i1l6907 0752                                    u207_24 0F5E  
                                  i1l6909 069F                                    u208_20 0F6C  
                                  u232_20 0C14                                    u304_20 0051  
                                  u208_21 0F6B                                    u232_21 0C13  
                                  u304_21 0050                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u209_20 0F7B                                    u305_20 0055  
                                  u209_21 0F7A                                    u305_21 0054  
                                  u180_20 0EF4                                    u228_20 0EC7  
                                  u180_21 0EF3                                    u228_21 0EC6  
                                  u181_20 0EFA                                    u165_20 0E74  
                                  u229_20 0ECE                                    u181_21 0EF9  
                                  u165_21 0E73                                    u229_21 0ECD  
                                  u182_20 0F0C                                    u166_20 0C20  
                                  u182_21 0F0B                                    u166_21 0C1F  
                                  u174_25 0CB3                                    u175_20 062D  
                                  u183_20 0F11                                    u175_21 062C  
                                  u183_21 0F10                                    u176_20 064A  
                                  u176_21 0649                                    _INTPPS 0E90  
                                  u176_25 0646                                    u177_20 066B  
                                  u177_21 066A                                    u177_25 0667  
                                  u194_20 067D                                    u194_21 067C  
                                  u195_20 06C6                                    u195_21 06C5  
                                  u196_20 072F                                    u196_21 072E  
                                  u197_20 0BCE                                    u293_20 000B  
                                  u197_21 0BCD                                    u293_21 000A  
                                  u198_20 0C3F                                    u294_20 000F  
                                  u198_21 0C3E                                    u294_21 000E  
                                  u199_20 0D34                                    u295_20 0017  
                                  u199_21 0D33                                    u295_21 0016  
                                  u296_20 001B                                    u296_21 001A  
                                  u297_20 0023                                    u297_21 0022  
                                  u298_20 0027                                    u298_21 0026  
                                  u299_20 002B                                    u299_21 002A  
                                  _OSCFRQ 0893                                    _ISR_3s 0D2D  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0044                                 ??_ReadI2C 0047  
              ??_ADCC_GetConversionResult 0049                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0CBA                     _i2c1_driver_getRXData 0AAA  
                        __end_of_mod1_LED 0B99                          __end_of_mod2_LED 0B8E  
                        __end_of_mod3_LED 0BA4                          __end_of_mod4_LED 0BAF  
    __end_of_TMR1_DefaultInterruptHandler 0A98     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0A97                              _CCPTMRS1bits 021F  
                                  ___bmul 0CD0               __end_of_do_I2C_DO_NACK_STOP 0AED  
     __end_of_i2c_setDataCompleteCallback 0BE1               _i2c_setDataCompleteCallback 0BD4  
   __end_of_i2c1_driver_clearBusCollision 0AB6    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0AB3                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 003B  
                                  _last5s 003C                                 ??_all_LED 004B  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0BEE  
                          ?_do_I2C_DO_ACK 0070                   __size_of_I2C_Initialize 000A  
                                  cksum@i 004B                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 0800                                 ??_sw1_EXT 0077  
                               ??_cksum_w 0051                           _ADCC_Initialize 0CBA  
             __end_of_i2c1_driver_sendACK 0ABD                            _PMD_Initialize 0B45  
          __end_of_do_I2C_DO_ADDRESS_NACK 0EBF               __end_of_i2c1_driver_restart 0AA4  
                            ?_returnReset 0079                                 ?_ADC_read 0049  
                  ??_ADCC_StartConversion 0047               __end_of_i2c1_driver_startRX 0AAA  
        __size_of_INT_SetInterruptHandler 0006  TMR0_SetInterruptHandler@InterruptHandler 0047  
TMR2_SetInterruptHandler@InterruptHandler 0047  TMR1_SetInterruptHandler@InterruptHandler 0047  
 INT_SetInterruptHandler@InterruptHandler 0047                   __end_of_TMR1_WriteTimer 0C4B  
                        ??_config_routine 0055                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0D93                   __end_of__initialization 007A  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 0ADE  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0047  
                 _rdBlkRegCompleteHandler 0CFD                            __pcstackCOMMON 0070  
                            __pidataBANK0 0B1E                       ??_SYSTEM_Initialize 0049  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 0E49                          _DATAEE_WriteByte 0E49  
                           __end_of_tsttc 0385                          ?_TMR2_Initialize 0070  
                            LED_bin@value 0047                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 0B4D               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 004B               ADCC_StartConversion@channel 0047  
                          setCallBack@idx 0074                                   ??_cksum 0049  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0AED  
               __end_of_SYSTEM_Initialize 0DAF                                   ??_tsttc 0049  
                          _mssp1_clearIRQ 0AB0                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0C8F  
                      read_ring@nreg_init 004C            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0C5C                     _rd1RegCompleteHandler 0C6D  
                  ?_i2c1_driver_getRXData 0070                           _clock_subfields 04AA  
                      __size_of_read_ring 003F                     _wr1RegCompleteHandler 0C5C  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 007E  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0047  
        __end_of_TMR0_SetInterruptHandler 0B71                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0CD0                __end_of_PWM6_LoadDutyValue 0D5F  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0047  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 0761  
                       __end_of_do_I2C_TX 06CA                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0D79                          _handler_clock_ms 0BAF  
                      ??_i2c1_driver_open 0047                                   _INT_ISR 0AF2  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0CA4                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0AB3  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 0B1E                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0AC5  
                    DATAEE_WriteByte@bAdd 004D                        _i2c1_driver_i2cISR 0032  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0EBF  
               ??_rdBlkRegCompleteHandler 007A                                   _ReadI2C 0DEA  
                      _i2c1_driver_isNACK 0B25                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0049                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 005A                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                         ??_mode_select_LED 004B  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 050D  
                     ?_i2c1_driver_isNACK 0070                                ??_WriteI2C 0047  
                          _I2C_Initialize 0B7A                                   __ptext1 0235  
                                 __ptext2 0568                                   __ptext3 0DEA  
                                 __ptext4 0385                                   __ptext5 0DAF  
                                 __ptext6 0C2A                                   __ptext7 0E29  
                                 __ptext8 0F81                                   __ptext9 0CD0  
                     __end_of_do_I2C_IDLE 0ACF                       __end_of_do_I2C_RCEN 0B17  
                                 _sw1_EXT 0EEC            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0C2A                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0B5F                                   _last_ms 003E  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0ADE  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 0024  
                             reset_recv@i 0051         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0FC0                  ??_PIN_MANAGER_Initialize 0047  
               ?_TMR1_SetInterruptHandler 0047                                 _T2HLTbits 028F  
                                 _nreg_pt 0042                   _INT_SetInterruptHandler 0AF8  
                                 _lum_bin 0022               __size_of_increment_subfield 0040  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 004B  
                              ??_mod2_LED 004B                                ??_mod3_LED 004B  
                              ??_mod4_LED 004B                                   main@t5s 00C6  
                _do_I2C_SEND_RESTART_READ 0ACF                __size_of_SYSTEM_Initialize 001C  
                                 main@aux 00C2                                   clrloop0 0B05  
                              _hours_tens 002E                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 050D  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 0B0A  
            __end_of_i2c1_driver_sendNACK 0AC1                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0B0B                      __end_of_INT_CallBack 0BD4  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0A9A  
                              _reset_recv 0DAF                             push_ring@nreg 0051  
               _do_I2C_SEND_RESTART_WRITE 0AD4                    __end_of_I2C_Initialize 0B84  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 07F1  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0A9C  
                _TMR0_SetInterruptHandler 0B68                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0D15  
                __end_of_do_I2C_SEND_STOP 0AE3                      __CFG_WDTCCS$HFINTOSC 0000  
              __end_ofi1_checkDebounceSW1 0676                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                               returnStop@p 0079  
                        __CFG_FEXTOSC$OFF 0000                         __size_of_ADC_read 001A  
                __end_of_DATAEE_WriteByte 0E6D              i2c_setDataCompleteCallback@p 0077  
                          __end_of_ISR_3s 0D46             __size_of_do_I2C_SEND_ADR_READ 0009  
                          _TMR0_StopTimer 0A9E                               _do_I2C_IDLE 0ACA  
                             _do_I2C_RCEN 0B10                           ?_I2C_Initialize 0070  
    __end_of_TMR2_DefaultInterruptHandler 0A99     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0A98                            __end_of___bmul 0CE6  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0049  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0047  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0AC1  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                        WriteI2C@data_out 0048             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                        ?_clock_subfields 0070                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
                 clock_subfields@subfield 0053              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0047                     __end_of_i2c_setBuffer 0C2A  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 0AA1  
                __end_of_handler_clock_ms 0BBB                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 0AB0                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0048                          ??_PMD_Initialize 0047  
                        _checkDebounceSW1 05C2                          _checkDebounceSW2 06CA  
                  wr1RegCompleteHandler@p 0079                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005D                __end_of_EXT_INT_Initialize 0BFC  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0079  
          __end_of_do_I2C_DO_NACK_RESTART 0AF2                                read_ring@i 0051  
                    _i2c1_driver_sendNACK 0ABD                         read_ring@absindex 0053  
                       __size_of_WriteI2C 005A                                  ?_LED_bin 0047  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0A99                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0044                             __pcstackBANK1 00C2  
                      _PWM6_LoadDutyValue 0D46                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0717                                 _do_I2C_TX 0676  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0B3D                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0047  
                        _i2c_restartWrite 0A9A                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0E09                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0F1A  
                                ?_ReadI2C 0070                     _TMR0_InterruptHandler 00C8  
                           ??_setCallBack 0073                                 __pnvBANK0 0064  
                               __pnvBANK1 00C8                     _rd2RegCompleteHandler 0C7E  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 1020  
                               _main$2314 00C7                    _PIN_MANAGER_Initialize 0761  
                   _wr2RegCompleteHandler 0C4B             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 008D          __end_of_TMR1_SetInterruptHandler 0B04  
                       read_ring@subindex 004E                            ??_do_I2C_RESET 0070  
                               __ptext100 0AF2                                 __ptext101 0BC7  
                               __ptext102 0A95                                 __ptext103 0EEC  
                               __ptext104 061C                                 __ptext105 0CA4  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 0034  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0AE8  
                    ??_PWM6_LoadDutyValue 0049                             ??_recoverData 0053  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0BC7  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                  _ADC_read 0D5F  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0F81                            __size_of_tsttc 0150  
                               _min_units 0028                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 0B17                         ??_TMR0_Initialize 0049  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0B04                                  _PIE0bits 0716  
                       _handler_clock_hms 0F4D                                 _nreg_init 0043  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0020                ??_TMR0_SetInterruptHandler 0049  
                                _PIR0bits 070C                               _config_mode 0039  
                                _PIR3bits 070F                                 _ring_byte 00BD  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0BFC                                  _TMR1_ISR 0CE6  
                                _TMR2_ISR 0C0B              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 0E93  
                        push_ring@nreg_pt 0057                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 0049                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 07AA  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 1000      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0047  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 004F  
                     __end_of_recoverData 041D         __end_of_do_I2C_SEND_RESTART_WRITE 0AD9  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0E29  
                 __end_of_do_I2C_TX_EMPTY 0F4D                                ?_read_ring 004B  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 004D  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0F81                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0049                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 0050                        i1_checkDebounceSW1 061C  
                     _do_I2C_DO_NACK_STOP 0AE8                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                          ??_I2C_Initialize 0047  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0B5F                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0056                   ??_OSCILLATOR_Initialize 0047  
                       ??_TMR0_StartTimer 0047                       _i2c1_driver_sendACK 0AB9  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                                _WriteI2C 0568                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0AA1                  _TMR1_SetInterruptHandler 0AFE  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0AA7  
            __end_of_do_I2C_SEND_ADR_READ 0B56                                ?_push_ring 0051  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0064  
                        __size_of_sw1_EXT 002E                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 0052                              _mssp1_setIRQ 0AAD  
                             ??_do_I2C_RX 007A                               ??_do_I2C_TX 007A  
                    ??i1_checkDebounceSW1 0070                                  __ptext10 07F1  
                                __ptext11 07AA                                  __ptext20 0FC0  
                                __ptext12 0E49                                  __ptext21 06CA  
                                __ptext13 041D                                _T1GCONbits 020F  
                                __ptext30 0AFE                                  __ptext22 05C2  
                                __ptext14 0E09                                  __ptext31 0C8F  
                                __ptext23 050D                                  __ptext15 04AA  
                                __ptext40 0D79                                  __ptext32 0B68  
                                __ptext24 0D46                                  __ptext16 0BA4  
                                __ptext41 0B7A                                  __ptext33 0BE1  
                                __ptext25 0AB6                                  __ptext17 0B99  
                                __ptext50 0EBF                                  __ptext42 0BBB  
                                __ptext34 0B45                                  __ptext26 0D93  
                                __ptext18 0B84                                  __ptext51 0AB0  
                                __ptext43 0D5F                                  __ptext35 0761  
                                __ptext27 0D15                                  __ptext19 0B8E  
                                __ptext60 0B4D                                  __ptext52 0717  
                                __ptext44 0B3D                                  __ptext36 0B5F  
                                __ptext28 0B71                                  __ptext61 0ADE  
                                __ptext53 0676                                  __ptext45 0B17  
                                __ptext37 0BEE                                  __ptext29 0DCB  
                                __ptext70 0AC5                                  __ptext62 0AD9  
                                __ptext54 0E93                                  __ptext46 0B56  
                                __ptext38 0AF8                                  __ptext71 0AAA  
                                __ptext63 0AD4                                  __ptext55 0AED  
                                __ptext39 0CBA                                  __ptext80 0A9C  
                                __ptext72 0ABD                                  __ptext64 0ACF  
                                __ptext56 0AE8                                  __ptext48 0AC1  
                                __ptext81 0A9A                                  __ptext73 0A99  
                                __ptext65 0ACA                                  __ptext57 0AE3  
                                __ptext49 0AB3                                  __ptext90 0A98  
                                __ptext82 0C4B                                  __ptext74 0AA7  
                                __ptext66 0B2D                                  __ptext58 0B10  
                                __ptext91 0BAF                                  __ptext83 0BD4  
                                __ptext75 0CFD                                  __ptext67 0F1A  
                                __ptext59 0B35                                  __ptext92 0CE6  
                                __ptext84 0E6D                                  __ptext76 0C7E  
                                __ptext68 0AAD                                  __ptext93 0A97  
                                __ptext85 0C1A                                  __ptext77 0C6D  
                                __ptext69 0B25                                  __ptext94 0F4D  
                                __ptext86 0AA4                                  __ptext78 0C5C  
                                __ptext95 0C3A                                  __ptext87 0AA1  
                                __ptext79 0002                                  __ptext96 0BFC  
                                __ptext88 0AB9                                  __ptext97 0D2D  
                                __ptext89 0C0B                                  __ptext98 0A96  
                                __ptext99 0A9E                                  _mod1_LED 0B8E  
                            _SSP1CON1bits 0190                                  _mod2_LED 0B84  
                __end_of_checkDebounceSW1 061C                              _SSP1CON2bits 0191  
                __end_of_checkDebounceSW2 0717                                  _mod3_LED 0B99  
                                _mod4_LED 0BA4                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0B35  
             DATAEE_WriteByte@GIEBitValue 0050                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 003D  
                        _i2c1_driver_open 0BBB                         ??_PWM6_Initialize 0047  
                        _i2c1_driver_stop 0AA4                             __size_of_main 01B7  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 002A             __end_of_i2c1_driver_getRXData 0AAD  
    __end_of_TMR0_DefaultInterruptHandler 0A97     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0A96                         ??_DATAEE_ReadByte 0049  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0E6D  
                            ??_reset_recv 0051                         ?_handler_clock_ms 0070  
                                _set_mode 003A                            _config_routine 041D  
                              tsttc@value 004A              __end_of_ADCC_StartConversion 0B45  
                                int$flags 007E                        ??_handler_clock_ms 0070  
      __end_of_INTERRUPT_InterruptManager 005B                _INTERRUPT_InterruptManager 0004  
                                main@aux1 00C3                       _mode_field_subfield 005D  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 004A          __end_of_do_I2C_SEND_RESTART_READ 0AD4  
                            ??_returnStop 007A                               _hours_units 002C  
                __end_of_i2c_restartWrite 0A9C                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 0385                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 0068                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0DCB                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0BEE                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 004F                    _do_I2C_DO_ADDRESS_NACK 0E93  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0A9E                    __end_of_config_routine 04AA  
           ?_TMR0_DefaultInterruptHandler 0070                  __size_of_clock_subfields 0063  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0047  
                _ADCC_GetConversionResult 0B56                             __pstringtext1 1000  
                    ??_EXT_INT_Initialize 0049                            read_ring@index 004D  
                             ??_push_ring 0054                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0C8F  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 0047                             read_ring@nreg 004B  
          __end_of_PIN_MANAGER_Initialize 07AA                         ??_ADCC_Initialize 0047  
             __end_of_i2c_busCollisionISR 0AC5            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0C7E                        push_ring@nreg_init 0052  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0C6D  
                   _TMR2_InterruptHandler 00CA                     _do_I2C_SEND_ADR_WRITE 0B35  
                      push_ring@ring_byte 0053                      _do_I2C_SEND_ADR_READ 0B4D  
                         ?_config_routine 0070                           _TMR1_Initialize 0DCB  
