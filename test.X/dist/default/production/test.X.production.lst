

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 12:10:33 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text64,local,class=CODE,merge=1,delta=2
    80                           	psect	text65,local,class=CODE,merge=1,delta=2
    81                           	psect	text66,local,class=CODE,merge=1,delta=2
    82                           	psect	text67,local,class=CODE,merge=1,delta=2
    83                           	psect	text68,local,class=CODE,merge=1,delta=2
    84                           	psect	text69,local,class=CODE,merge=1,delta=2
    85                           	psect	text70,local,class=CODE,merge=1,delta=2
    86                           	psect	text71,local,class=CODE,merge=1,delta=2
    87                           	psect	text72,local,class=CODE,merge=1,delta=2
    88                           	psect	text73,local,class=CODE,merge=1,delta=2
    89                           	psect	text74,local,class=CODE,merge=1,delta=2
    90                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text78,local,class=CODE,merge=1,delta=2
    94                           	psect	text79,local,class=CODE,merge=1,delta=2
    95                           	psect	text80,local,class=CODE,merge=1,delta=2
    96                           	psect	text81,local,class=CODE,merge=1,delta=2
    97                           	psect	text82,local,class=CODE,merge=1,delta=2
    98                           	psect	text83,local,class=CODE,merge=1,delta=2
    99                           	psect	text84,local,class=CODE,merge=1,delta=2
   100                           	psect	text85,local,class=CODE,merge=1,delta=2
   101                           	psect	text86,local,class=CODE,merge=1,delta=2
   102                           	psect	text87,local,class=CODE,merge=1,delta=2
   103                           	psect	text88,local,class=CODE,merge=1,delta=2
   104                           	psect	text89,local,class=CODE,merge=1,delta=2
   105                           	psect	text90,local,class=CODE,merge=1,delta=2
   106                           	psect	text91,local,class=CODE,merge=1,delta=2
   107                           	psect	text92,local,class=CODE,merge=1,delta=2
   108                           	psect	text93,local,class=CODE,merge=1,delta=2
   109                           	psect	text94,local,class=CODE,merge=1,delta=2
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 2.10
   113                           ; Generated 31/07/2019 GMT
   114                           ; 
   115                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F18875 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001C                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  008C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0110                     	;# 
   206  0110                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0114                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  018E                     	;# 
   245  018F                     	;# 
   246  0190                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0198                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  020C                     	;# 
   257  020C                     	;# 
   258  020D                     	;# 
   259  020E                     	;# 
   260  020F                     	;# 
   261  020F                     	;# 
   262  0210                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0218                     	;# 
   277  0218                     	;# 
   278  0219                     	;# 
   279  021A                     	;# 
   280  021B                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028C                     	;# 
   290  028D                     	;# 
   291  028D                     	;# 
   292  028E                     	;# 
   293  028F                     	;# 
   294  0290                     	;# 
   295  0290                     	;# 
   296  0291                     	;# 
   297  0292                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0296                     	;# 
   305  0297                     	;# 
   306  0298                     	;# 
   307  0298                     	;# 
   308  0299                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  029B                     	;# 
   312  029C                     	;# 
   313  029C                     	;# 
   314  029D                     	;# 
   315  030C                     	;# 
   316  030C                     	;# 
   317  030D                     	;# 
   318  030E                     	;# 
   319  030F                     	;# 
   320  0310                     	;# 
   321  0310                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0317                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031B                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  031F                     	;# 
   340  038C                     	;# 
   341  038C                     	;# 
   342  038D                     	;# 
   343  038E                     	;# 
   344  0390                     	;# 
   345  0390                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  040C                     	;# 
   349  040D                     	;# 
   350  040E                     	;# 
   351  040F                     	;# 
   352  0410                     	;# 
   353  0411                     	;# 
   354  0416                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  0418                     	;# 
   358  0418                     	;# 
   359  0419                     	;# 
   360  041A                     	;# 
   361  041A                     	;# 
   362  041B                     	;# 
   363  041C                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  041F                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  050C                     	;# 
   391  050C                     	;# 
   392  050D                     	;# 
   393  050E                     	;# 
   394  050F                     	;# 
   395  050F                     	;# 
   396  0510                     	;# 
   397  0511                     	;# 
   398  0512                     	;# 
   399  0512                     	;# 
   400  0513                     	;# 
   401  0514                     	;# 
   402  0515                     	;# 
   403  0515                     	;# 
   404  0516                     	;# 
   405  0517                     	;# 
   406  0518                     	;# 
   407  0519                     	;# 
   408  051A                     	;# 
   409  051B                     	;# 
   410  051C                     	;# 
   411  051D                     	;# 
   412  058C                     	;# 
   413  058C                     	;# 
   414  058D                     	;# 
   415  058E                     	;# 
   416  058F                     	;# 
   417  058F                     	;# 
   418  0590                     	;# 
   419  0591                     	;# 
   420  0592                     	;# 
   421  0593                     	;# 
   422  060C                     	;# 
   423  060D                     	;# 
   424  060E                     	;# 
   425  060F                     	;# 
   426  0610                     	;# 
   427  0611                     	;# 
   428  0612                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0616                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  068C                     	;# 
   441  068D                     	;# 
   442  068E                     	;# 
   443  068F                     	;# 
   444  0690                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081D                     	;# 
   486  081E                     	;# 
   487  081F                     	;# 
   488  088C                     	;# 
   489  088D                     	;# 
   490  088E                     	;# 
   491  088F                     	;# 
   492  0890                     	;# 
   493  0891                     	;# 
   494  0892                     	;# 
   495  0893                     	;# 
   496  0895                     	;# 
   497  0896                     	;# 
   498  0897                     	;# 
   499  0898                     	;# 
   500  0899                     	;# 
   501  089A                     	;# 
   502  089B                     	;# 
   503  090C                     	;# 
   504  090E                     	;# 
   505  090F                     	;# 
   506  091F                     	;# 
   507  091F                     	;# 
   508  098F                     	;# 
   509  098F                     	;# 
   510  0990                     	;# 
   511  0991                     	;# 
   512  0992                     	;# 
   513  0993                     	;# 
   514  0994                     	;# 
   515  0995                     	;# 
   516  0996                     	;# 
   517  0997                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E17                     	;# 
   527  0E18                     	;# 
   528  0E19                     	;# 
   529  0E1A                     	;# 
   530  0E1B                     	;# 
   531  0E1C                     	;# 
   532  0E1D                     	;# 
   533  0E1E                     	;# 
   534  0E1F                     	;# 
   535  0E20                     	;# 
   536  0E21                     	;# 
   537  0E22                     	;# 
   538  0E23                     	;# 
   539  0E24                     	;# 
   540  0E25                     	;# 
   541  0E26                     	;# 
   542  0E27                     	;# 
   543  0E28                     	;# 
   544  0E29                     	;# 
   545  0E2A                     	;# 
   546  0E2B                     	;# 
   547  0E2C                     	;# 
   548  0E2D                     	;# 
   549  0E2E                     	;# 
   550  0E2F                     	;# 
   551  0E30                     	;# 
   552  0E31                     	;# 
   553  0E32                     	;# 
   554  0E33                     	;# 
   555  0E34                     	;# 
   556  0E35                     	;# 
   557  0E36                     	;# 
   558  0E37                     	;# 
   559  0E8F                     	;# 
   560  0E90                     	;# 
   561  0E91                     	;# 
   562  0E92                     	;# 
   563  0E93                     	;# 
   564  0E94                     	;# 
   565  0E95                     	;# 
   566  0E96                     	;# 
   567  0E97                     	;# 
   568  0E9C                     	;# 
   569  0E9D                     	;# 
   570  0E9E                     	;# 
   571  0EA1                     	;# 
   572  0EA2                     	;# 
   573  0EA3                     	;# 
   574  0EA4                     	;# 
   575  0EA5                     	;# 
   576  0EA9                     	;# 
   577  0EAA                     	;# 
   578  0EAB                     	;# 
   579  0EAC                     	;# 
   580  0EB1                     	;# 
   581  0EB2                     	;# 
   582  0EB3                     	;# 
   583  0EB8                     	;# 
   584  0EB9                     	;# 
   585  0EBA                     	;# 
   586  0EBB                     	;# 
   587  0EBC                     	;# 
   588  0EBD                     	;# 
   589  0EBE                     	;# 
   590  0EC3                     	;# 
   591  0EC5                     	;# 
   592  0EC6                     	;# 
   593  0EC7                     	;# 
   594  0EC8                     	;# 
   595  0EC9                     	;# 
   596  0ECA                     	;# 
   597  0ECB                     	;# 
   598  0ECC                     	;# 
   599  0F10                     	;# 
   600  0F11                     	;# 
   601  0F12                     	;# 
   602  0F13                     	;# 
   603  0F14                     	;# 
   604  0F15                     	;# 
   605  0F16                     	;# 
   606  0F17                     	;# 
   607  0F18                     	;# 
   608  0F19                     	;# 
   609  0F1A                     	;# 
   610  0F1B                     	;# 
   611  0F1C                     	;# 
   612  0F1D                     	;# 
   613  0F1E                     	;# 
   614  0F1F                     	;# 
   615  0F20                     	;# 
   616  0F21                     	;# 
   617  0F22                     	;# 
   618  0F23                     	;# 
   619  0F24                     	;# 
   620  0F25                     	;# 
   621  0F26                     	;# 
   622  0F27                     	;# 
   623  0F28                     	;# 
   624  0F29                     	;# 
   625  0F2A                     	;# 
   626  0F2B                     	;# 
   627  0F2C                     	;# 
   628  0F2D                     	;# 
   629  0F2E                     	;# 
   630  0F2F                     	;# 
   631  0F30                     	;# 
   632  0F31                     	;# 
   633  0F32                     	;# 
   634  0F38                     	;# 
   635  0F39                     	;# 
   636  0F3A                     	;# 
   637  0F3B                     	;# 
   638  0F3C                     	;# 
   639  0F3D                     	;# 
   640  0F3E                     	;# 
   641  0F3F                     	;# 
   642  0F40                     	;# 
   643  0F41                     	;# 
   644  0F43                     	;# 
   645  0F44                     	;# 
   646  0F45                     	;# 
   647  0F46                     	;# 
   648  0F47                     	;# 
   649  0F48                     	;# 
   650  0F49                     	;# 
   651  0F4A                     	;# 
   652  0F4B                     	;# 
   653  0F4C                     	;# 
   654  0F4E                     	;# 
   655  0F4F                     	;# 
   656  0F50                     	;# 
   657  0F51                     	;# 
   658  0F52                     	;# 
   659  0F53                     	;# 
   660  0F54                     	;# 
   661  0F55                     	;# 
   662  0F56                     	;# 
   663  0F57                     	;# 
   664  0F59                     	;# 
   665  0F5A                     	;# 
   666  0F5B                     	;# 
   667  0F5C                     	;# 
   668  0F5D                     	;# 
   669  0F61                     	;# 
   670  0F62                     	;# 
   671  0F64                     	;# 
   672  0F65                     	;# 
   673  0F66                     	;# 
   674  0F67                     	;# 
   675  0F68                     	;# 
   676  0F69                     	;# 
   677  0F6A                     	;# 
   678  0F6B                     	;# 
   679  0F6C                     	;# 
   680  0F6D                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEB                     	;# 
   689  0FED                     	;# 
   690  0FEE                     	;# 
   691  0FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000D                     	;# 
   706  000E                     	;# 
   707  000F                     	;# 
   708  0010                     	;# 
   709  0011                     	;# 
   710  0012                     	;# 
   711  0013                     	;# 
   712  0014                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001C                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001D                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008C                     	;# 
   727  008D                     	;# 
   728  008E                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0090                     	;# 
   733  0091                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0110                     	;# 
   752  0110                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0119                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011C                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011D                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011E                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  018C                     	;# 
   789  018D                     	;# 
   790  018E                     	;# 
   791  018F                     	;# 
   792  0190                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0196                     	;# 
   796  0197                     	;# 
   797  0198                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019C                     	;# 
   802  020C                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  020F                     	;# 
   807  020F                     	;# 
   808  0210                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0218                     	;# 
   823  0218                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028C                     	;# 
   836  028D                     	;# 
   837  028D                     	;# 
   838  028E                     	;# 
   839  028F                     	;# 
   840  0290                     	;# 
   841  0290                     	;# 
   842  0291                     	;# 
   843  0292                     	;# 
   844  0292                     	;# 
   845  0293                     	;# 
   846  0293                     	;# 
   847  0294                     	;# 
   848  0295                     	;# 
   849  0296                     	;# 
   850  0296                     	;# 
   851  0297                     	;# 
   852  0298                     	;# 
   853  0298                     	;# 
   854  0299                     	;# 
   855  0299                     	;# 
   856  029A                     	;# 
   857  029B                     	;# 
   858  029C                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  030C                     	;# 
   862  030C                     	;# 
   863  030D                     	;# 
   864  030E                     	;# 
   865  030F                     	;# 
   866  0310                     	;# 
   867  0310                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0314                     	;# 
   872  0314                     	;# 
   873  0315                     	;# 
   874  0316                     	;# 
   875  0317                     	;# 
   876  0318                     	;# 
   877  0318                     	;# 
   878  0319                     	;# 
   879  031A                     	;# 
   880  031B                     	;# 
   881  031C                     	;# 
   882  031C                     	;# 
   883  031D                     	;# 
   884  031E                     	;# 
   885  031F                     	;# 
   886  038C                     	;# 
   887  038C                     	;# 
   888  038D                     	;# 
   889  038E                     	;# 
   890  0390                     	;# 
   891  0390                     	;# 
   892  0391                     	;# 
   893  0392                     	;# 
   894  040C                     	;# 
   895  040D                     	;# 
   896  040E                     	;# 
   897  040F                     	;# 
   898  0410                     	;# 
   899  0411                     	;# 
   900  0416                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041A                     	;# 
   908  041B                     	;# 
   909  041C                     	;# 
   910  041C                     	;# 
   911  041D                     	;# 
   912  041E                     	;# 
   913  041F                     	;# 
   914  048C                     	;# 
   915  048C                     	;# 
   916  048D                     	;# 
   917  048E                     	;# 
   918  048F                     	;# 
   919  048F                     	;# 
   920  0490                     	;# 
   921  0491                     	;# 
   922  0492                     	;# 
   923  0492                     	;# 
   924  0493                     	;# 
   925  0494                     	;# 
   926  0495                     	;# 
   927  0495                     	;# 
   928  0496                     	;# 
   929  0497                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  050C                     	;# 
   937  050C                     	;# 
   938  050D                     	;# 
   939  050E                     	;# 
   940  050F                     	;# 
   941  050F                     	;# 
   942  0510                     	;# 
   943  0511                     	;# 
   944  0512                     	;# 
   945  0512                     	;# 
   946  0513                     	;# 
   947  0514                     	;# 
   948  0515                     	;# 
   949  0515                     	;# 
   950  0516                     	;# 
   951  0517                     	;# 
   952  0518                     	;# 
   953  0519                     	;# 
   954  051A                     	;# 
   955  051B                     	;# 
   956  051C                     	;# 
   957  051D                     	;# 
   958  058C                     	;# 
   959  058C                     	;# 
   960  058D                     	;# 
   961  058E                     	;# 
   962  058F                     	;# 
   963  058F                     	;# 
   964  0590                     	;# 
   965  0591                     	;# 
   966  0592                     	;# 
   967  0593                     	;# 
   968  060C                     	;# 
   969  060D                     	;# 
   970  060E                     	;# 
   971  060F                     	;# 
   972  0610                     	;# 
   973  0611                     	;# 
   974  0612                     	;# 
   975  0613                     	;# 
   976  0614                     	;# 
   977  0616                     	;# 
   978  0617                     	;# 
   979  0618                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061D                     	;# 
   985  061E                     	;# 
   986  068C                     	;# 
   987  068D                     	;# 
   988  068E                     	;# 
   989  068F                     	;# 
   990  0690                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  070C                     	;# 
   996  070D                     	;# 
   997  070E                     	;# 
   998  070F                     	;# 
   999  0710                     	;# 
  1000  0711                     	;# 
  1001  0712                     	;# 
  1002  0713                     	;# 
  1003  0714                     	;# 
  1004  0716                     	;# 
  1005  0717                     	;# 
  1006  0718                     	;# 
  1007  0719                     	;# 
  1008  071A                     	;# 
  1009  071B                     	;# 
  1010  071C                     	;# 
  1011  071D                     	;# 
  1012  071E                     	;# 
  1013  0796                     	;# 
  1014  0797                     	;# 
  1015  0798                     	;# 
  1016  0799                     	;# 
  1017  079A                     	;# 
  1018  079B                     	;# 
  1019  080C                     	;# 
  1020  080D                     	;# 
  1021  080E                     	;# 
  1022  080F                     	;# 
  1023  0810                     	;# 
  1024  0811                     	;# 
  1025  0812                     	;# 
  1026  0813                     	;# 
  1027  0814                     	;# 
  1028  081A                     	;# 
  1029  081B                     	;# 
  1030  081C                     	;# 
  1031  081D                     	;# 
  1032  081E                     	;# 
  1033  081F                     	;# 
  1034  088C                     	;# 
  1035  088D                     	;# 
  1036  088E                     	;# 
  1037  088F                     	;# 
  1038  0890                     	;# 
  1039  0891                     	;# 
  1040  0892                     	;# 
  1041  0893                     	;# 
  1042  0895                     	;# 
  1043  0896                     	;# 
  1044  0897                     	;# 
  1045  0898                     	;# 
  1046  0899                     	;# 
  1047  089A                     	;# 
  1048  089B                     	;# 
  1049  090C                     	;# 
  1050  090E                     	;# 
  1051  090F                     	;# 
  1052  091F                     	;# 
  1053  091F                     	;# 
  1054  098F                     	;# 
  1055  098F                     	;# 
  1056  0990                     	;# 
  1057  0991                     	;# 
  1058  0992                     	;# 
  1059  0993                     	;# 
  1060  0994                     	;# 
  1061  0995                     	;# 
  1062  0996                     	;# 
  1063  0997                     	;# 
  1064  0E0F                     	;# 
  1065  0E10                     	;# 
  1066  0E11                     	;# 
  1067  0E12                     	;# 
  1068  0E13                     	;# 
  1069  0E14                     	;# 
  1070  0E15                     	;# 
  1071  0E16                     	;# 
  1072  0E17                     	;# 
  1073  0E18                     	;# 
  1074  0E19                     	;# 
  1075  0E1A                     	;# 
  1076  0E1B                     	;# 
  1077  0E1C                     	;# 
  1078  0E1D                     	;# 
  1079  0E1E                     	;# 
  1080  0E1F                     	;# 
  1081  0E20                     	;# 
  1082  0E21                     	;# 
  1083  0E22                     	;# 
  1084  0E23                     	;# 
  1085  0E24                     	;# 
  1086  0E25                     	;# 
  1087  0E26                     	;# 
  1088  0E27                     	;# 
  1089  0E28                     	;# 
  1090  0E29                     	;# 
  1091  0E2A                     	;# 
  1092  0E2B                     	;# 
  1093  0E2C                     	;# 
  1094  0E2D                     	;# 
  1095  0E2E                     	;# 
  1096  0E2F                     	;# 
  1097  0E30                     	;# 
  1098  0E31                     	;# 
  1099  0E32                     	;# 
  1100  0E33                     	;# 
  1101  0E34                     	;# 
  1102  0E35                     	;# 
  1103  0E36                     	;# 
  1104  0E37                     	;# 
  1105  0E8F                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E93                     	;# 
  1110  0E94                     	;# 
  1111  0E95                     	;# 
  1112  0E96                     	;# 
  1113  0E97                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0EA1                     	;# 
  1118  0EA2                     	;# 
  1119  0EA3                     	;# 
  1120  0EA4                     	;# 
  1121  0EA5                     	;# 
  1122  0EA9                     	;# 
  1123  0EAA                     	;# 
  1124  0EAB                     	;# 
  1125  0EAC                     	;# 
  1126  0EB1                     	;# 
  1127  0EB2                     	;# 
  1128  0EB3                     	;# 
  1129  0EB8                     	;# 
  1130  0EB9                     	;# 
  1131  0EBA                     	;# 
  1132  0EBB                     	;# 
  1133  0EBC                     	;# 
  1134  0EBD                     	;# 
  1135  0EBE                     	;# 
  1136  0EC3                     	;# 
  1137  0EC5                     	;# 
  1138  0EC6                     	;# 
  1139  0EC7                     	;# 
  1140  0EC8                     	;# 
  1141  0EC9                     	;# 
  1142  0ECA                     	;# 
  1143  0ECB                     	;# 
  1144  0ECC                     	;# 
  1145  0F10                     	;# 
  1146  0F11                     	;# 
  1147  0F12                     	;# 
  1148  0F13                     	;# 
  1149  0F14                     	;# 
  1150  0F15                     	;# 
  1151  0F16                     	;# 
  1152  0F17                     	;# 
  1153  0F18                     	;# 
  1154  0F19                     	;# 
  1155  0F1A                     	;# 
  1156  0F1B                     	;# 
  1157  0F1C                     	;# 
  1158  0F1D                     	;# 
  1159  0F1E                     	;# 
  1160  0F1F                     	;# 
  1161  0F20                     	;# 
  1162  0F21                     	;# 
  1163  0F22                     	;# 
  1164  0F23                     	;# 
  1165  0F24                     	;# 
  1166  0F25                     	;# 
  1167  0F26                     	;# 
  1168  0F27                     	;# 
  1169  0F28                     	;# 
  1170  0F29                     	;# 
  1171  0F2A                     	;# 
  1172  0F2B                     	;# 
  1173  0F2C                     	;# 
  1174  0F2D                     	;# 
  1175  0F2E                     	;# 
  1176  0F2F                     	;# 
  1177  0F30                     	;# 
  1178  0F31                     	;# 
  1179  0F32                     	;# 
  1180  0F38                     	;# 
  1181  0F39                     	;# 
  1182  0F3A                     	;# 
  1183  0F3B                     	;# 
  1184  0F3C                     	;# 
  1185  0F3D                     	;# 
  1186  0F3E                     	;# 
  1187  0F3F                     	;# 
  1188  0F40                     	;# 
  1189  0F41                     	;# 
  1190  0F43                     	;# 
  1191  0F44                     	;# 
  1192  0F45                     	;# 
  1193  0F46                     	;# 
  1194  0F47                     	;# 
  1195  0F48                     	;# 
  1196  0F49                     	;# 
  1197  0F4A                     	;# 
  1198  0F4B                     	;# 
  1199  0F4C                     	;# 
  1200  0F4E                     	;# 
  1201  0F4F                     	;# 
  1202  0F50                     	;# 
  1203  0F51                     	;# 
  1204  0F52                     	;# 
  1205  0F53                     	;# 
  1206  0F54                     	;# 
  1207  0F55                     	;# 
  1208  0F56                     	;# 
  1209  0F57                     	;# 
  1210  0F59                     	;# 
  1211  0F5A                     	;# 
  1212  0F5B                     	;# 
  1213  0F5C                     	;# 
  1214  0F5D                     	;# 
  1215  0F61                     	;# 
  1216  0F62                     	;# 
  1217  0F64                     	;# 
  1218  0F65                     	;# 
  1219  0F66                     	;# 
  1220  0F67                     	;# 
  1221  0F68                     	;# 
  1222  0F69                     	;# 
  1223  0F6A                     	;# 
  1224  0F6B                     	;# 
  1225  0F6C                     	;# 
  1226  0F6D                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238  0000                     	;# 
  1239  0001                     	;# 
  1240  0002                     	;# 
  1241  0003                     	;# 
  1242  0004                     	;# 
  1243  0005                     	;# 
  1244  0006                     	;# 
  1245  0007                     	;# 
  1246  0008                     	;# 
  1247  0009                     	;# 
  1248  000A                     	;# 
  1249  000B                     	;# 
  1250  000C                     	;# 
  1251  000D                     	;# 
  1252  000E                     	;# 
  1253  000F                     	;# 
  1254  0010                     	;# 
  1255  0011                     	;# 
  1256  0012                     	;# 
  1257  0013                     	;# 
  1258  0014                     	;# 
  1259  0015                     	;# 
  1260  0016                     	;# 
  1261  0017                     	;# 
  1262  0018                     	;# 
  1263  0019                     	;# 
  1264  001A                     	;# 
  1265  001C                     	;# 
  1266  001C                     	;# 
  1267  001D                     	;# 
  1268  001D                     	;# 
  1269  001E                     	;# 
  1270  001F                     	;# 
  1271  008C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  008E                     	;# 
  1276  008F                     	;# 
  1277  0090                     	;# 
  1278  0090                     	;# 
  1279  0091                     	;# 
  1280  0093                     	;# 
  1281  0094                     	;# 
  1282  0095                     	;# 
  1283  0096                     	;# 
  1284  0097                     	;# 
  1285  0098                     	;# 
  1286  0099                     	;# 
  1287  009A                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  010C                     	;# 
  1293  010D                     	;# 
  1294  010E                     	;# 
  1295  010E                     	;# 
  1296  010F                     	;# 
  1297  0110                     	;# 
  1298  0110                     	;# 
  1299  0111                     	;# 
  1300  0112                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0114                     	;# 
  1305  0115                     	;# 
  1306  0116                     	;# 
  1307  0116                     	;# 
  1308  0117                     	;# 
  1309  0119                     	;# 
  1310  0119                     	;# 
  1311  0119                     	;# 
  1312  011A                     	;# 
  1313  011A                     	;# 
  1314  011A                     	;# 
  1315  011B                     	;# 
  1316  011B                     	;# 
  1317  011B                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011C                     	;# 
  1321  011C                     	;# 
  1322  011C                     	;# 
  1323  011D                     	;# 
  1324  011D                     	;# 
  1325  011D                     	;# 
  1326  011E                     	;# 
  1327  011E                     	;# 
  1328  011E                     	;# 
  1329  011F                     	;# 
  1330  011F                     	;# 
  1331  011F                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  018C                     	;# 
  1335  018D                     	;# 
  1336  018E                     	;# 
  1337  018F                     	;# 
  1338  0190                     	;# 
  1339  0191                     	;# 
  1340  0192                     	;# 
  1341  0196                     	;# 
  1342  0197                     	;# 
  1343  0198                     	;# 
  1344  0199                     	;# 
  1345  019A                     	;# 
  1346  019B                     	;# 
  1347  019C                     	;# 
  1348  020C                     	;# 
  1349  020C                     	;# 
  1350  020D                     	;# 
  1351  020E                     	;# 
  1352  020F                     	;# 
  1353  020F                     	;# 
  1354  0210                     	;# 
  1355  0210                     	;# 
  1356  0211                     	;# 
  1357  0211                     	;# 
  1358  0212                     	;# 
  1359  0212                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0216                     	;# 
  1365  0216                     	;# 
  1366  0217                     	;# 
  1367  0217                     	;# 
  1368  0218                     	;# 
  1369  0218                     	;# 
  1370  0219                     	;# 
  1371  021A                     	;# 
  1372  021B                     	;# 
  1373  021B                     	;# 
  1374  021C                     	;# 
  1375  021C                     	;# 
  1376  021D                     	;# 
  1377  021D                     	;# 
  1378  021E                     	;# 
  1379  021F                     	;# 
  1380  028C                     	;# 
  1381  028C                     	;# 
  1382  028D                     	;# 
  1383  028D                     	;# 
  1384  028E                     	;# 
  1385  028F                     	;# 
  1386  0290                     	;# 
  1387  0290                     	;# 
  1388  0291                     	;# 
  1389  0292                     	;# 
  1390  0292                     	;# 
  1391  0293                     	;# 
  1392  0293                     	;# 
  1393  0294                     	;# 
  1394  0295                     	;# 
  1395  0296                     	;# 
  1396  0296                     	;# 
  1397  0297                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  0299                     	;# 
  1402  029A                     	;# 
  1403  029B                     	;# 
  1404  029C                     	;# 
  1405  029C                     	;# 
  1406  029D                     	;# 
  1407  030C                     	;# 
  1408  030C                     	;# 
  1409  030D                     	;# 
  1410  030E                     	;# 
  1411  030F                     	;# 
  1412  0310                     	;# 
  1413  0310                     	;# 
  1414  0311                     	;# 
  1415  0312                     	;# 
  1416  0313                     	;# 
  1417  0314                     	;# 
  1418  0314                     	;# 
  1419  0315                     	;# 
  1420  0316                     	;# 
  1421  0317                     	;# 
  1422  0318                     	;# 
  1423  0318                     	;# 
  1424  0319                     	;# 
  1425  031A                     	;# 
  1426  031B                     	;# 
  1427  031C                     	;# 
  1428  031C                     	;# 
  1429  031D                     	;# 
  1430  031E                     	;# 
  1431  031F                     	;# 
  1432  038C                     	;# 
  1433  038C                     	;# 
  1434  038D                     	;# 
  1435  038E                     	;# 
  1436  0390                     	;# 
  1437  0390                     	;# 
  1438  0391                     	;# 
  1439  0392                     	;# 
  1440  040C                     	;# 
  1441  040D                     	;# 
  1442  040E                     	;# 
  1443  040F                     	;# 
  1444  0410                     	;# 
  1445  0411                     	;# 
  1446  0416                     	;# 
  1447  0416                     	;# 
  1448  0417                     	;# 
  1449  0418                     	;# 
  1450  0418                     	;# 
  1451  0419                     	;# 
  1452  041A                     	;# 
  1453  041A                     	;# 
  1454  041B                     	;# 
  1455  041C                     	;# 
  1456  041C                     	;# 
  1457  041D                     	;# 
  1458  041E                     	;# 
  1459  041F                     	;# 
  1460  048C                     	;# 
  1461  048C                     	;# 
  1462  048D                     	;# 
  1463  048E                     	;# 
  1464  048F                     	;# 
  1465  048F                     	;# 
  1466  0490                     	;# 
  1467  0491                     	;# 
  1468  0492                     	;# 
  1469  0492                     	;# 
  1470  0493                     	;# 
  1471  0494                     	;# 
  1472  0495                     	;# 
  1473  0495                     	;# 
  1474  0496                     	;# 
  1475  0497                     	;# 
  1476  0498                     	;# 
  1477  0499                     	;# 
  1478  049A                     	;# 
  1479  049B                     	;# 
  1480  049C                     	;# 
  1481  049D                     	;# 
  1482  050C                     	;# 
  1483  050C                     	;# 
  1484  050D                     	;# 
  1485  050E                     	;# 
  1486  050F                     	;# 
  1487  050F                     	;# 
  1488  0510                     	;# 
  1489  0511                     	;# 
  1490  0512                     	;# 
  1491  0512                     	;# 
  1492  0513                     	;# 
  1493  0514                     	;# 
  1494  0515                     	;# 
  1495  0515                     	;# 
  1496  0516                     	;# 
  1497  0517                     	;# 
  1498  0518                     	;# 
  1499  0519                     	;# 
  1500  051A                     	;# 
  1501  051B                     	;# 
  1502  051C                     	;# 
  1503  051D                     	;# 
  1504  058C                     	;# 
  1505  058C                     	;# 
  1506  058D                     	;# 
  1507  058E                     	;# 
  1508  058F                     	;# 
  1509  058F                     	;# 
  1510  0590                     	;# 
  1511  0591                     	;# 
  1512  0592                     	;# 
  1513  0593                     	;# 
  1514  060C                     	;# 
  1515  060D                     	;# 
  1516  060E                     	;# 
  1517  060F                     	;# 
  1518  0610                     	;# 
  1519  0611                     	;# 
  1520  0612                     	;# 
  1521  0613                     	;# 
  1522  0614                     	;# 
  1523  0616                     	;# 
  1524  0617                     	;# 
  1525  0618                     	;# 
  1526  0619                     	;# 
  1527  061A                     	;# 
  1528  061B                     	;# 
  1529  061C                     	;# 
  1530  061D                     	;# 
  1531  061E                     	;# 
  1532  068C                     	;# 
  1533  068D                     	;# 
  1534  068E                     	;# 
  1535  068F                     	;# 
  1536  0690                     	;# 
  1537  0691                     	;# 
  1538  0692                     	;# 
  1539  0693                     	;# 
  1540  0694                     	;# 
  1541  070C                     	;# 
  1542  070D                     	;# 
  1543  070E                     	;# 
  1544  070F                     	;# 
  1545  0710                     	;# 
  1546  0711                     	;# 
  1547  0712                     	;# 
  1548  0713                     	;# 
  1549  0714                     	;# 
  1550  0716                     	;# 
  1551  0717                     	;# 
  1552  0718                     	;# 
  1553  0719                     	;# 
  1554  071A                     	;# 
  1555  071B                     	;# 
  1556  071C                     	;# 
  1557  071D                     	;# 
  1558  071E                     	;# 
  1559  0796                     	;# 
  1560  0797                     	;# 
  1561  0798                     	;# 
  1562  0799                     	;# 
  1563  079A                     	;# 
  1564  079B                     	;# 
  1565  080C                     	;# 
  1566  080D                     	;# 
  1567  080E                     	;# 
  1568  080F                     	;# 
  1569  0810                     	;# 
  1570  0811                     	;# 
  1571  0812                     	;# 
  1572  0813                     	;# 
  1573  0814                     	;# 
  1574  081A                     	;# 
  1575  081B                     	;# 
  1576  081C                     	;# 
  1577  081D                     	;# 
  1578  081E                     	;# 
  1579  081F                     	;# 
  1580  088C                     	;# 
  1581  088D                     	;# 
  1582  088E                     	;# 
  1583  088F                     	;# 
  1584  0890                     	;# 
  1585  0891                     	;# 
  1586  0892                     	;# 
  1587  0893                     	;# 
  1588  0895                     	;# 
  1589  0896                     	;# 
  1590  0897                     	;# 
  1591  0898                     	;# 
  1592  0899                     	;# 
  1593  089A                     	;# 
  1594  089B                     	;# 
  1595  090C                     	;# 
  1596  090E                     	;# 
  1597  090F                     	;# 
  1598  091F                     	;# 
  1599  091F                     	;# 
  1600  098F                     	;# 
  1601  098F                     	;# 
  1602  0990                     	;# 
  1603  0991                     	;# 
  1604  0992                     	;# 
  1605  0993                     	;# 
  1606  0994                     	;# 
  1607  0995                     	;# 
  1608  0996                     	;# 
  1609  0997                     	;# 
  1610  0E0F                     	;# 
  1611  0E10                     	;# 
  1612  0E11                     	;# 
  1613  0E12                     	;# 
  1614  0E13                     	;# 
  1615  0E14                     	;# 
  1616  0E15                     	;# 
  1617  0E16                     	;# 
  1618  0E17                     	;# 
  1619  0E18                     	;# 
  1620  0E19                     	;# 
  1621  0E1A                     	;# 
  1622  0E1B                     	;# 
  1623  0E1C                     	;# 
  1624  0E1D                     	;# 
  1625  0E1E                     	;# 
  1626  0E1F                     	;# 
  1627  0E20                     	;# 
  1628  0E21                     	;# 
  1629  0E22                     	;# 
  1630  0E23                     	;# 
  1631  0E24                     	;# 
  1632  0E25                     	;# 
  1633  0E26                     	;# 
  1634  0E27                     	;# 
  1635  0E28                     	;# 
  1636  0E29                     	;# 
  1637  0E2A                     	;# 
  1638  0E2B                     	;# 
  1639  0E2C                     	;# 
  1640  0E2D                     	;# 
  1641  0E2E                     	;# 
  1642  0E2F                     	;# 
  1643  0E30                     	;# 
  1644  0E31                     	;# 
  1645  0E32                     	;# 
  1646  0E33                     	;# 
  1647  0E34                     	;# 
  1648  0E35                     	;# 
  1649  0E36                     	;# 
  1650  0E37                     	;# 
  1651  0E8F                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E9C                     	;# 
  1661  0E9D                     	;# 
  1662  0E9E                     	;# 
  1663  0EA1                     	;# 
  1664  0EA2                     	;# 
  1665  0EA3                     	;# 
  1666  0EA4                     	;# 
  1667  0EA5                     	;# 
  1668  0EA9                     	;# 
  1669  0EAA                     	;# 
  1670  0EAB                     	;# 
  1671  0EAC                     	;# 
  1672  0EB1                     	;# 
  1673  0EB2                     	;# 
  1674  0EB3                     	;# 
  1675  0EB8                     	;# 
  1676  0EB9                     	;# 
  1677  0EBA                     	;# 
  1678  0EBB                     	;# 
  1679  0EBC                     	;# 
  1680  0EBD                     	;# 
  1681  0EBE                     	;# 
  1682  0EC3                     	;# 
  1683  0EC5                     	;# 
  1684  0EC6                     	;# 
  1685  0EC7                     	;# 
  1686  0EC8                     	;# 
  1687  0EC9                     	;# 
  1688  0ECA                     	;# 
  1689  0ECB                     	;# 
  1690  0ECC                     	;# 
  1691  0F10                     	;# 
  1692  0F11                     	;# 
  1693  0F12                     	;# 
  1694  0F13                     	;# 
  1695  0F14                     	;# 
  1696  0F15                     	;# 
  1697  0F16                     	;# 
  1698  0F17                     	;# 
  1699  0F18                     	;# 
  1700  0F19                     	;# 
  1701  0F1A                     	;# 
  1702  0F1B                     	;# 
  1703  0F1C                     	;# 
  1704  0F1D                     	;# 
  1705  0F1E                     	;# 
  1706  0F1F                     	;# 
  1707  0F20                     	;# 
  1708  0F21                     	;# 
  1709  0F22                     	;# 
  1710  0F23                     	;# 
  1711  0F24                     	;# 
  1712  0F25                     	;# 
  1713  0F26                     	;# 
  1714  0F27                     	;# 
  1715  0F28                     	;# 
  1716  0F29                     	;# 
  1717  0F2A                     	;# 
  1718  0F2B                     	;# 
  1719  0F2C                     	;# 
  1720  0F2D                     	;# 
  1721  0F2E                     	;# 
  1722  0F2F                     	;# 
  1723  0F30                     	;# 
  1724  0F31                     	;# 
  1725  0F32                     	;# 
  1726  0F38                     	;# 
  1727  0F39                     	;# 
  1728  0F3A                     	;# 
  1729  0F3B                     	;# 
  1730  0F3C                     	;# 
  1731  0F3D                     	;# 
  1732  0F3E                     	;# 
  1733  0F3F                     	;# 
  1734  0F40                     	;# 
  1735  0F41                     	;# 
  1736  0F43                     	;# 
  1737  0F44                     	;# 
  1738  0F45                     	;# 
  1739  0F46                     	;# 
  1740  0F47                     	;# 
  1741  0F48                     	;# 
  1742  0F49                     	;# 
  1743  0F4A                     	;# 
  1744  0F4B                     	;# 
  1745  0F4C                     	;# 
  1746  0F4E                     	;# 
  1747  0F4F                     	;# 
  1748  0F50                     	;# 
  1749  0F51                     	;# 
  1750  0F52                     	;# 
  1751  0F53                     	;# 
  1752  0F54                     	;# 
  1753  0F55                     	;# 
  1754  0F56                     	;# 
  1755  0F57                     	;# 
  1756  0F59                     	;# 
  1757  0F5A                     	;# 
  1758  0F5B                     	;# 
  1759  0F5C                     	;# 
  1760  0F5D                     	;# 
  1761  0F61                     	;# 
  1762  0F62                     	;# 
  1763  0F64                     	;# 
  1764  0F65                     	;# 
  1765  0F66                     	;# 
  1766  0F67                     	;# 
  1767  0F68                     	;# 
  1768  0F69                     	;# 
  1769  0F6A                     	;# 
  1770  0F6B                     	;# 
  1771  0F6C                     	;# 
  1772  0F6D                     	;# 
  1773  0FE4                     	;# 
  1774  0FE5                     	;# 
  1775  0FE6                     	;# 
  1776  0FE7                     	;# 
  1777  0FE8                     	;# 
  1778  0FE9                     	;# 
  1779  0FEA                     	;# 
  1780  0FEB                     	;# 
  1781  0FED                     	;# 
  1782  0FEE                     	;# 
  1783  0FEF                     	;# 
  1784  0000                     	;# 
  1785  0001                     	;# 
  1786  0002                     	;# 
  1787  0003                     	;# 
  1788  0004                     	;# 
  1789  0005                     	;# 
  1790  0006                     	;# 
  1791  0007                     	;# 
  1792  0008                     	;# 
  1793  0009                     	;# 
  1794  000A                     	;# 
  1795  000B                     	;# 
  1796  000C                     	;# 
  1797  000D                     	;# 
  1798  000E                     	;# 
  1799  000F                     	;# 
  1800  0010                     	;# 
  1801  0011                     	;# 
  1802  0012                     	;# 
  1803  0013                     	;# 
  1804  0014                     	;# 
  1805  0015                     	;# 
  1806  0016                     	;# 
  1807  0017                     	;# 
  1808  0018                     	;# 
  1809  0019                     	;# 
  1810  001A                     	;# 
  1811  001C                     	;# 
  1812  001C                     	;# 
  1813  001D                     	;# 
  1814  001D                     	;# 
  1815  001E                     	;# 
  1816  001F                     	;# 
  1817  008C                     	;# 
  1818  008C                     	;# 
  1819  008D                     	;# 
  1820  008E                     	;# 
  1821  008E                     	;# 
  1822  008F                     	;# 
  1823  0090                     	;# 
  1824  0090                     	;# 
  1825  0091                     	;# 
  1826  0093                     	;# 
  1827  0094                     	;# 
  1828  0095                     	;# 
  1829  0096                     	;# 
  1830  0097                     	;# 
  1831  0098                     	;# 
  1832  0099                     	;# 
  1833  009A                     	;# 
  1834  009B                     	;# 
  1835  009C                     	;# 
  1836  009D                     	;# 
  1837  009E                     	;# 
  1838  010C                     	;# 
  1839  010D                     	;# 
  1840  010E                     	;# 
  1841  010E                     	;# 
  1842  010F                     	;# 
  1843  0110                     	;# 
  1844  0110                     	;# 
  1845  0111                     	;# 
  1846  0112                     	;# 
  1847  0112                     	;# 
  1848  0113                     	;# 
  1849  0114                     	;# 
  1850  0114                     	;# 
  1851  0115                     	;# 
  1852  0116                     	;# 
  1853  0116                     	;# 
  1854  0117                     	;# 
  1855  0119                     	;# 
  1856  0119                     	;# 
  1857  0119                     	;# 
  1858  011A                     	;# 
  1859  011A                     	;# 
  1860  011A                     	;# 
  1861  011B                     	;# 
  1862  011B                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011C                     	;# 
  1867  011C                     	;# 
  1868  011C                     	;# 
  1869  011D                     	;# 
  1870  011D                     	;# 
  1871  011D                     	;# 
  1872  011E                     	;# 
  1873  011E                     	;# 
  1874  011E                     	;# 
  1875  011F                     	;# 
  1876  011F                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  018C                     	;# 
  1881  018D                     	;# 
  1882  018E                     	;# 
  1883  018F                     	;# 
  1884  0190                     	;# 
  1885  0191                     	;# 
  1886  0192                     	;# 
  1887  0196                     	;# 
  1888  0197                     	;# 
  1889  0198                     	;# 
  1890  0199                     	;# 
  1891  019A                     	;# 
  1892  019B                     	;# 
  1893  019C                     	;# 
  1894  020C                     	;# 
  1895  020C                     	;# 
  1896  020D                     	;# 
  1897  020E                     	;# 
  1898  020F                     	;# 
  1899  020F                     	;# 
  1900  0210                     	;# 
  1901  0210                     	;# 
  1902  0211                     	;# 
  1903  0211                     	;# 
  1904  0212                     	;# 
  1905  0212                     	;# 
  1906  0213                     	;# 
  1907  0214                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0216                     	;# 
  1911  0216                     	;# 
  1912  0217                     	;# 
  1913  0217                     	;# 
  1914  0218                     	;# 
  1915  0218                     	;# 
  1916  0219                     	;# 
  1917  021A                     	;# 
  1918  021B                     	;# 
  1919  021B                     	;# 
  1920  021C                     	;# 
  1921  021C                     	;# 
  1922  021D                     	;# 
  1923  021D                     	;# 
  1924  021E                     	;# 
  1925  021F                     	;# 
  1926  028C                     	;# 
  1927  028C                     	;# 
  1928  028D                     	;# 
  1929  028D                     	;# 
  1930  028E                     	;# 
  1931  028F                     	;# 
  1932  0290                     	;# 
  1933  0290                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0292                     	;# 
  1937  0293                     	;# 
  1938  0293                     	;# 
  1939  0294                     	;# 
  1940  0295                     	;# 
  1941  0296                     	;# 
  1942  0296                     	;# 
  1943  0297                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029C                     	;# 
  1952  029D                     	;# 
  1953  030C                     	;# 
  1954  030C                     	;# 
  1955  030D                     	;# 
  1956  030E                     	;# 
  1957  030F                     	;# 
  1958  0310                     	;# 
  1959  0310                     	;# 
  1960  0311                     	;# 
  1961  0312                     	;# 
  1962  0313                     	;# 
  1963  0314                     	;# 
  1964  0314                     	;# 
  1965  0315                     	;# 
  1966  0316                     	;# 
  1967  0317                     	;# 
  1968  0318                     	;# 
  1969  0318                     	;# 
  1970  0319                     	;# 
  1971  031A                     	;# 
  1972  031B                     	;# 
  1973  031C                     	;# 
  1974  031C                     	;# 
  1975  031D                     	;# 
  1976  031E                     	;# 
  1977  031F                     	;# 
  1978  038C                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0390                     	;# 
  1983  0390                     	;# 
  1984  0391                     	;# 
  1985  0392                     	;# 
  1986  040C                     	;# 
  1987  040D                     	;# 
  1988  040E                     	;# 
  1989  040F                     	;# 
  1990  0410                     	;# 
  1991  0411                     	;# 
  1992  0416                     	;# 
  1993  0416                     	;# 
  1994  0417                     	;# 
  1995  0418                     	;# 
  1996  0418                     	;# 
  1997  0419                     	;# 
  1998  041A                     	;# 
  1999  041A                     	;# 
  2000  041B                     	;# 
  2001  041C                     	;# 
  2002  041C                     	;# 
  2003  041D                     	;# 
  2004  041E                     	;# 
  2005  041F                     	;# 
  2006  048C                     	;# 
  2007  048C                     	;# 
  2008  048D                     	;# 
  2009  048E                     	;# 
  2010  048F                     	;# 
  2011  048F                     	;# 
  2012  0490                     	;# 
  2013  0491                     	;# 
  2014  0492                     	;# 
  2015  0492                     	;# 
  2016  0493                     	;# 
  2017  0494                     	;# 
  2018  0495                     	;# 
  2019  0495                     	;# 
  2020  0496                     	;# 
  2021  0497                     	;# 
  2022  0498                     	;# 
  2023  0499                     	;# 
  2024  049A                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  050C                     	;# 
  2029  050C                     	;# 
  2030  050D                     	;# 
  2031  050E                     	;# 
  2032  050F                     	;# 
  2033  050F                     	;# 
  2034  0510                     	;# 
  2035  0511                     	;# 
  2036  0512                     	;# 
  2037  0512                     	;# 
  2038  0513                     	;# 
  2039  0514                     	;# 
  2040  0515                     	;# 
  2041  0515                     	;# 
  2042  0516                     	;# 
  2043  0517                     	;# 
  2044  0518                     	;# 
  2045  0519                     	;# 
  2046  051A                     	;# 
  2047  051B                     	;# 
  2048  051C                     	;# 
  2049  051D                     	;# 
  2050  058C                     	;# 
  2051  058C                     	;# 
  2052  058D                     	;# 
  2053  058E                     	;# 
  2054  058F                     	;# 
  2055  058F                     	;# 
  2056  0590                     	;# 
  2057  0591                     	;# 
  2058  0592                     	;# 
  2059  0593                     	;# 
  2060  060C                     	;# 
  2061  060D                     	;# 
  2062  060E                     	;# 
  2063  060F                     	;# 
  2064  0610                     	;# 
  2065  0611                     	;# 
  2066  0612                     	;# 
  2067  0613                     	;# 
  2068  0614                     	;# 
  2069  0616                     	;# 
  2070  0617                     	;# 
  2071  0618                     	;# 
  2072  0619                     	;# 
  2073  061A                     	;# 
  2074  061B                     	;# 
  2075  061C                     	;# 
  2076  061D                     	;# 
  2077  061E                     	;# 
  2078  068C                     	;# 
  2079  068D                     	;# 
  2080  068E                     	;# 
  2081  068F                     	;# 
  2082  0690                     	;# 
  2083  0691                     	;# 
  2084  0692                     	;# 
  2085  0693                     	;# 
  2086  0694                     	;# 
  2087  070C                     	;# 
  2088  070D                     	;# 
  2089  070E                     	;# 
  2090  070F                     	;# 
  2091  0710                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  071A                     	;# 
  2101  071B                     	;# 
  2102  071C                     	;# 
  2103  071D                     	;# 
  2104  071E                     	;# 
  2105  0796                     	;# 
  2106  0797                     	;# 
  2107  0798                     	;# 
  2108  0799                     	;# 
  2109  079A                     	;# 
  2110  079B                     	;# 
  2111  080C                     	;# 
  2112  080D                     	;# 
  2113  080E                     	;# 
  2114  080F                     	;# 
  2115  0810                     	;# 
  2116  0811                     	;# 
  2117  0812                     	;# 
  2118  0813                     	;# 
  2119  0814                     	;# 
  2120  081A                     	;# 
  2121  081B                     	;# 
  2122  081C                     	;# 
  2123  081D                     	;# 
  2124  081E                     	;# 
  2125  081F                     	;# 
  2126  088C                     	;# 
  2127  088D                     	;# 
  2128  088E                     	;# 
  2129  088F                     	;# 
  2130  0890                     	;# 
  2131  0891                     	;# 
  2132  0892                     	;# 
  2133  0893                     	;# 
  2134  0895                     	;# 
  2135  0896                     	;# 
  2136  0897                     	;# 
  2137  0898                     	;# 
  2138  0899                     	;# 
  2139  089A                     	;# 
  2140  089B                     	;# 
  2141  090C                     	;# 
  2142  090E                     	;# 
  2143  090F                     	;# 
  2144  091F                     	;# 
  2145  091F                     	;# 
  2146  098F                     	;# 
  2147  098F                     	;# 
  2148  0990                     	;# 
  2149  0991                     	;# 
  2150  0992                     	;# 
  2151  0993                     	;# 
  2152  0994                     	;# 
  2153  0995                     	;# 
  2154  0996                     	;# 
  2155  0997                     	;# 
  2156  0E0F                     	;# 
  2157  0E10                     	;# 
  2158  0E11                     	;# 
  2159  0E12                     	;# 
  2160  0E13                     	;# 
  2161  0E14                     	;# 
  2162  0E15                     	;# 
  2163  0E16                     	;# 
  2164  0E17                     	;# 
  2165  0E18                     	;# 
  2166  0E19                     	;# 
  2167  0E1A                     	;# 
  2168  0E1B                     	;# 
  2169  0E1C                     	;# 
  2170  0E1D                     	;# 
  2171  0E1E                     	;# 
  2172  0E1F                     	;# 
  2173  0E20                     	;# 
  2174  0E21                     	;# 
  2175  0E22                     	;# 
  2176  0E23                     	;# 
  2177  0E24                     	;# 
  2178  0E25                     	;# 
  2179  0E26                     	;# 
  2180  0E27                     	;# 
  2181  0E28                     	;# 
  2182  0E29                     	;# 
  2183  0E2A                     	;# 
  2184  0E2B                     	;# 
  2185  0E2C                     	;# 
  2186  0E2D                     	;# 
  2187  0E2E                     	;# 
  2188  0E2F                     	;# 
  2189  0E30                     	;# 
  2190  0E31                     	;# 
  2191  0E32                     	;# 
  2192  0E33                     	;# 
  2193  0E34                     	;# 
  2194  0E35                     	;# 
  2195  0E36                     	;# 
  2196  0E37                     	;# 
  2197  0E8F                     	;# 
  2198  0E90                     	;# 
  2199  0E91                     	;# 
  2200  0E92                     	;# 
  2201  0E93                     	;# 
  2202  0E94                     	;# 
  2203  0E95                     	;# 
  2204  0E96                     	;# 
  2205  0E97                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0EA1                     	;# 
  2210  0EA2                     	;# 
  2211  0EA3                     	;# 
  2212  0EA4                     	;# 
  2213  0EA5                     	;# 
  2214  0EA9                     	;# 
  2215  0EAA                     	;# 
  2216  0EAB                     	;# 
  2217  0EAC                     	;# 
  2218  0EB1                     	;# 
  2219  0EB2                     	;# 
  2220  0EB3                     	;# 
  2221  0EB8                     	;# 
  2222  0EB9                     	;# 
  2223  0EBA                     	;# 
  2224  0EBB                     	;# 
  2225  0EBC                     	;# 
  2226  0EBD                     	;# 
  2227  0EBE                     	;# 
  2228  0EC3                     	;# 
  2229  0EC5                     	;# 
  2230  0EC6                     	;# 
  2231  0EC7                     	;# 
  2232  0EC8                     	;# 
  2233  0EC9                     	;# 
  2234  0ECA                     	;# 
  2235  0ECB                     	;# 
  2236  0ECC                     	;# 
  2237  0F10                     	;# 
  2238  0F11                     	;# 
  2239  0F12                     	;# 
  2240  0F13                     	;# 
  2241  0F14                     	;# 
  2242  0F15                     	;# 
  2243  0F16                     	;# 
  2244  0F17                     	;# 
  2245  0F18                     	;# 
  2246  0F19                     	;# 
  2247  0F1A                     	;# 
  2248  0F1B                     	;# 
  2249  0F1C                     	;# 
  2250  0F1D                     	;# 
  2251  0F1E                     	;# 
  2252  0F1F                     	;# 
  2253  0F20                     	;# 
  2254  0F21                     	;# 
  2255  0F22                     	;# 
  2256  0F23                     	;# 
  2257  0F24                     	;# 
  2258  0F25                     	;# 
  2259  0F26                     	;# 
  2260  0F27                     	;# 
  2261  0F28                     	;# 
  2262  0F29                     	;# 
  2263  0F2A                     	;# 
  2264  0F2B                     	;# 
  2265  0F2C                     	;# 
  2266  0F2D                     	;# 
  2267  0F2E                     	;# 
  2268  0F2F                     	;# 
  2269  0F30                     	;# 
  2270  0F31                     	;# 
  2271  0F32                     	;# 
  2272  0F38                     	;# 
  2273  0F39                     	;# 
  2274  0F3A                     	;# 
  2275  0F3B                     	;# 
  2276  0F3C                     	;# 
  2277  0F3D                     	;# 
  2278  0F3E                     	;# 
  2279  0F3F                     	;# 
  2280  0F40                     	;# 
  2281  0F41                     	;# 
  2282  0F43                     	;# 
  2283  0F44                     	;# 
  2284  0F45                     	;# 
  2285  0F46                     	;# 
  2286  0F47                     	;# 
  2287  0F48                     	;# 
  2288  0F49                     	;# 
  2289  0F4A                     	;# 
  2290  0F4B                     	;# 
  2291  0F4C                     	;# 
  2292  0F4E                     	;# 
  2293  0F4F                     	;# 
  2294  0F50                     	;# 
  2295  0F51                     	;# 
  2296  0F52                     	;# 
  2297  0F53                     	;# 
  2298  0F54                     	;# 
  2299  0F55                     	;# 
  2300  0F56                     	;# 
  2301  0F57                     	;# 
  2302  0F59                     	;# 
  2303  0F5A                     	;# 
  2304  0F5B                     	;# 
  2305  0F5C                     	;# 
  2306  0F5D                     	;# 
  2307  0F61                     	;# 
  2308  0F62                     	;# 
  2309  0F64                     	;# 
  2310  0F65                     	;# 
  2311  0F66                     	;# 
  2312  0F67                     	;# 
  2313  0F68                     	;# 
  2314  0F69                     	;# 
  2315  0F6A                     	;# 
  2316  0F6B                     	;# 
  2317  0F6C                     	;# 
  2318  0F6D                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  000F                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001C                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  008E                     	;# 
  2368  008F                     	;# 
  2369  0090                     	;# 
  2370  0090                     	;# 
  2371  0091                     	;# 
  2372  0093                     	;# 
  2373  0094                     	;# 
  2374  0095                     	;# 
  2375  0096                     	;# 
  2376  0097                     	;# 
  2377  0098                     	;# 
  2378  0099                     	;# 
  2379  009A                     	;# 
  2380  009B                     	;# 
  2381  009C                     	;# 
  2382  009D                     	;# 
  2383  009E                     	;# 
  2384  010C                     	;# 
  2385  010D                     	;# 
  2386  010E                     	;# 
  2387  010E                     	;# 
  2388  010F                     	;# 
  2389  0110                     	;# 
  2390  0110                     	;# 
  2391  0111                     	;# 
  2392  0112                     	;# 
  2393  0112                     	;# 
  2394  0113                     	;# 
  2395  0114                     	;# 
  2396  0114                     	;# 
  2397  0115                     	;# 
  2398  0116                     	;# 
  2399  0116                     	;# 
  2400  0117                     	;# 
  2401  0119                     	;# 
  2402  0119                     	;# 
  2403  0119                     	;# 
  2404  011A                     	;# 
  2405  011A                     	;# 
  2406  011A                     	;# 
  2407  011B                     	;# 
  2408  011B                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011C                     	;# 
  2413  011C                     	;# 
  2414  011C                     	;# 
  2415  011D                     	;# 
  2416  011D                     	;# 
  2417  011D                     	;# 
  2418  011E                     	;# 
  2419  011E                     	;# 
  2420  011E                     	;# 
  2421  011F                     	;# 
  2422  011F                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  018C                     	;# 
  2427  018D                     	;# 
  2428  018E                     	;# 
  2429  018F                     	;# 
  2430  0190                     	;# 
  2431  0191                     	;# 
  2432  0192                     	;# 
  2433  0196                     	;# 
  2434  0197                     	;# 
  2435  0198                     	;# 
  2436  0199                     	;# 
  2437  019A                     	;# 
  2438  019B                     	;# 
  2439  019C                     	;# 
  2440  020C                     	;# 
  2441  020C                     	;# 
  2442  020D                     	;# 
  2443  020E                     	;# 
  2444  020F                     	;# 
  2445  020F                     	;# 
  2446  0210                     	;# 
  2447  0210                     	;# 
  2448  0211                     	;# 
  2449  0211                     	;# 
  2450  0212                     	;# 
  2451  0212                     	;# 
  2452  0213                     	;# 
  2453  0214                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0216                     	;# 
  2457  0216                     	;# 
  2458  0217                     	;# 
  2459  0217                     	;# 
  2460  0218                     	;# 
  2461  0218                     	;# 
  2462  0219                     	;# 
  2463  021A                     	;# 
  2464  021B                     	;# 
  2465  021B                     	;# 
  2466  021C                     	;# 
  2467  021C                     	;# 
  2468  021D                     	;# 
  2469  021D                     	;# 
  2470  021E                     	;# 
  2471  021F                     	;# 
  2472  028C                     	;# 
  2473  028C                     	;# 
  2474  028D                     	;# 
  2475  028D                     	;# 
  2476  028E                     	;# 
  2477  028F                     	;# 
  2478  0290                     	;# 
  2479  0290                     	;# 
  2480  0291                     	;# 
  2481  0292                     	;# 
  2482  0292                     	;# 
  2483  0293                     	;# 
  2484  0293                     	;# 
  2485  0294                     	;# 
  2486  0295                     	;# 
  2487  0296                     	;# 
  2488  0296                     	;# 
  2489  0297                     	;# 
  2490  0298                     	;# 
  2491  0298                     	;# 
  2492  0299                     	;# 
  2493  0299                     	;# 
  2494  029A                     	;# 
  2495  029B                     	;# 
  2496  029C                     	;# 
  2497  029C                     	;# 
  2498  029D                     	;# 
  2499  030C                     	;# 
  2500  030C                     	;# 
  2501  030D                     	;# 
  2502  030E                     	;# 
  2503  030F                     	;# 
  2504  0310                     	;# 
  2505  0310                     	;# 
  2506  0311                     	;# 
  2507  0312                     	;# 
  2508  0313                     	;# 
  2509  0314                     	;# 
  2510  0314                     	;# 
  2511  0315                     	;# 
  2512  0316                     	;# 
  2513  0317                     	;# 
  2514  0318                     	;# 
  2515  0318                     	;# 
  2516  0319                     	;# 
  2517  031A                     	;# 
  2518  031B                     	;# 
  2519  031C                     	;# 
  2520  031C                     	;# 
  2521  031D                     	;# 
  2522  031E                     	;# 
  2523  031F                     	;# 
  2524  038C                     	;# 
  2525  038C                     	;# 
  2526  038D                     	;# 
  2527  038E                     	;# 
  2528  0390                     	;# 
  2529  0390                     	;# 
  2530  0391                     	;# 
  2531  0392                     	;# 
  2532  040C                     	;# 
  2533  040D                     	;# 
  2534  040E                     	;# 
  2535  040F                     	;# 
  2536  0410                     	;# 
  2537  0411                     	;# 
  2538  0416                     	;# 
  2539  0416                     	;# 
  2540  0417                     	;# 
  2541  0418                     	;# 
  2542  0418                     	;# 
  2543  0419                     	;# 
  2544  041A                     	;# 
  2545  041A                     	;# 
  2546  041B                     	;# 
  2547  041C                     	;# 
  2548  041C                     	;# 
  2549  041D                     	;# 
  2550  041E                     	;# 
  2551  041F                     	;# 
  2552  048C                     	;# 
  2553  048C                     	;# 
  2554  048D                     	;# 
  2555  048E                     	;# 
  2556  048F                     	;# 
  2557  048F                     	;# 
  2558  0490                     	;# 
  2559  0491                     	;# 
  2560  0492                     	;# 
  2561  0492                     	;# 
  2562  0493                     	;# 
  2563  0494                     	;# 
  2564  0495                     	;# 
  2565  0495                     	;# 
  2566  0496                     	;# 
  2567  0497                     	;# 
  2568  0498                     	;# 
  2569  0499                     	;# 
  2570  049A                     	;# 
  2571  049B                     	;# 
  2572  049C                     	;# 
  2573  049D                     	;# 
  2574  050C                     	;# 
  2575  050C                     	;# 
  2576  050D                     	;# 
  2577  050E                     	;# 
  2578  050F                     	;# 
  2579  050F                     	;# 
  2580  0510                     	;# 
  2581  0511                     	;# 
  2582  0512                     	;# 
  2583  0512                     	;# 
  2584  0513                     	;# 
  2585  0514                     	;# 
  2586  0515                     	;# 
  2587  0515                     	;# 
  2588  0516                     	;# 
  2589  0517                     	;# 
  2590  0518                     	;# 
  2591  0519                     	;# 
  2592  051A                     	;# 
  2593  051B                     	;# 
  2594  051C                     	;# 
  2595  051D                     	;# 
  2596  058C                     	;# 
  2597  058C                     	;# 
  2598  058D                     	;# 
  2599  058E                     	;# 
  2600  058F                     	;# 
  2601  058F                     	;# 
  2602  0590                     	;# 
  2603  0591                     	;# 
  2604  0592                     	;# 
  2605  0593                     	;# 
  2606  060C                     	;# 
  2607  060D                     	;# 
  2608  060E                     	;# 
  2609  060F                     	;# 
  2610  0610                     	;# 
  2611  0611                     	;# 
  2612  0612                     	;# 
  2613  0613                     	;# 
  2614  0614                     	;# 
  2615  0616                     	;# 
  2616  0617                     	;# 
  2617  0618                     	;# 
  2618  0619                     	;# 
  2619  061A                     	;# 
  2620  061B                     	;# 
  2621  061C                     	;# 
  2622  061D                     	;# 
  2623  061E                     	;# 
  2624  068C                     	;# 
  2625  068D                     	;# 
  2626  068E                     	;# 
  2627  068F                     	;# 
  2628  0690                     	;# 
  2629  0691                     	;# 
  2630  0692                     	;# 
  2631  0693                     	;# 
  2632  0694                     	;# 
  2633  070C                     	;# 
  2634  070D                     	;# 
  2635  070E                     	;# 
  2636  070F                     	;# 
  2637  0710                     	;# 
  2638  0711                     	;# 
  2639  0712                     	;# 
  2640  0713                     	;# 
  2641  0714                     	;# 
  2642  0716                     	;# 
  2643  0717                     	;# 
  2644  0718                     	;# 
  2645  0719                     	;# 
  2646  071A                     	;# 
  2647  071B                     	;# 
  2648  071C                     	;# 
  2649  071D                     	;# 
  2650  071E                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  080C                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  081A                     	;# 
  2667  081B                     	;# 
  2668  081C                     	;# 
  2669  081D                     	;# 
  2670  081E                     	;# 
  2671  081F                     	;# 
  2672  088C                     	;# 
  2673  088D                     	;# 
  2674  088E                     	;# 
  2675  088F                     	;# 
  2676  0890                     	;# 
  2677  0891                     	;# 
  2678  0892                     	;# 
  2679  0893                     	;# 
  2680  0895                     	;# 
  2681  0896                     	;# 
  2682  0897                     	;# 
  2683  0898                     	;# 
  2684  0899                     	;# 
  2685  089A                     	;# 
  2686  089B                     	;# 
  2687  090C                     	;# 
  2688  090E                     	;# 
  2689  090F                     	;# 
  2690  091F                     	;# 
  2691  091F                     	;# 
  2692  098F                     	;# 
  2693  098F                     	;# 
  2694  0990                     	;# 
  2695  0991                     	;# 
  2696  0992                     	;# 
  2697  0993                     	;# 
  2698  0994                     	;# 
  2699  0995                     	;# 
  2700  0996                     	;# 
  2701  0997                     	;# 
  2702  0E0F                     	;# 
  2703  0E10                     	;# 
  2704  0E11                     	;# 
  2705  0E12                     	;# 
  2706  0E13                     	;# 
  2707  0E14                     	;# 
  2708  0E15                     	;# 
  2709  0E16                     	;# 
  2710  0E17                     	;# 
  2711  0E18                     	;# 
  2712  0E19                     	;# 
  2713  0E1A                     	;# 
  2714  0E1B                     	;# 
  2715  0E1C                     	;# 
  2716  0E1D                     	;# 
  2717  0E1E                     	;# 
  2718  0E1F                     	;# 
  2719  0E20                     	;# 
  2720  0E21                     	;# 
  2721  0E22                     	;# 
  2722  0E23                     	;# 
  2723  0E24                     	;# 
  2724  0E25                     	;# 
  2725  0E26                     	;# 
  2726  0E27                     	;# 
  2727  0E28                     	;# 
  2728  0E29                     	;# 
  2729  0E2A                     	;# 
  2730  0E2B                     	;# 
  2731  0E2C                     	;# 
  2732  0E2D                     	;# 
  2733  0E2E                     	;# 
  2734  0E2F                     	;# 
  2735  0E30                     	;# 
  2736  0E31                     	;# 
  2737  0E32                     	;# 
  2738  0E33                     	;# 
  2739  0E34                     	;# 
  2740  0E35                     	;# 
  2741  0E36                     	;# 
  2742  0E37                     	;# 
  2743  0E8F                     	;# 
  2744  0E90                     	;# 
  2745  0E91                     	;# 
  2746  0E92                     	;# 
  2747  0E93                     	;# 
  2748  0E94                     	;# 
  2749  0E95                     	;# 
  2750  0E96                     	;# 
  2751  0E97                     	;# 
  2752  0E9C                     	;# 
  2753  0E9D                     	;# 
  2754  0E9E                     	;# 
  2755  0EA1                     	;# 
  2756  0EA2                     	;# 
  2757  0EA3                     	;# 
  2758  0EA4                     	;# 
  2759  0EA5                     	;# 
  2760  0EA9                     	;# 
  2761  0EAA                     	;# 
  2762  0EAB                     	;# 
  2763  0EAC                     	;# 
  2764  0EB1                     	;# 
  2765  0EB2                     	;# 
  2766  0EB3                     	;# 
  2767  0EB8                     	;# 
  2768  0EB9                     	;# 
  2769  0EBA                     	;# 
  2770  0EBB                     	;# 
  2771  0EBC                     	;# 
  2772  0EBD                     	;# 
  2773  0EBE                     	;# 
  2774  0EC3                     	;# 
  2775  0EC5                     	;# 
  2776  0EC6                     	;# 
  2777  0EC7                     	;# 
  2778  0EC8                     	;# 
  2779  0EC9                     	;# 
  2780  0ECA                     	;# 
  2781  0ECB                     	;# 
  2782  0ECC                     	;# 
  2783  0F10                     	;# 
  2784  0F11                     	;# 
  2785  0F12                     	;# 
  2786  0F13                     	;# 
  2787  0F14                     	;# 
  2788  0F15                     	;# 
  2789  0F16                     	;# 
  2790  0F17                     	;# 
  2791  0F18                     	;# 
  2792  0F19                     	;# 
  2793  0F1A                     	;# 
  2794  0F1B                     	;# 
  2795  0F1C                     	;# 
  2796  0F1D                     	;# 
  2797  0F1E                     	;# 
  2798  0F1F                     	;# 
  2799  0F20                     	;# 
  2800  0F21                     	;# 
  2801  0F22                     	;# 
  2802  0F23                     	;# 
  2803  0F24                     	;# 
  2804  0F25                     	;# 
  2805  0F26                     	;# 
  2806  0F27                     	;# 
  2807  0F28                     	;# 
  2808  0F29                     	;# 
  2809  0F2A                     	;# 
  2810  0F2B                     	;# 
  2811  0F2C                     	;# 
  2812  0F2D                     	;# 
  2813  0F2E                     	;# 
  2814  0F2F                     	;# 
  2815  0F30                     	;# 
  2816  0F31                     	;# 
  2817  0F32                     	;# 
  2818  0F38                     	;# 
  2819  0F39                     	;# 
  2820  0F3A                     	;# 
  2821  0F3B                     	;# 
  2822  0F3C                     	;# 
  2823  0F3D                     	;# 
  2824  0F3E                     	;# 
  2825  0F3F                     	;# 
  2826  0F40                     	;# 
  2827  0F41                     	;# 
  2828  0F43                     	;# 
  2829  0F44                     	;# 
  2830  0F45                     	;# 
  2831  0F46                     	;# 
  2832  0F47                     	;# 
  2833  0F48                     	;# 
  2834  0F49                     	;# 
  2835  0F4A                     	;# 
  2836  0F4B                     	;# 
  2837  0F4C                     	;# 
  2838  0F4E                     	;# 
  2839  0F4F                     	;# 
  2840  0F50                     	;# 
  2841  0F51                     	;# 
  2842  0F52                     	;# 
  2843  0F53                     	;# 
  2844  0F54                     	;# 
  2845  0F55                     	;# 
  2846  0F56                     	;# 
  2847  0F57                     	;# 
  2848  0F59                     	;# 
  2849  0F5A                     	;# 
  2850  0F5B                     	;# 
  2851  0F5C                     	;# 
  2852  0F5D                     	;# 
  2853  0F61                     	;# 
  2854  0F62                     	;# 
  2855  0F64                     	;# 
  2856  0F65                     	;# 
  2857  0F66                     	;# 
  2858  0F67                     	;# 
  2859  0F68                     	;# 
  2860  0F69                     	;# 
  2861  0F6A                     	;# 
  2862  0F6B                     	;# 
  2863  0F6C                     	;# 
  2864  0F6D                     	;# 
  2865  0FE4                     	;# 
  2866  0FE5                     	;# 
  2867  0FE6                     	;# 
  2868  0FE7                     	;# 
  2869  0FE8                     	;# 
  2870  0FE9                     	;# 
  2871  0FEA                     	;# 
  2872  0FEB                     	;# 
  2873  0FED                     	;# 
  2874  0FEE                     	;# 
  2875  0FEF                     	;# 
  2876  0000                     	;# 
  2877  0001                     	;# 
  2878  0002                     	;# 
  2879  0003                     	;# 
  2880  0004                     	;# 
  2881  0005                     	;# 
  2882  0006                     	;# 
  2883  0007                     	;# 
  2884  0008                     	;# 
  2885  0009                     	;# 
  2886  000A                     	;# 
  2887  000B                     	;# 
  2888  000C                     	;# 
  2889  000D                     	;# 
  2890  000E                     	;# 
  2891  000F                     	;# 
  2892  0010                     	;# 
  2893  0011                     	;# 
  2894  0012                     	;# 
  2895  0013                     	;# 
  2896  0014                     	;# 
  2897  0015                     	;# 
  2898  0016                     	;# 
  2899  0017                     	;# 
  2900  0018                     	;# 
  2901  0019                     	;# 
  2902  001A                     	;# 
  2903  001C                     	;# 
  2904  001C                     	;# 
  2905  001D                     	;# 
  2906  001D                     	;# 
  2907  001E                     	;# 
  2908  001F                     	;# 
  2909  008C                     	;# 
  2910  008C                     	;# 
  2911  008D                     	;# 
  2912  008E                     	;# 
  2913  008E                     	;# 
  2914  008F                     	;# 
  2915  0090                     	;# 
  2916  0090                     	;# 
  2917  0091                     	;# 
  2918  0093                     	;# 
  2919  0094                     	;# 
  2920  0095                     	;# 
  2921  0096                     	;# 
  2922  0097                     	;# 
  2923  0098                     	;# 
  2924  0099                     	;# 
  2925  009A                     	;# 
  2926  009B                     	;# 
  2927  009C                     	;# 
  2928  009D                     	;# 
  2929  009E                     	;# 
  2930  010C                     	;# 
  2931  010D                     	;# 
  2932  010E                     	;# 
  2933  010E                     	;# 
  2934  010F                     	;# 
  2935  0110                     	;# 
  2936  0110                     	;# 
  2937  0111                     	;# 
  2938  0112                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0114                     	;# 
  2943  0115                     	;# 
  2944  0116                     	;# 
  2945  0116                     	;# 
  2946  0117                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  018F                     	;# 
  2976  0190                     	;# 
  2977  0191                     	;# 
  2978  0192                     	;# 
  2979  0196                     	;# 
  2980  0197                     	;# 
  2981  0198                     	;# 
  2982  0199                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  020C                     	;# 
  2987  020C                     	;# 
  2988  020D                     	;# 
  2989  020E                     	;# 
  2990  020F                     	;# 
  2991  020F                     	;# 
  2992  0210                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0214                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0216                     	;# 
  3003  0216                     	;# 
  3004  0217                     	;# 
  3005  0217                     	;# 
  3006  0218                     	;# 
  3007  0218                     	;# 
  3008  0219                     	;# 
  3009  021A                     	;# 
  3010  021B                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028D                     	;# 
  3022  028E                     	;# 
  3023  028F                     	;# 
  3024  0290                     	;# 
  3025  0290                     	;# 
  3026  0291                     	;# 
  3027  0292                     	;# 
  3028  0292                     	;# 
  3029  0293                     	;# 
  3030  0293                     	;# 
  3031  0294                     	;# 
  3032  0295                     	;# 
  3033  0296                     	;# 
  3034  0296                     	;# 
  3035  0297                     	;# 
  3036  0298                     	;# 
  3037  0298                     	;# 
  3038  0299                     	;# 
  3039  0299                     	;# 
  3040  029A                     	;# 
  3041  029B                     	;# 
  3042  029C                     	;# 
  3043  029C                     	;# 
  3044  029D                     	;# 
  3045  030C                     	;# 
  3046  030C                     	;# 
  3047  030D                     	;# 
  3048  030E                     	;# 
  3049  030F                     	;# 
  3050  0310                     	;# 
  3051  0310                     	;# 
  3052  0311                     	;# 
  3053  0312                     	;# 
  3054  0313                     	;# 
  3055  0314                     	;# 
  3056  0314                     	;# 
  3057  0315                     	;# 
  3058  0316                     	;# 
  3059  0317                     	;# 
  3060  0318                     	;# 
  3061  0318                     	;# 
  3062  0319                     	;# 
  3063  031A                     	;# 
  3064  031B                     	;# 
  3065  031C                     	;# 
  3066  031C                     	;# 
  3067  031D                     	;# 
  3068  031E                     	;# 
  3069  031F                     	;# 
  3070  038C                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0390                     	;# 
  3075  0390                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  040C                     	;# 
  3079  040D                     	;# 
  3080  040E                     	;# 
  3081  040F                     	;# 
  3082  0410                     	;# 
  3083  0411                     	;# 
  3084  0416                     	;# 
  3085  0416                     	;# 
  3086  0417                     	;# 
  3087  0418                     	;# 
  3088  0418                     	;# 
  3089  0419                     	;# 
  3090  041A                     	;# 
  3091  041A                     	;# 
  3092  041B                     	;# 
  3093  041C                     	;# 
  3094  041C                     	;# 
  3095  041D                     	;# 
  3096  041E                     	;# 
  3097  041F                     	;# 
  3098  048C                     	;# 
  3099  048C                     	;# 
  3100  048D                     	;# 
  3101  048E                     	;# 
  3102  048F                     	;# 
  3103  048F                     	;# 
  3104  0490                     	;# 
  3105  0491                     	;# 
  3106  0492                     	;# 
  3107  0492                     	;# 
  3108  0493                     	;# 
  3109  0494                     	;# 
  3110  0495                     	;# 
  3111  0495                     	;# 
  3112  0496                     	;# 
  3113  0497                     	;# 
  3114  0498                     	;# 
  3115  0499                     	;# 
  3116  049A                     	;# 
  3117  049B                     	;# 
  3118  049C                     	;# 
  3119  049D                     	;# 
  3120  050C                     	;# 
  3121  050C                     	;# 
  3122  050D                     	;# 
  3123  050E                     	;# 
  3124  050F                     	;# 
  3125  050F                     	;# 
  3126  0510                     	;# 
  3127  0511                     	;# 
  3128  0512                     	;# 
  3129  0512                     	;# 
  3130  0513                     	;# 
  3131  0514                     	;# 
  3132  0515                     	;# 
  3133  0515                     	;# 
  3134  0516                     	;# 
  3135  0517                     	;# 
  3136  0518                     	;# 
  3137  0519                     	;# 
  3138  051A                     	;# 
  3139  051B                     	;# 
  3140  051C                     	;# 
  3141  051D                     	;# 
  3142  058C                     	;# 
  3143  058C                     	;# 
  3144  058D                     	;# 
  3145  058E                     	;# 
  3146  058F                     	;# 
  3147  058F                     	;# 
  3148  0590                     	;# 
  3149  0591                     	;# 
  3150  0592                     	;# 
  3151  0593                     	;# 
  3152  060C                     	;# 
  3153  060D                     	;# 
  3154  060E                     	;# 
  3155  060F                     	;# 
  3156  0610                     	;# 
  3157  0611                     	;# 
  3158  0612                     	;# 
  3159  0613                     	;# 
  3160  0614                     	;# 
  3161  0616                     	;# 
  3162  0617                     	;# 
  3163  0618                     	;# 
  3164  0619                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  061D                     	;# 
  3169  061E                     	;# 
  3170  068C                     	;# 
  3171  068D                     	;# 
  3172  068E                     	;# 
  3173  068F                     	;# 
  3174  0690                     	;# 
  3175  0691                     	;# 
  3176  0692                     	;# 
  3177  0693                     	;# 
  3178  0694                     	;# 
  3179  070C                     	;# 
  3180  070D                     	;# 
  3181  070E                     	;# 
  3182  070F                     	;# 
  3183  0710                     	;# 
  3184  0711                     	;# 
  3185  0712                     	;# 
  3186  0713                     	;# 
  3187  0714                     	;# 
  3188  0716                     	;# 
  3189  0717                     	;# 
  3190  0718                     	;# 
  3191  0719                     	;# 
  3192  071A                     	;# 
  3193  071B                     	;# 
  3194  071C                     	;# 
  3195  071D                     	;# 
  3196  071E                     	;# 
  3197  0796                     	;# 
  3198  0797                     	;# 
  3199  0798                     	;# 
  3200  0799                     	;# 
  3201  079A                     	;# 
  3202  079B                     	;# 
  3203  080C                     	;# 
  3204  080D                     	;# 
  3205  080E                     	;# 
  3206  080F                     	;# 
  3207  0810                     	;# 
  3208  0811                     	;# 
  3209  0812                     	;# 
  3210  0813                     	;# 
  3211  0814                     	;# 
  3212  081A                     	;# 
  3213  081B                     	;# 
  3214  081C                     	;# 
  3215  081D                     	;# 
  3216  081E                     	;# 
  3217  081F                     	;# 
  3218  088C                     	;# 
  3219  088D                     	;# 
  3220  088E                     	;# 
  3221  088F                     	;# 
  3222  0890                     	;# 
  3223  0891                     	;# 
  3224  0892                     	;# 
  3225  0893                     	;# 
  3226  0895                     	;# 
  3227  0896                     	;# 
  3228  0897                     	;# 
  3229  0898                     	;# 
  3230  0899                     	;# 
  3231  089A                     	;# 
  3232  089B                     	;# 
  3233  090C                     	;# 
  3234  090E                     	;# 
  3235  090F                     	;# 
  3236  091F                     	;# 
  3237  091F                     	;# 
  3238  098F                     	;# 
  3239  098F                     	;# 
  3240  0990                     	;# 
  3241  0991                     	;# 
  3242  0992                     	;# 
  3243  0993                     	;# 
  3244  0994                     	;# 
  3245  0995                     	;# 
  3246  0996                     	;# 
  3247  0997                     	;# 
  3248  0E0F                     	;# 
  3249  0E10                     	;# 
  3250  0E11                     	;# 
  3251  0E12                     	;# 
  3252  0E13                     	;# 
  3253  0E14                     	;# 
  3254  0E15                     	;# 
  3255  0E16                     	;# 
  3256  0E17                     	;# 
  3257  0E18                     	;# 
  3258  0E19                     	;# 
  3259  0E1A                     	;# 
  3260  0E1B                     	;# 
  3261  0E1C                     	;# 
  3262  0E1D                     	;# 
  3263  0E1E                     	;# 
  3264  0E1F                     	;# 
  3265  0E20                     	;# 
  3266  0E21                     	;# 
  3267  0E22                     	;# 
  3268  0E23                     	;# 
  3269  0E24                     	;# 
  3270  0E25                     	;# 
  3271  0E26                     	;# 
  3272  0E27                     	;# 
  3273  0E28                     	;# 
  3274  0E29                     	;# 
  3275  0E2A                     	;# 
  3276  0E2B                     	;# 
  3277  0E2C                     	;# 
  3278  0E2D                     	;# 
  3279  0E2E                     	;# 
  3280  0E2F                     	;# 
  3281  0E30                     	;# 
  3282  0E31                     	;# 
  3283  0E32                     	;# 
  3284  0E33                     	;# 
  3285  0E34                     	;# 
  3286  0E35                     	;# 
  3287  0E36                     	;# 
  3288  0E37                     	;# 
  3289  0E8F                     	;# 
  3290  0E90                     	;# 
  3291  0E91                     	;# 
  3292  0E92                     	;# 
  3293  0E93                     	;# 
  3294  0E94                     	;# 
  3295  0E95                     	;# 
  3296  0E96                     	;# 
  3297  0E97                     	;# 
  3298  0E9C                     	;# 
  3299  0E9D                     	;# 
  3300  0E9E                     	;# 
  3301  0EA1                     	;# 
  3302  0EA2                     	;# 
  3303  0EA3                     	;# 
  3304  0EA4                     	;# 
  3305  0EA5                     	;# 
  3306  0EA9                     	;# 
  3307  0EAA                     	;# 
  3308  0EAB                     	;# 
  3309  0EAC                     	;# 
  3310  0EB1                     	;# 
  3311  0EB2                     	;# 
  3312  0EB3                     	;# 
  3313  0EB8                     	;# 
  3314  0EB9                     	;# 
  3315  0EBA                     	;# 
  3316  0EBB                     	;# 
  3317  0EBC                     	;# 
  3318  0EBD                     	;# 
  3319  0EBE                     	;# 
  3320  0EC3                     	;# 
  3321  0EC5                     	;# 
  3322  0EC6                     	;# 
  3323  0EC7                     	;# 
  3324  0EC8                     	;# 
  3325  0EC9                     	;# 
  3326  0ECA                     	;# 
  3327  0ECB                     	;# 
  3328  0ECC                     	;# 
  3329  0F10                     	;# 
  3330  0F11                     	;# 
  3331  0F12                     	;# 
  3332  0F13                     	;# 
  3333  0F14                     	;# 
  3334  0F15                     	;# 
  3335  0F16                     	;# 
  3336  0F17                     	;# 
  3337  0F18                     	;# 
  3338  0F19                     	;# 
  3339  0F1A                     	;# 
  3340  0F1B                     	;# 
  3341  0F1C                     	;# 
  3342  0F1D                     	;# 
  3343  0F1E                     	;# 
  3344  0F1F                     	;# 
  3345  0F20                     	;# 
  3346  0F21                     	;# 
  3347  0F22                     	;# 
  3348  0F23                     	;# 
  3349  0F24                     	;# 
  3350  0F25                     	;# 
  3351  0F26                     	;# 
  3352  0F27                     	;# 
  3353  0F28                     	;# 
  3354  0F29                     	;# 
  3355  0F2A                     	;# 
  3356  0F2B                     	;# 
  3357  0F2C                     	;# 
  3358  0F2D                     	;# 
  3359  0F2E                     	;# 
  3360  0F2F                     	;# 
  3361  0F30                     	;# 
  3362  0F31                     	;# 
  3363  0F32                     	;# 
  3364  0F38                     	;# 
  3365  0F39                     	;# 
  3366  0F3A                     	;# 
  3367  0F3B                     	;# 
  3368  0F3C                     	;# 
  3369  0F3D                     	;# 
  3370  0F3E                     	;# 
  3371  0F3F                     	;# 
  3372  0F40                     	;# 
  3373  0F41                     	;# 
  3374  0F43                     	;# 
  3375  0F44                     	;# 
  3376  0F45                     	;# 
  3377  0F46                     	;# 
  3378  0F47                     	;# 
  3379  0F48                     	;# 
  3380  0F49                     	;# 
  3381  0F4A                     	;# 
  3382  0F4B                     	;# 
  3383  0F4C                     	;# 
  3384  0F4E                     	;# 
  3385  0F4F                     	;# 
  3386  0F50                     	;# 
  3387  0F51                     	;# 
  3388  0F52                     	;# 
  3389  0F53                     	;# 
  3390  0F54                     	;# 
  3391  0F55                     	;# 
  3392  0F56                     	;# 
  3393  0F57                     	;# 
  3394  0F59                     	;# 
  3395  0F5A                     	;# 
  3396  0F5B                     	;# 
  3397  0F5C                     	;# 
  3398  0F5D                     	;# 
  3399  0F61                     	;# 
  3400  0F62                     	;# 
  3401  0F64                     	;# 
  3402  0F65                     	;# 
  3403  0F66                     	;# 
  3404  0F67                     	;# 
  3405  0F68                     	;# 
  3406  0F69                     	;# 
  3407  0F6A                     	;# 
  3408  0F6B                     	;# 
  3409  0F6C                     	;# 
  3410  0F6D                     	;# 
  3411  0FE4                     	;# 
  3412  0FE5                     	;# 
  3413  0FE6                     	;# 
  3414  0FE7                     	;# 
  3415  0FE8                     	;# 
  3416  0FE9                     	;# 
  3417  0FEA                     	;# 
  3418  0FEB                     	;# 
  3419  0FED                     	;# 
  3420  0FEE                     	;# 
  3421  0FEF                     	;# 
  3422  0000                     	;# 
  3423  0001                     	;# 
  3424  0002                     	;# 
  3425  0003                     	;# 
  3426  0004                     	;# 
  3427  0005                     	;# 
  3428  0006                     	;# 
  3429  0007                     	;# 
  3430  0008                     	;# 
  3431  0009                     	;# 
  3432  000A                     	;# 
  3433  000B                     	;# 
  3434  000C                     	;# 
  3435  000D                     	;# 
  3436  000E                     	;# 
  3437  000F                     	;# 
  3438  0010                     	;# 
  3439  0011                     	;# 
  3440  0012                     	;# 
  3441  0013                     	;# 
  3442  0014                     	;# 
  3443  0015                     	;# 
  3444  0016                     	;# 
  3445  0017                     	;# 
  3446  0018                     	;# 
  3447  0019                     	;# 
  3448  001A                     	;# 
  3449  001C                     	;# 
  3450  001C                     	;# 
  3451  001D                     	;# 
  3452  001D                     	;# 
  3453  001E                     	;# 
  3454  001F                     	;# 
  3455  008C                     	;# 
  3456  008C                     	;# 
  3457  008D                     	;# 
  3458  008E                     	;# 
  3459  008E                     	;# 
  3460  008F                     	;# 
  3461  0090                     	;# 
  3462  0090                     	;# 
  3463  0091                     	;# 
  3464  0093                     	;# 
  3465  0094                     	;# 
  3466  0095                     	;# 
  3467  0096                     	;# 
  3468  0097                     	;# 
  3469  0098                     	;# 
  3470  0099                     	;# 
  3471  009A                     	;# 
  3472  009B                     	;# 
  3473  009C                     	;# 
  3474  009D                     	;# 
  3475  009E                     	;# 
  3476  010C                     	;# 
  3477  010D                     	;# 
  3478  010E                     	;# 
  3479  010E                     	;# 
  3480  010F                     	;# 
  3481  0110                     	;# 
  3482  0110                     	;# 
  3483  0111                     	;# 
  3484  0112                     	;# 
  3485  0112                     	;# 
  3486  0113                     	;# 
  3487  0114                     	;# 
  3488  0114                     	;# 
  3489  0115                     	;# 
  3490  0116                     	;# 
  3491  0116                     	;# 
  3492  0117                     	;# 
  3493  0119                     	;# 
  3494  0119                     	;# 
  3495  0119                     	;# 
  3496  011A                     	;# 
  3497  011A                     	;# 
  3498  011A                     	;# 
  3499  011B                     	;# 
  3500  011B                     	;# 
  3501  011B                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011C                     	;# 
  3505  011C                     	;# 
  3506  011C                     	;# 
  3507  011D                     	;# 
  3508  011D                     	;# 
  3509  011D                     	;# 
  3510  011E                     	;# 
  3511  011E                     	;# 
  3512  011E                     	;# 
  3513  011F                     	;# 
  3514  011F                     	;# 
  3515  011F                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  018C                     	;# 
  3519  018D                     	;# 
  3520  018E                     	;# 
  3521  018F                     	;# 
  3522  0190                     	;# 
  3523  0191                     	;# 
  3524  0192                     	;# 
  3525  0196                     	;# 
  3526  0197                     	;# 
  3527  0198                     	;# 
  3528  0199                     	;# 
  3529  019A                     	;# 
  3530  019B                     	;# 
  3531  019C                     	;# 
  3532  020C                     	;# 
  3533  020C                     	;# 
  3534  020D                     	;# 
  3535  020E                     	;# 
  3536  020F                     	;# 
  3537  020F                     	;# 
  3538  0210                     	;# 
  3539  0210                     	;# 
  3540  0211                     	;# 
  3541  0211                     	;# 
  3542  0212                     	;# 
  3543  0212                     	;# 
  3544  0213                     	;# 
  3545  0214                     	;# 
  3546  0215                     	;# 
  3547  0215                     	;# 
  3548  0216                     	;# 
  3549  0216                     	;# 
  3550  0217                     	;# 
  3551  0217                     	;# 
  3552  0218                     	;# 
  3553  0218                     	;# 
  3554  0219                     	;# 
  3555  021A                     	;# 
  3556  021B                     	;# 
  3557  021B                     	;# 
  3558  021C                     	;# 
  3559  021C                     	;# 
  3560  021D                     	;# 
  3561  021D                     	;# 
  3562  021E                     	;# 
  3563  021F                     	;# 
  3564  028C                     	;# 
  3565  028C                     	;# 
  3566  028D                     	;# 
  3567  028D                     	;# 
  3568  028E                     	;# 
  3569  028F                     	;# 
  3570  0290                     	;# 
  3571  0290                     	;# 
  3572  0291                     	;# 
  3573  0292                     	;# 
  3574  0292                     	;# 
  3575  0293                     	;# 
  3576  0293                     	;# 
  3577  0294                     	;# 
  3578  0295                     	;# 
  3579  0296                     	;# 
  3580  0296                     	;# 
  3581  0297                     	;# 
  3582  0298                     	;# 
  3583  0298                     	;# 
  3584  0299                     	;# 
  3585  0299                     	;# 
  3586  029A                     	;# 
  3587  029B                     	;# 
  3588  029C                     	;# 
  3589  029C                     	;# 
  3590  029D                     	;# 
  3591  030C                     	;# 
  3592  030C                     	;# 
  3593  030D                     	;# 
  3594  030E                     	;# 
  3595  030F                     	;# 
  3596  0310                     	;# 
  3597  0310                     	;# 
  3598  0311                     	;# 
  3599  0312                     	;# 
  3600  0313                     	;# 
  3601  0314                     	;# 
  3602  0314                     	;# 
  3603  0315                     	;# 
  3604  0316                     	;# 
  3605  0317                     	;# 
  3606  0318                     	;# 
  3607  0318                     	;# 
  3608  0319                     	;# 
  3609  031A                     	;# 
  3610  031B                     	;# 
  3611  031C                     	;# 
  3612  031C                     	;# 
  3613  031D                     	;# 
  3614  031E                     	;# 
  3615  031F                     	;# 
  3616  038C                     	;# 
  3617  038C                     	;# 
  3618  038D                     	;# 
  3619  038E                     	;# 
  3620  0390                     	;# 
  3621  0390                     	;# 
  3622  0391                     	;# 
  3623  0392                     	;# 
  3624  040C                     	;# 
  3625  040D                     	;# 
  3626  040E                     	;# 
  3627  040F                     	;# 
  3628  0410                     	;# 
  3629  0411                     	;# 
  3630  0416                     	;# 
  3631  0416                     	;# 
  3632  0417                     	;# 
  3633  0418                     	;# 
  3634  0418                     	;# 
  3635  0419                     	;# 
  3636  041A                     	;# 
  3637  041A                     	;# 
  3638  041B                     	;# 
  3639  041C                     	;# 
  3640  041C                     	;# 
  3641  041D                     	;# 
  3642  041E                     	;# 
  3643  041F                     	;# 
  3644  048C                     	;# 
  3645  048C                     	;# 
  3646  048D                     	;# 
  3647  048E                     	;# 
  3648  048F                     	;# 
  3649  048F                     	;# 
  3650  0490                     	;# 
  3651  0491                     	;# 
  3652  0492                     	;# 
  3653  0492                     	;# 
  3654  0493                     	;# 
  3655  0494                     	;# 
  3656  0495                     	;# 
  3657  0495                     	;# 
  3658  0496                     	;# 
  3659  0497                     	;# 
  3660  0498                     	;# 
  3661  0499                     	;# 
  3662  049A                     	;# 
  3663  049B                     	;# 
  3664  049C                     	;# 
  3665  049D                     	;# 
  3666  050C                     	;# 
  3667  050C                     	;# 
  3668  050D                     	;# 
  3669  050E                     	;# 
  3670  050F                     	;# 
  3671  050F                     	;# 
  3672  0510                     	;# 
  3673  0511                     	;# 
  3674  0512                     	;# 
  3675  0512                     	;# 
  3676  0513                     	;# 
  3677  0514                     	;# 
  3678  0515                     	;# 
  3679  0515                     	;# 
  3680  0516                     	;# 
  3681  0517                     	;# 
  3682  0518                     	;# 
  3683  0519                     	;# 
  3684  051A                     	;# 
  3685  051B                     	;# 
  3686  051C                     	;# 
  3687  051D                     	;# 
  3688  058C                     	;# 
  3689  058C                     	;# 
  3690  058D                     	;# 
  3691  058E                     	;# 
  3692  058F                     	;# 
  3693  058F                     	;# 
  3694  0590                     	;# 
  3695  0591                     	;# 
  3696  0592                     	;# 
  3697  0593                     	;# 
  3698  060C                     	;# 
  3699  060D                     	;# 
  3700  060E                     	;# 
  3701  060F                     	;# 
  3702  0610                     	;# 
  3703  0611                     	;# 
  3704  0612                     	;# 
  3705  0613                     	;# 
  3706  0614                     	;# 
  3707  0616                     	;# 
  3708  0617                     	;# 
  3709  0618                     	;# 
  3710  0619                     	;# 
  3711  061A                     	;# 
  3712  061B                     	;# 
  3713  061C                     	;# 
  3714  061D                     	;# 
  3715  061E                     	;# 
  3716  068C                     	;# 
  3717  068D                     	;# 
  3718  068E                     	;# 
  3719  068F                     	;# 
  3720  0690                     	;# 
  3721  0691                     	;# 
  3722  0692                     	;# 
  3723  0693                     	;# 
  3724  0694                     	;# 
  3725  070C                     	;# 
  3726  070D                     	;# 
  3727  070E                     	;# 
  3728  070F                     	;# 
  3729  0710                     	;# 
  3730  0711                     	;# 
  3731  0712                     	;# 
  3732  0713                     	;# 
  3733  0714                     	;# 
  3734  0716                     	;# 
  3735  0717                     	;# 
  3736  0718                     	;# 
  3737  0719                     	;# 
  3738  071A                     	;# 
  3739  071B                     	;# 
  3740  071C                     	;# 
  3741  071D                     	;# 
  3742  071E                     	;# 
  3743  0796                     	;# 
  3744  0797                     	;# 
  3745  0798                     	;# 
  3746  0799                     	;# 
  3747  079A                     	;# 
  3748  079B                     	;# 
  3749  080C                     	;# 
  3750  080D                     	;# 
  3751  080E                     	;# 
  3752  080F                     	;# 
  3753  0810                     	;# 
  3754  0811                     	;# 
  3755  0812                     	;# 
  3756  0813                     	;# 
  3757  0814                     	;# 
  3758  081A                     	;# 
  3759  081B                     	;# 
  3760  081C                     	;# 
  3761  081D                     	;# 
  3762  081E                     	;# 
  3763  081F                     	;# 
  3764  088C                     	;# 
  3765  088D                     	;# 
  3766  088E                     	;# 
  3767  088F                     	;# 
  3768  0890                     	;# 
  3769  0891                     	;# 
  3770  0892                     	;# 
  3771  0893                     	;# 
  3772  0895                     	;# 
  3773  0896                     	;# 
  3774  0897                     	;# 
  3775  0898                     	;# 
  3776  0899                     	;# 
  3777  089A                     	;# 
  3778  089B                     	;# 
  3779  090C                     	;# 
  3780  090E                     	;# 
  3781  090F                     	;# 
  3782  091F                     	;# 
  3783  091F                     	;# 
  3784  098F                     	;# 
  3785  098F                     	;# 
  3786  0990                     	;# 
  3787  0991                     	;# 
  3788  0992                     	;# 
  3789  0993                     	;# 
  3790  0994                     	;# 
  3791  0995                     	;# 
  3792  0996                     	;# 
  3793  0997                     	;# 
  3794  0E0F                     	;# 
  3795  0E10                     	;# 
  3796  0E11                     	;# 
  3797  0E12                     	;# 
  3798  0E13                     	;# 
  3799  0E14                     	;# 
  3800  0E15                     	;# 
  3801  0E16                     	;# 
  3802  0E17                     	;# 
  3803  0E18                     	;# 
  3804  0E19                     	;# 
  3805  0E1A                     	;# 
  3806  0E1B                     	;# 
  3807  0E1C                     	;# 
  3808  0E1D                     	;# 
  3809  0E1E                     	;# 
  3810  0E1F                     	;# 
  3811  0E20                     	;# 
  3812  0E21                     	;# 
  3813  0E22                     	;# 
  3814  0E23                     	;# 
  3815  0E24                     	;# 
  3816  0E25                     	;# 
  3817  0E26                     	;# 
  3818  0E27                     	;# 
  3819  0E28                     	;# 
  3820  0E29                     	;# 
  3821  0E2A                     	;# 
  3822  0E2B                     	;# 
  3823  0E2C                     	;# 
  3824  0E2D                     	;# 
  3825  0E2E                     	;# 
  3826  0E2F                     	;# 
  3827  0E30                     	;# 
  3828  0E31                     	;# 
  3829  0E32                     	;# 
  3830  0E33                     	;# 
  3831  0E34                     	;# 
  3832  0E35                     	;# 
  3833  0E36                     	;# 
  3834  0E37                     	;# 
  3835  0E8F                     	;# 
  3836  0E90                     	;# 
  3837  0E91                     	;# 
  3838  0E92                     	;# 
  3839  0E93                     	;# 
  3840  0E94                     	;# 
  3841  0E95                     	;# 
  3842  0E96                     	;# 
  3843  0E97                     	;# 
  3844  0E9C                     	;# 
  3845  0E9D                     	;# 
  3846  0E9E                     	;# 
  3847  0EA1                     	;# 
  3848  0EA2                     	;# 
  3849  0EA3                     	;# 
  3850  0EA4                     	;# 
  3851  0EA5                     	;# 
  3852  0EA9                     	;# 
  3853  0EAA                     	;# 
  3854  0EAB                     	;# 
  3855  0EAC                     	;# 
  3856  0EB1                     	;# 
  3857  0EB2                     	;# 
  3858  0EB3                     	;# 
  3859  0EB8                     	;# 
  3860  0EB9                     	;# 
  3861  0EBA                     	;# 
  3862  0EBB                     	;# 
  3863  0EBC                     	;# 
  3864  0EBD                     	;# 
  3865  0EBE                     	;# 
  3866  0EC3                     	;# 
  3867  0EC5                     	;# 
  3868  0EC6                     	;# 
  3869  0EC7                     	;# 
  3870  0EC8                     	;# 
  3871  0EC9                     	;# 
  3872  0ECA                     	;# 
  3873  0ECB                     	;# 
  3874  0ECC                     	;# 
  3875  0F10                     	;# 
  3876  0F11                     	;# 
  3877  0F12                     	;# 
  3878  0F13                     	;# 
  3879  0F14                     	;# 
  3880  0F15                     	;# 
  3881  0F16                     	;# 
  3882  0F17                     	;# 
  3883  0F18                     	;# 
  3884  0F19                     	;# 
  3885  0F1A                     	;# 
  3886  0F1B                     	;# 
  3887  0F1C                     	;# 
  3888  0F1D                     	;# 
  3889  0F1E                     	;# 
  3890  0F1F                     	;# 
  3891  0F20                     	;# 
  3892  0F21                     	;# 
  3893  0F22                     	;# 
  3894  0F23                     	;# 
  3895  0F24                     	;# 
  3896  0F25                     	;# 
  3897  0F26                     	;# 
  3898  0F27                     	;# 
  3899  0F28                     	;# 
  3900  0F29                     	;# 
  3901  0F2A                     	;# 
  3902  0F2B                     	;# 
  3903  0F2C                     	;# 
  3904  0F2D                     	;# 
  3905  0F2E                     	;# 
  3906  0F2F                     	;# 
  3907  0F30                     	;# 
  3908  0F31                     	;# 
  3909  0F32                     	;# 
  3910  0F38                     	;# 
  3911  0F39                     	;# 
  3912  0F3A                     	;# 
  3913  0F3B                     	;# 
  3914  0F3C                     	;# 
  3915  0F3D                     	;# 
  3916  0F3E                     	;# 
  3917  0F3F                     	;# 
  3918  0F40                     	;# 
  3919  0F41                     	;# 
  3920  0F43                     	;# 
  3921  0F44                     	;# 
  3922  0F45                     	;# 
  3923  0F46                     	;# 
  3924  0F47                     	;# 
  3925  0F48                     	;# 
  3926  0F49                     	;# 
  3927  0F4A                     	;# 
  3928  0F4B                     	;# 
  3929  0F4C                     	;# 
  3930  0F4E                     	;# 
  3931  0F4F                     	;# 
  3932  0F50                     	;# 
  3933  0F51                     	;# 
  3934  0F52                     	;# 
  3935  0F53                     	;# 
  3936  0F54                     	;# 
  3937  0F55                     	;# 
  3938  0F56                     	;# 
  3939  0F57                     	;# 
  3940  0F59                     	;# 
  3941  0F5A                     	;# 
  3942  0F5B                     	;# 
  3943  0F5C                     	;# 
  3944  0F5D                     	;# 
  3945  0F61                     	;# 
  3946  0F62                     	;# 
  3947  0F64                     	;# 
  3948  0F65                     	;# 
  3949  0F66                     	;# 
  3950  0F67                     	;# 
  3951  0F68                     	;# 
  3952  0F69                     	;# 
  3953  0F6A                     	;# 
  3954  0F6B                     	;# 
  3955  0F6C                     	;# 
  3956  0F6D                     	;# 
  3957  0FE4                     	;# 
  3958  0FE5                     	;# 
  3959  0FE6                     	;# 
  3960  0FE7                     	;# 
  3961  0FE8                     	;# 
  3962  0FE9                     	;# 
  3963  0FEA                     	;# 
  3964  0FEB                     	;# 
  3965  0FED                     	;# 
  3966  0FEE                     	;# 
  3967  0FEF                     	;# 
  3968  0000                     	;# 
  3969  0001                     	;# 
  3970  0002                     	;# 
  3971  0003                     	;# 
  3972  0004                     	;# 
  3973  0005                     	;# 
  3974  0006                     	;# 
  3975  0007                     	;# 
  3976  0008                     	;# 
  3977  0009                     	;# 
  3978  000A                     	;# 
  3979  000B                     	;# 
  3980  000C                     	;# 
  3981  000D                     	;# 
  3982  000E                     	;# 
  3983  000F                     	;# 
  3984  0010                     	;# 
  3985  0011                     	;# 
  3986  0012                     	;# 
  3987  0013                     	;# 
  3988  0014                     	;# 
  3989  0015                     	;# 
  3990  0016                     	;# 
  3991  0017                     	;# 
  3992  0018                     	;# 
  3993  0019                     	;# 
  3994  001A                     	;# 
  3995  001C                     	;# 
  3996  001C                     	;# 
  3997  001D                     	;# 
  3998  001D                     	;# 
  3999  001E                     	;# 
  4000  001F                     	;# 
  4001  008C                     	;# 
  4002  008C                     	;# 
  4003  008D                     	;# 
  4004  008E                     	;# 
  4005  008E                     	;# 
  4006  008F                     	;# 
  4007  0090                     	;# 
  4008  0090                     	;# 
  4009  0091                     	;# 
  4010  0093                     	;# 
  4011  0094                     	;# 
  4012  0095                     	;# 
  4013  0096                     	;# 
  4014  0097                     	;# 
  4015  0098                     	;# 
  4016  0099                     	;# 
  4017  009A                     	;# 
  4018  009B                     	;# 
  4019  009C                     	;# 
  4020  009D                     	;# 
  4021  009E                     	;# 
  4022  010C                     	;# 
  4023  010D                     	;# 
  4024  010E                     	;# 
  4025  010E                     	;# 
  4026  010F                     	;# 
  4027  0110                     	;# 
  4028  0110                     	;# 
  4029  0111                     	;# 
  4030  0112                     	;# 
  4031  0112                     	;# 
  4032  0113                     	;# 
  4033  0114                     	;# 
  4034  0114                     	;# 
  4035  0115                     	;# 
  4036  0116                     	;# 
  4037  0116                     	;# 
  4038  0117                     	;# 
  4039  0119                     	;# 
  4040  0119                     	;# 
  4041  0119                     	;# 
  4042  011A                     	;# 
  4043  011A                     	;# 
  4044  011A                     	;# 
  4045  011B                     	;# 
  4046  011B                     	;# 
  4047  011B                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011C                     	;# 
  4051  011C                     	;# 
  4052  011C                     	;# 
  4053  011D                     	;# 
  4054  011D                     	;# 
  4055  011D                     	;# 
  4056  011E                     	;# 
  4057  011E                     	;# 
  4058  011E                     	;# 
  4059  011F                     	;# 
  4060  011F                     	;# 
  4061  011F                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  018C                     	;# 
  4065  018D                     	;# 
  4066  018E                     	;# 
  4067  018F                     	;# 
  4068  0190                     	;# 
  4069  0191                     	;# 
  4070  0192                     	;# 
  4071  0196                     	;# 
  4072  0197                     	;# 
  4073  0198                     	;# 
  4074  0199                     	;# 
  4075  019A                     	;# 
  4076  019B                     	;# 
  4077  019C                     	;# 
  4078  020C                     	;# 
  4079  020C                     	;# 
  4080  020D                     	;# 
  4081  020E                     	;# 
  4082  020F                     	;# 
  4083  020F                     	;# 
  4084  0210                     	;# 
  4085  0210                     	;# 
  4086  0211                     	;# 
  4087  0211                     	;# 
  4088  0212                     	;# 
  4089  0212                     	;# 
  4090  0213                     	;# 
  4091  0214                     	;# 
  4092  0215                     	;# 
  4093  0215                     	;# 
  4094  0216                     	;# 
  4095  0216                     	;# 
  4096  0217                     	;# 
  4097  0217                     	;# 
  4098  0218                     	;# 
  4099  0218                     	;# 
  4100  0219                     	;# 
  4101  021A                     	;# 
  4102  021B                     	;# 
  4103  021B                     	;# 
  4104  021C                     	;# 
  4105  021C                     	;# 
  4106  021D                     	;# 
  4107  021D                     	;# 
  4108  021E                     	;# 
  4109  021F                     	;# 
  4110  028C                     	;# 
  4111  028C                     	;# 
  4112  028D                     	;# 
  4113  028D                     	;# 
  4114  028E                     	;# 
  4115  028F                     	;# 
  4116  0290                     	;# 
  4117  0290                     	;# 
  4118  0291                     	;# 
  4119  0292                     	;# 
  4120  0292                     	;# 
  4121  0293                     	;# 
  4122  0293                     	;# 
  4123  0294                     	;# 
  4124  0295                     	;# 
  4125  0296                     	;# 
  4126  0296                     	;# 
  4127  0297                     	;# 
  4128  0298                     	;# 
  4129  0298                     	;# 
  4130  0299                     	;# 
  4131  0299                     	;# 
  4132  029A                     	;# 
  4133  029B                     	;# 
  4134  029C                     	;# 
  4135  029C                     	;# 
  4136  029D                     	;# 
  4137  030C                     	;# 
  4138  030C                     	;# 
  4139  030D                     	;# 
  4140  030E                     	;# 
  4141  030F                     	;# 
  4142  0310                     	;# 
  4143  0310                     	;# 
  4144  0311                     	;# 
  4145  0312                     	;# 
  4146  0313                     	;# 
  4147  0314                     	;# 
  4148  0314                     	;# 
  4149  0315                     	;# 
  4150  0316                     	;# 
  4151  0317                     	;# 
  4152  0318                     	;# 
  4153  0318                     	;# 
  4154  0319                     	;# 
  4155  031A                     	;# 
  4156  031B                     	;# 
  4157  031C                     	;# 
  4158  031C                     	;# 
  4159  031D                     	;# 
  4160  031E                     	;# 
  4161  031F                     	;# 
  4162  038C                     	;# 
  4163  038C                     	;# 
  4164  038D                     	;# 
  4165  038E                     	;# 
  4166  0390                     	;# 
  4167  0390                     	;# 
  4168  0391                     	;# 
  4169  0392                     	;# 
  4170  040C                     	;# 
  4171  040D                     	;# 
  4172  040E                     	;# 
  4173  040F                     	;# 
  4174  0410                     	;# 
  4175  0411                     	;# 
  4176  0416                     	;# 
  4177  0416                     	;# 
  4178  0417                     	;# 
  4179  0418                     	;# 
  4180  0418                     	;# 
  4181  0419                     	;# 
  4182  041A                     	;# 
  4183  041A                     	;# 
  4184  041B                     	;# 
  4185  041C                     	;# 
  4186  041C                     	;# 
  4187  041D                     	;# 
  4188  041E                     	;# 
  4189  041F                     	;# 
  4190  048C                     	;# 
  4191  048C                     	;# 
  4192  048D                     	;# 
  4193  048E                     	;# 
  4194  048F                     	;# 
  4195  048F                     	;# 
  4196  0490                     	;# 
  4197  0491                     	;# 
  4198  0492                     	;# 
  4199  0492                     	;# 
  4200  0493                     	;# 
  4201  0494                     	;# 
  4202  0495                     	;# 
  4203  0495                     	;# 
  4204  0496                     	;# 
  4205  0497                     	;# 
  4206  0498                     	;# 
  4207  0499                     	;# 
  4208  049A                     	;# 
  4209  049B                     	;# 
  4210  049C                     	;# 
  4211  049D                     	;# 
  4212  050C                     	;# 
  4213  050C                     	;# 
  4214  050D                     	;# 
  4215  050E                     	;# 
  4216  050F                     	;# 
  4217  050F                     	;# 
  4218  0510                     	;# 
  4219  0511                     	;# 
  4220  0512                     	;# 
  4221  0512                     	;# 
  4222  0513                     	;# 
  4223  0514                     	;# 
  4224  0515                     	;# 
  4225  0515                     	;# 
  4226  0516                     	;# 
  4227  0517                     	;# 
  4228  0518                     	;# 
  4229  0519                     	;# 
  4230  051A                     	;# 
  4231  051B                     	;# 
  4232  051C                     	;# 
  4233  051D                     	;# 
  4234  058C                     	;# 
  4235  058C                     	;# 
  4236  058D                     	;# 
  4237  058E                     	;# 
  4238  058F                     	;# 
  4239  058F                     	;# 
  4240  0590                     	;# 
  4241  0591                     	;# 
  4242  0592                     	;# 
  4243  0593                     	;# 
  4244  060C                     	;# 
  4245  060D                     	;# 
  4246  060E                     	;# 
  4247  060F                     	;# 
  4248  0610                     	;# 
  4249  0611                     	;# 
  4250  0612                     	;# 
  4251  0613                     	;# 
  4252  0614                     	;# 
  4253  0616                     	;# 
  4254  0617                     	;# 
  4255  0618                     	;# 
  4256  0619                     	;# 
  4257  061A                     	;# 
  4258  061B                     	;# 
  4259  061C                     	;# 
  4260  061D                     	;# 
  4261  061E                     	;# 
  4262  068C                     	;# 
  4263  068D                     	;# 
  4264  068E                     	;# 
  4265  068F                     	;# 
  4266  0690                     	;# 
  4267  0691                     	;# 
  4268  0692                     	;# 
  4269  0693                     	;# 
  4270  0694                     	;# 
  4271  070C                     	;# 
  4272  070D                     	;# 
  4273  070E                     	;# 
  4274  070F                     	;# 
  4275  0710                     	;# 
  4276  0711                     	;# 
  4277  0712                     	;# 
  4278  0713                     	;# 
  4279  0714                     	;# 
  4280  0716                     	;# 
  4281  0717                     	;# 
  4282  0718                     	;# 
  4283  0719                     	;# 
  4284  071A                     	;# 
  4285  071B                     	;# 
  4286  071C                     	;# 
  4287  071D                     	;# 
  4288  071E                     	;# 
  4289  0796                     	;# 
  4290  0797                     	;# 
  4291  0798                     	;# 
  4292  0799                     	;# 
  4293  079A                     	;# 
  4294  079B                     	;# 
  4295  080C                     	;# 
  4296  080D                     	;# 
  4297  080E                     	;# 
  4298  080F                     	;# 
  4299  0810                     	;# 
  4300  0811                     	;# 
  4301  0812                     	;# 
  4302  0813                     	;# 
  4303  0814                     	;# 
  4304  081A                     	;# 
  4305  081B                     	;# 
  4306  081C                     	;# 
  4307  081D                     	;# 
  4308  081E                     	;# 
  4309  081F                     	;# 
  4310  088C                     	;# 
  4311  088D                     	;# 
  4312  088E                     	;# 
  4313  088F                     	;# 
  4314  0890                     	;# 
  4315  0891                     	;# 
  4316  0892                     	;# 
  4317  0893                     	;# 
  4318  0895                     	;# 
  4319  0896                     	;# 
  4320  0897                     	;# 
  4321  0898                     	;# 
  4322  0899                     	;# 
  4323  089A                     	;# 
  4324  089B                     	;# 
  4325  090C                     	;# 
  4326  090E                     	;# 
  4327  090F                     	;# 
  4328  091F                     	;# 
  4329  091F                     	;# 
  4330  098F                     	;# 
  4331  098F                     	;# 
  4332  0990                     	;# 
  4333  0991                     	;# 
  4334  0992                     	;# 
  4335  0993                     	;# 
  4336  0994                     	;# 
  4337  0995                     	;# 
  4338  0996                     	;# 
  4339  0997                     	;# 
  4340  0E0F                     	;# 
  4341  0E10                     	;# 
  4342  0E11                     	;# 
  4343  0E12                     	;# 
  4344  0E13                     	;# 
  4345  0E14                     	;# 
  4346  0E15                     	;# 
  4347  0E16                     	;# 
  4348  0E17                     	;# 
  4349  0E18                     	;# 
  4350  0E19                     	;# 
  4351  0E1A                     	;# 
  4352  0E1B                     	;# 
  4353  0E1C                     	;# 
  4354  0E1D                     	;# 
  4355  0E1E                     	;# 
  4356  0E1F                     	;# 
  4357  0E20                     	;# 
  4358  0E21                     	;# 
  4359  0E22                     	;# 
  4360  0E23                     	;# 
  4361  0E24                     	;# 
  4362  0E25                     	;# 
  4363  0E26                     	;# 
  4364  0E27                     	;# 
  4365  0E28                     	;# 
  4366  0E29                     	;# 
  4367  0E2A                     	;# 
  4368  0E2B                     	;# 
  4369  0E2C                     	;# 
  4370  0E2D                     	;# 
  4371  0E2E                     	;# 
  4372  0E2F                     	;# 
  4373  0E30                     	;# 
  4374  0E31                     	;# 
  4375  0E32                     	;# 
  4376  0E33                     	;# 
  4377  0E34                     	;# 
  4378  0E35                     	;# 
  4379  0E36                     	;# 
  4380  0E37                     	;# 
  4381  0E8F                     	;# 
  4382  0E90                     	;# 
  4383  0E91                     	;# 
  4384  0E92                     	;# 
  4385  0E93                     	;# 
  4386  0E94                     	;# 
  4387  0E95                     	;# 
  4388  0E96                     	;# 
  4389  0E97                     	;# 
  4390  0E9C                     	;# 
  4391  0E9D                     	;# 
  4392  0E9E                     	;# 
  4393  0EA1                     	;# 
  4394  0EA2                     	;# 
  4395  0EA3                     	;# 
  4396  0EA4                     	;# 
  4397  0EA5                     	;# 
  4398  0EA9                     	;# 
  4399  0EAA                     	;# 
  4400  0EAB                     	;# 
  4401  0EAC                     	;# 
  4402  0EB1                     	;# 
  4403  0EB2                     	;# 
  4404  0EB3                     	;# 
  4405  0EB8                     	;# 
  4406  0EB9                     	;# 
  4407  0EBA                     	;# 
  4408  0EBB                     	;# 
  4409  0EBC                     	;# 
  4410  0EBD                     	;# 
  4411  0EBE                     	;# 
  4412  0EC3                     	;# 
  4413  0EC5                     	;# 
  4414  0EC6                     	;# 
  4415  0EC7                     	;# 
  4416  0EC8                     	;# 
  4417  0EC9                     	;# 
  4418  0ECA                     	;# 
  4419  0ECB                     	;# 
  4420  0ECC                     	;# 
  4421  0F10                     	;# 
  4422  0F11                     	;# 
  4423  0F12                     	;# 
  4424  0F13                     	;# 
  4425  0F14                     	;# 
  4426  0F15                     	;# 
  4427  0F16                     	;# 
  4428  0F17                     	;# 
  4429  0F18                     	;# 
  4430  0F19                     	;# 
  4431  0F1A                     	;# 
  4432  0F1B                     	;# 
  4433  0F1C                     	;# 
  4434  0F1D                     	;# 
  4435  0F1E                     	;# 
  4436  0F1F                     	;# 
  4437  0F20                     	;# 
  4438  0F21                     	;# 
  4439  0F22                     	;# 
  4440  0F23                     	;# 
  4441  0F24                     	;# 
  4442  0F25                     	;# 
  4443  0F26                     	;# 
  4444  0F27                     	;# 
  4445  0F28                     	;# 
  4446  0F29                     	;# 
  4447  0F2A                     	;# 
  4448  0F2B                     	;# 
  4449  0F2C                     	;# 
  4450  0F2D                     	;# 
  4451  0F2E                     	;# 
  4452  0F2F                     	;# 
  4453  0F30                     	;# 
  4454  0F31                     	;# 
  4455  0F32                     	;# 
  4456  0F38                     	;# 
  4457  0F39                     	;# 
  4458  0F3A                     	;# 
  4459  0F3B                     	;# 
  4460  0F3C                     	;# 
  4461  0F3D                     	;# 
  4462  0F3E                     	;# 
  4463  0F3F                     	;# 
  4464  0F40                     	;# 
  4465  0F41                     	;# 
  4466  0F43                     	;# 
  4467  0F44                     	;# 
  4468  0F45                     	;# 
  4469  0F46                     	;# 
  4470  0F47                     	;# 
  4471  0F48                     	;# 
  4472  0F49                     	;# 
  4473  0F4A                     	;# 
  4474  0F4B                     	;# 
  4475  0F4C                     	;# 
  4476  0F4E                     	;# 
  4477  0F4F                     	;# 
  4478  0F50                     	;# 
  4479  0F51                     	;# 
  4480  0F52                     	;# 
  4481  0F53                     	;# 
  4482  0F54                     	;# 
  4483  0F55                     	;# 
  4484  0F56                     	;# 
  4485  0F57                     	;# 
  4486  0F59                     	;# 
  4487  0F5A                     	;# 
  4488  0F5B                     	;# 
  4489  0F5C                     	;# 
  4490  0F5D                     	;# 
  4491  0F61                     	;# 
  4492  0F62                     	;# 
  4493  0F64                     	;# 
  4494  0F65                     	;# 
  4495  0F66                     	;# 
  4496  0F67                     	;# 
  4497  0F68                     	;# 
  4498  0F69                     	;# 
  4499  0F6A                     	;# 
  4500  0F6B                     	;# 
  4501  0F6C                     	;# 
  4502  0F6D                     	;# 
  4503  0FE4                     	;# 
  4504  0FE5                     	;# 
  4505  0FE6                     	;# 
  4506  0FE7                     	;# 
  4507  0FE8                     	;# 
  4508  0FE9                     	;# 
  4509  0FEA                     	;# 
  4510  0FEB                     	;# 
  4511  0FED                     	;# 
  4512  0FEE                     	;# 
  4513  0FEF                     	;# 
  4514  0000                     	;# 
  4515  0001                     	;# 
  4516  0002                     	;# 
  4517  0003                     	;# 
  4518  0004                     	;# 
  4519  0005                     	;# 
  4520  0006                     	;# 
  4521  0007                     	;# 
  4522  0008                     	;# 
  4523  0009                     	;# 
  4524  000A                     	;# 
  4525  000B                     	;# 
  4526  000C                     	;# 
  4527  000D                     	;# 
  4528  000E                     	;# 
  4529  000F                     	;# 
  4530  0010                     	;# 
  4531  0011                     	;# 
  4532  0012                     	;# 
  4533  0013                     	;# 
  4534  0014                     	;# 
  4535  0015                     	;# 
  4536  0016                     	;# 
  4537  0017                     	;# 
  4538  0018                     	;# 
  4539  0019                     	;# 
  4540  001A                     	;# 
  4541  001C                     	;# 
  4542  001C                     	;# 
  4543  001D                     	;# 
  4544  001D                     	;# 
  4545  001E                     	;# 
  4546  001F                     	;# 
  4547  008C                     	;# 
  4548  008C                     	;# 
  4549  008D                     	;# 
  4550  008E                     	;# 
  4551  008E                     	;# 
  4552  008F                     	;# 
  4553  0090                     	;# 
  4554  0090                     	;# 
  4555  0091                     	;# 
  4556  0093                     	;# 
  4557  0094                     	;# 
  4558  0095                     	;# 
  4559  0096                     	;# 
  4560  0097                     	;# 
  4561  0098                     	;# 
  4562  0099                     	;# 
  4563  009A                     	;# 
  4564  009B                     	;# 
  4565  009C                     	;# 
  4566  009D                     	;# 
  4567  009E                     	;# 
  4568  010C                     	;# 
  4569  010D                     	;# 
  4570  010E                     	;# 
  4571  010E                     	;# 
  4572  010F                     	;# 
  4573  0110                     	;# 
  4574  0110                     	;# 
  4575  0111                     	;# 
  4576  0112                     	;# 
  4577  0112                     	;# 
  4578  0113                     	;# 
  4579  0114                     	;# 
  4580  0114                     	;# 
  4581  0115                     	;# 
  4582  0116                     	;# 
  4583  0116                     	;# 
  4584  0117                     	;# 
  4585  0119                     	;# 
  4586  0119                     	;# 
  4587  0119                     	;# 
  4588  011A                     	;# 
  4589  011A                     	;# 
  4590  011A                     	;# 
  4591  011B                     	;# 
  4592  011B                     	;# 
  4593  011B                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011C                     	;# 
  4597  011C                     	;# 
  4598  011C                     	;# 
  4599  011D                     	;# 
  4600  011D                     	;# 
  4601  011D                     	;# 
  4602  011E                     	;# 
  4603  011E                     	;# 
  4604  011E                     	;# 
  4605  011F                     	;# 
  4606  011F                     	;# 
  4607  011F                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  018C                     	;# 
  4611  018D                     	;# 
  4612  018E                     	;# 
  4613  018F                     	;# 
  4614  0190                     	;# 
  4615  0191                     	;# 
  4616  0192                     	;# 
  4617  0196                     	;# 
  4618  0197                     	;# 
  4619  0198                     	;# 
  4620  0199                     	;# 
  4621  019A                     	;# 
  4622  019B                     	;# 
  4623  019C                     	;# 
  4624  020C                     	;# 
  4625  020C                     	;# 
  4626  020D                     	;# 
  4627  020E                     	;# 
  4628  020F                     	;# 
  4629  020F                     	;# 
  4630  0210                     	;# 
  4631  0210                     	;# 
  4632  0211                     	;# 
  4633  0211                     	;# 
  4634  0212                     	;# 
  4635  0212                     	;# 
  4636  0213                     	;# 
  4637  0214                     	;# 
  4638  0215                     	;# 
  4639  0215                     	;# 
  4640  0216                     	;# 
  4641  0216                     	;# 
  4642  0217                     	;# 
  4643  0217                     	;# 
  4644  0218                     	;# 
  4645  0218                     	;# 
  4646  0219                     	;# 
  4647  021A                     	;# 
  4648  021B                     	;# 
  4649  021B                     	;# 
  4650  021C                     	;# 
  4651  021C                     	;# 
  4652  021D                     	;# 
  4653  021D                     	;# 
  4654  021E                     	;# 
  4655  021F                     	;# 
  4656  028C                     	;# 
  4657  028C                     	;# 
  4658  028D                     	;# 
  4659  028D                     	;# 
  4660  028E                     	;# 
  4661  028F                     	;# 
  4662  0290                     	;# 
  4663  0290                     	;# 
  4664  0291                     	;# 
  4665  0292                     	;# 
  4666  0292                     	;# 
  4667  0293                     	;# 
  4668  0293                     	;# 
  4669  0294                     	;# 
  4670  0295                     	;# 
  4671  0296                     	;# 
  4672  0296                     	;# 
  4673  0297                     	;# 
  4674  0298                     	;# 
  4675  0298                     	;# 
  4676  0299                     	;# 
  4677  0299                     	;# 
  4678  029A                     	;# 
  4679  029B                     	;# 
  4680  029C                     	;# 
  4681  029C                     	;# 
  4682  029D                     	;# 
  4683  030C                     	;# 
  4684  030C                     	;# 
  4685  030D                     	;# 
  4686  030E                     	;# 
  4687  030F                     	;# 
  4688  0310                     	;# 
  4689  0310                     	;# 
  4690  0311                     	;# 
  4691  0312                     	;# 
  4692  0313                     	;# 
  4693  0314                     	;# 
  4694  0314                     	;# 
  4695  0315                     	;# 
  4696  0316                     	;# 
  4697  0317                     	;# 
  4698  0318                     	;# 
  4699  0318                     	;# 
  4700  0319                     	;# 
  4701  031A                     	;# 
  4702  031B                     	;# 
  4703  031C                     	;# 
  4704  031C                     	;# 
  4705  031D                     	;# 
  4706  031E                     	;# 
  4707  031F                     	;# 
  4708  038C                     	;# 
  4709  038C                     	;# 
  4710  038D                     	;# 
  4711  038E                     	;# 
  4712  0390                     	;# 
  4713  0390                     	;# 
  4714  0391                     	;# 
  4715  0392                     	;# 
  4716  040C                     	;# 
  4717  040D                     	;# 
  4718  040E                     	;# 
  4719  040F                     	;# 
  4720  0410                     	;# 
  4721  0411                     	;# 
  4722  0416                     	;# 
  4723  0416                     	;# 
  4724  0417                     	;# 
  4725  0418                     	;# 
  4726  0418                     	;# 
  4727  0419                     	;# 
  4728  041A                     	;# 
  4729  041A                     	;# 
  4730  041B                     	;# 
  4731  041C                     	;# 
  4732  041C                     	;# 
  4733  041D                     	;# 
  4734  041E                     	;# 
  4735  041F                     	;# 
  4736  048C                     	;# 
  4737  048C                     	;# 
  4738  048D                     	;# 
  4739  048E                     	;# 
  4740  048F                     	;# 
  4741  048F                     	;# 
  4742  0490                     	;# 
  4743  0491                     	;# 
  4744  0492                     	;# 
  4745  0492                     	;# 
  4746  0493                     	;# 
  4747  0494                     	;# 
  4748  0495                     	;# 
  4749  0495                     	;# 
  4750  0496                     	;# 
  4751  0497                     	;# 
  4752  0498                     	;# 
  4753  0499                     	;# 
  4754  049A                     	;# 
  4755  049B                     	;# 
  4756  049C                     	;# 
  4757  049D                     	;# 
  4758  050C                     	;# 
  4759  050C                     	;# 
  4760  050D                     	;# 
  4761  050E                     	;# 
  4762  050F                     	;# 
  4763  050F                     	;# 
  4764  0510                     	;# 
  4765  0511                     	;# 
  4766  0512                     	;# 
  4767  0512                     	;# 
  4768  0513                     	;# 
  4769  0514                     	;# 
  4770  0515                     	;# 
  4771  0515                     	;# 
  4772  0516                     	;# 
  4773  0517                     	;# 
  4774  0518                     	;# 
  4775  0519                     	;# 
  4776  051A                     	;# 
  4777  051B                     	;# 
  4778  051C                     	;# 
  4779  051D                     	;# 
  4780  058C                     	;# 
  4781  058C                     	;# 
  4782  058D                     	;# 
  4783  058E                     	;# 
  4784  058F                     	;# 
  4785  058F                     	;# 
  4786  0590                     	;# 
  4787  0591                     	;# 
  4788  0592                     	;# 
  4789  0593                     	;# 
  4790  060C                     	;# 
  4791  060D                     	;# 
  4792  060E                     	;# 
  4793  060F                     	;# 
  4794  0610                     	;# 
  4795  0611                     	;# 
  4796  0612                     	;# 
  4797  0613                     	;# 
  4798  0614                     	;# 
  4799  0616                     	;# 
  4800  0617                     	;# 
  4801  0618                     	;# 
  4802  0619                     	;# 
  4803  061A                     	;# 
  4804  061B                     	;# 
  4805  061C                     	;# 
  4806  061D                     	;# 
  4807  061E                     	;# 
  4808  068C                     	;# 
  4809  068D                     	;# 
  4810  068E                     	;# 
  4811  068F                     	;# 
  4812  0690                     	;# 
  4813  0691                     	;# 
  4814  0692                     	;# 
  4815  0693                     	;# 
  4816  0694                     	;# 
  4817  070C                     	;# 
  4818  070D                     	;# 
  4819  070E                     	;# 
  4820  070F                     	;# 
  4821  0710                     	;# 
  4822  0711                     	;# 
  4823  0712                     	;# 
  4824  0713                     	;# 
  4825  0714                     	;# 
  4826  0716                     	;# 
  4827  0717                     	;# 
  4828  0718                     	;# 
  4829  0719                     	;# 
  4830  071A                     	;# 
  4831  071B                     	;# 
  4832  071C                     	;# 
  4833  071D                     	;# 
  4834  071E                     	;# 
  4835  0796                     	;# 
  4836  0797                     	;# 
  4837  0798                     	;# 
  4838  0799                     	;# 
  4839  079A                     	;# 
  4840  079B                     	;# 
  4841  080C                     	;# 
  4842  080D                     	;# 
  4843  080E                     	;# 
  4844  080F                     	;# 
  4845  0810                     	;# 
  4846  0811                     	;# 
  4847  0812                     	;# 
  4848  0813                     	;# 
  4849  0814                     	;# 
  4850  081A                     	;# 
  4851  081B                     	;# 
  4852  081C                     	;# 
  4853  081D                     	;# 
  4854  081E                     	;# 
  4855  081F                     	;# 
  4856  088C                     	;# 
  4857  088D                     	;# 
  4858  088E                     	;# 
  4859  088F                     	;# 
  4860  0890                     	;# 
  4861  0891                     	;# 
  4862  0892                     	;# 
  4863  0893                     	;# 
  4864  0895                     	;# 
  4865  0896                     	;# 
  4866  0897                     	;# 
  4867  0898                     	;# 
  4868  0899                     	;# 
  4869  089A                     	;# 
  4870  089B                     	;# 
  4871  090C                     	;# 
  4872  090E                     	;# 
  4873  090F                     	;# 
  4874  091F                     	;# 
  4875  091F                     	;# 
  4876  098F                     	;# 
  4877  098F                     	;# 
  4878  0990                     	;# 
  4879  0991                     	;# 
  4880  0992                     	;# 
  4881  0993                     	;# 
  4882  0994                     	;# 
  4883  0995                     	;# 
  4884  0996                     	;# 
  4885  0997                     	;# 
  4886  0E0F                     	;# 
  4887  0E10                     	;# 
  4888  0E11                     	;# 
  4889  0E12                     	;# 
  4890  0E13                     	;# 
  4891  0E14                     	;# 
  4892  0E15                     	;# 
  4893  0E16                     	;# 
  4894  0E17                     	;# 
  4895  0E18                     	;# 
  4896  0E19                     	;# 
  4897  0E1A                     	;# 
  4898  0E1B                     	;# 
  4899  0E1C                     	;# 
  4900  0E1D                     	;# 
  4901  0E1E                     	;# 
  4902  0E1F                     	;# 
  4903  0E20                     	;# 
  4904  0E21                     	;# 
  4905  0E22                     	;# 
  4906  0E23                     	;# 
  4907  0E24                     	;# 
  4908  0E25                     	;# 
  4909  0E26                     	;# 
  4910  0E27                     	;# 
  4911  0E28                     	;# 
  4912  0E29                     	;# 
  4913  0E2A                     	;# 
  4914  0E2B                     	;# 
  4915  0E2C                     	;# 
  4916  0E2D                     	;# 
  4917  0E2E                     	;# 
  4918  0E2F                     	;# 
  4919  0E30                     	;# 
  4920  0E31                     	;# 
  4921  0E32                     	;# 
  4922  0E33                     	;# 
  4923  0E34                     	;# 
  4924  0E35                     	;# 
  4925  0E36                     	;# 
  4926  0E37                     	;# 
  4927  0E8F                     	;# 
  4928  0E90                     	;# 
  4929  0E91                     	;# 
  4930  0E92                     	;# 
  4931  0E93                     	;# 
  4932  0E94                     	;# 
  4933  0E95                     	;# 
  4934  0E96                     	;# 
  4935  0E97                     	;# 
  4936  0E9C                     	;# 
  4937  0E9D                     	;# 
  4938  0E9E                     	;# 
  4939  0EA1                     	;# 
  4940  0EA2                     	;# 
  4941  0EA3                     	;# 
  4942  0EA4                     	;# 
  4943  0EA5                     	;# 
  4944  0EA9                     	;# 
  4945  0EAA                     	;# 
  4946  0EAB                     	;# 
  4947  0EAC                     	;# 
  4948  0EB1                     	;# 
  4949  0EB2                     	;# 
  4950  0EB3                     	;# 
  4951  0EB8                     	;# 
  4952  0EB9                     	;# 
  4953  0EBA                     	;# 
  4954  0EBB                     	;# 
  4955  0EBC                     	;# 
  4956  0EBD                     	;# 
  4957  0EBE                     	;# 
  4958  0EC3                     	;# 
  4959  0EC5                     	;# 
  4960  0EC6                     	;# 
  4961  0EC7                     	;# 
  4962  0EC8                     	;# 
  4963  0EC9                     	;# 
  4964  0ECA                     	;# 
  4965  0ECB                     	;# 
  4966  0ECC                     	;# 
  4967  0F10                     	;# 
  4968  0F11                     	;# 
  4969  0F12                     	;# 
  4970  0F13                     	;# 
  4971  0F14                     	;# 
  4972  0F15                     	;# 
  4973  0F16                     	;# 
  4974  0F17                     	;# 
  4975  0F18                     	;# 
  4976  0F19                     	;# 
  4977  0F1A                     	;# 
  4978  0F1B                     	;# 
  4979  0F1C                     	;# 
  4980  0F1D                     	;# 
  4981  0F1E                     	;# 
  4982  0F1F                     	;# 
  4983  0F20                     	;# 
  4984  0F21                     	;# 
  4985  0F22                     	;# 
  4986  0F23                     	;# 
  4987  0F24                     	;# 
  4988  0F25                     	;# 
  4989  0F26                     	;# 
  4990  0F27                     	;# 
  4991  0F28                     	;# 
  4992  0F29                     	;# 
  4993  0F2A                     	;# 
  4994  0F2B                     	;# 
  4995  0F2C                     	;# 
  4996  0F2D                     	;# 
  4997  0F2E                     	;# 
  4998  0F2F                     	;# 
  4999  0F30                     	;# 
  5000  0F31                     	;# 
  5001  0F32                     	;# 
  5002  0F38                     	;# 
  5003  0F39                     	;# 
  5004  0F3A                     	;# 
  5005  0F3B                     	;# 
  5006  0F3C                     	;# 
  5007  0F3D                     	;# 
  5008  0F3E                     	;# 
  5009  0F3F                     	;# 
  5010  0F40                     	;# 
  5011  0F41                     	;# 
  5012  0F43                     	;# 
  5013  0F44                     	;# 
  5014  0F45                     	;# 
  5015  0F46                     	;# 
  5016  0F47                     	;# 
  5017  0F48                     	;# 
  5018  0F49                     	;# 
  5019  0F4A                     	;# 
  5020  0F4B                     	;# 
  5021  0F4C                     	;# 
  5022  0F4E                     	;# 
  5023  0F4F                     	;# 
  5024  0F50                     	;# 
  5025  0F51                     	;# 
  5026  0F52                     	;# 
  5027  0F53                     	;# 
  5028  0F54                     	;# 
  5029  0F55                     	;# 
  5030  0F56                     	;# 
  5031  0F57                     	;# 
  5032  0F59                     	;# 
  5033  0F5A                     	;# 
  5034  0F5B                     	;# 
  5035  0F5C                     	;# 
  5036  0F5D                     	;# 
  5037  0F61                     	;# 
  5038  0F62                     	;# 
  5039  0F64                     	;# 
  5040  0F65                     	;# 
  5041  0F66                     	;# 
  5042  0F67                     	;# 
  5043  0F68                     	;# 
  5044  0F69                     	;# 
  5045  0F6A                     	;# 
  5046  0F6B                     	;# 
  5047  0F6C                     	;# 
  5048  0F6D                     	;# 
  5049  0FE4                     	;# 
  5050  0FE5                     	;# 
  5051  0FE6                     	;# 
  5052  0FE7                     	;# 
  5053  0FE8                     	;# 
  5054  0FE9                     	;# 
  5055  0FEA                     	;# 
  5056  0FEB                     	;# 
  5057  0FED                     	;# 
  5058  0FEE                     	;# 
  5059  0FEF                     	;# 
  5060  0000                     	;# 
  5061  0001                     	;# 
  5062  0002                     	;# 
  5063  0003                     	;# 
  5064  0004                     	;# 
  5065  0005                     	;# 
  5066  0006                     	;# 
  5067  0007                     	;# 
  5068  0008                     	;# 
  5069  0009                     	;# 
  5070  000A                     	;# 
  5071  000B                     	;# 
  5072  000C                     	;# 
  5073  000D                     	;# 
  5074  000E                     	;# 
  5075  000F                     	;# 
  5076  0010                     	;# 
  5077  0011                     	;# 
  5078  0012                     	;# 
  5079  0013                     	;# 
  5080  0014                     	;# 
  5081  0015                     	;# 
  5082  0016                     	;# 
  5083  0017                     	;# 
  5084  0018                     	;# 
  5085  0019                     	;# 
  5086  001A                     	;# 
  5087  001C                     	;# 
  5088  001C                     	;# 
  5089  001D                     	;# 
  5090  001D                     	;# 
  5091  001E                     	;# 
  5092  001F                     	;# 
  5093  008C                     	;# 
  5094  008C                     	;# 
  5095  008D                     	;# 
  5096  008E                     	;# 
  5097  008E                     	;# 
  5098  008F                     	;# 
  5099  0090                     	;# 
  5100  0090                     	;# 
  5101  0091                     	;# 
  5102  0093                     	;# 
  5103  0094                     	;# 
  5104  0095                     	;# 
  5105  0096                     	;# 
  5106  0097                     	;# 
  5107  0098                     	;# 
  5108  0099                     	;# 
  5109  009A                     	;# 
  5110  009B                     	;# 
  5111  009C                     	;# 
  5112  009D                     	;# 
  5113  009E                     	;# 
  5114  010C                     	;# 
  5115  010D                     	;# 
  5116  010E                     	;# 
  5117  010E                     	;# 
  5118  010F                     	;# 
  5119  0110                     	;# 
  5120  0110                     	;# 
  5121  0111                     	;# 
  5122  0112                     	;# 
  5123  0112                     	;# 
  5124  0113                     	;# 
  5125  0114                     	;# 
  5126  0114                     	;# 
  5127  0115                     	;# 
  5128  0116                     	;# 
  5129  0116                     	;# 
  5130  0117                     	;# 
  5131  0119                     	;# 
  5132  0119                     	;# 
  5133  0119                     	;# 
  5134  011A                     	;# 
  5135  011A                     	;# 
  5136  011A                     	;# 
  5137  011B                     	;# 
  5138  011B                     	;# 
  5139  011B                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011C                     	;# 
  5143  011C                     	;# 
  5144  011C                     	;# 
  5145  011D                     	;# 
  5146  011D                     	;# 
  5147  011D                     	;# 
  5148  011E                     	;# 
  5149  011E                     	;# 
  5150  011E                     	;# 
  5151  011F                     	;# 
  5152  011F                     	;# 
  5153  011F                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  018C                     	;# 
  5157  018D                     	;# 
  5158  018E                     	;# 
  5159  018F                     	;# 
  5160  0190                     	;# 
  5161  0191                     	;# 
  5162  0192                     	;# 
  5163  0196                     	;# 
  5164  0197                     	;# 
  5165  0198                     	;# 
  5166  0199                     	;# 
  5167  019A                     	;# 
  5168  019B                     	;# 
  5169  019C                     	;# 
  5170  020C                     	;# 
  5171  020C                     	;# 
  5172  020D                     	;# 
  5173  020E                     	;# 
  5174  020F                     	;# 
  5175  020F                     	;# 
  5176  0210                     	;# 
  5177  0210                     	;# 
  5178  0211                     	;# 
  5179  0211                     	;# 
  5180  0212                     	;# 
  5181  0212                     	;# 
  5182  0213                     	;# 
  5183  0214                     	;# 
  5184  0215                     	;# 
  5185  0215                     	;# 
  5186  0216                     	;# 
  5187  0216                     	;# 
  5188  0217                     	;# 
  5189  0217                     	;# 
  5190  0218                     	;# 
  5191  0218                     	;# 
  5192  0219                     	;# 
  5193  021A                     	;# 
  5194  021B                     	;# 
  5195  021B                     	;# 
  5196  021C                     	;# 
  5197  021C                     	;# 
  5198  021D                     	;# 
  5199  021D                     	;# 
  5200  021E                     	;# 
  5201  021F                     	;# 
  5202  028C                     	;# 
  5203  028C                     	;# 
  5204  028D                     	;# 
  5205  028D                     	;# 
  5206  028E                     	;# 
  5207  028F                     	;# 
  5208  0290                     	;# 
  5209  0290                     	;# 
  5210  0291                     	;# 
  5211  0292                     	;# 
  5212  0292                     	;# 
  5213  0293                     	;# 
  5214  0293                     	;# 
  5215  0294                     	;# 
  5216  0295                     	;# 
  5217  0296                     	;# 
  5218  0296                     	;# 
  5219  0297                     	;# 
  5220  0298                     	;# 
  5221  0298                     	;# 
  5222  0299                     	;# 
  5223  0299                     	;# 
  5224  029A                     	;# 
  5225  029B                     	;# 
  5226  029C                     	;# 
  5227  029C                     	;# 
  5228  029D                     	;# 
  5229  030C                     	;# 
  5230  030C                     	;# 
  5231  030D                     	;# 
  5232  030E                     	;# 
  5233  030F                     	;# 
  5234  0310                     	;# 
  5235  0310                     	;# 
  5236  0311                     	;# 
  5237  0312                     	;# 
  5238  0313                     	;# 
  5239  0314                     	;# 
  5240  0314                     	;# 
  5241  0315                     	;# 
  5242  0316                     	;# 
  5243  0317                     	;# 
  5244  0318                     	;# 
  5245  0318                     	;# 
  5246  0319                     	;# 
  5247  031A                     	;# 
  5248  031B                     	;# 
  5249  031C                     	;# 
  5250  031C                     	;# 
  5251  031D                     	;# 
  5252  031E                     	;# 
  5253  031F                     	;# 
  5254  038C                     	;# 
  5255  038C                     	;# 
  5256  038D                     	;# 
  5257  038E                     	;# 
  5258  0390                     	;# 
  5259  0390                     	;# 
  5260  0391                     	;# 
  5261  0392                     	;# 
  5262  040C                     	;# 
  5263  040D                     	;# 
  5264  040E                     	;# 
  5265  040F                     	;# 
  5266  0410                     	;# 
  5267  0411                     	;# 
  5268  0416                     	;# 
  5269  0416                     	;# 
  5270  0417                     	;# 
  5271  0418                     	;# 
  5272  0418                     	;# 
  5273  0419                     	;# 
  5274  041A                     	;# 
  5275  041A                     	;# 
  5276  041B                     	;# 
  5277  041C                     	;# 
  5278  041C                     	;# 
  5279  041D                     	;# 
  5280  041E                     	;# 
  5281  041F                     	;# 
  5282  048C                     	;# 
  5283  048C                     	;# 
  5284  048D                     	;# 
  5285  048E                     	;# 
  5286  048F                     	;# 
  5287  048F                     	;# 
  5288  0490                     	;# 
  5289  0491                     	;# 
  5290  0492                     	;# 
  5291  0492                     	;# 
  5292  0493                     	;# 
  5293  0494                     	;# 
  5294  0495                     	;# 
  5295  0495                     	;# 
  5296  0496                     	;# 
  5297  0497                     	;# 
  5298  0498                     	;# 
  5299  0499                     	;# 
  5300  049A                     	;# 
  5301  049B                     	;# 
  5302  049C                     	;# 
  5303  049D                     	;# 
  5304  050C                     	;# 
  5305  050C                     	;# 
  5306  050D                     	;# 
  5307  050E                     	;# 
  5308  050F                     	;# 
  5309  050F                     	;# 
  5310  0510                     	;# 
  5311  0511                     	;# 
  5312  0512                     	;# 
  5313  0512                     	;# 
  5314  0513                     	;# 
  5315  0514                     	;# 
  5316  0515                     	;# 
  5317  0515                     	;# 
  5318  0516                     	;# 
  5319  0517                     	;# 
  5320  0518                     	;# 
  5321  0519                     	;# 
  5322  051A                     	;# 
  5323  051B                     	;# 
  5324  051C                     	;# 
  5325  051D                     	;# 
  5326  058C                     	;# 
  5327  058C                     	;# 
  5328  058D                     	;# 
  5329  058E                     	;# 
  5330  058F                     	;# 
  5331  058F                     	;# 
  5332  0590                     	;# 
  5333  0591                     	;# 
  5334  0592                     	;# 
  5335  0593                     	;# 
  5336  060C                     	;# 
  5337  060D                     	;# 
  5338  060E                     	;# 
  5339  060F                     	;# 
  5340  0610                     	;# 
  5341  0611                     	;# 
  5342  0612                     	;# 
  5343  0613                     	;# 
  5344  0614                     	;# 
  5345  0616                     	;# 
  5346  0617                     	;# 
  5347  0618                     	;# 
  5348  0619                     	;# 
  5349  061A                     	;# 
  5350  061B                     	;# 
  5351  061C                     	;# 
  5352  061D                     	;# 
  5353  061E                     	;# 
  5354  068C                     	;# 
  5355  068D                     	;# 
  5356  068E                     	;# 
  5357  068F                     	;# 
  5358  0690                     	;# 
  5359  0691                     	;# 
  5360  0692                     	;# 
  5361  0693                     	;# 
  5362  0694                     	;# 
  5363  070C                     	;# 
  5364  070D                     	;# 
  5365  070E                     	;# 
  5366  070F                     	;# 
  5367  0710                     	;# 
  5368  0711                     	;# 
  5369  0712                     	;# 
  5370  0713                     	;# 
  5371  0714                     	;# 
  5372  0716                     	;# 
  5373  0717                     	;# 
  5374  0718                     	;# 
  5375  0719                     	;# 
  5376  071A                     	;# 
  5377  071B                     	;# 
  5378  071C                     	;# 
  5379  071D                     	;# 
  5380  071E                     	;# 
  5381  0796                     	;# 
  5382  0797                     	;# 
  5383  0798                     	;# 
  5384  0799                     	;# 
  5385  079A                     	;# 
  5386  079B                     	;# 
  5387  080C                     	;# 
  5388  080D                     	;# 
  5389  080E                     	;# 
  5390  080F                     	;# 
  5391  0810                     	;# 
  5392  0811                     	;# 
  5393  0812                     	;# 
  5394  0813                     	;# 
  5395  0814                     	;# 
  5396  081A                     	;# 
  5397  081B                     	;# 
  5398  081C                     	;# 
  5399  081D                     	;# 
  5400  081E                     	;# 
  5401  081F                     	;# 
  5402  088C                     	;# 
  5403  088D                     	;# 
  5404  088E                     	;# 
  5405  088F                     	;# 
  5406  0890                     	;# 
  5407  0891                     	;# 
  5408  0892                     	;# 
  5409  0893                     	;# 
  5410  0895                     	;# 
  5411  0896                     	;# 
  5412  0897                     	;# 
  5413  0898                     	;# 
  5414  0899                     	;# 
  5415  089A                     	;# 
  5416  089B                     	;# 
  5417  090C                     	;# 
  5418  090E                     	;# 
  5419  090F                     	;# 
  5420  091F                     	;# 
  5421  091F                     	;# 
  5422  098F                     	;# 
  5423  098F                     	;# 
  5424  0990                     	;# 
  5425  0991                     	;# 
  5426  0992                     	;# 
  5427  0993                     	;# 
  5428  0994                     	;# 
  5429  0995                     	;# 
  5430  0996                     	;# 
  5431  0997                     	;# 
  5432  0E0F                     	;# 
  5433  0E10                     	;# 
  5434  0E11                     	;# 
  5435  0E12                     	;# 
  5436  0E13                     	;# 
  5437  0E14                     	;# 
  5438  0E15                     	;# 
  5439  0E16                     	;# 
  5440  0E17                     	;# 
  5441  0E18                     	;# 
  5442  0E19                     	;# 
  5443  0E1A                     	;# 
  5444  0E1B                     	;# 
  5445  0E1C                     	;# 
  5446  0E1D                     	;# 
  5447  0E1E                     	;# 
  5448  0E1F                     	;# 
  5449  0E20                     	;# 
  5450  0E21                     	;# 
  5451  0E22                     	;# 
  5452  0E23                     	;# 
  5453  0E24                     	;# 
  5454  0E25                     	;# 
  5455  0E26                     	;# 
  5456  0E27                     	;# 
  5457  0E28                     	;# 
  5458  0E29                     	;# 
  5459  0E2A                     	;# 
  5460  0E2B                     	;# 
  5461  0E2C                     	;# 
  5462  0E2D                     	;# 
  5463  0E2E                     	;# 
  5464  0E2F                     	;# 
  5465  0E30                     	;# 
  5466  0E31                     	;# 
  5467  0E32                     	;# 
  5468  0E33                     	;# 
  5469  0E34                     	;# 
  5470  0E35                     	;# 
  5471  0E36                     	;# 
  5472  0E37                     	;# 
  5473  0E8F                     	;# 
  5474  0E90                     	;# 
  5475  0E91                     	;# 
  5476  0E92                     	;# 
  5477  0E93                     	;# 
  5478  0E94                     	;# 
  5479  0E95                     	;# 
  5480  0E96                     	;# 
  5481  0E97                     	;# 
  5482  0E9C                     	;# 
  5483  0E9D                     	;# 
  5484  0E9E                     	;# 
  5485  0EA1                     	;# 
  5486  0EA2                     	;# 
  5487  0EA3                     	;# 
  5488  0EA4                     	;# 
  5489  0EA5                     	;# 
  5490  0EA9                     	;# 
  5491  0EAA                     	;# 
  5492  0EAB                     	;# 
  5493  0EAC                     	;# 
  5494  0EB1                     	;# 
  5495  0EB2                     	;# 
  5496  0EB3                     	;# 
  5497  0EB8                     	;# 
  5498  0EB9                     	;# 
  5499  0EBA                     	;# 
  5500  0EBB                     	;# 
  5501  0EBC                     	;# 
  5502  0EBD                     	;# 
  5503  0EBE                     	;# 
  5504  0EC3                     	;# 
  5505  0EC5                     	;# 
  5506  0EC6                     	;# 
  5507  0EC7                     	;# 
  5508  0EC8                     	;# 
  5509  0EC9                     	;# 
  5510  0ECA                     	;# 
  5511  0ECB                     	;# 
  5512  0ECC                     	;# 
  5513  0F10                     	;# 
  5514  0F11                     	;# 
  5515  0F12                     	;# 
  5516  0F13                     	;# 
  5517  0F14                     	;# 
  5518  0F15                     	;# 
  5519  0F16                     	;# 
  5520  0F17                     	;# 
  5521  0F18                     	;# 
  5522  0F19                     	;# 
  5523  0F1A                     	;# 
  5524  0F1B                     	;# 
  5525  0F1C                     	;# 
  5526  0F1D                     	;# 
  5527  0F1E                     	;# 
  5528  0F1F                     	;# 
  5529  0F20                     	;# 
  5530  0F21                     	;# 
  5531  0F22                     	;# 
  5532  0F23                     	;# 
  5533  0F24                     	;# 
  5534  0F25                     	;# 
  5535  0F26                     	;# 
  5536  0F27                     	;# 
  5537  0F28                     	;# 
  5538  0F29                     	;# 
  5539  0F2A                     	;# 
  5540  0F2B                     	;# 
  5541  0F2C                     	;# 
  5542  0F2D                     	;# 
  5543  0F2E                     	;# 
  5544  0F2F                     	;# 
  5545  0F30                     	;# 
  5546  0F31                     	;# 
  5547  0F32                     	;# 
  5548  0F38                     	;# 
  5549  0F39                     	;# 
  5550  0F3A                     	;# 
  5551  0F3B                     	;# 
  5552  0F3C                     	;# 
  5553  0F3D                     	;# 
  5554  0F3E                     	;# 
  5555  0F3F                     	;# 
  5556  0F40                     	;# 
  5557  0F41                     	;# 
  5558  0F43                     	;# 
  5559  0F44                     	;# 
  5560  0F45                     	;# 
  5561  0F46                     	;# 
  5562  0F47                     	;# 
  5563  0F48                     	;# 
  5564  0F49                     	;# 
  5565  0F4A                     	;# 
  5566  0F4B                     	;# 
  5567  0F4C                     	;# 
  5568  0F4E                     	;# 
  5569  0F4F                     	;# 
  5570  0F50                     	;# 
  5571  0F51                     	;# 
  5572  0F52                     	;# 
  5573  0F53                     	;# 
  5574  0F54                     	;# 
  5575  0F55                     	;# 
  5576  0F56                     	;# 
  5577  0F57                     	;# 
  5578  0F59                     	;# 
  5579  0F5A                     	;# 
  5580  0F5B                     	;# 
  5581  0F5C                     	;# 
  5582  0F5D                     	;# 
  5583  0F61                     	;# 
  5584  0F62                     	;# 
  5585  0F64                     	;# 
  5586  0F65                     	;# 
  5587  0F66                     	;# 
  5588  0F67                     	;# 
  5589  0F68                     	;# 
  5590  0F69                     	;# 
  5591  0F6A                     	;# 
  5592  0F6B                     	;# 
  5593  0F6C                     	;# 
  5594  0F6D                     	;# 
  5595  0FE4                     	;# 
  5596  0FE5                     	;# 
  5597  0FE6                     	;# 
  5598  0FE7                     	;# 
  5599  0FE8                     	;# 
  5600  0FE9                     	;# 
  5601  0FEA                     	;# 
  5602  0FEB                     	;# 
  5603  0FED                     	;# 
  5604  0FEE                     	;# 
  5605  0FEF                     	;# 
  5606  0000                     	;# 
  5607  0001                     	;# 
  5608  0002                     	;# 
  5609  0003                     	;# 
  5610  0004                     	;# 
  5611  0005                     	;# 
  5612  0006                     	;# 
  5613  0007                     	;# 
  5614  0008                     	;# 
  5615  0009                     	;# 
  5616  000A                     	;# 
  5617  000B                     	;# 
  5618  000C                     	;# 
  5619  000D                     	;# 
  5620  000E                     	;# 
  5621  000F                     	;# 
  5622  0010                     	;# 
  5623  0011                     	;# 
  5624  0012                     	;# 
  5625  0013                     	;# 
  5626  0014                     	;# 
  5627  0015                     	;# 
  5628  0016                     	;# 
  5629  0017                     	;# 
  5630  0018                     	;# 
  5631  0019                     	;# 
  5632  001A                     	;# 
  5633  001C                     	;# 
  5634  001C                     	;# 
  5635  001D                     	;# 
  5636  001D                     	;# 
  5637  001E                     	;# 
  5638  001F                     	;# 
  5639  008C                     	;# 
  5640  008C                     	;# 
  5641  008D                     	;# 
  5642  008E                     	;# 
  5643  008E                     	;# 
  5644  008F                     	;# 
  5645  0090                     	;# 
  5646  0090                     	;# 
  5647  0091                     	;# 
  5648  0093                     	;# 
  5649  0094                     	;# 
  5650  0095                     	;# 
  5651  0096                     	;# 
  5652  0097                     	;# 
  5653  0098                     	;# 
  5654  0099                     	;# 
  5655  009A                     	;# 
  5656  009B                     	;# 
  5657  009C                     	;# 
  5658  009D                     	;# 
  5659  009E                     	;# 
  5660  010C                     	;# 
  5661  010D                     	;# 
  5662  010E                     	;# 
  5663  010E                     	;# 
  5664  010F                     	;# 
  5665  0110                     	;# 
  5666  0110                     	;# 
  5667  0111                     	;# 
  5668  0112                     	;# 
  5669  0112                     	;# 
  5670  0113                     	;# 
  5671  0114                     	;# 
  5672  0114                     	;# 
  5673  0115                     	;# 
  5674  0116                     	;# 
  5675  0116                     	;# 
  5676  0117                     	;# 
  5677  0119                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  011A                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011B                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011C                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011D                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011E                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011F                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  018C                     	;# 
  5703  018D                     	;# 
  5704  018E                     	;# 
  5705  018F                     	;# 
  5706  0190                     	;# 
  5707  0191                     	;# 
  5708  0192                     	;# 
  5709  0196                     	;# 
  5710  0197                     	;# 
  5711  0198                     	;# 
  5712  0199                     	;# 
  5713  019A                     	;# 
  5714  019B                     	;# 
  5715  019C                     	;# 
  5716  020C                     	;# 
  5717  020C                     	;# 
  5718  020D                     	;# 
  5719  020E                     	;# 
  5720  020F                     	;# 
  5721  020F                     	;# 
  5722  0210                     	;# 
  5723  0210                     	;# 
  5724  0211                     	;# 
  5725  0211                     	;# 
  5726  0212                     	;# 
  5727  0212                     	;# 
  5728  0213                     	;# 
  5729  0214                     	;# 
  5730  0215                     	;# 
  5731  0215                     	;# 
  5732  0216                     	;# 
  5733  0216                     	;# 
  5734  0217                     	;# 
  5735  0217                     	;# 
  5736  0218                     	;# 
  5737  0218                     	;# 
  5738  0219                     	;# 
  5739  021A                     	;# 
  5740  021B                     	;# 
  5741  021B                     	;# 
  5742  021C                     	;# 
  5743  021C                     	;# 
  5744  021D                     	;# 
  5745  021D                     	;# 
  5746  021E                     	;# 
  5747  021F                     	;# 
  5748  028C                     	;# 
  5749  028C                     	;# 
  5750  028D                     	;# 
  5751  028D                     	;# 
  5752  028E                     	;# 
  5753  028F                     	;# 
  5754  0290                     	;# 
  5755  0290                     	;# 
  5756  0291                     	;# 
  5757  0292                     	;# 
  5758  0292                     	;# 
  5759  0293                     	;# 
  5760  0293                     	;# 
  5761  0294                     	;# 
  5762  0295                     	;# 
  5763  0296                     	;# 
  5764  0296                     	;# 
  5765  0297                     	;# 
  5766  0298                     	;# 
  5767  0298                     	;# 
  5768  0299                     	;# 
  5769  0299                     	;# 
  5770  029A                     	;# 
  5771  029B                     	;# 
  5772  029C                     	;# 
  5773  029C                     	;# 
  5774  029D                     	;# 
  5775  030C                     	;# 
  5776  030C                     	;# 
  5777  030D                     	;# 
  5778  030E                     	;# 
  5779  030F                     	;# 
  5780  0310                     	;# 
  5781  0310                     	;# 
  5782  0311                     	;# 
  5783  0312                     	;# 
  5784  0313                     	;# 
  5785  0314                     	;# 
  5786  0314                     	;# 
  5787  0315                     	;# 
  5788  0316                     	;# 
  5789  0317                     	;# 
  5790  0318                     	;# 
  5791  0318                     	;# 
  5792  0319                     	;# 
  5793  031A                     	;# 
  5794  031B                     	;# 
  5795  031C                     	;# 
  5796  031C                     	;# 
  5797  031D                     	;# 
  5798  031E                     	;# 
  5799  031F                     	;# 
  5800  038C                     	;# 
  5801  038C                     	;# 
  5802  038D                     	;# 
  5803  038E                     	;# 
  5804  0390                     	;# 
  5805  0390                     	;# 
  5806  0391                     	;# 
  5807  0392                     	;# 
  5808  040C                     	;# 
  5809  040D                     	;# 
  5810  040E                     	;# 
  5811  040F                     	;# 
  5812  0410                     	;# 
  5813  0411                     	;# 
  5814  0416                     	;# 
  5815  0416                     	;# 
  5816  0417                     	;# 
  5817  0418                     	;# 
  5818  0418                     	;# 
  5819  0419                     	;# 
  5820  041A                     	;# 
  5821  041A                     	;# 
  5822  041B                     	;# 
  5823  041C                     	;# 
  5824  041C                     	;# 
  5825  041D                     	;# 
  5826  041E                     	;# 
  5827  041F                     	;# 
  5828  048C                     	;# 
  5829  048C                     	;# 
  5830  048D                     	;# 
  5831  048E                     	;# 
  5832  048F                     	;# 
  5833  048F                     	;# 
  5834  0490                     	;# 
  5835  0491                     	;# 
  5836  0492                     	;# 
  5837  0492                     	;# 
  5838  0493                     	;# 
  5839  0494                     	;# 
  5840  0495                     	;# 
  5841  0495                     	;# 
  5842  0496                     	;# 
  5843  0497                     	;# 
  5844  0498                     	;# 
  5845  0499                     	;# 
  5846  049A                     	;# 
  5847  049B                     	;# 
  5848  049C                     	;# 
  5849  049D                     	;# 
  5850  050C                     	;# 
  5851  050C                     	;# 
  5852  050D                     	;# 
  5853  050E                     	;# 
  5854  050F                     	;# 
  5855  050F                     	;# 
  5856  0510                     	;# 
  5857  0511                     	;# 
  5858  0512                     	;# 
  5859  0512                     	;# 
  5860  0513                     	;# 
  5861  0514                     	;# 
  5862  0515                     	;# 
  5863  0515                     	;# 
  5864  0516                     	;# 
  5865  0517                     	;# 
  5866  0518                     	;# 
  5867  0519                     	;# 
  5868  051A                     	;# 
  5869  051B                     	;# 
  5870  051C                     	;# 
  5871  051D                     	;# 
  5872  058C                     	;# 
  5873  058C                     	;# 
  5874  058D                     	;# 
  5875  058E                     	;# 
  5876  058F                     	;# 
  5877  058F                     	;# 
  5878  0590                     	;# 
  5879  0591                     	;# 
  5880  0592                     	;# 
  5881  0593                     	;# 
  5882  060C                     	;# 
  5883  060D                     	;# 
  5884  060E                     	;# 
  5885  060F                     	;# 
  5886  0610                     	;# 
  5887  0611                     	;# 
  5888  0612                     	;# 
  5889  0613                     	;# 
  5890  0614                     	;# 
  5891  0616                     	;# 
  5892  0617                     	;# 
  5893  0618                     	;# 
  5894  0619                     	;# 
  5895  061A                     	;# 
  5896  061B                     	;# 
  5897  061C                     	;# 
  5898  061D                     	;# 
  5899  061E                     	;# 
  5900  068C                     	;# 
  5901  068D                     	;# 
  5902  068E                     	;# 
  5903  068F                     	;# 
  5904  0690                     	;# 
  5905  0691                     	;# 
  5906  0692                     	;# 
  5907  0693                     	;# 
  5908  0694                     	;# 
  5909  070C                     	;# 
  5910  070D                     	;# 
  5911  070E                     	;# 
  5912  070F                     	;# 
  5913  0710                     	;# 
  5914  0711                     	;# 
  5915  0712                     	;# 
  5916  0713                     	;# 
  5917  0714                     	;# 
  5918  0716                     	;# 
  5919  0717                     	;# 
  5920  0718                     	;# 
  5921  0719                     	;# 
  5922  071A                     	;# 
  5923  071B                     	;# 
  5924  071C                     	;# 
  5925  071D                     	;# 
  5926  071E                     	;# 
  5927  0796                     	;# 
  5928  0797                     	;# 
  5929  0798                     	;# 
  5930  0799                     	;# 
  5931  079A                     	;# 
  5932  079B                     	;# 
  5933  080C                     	;# 
  5934  080D                     	;# 
  5935  080E                     	;# 
  5936  080F                     	;# 
  5937  0810                     	;# 
  5938  0811                     	;# 
  5939  0812                     	;# 
  5940  0813                     	;# 
  5941  0814                     	;# 
  5942  081A                     	;# 
  5943  081B                     	;# 
  5944  081C                     	;# 
  5945  081D                     	;# 
  5946  081E                     	;# 
  5947  081F                     	;# 
  5948  088C                     	;# 
  5949  088D                     	;# 
  5950  088E                     	;# 
  5951  088F                     	;# 
  5952  0890                     	;# 
  5953  0891                     	;# 
  5954  0892                     	;# 
  5955  0893                     	;# 
  5956  0895                     	;# 
  5957  0896                     	;# 
  5958  0897                     	;# 
  5959  0898                     	;# 
  5960  0899                     	;# 
  5961  089A                     	;# 
  5962  089B                     	;# 
  5963  090C                     	;# 
  5964  090E                     	;# 
  5965  090F                     	;# 
  5966  091F                     	;# 
  5967  091F                     	;# 
  5968  098F                     	;# 
  5969  098F                     	;# 
  5970  0990                     	;# 
  5971  0991                     	;# 
  5972  0992                     	;# 
  5973  0993                     	;# 
  5974  0994                     	;# 
  5975  0995                     	;# 
  5976  0996                     	;# 
  5977  0997                     	;# 
  5978  0E0F                     	;# 
  5979  0E10                     	;# 
  5980  0E11                     	;# 
  5981  0E12                     	;# 
  5982  0E13                     	;# 
  5983  0E14                     	;# 
  5984  0E15                     	;# 
  5985  0E16                     	;# 
  5986  0E17                     	;# 
  5987  0E18                     	;# 
  5988  0E19                     	;# 
  5989  0E1A                     	;# 
  5990  0E1B                     	;# 
  5991  0E1C                     	;# 
  5992  0E1D                     	;# 
  5993  0E1E                     	;# 
  5994  0E1F                     	;# 
  5995  0E20                     	;# 
  5996  0E21                     	;# 
  5997  0E22                     	;# 
  5998  0E23                     	;# 
  5999  0E24                     	;# 
  6000  0E25                     	;# 
  6001  0E26                     	;# 
  6002  0E27                     	;# 
  6003  0E28                     	;# 
  6004  0E29                     	;# 
  6005  0E2A                     	;# 
  6006  0E2B                     	;# 
  6007  0E2C                     	;# 
  6008  0E2D                     	;# 
  6009  0E2E                     	;# 
  6010  0E2F                     	;# 
  6011  0E30                     	;# 
  6012  0E31                     	;# 
  6013  0E32                     	;# 
  6014  0E33                     	;# 
  6015  0E34                     	;# 
  6016  0E35                     	;# 
  6017  0E36                     	;# 
  6018  0E37                     	;# 
  6019  0E8F                     	;# 
  6020  0E90                     	;# 
  6021  0E91                     	;# 
  6022  0E92                     	;# 
  6023  0E93                     	;# 
  6024  0E94                     	;# 
  6025  0E95                     	;# 
  6026  0E96                     	;# 
  6027  0E97                     	;# 
  6028  0E9C                     	;# 
  6029  0E9D                     	;# 
  6030  0E9E                     	;# 
  6031  0EA1                     	;# 
  6032  0EA2                     	;# 
  6033  0EA3                     	;# 
  6034  0EA4                     	;# 
  6035  0EA5                     	;# 
  6036  0EA9                     	;# 
  6037  0EAA                     	;# 
  6038  0EAB                     	;# 
  6039  0EAC                     	;# 
  6040  0EB1                     	;# 
  6041  0EB2                     	;# 
  6042  0EB3                     	;# 
  6043  0EB8                     	;# 
  6044  0EB9                     	;# 
  6045  0EBA                     	;# 
  6046  0EBB                     	;# 
  6047  0EBC                     	;# 
  6048  0EBD                     	;# 
  6049  0EBE                     	;# 
  6050  0EC3                     	;# 
  6051  0EC5                     	;# 
  6052  0EC6                     	;# 
  6053  0EC7                     	;# 
  6054  0EC8                     	;# 
  6055  0EC9                     	;# 
  6056  0ECA                     	;# 
  6057  0ECB                     	;# 
  6058  0ECC                     	;# 
  6059  0F10                     	;# 
  6060  0F11                     	;# 
  6061  0F12                     	;# 
  6062  0F13                     	;# 
  6063  0F14                     	;# 
  6064  0F15                     	;# 
  6065  0F16                     	;# 
  6066  0F17                     	;# 
  6067  0F18                     	;# 
  6068  0F19                     	;# 
  6069  0F1A                     	;# 
  6070  0F1B                     	;# 
  6071  0F1C                     	;# 
  6072  0F1D                     	;# 
  6073  0F1E                     	;# 
  6074  0F1F                     	;# 
  6075  0F20                     	;# 
  6076  0F21                     	;# 
  6077  0F22                     	;# 
  6078  0F23                     	;# 
  6079  0F24                     	;# 
  6080  0F25                     	;# 
  6081  0F26                     	;# 
  6082  0F27                     	;# 
  6083  0F28                     	;# 
  6084  0F29                     	;# 
  6085  0F2A                     	;# 
  6086  0F2B                     	;# 
  6087  0F2C                     	;# 
  6088  0F2D                     	;# 
  6089  0F2E                     	;# 
  6090  0F2F                     	;# 
  6091  0F30                     	;# 
  6092  0F31                     	;# 
  6093  0F32                     	;# 
  6094  0F38                     	;# 
  6095  0F39                     	;# 
  6096  0F3A                     	;# 
  6097  0F3B                     	;# 
  6098  0F3C                     	;# 
  6099  0F3D                     	;# 
  6100  0F3E                     	;# 
  6101  0F3F                     	;# 
  6102  0F40                     	;# 
  6103  0F41                     	;# 
  6104  0F43                     	;# 
  6105  0F44                     	;# 
  6106  0F45                     	;# 
  6107  0F46                     	;# 
  6108  0F47                     	;# 
  6109  0F48                     	;# 
  6110  0F49                     	;# 
  6111  0F4A                     	;# 
  6112  0F4B                     	;# 
  6113  0F4C                     	;# 
  6114  0F4E                     	;# 
  6115  0F4F                     	;# 
  6116  0F50                     	;# 
  6117  0F51                     	;# 
  6118  0F52                     	;# 
  6119  0F53                     	;# 
  6120  0F54                     	;# 
  6121  0F55                     	;# 
  6122  0F56                     	;# 
  6123  0F57                     	;# 
  6124  0F59                     	;# 
  6125  0F5A                     	;# 
  6126  0F5B                     	;# 
  6127  0F5C                     	;# 
  6128  0F5D                     	;# 
  6129  0F61                     	;# 
  6130  0F62                     	;# 
  6131  0F64                     	;# 
  6132  0F65                     	;# 
  6133  0F66                     	;# 
  6134  0F67                     	;# 
  6135  0F68                     	;# 
  6136  0F69                     	;# 
  6137  0F6A                     	;# 
  6138  0F6B                     	;# 
  6139  0F6C                     	;# 
  6140  0F6D                     	;# 
  6141  0FE4                     	;# 
  6142  0FE5                     	;# 
  6143  0FE6                     	;# 
  6144  0FE7                     	;# 
  6145  0FE8                     	;# 
  6146  0FE9                     	;# 
  6147  0FEA                     	;# 
  6148  0FEB                     	;# 
  6149  0FED                     	;# 
  6150  0FEE                     	;# 
  6151  0FEF                     	;# 
  6152  0000                     	;# 
  6153  0001                     	;# 
  6154  0002                     	;# 
  6155  0003                     	;# 
  6156  0004                     	;# 
  6157  0005                     	;# 
  6158  0006                     	;# 
  6159  0007                     	;# 
  6160  0008                     	;# 
  6161  0009                     	;# 
  6162  000A                     	;# 
  6163  000B                     	;# 
  6164  000C                     	;# 
  6165  000D                     	;# 
  6166  000E                     	;# 
  6167  000F                     	;# 
  6168  0010                     	;# 
  6169  0011                     	;# 
  6170  0012                     	;# 
  6171  0013                     	;# 
  6172  0014                     	;# 
  6173  0015                     	;# 
  6174  0016                     	;# 
  6175  0017                     	;# 
  6176  0018                     	;# 
  6177  0019                     	;# 
  6178  001A                     	;# 
  6179  001C                     	;# 
  6180  001C                     	;# 
  6181  001D                     	;# 
  6182  001D                     	;# 
  6183  001E                     	;# 
  6184  001F                     	;# 
  6185  008C                     	;# 
  6186  008C                     	;# 
  6187  008D                     	;# 
  6188  008E                     	;# 
  6189  008E                     	;# 
  6190  008F                     	;# 
  6191  0090                     	;# 
  6192  0090                     	;# 
  6193  0091                     	;# 
  6194  0093                     	;# 
  6195  0094                     	;# 
  6196  0095                     	;# 
  6197  0096                     	;# 
  6198  0097                     	;# 
  6199  0098                     	;# 
  6200  0099                     	;# 
  6201  009A                     	;# 
  6202  009B                     	;# 
  6203  009C                     	;# 
  6204  009D                     	;# 
  6205  009E                     	;# 
  6206  010C                     	;# 
  6207  010D                     	;# 
  6208  010E                     	;# 
  6209  010E                     	;# 
  6210  010F                     	;# 
  6211  0110                     	;# 
  6212  0110                     	;# 
  6213  0111                     	;# 
  6214  0112                     	;# 
  6215  0112                     	;# 
  6216  0113                     	;# 
  6217  0114                     	;# 
  6218  0114                     	;# 
  6219  0115                     	;# 
  6220  0116                     	;# 
  6221  0116                     	;# 
  6222  0117                     	;# 
  6223  0119                     	;# 
  6224  0119                     	;# 
  6225  0119                     	;# 
  6226  011A                     	;# 
  6227  011A                     	;# 
  6228  011A                     	;# 
  6229  011B                     	;# 
  6230  011B                     	;# 
  6231  011B                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011C                     	;# 
  6235  011C                     	;# 
  6236  011C                     	;# 
  6237  011D                     	;# 
  6238  011D                     	;# 
  6239  011D                     	;# 
  6240  011E                     	;# 
  6241  011E                     	;# 
  6242  011E                     	;# 
  6243  011F                     	;# 
  6244  011F                     	;# 
  6245  011F                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  018C                     	;# 
  6249  018D                     	;# 
  6250  018E                     	;# 
  6251  018F                     	;# 
  6252  0190                     	;# 
  6253  0191                     	;# 
  6254  0192                     	;# 
  6255  0196                     	;# 
  6256  0197                     	;# 
  6257  0198                     	;# 
  6258  0199                     	;# 
  6259  019A                     	;# 
  6260  019B                     	;# 
  6261  019C                     	;# 
  6262  020C                     	;# 
  6263  020C                     	;# 
  6264  020D                     	;# 
  6265  020E                     	;# 
  6266  020F                     	;# 
  6267  020F                     	;# 
  6268  0210                     	;# 
  6269  0210                     	;# 
  6270  0211                     	;# 
  6271  0211                     	;# 
  6272  0212                     	;# 
  6273  0212                     	;# 
  6274  0213                     	;# 
  6275  0214                     	;# 
  6276  0215                     	;# 
  6277  0215                     	;# 
  6278  0216                     	;# 
  6279  0216                     	;# 
  6280  0217                     	;# 
  6281  0217                     	;# 
  6282  0218                     	;# 
  6283  0218                     	;# 
  6284  0219                     	;# 
  6285  021A                     	;# 
  6286  021B                     	;# 
  6287  021B                     	;# 
  6288  021C                     	;# 
  6289  021C                     	;# 
  6290  021D                     	;# 
  6291  021D                     	;# 
  6292  021E                     	;# 
  6293  021F                     	;# 
  6294  028C                     	;# 
  6295  028C                     	;# 
  6296  028D                     	;# 
  6297  028D                     	;# 
  6298  028E                     	;# 
  6299  028F                     	;# 
  6300  0290                     	;# 
  6301  0290                     	;# 
  6302  0291                     	;# 
  6303  0292                     	;# 
  6304  0292                     	;# 
  6305  0293                     	;# 
  6306  0293                     	;# 
  6307  0294                     	;# 
  6308  0295                     	;# 
  6309  0296                     	;# 
  6310  0296                     	;# 
  6311  0297                     	;# 
  6312  0298                     	;# 
  6313  0298                     	;# 
  6314  0299                     	;# 
  6315  0299                     	;# 
  6316  029A                     	;# 
  6317  029B                     	;# 
  6318  029C                     	;# 
  6319  029C                     	;# 
  6320  029D                     	;# 
  6321  030C                     	;# 
  6322  030C                     	;# 
  6323  030D                     	;# 
  6324  030E                     	;# 
  6325  030F                     	;# 
  6326  0310                     	;# 
  6327  0310                     	;# 
  6328  0311                     	;# 
  6329  0312                     	;# 
  6330  0313                     	;# 
  6331  0314                     	;# 
  6332  0314                     	;# 
  6333  0315                     	;# 
  6334  0316                     	;# 
  6335  0317                     	;# 
  6336  0318                     	;# 
  6337  0318                     	;# 
  6338  0319                     	;# 
  6339  031A                     	;# 
  6340  031B                     	;# 
  6341  031C                     	;# 
  6342  031C                     	;# 
  6343  031D                     	;# 
  6344  031E                     	;# 
  6345  031F                     	;# 
  6346  038C                     	;# 
  6347  038C                     	;# 
  6348  038D                     	;# 
  6349  038E                     	;# 
  6350  0390                     	;# 
  6351  0390                     	;# 
  6352  0391                     	;# 
  6353  0392                     	;# 
  6354  040C                     	;# 
  6355  040D                     	;# 
  6356  040E                     	;# 
  6357  040F                     	;# 
  6358  0410                     	;# 
  6359  0411                     	;# 
  6360  0416                     	;# 
  6361  0416                     	;# 
  6362  0417                     	;# 
  6363  0418                     	;# 
  6364  0418                     	;# 
  6365  0419                     	;# 
  6366  041A                     	;# 
  6367  041A                     	;# 
  6368  041B                     	;# 
  6369  041C                     	;# 
  6370  041C                     	;# 
  6371  041D                     	;# 
  6372  041E                     	;# 
  6373  041F                     	;# 
  6374  048C                     	;# 
  6375  048C                     	;# 
  6376  048D                     	;# 
  6377  048E                     	;# 
  6378  048F                     	;# 
  6379  048F                     	;# 
  6380  0490                     	;# 
  6381  0491                     	;# 
  6382  0492                     	;# 
  6383  0492                     	;# 
  6384  0493                     	;# 
  6385  0494                     	;# 
  6386  0495                     	;# 
  6387  0495                     	;# 
  6388  0496                     	;# 
  6389  0497                     	;# 
  6390  0498                     	;# 
  6391  0499                     	;# 
  6392  049A                     	;# 
  6393  049B                     	;# 
  6394  049C                     	;# 
  6395  049D                     	;# 
  6396  050C                     	;# 
  6397  050C                     	;# 
  6398  050D                     	;# 
  6399  050E                     	;# 
  6400  050F                     	;# 
  6401  050F                     	;# 
  6402  0510                     	;# 
  6403  0511                     	;# 
  6404  0512                     	;# 
  6405  0512                     	;# 
  6406  0513                     	;# 
  6407  0514                     	;# 
  6408  0515                     	;# 
  6409  0515                     	;# 
  6410  0516                     	;# 
  6411  0517                     	;# 
  6412  0518                     	;# 
  6413  0519                     	;# 
  6414  051A                     	;# 
  6415  051B                     	;# 
  6416  051C                     	;# 
  6417  051D                     	;# 
  6418  058C                     	;# 
  6419  058C                     	;# 
  6420  058D                     	;# 
  6421  058E                     	;# 
  6422  058F                     	;# 
  6423  058F                     	;# 
  6424  0590                     	;# 
  6425  0591                     	;# 
  6426  0592                     	;# 
  6427  0593                     	;# 
  6428  060C                     	;# 
  6429  060D                     	;# 
  6430  060E                     	;# 
  6431  060F                     	;# 
  6432  0610                     	;# 
  6433  0611                     	;# 
  6434  0612                     	;# 
  6435  0613                     	;# 
  6436  0614                     	;# 
  6437  0616                     	;# 
  6438  0617                     	;# 
  6439  0618                     	;# 
  6440  0619                     	;# 
  6441  061A                     	;# 
  6442  061B                     	;# 
  6443  061C                     	;# 
  6444  061D                     	;# 
  6445  061E                     	;# 
  6446  068C                     	;# 
  6447  068D                     	;# 
  6448  068E                     	;# 
  6449  068F                     	;# 
  6450  0690                     	;# 
  6451  0691                     	;# 
  6452  0692                     	;# 
  6453  0693                     	;# 
  6454  0694                     	;# 
  6455  070C                     	;# 
  6456  070D                     	;# 
  6457  070E                     	;# 
  6458  070F                     	;# 
  6459  0710                     	;# 
  6460  0711                     	;# 
  6461  0712                     	;# 
  6462  0713                     	;# 
  6463  0714                     	;# 
  6464  0716                     	;# 
  6465  0717                     	;# 
  6466  0718                     	;# 
  6467  0719                     	;# 
  6468  071A                     	;# 
  6469  071B                     	;# 
  6470  071C                     	;# 
  6471  071D                     	;# 
  6472  071E                     	;# 
  6473  0796                     	;# 
  6474  0797                     	;# 
  6475  0798                     	;# 
  6476  0799                     	;# 
  6477  079A                     	;# 
  6478  079B                     	;# 
  6479  080C                     	;# 
  6480  080D                     	;# 
  6481  080E                     	;# 
  6482  080F                     	;# 
  6483  0810                     	;# 
  6484  0811                     	;# 
  6485  0812                     	;# 
  6486  0813                     	;# 
  6487  0814                     	;# 
  6488  081A                     	;# 
  6489  081B                     	;# 
  6490  081C                     	;# 
  6491  081D                     	;# 
  6492  081E                     	;# 
  6493  081F                     	;# 
  6494  088C                     	;# 
  6495  088D                     	;# 
  6496  088E                     	;# 
  6497  088F                     	;# 
  6498  0890                     	;# 
  6499  0891                     	;# 
  6500  0892                     	;# 
  6501  0893                     	;# 
  6502  0895                     	;# 
  6503  0896                     	;# 
  6504  0897                     	;# 
  6505  0898                     	;# 
  6506  0899                     	;# 
  6507  089A                     	;# 
  6508  089B                     	;# 
  6509  090C                     	;# 
  6510  090E                     	;# 
  6511  090F                     	;# 
  6512  091F                     	;# 
  6513  091F                     	;# 
  6514  098F                     	;# 
  6515  098F                     	;# 
  6516  0990                     	;# 
  6517  0991                     	;# 
  6518  0992                     	;# 
  6519  0993                     	;# 
  6520  0994                     	;# 
  6521  0995                     	;# 
  6522  0996                     	;# 
  6523  0997                     	;# 
  6524  0E0F                     	;# 
  6525  0E10                     	;# 
  6526  0E11                     	;# 
  6527  0E12                     	;# 
  6528  0E13                     	;# 
  6529  0E14                     	;# 
  6530  0E15                     	;# 
  6531  0E16                     	;# 
  6532  0E17                     	;# 
  6533  0E18                     	;# 
  6534  0E19                     	;# 
  6535  0E1A                     	;# 
  6536  0E1B                     	;# 
  6537  0E1C                     	;# 
  6538  0E1D                     	;# 
  6539  0E1E                     	;# 
  6540  0E1F                     	;# 
  6541  0E20                     	;# 
  6542  0E21                     	;# 
  6543  0E22                     	;# 
  6544  0E23                     	;# 
  6545  0E24                     	;# 
  6546  0E25                     	;# 
  6547  0E26                     	;# 
  6548  0E27                     	;# 
  6549  0E28                     	;# 
  6550  0E29                     	;# 
  6551  0E2A                     	;# 
  6552  0E2B                     	;# 
  6553  0E2C                     	;# 
  6554  0E2D                     	;# 
  6555  0E2E                     	;# 
  6556  0E2F                     	;# 
  6557  0E30                     	;# 
  6558  0E31                     	;# 
  6559  0E32                     	;# 
  6560  0E33                     	;# 
  6561  0E34                     	;# 
  6562  0E35                     	;# 
  6563  0E36                     	;# 
  6564  0E37                     	;# 
  6565  0E8F                     	;# 
  6566  0E90                     	;# 
  6567  0E91                     	;# 
  6568  0E92                     	;# 
  6569  0E93                     	;# 
  6570  0E94                     	;# 
  6571  0E95                     	;# 
  6572  0E96                     	;# 
  6573  0E97                     	;# 
  6574  0E9C                     	;# 
  6575  0E9D                     	;# 
  6576  0E9E                     	;# 
  6577  0EA1                     	;# 
  6578  0EA2                     	;# 
  6579  0EA3                     	;# 
  6580  0EA4                     	;# 
  6581  0EA5                     	;# 
  6582  0EA9                     	;# 
  6583  0EAA                     	;# 
  6584  0EAB                     	;# 
  6585  0EAC                     	;# 
  6586  0EB1                     	;# 
  6587  0EB2                     	;# 
  6588  0EB3                     	;# 
  6589  0EB8                     	;# 
  6590  0EB9                     	;# 
  6591  0EBA                     	;# 
  6592  0EBB                     	;# 
  6593  0EBC                     	;# 
  6594  0EBD                     	;# 
  6595  0EBE                     	;# 
  6596  0EC3                     	;# 
  6597  0EC5                     	;# 
  6598  0EC6                     	;# 
  6599  0EC7                     	;# 
  6600  0EC8                     	;# 
  6601  0EC9                     	;# 
  6602  0ECA                     	;# 
  6603  0ECB                     	;# 
  6604  0ECC                     	;# 
  6605  0F10                     	;# 
  6606  0F11                     	;# 
  6607  0F12                     	;# 
  6608  0F13                     	;# 
  6609  0F14                     	;# 
  6610  0F15                     	;# 
  6611  0F16                     	;# 
  6612  0F17                     	;# 
  6613  0F18                     	;# 
  6614  0F19                     	;# 
  6615  0F1A                     	;# 
  6616  0F1B                     	;# 
  6617  0F1C                     	;# 
  6618  0F1D                     	;# 
  6619  0F1E                     	;# 
  6620  0F1F                     	;# 
  6621  0F20                     	;# 
  6622  0F21                     	;# 
  6623  0F22                     	;# 
  6624  0F23                     	;# 
  6625  0F24                     	;# 
  6626  0F25                     	;# 
  6627  0F26                     	;# 
  6628  0F27                     	;# 
  6629  0F28                     	;# 
  6630  0F29                     	;# 
  6631  0F2A                     	;# 
  6632  0F2B                     	;# 
  6633  0F2C                     	;# 
  6634  0F2D                     	;# 
  6635  0F2E                     	;# 
  6636  0F2F                     	;# 
  6637  0F30                     	;# 
  6638  0F31                     	;# 
  6639  0F32                     	;# 
  6640  0F38                     	;# 
  6641  0F39                     	;# 
  6642  0F3A                     	;# 
  6643  0F3B                     	;# 
  6644  0F3C                     	;# 
  6645  0F3D                     	;# 
  6646  0F3E                     	;# 
  6647  0F3F                     	;# 
  6648  0F40                     	;# 
  6649  0F41                     	;# 
  6650  0F43                     	;# 
  6651  0F44                     	;# 
  6652  0F45                     	;# 
  6653  0F46                     	;# 
  6654  0F47                     	;# 
  6655  0F48                     	;# 
  6656  0F49                     	;# 
  6657  0F4A                     	;# 
  6658  0F4B                     	;# 
  6659  0F4C                     	;# 
  6660  0F4E                     	;# 
  6661  0F4F                     	;# 
  6662  0F50                     	;# 
  6663  0F51                     	;# 
  6664  0F52                     	;# 
  6665  0F53                     	;# 
  6666  0F54                     	;# 
  6667  0F55                     	;# 
  6668  0F56                     	;# 
  6669  0F57                     	;# 
  6670  0F59                     	;# 
  6671  0F5A                     	;# 
  6672  0F5B                     	;# 
  6673  0F5C                     	;# 
  6674  0F5D                     	;# 
  6675  0F61                     	;# 
  6676  0F62                     	;# 
  6677  0F64                     	;# 
  6678  0F65                     	;# 
  6679  0F66                     	;# 
  6680  0F67                     	;# 
  6681  0F68                     	;# 
  6682  0F69                     	;# 
  6683  0F6A                     	;# 
  6684  0F6B                     	;# 
  6685  0F6C                     	;# 
  6686  0F6D                     	;# 
  6687  0FE4                     	;# 
  6688  0FE5                     	;# 
  6689  0FE6                     	;# 
  6690  0FE7                     	;# 
  6691  0FE8                     	;# 
  6692  0FE9                     	;# 
  6693  0FEA                     	;# 
  6694  0FEB                     	;# 
  6695  0FED                     	;# 
  6696  0FEE                     	;# 
  6697  0FEF                     	;# 
  6698  0000                     	;# 
  6699  0001                     	;# 
  6700  0002                     	;# 
  6701  0003                     	;# 
  6702  0004                     	;# 
  6703  0005                     	;# 
  6704  0006                     	;# 
  6705  0007                     	;# 
  6706  0008                     	;# 
  6707  0009                     	;# 
  6708  000A                     	;# 
  6709  000B                     	;# 
  6710  000C                     	;# 
  6711  000D                     	;# 
  6712  000E                     	;# 
  6713  000F                     	;# 
  6714  0010                     	;# 
  6715  0011                     	;# 
  6716  0012                     	;# 
  6717  0013                     	;# 
  6718  0014                     	;# 
  6719  0015                     	;# 
  6720  0016                     	;# 
  6721  0017                     	;# 
  6722  0018                     	;# 
  6723  0019                     	;# 
  6724  001A                     	;# 
  6725  001C                     	;# 
  6726  001C                     	;# 
  6727  001D                     	;# 
  6728  001D                     	;# 
  6729  001E                     	;# 
  6730  001F                     	;# 
  6731  008C                     	;# 
  6732  008C                     	;# 
  6733  008D                     	;# 
  6734  008E                     	;# 
  6735  008E                     	;# 
  6736  008F                     	;# 
  6737  0090                     	;# 
  6738  0090                     	;# 
  6739  0091                     	;# 
  6740  0093                     	;# 
  6741  0094                     	;# 
  6742  0095                     	;# 
  6743  0096                     	;# 
  6744  0097                     	;# 
  6745  0098                     	;# 
  6746  0099                     	;# 
  6747  009A                     	;# 
  6748  009B                     	;# 
  6749  009C                     	;# 
  6750  009D                     	;# 
  6751  009E                     	;# 
  6752  010C                     	;# 
  6753  010D                     	;# 
  6754  010E                     	;# 
  6755  010E                     	;# 
  6756  010F                     	;# 
  6757  0110                     	;# 
  6758  0110                     	;# 
  6759  0111                     	;# 
  6760  0112                     	;# 
  6761  0112                     	;# 
  6762  0113                     	;# 
  6763  0114                     	;# 
  6764  0114                     	;# 
  6765  0115                     	;# 
  6766  0116                     	;# 
  6767  0116                     	;# 
  6768  0117                     	;# 
  6769  0119                     	;# 
  6770  0119                     	;# 
  6771  0119                     	;# 
  6772  011A                     	;# 
  6773  011A                     	;# 
  6774  011A                     	;# 
  6775  011B                     	;# 
  6776  011B                     	;# 
  6777  011B                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011C                     	;# 
  6781  011C                     	;# 
  6782  011C                     	;# 
  6783  011D                     	;# 
  6784  011D                     	;# 
  6785  011D                     	;# 
  6786  011E                     	;# 
  6787  011E                     	;# 
  6788  011E                     	;# 
  6789  011F                     	;# 
  6790  011F                     	;# 
  6791  011F                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  018C                     	;# 
  6795  018D                     	;# 
  6796  018E                     	;# 
  6797  018F                     	;# 
  6798  0190                     	;# 
  6799  0191                     	;# 
  6800  0192                     	;# 
  6801  0196                     	;# 
  6802  0197                     	;# 
  6803  0198                     	;# 
  6804  0199                     	;# 
  6805  019A                     	;# 
  6806  019B                     	;# 
  6807  019C                     	;# 
  6808  020C                     	;# 
  6809  020C                     	;# 
  6810  020D                     	;# 
  6811  020E                     	;# 
  6812  020F                     	;# 
  6813  020F                     	;# 
  6814  0210                     	;# 
  6815  0210                     	;# 
  6816  0211                     	;# 
  6817  0211                     	;# 
  6818  0212                     	;# 
  6819  0212                     	;# 
  6820  0213                     	;# 
  6821  0214                     	;# 
  6822  0215                     	;# 
  6823  0215                     	;# 
  6824  0216                     	;# 
  6825  0216                     	;# 
  6826  0217                     	;# 
  6827  0217                     	;# 
  6828  0218                     	;# 
  6829  0218                     	;# 
  6830  0219                     	;# 
  6831  021A                     	;# 
  6832  021B                     	;# 
  6833  021B                     	;# 
  6834  021C                     	;# 
  6835  021C                     	;# 
  6836  021D                     	;# 
  6837  021D                     	;# 
  6838  021E                     	;# 
  6839  021F                     	;# 
  6840  028C                     	;# 
  6841  028C                     	;# 
  6842  028D                     	;# 
  6843  028D                     	;# 
  6844  028E                     	;# 
  6845  028F                     	;# 
  6846  0290                     	;# 
  6847  0290                     	;# 
  6848  0291                     	;# 
  6849  0292                     	;# 
  6850  0292                     	;# 
  6851  0293                     	;# 
  6852  0293                     	;# 
  6853  0294                     	;# 
  6854  0295                     	;# 
  6855  0296                     	;# 
  6856  0296                     	;# 
  6857  0297                     	;# 
  6858  0298                     	;# 
  6859  0298                     	;# 
  6860  0299                     	;# 
  6861  0299                     	;# 
  6862  029A                     	;# 
  6863  029B                     	;# 
  6864  029C                     	;# 
  6865  029C                     	;# 
  6866  029D                     	;# 
  6867  030C                     	;# 
  6868  030C                     	;# 
  6869  030D                     	;# 
  6870  030E                     	;# 
  6871  030F                     	;# 
  6872  0310                     	;# 
  6873  0310                     	;# 
  6874  0311                     	;# 
  6875  0312                     	;# 
  6876  0313                     	;# 
  6877  0314                     	;# 
  6878  0314                     	;# 
  6879  0315                     	;# 
  6880  0316                     	;# 
  6881  0317                     	;# 
  6882  0318                     	;# 
  6883  0318                     	;# 
  6884  0319                     	;# 
  6885  031A                     	;# 
  6886  031B                     	;# 
  6887  031C                     	;# 
  6888  031C                     	;# 
  6889  031D                     	;# 
  6890  031E                     	;# 
  6891  031F                     	;# 
  6892  038C                     	;# 
  6893  038C                     	;# 
  6894  038D                     	;# 
  6895  038E                     	;# 
  6896  0390                     	;# 
  6897  0390                     	;# 
  6898  0391                     	;# 
  6899  0392                     	;# 
  6900  040C                     	;# 
  6901  040D                     	;# 
  6902  040E                     	;# 
  6903  040F                     	;# 
  6904  0410                     	;# 
  6905  0411                     	;# 
  6906  0416                     	;# 
  6907  0416                     	;# 
  6908  0417                     	;# 
  6909  0418                     	;# 
  6910  0418                     	;# 
  6911  0419                     	;# 
  6912  041A                     	;# 
  6913  041A                     	;# 
  6914  041B                     	;# 
  6915  041C                     	;# 
  6916  041C                     	;# 
  6917  041D                     	;# 
  6918  041E                     	;# 
  6919  041F                     	;# 
  6920  048C                     	;# 
  6921  048C                     	;# 
  6922  048D                     	;# 
  6923  048E                     	;# 
  6924  048F                     	;# 
  6925  048F                     	;# 
  6926  0490                     	;# 
  6927  0491                     	;# 
  6928  0492                     	;# 
  6929  0492                     	;# 
  6930  0493                     	;# 
  6931  0494                     	;# 
  6932  0495                     	;# 
  6933  0495                     	;# 
  6934  0496                     	;# 
  6935  0497                     	;# 
  6936  0498                     	;# 
  6937  0499                     	;# 
  6938  049A                     	;# 
  6939  049B                     	;# 
  6940  049C                     	;# 
  6941  049D                     	;# 
  6942  050C                     	;# 
  6943  050C                     	;# 
  6944  050D                     	;# 
  6945  050E                     	;# 
  6946  050F                     	;# 
  6947  050F                     	;# 
  6948  0510                     	;# 
  6949  0511                     	;# 
  6950  0512                     	;# 
  6951  0512                     	;# 
  6952  0513                     	;# 
  6953  0514                     	;# 
  6954  0515                     	;# 
  6955  0515                     	;# 
  6956  0516                     	;# 
  6957  0517                     	;# 
  6958  0518                     	;# 
  6959  0519                     	;# 
  6960  051A                     	;# 
  6961  051B                     	;# 
  6962  051C                     	;# 
  6963  051D                     	;# 
  6964  058C                     	;# 
  6965  058C                     	;# 
  6966  058D                     	;# 
  6967  058E                     	;# 
  6968  058F                     	;# 
  6969  058F                     	;# 
  6970  0590                     	;# 
  6971  0591                     	;# 
  6972  0592                     	;# 
  6973  0593                     	;# 
  6974  060C                     	;# 
  6975  060D                     	;# 
  6976  060E                     	;# 
  6977  060F                     	;# 
  6978  0610                     	;# 
  6979  0611                     	;# 
  6980  0612                     	;# 
  6981  0613                     	;# 
  6982  0614                     	;# 
  6983  0616                     	;# 
  6984  0617                     	;# 
  6985  0618                     	;# 
  6986  0619                     	;# 
  6987  061A                     	;# 
  6988  061B                     	;# 
  6989  061C                     	;# 
  6990  061D                     	;# 
  6991  061E                     	;# 
  6992  068C                     	;# 
  6993  068D                     	;# 
  6994  068E                     	;# 
  6995  068F                     	;# 
  6996  0690                     	;# 
  6997  0691                     	;# 
  6998  0692                     	;# 
  6999  0693                     	;# 
  7000  0694                     	;# 
  7001  070C                     	;# 
  7002  070D                     	;# 
  7003  070E                     	;# 
  7004  070F                     	;# 
  7005  0710                     	;# 
  7006  0711                     	;# 
  7007  0712                     	;# 
  7008  0713                     	;# 
  7009  0714                     	;# 
  7010  0716                     	;# 
  7011  0717                     	;# 
  7012  0718                     	;# 
  7013  0719                     	;# 
  7014  071A                     	;# 
  7015  071B                     	;# 
  7016  071C                     	;# 
  7017  071D                     	;# 
  7018  071E                     	;# 
  7019  0796                     	;# 
  7020  0797                     	;# 
  7021  0798                     	;# 
  7022  0799                     	;# 
  7023  079A                     	;# 
  7024  079B                     	;# 
  7025  080C                     	;# 
  7026  080D                     	;# 
  7027  080E                     	;# 
  7028  080F                     	;# 
  7029  0810                     	;# 
  7030  0811                     	;# 
  7031  0812                     	;# 
  7032  0813                     	;# 
  7033  0814                     	;# 
  7034  081A                     	;# 
  7035  081B                     	;# 
  7036  081C                     	;# 
  7037  081D                     	;# 
  7038  081E                     	;# 
  7039  081F                     	;# 
  7040  088C                     	;# 
  7041  088D                     	;# 
  7042  088E                     	;# 
  7043  088F                     	;# 
  7044  0890                     	;# 
  7045  0891                     	;# 
  7046  0892                     	;# 
  7047  0893                     	;# 
  7048  0895                     	;# 
  7049  0896                     	;# 
  7050  0897                     	;# 
  7051  0898                     	;# 
  7052  0899                     	;# 
  7053  089A                     	;# 
  7054  089B                     	;# 
  7055  090C                     	;# 
  7056  090E                     	;# 
  7057  090F                     	;# 
  7058  091F                     	;# 
  7059  091F                     	;# 
  7060  098F                     	;# 
  7061  098F                     	;# 
  7062  0990                     	;# 
  7063  0991                     	;# 
  7064  0992                     	;# 
  7065  0993                     	;# 
  7066  0994                     	;# 
  7067  0995                     	;# 
  7068  0996                     	;# 
  7069  0997                     	;# 
  7070  0E0F                     	;# 
  7071  0E10                     	;# 
  7072  0E11                     	;# 
  7073  0E12                     	;# 
  7074  0E13                     	;# 
  7075  0E14                     	;# 
  7076  0E15                     	;# 
  7077  0E16                     	;# 
  7078  0E17                     	;# 
  7079  0E18                     	;# 
  7080  0E19                     	;# 
  7081  0E1A                     	;# 
  7082  0E1B                     	;# 
  7083  0E1C                     	;# 
  7084  0E1D                     	;# 
  7085  0E1E                     	;# 
  7086  0E1F                     	;# 
  7087  0E20                     	;# 
  7088  0E21                     	;# 
  7089  0E22                     	;# 
  7090  0E23                     	;# 
  7091  0E24                     	;# 
  7092  0E25                     	;# 
  7093  0E26                     	;# 
  7094  0E27                     	;# 
  7095  0E28                     	;# 
  7096  0E29                     	;# 
  7097  0E2A                     	;# 
  7098  0E2B                     	;# 
  7099  0E2C                     	;# 
  7100  0E2D                     	;# 
  7101  0E2E                     	;# 
  7102  0E2F                     	;# 
  7103  0E30                     	;# 
  7104  0E31                     	;# 
  7105  0E32                     	;# 
  7106  0E33                     	;# 
  7107  0E34                     	;# 
  7108  0E35                     	;# 
  7109  0E36                     	;# 
  7110  0E37                     	;# 
  7111  0E8F                     	;# 
  7112  0E90                     	;# 
  7113  0E91                     	;# 
  7114  0E92                     	;# 
  7115  0E93                     	;# 
  7116  0E94                     	;# 
  7117  0E95                     	;# 
  7118  0E96                     	;# 
  7119  0E97                     	;# 
  7120  0E9C                     	;# 
  7121  0E9D                     	;# 
  7122  0E9E                     	;# 
  7123  0EA1                     	;# 
  7124  0EA2                     	;# 
  7125  0EA3                     	;# 
  7126  0EA4                     	;# 
  7127  0EA5                     	;# 
  7128  0EA9                     	;# 
  7129  0EAA                     	;# 
  7130  0EAB                     	;# 
  7131  0EAC                     	;# 
  7132  0EB1                     	;# 
  7133  0EB2                     	;# 
  7134  0EB3                     	;# 
  7135  0EB8                     	;# 
  7136  0EB9                     	;# 
  7137  0EBA                     	;# 
  7138  0EBB                     	;# 
  7139  0EBC                     	;# 
  7140  0EBD                     	;# 
  7141  0EBE                     	;# 
  7142  0EC3                     	;# 
  7143  0EC5                     	;# 
  7144  0EC6                     	;# 
  7145  0EC7                     	;# 
  7146  0EC8                     	;# 
  7147  0EC9                     	;# 
  7148  0ECA                     	;# 
  7149  0ECB                     	;# 
  7150  0ECC                     	;# 
  7151  0F10                     	;# 
  7152  0F11                     	;# 
  7153  0F12                     	;# 
  7154  0F13                     	;# 
  7155  0F14                     	;# 
  7156  0F15                     	;# 
  7157  0F16                     	;# 
  7158  0F17                     	;# 
  7159  0F18                     	;# 
  7160  0F19                     	;# 
  7161  0F1A                     	;# 
  7162  0F1B                     	;# 
  7163  0F1C                     	;# 
  7164  0F1D                     	;# 
  7165  0F1E                     	;# 
  7166  0F1F                     	;# 
  7167  0F20                     	;# 
  7168  0F21                     	;# 
  7169  0F22                     	;# 
  7170  0F23                     	;# 
  7171  0F24                     	;# 
  7172  0F25                     	;# 
  7173  0F26                     	;# 
  7174  0F27                     	;# 
  7175  0F28                     	;# 
  7176  0F29                     	;# 
  7177  0F2A                     	;# 
  7178  0F2B                     	;# 
  7179  0F2C                     	;# 
  7180  0F2D                     	;# 
  7181  0F2E                     	;# 
  7182  0F2F                     	;# 
  7183  0F30                     	;# 
  7184  0F31                     	;# 
  7185  0F32                     	;# 
  7186  0F38                     	;# 
  7187  0F39                     	;# 
  7188  0F3A                     	;# 
  7189  0F3B                     	;# 
  7190  0F3C                     	;# 
  7191  0F3D                     	;# 
  7192  0F3E                     	;# 
  7193  0F3F                     	;# 
  7194  0F40                     	;# 
  7195  0F41                     	;# 
  7196  0F43                     	;# 
  7197  0F44                     	;# 
  7198  0F45                     	;# 
  7199  0F46                     	;# 
  7200  0F47                     	;# 
  7201  0F48                     	;# 
  7202  0F49                     	;# 
  7203  0F4A                     	;# 
  7204  0F4B                     	;# 
  7205  0F4C                     	;# 
  7206  0F4E                     	;# 
  7207  0F4F                     	;# 
  7208  0F50                     	;# 
  7209  0F51                     	;# 
  7210  0F52                     	;# 
  7211  0F53                     	;# 
  7212  0F54                     	;# 
  7213  0F55                     	;# 
  7214  0F56                     	;# 
  7215  0F57                     	;# 
  7216  0F59                     	;# 
  7217  0F5A                     	;# 
  7218  0F5B                     	;# 
  7219  0F5C                     	;# 
  7220  0F5D                     	;# 
  7221  0F61                     	;# 
  7222  0F62                     	;# 
  7223  0F64                     	;# 
  7224  0F65                     	;# 
  7225  0F66                     	;# 
  7226  0F67                     	;# 
  7227  0F68                     	;# 
  7228  0F69                     	;# 
  7229  0F6A                     	;# 
  7230  0F6B                     	;# 
  7231  0F6C                     	;# 
  7232  0F6D                     	;# 
  7233  0FE4                     	;# 
  7234  0FE5                     	;# 
  7235  0FE6                     	;# 
  7236  0FE7                     	;# 
  7237  0FE8                     	;# 
  7238  0FE9                     	;# 
  7239  0FEA                     	;# 
  7240  0FEB                     	;# 
  7241  0FED                     	;# 
  7242  0FEE                     	;# 
  7243  0FEF                     	;# 
  7244  0000                     	;# 
  7245  0001                     	;# 
  7246  0002                     	;# 
  7247  0003                     	;# 
  7248  0004                     	;# 
  7249  0005                     	;# 
  7250  0006                     	;# 
  7251  0007                     	;# 
  7252  0008                     	;# 
  7253  0009                     	;# 
  7254  000A                     	;# 
  7255  000B                     	;# 
  7256  000C                     	;# 
  7257  000D                     	;# 
  7258  000E                     	;# 
  7259  000F                     	;# 
  7260  0010                     	;# 
  7261  0011                     	;# 
  7262  0012                     	;# 
  7263  0013                     	;# 
  7264  0014                     	;# 
  7265  0015                     	;# 
  7266  0016                     	;# 
  7267  0017                     	;# 
  7268  0018                     	;# 
  7269  0019                     	;# 
  7270  001A                     	;# 
  7271  001C                     	;# 
  7272  001C                     	;# 
  7273  001D                     	;# 
  7274  001D                     	;# 
  7275  001E                     	;# 
  7276  001F                     	;# 
  7277  008C                     	;# 
  7278  008C                     	;# 
  7279  008D                     	;# 
  7280  008E                     	;# 
  7281  008E                     	;# 
  7282  008F                     	;# 
  7283  0090                     	;# 
  7284  0090                     	;# 
  7285  0091                     	;# 
  7286  0093                     	;# 
  7287  0094                     	;# 
  7288  0095                     	;# 
  7289  0096                     	;# 
  7290  0097                     	;# 
  7291  0098                     	;# 
  7292  0099                     	;# 
  7293  009A                     	;# 
  7294  009B                     	;# 
  7295  009C                     	;# 
  7296  009D                     	;# 
  7297  009E                     	;# 
  7298  010C                     	;# 
  7299  010D                     	;# 
  7300  010E                     	;# 
  7301  010E                     	;# 
  7302  010F                     	;# 
  7303  0110                     	;# 
  7304  0110                     	;# 
  7305  0111                     	;# 
  7306  0112                     	;# 
  7307  0112                     	;# 
  7308  0113                     	;# 
  7309  0114                     	;# 
  7310  0114                     	;# 
  7311  0115                     	;# 
  7312  0116                     	;# 
  7313  0116                     	;# 
  7314  0117                     	;# 
  7315  0119                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  011A                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011B                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011C                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011D                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011E                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011F                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  018C                     	;# 
  7341  018D                     	;# 
  7342  018E                     	;# 
  7343  018F                     	;# 
  7344  0190                     	;# 
  7345  0191                     	;# 
  7346  0192                     	;# 
  7347  0196                     	;# 
  7348  0197                     	;# 
  7349  0198                     	;# 
  7350  0199                     	;# 
  7351  019A                     	;# 
  7352  019B                     	;# 
  7353  019C                     	;# 
  7354  020C                     	;# 
  7355  020C                     	;# 
  7356  020D                     	;# 
  7357  020E                     	;# 
  7358  020F                     	;# 
  7359  020F                     	;# 
  7360  0210                     	;# 
  7361  0210                     	;# 
  7362  0211                     	;# 
  7363  0211                     	;# 
  7364  0212                     	;# 
  7365  0212                     	;# 
  7366  0213                     	;# 
  7367  0214                     	;# 
  7368  0215                     	;# 
  7369  0215                     	;# 
  7370  0216                     	;# 
  7371  0216                     	;# 
  7372  0217                     	;# 
  7373  0217                     	;# 
  7374  0218                     	;# 
  7375  0218                     	;# 
  7376  0219                     	;# 
  7377  021A                     	;# 
  7378  021B                     	;# 
  7379  021B                     	;# 
  7380  021C                     	;# 
  7381  021C                     	;# 
  7382  021D                     	;# 
  7383  021D                     	;# 
  7384  021E                     	;# 
  7385  021F                     	;# 
  7386  028C                     	;# 
  7387  028C                     	;# 
  7388  028D                     	;# 
  7389  028D                     	;# 
  7390  028E                     	;# 
  7391  028F                     	;# 
  7392  0290                     	;# 
  7393  0290                     	;# 
  7394  0291                     	;# 
  7395  0292                     	;# 
  7396  0292                     	;# 
  7397  0293                     	;# 
  7398  0293                     	;# 
  7399  0294                     	;# 
  7400  0295                     	;# 
  7401  0296                     	;# 
  7402  0296                     	;# 
  7403  0297                     	;# 
  7404  0298                     	;# 
  7405  0298                     	;# 
  7406  0299                     	;# 
  7407  0299                     	;# 
  7408  029A                     	;# 
  7409  029B                     	;# 
  7410  029C                     	;# 
  7411  029C                     	;# 
  7412  029D                     	;# 
  7413  030C                     	;# 
  7414  030C                     	;# 
  7415  030D                     	;# 
  7416  030E                     	;# 
  7417  030F                     	;# 
  7418  0310                     	;# 
  7419  0310                     	;# 
  7420  0311                     	;# 
  7421  0312                     	;# 
  7422  0313                     	;# 
  7423  0314                     	;# 
  7424  0314                     	;# 
  7425  0315                     	;# 
  7426  0316                     	;# 
  7427  0317                     	;# 
  7428  0318                     	;# 
  7429  0318                     	;# 
  7430  0319                     	;# 
  7431  031A                     	;# 
  7432  031B                     	;# 
  7433  031C                     	;# 
  7434  031C                     	;# 
  7435  031D                     	;# 
  7436  031E                     	;# 
  7437  031F                     	;# 
  7438  038C                     	;# 
  7439  038C                     	;# 
  7440  038D                     	;# 
  7441  038E                     	;# 
  7442  0390                     	;# 
  7443  0390                     	;# 
  7444  0391                     	;# 
  7445  0392                     	;# 
  7446  040C                     	;# 
  7447  040D                     	;# 
  7448  040E                     	;# 
  7449  040F                     	;# 
  7450  0410                     	;# 
  7451  0411                     	;# 
  7452  0416                     	;# 
  7453  0416                     	;# 
  7454  0417                     	;# 
  7455  0418                     	;# 
  7456  0418                     	;# 
  7457  0419                     	;# 
  7458  041A                     	;# 
  7459  041A                     	;# 
  7460  041B                     	;# 
  7461  041C                     	;# 
  7462  041C                     	;# 
  7463  041D                     	;# 
  7464  041E                     	;# 
  7465  041F                     	;# 
  7466  048C                     	;# 
  7467  048C                     	;# 
  7468  048D                     	;# 
  7469  048E                     	;# 
  7470  048F                     	;# 
  7471  048F                     	;# 
  7472  0490                     	;# 
  7473  0491                     	;# 
  7474  0492                     	;# 
  7475  0492                     	;# 
  7476  0493                     	;# 
  7477  0494                     	;# 
  7478  0495                     	;# 
  7479  0495                     	;# 
  7480  0496                     	;# 
  7481  0497                     	;# 
  7482  0498                     	;# 
  7483  0499                     	;# 
  7484  049A                     	;# 
  7485  049B                     	;# 
  7486  049C                     	;# 
  7487  049D                     	;# 
  7488  050C                     	;# 
  7489  050C                     	;# 
  7490  050D                     	;# 
  7491  050E                     	;# 
  7492  050F                     	;# 
  7493  050F                     	;# 
  7494  0510                     	;# 
  7495  0511                     	;# 
  7496  0512                     	;# 
  7497  0512                     	;# 
  7498  0513                     	;# 
  7499  0514                     	;# 
  7500  0515                     	;# 
  7501  0515                     	;# 
  7502  0516                     	;# 
  7503  0517                     	;# 
  7504  0518                     	;# 
  7505  0519                     	;# 
  7506  051A                     	;# 
  7507  051B                     	;# 
  7508  051C                     	;# 
  7509  051D                     	;# 
  7510  058C                     	;# 
  7511  058C                     	;# 
  7512  058D                     	;# 
  7513  058E                     	;# 
  7514  058F                     	;# 
  7515  058F                     	;# 
  7516  0590                     	;# 
  7517  0591                     	;# 
  7518  0592                     	;# 
  7519  0593                     	;# 
  7520  060C                     	;# 
  7521  060D                     	;# 
  7522  060E                     	;# 
  7523  060F                     	;# 
  7524  0610                     	;# 
  7525  0611                     	;# 
  7526  0612                     	;# 
  7527  0613                     	;# 
  7528  0614                     	;# 
  7529  0616                     	;# 
  7530  0617                     	;# 
  7531  0618                     	;# 
  7532  0619                     	;# 
  7533  061A                     	;# 
  7534  061B                     	;# 
  7535  061C                     	;# 
  7536  061D                     	;# 
  7537  061E                     	;# 
  7538  068C                     	;# 
  7539  068D                     	;# 
  7540  068E                     	;# 
  7541  068F                     	;# 
  7542  0690                     	;# 
  7543  0691                     	;# 
  7544  0692                     	;# 
  7545  0693                     	;# 
  7546  0694                     	;# 
  7547  070C                     	;# 
  7548  070D                     	;# 
  7549  070E                     	;# 
  7550  070F                     	;# 
  7551  0710                     	;# 
  7552  0711                     	;# 
  7553  0712                     	;# 
  7554  0713                     	;# 
  7555  0714                     	;# 
  7556  0716                     	;# 
  7557  0717                     	;# 
  7558  0718                     	;# 
  7559  0719                     	;# 
  7560  071A                     	;# 
  7561  071B                     	;# 
  7562  071C                     	;# 
  7563  071D                     	;# 
  7564  071E                     	;# 
  7565  0796                     	;# 
  7566  0797                     	;# 
  7567  0798                     	;# 
  7568  0799                     	;# 
  7569  079A                     	;# 
  7570  079B                     	;# 
  7571  080C                     	;# 
  7572  080D                     	;# 
  7573  080E                     	;# 
  7574  080F                     	;# 
  7575  0810                     	;# 
  7576  0811                     	;# 
  7577  0812                     	;# 
  7578  0813                     	;# 
  7579  0814                     	;# 
  7580  081A                     	;# 
  7581  081B                     	;# 
  7582  081C                     	;# 
  7583  081D                     	;# 
  7584  081E                     	;# 
  7585  081F                     	;# 
  7586  088C                     	;# 
  7587  088D                     	;# 
  7588  088E                     	;# 
  7589  088F                     	;# 
  7590  0890                     	;# 
  7591  0891                     	;# 
  7592  0892                     	;# 
  7593  0893                     	;# 
  7594  0895                     	;# 
  7595  0896                     	;# 
  7596  0897                     	;# 
  7597  0898                     	;# 
  7598  0899                     	;# 
  7599  089A                     	;# 
  7600  089B                     	;# 
  7601  090C                     	;# 
  7602  090E                     	;# 
  7603  090F                     	;# 
  7604  091F                     	;# 
  7605  091F                     	;# 
  7606  098F                     	;# 
  7607  098F                     	;# 
  7608  0990                     	;# 
  7609  0991                     	;# 
  7610  0992                     	;# 
  7611  0993                     	;# 
  7612  0994                     	;# 
  7613  0995                     	;# 
  7614  0996                     	;# 
  7615  0997                     	;# 
  7616  0E0F                     	;# 
  7617  0E10                     	;# 
  7618  0E11                     	;# 
  7619  0E12                     	;# 
  7620  0E13                     	;# 
  7621  0E14                     	;# 
  7622  0E15                     	;# 
  7623  0E16                     	;# 
  7624  0E17                     	;# 
  7625  0E18                     	;# 
  7626  0E19                     	;# 
  7627  0E1A                     	;# 
  7628  0E1B                     	;# 
  7629  0E1C                     	;# 
  7630  0E1D                     	;# 
  7631  0E1E                     	;# 
  7632  0E1F                     	;# 
  7633  0E20                     	;# 
  7634  0E21                     	;# 
  7635  0E22                     	;# 
  7636  0E23                     	;# 
  7637  0E24                     	;# 
  7638  0E25                     	;# 
  7639  0E26                     	;# 
  7640  0E27                     	;# 
  7641  0E28                     	;# 
  7642  0E29                     	;# 
  7643  0E2A                     	;# 
  7644  0E2B                     	;# 
  7645  0E2C                     	;# 
  7646  0E2D                     	;# 
  7647  0E2E                     	;# 
  7648  0E2F                     	;# 
  7649  0E30                     	;# 
  7650  0E31                     	;# 
  7651  0E32                     	;# 
  7652  0E33                     	;# 
  7653  0E34                     	;# 
  7654  0E35                     	;# 
  7655  0E36                     	;# 
  7656  0E37                     	;# 
  7657  0E8F                     	;# 
  7658  0E90                     	;# 
  7659  0E91                     	;# 
  7660  0E92                     	;# 
  7661  0E93                     	;# 
  7662  0E94                     	;# 
  7663  0E95                     	;# 
  7664  0E96                     	;# 
  7665  0E97                     	;# 
  7666  0E9C                     	;# 
  7667  0E9D                     	;# 
  7668  0E9E                     	;# 
  7669  0EA1                     	;# 
  7670  0EA2                     	;# 
  7671  0EA3                     	;# 
  7672  0EA4                     	;# 
  7673  0EA5                     	;# 
  7674  0EA9                     	;# 
  7675  0EAA                     	;# 
  7676  0EAB                     	;# 
  7677  0EAC                     	;# 
  7678  0EB1                     	;# 
  7679  0EB2                     	;# 
  7680  0EB3                     	;# 
  7681  0EB8                     	;# 
  7682  0EB9                     	;# 
  7683  0EBA                     	;# 
  7684  0EBB                     	;# 
  7685  0EBC                     	;# 
  7686  0EBD                     	;# 
  7687  0EBE                     	;# 
  7688  0EC3                     	;# 
  7689  0EC5                     	;# 
  7690  0EC6                     	;# 
  7691  0EC7                     	;# 
  7692  0EC8                     	;# 
  7693  0EC9                     	;# 
  7694  0ECA                     	;# 
  7695  0ECB                     	;# 
  7696  0ECC                     	;# 
  7697  0F10                     	;# 
  7698  0F11                     	;# 
  7699  0F12                     	;# 
  7700  0F13                     	;# 
  7701  0F14                     	;# 
  7702  0F15                     	;# 
  7703  0F16                     	;# 
  7704  0F17                     	;# 
  7705  0F18                     	;# 
  7706  0F19                     	;# 
  7707  0F1A                     	;# 
  7708  0F1B                     	;# 
  7709  0F1C                     	;# 
  7710  0F1D                     	;# 
  7711  0F1E                     	;# 
  7712  0F1F                     	;# 
  7713  0F20                     	;# 
  7714  0F21                     	;# 
  7715  0F22                     	;# 
  7716  0F23                     	;# 
  7717  0F24                     	;# 
  7718  0F25                     	;# 
  7719  0F26                     	;# 
  7720  0F27                     	;# 
  7721  0F28                     	;# 
  7722  0F29                     	;# 
  7723  0F2A                     	;# 
  7724  0F2B                     	;# 
  7725  0F2C                     	;# 
  7726  0F2D                     	;# 
  7727  0F2E                     	;# 
  7728  0F2F                     	;# 
  7729  0F30                     	;# 
  7730  0F31                     	;# 
  7731  0F32                     	;# 
  7732  0F38                     	;# 
  7733  0F39                     	;# 
  7734  0F3A                     	;# 
  7735  0F3B                     	;# 
  7736  0F3C                     	;# 
  7737  0F3D                     	;# 
  7738  0F3E                     	;# 
  7739  0F3F                     	;# 
  7740  0F40                     	;# 
  7741  0F41                     	;# 
  7742  0F43                     	;# 
  7743  0F44                     	;# 
  7744  0F45                     	;# 
  7745  0F46                     	;# 
  7746  0F47                     	;# 
  7747  0F48                     	;# 
  7748  0F49                     	;# 
  7749  0F4A                     	;# 
  7750  0F4B                     	;# 
  7751  0F4C                     	;# 
  7752  0F4E                     	;# 
  7753  0F4F                     	;# 
  7754  0F50                     	;# 
  7755  0F51                     	;# 
  7756  0F52                     	;# 
  7757  0F53                     	;# 
  7758  0F54                     	;# 
  7759  0F55                     	;# 
  7760  0F56                     	;# 
  7761  0F57                     	;# 
  7762  0F59                     	;# 
  7763  0F5A                     	;# 
  7764  0F5B                     	;# 
  7765  0F5C                     	;# 
  7766  0F5D                     	;# 
  7767  0F61                     	;# 
  7768  0F62                     	;# 
  7769  0F64                     	;# 
  7770  0F65                     	;# 
  7771  0F66                     	;# 
  7772  0F67                     	;# 
  7773  0F68                     	;# 
  7774  0F69                     	;# 
  7775  0F6A                     	;# 
  7776  0F6B                     	;# 
  7777  0F6C                     	;# 
  7778  0F6D                     	;# 
  7779  0FE4                     	;# 
  7780  0FE5                     	;# 
  7781  0FE6                     	;# 
  7782  0FE7                     	;# 
  7783  0FE8                     	;# 
  7784  0FE9                     	;# 
  7785  0FEA                     	;# 
  7786  0FEB                     	;# 
  7787  0FED                     	;# 
  7788  0FEE                     	;# 
  7789  0FEF                     	;# 
  7790  0000                     	;# 
  7791  0001                     	;# 
  7792  0002                     	;# 
  7793  0003                     	;# 
  7794  0004                     	;# 
  7795  0005                     	;# 
  7796  0006                     	;# 
  7797  0007                     	;# 
  7798  0008                     	;# 
  7799  0009                     	;# 
  7800  000A                     	;# 
  7801  000B                     	;# 
  7802  000C                     	;# 
  7803  000D                     	;# 
  7804  000E                     	;# 
  7805  000F                     	;# 
  7806  0010                     	;# 
  7807  0011                     	;# 
  7808  0012                     	;# 
  7809  0013                     	;# 
  7810  0014                     	;# 
  7811  0015                     	;# 
  7812  0016                     	;# 
  7813  0017                     	;# 
  7814  0018                     	;# 
  7815  0019                     	;# 
  7816  001A                     	;# 
  7817  001C                     	;# 
  7818  001C                     	;# 
  7819  001D                     	;# 
  7820  001D                     	;# 
  7821  001E                     	;# 
  7822  001F                     	;# 
  7823  008C                     	;# 
  7824  008C                     	;# 
  7825  008D                     	;# 
  7826  008E                     	;# 
  7827  008E                     	;# 
  7828  008F                     	;# 
  7829  0090                     	;# 
  7830  0090                     	;# 
  7831  0091                     	;# 
  7832  0093                     	;# 
  7833  0094                     	;# 
  7834  0095                     	;# 
  7835  0096                     	;# 
  7836  0097                     	;# 
  7837  0098                     	;# 
  7838  0099                     	;# 
  7839  009A                     	;# 
  7840  009B                     	;# 
  7841  009C                     	;# 
  7842  009D                     	;# 
  7843  009E                     	;# 
  7844  010C                     	;# 
  7845  010D                     	;# 
  7846  010E                     	;# 
  7847  010E                     	;# 
  7848  010F                     	;# 
  7849  0110                     	;# 
  7850  0110                     	;# 
  7851  0111                     	;# 
  7852  0112                     	;# 
  7853  0112                     	;# 
  7854  0113                     	;# 
  7855  0114                     	;# 
  7856  0114                     	;# 
  7857  0115                     	;# 
  7858  0116                     	;# 
  7859  0116                     	;# 
  7860  0117                     	;# 
  7861  0119                     	;# 
  7862  0119                     	;# 
  7863  0119                     	;# 
  7864  011A                     	;# 
  7865  011A                     	;# 
  7866  011A                     	;# 
  7867  011B                     	;# 
  7868  011B                     	;# 
  7869  011B                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011C                     	;# 
  7873  011C                     	;# 
  7874  011C                     	;# 
  7875  011D                     	;# 
  7876  011D                     	;# 
  7877  011D                     	;# 
  7878  011E                     	;# 
  7879  011E                     	;# 
  7880  011E                     	;# 
  7881  011F                     	;# 
  7882  011F                     	;# 
  7883  011F                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  018C                     	;# 
  7887  018D                     	;# 
  7888  018E                     	;# 
  7889  018F                     	;# 
  7890  0190                     	;# 
  7891  0191                     	;# 
  7892  0192                     	;# 
  7893  0196                     	;# 
  7894  0197                     	;# 
  7895  0198                     	;# 
  7896  0199                     	;# 
  7897  019A                     	;# 
  7898  019B                     	;# 
  7899  019C                     	;# 
  7900  020C                     	;# 
  7901  020C                     	;# 
  7902  020D                     	;# 
  7903  020E                     	;# 
  7904  020F                     	;# 
  7905  020F                     	;# 
  7906  0210                     	;# 
  7907  0210                     	;# 
  7908  0211                     	;# 
  7909  0211                     	;# 
  7910  0212                     	;# 
  7911  0212                     	;# 
  7912  0213                     	;# 
  7913  0214                     	;# 
  7914  0215                     	;# 
  7915  0215                     	;# 
  7916  0216                     	;# 
  7917  0216                     	;# 
  7918  0217                     	;# 
  7919  0217                     	;# 
  7920  0218                     	;# 
  7921  0218                     	;# 
  7922  0219                     	;# 
  7923  021A                     	;# 
  7924  021B                     	;# 
  7925  021B                     	;# 
  7926  021C                     	;# 
  7927  021C                     	;# 
  7928  021D                     	;# 
  7929  021D                     	;# 
  7930  021E                     	;# 
  7931  021F                     	;# 
  7932  028C                     	;# 
  7933  028C                     	;# 
  7934  028D                     	;# 
  7935  028D                     	;# 
  7936  028E                     	;# 
  7937  028F                     	;# 
  7938  0290                     	;# 
  7939  0290                     	;# 
  7940  0291                     	;# 
  7941  0292                     	;# 
  7942  0292                     	;# 
  7943  0293                     	;# 
  7944  0293                     	;# 
  7945  0294                     	;# 
  7946  0295                     	;# 
  7947  0296                     	;# 
  7948  0296                     	;# 
  7949  0297                     	;# 
  7950  0298                     	;# 
  7951  0298                     	;# 
  7952  0299                     	;# 
  7953  0299                     	;# 
  7954  029A                     	;# 
  7955  029B                     	;# 
  7956  029C                     	;# 
  7957  029C                     	;# 
  7958  029D                     	;# 
  7959  030C                     	;# 
  7960  030C                     	;# 
  7961  030D                     	;# 
  7962  030E                     	;# 
  7963  030F                     	;# 
  7964  0310                     	;# 
  7965  0310                     	;# 
  7966  0311                     	;# 
  7967  0312                     	;# 
  7968  0313                     	;# 
  7969  0314                     	;# 
  7970  0314                     	;# 
  7971  0315                     	;# 
  7972  0316                     	;# 
  7973  0317                     	;# 
  7974  0318                     	;# 
  7975  0318                     	;# 
  7976  0319                     	;# 
  7977  031A                     	;# 
  7978  031B                     	;# 
  7979  031C                     	;# 
  7980  031C                     	;# 
  7981  031D                     	;# 
  7982  031E                     	;# 
  7983  031F                     	;# 
  7984  038C                     	;# 
  7985  038C                     	;# 
  7986  038D                     	;# 
  7987  038E                     	;# 
  7988  0390                     	;# 
  7989  0390                     	;# 
  7990  0391                     	;# 
  7991  0392                     	;# 
  7992  040C                     	;# 
  7993  040D                     	;# 
  7994  040E                     	;# 
  7995  040F                     	;# 
  7996  0410                     	;# 
  7997  0411                     	;# 
  7998  0416                     	;# 
  7999  0416                     	;# 
  8000  0417                     	;# 
  8001  0418                     	;# 
  8002  0418                     	;# 
  8003  0419                     	;# 
  8004  041A                     	;# 
  8005  041A                     	;# 
  8006  041B                     	;# 
  8007  041C                     	;# 
  8008  041C                     	;# 
  8009  041D                     	;# 
  8010  041E                     	;# 
  8011  041F                     	;# 
  8012  048C                     	;# 
  8013  048C                     	;# 
  8014  048D                     	;# 
  8015  048E                     	;# 
  8016  048F                     	;# 
  8017  048F                     	;# 
  8018  0490                     	;# 
  8019  0491                     	;# 
  8020  0492                     	;# 
  8021  0492                     	;# 
  8022  0493                     	;# 
  8023  0494                     	;# 
  8024  0495                     	;# 
  8025  0495                     	;# 
  8026  0496                     	;# 
  8027  0497                     	;# 
  8028  0498                     	;# 
  8029  0499                     	;# 
  8030  049A                     	;# 
  8031  049B                     	;# 
  8032  049C                     	;# 
  8033  049D                     	;# 
  8034  050C                     	;# 
  8035  050C                     	;# 
  8036  050D                     	;# 
  8037  050E                     	;# 
  8038  050F                     	;# 
  8039  050F                     	;# 
  8040  0510                     	;# 
  8041  0511                     	;# 
  8042  0512                     	;# 
  8043  0512                     	;# 
  8044  0513                     	;# 
  8045  0514                     	;# 
  8046  0515                     	;# 
  8047  0515                     	;# 
  8048  0516                     	;# 
  8049  0517                     	;# 
  8050  0518                     	;# 
  8051  0519                     	;# 
  8052  051A                     	;# 
  8053  051B                     	;# 
  8054  051C                     	;# 
  8055  051D                     	;# 
  8056  058C                     	;# 
  8057  058C                     	;# 
  8058  058D                     	;# 
  8059  058E                     	;# 
  8060  058F                     	;# 
  8061  058F                     	;# 
  8062  0590                     	;# 
  8063  0591                     	;# 
  8064  0592                     	;# 
  8065  0593                     	;# 
  8066  060C                     	;# 
  8067  060D                     	;# 
  8068  060E                     	;# 
  8069  060F                     	;# 
  8070  0610                     	;# 
  8071  0611                     	;# 
  8072  0612                     	;# 
  8073  0613                     	;# 
  8074  0614                     	;# 
  8075  0616                     	;# 
  8076  0617                     	;# 
  8077  0618                     	;# 
  8078  0619                     	;# 
  8079  061A                     	;# 
  8080  061B                     	;# 
  8081  061C                     	;# 
  8082  061D                     	;# 
  8083  061E                     	;# 
  8084  068C                     	;# 
  8085  068D                     	;# 
  8086  068E                     	;# 
  8087  068F                     	;# 
  8088  0690                     	;# 
  8089  0691                     	;# 
  8090  0692                     	;# 
  8091  0693                     	;# 
  8092  0694                     	;# 
  8093  070C                     	;# 
  8094  070D                     	;# 
  8095  070E                     	;# 
  8096  070F                     	;# 
  8097  0710                     	;# 
  8098  0711                     	;# 
  8099  0712                     	;# 
  8100  0713                     	;# 
  8101  0714                     	;# 
  8102  0716                     	;# 
  8103  0717                     	;# 
  8104  0718                     	;# 
  8105  0719                     	;# 
  8106  071A                     	;# 
  8107  071B                     	;# 
  8108  071C                     	;# 
  8109  071D                     	;# 
  8110  071E                     	;# 
  8111  0796                     	;# 
  8112  0797                     	;# 
  8113  0798                     	;# 
  8114  0799                     	;# 
  8115  079A                     	;# 
  8116  079B                     	;# 
  8117  080C                     	;# 
  8118  080D                     	;# 
  8119  080E                     	;# 
  8120  080F                     	;# 
  8121  0810                     	;# 
  8122  0811                     	;# 
  8123  0812                     	;# 
  8124  0813                     	;# 
  8125  0814                     	;# 
  8126  081A                     	;# 
  8127  081B                     	;# 
  8128  081C                     	;# 
  8129  081D                     	;# 
  8130  081E                     	;# 
  8131  081F                     	;# 
  8132  088C                     	;# 
  8133  088D                     	;# 
  8134  088E                     	;# 
  8135  088F                     	;# 
  8136  0890                     	;# 
  8137  0891                     	;# 
  8138  0892                     	;# 
  8139  0893                     	;# 
  8140  0895                     	;# 
  8141  0896                     	;# 
  8142  0897                     	;# 
  8143  0898                     	;# 
  8144  0899                     	;# 
  8145  089A                     	;# 
  8146  089B                     	;# 
  8147  090C                     	;# 
  8148  090E                     	;# 
  8149  090F                     	;# 
  8150  091F                     	;# 
  8151  091F                     	;# 
  8152  098F                     	;# 
  8153  098F                     	;# 
  8154  0990                     	;# 
  8155  0991                     	;# 
  8156  0992                     	;# 
  8157  0993                     	;# 
  8158  0994                     	;# 
  8159  0995                     	;# 
  8160  0996                     	;# 
  8161  0997                     	;# 
  8162  0E0F                     	;# 
  8163  0E10                     	;# 
  8164  0E11                     	;# 
  8165  0E12                     	;# 
  8166  0E13                     	;# 
  8167  0E14                     	;# 
  8168  0E15                     	;# 
  8169  0E16                     	;# 
  8170  0E17                     	;# 
  8171  0E18                     	;# 
  8172  0E19                     	;# 
  8173  0E1A                     	;# 
  8174  0E1B                     	;# 
  8175  0E1C                     	;# 
  8176  0E1D                     	;# 
  8177  0E1E                     	;# 
  8178  0E1F                     	;# 
  8179  0E20                     	;# 
  8180  0E21                     	;# 
  8181  0E22                     	;# 
  8182  0E23                     	;# 
  8183  0E24                     	;# 
  8184  0E25                     	;# 
  8185  0E26                     	;# 
  8186  0E27                     	;# 
  8187  0E28                     	;# 
  8188  0E29                     	;# 
  8189  0E2A                     	;# 
  8190  0E2B                     	;# 
  8191  0E2C                     	;# 
  8192  0E2D                     	;# 
  8193  0E2E                     	;# 
  8194  0E2F                     	;# 
  8195  0E30                     	;# 
  8196  0E31                     	;# 
  8197  0E32                     	;# 
  8198  0E33                     	;# 
  8199  0E34                     	;# 
  8200  0E35                     	;# 
  8201  0E36                     	;# 
  8202  0E37                     	;# 
  8203  0E8F                     	;# 
  8204  0E90                     	;# 
  8205  0E91                     	;# 
  8206  0E92                     	;# 
  8207  0E93                     	;# 
  8208  0E94                     	;# 
  8209  0E95                     	;# 
  8210  0E96                     	;# 
  8211  0E97                     	;# 
  8212  0E9C                     	;# 
  8213  0E9D                     	;# 
  8214  0E9E                     	;# 
  8215  0EA1                     	;# 
  8216  0EA2                     	;# 
  8217  0EA3                     	;# 
  8218  0EA4                     	;# 
  8219  0EA5                     	;# 
  8220  0EA9                     	;# 
  8221  0EAA                     	;# 
  8222  0EAB                     	;# 
  8223  0EAC                     	;# 
  8224  0EB1                     	;# 
  8225  0EB2                     	;# 
  8226  0EB3                     	;# 
  8227  0EB8                     	;# 
  8228  0EB9                     	;# 
  8229  0EBA                     	;# 
  8230  0EBB                     	;# 
  8231  0EBC                     	;# 
  8232  0EBD                     	;# 
  8233  0EBE                     	;# 
  8234  0EC3                     	;# 
  8235  0EC5                     	;# 
  8236  0EC6                     	;# 
  8237  0EC7                     	;# 
  8238  0EC8                     	;# 
  8239  0EC9                     	;# 
  8240  0ECA                     	;# 
  8241  0ECB                     	;# 
  8242  0ECC                     	;# 
  8243  0F10                     	;# 
  8244  0F11                     	;# 
  8245  0F12                     	;# 
  8246  0F13                     	;# 
  8247  0F14                     	;# 
  8248  0F15                     	;# 
  8249  0F16                     	;# 
  8250  0F17                     	;# 
  8251  0F18                     	;# 
  8252  0F19                     	;# 
  8253  0F1A                     	;# 
  8254  0F1B                     	;# 
  8255  0F1C                     	;# 
  8256  0F1D                     	;# 
  8257  0F1E                     	;# 
  8258  0F1F                     	;# 
  8259  0F20                     	;# 
  8260  0F21                     	;# 
  8261  0F22                     	;# 
  8262  0F23                     	;# 
  8263  0F24                     	;# 
  8264  0F25                     	;# 
  8265  0F26                     	;# 
  8266  0F27                     	;# 
  8267  0F28                     	;# 
  8268  0F29                     	;# 
  8269  0F2A                     	;# 
  8270  0F2B                     	;# 
  8271  0F2C                     	;# 
  8272  0F2D                     	;# 
  8273  0F2E                     	;# 
  8274  0F2F                     	;# 
  8275  0F30                     	;# 
  8276  0F31                     	;# 
  8277  0F32                     	;# 
  8278  0F38                     	;# 
  8279  0F39                     	;# 
  8280  0F3A                     	;# 
  8281  0F3B                     	;# 
  8282  0F3C                     	;# 
  8283  0F3D                     	;# 
  8284  0F3E                     	;# 
  8285  0F3F                     	;# 
  8286  0F40                     	;# 
  8287  0F41                     	;# 
  8288  0F43                     	;# 
  8289  0F44                     	;# 
  8290  0F45                     	;# 
  8291  0F46                     	;# 
  8292  0F47                     	;# 
  8293  0F48                     	;# 
  8294  0F49                     	;# 
  8295  0F4A                     	;# 
  8296  0F4B                     	;# 
  8297  0F4C                     	;# 
  8298  0F4E                     	;# 
  8299  0F4F                     	;# 
  8300  0F50                     	;# 
  8301  0F51                     	;# 
  8302  0F52                     	;# 
  8303  0F53                     	;# 
  8304  0F54                     	;# 
  8305  0F55                     	;# 
  8306  0F56                     	;# 
  8307  0F57                     	;# 
  8308  0F59                     	;# 
  8309  0F5A                     	;# 
  8310  0F5B                     	;# 
  8311  0F5C                     	;# 
  8312  0F5D                     	;# 
  8313  0F61                     	;# 
  8314  0F62                     	;# 
  8315  0F64                     	;# 
  8316  0F65                     	;# 
  8317  0F66                     	;# 
  8318  0F67                     	;# 
  8319  0F68                     	;# 
  8320  0F69                     	;# 
  8321  0F6A                     	;# 
  8322  0F6B                     	;# 
  8323  0F6C                     	;# 
  8324  0F6D                     	;# 
  8325  0FE4                     	;# 
  8326  0FE5                     	;# 
  8327  0FE6                     	;# 
  8328  0FE7                     	;# 
  8329  0FE8                     	;# 
  8330  0FE9                     	;# 
  8331  0FEA                     	;# 
  8332  0FEB                     	;# 
  8333  0FED                     	;# 
  8334  0FEE                     	;# 
  8335  0FEF                     	;# 
  8336  0000                     	;# 
  8337  0001                     	;# 
  8338  0002                     	;# 
  8339  0003                     	;# 
  8340  0004                     	;# 
  8341  0005                     	;# 
  8342  0006                     	;# 
  8343  0007                     	;# 
  8344  0008                     	;# 
  8345  0009                     	;# 
  8346  000A                     	;# 
  8347  000B                     	;# 
  8348  000C                     	;# 
  8349  000D                     	;# 
  8350  000E                     	;# 
  8351  000F                     	;# 
  8352  0010                     	;# 
  8353  0011                     	;# 
  8354  0012                     	;# 
  8355  0013                     	;# 
  8356  0014                     	;# 
  8357  0015                     	;# 
  8358  0016                     	;# 
  8359  0017                     	;# 
  8360  0018                     	;# 
  8361  0019                     	;# 
  8362  001A                     	;# 
  8363  001C                     	;# 
  8364  001C                     	;# 
  8365  001D                     	;# 
  8366  001D                     	;# 
  8367  001E                     	;# 
  8368  001F                     	;# 
  8369  008C                     	;# 
  8370  008C                     	;# 
  8371  008D                     	;# 
  8372  008E                     	;# 
  8373  008E                     	;# 
  8374  008F                     	;# 
  8375  0090                     	;# 
  8376  0090                     	;# 
  8377  0091                     	;# 
  8378  0093                     	;# 
  8379  0094                     	;# 
  8380  0095                     	;# 
  8381  0096                     	;# 
  8382  0097                     	;# 
  8383  0098                     	;# 
  8384  0099                     	;# 
  8385  009A                     	;# 
  8386  009B                     	;# 
  8387  009C                     	;# 
  8388  009D                     	;# 
  8389  009E                     	;# 
  8390  010C                     	;# 
  8391  010D                     	;# 
  8392  010E                     	;# 
  8393  010E                     	;# 
  8394  010F                     	;# 
  8395  0110                     	;# 
  8396  0110                     	;# 
  8397  0111                     	;# 
  8398  0112                     	;# 
  8399  0112                     	;# 
  8400  0113                     	;# 
  8401  0114                     	;# 
  8402  0114                     	;# 
  8403  0115                     	;# 
  8404  0116                     	;# 
  8405  0116                     	;# 
  8406  0117                     	;# 
  8407  0119                     	;# 
  8408  0119                     	;# 
  8409  0119                     	;# 
  8410  011A                     	;# 
  8411  011A                     	;# 
  8412  011A                     	;# 
  8413  011B                     	;# 
  8414  011B                     	;# 
  8415  011B                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011C                     	;# 
  8419  011C                     	;# 
  8420  011C                     	;# 
  8421  011D                     	;# 
  8422  011D                     	;# 
  8423  011D                     	;# 
  8424  011E                     	;# 
  8425  011E                     	;# 
  8426  011E                     	;# 
  8427  011F                     	;# 
  8428  011F                     	;# 
  8429  011F                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  018C                     	;# 
  8433  018D                     	;# 
  8434  018E                     	;# 
  8435  018F                     	;# 
  8436  0190                     	;# 
  8437  0191                     	;# 
  8438  0192                     	;# 
  8439  0196                     	;# 
  8440  0197                     	;# 
  8441  0198                     	;# 
  8442  0199                     	;# 
  8443  019A                     	;# 
  8444  019B                     	;# 
  8445  019C                     	;# 
  8446  020C                     	;# 
  8447  020C                     	;# 
  8448  020D                     	;# 
  8449  020E                     	;# 
  8450  020F                     	;# 
  8451  020F                     	;# 
  8452  0210                     	;# 
  8453  0210                     	;# 
  8454  0211                     	;# 
  8455  0211                     	;# 
  8456  0212                     	;# 
  8457  0212                     	;# 
  8458  0213                     	;# 
  8459  0214                     	;# 
  8460  0215                     	;# 
  8461  0215                     	;# 
  8462  0216                     	;# 
  8463  0216                     	;# 
  8464  0217                     	;# 
  8465  0217                     	;# 
  8466  0218                     	;# 
  8467  0218                     	;# 
  8468  0219                     	;# 
  8469  021A                     	;# 
  8470  021B                     	;# 
  8471  021B                     	;# 
  8472  021C                     	;# 
  8473  021C                     	;# 
  8474  021D                     	;# 
  8475  021D                     	;# 
  8476  021E                     	;# 
  8477  021F                     	;# 
  8478  028C                     	;# 
  8479  028C                     	;# 
  8480  028D                     	;# 
  8481  028D                     	;# 
  8482  028E                     	;# 
  8483  028F                     	;# 
  8484  0290                     	;# 
  8485  0290                     	;# 
  8486  0291                     	;# 
  8487  0292                     	;# 
  8488  0292                     	;# 
  8489  0293                     	;# 
  8490  0293                     	;# 
  8491  0294                     	;# 
  8492  0295                     	;# 
  8493  0296                     	;# 
  8494  0296                     	;# 
  8495  0297                     	;# 
  8496  0298                     	;# 
  8497  0298                     	;# 
  8498  0299                     	;# 
  8499  0299                     	;# 
  8500  029A                     	;# 
  8501  029B                     	;# 
  8502  029C                     	;# 
  8503  029C                     	;# 
  8504  029D                     	;# 
  8505  030C                     	;# 
  8506  030C                     	;# 
  8507  030D                     	;# 
  8508  030E                     	;# 
  8509  030F                     	;# 
  8510  0310                     	;# 
  8511  0310                     	;# 
  8512  0311                     	;# 
  8513  0312                     	;# 
  8514  0313                     	;# 
  8515  0314                     	;# 
  8516  0314                     	;# 
  8517  0315                     	;# 
  8518  0316                     	;# 
  8519  0317                     	;# 
  8520  0318                     	;# 
  8521  0318                     	;# 
  8522  0319                     	;# 
  8523  031A                     	;# 
  8524  031B                     	;# 
  8525  031C                     	;# 
  8526  031C                     	;# 
  8527  031D                     	;# 
  8528  031E                     	;# 
  8529  031F                     	;# 
  8530  038C                     	;# 
  8531  038C                     	;# 
  8532  038D                     	;# 
  8533  038E                     	;# 
  8534  0390                     	;# 
  8535  0390                     	;# 
  8536  0391                     	;# 
  8537  0392                     	;# 
  8538  040C                     	;# 
  8539  040D                     	;# 
  8540  040E                     	;# 
  8541  040F                     	;# 
  8542  0410                     	;# 
  8543  0411                     	;# 
  8544  0416                     	;# 
  8545  0416                     	;# 
  8546  0417                     	;# 
  8547  0418                     	;# 
  8548  0418                     	;# 
  8549  0419                     	;# 
  8550  041A                     	;# 
  8551  041A                     	;# 
  8552  041B                     	;# 
  8553  041C                     	;# 
  8554  041C                     	;# 
  8555  041D                     	;# 
  8556  041E                     	;# 
  8557  041F                     	;# 
  8558  048C                     	;# 
  8559  048C                     	;# 
  8560  048D                     	;# 
  8561  048E                     	;# 
  8562  048F                     	;# 
  8563  048F                     	;# 
  8564  0490                     	;# 
  8565  0491                     	;# 
  8566  0492                     	;# 
  8567  0492                     	;# 
  8568  0493                     	;# 
  8569  0494                     	;# 
  8570  0495                     	;# 
  8571  0495                     	;# 
  8572  0496                     	;# 
  8573  0497                     	;# 
  8574  0498                     	;# 
  8575  0499                     	;# 
  8576  049A                     	;# 
  8577  049B                     	;# 
  8578  049C                     	;# 
  8579  049D                     	;# 
  8580  050C                     	;# 
  8581  050C                     	;# 
  8582  050D                     	;# 
  8583  050E                     	;# 
  8584  050F                     	;# 
  8585  050F                     	;# 
  8586  0510                     	;# 
  8587  0511                     	;# 
  8588  0512                     	;# 
  8589  0512                     	;# 
  8590  0513                     	;# 
  8591  0514                     	;# 
  8592  0515                     	;# 
  8593  0515                     	;# 
  8594  0516                     	;# 
  8595  0517                     	;# 
  8596  0518                     	;# 
  8597  0519                     	;# 
  8598  051A                     	;# 
  8599  051B                     	;# 
  8600  051C                     	;# 
  8601  051D                     	;# 
  8602  058C                     	;# 
  8603  058C                     	;# 
  8604  058D                     	;# 
  8605  058E                     	;# 
  8606  058F                     	;# 
  8607  058F                     	;# 
  8608  0590                     	;# 
  8609  0591                     	;# 
  8610  0592                     	;# 
  8611  0593                     	;# 
  8612  060C                     	;# 
  8613  060D                     	;# 
  8614  060E                     	;# 
  8615  060F                     	;# 
  8616  0610                     	;# 
  8617  0611                     	;# 
  8618  0612                     	;# 
  8619  0613                     	;# 
  8620  0614                     	;# 
  8621  0616                     	;# 
  8622  0617                     	;# 
  8623  0618                     	;# 
  8624  0619                     	;# 
  8625  061A                     	;# 
  8626  061B                     	;# 
  8627  061C                     	;# 
  8628  061D                     	;# 
  8629  061E                     	;# 
  8630  068C                     	;# 
  8631  068D                     	;# 
  8632  068E                     	;# 
  8633  068F                     	;# 
  8634  0690                     	;# 
  8635  0691                     	;# 
  8636  0692                     	;# 
  8637  0693                     	;# 
  8638  0694                     	;# 
  8639  070C                     	;# 
  8640  070D                     	;# 
  8641  070E                     	;# 
  8642  070F                     	;# 
  8643  0710                     	;# 
  8644  0711                     	;# 
  8645  0712                     	;# 
  8646  0713                     	;# 
  8647  0714                     	;# 
  8648  0716                     	;# 
  8649  0717                     	;# 
  8650  0718                     	;# 
  8651  0719                     	;# 
  8652  071A                     	;# 
  8653  071B                     	;# 
  8654  071C                     	;# 
  8655  071D                     	;# 
  8656  071E                     	;# 
  8657  0796                     	;# 
  8658  0797                     	;# 
  8659  0798                     	;# 
  8660  0799                     	;# 
  8661  079A                     	;# 
  8662  079B                     	;# 
  8663  080C                     	;# 
  8664  080D                     	;# 
  8665  080E                     	;# 
  8666  080F                     	;# 
  8667  0810                     	;# 
  8668  0811                     	;# 
  8669  0812                     	;# 
  8670  0813                     	;# 
  8671  0814                     	;# 
  8672  081A                     	;# 
  8673  081B                     	;# 
  8674  081C                     	;# 
  8675  081D                     	;# 
  8676  081E                     	;# 
  8677  081F                     	;# 
  8678  088C                     	;# 
  8679  088D                     	;# 
  8680  088E                     	;# 
  8681  088F                     	;# 
  8682  0890                     	;# 
  8683  0891                     	;# 
  8684  0892                     	;# 
  8685  0893                     	;# 
  8686  0895                     	;# 
  8687  0896                     	;# 
  8688  0897                     	;# 
  8689  0898                     	;# 
  8690  0899                     	;# 
  8691  089A                     	;# 
  8692  089B                     	;# 
  8693  090C                     	;# 
  8694  090E                     	;# 
  8695  090F                     	;# 
  8696  091F                     	;# 
  8697  091F                     	;# 
  8698  098F                     	;# 
  8699  098F                     	;# 
  8700  0990                     	;# 
  8701  0991                     	;# 
  8702  0992                     	;# 
  8703  0993                     	;# 
  8704  0994                     	;# 
  8705  0995                     	;# 
  8706  0996                     	;# 
  8707  0997                     	;# 
  8708  0E0F                     	;# 
  8709  0E10                     	;# 
  8710  0E11                     	;# 
  8711  0E12                     	;# 
  8712  0E13                     	;# 
  8713  0E14                     	;# 
  8714  0E15                     	;# 
  8715  0E16                     	;# 
  8716  0E17                     	;# 
  8717  0E18                     	;# 
  8718  0E19                     	;# 
  8719  0E1A                     	;# 
  8720  0E1B                     	;# 
  8721  0E1C                     	;# 
  8722  0E1D                     	;# 
  8723  0E1E                     	;# 
  8724  0E1F                     	;# 
  8725  0E20                     	;# 
  8726  0E21                     	;# 
  8727  0E22                     	;# 
  8728  0E23                     	;# 
  8729  0E24                     	;# 
  8730  0E25                     	;# 
  8731  0E26                     	;# 
  8732  0E27                     	;# 
  8733  0E28                     	;# 
  8734  0E29                     	;# 
  8735  0E2A                     	;# 
  8736  0E2B                     	;# 
  8737  0E2C                     	;# 
  8738  0E2D                     	;# 
  8739  0E2E                     	;# 
  8740  0E2F                     	;# 
  8741  0E30                     	;# 
  8742  0E31                     	;# 
  8743  0E32                     	;# 
  8744  0E33                     	;# 
  8745  0E34                     	;# 
  8746  0E35                     	;# 
  8747  0E36                     	;# 
  8748  0E37                     	;# 
  8749  0E8F                     	;# 
  8750  0E90                     	;# 
  8751  0E91                     	;# 
  8752  0E92                     	;# 
  8753  0E93                     	;# 
  8754  0E94                     	;# 
  8755  0E95                     	;# 
  8756  0E96                     	;# 
  8757  0E97                     	;# 
  8758  0E9C                     	;# 
  8759  0E9D                     	;# 
  8760  0E9E                     	;# 
  8761  0EA1                     	;# 
  8762  0EA2                     	;# 
  8763  0EA3                     	;# 
  8764  0EA4                     	;# 
  8765  0EA5                     	;# 
  8766  0EA9                     	;# 
  8767  0EAA                     	;# 
  8768  0EAB                     	;# 
  8769  0EAC                     	;# 
  8770  0EB1                     	;# 
  8771  0EB2                     	;# 
  8772  0EB3                     	;# 
  8773  0EB8                     	;# 
  8774  0EB9                     	;# 
  8775  0EBA                     	;# 
  8776  0EBB                     	;# 
  8777  0EBC                     	;# 
  8778  0EBD                     	;# 
  8779  0EBE                     	;# 
  8780  0EC3                     	;# 
  8781  0EC5                     	;# 
  8782  0EC6                     	;# 
  8783  0EC7                     	;# 
  8784  0EC8                     	;# 
  8785  0EC9                     	;# 
  8786  0ECA                     	;# 
  8787  0ECB                     	;# 
  8788  0ECC                     	;# 
  8789  0F10                     	;# 
  8790  0F11                     	;# 
  8791  0F12                     	;# 
  8792  0F13                     	;# 
  8793  0F14                     	;# 
  8794  0F15                     	;# 
  8795  0F16                     	;# 
  8796  0F17                     	;# 
  8797  0F18                     	;# 
  8798  0F19                     	;# 
  8799  0F1A                     	;# 
  8800  0F1B                     	;# 
  8801  0F1C                     	;# 
  8802  0F1D                     	;# 
  8803  0F1E                     	;# 
  8804  0F1F                     	;# 
  8805  0F20                     	;# 
  8806  0F21                     	;# 
  8807  0F22                     	;# 
  8808  0F23                     	;# 
  8809  0F24                     	;# 
  8810  0F25                     	;# 
  8811  0F26                     	;# 
  8812  0F27                     	;# 
  8813  0F28                     	;# 
  8814  0F29                     	;# 
  8815  0F2A                     	;# 
  8816  0F2B                     	;# 
  8817  0F2C                     	;# 
  8818  0F2D                     	;# 
  8819  0F2E                     	;# 
  8820  0F2F                     	;# 
  8821  0F30                     	;# 
  8822  0F31                     	;# 
  8823  0F32                     	;# 
  8824  0F38                     	;# 
  8825  0F39                     	;# 
  8826  0F3A                     	;# 
  8827  0F3B                     	;# 
  8828  0F3C                     	;# 
  8829  0F3D                     	;# 
  8830  0F3E                     	;# 
  8831  0F3F                     	;# 
  8832  0F40                     	;# 
  8833  0F41                     	;# 
  8834  0F43                     	;# 
  8835  0F44                     	;# 
  8836  0F45                     	;# 
  8837  0F46                     	;# 
  8838  0F47                     	;# 
  8839  0F48                     	;# 
  8840  0F49                     	;# 
  8841  0F4A                     	;# 
  8842  0F4B                     	;# 
  8843  0F4C                     	;# 
  8844  0F4E                     	;# 
  8845  0F4F                     	;# 
  8846  0F50                     	;# 
  8847  0F51                     	;# 
  8848  0F52                     	;# 
  8849  0F53                     	;# 
  8850  0F54                     	;# 
  8851  0F55                     	;# 
  8852  0F56                     	;# 
  8853  0F57                     	;# 
  8854  0F59                     	;# 
  8855  0F5A                     	;# 
  8856  0F5B                     	;# 
  8857  0F5C                     	;# 
  8858  0F5D                     	;# 
  8859  0F61                     	;# 
  8860  0F62                     	;# 
  8861  0F64                     	;# 
  8862  0F65                     	;# 
  8863  0F66                     	;# 
  8864  0F67                     	;# 
  8865  0F68                     	;# 
  8866  0F69                     	;# 
  8867  0F6A                     	;# 
  8868  0F6B                     	;# 
  8869  0F6C                     	;# 
  8870  0F6D                     	;# 
  8871  0FE4                     	;# 
  8872  0FE5                     	;# 
  8873  0FE6                     	;# 
  8874  0FE7                     	;# 
  8875  0FE8                     	;# 
  8876  0FE9                     	;# 
  8877  0FEA                     	;# 
  8878  0FEB                     	;# 
  8879  0FED                     	;# 
  8880  0FEE                     	;# 
  8881  0FEF                     	;# 
  8882                           
  8883                           	psect	idataBANK0
  8884  0EFE                     __pidataBANK0:	
  8885                           
  8886                           ;initializer for _tala
  8887  0EFE  3403               	retlw	3
  8888                           
  8889                           ;initializer for _pmon
  8890  0EFF  3405               	retlw	5
  8891                           
  8892                           ;initializer for _nreg
  8893  0F00  341E               	retlw	30
  8894                           
  8895                           	psect	stringtext1
  8896  05BE                     __pstringtext1:	
  8897  05BE                     _fsmStateTable:	
  8898  05BE  3412               	retlw	low _do_I2C_IDLE
  8899  05BF  340F               	retlw	high _do_I2C_IDLE
  8900  05C0  3494               	retlw	low _do_I2C_SEND_ADR_READ
  8901  05C1  340F               	retlw	high _do_I2C_SEND_ADR_READ
  8902  05C2  347C               	retlw	low _do_I2C_SEND_ADR_WRITE
  8903  05C3  340F               	retlw	high _do_I2C_SEND_ADR_WRITE
  8904  05C4  3419               	retlw	low _do_I2C_TX
  8905  05C5  3403               	retlw	high _do_I2C_TX
  8906  05C6  346D               	retlw	low _do_I2C_RX
  8907  05C7  3403               	retlw	high _do_I2C_RX
  8908  05C8  345E               	retlw	low _do_I2C_RCEN
  8909  05C9  340F               	retlw	high _do_I2C_RCEN
  8910  05CA  3490               	retlw	low _do_I2C_TX_EMPTY
  8911  05CB  3404               	retlw	high _do_I2C_TX_EMPTY
  8912  05CC  3417               	retlw	low _do_I2C_SEND_RESTART_READ
  8913  05CD  340F               	retlw	high _do_I2C_SEND_RESTART_READ
  8914  05CE  341C               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8915  05CF  340F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8916  05D0  3421               	retlw	low _do_I2C_SEND_RESTART
  8917  05D1  340F               	retlw	high _do_I2C_SEND_RESTART
  8918  05D2  3426               	retlw	low _do_I2C_SEND_STOP
  8919  05D3  340F               	retlw	high _do_I2C_SEND_STOP
  8920  05D4  342B               	retlw	low _do_I2C_DO_ACK
  8921  05D5  340F               	retlw	high _do_I2C_DO_ACK
  8922  05D6  3430               	retlw	low _do_I2C_DO_NACK_STOP
  8923  05D7  340F               	retlw	high _do_I2C_DO_NACK_STOP
  8924  05D8  3435               	retlw	low _do_I2C_DO_NACK_RESTART
  8925  05D9  340F               	retlw	high _do_I2C_DO_NACK_RESTART
  8926  05DA  3474               	retlw	low _do_I2C_RESET
  8927  05DB  340F               	retlw	high _do_I2C_RESET
  8928  05DC  34F0               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8929  05DD  3404               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8930  05DE                     __end_of_fsmStateTable:	
  8931                           
  8932                           	psect	nvBANK0
  8933  0049                     __pnvBANK0:	
  8934  0049                     _TMR0_InterruptHandler:	
  8935  0049                     	ds	2
  8936  004B                     _TMR2_InterruptHandler:	
  8937  004B                     	ds	2
  8938  004D                     _TMR1_InterruptHandler:	
  8939  004D                     	ds	2
  8940  004F                     _timer1ReloadVal:	
  8941  004F                     	ds	2
  8942  0051                     _INT_InterruptHandler:	
  8943  0051                     	ds	2
  8944  001E                     _T0CON0bits	set	30
  8945  001E                     _T0CON0	set	30
  8946  001C                     _TMR0L	set	28
  8947  001D                     _TMR0H	set	29
  8948  001F                     _T0CON1	set	31
  8949  0013                     _TRISCbits	set	19
  8950  000E                     _PORTCbits	set	14
  8951  000D                     _PORTBbits	set	13
  8952  0016                     _LATAbits	set	22
  8953  0014                     _TRISD	set	20
  8954  0013                     _TRISC	set	19
  8955  0012                     _TRISB	set	18
  8956  0011                     _TRISA	set	17
  8957  0015                     _TRISE	set	21
  8958  0018                     _LATC	set	24
  8959  0017                     _LATB	set	23
  8960  0016                     _LATA	set	22
  8961  0019                     _LATD	set	25
  8962  001A                     _LATE	set	26
  8963  000B                     _INTCONbits	set	11
  8964  0094                     _ADCON1bits	set	148
  8965  008E                     _ADPREVL	set	142
  8966  008F                     _ADPREVH	set	143
  8967  0097                     _ADSTATbits	set	151
  8968  0090                     _ADACCL	set	144
  8969  0091                     _ADACCH	set	145
  8970  0095                     _ADCON2bits	set	149
  8971  009C                     _ADPRE	set	156
  8972  0096                     _ADCON3bits	set	150
  8973  008C                     _ADRESL	set	140
  8974  008D                     _ADRESH	set	141
  8975  0093                     _ADCON0bits	set	147
  8976  009D                     _ADACQ	set	157
  8977  0093                     _ADCON0	set	147
  8978  0098                     _ADCLK	set	152
  8979  0099                     _ADACT	set	153
  8980  009A                     _ADREF	set	154
  8981  0097                     _ADSTAT	set	151
  8982  0096                     _ADCON3	set	150
  8983  0095                     _ADCON2	set	149
  8984  0094                     _ADCON1	set	148
  8985  009B                     _ADCAP	set	155
  8986  009E                     _ADPCH	set	158
  8987  0116                     _ADERRL	set	278
  8988  0117                     _ADERRH	set	279
  8989  0114                     _ADFLTRL	set	276
  8990  0115                     _ADFLTRH	set	277
  8991  010C                     _ADCNT	set	268
  8992  010D                     _ADRPT	set	269
  8993  0113                     _ADSTPTH	set	275
  8994  0112                     _ADSTPTL	set	274
  8995  0111                     _ADUTHH	set	273
  8996  0110                     _ADUTHL	set	272
  8997  010F                     _ADLTHH	set	271
  8998  010E                     _ADLTHL	set	270
  8999  018F                     _SSP1STATbits	set	399
  9000  018E                     _SSP1MSK	set	398
  9001  018C                     _SSP1BUF	set	396
  9002  0191                     _SSP1CON2bits	set	401
  9003  018D                     _SSP1ADD	set	397
  9004  0191                     _SSP1CON2	set	401
  9005  0190                     _SSP1CON1	set	400
  9006  018F                     _SSP1STAT	set	399
  9007  0190                     _SSP1CON1bits	set	400
  9008  021F                     _CCPTMRS1bits	set	543
  9009  020F                     _T1GCONbits	set	527
  9010  020E                     _T1CONbits	set	526
  9011  020E                     _T1CON	set	526
  9012  020C                     _TMR1L	set	524
  9013  020D                     _TMR1H	set	525
  9014  0211                     _T1CLK	set	529
  9015  0210                     _T1GATE	set	528
  9016  020F                     _T1GCON	set	527
  9017  028D                     _PR2	set	653
  9018  028C                     _TMR2	set	652
  9019  028E                     _T2CONbits	set	654
  9020  0291                     _T2RSTbits	set	657
  9021  028F                     _T2HLTbits	set	655
  9022  028E                     _T2CON	set	654
  9023  028C                     _T2TMR	set	652
  9024  028D                     _T2PR	set	653
  9025  0291                     _T2RST	set	657
  9026  028F                     _T2HLT	set	655
  9027  0290                     _T2CLKCON	set	656
  9028  038C                     _PWM6DCL	set	908
  9029  038D                     _PWM6DCH	set	909
  9030  038E                     _PWM6CON	set	910
  9031  0710                     _PIR4bits	set	1808
  9032  071A                     _PIE4bits	set	1818
  9033  070F                     _PIR3bits	set	1807
  9034  0719                     _PIE3bits	set	1817
  9035  0716                     _PIE0bits	set	1814
  9036  070C                     _PIR0bits	set	1804
  9037  079B                     _PMD5	set	1947
  9038  079A                     _PMD4	set	1946
  9039  0799                     _PMD3	set	1945
  9040  0798                     _PMD2	set	1944
  9041  0797                     _PMD1	set	1943
  9042  0796                     _PMD0	set	1942
  9043  081F                     _NVMCON2	set	2079
  9044  081C                     _NVMDATL	set	2076
  9045  081D                     _NVMDATH	set	2077
  9046  081E                     _NVMCON1bits	set	2078
  9047  081B                     _NVMADRH	set	2075
  9048  081A                     _NVMADRL	set	2074
  9049  0892                     _OSCTUNE	set	2194
  9050  0893                     _OSCFRQ	set	2195
  9051  0891                     _OSCEN	set	2193
  9052  088F                     _OSCCON3	set	2191
  9053  088D                     _OSCCON1	set	2189
  9054  0EC6                     _SSP1DATPPS	set	3782
  9055  0EC5                     _SSP1CLKPPS	set	3781
  9056  0E90                     _INTPPS	set	3728
  9057  0F44                     _WPUBbits	set	3908
  9058  0F16                     _RA6PPS	set	3862
  9059  0F24                     _RC4PPS	set	3876
  9060  0F23                     _RC3PPS	set	3875
  9061  0F68                     _INLVLE	set	3944
  9062  0F5D                     _INLVLD	set	3933
  9063  0F52                     _INLVLC	set	3922
  9064  0F47                     _INLVLB	set	3911
  9065  0F3C                     _INLVLA	set	3900
  9066  0F67                     _SLRCONE	set	3943
  9067  0F5C                     _SLRCOND	set	3932
  9068  0F51                     _SLRCONC	set	3921
  9069  0F46                     _SLRCONB	set	3910
  9070  0F3B                     _SLRCONA	set	3899
  9071  0F5B                     _ODCOND	set	3931
  9072  0F50                     _ODCONC	set	3920
  9073  0F45                     _ODCONB	set	3909
  9074  0F3A                     _ODCONA	set	3898
  9075  0F66                     _ODCONE	set	3942
  9076  0F4F                     _WPUC	set	3919
  9077  0F39                     _WPUA	set	3897
  9078  0F44                     _WPUB	set	3908
  9079  0F65                     _WPUE	set	3941
  9080  0F5A                     _WPUD	set	3930
  9081  0F38                     _ANSELA	set	3896
  9082  0F64                     _ANSELE	set	3940
  9083  0F43                     _ANSELB	set	3907
  9084  0F4E                     _ANSELC	set	3918
  9085  0F59                     _ANSELD	set	3929
  9086  7A7C                     _WPUC4	set	31356
  9087  7A7B                     _WPUC3	set	31355
  9088                           
  9089                           ; #config settings
  9090  0000                     
  9091                           	psect	cinit
  9092  005D                     start_initialization:	
  9093  005D                     __initialization:	
  9094                           
  9095                           ; Initialize objects allocated to BANK0
  9096  005D  318E  26FE  3180   	fcall	__pidataBANK0	;fetch initializer
  9097  0060  00D3               	movwf	__pdataBANK0& (0+127)
  9098  0061  318E  26FF  3180   	fcall	__pidataBANK0+1	;fetch initializer
  9099  0064  00D4               	movwf	(__pdataBANK0+1)& (0+127)
  9100  0065  318F  2700  3180   	fcall	__pidataBANK0+2	;fetch initializer
  9101  0068  00D5               	movwf	(__pdataBANK0+2)& (0+127)
  9102                           
  9103                           ; Clear objects allocated to COMMON
  9104  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9105                           
  9106                           ; Clear objects allocated to BANK0
  9107  006A  3020               	movlw	low __pbssBANK0
  9108  006B  0084               	movwf	4
  9109  006C  3000               	movlw	high __pbssBANK0
  9110  006D  0085               	movwf	5
  9111  006E  3017               	movlw	23
  9112  006F  318F  2758  3180   	fcall	clear_ram0
  9113                           
  9114                           ; Clear objects allocated to BANK1
  9115  0072  30A0               	movlw	low __pbssBANK1
  9116  0073  0084               	movwf	4
  9117  0074  3000               	movlw	high __pbssBANK1
  9118  0075  0085               	movwf	5
  9119  0076  301D               	movlw	29
  9120  0077  318F  2758  3180   	fcall	clear_ram0
  9121  007A                     end_of_initialization:	
  9122                           ;End of C runtime variable initialization code
  9123                           
  9124  007A                     __end_of__initialization:	
  9125  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9126  007B  0020               	movlb	0
  9127  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9128                           
  9129                           	psect	bssCOMMON
  9130  007D                     __pbssCOMMON:	
  9131  007D                     _clkms:	
  9132  007D                     	ds	1
  9133                           
  9134                           	psect	bssBANK0
  9135  0020                     __pbssBANK0:	
  9136  0020                     _lum_threshold:	
  9137  0020                     	ds	2
  9138  0022                     _level_bin:	
  9139  0022                     	ds	2
  9140  0024                     _duty_cycle:	
  9141  0024                     	ds	2
  9142  0026                     _convertedValue:	
  9143  0026                     	ds	2
  9144  0028                     _value:	
  9145  0028                     	ds	2
  9146  002A                     _i2c1_driver_i2cISR:	
  9147  002A                     	ds	2
  9148  002C                     _i2c1_driver_busCollisionISR:	
  9149  002C                     	ds	2
  9150  002E                     _nreg_pt:	
  9151  002E                     	ds	1
  9152  002F                     _alarm:	
  9153  002F                     	ds	1
  9154  0030                     _config_mode:	
  9155  0030                     	ds	1
  9156  0031                     _set_mode:	
  9157  0031                     	ds	1
  9158  0032                     _bounce_time:	
  9159  0032                     	ds	1
  9160  0033                     _last_ms:	
  9161  0033                     	ds	1
  9162  0034                     _seg:	
  9163  0034                     	ds	1
  9164  0035                     _clkm:	
  9165  0035                     	ds	1
  9166  0036                     _clkh:	
  9167  0036                     	ds	1
  9168                           
  9169                           	psect	dataBANK0
  9170  0053                     __pdataBANK0:	
  9171  0053                     _tala:	
  9172  0053                     	ds	1
  9173  0054                     _pmon:	
  9174  0054                     	ds	1
  9175  0055                     _nreg:	
  9176  0055                     	ds	1
  9177                           
  9178                           	psect	bssBANK1
  9179  00A0                     __pbssBANK1:	
  9180  00A0                     _i2c_status:	
  9181  00A0                     	ds	29
  9182                           
  9183                           	psect	clrtext
  9184  0F58                     clear_ram0:	
  9185                           ;	Called with FSR0 containing the base address, and
  9186                           ;	WREG with the size to clear
  9187                           
  9188  0F58  0064               	clrwdt	;clear the watchdog before getting into this loop
  9189  0F59                     clrloop0:	
  9190  0F59  0180               	clrf	0	;clear RAM location pointed to by FSR
  9191  0F5A  3101               	addfsr 0,1
  9192  0F5B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9193  0F5C  2F59               	goto	clrloop0	;have we reached the end yet?
  9194  0F5D  3400               	retlw	0	;all done for this memory range, return
  9195                           
  9196                           	psect	cstackCOMMON
  9197  0070                     __pcstackCOMMON:	
  9198  0070                     ?_i2c1_driver_isNACK:	
  9199  0070                     ?_setCallBack:	
  9200                           ; 1 bit 
  9201                           
  9202  0070                     ?_mssp1_clearIRQ:	
  9203                           ; 1 bytes @ 0x0
  9204                           
  9205  0070                     ??_mssp1_clearIRQ:	
  9206                           ; 1 bytes @ 0x0
  9207                           
  9208  0070                     ?_i2c_busCollisionISR:	
  9209                           ; 1 bytes @ 0x0
  9210                           
  9211  0070                     ??_i2c_busCollisionISR:	
  9212                           ; 1 bytes @ 0x0
  9213                           
  9214  0070                     ?_i2c_ISR:	
  9215                           ; 1 bytes @ 0x0
  9216                           
  9217  0070                     ?_i2c1_driver_resetBus:	
  9218                           ; 1 bytes @ 0x0
  9219                           
  9220  0070                     ??_i2c1_driver_resetBus:	
  9221                           ; 1 bytes @ 0x0
  9222                           
  9223  0070                     ?_i2c1_driver_restart:	
  9224                           ; 1 bytes @ 0x0
  9225                           
  9226  0070                     ??_i2c1_driver_restart:	
  9227                           ; 1 bytes @ 0x0
  9228                           
  9229  0070                     ?_i2c1_driver_stop:	
  9230                           ; 1 bytes @ 0x0
  9231                           
  9232  0070                     ??_i2c1_driver_stop:	
  9233                           ; 1 bytes @ 0x0
  9234                           
  9235  0070                     ?_i2c1_driver_TXData:	
  9236                           ; 1 bytes @ 0x0
  9237                           
  9238  0070                     ??_i2c1_driver_TXData:	
  9239                           ; 1 bytes @ 0x0
  9240                           
  9241  0070                     ?_i2c1_driver_startRX:	
  9242                           ; 1 bytes @ 0x0
  9243                           
  9244  0070                     ??_i2c1_driver_startRX:	
  9245                           ; 1 bytes @ 0x0
  9246                           
  9247  0070                     ?_i2c1_driver_sendACK:	
  9248                           ; 1 bytes @ 0x0
  9249                           
  9250  0070                     ??_i2c1_driver_sendACK:	
  9251                           ; 1 bytes @ 0x0
  9252                           
  9253  0070                     ?_i2c1_driver_sendNACK:	
  9254                           ; 1 bytes @ 0x0
  9255                           
  9256  0070                     ??_i2c1_driver_sendNACK:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0070                     ??_i2c1_driver_isNACK:	
  9260                           ; 1 bytes @ 0x0
  9261                           
  9262  0070                     ?_i2c1_driver_getRXData:	
  9263                           ; 1 bytes @ 0x0
  9264                           
  9265  0070                     ??_i2c1_driver_getRXData:	
  9266                           ; 1 bytes @ 0x0
  9267                           
  9268  0070                     ?_mssp1_setIRQ:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0070                     ??_mssp1_setIRQ:	
  9272                           ; 1 bytes @ 0x0
  9273                           
  9274  0070                     ?_i2c1_driver_clearBusCollision:	
  9275                           ; 1 bytes @ 0x0
  9276                           
  9277  0070                     ??_i2c1_driver_clearBusCollision:	
  9278                           ; 1 bytes @ 0x0
  9279                           
  9280  0070                     ?_INT_CallBack:	
  9281                           ; 1 bytes @ 0x0
  9282                           
  9283  0070                     ?_TMR0_ISR:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0070                     ?_TMR1_ISR:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0070                     ?_TMR2_ISR:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0070                     ?_PMD_Initialize:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0070                     ?_PIN_MANAGER_Initialize:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0070                     ?_OSCILLATOR_Initialize:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0070                     ?_PWM6_Initialize:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0070                     ?_ADCC_Initialize:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0070                     ?_TMR2_Initialize:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0070                     ?_TMR1_Initialize:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0070                     ?_TMR0_Initialize:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0070                     ?_TMR1_DefaultInterruptHandler:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0070                     ??_TMR1_DefaultInterruptHandler:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0070                     ?_TMR2_DefaultInterruptHandler:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0070                     ??_TMR2_DefaultInterruptHandler:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0070                     ?_checkDebounceSW1:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0070                     ?_TMR0_StopTimer:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0070                     ??_TMR0_StopTimer:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0070                     ?_handler_clock_hms:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0070                     ??_handler_clock_hms:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0070                     ?_handler_clock_ms:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0070                     ??_handler_clock_ms:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0070                     ?_recoverData:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0070                     ?_TMR0_StartTimer:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0070                     ?_config_routine:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0070                     ?_all_LED:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0070                     ?_mod1_LED:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0070                     ?_mod2_LED:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0070                     ?_mod3_LED:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0070                     ?_mod4_LED:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0070                     ?_clock_field:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0070                     ?_cksum:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0070                     ?_reset_recv:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0070                     ?_cksum_w:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0070                     ?_TMR0_DefaultInterruptHandler:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0070                     ??_TMR0_DefaultInterruptHandler:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0070                     ?_i2c_setBuffer:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0070                     ?_do_I2C_RESET:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0070                     ??_do_I2C_RESET:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0070                     ?_do_I2C_IDLE:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0070                     ??_do_I2C_IDLE:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0070                     ?_do_I2C_SEND_RESTART:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0070                     ??_do_I2C_SEND_RESTART:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0070                     ?_do_I2C_SEND_STOP:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0070                     ??_do_I2C_SEND_STOP:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0070                     ?_do_I2C_SEND_ADR_READ:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0070                     ??_do_I2C_SEND_ADR_READ:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0070                     ?_do_I2C_RCEN:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0070                     ??_do_I2C_RCEN:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0070                     ?_do_I2C_DO_ACK:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448  0070                     ??_do_I2C_DO_ACK:	
  9449                           ; 1 bytes @ 0x0
  9450                           
  9451  0070                     ?_do_I2C_DO_NACK_STOP:	
  9452                           ; 1 bytes @ 0x0
  9453                           
  9454  0070                     ??_do_I2C_DO_NACK_STOP:	
  9455                           ; 1 bytes @ 0x0
  9456                           
  9457  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9458                           ; 1 bytes @ 0x0
  9459                           
  9460  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9461                           ; 1 bytes @ 0x0
  9462                           
  9463  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9464                           ; 1 bytes @ 0x0
  9465                           
  9466  0070                     ?_do_I2C_TX:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0070                     ?_do_I2C_RX:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0070                     ?_do_I2C_TX_EMPTY:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0070                     ?_INT_ISR:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0070                     ?_INT_DefaultInterruptHandler:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0070                     ??_INT_DefaultInterruptHandler:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0070                     ?_EXT_INT_Initialize:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0070                     ?_INTERRUPT_InterruptManager:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0070                     ?_SYSTEM_Initialize:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0070                     ?_ADCC_StartConversion:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0070                     ?_ADCC_IsConversionDone:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0070                     ?_TMR1_WriteTimer:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0070                     ?_sw1_EXT:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0070                     ?_ISR_3s:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0070                     ?_main:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0070                     ?i1_PWM6_LoadDutyValue:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0070                     ?i1_checkDebounceSW1:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0070                     ??i1_checkDebounceSW1:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0070                     i2c1_driver_TXData@d:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0070                     i2c_setBuffer@bufferSize:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0070                     setCallBack@cb:	
  9527                           ; 2 bytes @ 0x0
  9528                           
  9529  0070                     TMR1_WriteTimer@timerVal:	
  9530                           ; 2 bytes @ 0x0
  9531                           
  9532  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9533                           ; 2 bytes @ 0x0
  9534                           
  9535                           
  9536                           ; 2 bytes @ 0x0
  9537  0070                     	ds	1
  9538  0071                     ??_TMR2_ISR:	
  9539  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9540                           ; 1 bytes @ 0x1
  9541                           
  9542                           
  9543                           ; 1 bytes @ 0x1
  9544  0071                     	ds	1
  9545  0072                     ??_TMR1_ISR:	
  9546  0072                     ??_i2c_setBuffer:	
  9547                           ; 1 bytes @ 0x2
  9548                           
  9549  0072                     ??_TMR1_WriteTimer:	
  9550                           ; 1 bytes @ 0x2
  9551                           
  9552  0072                     ??i1_PWM6_LoadDutyValue:	
  9553                           ; 1 bytes @ 0x2
  9554                           
  9555  0072                     setCallBack@p:	
  9556                           ; 1 bytes @ 0x2
  9557                           
  9558                           
  9559                           ; 1 bytes @ 0x2
  9560  0072                     	ds	1
  9561  0073                     ??_setCallBack:	
  9562  0073                     i2c_setBuffer@buffer:	
  9563                           ; 1 bytes @ 0x3
  9564                           
  9565                           
  9566                           ; 1 bytes @ 0x3
  9567  0073                     	ds	1
  9568  0074                     ??_ISR_3s:	
  9569  0074                     setCallBack@idx:	
  9570                           ; 1 bytes @ 0x4
  9571                           
  9572                           
  9573                           ; 1 bytes @ 0x4
  9574  0074                     	ds	1
  9575  0075                     ??_TMR0_ISR:	
  9576  0075                     ?_i2c_setDataCompleteCallback:	
  9577                           ; 1 bytes @ 0x5
  9578                           
  9579  0075                     i2c_setDataCompleteCallback@cb:	
  9580                           ; 1 bytes @ 0x5
  9581                           
  9582                           
  9583                           ; 2 bytes @ 0x5
  9584  0075                     	ds	2
  9585  0077                     ??_sw1_EXT:	
  9586  0077                     i2c_setDataCompleteCallback@p:	
  9587                           ; 1 bytes @ 0x7
  9588                           
  9589                           
  9590                           ; 1 bytes @ 0x7
  9591  0077                     	ds	1
  9592  0078                     ??_INT_CallBack:	
  9593  0078                     ??_i2c_setDataCompleteCallback:	
  9594                           ; 1 bytes @ 0x8
  9595                           
  9596  0078                     ??_INT_ISR:	
  9597                           ; 1 bytes @ 0x8
  9598                           
  9599                           
  9600                           ; 1 bytes @ 0x8
  9601  0078                     	ds	1
  9602  0079                     ?_returnStop:	
  9603  0079                     ?_returnReset:	
  9604                           ; 1 bytes @ 0x9
  9605                           
  9606  0079                     ?_i2c_restartWrite:	
  9607                           ; 1 bytes @ 0x9
  9608                           
  9609  0079                     ?_wr1RegCompleteHandler:	
  9610                           ; 1 bytes @ 0x9
  9611                           
  9612  0079                     ?_rd1RegCompleteHandler:	
  9613                           ; 1 bytes @ 0x9
  9614                           
  9615  0079                     ?_rd2RegCompleteHandler:	
  9616                           ; 1 bytes @ 0x9
  9617                           
  9618  0079                     ?_wr2RegCompleteHandler:	
  9619                           ; 1 bytes @ 0x9
  9620                           
  9621  0079                     ?_rdBlkRegCompleteHandler:	
  9622                           ; 1 bytes @ 0x9
  9623                           
  9624  0079                     i2c_restartWrite@p:	
  9625                           ; 1 bytes @ 0x9
  9626                           
  9627  0079                     returnStop@p:	
  9628                           ; 1 bytes @ 0x9
  9629                           
  9630  0079                     returnReset@p:	
  9631                           ; 1 bytes @ 0x9
  9632                           
  9633  0079                     wr1RegCompleteHandler@p:	
  9634                           ; 1 bytes @ 0x9
  9635                           
  9636  0079                     rd1RegCompleteHandler@p:	
  9637                           ; 1 bytes @ 0x9
  9638                           
  9639  0079                     rd2RegCompleteHandler@p:	
  9640                           ; 1 bytes @ 0x9
  9641                           
  9642  0079                     wr2RegCompleteHandler@p:	
  9643                           ; 1 bytes @ 0x9
  9644                           
  9645  0079                     rdBlkRegCompleteHandler@p:	
  9646                           ; 1 bytes @ 0x9
  9647                           
  9648                           
  9649                           ; 1 bytes @ 0x9
  9650  0079                     	ds	1
  9651  007A                     ??_returnStop:	
  9652  007A                     ??_returnReset:	
  9653                           ; 1 bytes @ 0xA
  9654                           
  9655  007A                     ??_i2c_restartWrite:	
  9656                           ; 1 bytes @ 0xA
  9657                           
  9658  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9659                           ; 1 bytes @ 0xA
  9660                           
  9661  007A                     ??_do_I2C_TX:	
  9662                           ; 1 bytes @ 0xA
  9663                           
  9664  007A                     ??_do_I2C_RX:	
  9665                           ; 1 bytes @ 0xA
  9666                           
  9667  007A                     ??_do_I2C_TX_EMPTY:	
  9668                           ; 1 bytes @ 0xA
  9669                           
  9670  007A                     ??_wr1RegCompleteHandler:	
  9671                           ; 1 bytes @ 0xA
  9672                           
  9673  007A                     ??_rd1RegCompleteHandler:	
  9674                           ; 1 bytes @ 0xA
  9675                           
  9676  007A                     ??_rd2RegCompleteHandler:	
  9677                           ; 1 bytes @ 0xA
  9678                           
  9679  007A                     ??_wr2RegCompleteHandler:	
  9680                           ; 1 bytes @ 0xA
  9681                           
  9682  007A                     ??_rdBlkRegCompleteHandler:	
  9683                           ; 1 bytes @ 0xA
  9684                           
  9685                           
  9686                           ; 1 bytes @ 0xA
  9687  007A                     	ds	3
  9688  007D                     ??_INTERRUPT_InterruptManager:	
  9689                           
  9690                           	psect	cstackBANK0
  9691  0037                     __pcstackBANK0:	
  9692                           ; 1 bytes @ 0xD
  9693                           
  9694  0037                     ??_i2c_ISR:	
  9695                           
  9696                           ; 1 bytes @ 0x0
  9697  0037                     	ds	3
  9698  003A                     ??_PMD_Initialize:	
  9699  003A                     ??_PIN_MANAGER_Initialize:	
  9700                           ; 1 bytes @ 0x3
  9701                           
  9702  003A                     ??_OSCILLATOR_Initialize:	
  9703                           ; 1 bytes @ 0x3
  9704                           
  9705  003A                     ??_PWM6_Initialize:	
  9706                           ; 1 bytes @ 0x3
  9707                           
  9708  003A                     ??_ADCC_Initialize:	
  9709                           ; 1 bytes @ 0x3
  9710                           
  9711  003A                     ?_TMR1_SetInterruptHandler:	
  9712                           ; 1 bytes @ 0x3
  9713                           
  9714  003A                     ?_TMR2_SetInterruptHandler:	
  9715                           ; 1 bytes @ 0x3
  9716                           
  9717  003A                     ??_checkDebounceSW1:	
  9718                           ; 1 bytes @ 0x3
  9719                           
  9720  003A                     ?_TMR0_SetInterruptHandler:	
  9721                           ; 1 bytes @ 0x3
  9722                           
  9723  003A                     ?_LED_bin:	
  9724                           ; 1 bytes @ 0x3
  9725                           
  9726  003A                     ??_TMR0_StartTimer:	
  9727                           ; 1 bytes @ 0x3
  9728                           
  9729  003A                     ?_INT_SetInterruptHandler:	
  9730                           ; 1 bytes @ 0x3
  9731                           
  9732  003A                     ??_ADCC_StartConversion:	
  9733                           ; 1 bytes @ 0x3
  9734                           
  9735  003A                     ??_ADCC_IsConversionDone:	
  9736                           ; 1 bytes @ 0x3
  9737                           
  9738  003A                     ?_PWM6_LoadDutyValue:	
  9739                           ; 1 bytes @ 0x3
  9740                           
  9741  003A                     ?_DATAEE_ReadByte:	
  9742                           ; 1 bytes @ 0x3
  9743                           
  9744  003A                     ?_ADCC_GetConversionResult:	
  9745                           ; 1 bytes @ 0x3
  9746                           
  9747  003A                     ADCC_StartConversion@channel:	
  9748                           ; 2 bytes @ 0x3
  9749                           
  9750  003A                     INT_SetInterruptHandler@InterruptHandler:	
  9751                           ; 1 bytes @ 0x3
  9752                           
  9753  003A                     TMR1_SetInterruptHandler@InterruptHandler:	
  9754                           ; 2 bytes @ 0x3
  9755                           
  9756  003A                     PWM6_LoadDutyValue@dutyValue:	
  9757                           ; 2 bytes @ 0x3
  9758                           
  9759  003A                     DATAEE_ReadByte@bAdd:	
  9760                           ; 2 bytes @ 0x3
  9761                           
  9762  003A                     TMR2_SetInterruptHandler@InterruptHandler:	
  9763                           ; 2 bytes @ 0x3
  9764                           
  9765  003A                     LED_bin@value:	
  9766                           ; 2 bytes @ 0x3
  9767                           
  9768  003A                     TMR0_SetInterruptHandler@InterruptHandler:	
  9769                           ; 2 bytes @ 0x3
  9770                           
  9771                           
  9772                           ; 2 bytes @ 0x3
  9773  003A                     	ds	2
  9774  003C                     ??_TMR2_Initialize:	
  9775  003C                     ??_TMR1_Initialize:	
  9776                           ; 1 bytes @ 0x5
  9777                           
  9778  003C                     ??_TMR0_Initialize:	
  9779                           ; 1 bytes @ 0x5
  9780                           
  9781  003C                     ??_TMR1_SetInterruptHandler:	
  9782                           ; 1 bytes @ 0x5
  9783                           
  9784  003C                     ??_TMR2_SetInterruptHandler:	
  9785                           ; 1 bytes @ 0x5
  9786                           
  9787  003C                     ??_TMR0_SetInterruptHandler:	
  9788                           ; 1 bytes @ 0x5
  9789                           
  9790  003C                     ??_LED_bin:	
  9791                           ; 1 bytes @ 0x5
  9792                           
  9793  003C                     ??_cksum:	
  9794                           ; 1 bytes @ 0x5
  9795                           
  9796  003C                     ??_INT_SetInterruptHandler:	
  9797                           ; 1 bytes @ 0x5
  9798                           
  9799  003C                     ??_EXT_INT_Initialize:	
  9800                           ; 1 bytes @ 0x5
  9801                           
  9802  003C                     ??_SYSTEM_Initialize:	
  9803                           ; 1 bytes @ 0x5
  9804                           
  9805  003C                     ??_ADCC_GetConversionResult:	
  9806                           ; 1 bytes @ 0x5
  9807                           
  9808  003C                     ??_PWM6_LoadDutyValue:	
  9809                           ; 1 bytes @ 0x5
  9810                           
  9811  003C                     ??_DATAEE_ReadByte:	
  9812                           ; 1 bytes @ 0x5
  9813                           
  9814  003C                     ?_ADC_read:	
  9815                           ; 1 bytes @ 0x5
  9816                           
  9817                           
  9818                           ; 2 bytes @ 0x5
  9819  003C                     	ds	1
  9820  003D                     cksum@res:	
  9821                           
  9822                           ; 1 bytes @ 0x6
  9823  003D                     	ds	1
  9824  003E                     ??_ADC_read:	
  9825  003E                     ??_all_LED:	
  9826                           ; 1 bytes @ 0x7
  9827                           
  9828  003E                     ??_mod1_LED:	
  9829                           ; 1 bytes @ 0x7
  9830                           
  9831  003E                     ??_mod2_LED:	
  9832                           ; 1 bytes @ 0x7
  9833                           
  9834  003E                     ??_mod3_LED:	
  9835                           ; 1 bytes @ 0x7
  9836                           
  9837  003E                     ??_mod4_LED:	
  9838                           ; 1 bytes @ 0x7
  9839                           
  9840  003E                     cksum@i:	
  9841                           ; 1 bytes @ 0x7
  9842                           
  9843                           
  9844                           ; 2 bytes @ 0x7
  9845  003E                     	ds	2
  9846  0040                     ?_DATAEE_WriteByte:	
  9847  0040                     DATAEE_WriteByte@bAdd:	
  9848                           ; 1 bytes @ 0x9
  9849                           
  9850                           
  9851                           ; 2 bytes @ 0x9
  9852  0040                     	ds	1
  9853  0041                     ??_clock_field:	
  9854                           
  9855                           ; 1 bytes @ 0xA
  9856  0041                     	ds	1
  9857  0042                     DATAEE_WriteByte@bData:	
  9858  0042                     clock_field@select:	
  9859                           ; 1 bytes @ 0xB
  9860                           
  9861                           
  9862                           ; 2 bytes @ 0xB
  9863  0042                     	ds	1
  9864  0043                     ??_DATAEE_WriteByte:	
  9865  0043                     DATAEE_WriteByte@GIEBitValue:	
  9866                           ; 1 bytes @ 0xC
  9867                           
  9868                           
  9869                           ; 1 bytes @ 0xC
  9870  0043                     	ds	1
  9871  0044                     ??_config_routine:	
  9872  0044                     ??_reset_recv:	
  9873                           ; 1 bytes @ 0xD
  9874                           
  9875  0044                     ??_cksum_w:	
  9876                           ; 1 bytes @ 0xD
  9877                           
  9878  0044                     reset_recv@i:	
  9879                           ; 1 bytes @ 0xD
  9880                           
  9881                           
  9882                           ; 2 bytes @ 0xD
  9883  0044                     	ds	1
  9884  0045                     config_routine@select_mode:	
  9885                           
  9886                           ; 2 bytes @ 0xE
  9887  0045                     	ds	1
  9888  0046                     ??_recoverData:	
  9889                           
  9890                           ; 1 bytes @ 0xF
  9891  0046                     	ds	1
  9892  0047                     ??_main:	
  9893                           
  9894                           ; 1 bytes @ 0x10
  9895  0047                     	ds	2
  9896                           
  9897                           	psect	maintext
  9898  007E                     __pmaintext:	
  9899 ;;
  9900 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9901 ;;
  9902 ;; *************** function _main *****************
  9903 ;; Defined at:
  9904 ;;		line 118 in file "main.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  task_schedul    2    0        unsigned int 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : B1F/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        4 bytes
  9923 ;; Hardware stack levels required when called:   10
  9924 ;; This function calls:
  9925 ;;		_ADC_read
  9926 ;;		_INT_SetInterruptHandler
  9927 ;;		_LED_bin
  9928 ;;		_PWM6_LoadDutyValue
  9929 ;;		_SYSTEM_Initialize
  9930 ;;		_TMR0_SetInterruptHandler
  9931 ;;		_TMR0_StartTimer
  9932 ;;		_TMR1_SetInterruptHandler
  9933 ;;		_TMR2_SetInterruptHandler
  9934 ;;		_config_routine
  9935 ;;		_recoverData
  9936 ;; This function is called by:
  9937 ;;		Startup code after reset
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _main
  9943  007E                     _main:	
  9944  007E                     l5068:	
  9945                           ;incstack = 0
  9946                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9947                           
  9948                           
  9949                           ;main.c: 119:     SYSTEM_Initialize();
  9950  007E  3186  2639  3180   	fcall	_SYSTEM_Initialize
  9951                           
  9952                           ;main.c: 121:     TMR0_SetInterruptHandler(ISR_3s);
  9953  0081  30A2               	movlw	low _ISR_3s
  9954  0082  0020               	movlb	0	; select bank0
  9955  0083  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9956  0084  3006               	movlw	high _ISR_3s
  9957  0085  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9958  0086  318F  2746  3180   	fcall	_TMR0_SetInterruptHandler
  9959                           
  9960                           ;main.c: 122:     TMR1_SetInterruptHandler(handler_clock_hms);
  9961  0089  301C               	movlw	low _handler_clock_hms
  9962  008A  0020               	movlb	0	; select bank0
  9963  008B  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9964  008C  3005               	movlw	high _handler_clock_hms
  9965  008D  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9966  008E  318F  274C  3180   	fcall	_TMR1_SetInterruptHandler
  9967                           
  9968                           ;main.c: 123:     INT_SetInterruptHandler(sw1_EXT);
  9969  0091  3048               	movlw	low _sw1_EXT
  9970  0092  0020               	movlb	0	; select bank0
  9971  0093  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
  9972  0094  3005               	movlw	high _sw1_EXT
  9973  0095  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  9974  0096  318F  2740  3180   	fcall	_INT_SetInterruptHandler
  9975                           
  9976                           ;main.c: 124:     TMR2_SetInterruptHandler(handler_clock_ms);
  9977  0099  30DA               	movlw	low _handler_clock_ms
  9978  009A  0020               	movlb	0	; select bank0
  9979  009B  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  9980  009C  300F               	movlw	high _handler_clock_ms
  9981  009D  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  9982  009E  318F  2752  3180   	fcall	_TMR2_SetInterruptHandler
  9983  00A1                     l5070:	
  9984  00A1                     l5072:	
  9985                           
  9986                           ;main.c: 128:     recoverData();
  9987  00A1  3181  212A  3180   	fcall	_recoverData
  9988  00A4                     l5074:	
  9989                           
  9990                           ;main.c: 130:     PWM6_LoadDutyValue(0);
  9991  00A4  3000               	movlw	0
  9992  00A5  0020               	movlb	0	; select bank0
  9993  00A6  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
  9994  00A7  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
  9995  00A8  3186  2689  3180   	fcall	_PWM6_LoadDutyValue
  9996  00AB                     l5076:	
  9997                           
  9998                           ;main.c: 131:     alarm = 0 ;
  9999  00AB  0020               	movlb	0	; select bank0
 10000  00AC  01AF               	clrf	_alarm	;volatile
 10001  00AD                     l5078:	
 10002  00AD  003E               	movlb	30	; select bank30
 10003  00AE  1644               	bsf	68,4	;volatile
 10004  00AF                     l5080:	
 10005                           
 10006                           ;main.c: 135:     (INTCONbits.GIE = 1);
 10007  00AF  178B               	bsf	11,7	;volatile
 10008  00B0                     l5082:	
 10009                           
 10010                           ;main.c: 138:     (INTCONbits.PEIE = 1);
 10011  00B0  170B               	bsf	11,6	;volatile
 10012  00B1  28B2               	goto	l5084
 10013  00B2                     l1169:	
 10014                           ;main.c: 141:     while (1)
 10015                           
 10016  00B2                     l5084:	
 10017                           
 10018                           ;main.c: 149:                     if(!config_mode){
 10019  00B2  0020               	movlb	0	; select bank0
 10020  00B3  0830               	movf	_config_mode,w	;volatile
 10021  00B4  1D03               	btfss	3,2
 10022  00B5  28B7               	goto	u2241
 10023  00B6  28B8               	goto	u2240
 10024  00B7                     u2241:	
 10025  00B7  291B               	goto	l5116
 10026  00B8                     u2240:	
 10027  00B8                     l5086:	
 10028                           
 10029                           ;main.c: 151:                         convertedValue = ADC_read();
 10030  00B8  3186  266F  3180   	fcall	_ADC_read
 10031  00BB  0020               	movlb	0	; select bank0
 10032  00BC  083D               	movf	?_ADC_read+1,w
 10033  00BD  00A7               	movwf	_convertedValue+1
 10034  00BE  083C               	movf	?_ADC_read,w
 10035  00BF  00A6               	movwf	_convertedValue
 10036  00C0                     l5088:	
 10037                           
 10038                           ;main.c: 152:                         level_bin = (convertedValue >> 8);
 10039  00C0  0827               	movf	_convertedValue+1,w
 10040  00C1  00C8               	movwf	??_main+1
 10041  00C2  0826               	movf	_convertedValue,w
 10042  00C3  00C7               	movwf	??_main
 10043  00C4  0848               	movf	??_main+1,w
 10044  00C5  00C7               	movwf	??_main
 10045  00C6  01C8               	clrf	??_main+1
 10046  00C7  0847               	movf	??_main,w
 10047  00C8  00A2               	movwf	_level_bin
 10048  00C9  0848               	movf	??_main+1,w
 10049  00CA  00A3               	movwf	_level_bin+1
 10050  00CB                     l5090:	
 10051                           
 10052                           ;main.c: 153:                         LED_bin(level_bin);
 10053  00CB  0823               	movf	_level_bin+1,w
 10054  00CC  00BB               	movwf	LED_bin@value+1
 10055  00CD  0822               	movf	_level_bin,w
 10056  00CE  00BA               	movwf	LED_bin@value
 10057  00CF  3186  2655  3180   	fcall	_LED_bin
 10058  00D2                     l5092:	
 10059                           
 10060                           ;main.c: 154:                         lum_threshold = (level_bin > 2);
 10061  00D2  3000               	movlw	0
 10062  00D3  0020               	movlb	0	; select bank0
 10063  00D4  0223               	subwf	_level_bin+1,w
 10064  00D5  3003               	movlw	3
 10065  00D6  1903               	skipnz
 10066  00D7  0222               	subwf	_level_bin,w
 10067  00D8  1803               	skipnc
 10068  00D9  28DB               	goto	u2251
 10069  00DA  28DD               	goto	u2250
 10070  00DB                     u2251:	
 10071  00DB  3001               	movlw	1
 10072  00DC  28DE               	goto	u2260
 10073  00DD                     u2250:	
 10074  00DD  3000               	movlw	0
 10075  00DE                     u2260:	
 10076  00DE  00C7               	movwf	??_main
 10077  00DF  01C8               	clrf	??_main+1
 10078  00E0  0847               	movf	??_main,w
 10079  00E1  00A0               	movwf	_lum_threshold
 10080  00E2  0848               	movf	??_main+1,w
 10081  00E3  00A1               	movwf	_lum_threshold+1
 10082  00E4                     l5094:	
 10083                           
 10084                           ;main.c: 156:                         if(lum_threshold){
 10085  00E4  0820               	movf	_lum_threshold,w
 10086  00E5  0421               	iorwf	_lum_threshold+1,w
 10087  00E6  1903               	btfsc	3,2
 10088  00E7  28E9               	goto	u2271
 10089  00E8  28EA               	goto	u2270
 10090  00E9                     u2271:	
 10091  00E9  290C               	goto	l5110
 10092  00EA                     u2270:	
 10093  00EA                     l5096:	
 10094                           
 10095                           ;main.c: 157:                             if(alarm == 2){
 10096  00EA  3002               	movlw	2
 10097  00EB  062F               	xorwf	_alarm,w	;volatile
 10098  00EC  1D03               	btfss	3,2
 10099  00ED  28EF               	goto	u2281
 10100  00EE  28F0               	goto	u2280
 10101  00EF                     u2281:	
 10102  00EF  28FC               	goto	l5102
 10103  00F0                     u2280:	
 10104  00F0                     l5098:	
 10105                           
 10106                           ;main.c: 158:                                 duty_cycle +=1 ;
 10107  00F0  3001               	movlw	1
 10108  00F1  07A4               	addwf	_duty_cycle,f
 10109  00F2  3000               	movlw	0
 10110  00F3  3DA5               	addwfc	_duty_cycle+1,f
 10111  00F4                     l5100:	
 10112                           
 10113                           ;main.c: 159:                                 PWM6_LoadDutyValue(duty_cycle);
 10114  00F4  0825               	movf	_duty_cycle+1,w
 10115  00F5  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10116  00F6  0824               	movf	_duty_cycle,w
 10117  00F7  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10118  00F8  3186  2689  3180   	fcall	_PWM6_LoadDutyValue
 10119                           
 10120                           ;main.c: 160:                             }
 10121  00FB  28B2               	goto	l5084
 10122  00FC                     l5102:	
 10123  00FC  082F               	movf	_alarm,w	;volatile
 10124  00FD  1D03               	btfss	3,2
 10125  00FE  2900               	goto	u2291
 10126  00FF  2901               	goto	u2290
 10127  0100                     u2291:	
 10128  0100  28B2               	goto	l1169
 10129  0101                     u2290:	
 10130  0101                     l5104:	
 10131                           
 10132                           ;main.c: 162:                                 PIE0bits.TMR0IE = 1;
 10133  0101  002E               	movlb	14	; select bank14
 10134  0102  1696               	bsf	22,5	;volatile
 10135  0103                     l5106:	
 10136                           
 10137                           ;main.c: 163:                                 TMR0_StartTimer();
 10138  0103  318E  26FB  3180   	fcall	_TMR0_StartTimer
 10139  0106                     l5108:	
 10140                           
 10141                           ;main.c: 164:                                 alarm = 2 ;
 10142  0106  3002               	movlw	2
 10143  0107  0020               	movlb	0	; select bank0
 10144  0108  00C7               	movwf	??_main
 10145  0109  0847               	movf	??_main,w
 10146  010A  00AF               	movwf	_alarm	;volatile
 10147  010B  28B2               	goto	l5084
 10148  010C                     l5110:	
 10149                           
 10150                           ;main.c: 168:                             if(alarm == 2){
 10151  010C  3002               	movlw	2
 10152  010D  062F               	xorwf	_alarm,w	;volatile
 10153  010E  1D03               	btfss	3,2
 10154  010F  2911               	goto	u2301
 10155  0110  2912               	goto	u2300
 10156  0111                     u2301:	
 10157  0111  28B2               	goto	l5084
 10158  0112                     u2300:	
 10159  0112                     l5112:	
 10160                           
 10161                           ;main.c: 169:                                 PWM6_LoadDutyValue(0);
 10162  0112  3000               	movlw	0
 10163  0113  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10164  0114  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10165  0115  3186  2689  3180   	fcall	_PWM6_LoadDutyValue
 10166  0118                     l5114:	
 10167                           
 10168                           ;main.c: 170:                                 alarm = 0 ;
 10169  0118  0020               	movlb	0	; select bank0
 10170  0119  01AF               	clrf	_alarm	;volatile
 10171  011A  28B2               	goto	l5084
 10172  011B                     l5116:	
 10173  011B  0330               	decf	_config_mode,w	;volatile
 10174  011C  1D03               	btfss	3,2
 10175  011D  291F               	goto	u2311
 10176  011E  2920               	goto	u2310
 10177  011F                     u2311:	
 10178  011F  28B2               	goto	l5084
 10179  0120                     u2310:	
 10180  0120                     l5118:	
 10181                           
 10182                           ;main.c: 178:                       (PIE0bits.INTE = 0);
 10183  0120  002E               	movlb	14	; select bank14
 10184  0121  1016               	bcf	22,0	;volatile
 10185  0122                     l5120:	
 10186                           
 10187                           ;main.c: 179:                       config_routine();
 10188  0122  3182  2242  3180   	fcall	_config_routine
 10189  0125                     l5122:	
 10190                           
 10191                           ;main.c: 180:                       (PIE0bits.INTE = 1);
 10192  0125  002E               	movlb	14	; select bank14
 10193  0126  1416               	bsf	22,0	;volatile
 10194  0127  28B2               	goto	l5084
 10195  0128  3180  285B         	ljmp	start
 10196  012A                     __end_of_main:	
 10197                           
 10198                           	psect	text1
 10199  012A                     __ptext1:	
 10200 ;; *************** function _recoverData *****************
 10201 ;; Defined at:
 10202 ;;		line 11 in file "eeprom_rw.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, status,0, pclath, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;Total ram usage:        1 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    9
 10223 ;; This function calls:
 10224 ;;		_DATAEE_ReadByte
 10225 ;;		_DATAEE_WriteByte
 10226 ;;		_cksum
 10227 ;;		_cksum_w
 10228 ;;		_reset_recv
 10229 ;; This function is called by:
 10230 ;;		_main
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _recoverData
 10236  012A                     _recoverData:	
 10237  012A                     l4810:	
 10238                           ;incstack = 0
 10239                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10240                           
 10241                           
 10242                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10243  012A  30F5               	movlw	245
 10244  012B  0020               	movlb	0	; select bank0
 10245  012C  00BA               	movwf	DATAEE_ReadByte@bAdd
 10246  012D  30F0               	movlw	240
 10247  012E  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10248  012F  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10249  0132  3AAB               	xorlw	171
 10250  0133  1D03               	skipz
 10251  0134  2936               	goto	u1851
 10252  0135  2937               	goto	u1850
 10253  0136                     u1851:	
 10254  0136  298B               	goto	l4816
 10255  0137                     u1850:	
 10256  0137                     l4812:	
 10257                           
 10258                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10259  0137  3185  25DE  3181   	fcall	_cksum
 10260  013A  0020               	movlb	0	; select bank0
 10261  013B  00C6               	movwf	??_recoverData
 10262  013C  30FF               	movlw	255
 10263  013D  00BA               	movwf	DATAEE_ReadByte@bAdd
 10264  013E  30F0               	movlw	240
 10265  013F  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10266  0140  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10267  0143  0020               	movlb	0	; select bank0
 10268  0144  0646               	xorwf	??_recoverData,w
 10269  0145  1D03               	skipz
 10270  0146  2948               	goto	u1861
 10271  0147  2949               	goto	u1860
 10272  0148                     u1861:	
 10273  0148  298B               	goto	l4816
 10274  0149                     u1860:	
 10275  0149                     l4814:	
 10276                           
 10277                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10278  0149  30F6               	movlw	246
 10279  014A  00BA               	movwf	DATAEE_ReadByte@bAdd
 10280  014B  30F0               	movlw	240
 10281  014C  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10282  014D  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10283  0150  0020               	movlb	0	; select bank0
 10284  0151  00C6               	movwf	??_recoverData
 10285  0152  0846               	movf	??_recoverData,w
 10286  0153  00B6               	movwf	_clkh	;volatile
 10287                           
 10288                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10289  0154  30F7               	movlw	247
 10290  0155  00BA               	movwf	DATAEE_ReadByte@bAdd
 10291  0156  30F0               	movlw	240
 10292  0157  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10293  0158  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10294  015B  0020               	movlb	0	; select bank0
 10295  015C  00C6               	movwf	??_recoverData
 10296  015D  0846               	movf	??_recoverData,w
 10297  015E  00B5               	movwf	_clkm	;volatile
 10298                           
 10299                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10300  015F  30F8               	movlw	248
 10301  0160  00BA               	movwf	DATAEE_ReadByte@bAdd
 10302  0161  30F0               	movlw	240
 10303  0162  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10304  0163  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10305  0166  0020               	movlb	0	; select bank0
 10306  0167  00C6               	movwf	??_recoverData
 10307  0168  0846               	movf	??_recoverData,w
 10308  0169  00D5               	movwf	_nreg
 10309                           
 10310                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10311  016A  30F9               	movlw	249
 10312  016B  00BA               	movwf	DATAEE_ReadByte@bAdd
 10313  016C  30F0               	movlw	240
 10314  016D  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10315  016E  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10316  0171  0020               	movlb	0	; select bank0
 10317  0172  00C6               	movwf	??_recoverData
 10318  0173  0846               	movf	??_recoverData,w
 10319  0174  00AE               	movwf	_nreg_pt
 10320                           
 10321                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10322  0175  30FA               	movlw	250
 10323  0176  00BA               	movwf	DATAEE_ReadByte@bAdd
 10324  0177  30F0               	movlw	240
 10325  0178  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10326  0179  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10327  017C  0020               	movlb	0	; select bank0
 10328  017D  00C6               	movwf	??_recoverData
 10329  017E  0846               	movf	??_recoverData,w
 10330  017F  00D4               	movwf	_pmon
 10331                           
 10332                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10333  0180  30FB               	movlw	251
 10334  0181  00BA               	movwf	DATAEE_ReadByte@bAdd
 10335  0182  30F0               	movlw	240
 10336  0183  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10337  0184  3187  27B8  3181   	fcall	_DATAEE_ReadByte
 10338  0187  0020               	movlb	0	; select bank0
 10339  0188  00C6               	movwf	??_recoverData
 10340  0189  0846               	movf	??_recoverData,w
 10341  018A  00D3               	movwf	_tala
 10342  018B                     l4816:	
 10343                           
 10344                           ;eeprom_rw.c: 24:     reset_recv();
 10345  018B  3186  261D  3181   	fcall	_reset_recv
 10346  018E                     l4818:	
 10347                           
 10348                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10349  018E  30F5               	movlw	245
 10350  018F  0020               	movlb	0	; select bank0
 10351  0190  00C0               	movwf	DATAEE_WriteByte@bAdd
 10352  0191  30F0               	movlw	240
 10353  0192  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10354  0193  30AB               	movlw	171
 10355  0194  00C6               	movwf	??_recoverData
 10356  0195  0846               	movf	??_recoverData,w
 10357  0196  00C2               	movwf	DATAEE_WriteByte@bData
 10358  0197  3185  259A  3181   	fcall	_DATAEE_WriteByte
 10359  019A                     l4820:	
 10360                           
 10361                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10362  019A  30F8               	movlw	248
 10363  019B  0020               	movlb	0	; select bank0
 10364  019C  00C0               	movwf	DATAEE_WriteByte@bAdd
 10365  019D  30F0               	movlw	240
 10366  019E  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10367  019F  0855               	movf	_nreg,w
 10368  01A0  00C6               	movwf	??_recoverData
 10369  01A1  0846               	movf	??_recoverData,w
 10370  01A2  00C2               	movwf	DATAEE_WriteByte@bData
 10371  01A3  3185  259A  3181   	fcall	_DATAEE_WriteByte
 10372  01A6                     l4822:	
 10373                           
 10374                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10375  01A6  30FA               	movlw	250
 10376  01A7  0020               	movlb	0	; select bank0
 10377  01A8  00C0               	movwf	DATAEE_WriteByte@bAdd
 10378  01A9  30F0               	movlw	240
 10379  01AA  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10380  01AB  0854               	movf	_pmon,w
 10381  01AC  00C6               	movwf	??_recoverData
 10382  01AD  0846               	movf	??_recoverData,w
 10383  01AE  00C2               	movwf	DATAEE_WriteByte@bData
 10384  01AF  3185  259A  3181   	fcall	_DATAEE_WriteByte
 10385  01B2                     l4824:	
 10386                           
 10387                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10388  01B2  30FB               	movlw	251
 10389  01B3  0020               	movlb	0	; select bank0
 10390  01B4  00C0               	movwf	DATAEE_WriteByte@bAdd
 10391  01B5  30F0               	movlw	240
 10392  01B6  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10393  01B7  0853               	movf	_tala,w
 10394  01B8  00C6               	movwf	??_recoverData
 10395  01B9  0846               	movf	??_recoverData,w
 10396  01BA  00C2               	movwf	DATAEE_WriteByte@bData
 10397  01BB  3185  259A  3181   	fcall	_DATAEE_WriteByte
 10398  01BE                     l4826:	
 10399                           
 10400                           ;eeprom_rw.c: 31:     cksum_w();
 10401  01BE  3187  2798  3181   	fcall	_cksum_w
 10402  01C1                     l1469:	
 10403  01C1  0008               	return
 10404  01C2                     __end_of_recoverData:	
 10405                           
 10406                           	psect	text2
 10407  061D                     __ptext2:	
 10408 ;; *************** function _reset_recv *****************
 10409 ;; Defined at:
 10410 ;;		line 75 in file "eeprom_rw.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;		None
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  i               2   13[BANK0 ] unsigned int 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0, pclath, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;Total ram usage:        2 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    7
 10431 ;; This function calls:
 10432 ;;		_DATAEE_WriteByte
 10433 ;; This function is called by:
 10434 ;;		_recoverData
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _reset_recv
 10440  061D                     _reset_recv:	
 10441  061D                     l4674:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10444                           
 10445                           
 10446                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10447  061D  30F5               	movlw	245
 10448  061E  0020               	movlb	0	; select bank0
 10449  061F  00C4               	movwf	reset_recv@i
 10450  0620  30F0               	movlw	240
 10451  0621  00C5               	movwf	reset_recv@i+1
 10452  0622                     l4678:	
 10453                           
 10454                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10455  0622  0845               	movf	reset_recv@i+1,w
 10456  0623  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10457  0624  0844               	movf	reset_recv@i,w
 10458  0625  00C0               	movwf	DATAEE_WriteByte@bAdd
 10459  0626  01C2               	clrf	DATAEE_WriteByte@bData
 10460  0627  3185  259A  3186   	fcall	_DATAEE_WriteByte
 10461  062A                     l4680:	
 10462  062A  3001               	movlw	1
 10463  062B  0020               	movlb	0	; select bank0
 10464  062C  07C4               	addwf	reset_recv@i,f
 10465  062D  3000               	movlw	0
 10466  062E  3DC5               	addwfc	reset_recv@i+1,f
 10467  062F                     l4682:	
 10468  062F  30F1               	movlw	241
 10469  0630  0245               	subwf	reset_recv@i+1,w
 10470  0631  3000               	movlw	0
 10471  0632  1903               	skipnz
 10472  0633  0244               	subwf	reset_recv@i,w
 10473  0634  1C03               	skipc
 10474  0635  2E37               	goto	u1761
 10475  0636  2E38               	goto	u1760
 10476  0637                     u1761:	
 10477  0637  2E22               	goto	l4678
 10478  0638                     u1760:	
 10479  0638                     l1496:	
 10480  0638  0008               	return
 10481  0639                     __end_of_reset_recv:	
 10482                           
 10483                           	psect	text3
 10484  0798                     __ptext3:	
 10485 ;; *************** function _cksum_w *****************
 10486 ;; Defined at:
 10487 ;;		line 61 in file "eeprom_rw.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0, pclath, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;Total ram usage:        1 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    8
 10508 ;; This function calls:
 10509 ;;		_DATAEE_WriteByte
 10510 ;;		_cksum
 10511 ;; This function is called by:
 10512 ;;		_recoverData
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           
 10517                           ;psect for function _cksum_w
 10518  0798                     _cksum_w:	
 10519  0798                     l4684:	
 10520                           ;incstack = 0
 10521                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10522                           
 10523                           
 10524                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10525  0798  30FF               	movlw	255
 10526  0799  0020               	movlb	0	; select bank0
 10527  079A  00C0               	movwf	DATAEE_WriteByte@bAdd
 10528  079B  30F0               	movlw	240
 10529  079C  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10530  079D  3185  25DE  3187   	fcall	_cksum
 10531  07A0  0020               	movlb	0	; select bank0
 10532  07A1  00C4               	movwf	??_cksum_w
 10533  07A2  0844               	movf	??_cksum_w,w
 10534  07A3  00C2               	movwf	DATAEE_WriteByte@bData
 10535  07A4  3185  259A  3187   	fcall	_DATAEE_WriteByte
 10536  07A7                     l1486:	
 10537  07A7  0008               	return
 10538  07A8                     __end_of_cksum_w:	
 10539                           
 10540                           	psect	text4
 10541  05DE                     __ptext4:	
 10542 ;; *************** function _cksum *****************
 10543 ;; Defined at:
 10544 ;;		line 66 in file "eeprom_rw.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;		None
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  i               2    7[BANK0 ] unsigned int 
 10549 ;;  res             1    6[BANK0 ] unsigned char 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      unsigned char 
 10552 ;; Registers used:
 10553 ;;		wreg, status,2, status,0, pclath, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;Total ram usage:        4 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:    7
 10566 ;; This function calls:
 10567 ;;		_DATAEE_ReadByte
 10568 ;; This function is called by:
 10569 ;;		_recoverData
 10570 ;;		_cksum_w
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _cksum
 10576  05DE                     _cksum:	
 10577  05DE                     l4220:	
 10578                           ;incstack = 0
 10579                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 10580                           
 10581                           
 10582                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 10583  05DE  0020               	movlb	0	; select bank0
 10584  05DF  01BD               	clrf	cksum@res
 10585  05E0                     l4222:	
 10586                           
 10587                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 10588  05E0  30F5               	movlw	245
 10589  05E1  00BE               	movwf	cksum@i
 10590  05E2  30F0               	movlw	240
 10591  05E3  00BF               	movwf	cksum@i+1
 10592  05E4                     l4228:	
 10593                           
 10594                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 10595  05E4  083F               	movf	cksum@i+1,w
 10596  05E5  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10597  05E6  083E               	movf	cksum@i,w
 10598  05E7  00BA               	movwf	DATAEE_ReadByte@bAdd
 10599  05E8  3187  27B8  3185   	fcall	_DATAEE_ReadByte
 10600  05EB  0020               	movlb	0	; select bank0
 10601  05EC  00BC               	movwf	??_cksum
 10602  05ED  083C               	movf	??_cksum,w
 10603  05EE  07BD               	addwf	cksum@res,f
 10604  05EF                     l4230:	
 10605                           
 10606                           ;eeprom_rw.c: 71:     }
 10607  05EF  3001               	movlw	1
 10608  05F0  07BE               	addwf	cksum@i,f
 10609  05F1  3000               	movlw	0
 10610  05F2  3DBF               	addwfc	cksum@i+1,f
 10611  05F3                     l4232:	
 10612  05F3  30F0               	movlw	240
 10613  05F4  023F               	subwf	cksum@i+1,w
 10614  05F5  30FF               	movlw	255
 10615  05F6  1903               	skipnz
 10616  05F7  023E               	subwf	cksum@i,w
 10617  05F8  1C03               	skipc
 10618  05F9  2DFB               	goto	u1561
 10619  05FA  2DFC               	goto	u1560
 10620  05FB                     u1561:	
 10621  05FB  2DE4               	goto	l4228
 10622  05FC                     u1560:	
 10623  05FC                     l4234:	
 10624                           
 10625                           ;eeprom_rw.c: 72:     return res;
 10626  05FC  083D               	movf	cksum@res,w
 10627  05FD                     l1491:	
 10628  05FD  0008               	return
 10629  05FE                     __end_of_cksum:	
 10630                           
 10631                           	psect	text5
 10632  07B8                     __ptext5:	
 10633 ;; *************** function _DATAEE_ReadByte *****************
 10634 ;; Defined at:
 10635 ;;		line 202 in file "mcc_generated_files/memory.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  bAdd            2    3[BANK0 ] unsigned short 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      unsigned char 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        2 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    6
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_recoverData
 10660 ;;		_cksum
 10661 ;;		_read_ring
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _DATAEE_ReadByte
 10667  07B8                     _DATAEE_ReadByte:	
 10668  07B8                     l3960:	
 10669                           ;incstack = 0
 10670                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 10671                           
 10672                           
 10673                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 10674  07B8  0020               	movlb	0	; select bank0
 10675  07B9  083B               	movf	DATAEE_ReadByte@bAdd+1,w
 10676  07BA  0030               	movlb	16	; select bank16
 10677  07BB  009B               	movwf	27	;volatile
 10678  07BC                     l3962:	
 10679                           
 10680                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 10681  07BC  0020               	movlb	0	; select bank0
 10682  07BD  083A               	movf	DATAEE_ReadByte@bAdd,w
 10683  07BE  0030               	movlb	16	; select bank16
 10684  07BF  009A               	movwf	26	;volatile
 10685  07C0                     l3964:	
 10686                           
 10687                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 10688  07C0  171E               	bsf	30,6	;volsfr
 10689  07C1                     l3966:	
 10690                           
 10691                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 10692  07C1  141E               	bsf	30,0	;volsfr
 10693  07C2                     l3968:	
 10694                           
 10695                           ;mcc_generated_files/memory.c: 208:     __nop();
 10696  07C2  0000               	nop
 10697  07C3                     l3970:	
 10698                           
 10699                           ;mcc_generated_files/memory.c: 209:     __nop();
 10700  07C3  0000               	nop
 10701  07C4                     l3972:	
 10702                           
 10703                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 10704  07C4  0030               	movlb	16	; select bank16
 10705  07C5  081C               	movf	28,w	;volatile
 10706  07C6                     l963:	
 10707  07C6  0008               	return
 10708  07C7                     __end_of_DATAEE_ReadByte:	
 10709                           
 10710                           	psect	text6
 10711  059A                     __ptext6:	
 10712 ;; *************** function _DATAEE_WriteByte *****************
 10713 ;; Defined at:
 10714 ;;		line 180 in file "mcc_generated_files/memory.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  bAdd            2    9[BANK0 ] unsigned short 
 10717 ;;  bData           1   11[BANK0 ] unsigned char 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10729 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;Total ram usage:        4 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    6
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_recoverData
 10740 ;;		_cksum_w
 10741 ;;		_reset_recv
 10742 ;;		_push_ring
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           
 10747                           ;psect for function _DATAEE_WriteByte
 10748  059A                     _DATAEE_WriteByte:	
 10749  059A                     l4112:	
 10750                           ;incstack = 0
 10751                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 10752                           
 10753                           
 10754                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 10755  059A  3000               	movlw	0
 10756  059B  1B8B               	btfsc	11,7	;volatile
 10757  059C  3001               	movlw	1
 10758  059D  0020               	movlb	0	; select bank0
 10759  059E  00C3               	movwf	DATAEE_WriteByte@GIEBitValue
 10760                           
 10761                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 10762  059F  0841               	movf	DATAEE_WriteByte@bAdd+1,w
 10763  05A0  0030               	movlb	16	; select bank16
 10764  05A1  009B               	movwf	27	;volatile
 10765  05A2                     l4114:	
 10766                           
 10767                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 10768  05A2  0020               	movlb	0	; select bank0
 10769  05A3  0840               	movf	DATAEE_WriteByte@bAdd,w
 10770  05A4  0030               	movlb	16	; select bank16
 10771  05A5  009A               	movwf	26	;volatile
 10772  05A6                     l4116:	
 10773                           
 10774                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 10775  05A6  0020               	movlb	0	; select bank0
 10776  05A7  0842               	movf	DATAEE_WriteByte@bData,w
 10777  05A8  0030               	movlb	16	; select bank16
 10778  05A9  009C               	movwf	28	;volatile
 10779  05AA                     l4118:	
 10780                           
 10781                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 10782  05AA  171E               	bsf	30,6	;volsfr
 10783  05AB                     l4120:	
 10784                           
 10785                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 10786  05AB  151E               	bsf	30,2	;volsfr
 10787  05AC                     l4122:	
 10788                           
 10789                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 10790  05AC  138B               	bcf	11,7	;volatile
 10791  05AD                     l4124:	
 10792                           
 10793                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 10794  05AD  3055               	movlw	85
 10795  05AE  009F               	movwf	31	;volsfr
 10796  05AF                     l4126:	
 10797                           
 10798                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 10799  05AF  30AA               	movlw	170
 10800  05B0  009F               	movwf	31	;volsfr
 10801  05B1                     l4128:	
 10802                           
 10803                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 10804  05B1  149E               	bsf	30,1	;volsfr
 10805  05B2                     l957:	
 10806                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 10807                           
 10808                           
 10809                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 10810  05B2  189E               	btfsc	30,1	;volsfr
 10811  05B3  2DB5               	goto	u1481
 10812  05B4  2DB6               	goto	u1480
 10813  05B5                     u1481:	
 10814  05B5  2DB2               	goto	l957
 10815  05B6                     u1480:	
 10816  05B6                     l959:	
 10817                           
 10818                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 10819  05B6  111E               	bcf	30,2	;volsfr
 10820  05B7                     l4130:	
 10821                           
 10822                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 10823  05B7  0020               	movlb	0	; select bank0
 10824  05B8  0C43               	rrf	DATAEE_WriteByte@GIEBitValue,w
 10825  05B9  1C03               	skipc
 10826  05BA  138B               	bcf	11,7	;volatile
 10827  05BB  1803               	skipnc
 10828  05BC  178B               	bsf	11,7	;volatile
 10829  05BD                     l960:	
 10830  05BD  0008               	return
 10831  05BE                     __end_of_DATAEE_WriteByte:	
 10832                           
 10833                           	psect	text7
 10834  0242                     __ptext7:	
 10835 ;; *************** function _config_routine *****************
 10836 ;; Defined at:
 10837 ;;		line 193 in file "main.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  select_mode     2   14[BANK0 ] unsigned int 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        3 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:    9
 10858 ;; This function calls:
 10859 ;;		_all_LED
 10860 ;;		_checkDebounceSW1
 10861 ;;		_clock_field
 10862 ;;		_mod1_LED
 10863 ;;		_mod2_LED
 10864 ;;		_mod3_LED
 10865 ;;		_mod4_LED
 10866 ;; This function is called by:
 10867 ;;		_main
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _config_routine
 10873  0242                     _config_routine:	
 10874  0242                     l4842:	
 10875                           ;incstack = 0
 10876                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10877                           
 10878                           
 10879                           ;main.c: 195:     unsigned int select_mode =0;
 10880  0242  0020               	movlb	0	; select bank0
 10881  0243  01C5               	clrf	config_routine@select_mode
 10882  0244  01C6               	clrf	config_routine@select_mode+1
 10883  0245                     l4844:	
 10884                           
 10885                           ;main.c: 196:       last_ms = clkms;
 10886  0245  087D               	movf	_clkms,w	;volatile
 10887  0246  00C4               	movwf	??_config_routine
 10888  0247  0844               	movf	??_config_routine,w
 10889  0248  00B3               	movwf	_last_ms
 10890  0249                     l4846:	
 10891                           
 10892                           ;main.c: 200:                 if(select_mode == 0){
 10893  0249  0845               	movf	config_routine@select_mode,w
 10894  024A  0446               	iorwf	config_routine@select_mode+1,w
 10895  024B  1D03               	btfss	3,2
 10896  024C  2A4E               	goto	u1881
 10897  024D  2A4F               	goto	u1880
 10898  024E                     u1881:	
 10899  024E  2A52               	goto	l4850
 10900  024F                     u1880:	
 10901  024F                     l4848:	
 10902                           
 10903                           ;main.c: 201:                         all_LED();}
 10904  024F  3182  22BE  3182   	fcall	_all_LED
 10905  0252                     l4850:	
 10906                           
 10907                           ;main.c: 203:                 if(!PORTBbits.RB4){
 10908  0252  0020               	movlb	0	; select bank0
 10909  0253  1A0D               	btfsc	13,4	;volatile
 10910  0254  2A56               	goto	u1891
 10911  0255  2A57               	goto	u1890
 10912  0256                     u1891:	
 10913  0256  2A92               	goto	l4872
 10914  0257                     u1890:	
 10915  0257                     l4852:	
 10916                           
 10917                           ;main.c: 204:                     if(checkDebounceSW1()){
 10918  0257  3184  2400  3182   	fcall	_checkDebounceSW1
 10919  025A  3A00               	xorlw	0
 10920  025B  1903               	skipnz
 10921  025C  2A5E               	goto	u1901
 10922  025D  2A5F               	goto	u1900
 10923  025E                     u1901:	
 10924  025E  2A92               	goto	l4872
 10925  025F                     u1900:	
 10926  025F                     l4854:	
 10927                           
 10928                           ;main.c: 206:                         select_mode +=1;
 10929  025F  3001               	movlw	1
 10930  0260  0020               	movlb	0	; select bank0
 10931  0261  07C5               	addwf	config_routine@select_mode,f
 10932  0262  3000               	movlw	0
 10933  0263  3DC6               	addwfc	config_routine@select_mode+1,f
 10934                           
 10935                           ;main.c: 208:                         switch(select_mode){
 10936  0264  2A7A               	goto	l4868
 10937  0265                     l4856:	
 10938  0265  318F  27B9  3182   	fcall	_mod1_LED
 10939  0268  2A8D               	goto	l4870
 10940  0269                     l4858:	
 10941  0269  318F  27AF  3182   	fcall	_mod2_LED
 10942  026C  2A8D               	goto	l4870
 10943  026D                     l4860:	
 10944  026D  318F  27C4  3182   	fcall	_mod3_LED
 10945  0270  2A8D               	goto	l4870
 10946  0271                     l4862:	
 10947  0271  318F  27CF  3182   	fcall	_mod4_LED
 10948  0274  2A8D               	goto	l4870
 10949  0275                     l4864:	
 10950  0275  01C5               	clrf	config_routine@select_mode
 10951  0276  01C6               	clrf	config_routine@select_mode+1
 10952  0277  01B0               	clrf	_config_mode	;volatile
 10953  0278  01AF               	clrf	_alarm	;volatile
 10954                           
 10955                           ;main.c: 214:                             break;
 10956  0279  2A8D               	goto	l4870
 10957  027A                     l4868:	
 10958                           
 10959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10960                           ; Switch size 1, requested type "simple"
 10961                           ; Number of cases is 1, Range of values is 0 to 0
 10962                           ; switch strategies available:
 10963                           ; Name         Instructions Cycles
 10964                           ; simple_byte            4     3 (average)
 10965                           ; direct_byte            8     6 (fixed)
 10966                           ; jumptable            260     6 (fixed)
 10967                           ;	Chosen strategy is simple_byte
 10968  027A  0846               	movf	config_routine@select_mode+1,w
 10969  027B  3A00               	xorlw	0	; case 0
 10970  027C  1903               	skipnz
 10971  027D  2A7F               	goto	l5358
 10972  027E  2A75               	goto	l4864
 10973  027F                     l5358:	
 10974                           
 10975                           ; Switch size 1, requested type "simple"
 10976                           ; Number of cases is 4, Range of values is 1 to 4
 10977                           ; switch strategies available:
 10978                           ; Name         Instructions Cycles
 10979                           ; simple_byte           13     7 (average)
 10980                           ; direct_byte           17     9 (fixed)
 10981                           ; jumptable            263     9 (fixed)
 10982                           ;	Chosen strategy is simple_byte
 10983  027F  0845               	movf	config_routine@select_mode,w
 10984  0280  3A01               	xorlw	1	; case 1
 10985  0281  1903               	skipnz
 10986  0282  2A65               	goto	l4856
 10987  0283  3A03               	xorlw	3	; case 2
 10988  0284  1903               	skipnz
 10989  0285  2A69               	goto	l4858
 10990  0286  3A01               	xorlw	1	; case 3
 10991  0287  1903               	skipnz
 10992  0288  2A6D               	goto	l4860
 10993  0289  3A07               	xorlw	7	; case 4
 10994  028A  1903               	skipnz
 10995  028B  2A71               	goto	l4862
 10996  028C  2A75               	goto	l4864
 10997  028D                     l4870:	
 10998                           
 10999                           ;main.c: 217:                         last_ms = clkms;
 11000  028D  087D               	movf	_clkms,w	;volatile
 11001  028E  0020               	movlb	0	; select bank0
 11002  028F  00C4               	movwf	??_config_routine
 11003  0290  0844               	movf	??_config_routine,w
 11004  0291  00B3               	movwf	_last_ms
 11005  0292                     l4872:	
 11006                           
 11007                           ;main.c: 223:                 if(!PORTCbits.RC5){
 11008  0292  0020               	movlb	0	; select bank0
 11009  0293  1A8E               	btfsc	14,5	;volatile
 11010  0294  2A96               	goto	u1911
 11011  0295  2A97               	goto	u1910
 11012  0296                     u1911:	
 11013  0296  2AB3               	goto	l4888
 11014  0297                     u1910:	
 11015  0297  2AA0               	goto	l4886
 11016  0298                     l4876:	
 11017  0298  318F  27B9  3182   	fcall	_mod1_LED
 11018  029B  2AB3               	goto	l4888
 11019  029C                     l4878:	
 11020  029C  3181  21C2  3182   	fcall	_clock_field
 11021  029F  2AB3               	goto	l4888
 11022  02A0                     l4886:	
 11023                           
 11024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11025                           ; Switch size 1, requested type "simple"
 11026                           ; Number of cases is 1, Range of values is 0 to 0
 11027                           ; switch strategies available:
 11028                           ; Name         Instructions Cycles
 11029                           ; simple_byte            4     3 (average)
 11030                           ; direct_byte            8     6 (fixed)
 11031                           ; jumptable            260     6 (fixed)
 11032                           ;	Chosen strategy is simple_byte
 11033  02A0  0846               	movf	config_routine@select_mode+1,w
 11034  02A1  3A00               	xorlw	0	; case 0
 11035  02A2  1903               	skipnz
 11036  02A3  2AA5               	goto	l5360
 11037  02A4  2AB3               	goto	l4888
 11038  02A5                     l5360:	
 11039                           
 11040                           ; Switch size 1, requested type "simple"
 11041                           ; Number of cases is 4, Range of values is 1 to 4
 11042                           ; switch strategies available:
 11043                           ; Name         Instructions Cycles
 11044                           ; simple_byte           13     7 (average)
 11045                           ; direct_byte           17     9 (fixed)
 11046                           ; jumptable            263     9 (fixed)
 11047                           ;	Chosen strategy is simple_byte
 11048  02A5  0845               	movf	config_routine@select_mode,w
 11049  02A6  3A01               	xorlw	1	; case 1
 11050  02A7  1903               	skipnz
 11051  02A8  2A98               	goto	l4876
 11052  02A9  3A03               	xorlw	3	; case 2
 11053  02AA  1903               	skipnz
 11054  02AB  2A9C               	goto	l4878
 11055  02AC  3A01               	xorlw	1	; case 3
 11056  02AD  1903               	skipnz
 11057  02AE  2A98               	goto	l4876
 11058  02AF  3A07               	xorlw	7	; case 4
 11059  02B0  1903               	skipnz
 11060  02B1  2A98               	goto	l4876
 11061  02B2  2AB3               	goto	l4888
 11062  02B3                     l4888:	
 11063                           
 11064                           ;main.c: 236:                    _delay((unsigned long)((1)*(1000000/4000.0)));
 11065  02B3  3053               	movlw	83
 11066  02B4                     u2367:	
 11067  02B4  0B89               	decfsz	9,f
 11068  02B5  2AB4               	goto	u2367
 11069  02B6  0000               	nop
 11070  02B7                     l4890:	
 11071                           
 11072                           ;main.c: 238:             }while(config_mode == 1);
 11073  02B7  0020               	movlb	0	; select bank0
 11074  02B8  0330               	decf	_config_mode,w	;volatile
 11075  02B9  1903               	btfsc	3,2
 11076  02BA  2ABC               	goto	u1921
 11077  02BB  2ABD               	goto	u1920
 11078  02BC                     u1921:	
 11079  02BC  2A49               	goto	l4846
 11080  02BD                     u1920:	
 11081  02BD                     l1206:	
 11082  02BD  0008               	return
 11083  02BE                     __end_of_config_routine:	
 11084                           
 11085                           	psect	text8
 11086  01C2                     __ptext8:	
 11087 ;; *************** function _clock_field *****************
 11088 ;; Defined at:
 11089 ;;		line 251 in file "main.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;		None
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  select          2   11[BANK0 ] unsigned int 
 11094 ;; Return value:  Size  Location     Type
 11095 ;;                  1    wreg      void 
 11096 ;; Registers used:
 11097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11098 ;; Tracked objects:
 11099 ;;		On entry : 0/0
 11100 ;;		On exit  : 0/0
 11101 ;;		Unchanged: 0/0
 11102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;Total ram usage:        3 bytes
 11108 ;; Hardware stack levels used:    1
 11109 ;; Hardware stack levels required when called:    8
 11110 ;; This function calls:
 11111 ;;		_all_LED
 11112 ;;		_checkDebounceSW1
 11113 ;;		_mod1_LED
 11114 ;;		_mod2_LED
 11115 ;;		_mod3_LED
 11116 ;;		_mod4_LED
 11117 ;; This function is called by:
 11118 ;;		_config_routine
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           
 11123                           ;psect for function _clock_field
 11124  01C2                     _clock_field:	
 11125  01C2                     l4588:	
 11126                           ;incstack = 0
 11127                           ; Regs used in _clock_field: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11128                           
 11129                           
 11130                           ;main.c: 252:      unsigned int select =0;
 11131  01C2  0020               	movlb	0	; select bank0
 11132  01C3  01C2               	clrf	clock_field@select
 11133  01C4  01C3               	clrf	clock_field@select+1
 11134  01C5                     l4590:	
 11135                           
 11136                           ;main.c: 253:        last_ms = clkms;
 11137  01C5  087D               	movf	_clkms,w	;volatile
 11138  01C6  00C1               	movwf	??_clock_field
 11139  01C7  0841               	movf	??_clock_field,w
 11140  01C8  00B3               	movwf	_last_ms
 11141  01C9                     l4592:	
 11142  01C9                     l4594:	
 11143                           ;main.c: 254:      if (select == 0){
 11144                           
 11145                           
 11146                           ;main.c: 255:      all_LED();}
 11147  01C9  3182  22BE  3181   	fcall	_all_LED
 11148  01CC                     l4596:	
 11149                           
 11150                           ;main.c: 258:         if(!PORTBbits.RB4){
 11151  01CC  0020               	movlb	0	; select bank0
 11152  01CD  1A0D               	btfsc	13,4	;volatile
 11153  01CE  29D0               	goto	u1661
 11154  01CF  29D1               	goto	u1660
 11155  01D0                     u1661:	
 11156  01D0  2A0C               	goto	l4620
 11157  01D1                     u1660:	
 11158  01D1                     l4598:	
 11159                           
 11160                           ;main.c: 259:             select = +1;
 11161  01D1  3001               	movlw	1
 11162  01D2  00C2               	movwf	clock_field@select
 11163  01D3  3000               	movlw	0
 11164  01D4  00C3               	movwf	clock_field@select+1
 11165  01D5                     l4600:	
 11166                           
 11167                           ;main.c: 260:                 if(checkDebounceSW1()){
 11168  01D5  3184  2400  3181   	fcall	_checkDebounceSW1
 11169  01D8  3A00               	xorlw	0
 11170  01D9  1903               	skipnz
 11171  01DA  29DC               	goto	u1671
 11172  01DB  29DD               	goto	u1670
 11173  01DC                     u1671:	
 11174  01DC  2A0C               	goto	l4620
 11175  01DD                     u1670:	
 11176  01DD  29F4               	goto	l4616
 11177  01DE                     l4604:	
 11178  01DE  318F  27B9  3181   	fcall	_mod1_LED
 11179  01E1  2A07               	goto	l4618
 11180  01E2                     l4606:	
 11181  01E2  318F  27AF  3181   	fcall	_mod2_LED
 11182  01E5  2A07               	goto	l4618
 11183  01E6                     l4608:	
 11184  01E6  318F  27C4  3181   	fcall	_mod3_LED
 11185  01E9  2A07               	goto	l4618
 11186  01EA                     l4610:	
 11187  01EA  318F  27CF  3181   	fcall	_mod4_LED
 11188  01ED  2A07               	goto	l4618
 11189  01EE                     l4612:	
 11190  01EE  30FF               	movlw	255
 11191  01EF  0020               	movlb	0	; select bank0
 11192  01F0  00C2               	movwf	clock_field@select
 11193  01F1  30FF               	movlw	255
 11194  01F2  00C3               	movwf	clock_field@select+1
 11195  01F3  2A07               	goto	l4618
 11196  01F4                     l4616:	
 11197                           
 11198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11199                           ; Switch size 1, requested type "simple"
 11200                           ; Number of cases is 1, Range of values is 0 to 0
 11201                           ; switch strategies available:
 11202                           ; Name         Instructions Cycles
 11203                           ; simple_byte            4     3 (average)
 11204                           ; direct_byte            8     6 (fixed)
 11205                           ; jumptable            260     6 (fixed)
 11206                           ;	Chosen strategy is simple_byte
 11207  01F4  3000               	movlw	0
 11208  01F5  3A00               	xorlw	0	; case 0
 11209  01F6  1903               	skipnz
 11210  01F7  29F9               	goto	l5362
 11211  01F8  29EE               	goto	l4612
 11212  01F9                     l5362:	
 11213                           
 11214                           ; Switch size 1, requested type "simple"
 11215                           ; Number of cases is 4, Range of values is 1 to 4
 11216                           ; switch strategies available:
 11217                           ; Name         Instructions Cycles
 11218                           ; simple_byte           13     7 (average)
 11219                           ; direct_byte           17     9 (fixed)
 11220                           ; jumptable            263     9 (fixed)
 11221                           ;	Chosen strategy is simple_byte
 11222  01F9  3001               	movlw	1
 11223  01FA  3A01               	xorlw	1	; case 1
 11224  01FB  1903               	skipnz
 11225  01FC  29DE               	goto	l4604
 11226  01FD  3A03               	xorlw	3	; case 2
 11227  01FE  1903               	skipnz
 11228  01FF  29E2               	goto	l4606
 11229  0200  3A01               	xorlw	1	; case 3
 11230  0201  1903               	skipnz
 11231  0202  29E6               	goto	l4608
 11232  0203  3A07               	xorlw	7	; case 4
 11233  0204  1903               	skipnz
 11234  0205  29EA               	goto	l4610
 11235  0206  29EE               	goto	l4612
 11236  0207                     l4618:	
 11237                           
 11238                           ;main.c: 269:                     last_ms = clkms;
 11239  0207  087D               	movf	_clkms,w	;volatile
 11240  0208  0020               	movlb	0	; select bank0
 11241  0209  00C1               	movwf	??_clock_field
 11242  020A  0841               	movf	??_clock_field,w
 11243  020B  00B3               	movwf	_last_ms
 11244  020C                     l4620:	
 11245                           
 11246                           ;main.c: 274:          if(!PORTCbits.RC5){
 11247  020C  0020               	movlb	0	; select bank0
 11248  020D  1A8E               	btfsc	14,5	;volatile
 11249  020E  2A10               	goto	u1681
 11250  020F  2A11               	goto	u1680
 11251  0210                     u1681:	
 11252  0210  2A34               	goto	l4638
 11253  0211                     u1680:	
 11254  0211  2A21               	goto	l4636
 11255  0212                     l4624:	
 11256  0212  318F  27B9  3181   	fcall	_mod1_LED
 11257  0215  2A34               	goto	l4638
 11258  0216                     l4626:	
 11259  0216  318F  27AF  3181   	fcall	_mod2_LED
 11260  0219  2A34               	goto	l4638
 11261  021A                     l4628:	
 11262  021A  318F  27C4  3181   	fcall	_mod3_LED
 11263  021D  2A34               	goto	l4638
 11264  021E                     l4632:	
 11265  021E  01C2               	clrf	clock_field@select
 11266  021F  01C3               	clrf	clock_field@select+1
 11267  0220  2A34               	goto	l4638
 11268  0221                     l4636:	
 11269                           
 11270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11271                           ; Switch size 1, requested type "simple"
 11272                           ; Number of cases is 1, Range of values is 0 to 0
 11273                           ; switch strategies available:
 11274                           ; Name         Instructions Cycles
 11275                           ; simple_byte            4     3 (average)
 11276                           ; direct_byte            8     6 (fixed)
 11277                           ; jumptable            260     6 (fixed)
 11278                           ;	Chosen strategy is simple_byte
 11279  0221  0843               	movf	clock_field@select+1,w
 11280  0222  3A00               	xorlw	0	; case 0
 11281  0223  1903               	skipnz
 11282  0224  2A26               	goto	l5364
 11283  0225  2A1E               	goto	l4632
 11284  0226                     l5364:	
 11285                           
 11286                           ; Switch size 1, requested type "simple"
 11287                           ; Number of cases is 4, Range of values is 1 to 4
 11288                           ; switch strategies available:
 11289                           ; Name         Instructions Cycles
 11290                           ; simple_byte           13     7 (average)
 11291                           ; direct_byte           17     9 (fixed)
 11292                           ; jumptable            263     9 (fixed)
 11293                           ;	Chosen strategy is simple_byte
 11294  0226  0842               	movf	clock_field@select,w
 11295  0227  3A01               	xorlw	1	; case 1
 11296  0228  1903               	skipnz
 11297  0229  2A12               	goto	l4624
 11298  022A  3A03               	xorlw	3	; case 2
 11299  022B  1903               	skipnz
 11300  022C  2A16               	goto	l4626
 11301  022D  3A01               	xorlw	1	; case 3
 11302  022E  1903               	skipnz
 11303  022F  2A1A               	goto	l4628
 11304  0230  3A07               	xorlw	7	; case 4
 11305  0231  1903               	skipnz
 11306  0232  2A12               	goto	l4624
 11307  0233  2A1E               	goto	l4632
 11308  0234                     l4638:	
 11309                           
 11310                           ;main.c: 287:         _delay((unsigned long)((1)*(1000000/4000.0)));
 11311  0234  3053               	movlw	83
 11312  0235                     u2377:	
 11313  0235  0B89               	decfsz	9,f
 11314  0236  2A35               	goto	u2377
 11315  0237  0000               	nop
 11316  0238                     l4640:	
 11317                           
 11318                           ;main.c: 288:     }while(select != -1);
 11319  0238  0020               	movlb	0	; select bank0
 11320  0239  0A42               	incf	clock_field@select,w
 11321  023A  1D03               	skipz
 11322  023B  2A40               	goto	u1691
 11323  023C  0A43               	incf	clock_field@select+1,w
 11324  023D  1D03               	btfss	3,2
 11325  023E  2A40               	goto	u1691
 11326  023F  2A41               	goto	u1690
 11327  0240                     u1691:	
 11328  0240  29CC               	goto	l4596
 11329  0241                     u1690:	
 11330  0241                     l1229:	
 11331  0241  0008               	return
 11332  0242                     __end_of_clock_field:	
 11333                           
 11334                           	psect	text9
 11335  0FCF                     __ptext9:	
 11336 ;; *************** function _mod4_LED *****************
 11337 ;; Defined at:
 11338 ;;		line 395 in file "main.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;		None
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;		None
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      void 
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0, pclath, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;Total ram usage:        0 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    7
 11359 ;; This function calls:
 11360 ;;		_PWM6_LoadDutyValue
 11361 ;; This function is called by:
 11362 ;;		_config_routine
 11363 ;;		_clock_field
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           
 11368                           ;psect for function _mod4_LED
 11369  0FCF                     _mod4_LED:	
 11370  0FCF                     l4214:	
 11371                           ;incstack = 0
 11372                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 11373                           
 11374                           
 11375                           ;main.c: 396:     LATA = 0;
 11376  0FCF  0020               	movlb	0	; select bank0
 11377  0FD0  0196               	clrf	22	;volatile
 11378  0FD1                     l4216:	
 11379                           
 11380                           ;main.c: 397:     PWM6_LoadDutyValue(0);
 11381  0FD1  3000               	movlw	0
 11382  0FD2  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11383  0FD3  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11384  0FD4  3186  2689  318F   	fcall	_PWM6_LoadDutyValue
 11385  0FD7                     l4218:	
 11386  0FD7  0020               	movlb	0	; select bank0
 11387  0FD8  1616               	bsf	22,4	;volatile
 11388  0FD9                     l1286:	
 11389  0FD9  0008               	return
 11390  0FDA                     __end_of_mod4_LED:	
 11391                           
 11392                           	psect	text10
 11393  0FC4                     __ptext10:	
 11394 ;; *************** function _mod3_LED *****************
 11395 ;; Defined at:
 11396 ;;		line 388 in file "main.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    7
 11417 ;; This function calls:
 11418 ;;		_PWM6_LoadDutyValue
 11419 ;; This function is called by:
 11420 ;;		_config_routine
 11421 ;;		_clock_field
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function _mod3_LED
 11427  0FC4                     _mod3_LED:	
 11428  0FC4                     l4208:	
 11429                           ;incstack = 0
 11430                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 11431                           
 11432                           
 11433                           ;main.c: 389:     LATA = 0;
 11434  0FC4  0020               	movlb	0	; select bank0
 11435  0FC5  0196               	clrf	22	;volatile
 11436  0FC6                     l4210:	
 11437                           
 11438                           ;main.c: 390:     PWM6_LoadDutyValue(0);
 11439  0FC6  3000               	movlw	0
 11440  0FC7  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11441  0FC8  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11442  0FC9  3186  2689  318F   	fcall	_PWM6_LoadDutyValue
 11443  0FCC                     l4212:	
 11444  0FCC  0020               	movlb	0	; select bank0
 11445  0FCD  1696               	bsf	22,5	;volatile
 11446  0FCE                     l1281:	
 11447  0FCE  0008               	return
 11448  0FCF                     __end_of_mod3_LED:	
 11449                           
 11450                           	psect	text11
 11451  0FAF                     __ptext11:	
 11452 ;; *************** function _mod2_LED *****************
 11453 ;; Defined at:
 11454 ;;		line 383 in file "main.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0, pclath, cstack
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:        0 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    7
 11475 ;; This function calls:
 11476 ;;		_PWM6_LoadDutyValue
 11477 ;; This function is called by:
 11478 ;;		_config_routine
 11479 ;;		_clock_field
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           
 11484                           ;psect for function _mod2_LED
 11485  0FAF                     _mod2_LED:	
 11486  0FAF                     l4204:	
 11487                           ;incstack = 0
 11488                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 11489                           
 11490                           
 11491                           ;main.c: 384:     LATA = 0;
 11492  0FAF  0020               	movlb	0	; select bank0
 11493  0FB0  0196               	clrf	22	;volatile
 11494  0FB1                     l4206:	
 11495                           
 11496                           ;main.c: 385:     PWM6_LoadDutyValue(1023);
 11497  0FB1  30FF               	movlw	255
 11498  0FB2  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11499  0FB3  3003               	movlw	3
 11500  0FB4  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11501  0FB5  3186  2689  318F   	fcall	_PWM6_LoadDutyValue
 11502  0FB8                     l1276:	
 11503  0FB8  0008               	return
 11504  0FB9                     __end_of_mod2_LED:	
 11505                           
 11506                           	psect	text12
 11507  0FB9                     __ptext12:	
 11508 ;; *************** function _mod1_LED *****************
 11509 ;; Defined at:
 11510 ;;		line 376 in file "main.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;		None
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;		None
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, status,0, pclath, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;Total ram usage:        0 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    7
 11531 ;; This function calls:
 11532 ;;		_PWM6_LoadDutyValue
 11533 ;; This function is called by:
 11534 ;;		_config_routine
 11535 ;;		_clock_field
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           
 11540                           ;psect for function _mod1_LED
 11541  0FB9                     _mod1_LED:	
 11542  0FB9                     l4198:	
 11543                           ;incstack = 0
 11544                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 11545                           
 11546                           
 11547                           ;main.c: 377:     LATA = 0;
 11548  0FB9  0020               	movlb	0	; select bank0
 11549  0FBA  0196               	clrf	22	;volatile
 11550  0FBB                     l4200:	
 11551                           
 11552                           ;main.c: 378:     PWM6_LoadDutyValue(0);
 11553  0FBB  3000               	movlw	0
 11554  0FBC  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11555  0FBD  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11556  0FBE  3186  2689  318F   	fcall	_PWM6_LoadDutyValue
 11557  0FC1                     l4202:	
 11558  0FC1  0020               	movlb	0	; select bank0
 11559  0FC2  1796               	bsf	22,7	;volatile
 11560  0FC3                     l1273:	
 11561  0FC3  0008               	return
 11562  0FC4                     __end_of_mod1_LED:	
 11563                           
 11564                           	psect	text13
 11565  0400                     __ptext13:	
 11566 ;; *************** function _checkDebounceSW1 *****************
 11567 ;; Defined at:
 11568 ;;		line 401 in file "main.c"
 11569 ;; Parameters:    Size  Location     Type
 11570 ;;		None
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;		None
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  1    wreg      unsigned char 
 11575 ;; Registers used:
 11576 ;;		wreg, status,2, status,0
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;Total ram usage:        7 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:    6
 11589 ;; This function calls:
 11590 ;;		Nothing
 11591 ;; This function is called by:
 11592 ;;		_config_routine
 11593 ;;		_clock_field
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597                           
 11598                           ;psect for function _checkDebounceSW1
 11599  0400                     _checkDebounceSW1:	
 11600  0400                     l4150:	
 11601                           ;incstack = 0
 11602                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 11603                           
 11604                           
 11605                           ;main.c: 404:     if(clkms - last_ms < 0){
 11606  0400  087D               	movf	_clkms,w	;volatile
 11607  0401  0020               	movlb	0	; select bank0
 11608  0402  00BA               	movwf	??_checkDebounceSW1
 11609  0403  01BB               	clrf	??_checkDebounceSW1+1
 11610  0404  083B               	movf	??_checkDebounceSW1+1,w
 11611  0405  00BD               	movwf	??_checkDebounceSW1+3
 11612  0406  0833               	movf	_last_ms,w
 11613  0407  023A               	subwf	??_checkDebounceSW1,w
 11614  0408  00BC               	movwf	??_checkDebounceSW1+2
 11615  0409  1C03               	skipc
 11616  040A  03BD               	decf	??_checkDebounceSW1+3,f
 11617  040B  1FBD               	btfss	??_checkDebounceSW1+3,7
 11618  040C  2C0E               	goto	u1531
 11619  040D  2C0F               	goto	u1530
 11620  040E                     u1531:	
 11621  040E  2C2E               	goto	l4158
 11622  040F                     u1530:	
 11623  040F                     l4152:	
 11624                           
 11625                           ;main.c: 406:         if ((200 - last_ms)+ clkms > 80 ){
 11626  040F  087D               	movf	_clkms,w	;volatile
 11627  0410  00BA               	movwf	??_checkDebounceSW1
 11628  0411  01BB               	clrf	??_checkDebounceSW1+1
 11629  0412  083B               	movf	??_checkDebounceSW1+1,w
 11630  0413  00BD               	movwf	??_checkDebounceSW1+3
 11631  0414  0833               	movf	_last_ms,w
 11632  0415  023A               	subwf	??_checkDebounceSW1,w
 11633  0416  00BC               	movwf	??_checkDebounceSW1+2
 11634  0417  1C03               	skipc
 11635  0418  03BD               	decf	??_checkDebounceSW1+3,f
 11636  0419  083C               	movf	??_checkDebounceSW1+2,w
 11637  041A  3EC8               	addlw	200
 11638  041B  00BE               	movwf	??_checkDebounceSW1+4
 11639  041C  3000               	movlw	0
 11640  041D  3D3D               	addwfc	??_checkDebounceSW1+3,w
 11641  041E  00BF               	movwf	??_checkDebounceSW1+5
 11642  041F  083F               	movf	??_checkDebounceSW1+5,w
 11643  0420  3A80               	xorlw	128
 11644  0421  00C0               	movwf	??_checkDebounceSW1+6
 11645  0422  3080               	movlw	128
 11646  0423  0240               	subwf	??_checkDebounceSW1+6,w
 11647  0424  1D03               	skipz
 11648  0425  2C28               	goto	u1545
 11649  0426  3051               	movlw	81
 11650  0427  023E               	subwf	??_checkDebounceSW1+4,w
 11651  0428                     u1545:	
 11652  0428  1C03               	skipc
 11653  0429  2C2B               	goto	u1541
 11654  042A  2C2C               	goto	u1540
 11655  042B                     u1541:	
 11656  042B  2C2E               	goto	l4158
 11657  042C                     u1540:	
 11658  042C                     l4154:	
 11659                           
 11660                           ;main.c: 407:             return 1;
 11661  042C  3001               	movlw	1
 11662  042D  2C47               	goto	l1291
 11663  042E                     l4158:	
 11664                           
 11665                           ;main.c: 411:     if(clkms - last_ms < 80){
 11666  042E  087D               	movf	_clkms,w	;volatile
 11667  042F  0020               	movlb	0	; select bank0
 11668  0430  00BA               	movwf	??_checkDebounceSW1
 11669  0431  01BB               	clrf	??_checkDebounceSW1+1
 11670  0432  083B               	movf	??_checkDebounceSW1+1,w
 11671  0433  00BD               	movwf	??_checkDebounceSW1+3
 11672  0434  0833               	movf	_last_ms,w
 11673  0435  023A               	subwf	??_checkDebounceSW1,w
 11674  0436  00BC               	movwf	??_checkDebounceSW1+2
 11675  0437  1C03               	skipc
 11676  0438  03BD               	decf	??_checkDebounceSW1+3,f
 11677  0439  083D               	movf	??_checkDebounceSW1+3,w
 11678  043A  3A80               	xorlw	128
 11679  043B  00BE               	movwf	??_checkDebounceSW1+4
 11680  043C  3080               	movlw	128
 11681  043D  023E               	subwf	??_checkDebounceSW1+4,w
 11682  043E  1D03               	skipz
 11683  043F  2C42               	goto	u1555
 11684  0440  3050               	movlw	80
 11685  0441  023C               	subwf	??_checkDebounceSW1+2,w
 11686  0442                     u1555:	
 11687  0442  1803               	skipnc
 11688  0443  2C45               	goto	u1551
 11689  0444  2C46               	goto	u1550
 11690  0445                     u1551:	
 11691  0445  2C2C               	goto	l4154
 11692  0446                     u1550:	
 11693  0446                     l4160:	
 11694                           
 11695                           ;main.c: 412:         return 0;
 11696  0446  3000               	movlw	0
 11697  0447                     l1291:	
 11698  0447  0008               	return
 11699  0448                     __end_of_checkDebounceSW1:	
 11700                           
 11701                           	psect	text14
 11702  02BE                     __ptext14:	
 11703 ;; *************** function _all_LED *****************
 11704 ;; Defined at:
 11705 ;;		line 293 in file "main.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, status,2, status,0, pclath, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;Total ram usage:        1 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:    7
 11726 ;; This function calls:
 11727 ;;		_PWM6_LoadDutyValue
 11728 ;; This function is called by:
 11729 ;;		_config_routine
 11730 ;;		_clock_field
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           
 11735                           ;psect for function _all_LED
 11736  02BE                     _all_LED:	
 11737  02BE                     l1232:	
 11738                           ;incstack = 0
 11739                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 11740                           ;main.c: 295:        do { LATAbits.LATA7 = 1; } while(0);
 11741                           
 11742  02BE  0020               	movlb	0	; select bank0
 11743  02BF  1796               	bsf	22,7	;volatile
 11744  02C0                     l4174:	
 11745                           
 11746                           ;main.c: 296:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11747  02C0  3021               	movlw	33
 11748  02C1  0020               	movlb	0	; select bank0
 11749  02C2  00BE               	movwf	??_all_LED
 11750  02C3  3076               	movlw	118
 11751  02C4                     u2387:	
 11752  02C4  0B89               	decfsz	9,f
 11753  02C5  2AC4               	goto	u2387
 11754  02C6  0BBE               	decfsz	??_all_LED,f
 11755  02C7  2AC4               	goto	u2387
 11756  02C8  0000               	nop
 11757  02C9                     l4176:	
 11758  02C9  0020               	movlb	0	; select bank0
 11759  02CA  1396               	bcf	22,7	;volatile
 11760  02CB                     l1235:	
 11761                           
 11762                           ;main.c: 298:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11763  02CB  3021               	movlw	33
 11764  02CC  0020               	movlb	0	; select bank0
 11765  02CD  00BE               	movwf	??_all_LED
 11766  02CE  3076               	movlw	118
 11767  02CF                     u2397:	
 11768  02CF  0B89               	decfsz	9,f
 11769  02D0  2ACF               	goto	u2397
 11770  02D1  0BBE               	decfsz	??_all_LED,f
 11771  02D2  2ACF               	goto	u2397
 11772  02D3  0000               	nop
 11773  02D4                     l4178:	
 11774                           
 11775                           ;main.c: 300:        PWM6_LoadDutyValue(1023);
 11776  02D4  30FF               	movlw	255
 11777  02D5  0020               	movlb	0	; select bank0
 11778  02D6  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11779  02D7  3003               	movlw	3
 11780  02D8  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11781  02D9  3186  2689  3182   	fcall	_PWM6_LoadDutyValue
 11782  02DC                     l4180:	
 11783                           
 11784                           ;main.c: 301:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11785  02DC  3021               	movlw	33
 11786  02DD  0020               	movlb	0	; select bank0
 11787  02DE  00BE               	movwf	??_all_LED
 11788  02DF  3076               	movlw	118
 11789  02E0                     u2407:	
 11790  02E0  0B89               	decfsz	9,f
 11791  02E1  2AE0               	goto	u2407
 11792  02E2  0BBE               	decfsz	??_all_LED,f
 11793  02E3  2AE0               	goto	u2407
 11794  02E4  0000               	nop
 11795                           
 11796                           ;main.c: 303:         PWM6_LoadDutyValue(0);
 11797  02E5  3000               	movlw	0
 11798  02E6  0020               	movlb	0	; select bank0
 11799  02E7  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11800  02E8  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11801  02E9  3186  2689  3182   	fcall	_PWM6_LoadDutyValue
 11802  02EC                     l4182:	
 11803                           
 11804                           ;main.c: 304:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11805  02EC  3021               	movlw	33
 11806  02ED  0020               	movlb	0	; select bank0
 11807  02EE  00BE               	movwf	??_all_LED
 11808  02EF  3076               	movlw	118
 11809  02F0                     u2417:	
 11810  02F0  0B89               	decfsz	9,f
 11811  02F1  2AF0               	goto	u2417
 11812  02F2  0BBE               	decfsz	??_all_LED,f
 11813  02F3  2AF0               	goto	u2417
 11814  02F4  0000               	nop
 11815  02F5                     l4184:	
 11816  02F5  0020               	movlb	0	; select bank0
 11817  02F6  1696               	bsf	22,5	;volatile
 11818  02F7                     l4186:	
 11819                           
 11820                           ;main.c: 306:          _delay((unsigned long)((100)*(1000000/4000.0)));
 11821  02F7  3021               	movlw	33
 11822  02F8  0020               	movlb	0	; select bank0
 11823  02F9  00BE               	movwf	??_all_LED
 11824  02FA  3076               	movlw	118
 11825  02FB                     u2427:	
 11826  02FB  0B89               	decfsz	9,f
 11827  02FC  2AFB               	goto	u2427
 11828  02FD  0BBE               	decfsz	??_all_LED,f
 11829  02FE  2AFB               	goto	u2427
 11830  02FF  0000               	nop
 11831  0300                     l4188:	
 11832  0300  0020               	movlb	0	; select bank0
 11833  0301  1296               	bcf	22,5	;volatile
 11834  0302                     l4190:	
 11835                           
 11836                           ;main.c: 308:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11837  0302  3021               	movlw	33
 11838  0303  0020               	movlb	0	; select bank0
 11839  0304  00BE               	movwf	??_all_LED
 11840  0305  3076               	movlw	118
 11841  0306                     u2437:	
 11842  0306  0B89               	decfsz	9,f
 11843  0307  2B06               	goto	u2437
 11844  0308  0BBE               	decfsz	??_all_LED,f
 11845  0309  2B06               	goto	u2437
 11846  030A  0000               	nop
 11847  030B                     l4192:	
 11848  030B  0020               	movlb	0	; select bank0
 11849  030C  1616               	bsf	22,4	;volatile
 11850  030D                     l4194:	
 11851                           
 11852                           ;main.c: 310:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11853  030D  3021               	movlw	33
 11854  030E  0020               	movlb	0	; select bank0
 11855  030F  00BE               	movwf	??_all_LED
 11856  0310  3076               	movlw	118
 11857  0311                     u2447:	
 11858  0311  0B89               	decfsz	9,f
 11859  0312  2B11               	goto	u2447
 11860  0313  0BBE               	decfsz	??_all_LED,f
 11861  0314  2B11               	goto	u2447
 11862  0315  0000               	nop
 11863  0316                     l4196:	
 11864  0316  0020               	movlb	0	; select bank0
 11865  0317  1216               	bcf	22,4	;volatile
 11866  0318                     l1244:	
 11867  0318  0008               	return
 11868  0319                     __end_of_all_LED:	
 11869                           
 11870                           	psect	text15
 11871  0689                     __ptext15:	
 11872 ;; *************** function _PWM6_LoadDutyValue *****************
 11873 ;; Defined at:
 11874 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2, status,0
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;Total ram usage:        4 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    6
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;;		_all_LED
 11900 ;;		_mod1_LED
 11901 ;;		_mod2_LED
 11902 ;;		_mod3_LED
 11903 ;;		_mod4_LED
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _PWM6_LoadDutyValue
 11909  0689                     _PWM6_LoadDutyValue:	
 11910  0689                     l3958:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11913                           
 11914                           
 11915                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11916  0689  0020               	movlb	0	; select bank0
 11917  068A  083B               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11918  068B  00BD               	movwf	??_PWM6_LoadDutyValue+1
 11919  068C  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 11920  068D  00BC               	movwf	??_PWM6_LoadDutyValue
 11921  068E  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 11922  068F  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 11923  0690  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 11924  0691  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 11925  0692  083C               	movf	??_PWM6_LoadDutyValue,w
 11926  0693  0027               	movlb	7	; select bank7
 11927  0694  008D               	movwf	13	;volatile
 11928                           
 11929                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 11930  0695  0020               	movlb	0	; select bank0
 11931  0696  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 11932  0697  3903               	andlw	3
 11933  0698  00BC               	movwf	??_PWM6_LoadDutyValue
 11934  0699  3005               	movlw	5
 11935  069A                     u1425:	
 11936  069A  35BC               	lslf	??_PWM6_LoadDutyValue,f
 11937  069B  3EFF               	addlw	-1
 11938  069C  1D03               	skipz
 11939  069D  2E9A               	goto	u1425
 11940  069E  353C               	lslf	??_PWM6_LoadDutyValue,w
 11941  069F  0027               	movlb	7	; select bank7
 11942  06A0  008C               	movwf	12	;volatile
 11943  06A1                     l916:	
 11944  06A1  0008               	return
 11945  06A2                     __end_of_PWM6_LoadDutyValue:	
 11946                           
 11947                           	psect	text16
 11948  0EFB                     __ptext16:	
 11949 ;; *************** function _TMR0_StartTimer *****************
 11950 ;; Defined at:
 11951 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;		None
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;		None
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		None
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;Total ram usage:        0 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; Hardware stack levels required when called:    6
 11972 ;; This function calls:
 11973 ;;		Nothing
 11974 ;; This function is called by:
 11975 ;;		_main
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           
 11980                           ;psect for function _TMR0_StartTimer
 11981  0EFB                     _TMR0_StartTimer:	
 11982  0EFB                     l4840:	
 11983                           ;incstack = 0
 11984                           ; Regs used in _TMR0_StartTimer: []
 11985                           
 11986                           
 11987                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 11988  0EFB  0020               	movlb	0	; select bank0
 11989  0EFC  179E               	bsf	30,7	;volatile
 11990  0EFD                     l1522:	
 11991  0EFD  0008               	return
 11992  0EFE                     __end_of_TMR0_StartTimer:	
 11993                           
 11994                           	psect	text17
 11995  0639                     __ptext17:	
 11996 ;; *************** function _SYSTEM_Initialize *****************
 11997 ;; Defined at:
 11998 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;		None
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;		None
 12003 ;; Return value:  Size  Location     Type
 12004 ;;                  1    wreg      void 
 12005 ;; Registers used:
 12006 ;;		wreg, status,2, status,0, pclath, cstack
 12007 ;; Tracked objects:
 12008 ;;		On entry : 0/0
 12009 ;;		On exit  : 0/0
 12010 ;;		Unchanged: 0/0
 12011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;Total ram usage:        0 bytes
 12017 ;; Hardware stack levels used:    1
 12018 ;; Hardware stack levels required when called:    8
 12019 ;; This function calls:
 12020 ;;		_ADCC_Initialize
 12021 ;;		_EXT_INT_Initialize
 12022 ;;		_OSCILLATOR_Initialize
 12023 ;;		_PIN_MANAGER_Initialize
 12024 ;;		_PMD_Initialize
 12025 ;;		_PWM6_Initialize
 12026 ;;		_TMR0_Initialize
 12027 ;;		_TMR1_Initialize
 12028 ;;		_TMR2_Initialize
 12029 ;; This function is called by:
 12030 ;;		_main
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _SYSTEM_Initialize
 12036  0639                     _SYSTEM_Initialize:	
 12037  0639                     l4792:	
 12038                           ;incstack = 0
 12039                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12040                           
 12041                           
 12042                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12043  0639  318F  278C  3186   	fcall	_PMD_Initialize
 12044  063C                     l4794:	
 12045                           
 12046                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12047  063C  3183  23B7  3186   	fcall	_PIN_MANAGER_Initialize
 12048  063F                     l4796:	
 12049                           
 12050                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12051  063F  318F  27A6  3186   	fcall	_OSCILLATOR_Initialize
 12052  0642                     l4798:	
 12053                           
 12054                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 12055  0642  3187  27F3  3186   	fcall	_PWM6_Initialize
 12056  0645                     l4800:	
 12057                           
 12058                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12059  0645  3187  2702  3186   	fcall	_ADCC_Initialize
 12060  0648                     l4802:	
 12061                           
 12062                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 12063  0648  3186  26BB  3186   	fcall	_TMR2_Initialize
 12064  064B                     l4804:	
 12065                           
 12066                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12067  064B  3187  27E5  3186   	fcall	_EXT_INT_Initialize
 12068  064E                     l4806:	
 12069                           
 12070                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 12071  064E  3185  25FE  3186   	fcall	_TMR1_Initialize
 12072  0651                     l4808:	
 12073                           
 12074                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 12075  0651  3187  272E  3186   	fcall	_TMR0_Initialize
 12076  0654                     l439:	
 12077  0654  0008               	return
 12078  0655                     __end_of_SYSTEM_Initialize:	
 12079                           
 12080                           	psect	text18
 12081  06BB                     __ptext18:	
 12082 ;; *************** function _TMR2_Initialize *****************
 12083 ;; Defined at:
 12084 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, pclath, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;Total ram usage:        0 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    7
 12105 ;; This function calls:
 12106 ;;		_TMR2_SetInterruptHandler
 12107 ;; This function is called by:
 12108 ;;		_SYSTEM_Initialize
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           
 12113                           ;psect for function _TMR2_Initialize
 12114  06BB                     _TMR2_Initialize:	
 12115  06BB                     l4508:	
 12116                           ;incstack = 0
 12117                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12118                           
 12119                           
 12120                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 12121  06BB  3001               	movlw	1
 12122  06BC  0025               	movlb	5	; select bank5
 12123  06BD  0090               	movwf	16	;volatile
 12124                           
 12125                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 12126  06BE  3020               	movlw	32
 12127  06BF  008F               	movwf	15	;volatile
 12128  06C0                     l4510:	
 12129                           
 12130                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12131  06C0  0191               	clrf	17	;volatile
 12132  06C1                     l4512:	
 12133                           
 12134                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 12135  06C1  309B               	movlw	155
 12136  06C2  008D               	movwf	13	;volatile
 12137                           
 12138                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12139  06C3  018C               	clrf	12	;volatile
 12140  06C4                     l4514:	
 12141                           
 12142                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 12143  06C4  002E               	movlb	14	; select bank14
 12144  06C5  1090               	bcf	16,1	;volatile
 12145  06C6                     l4516:	
 12146                           
 12147                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 12148  06C6  149A               	bsf	26,1	;volatile
 12149  06C7                     l4518:	
 12150                           
 12151                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12152  06C7  30DD               	movlw	low _TMR2_DefaultInterruptHandler
 12153  06C8  0020               	movlb	0	; select bank0
 12154  06C9  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12155  06CA  300E               	movlw	high _TMR2_DefaultInterruptHandler
 12156  06CB  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12157  06CC  318F  2752  3186   	fcall	_TMR2_SetInterruptHandler
 12158  06CF                     l4520:	
 12159                           
 12160                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 12161  06CF  30B1               	movlw	177
 12162  06D0  0025               	movlb	5	; select bank5
 12163  06D1  008E               	movwf	14	;volatile
 12164  06D2                     l998:	
 12165  06D2  0008               	return
 12166  06D3                     __end_of_TMR2_Initialize:	
 12167                           
 12168                           	psect	text19
 12169  0F52                     __ptext19:	
 12170 ;; *************** function _TMR2_SetInterruptHandler *****************
 12171 ;; Defined at:
 12172 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12175 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;Total ram usage:        2 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    6
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_TMR2_Initialize
 12198 ;;		_main
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           
 12202                           
 12203                           ;psect for function _TMR2_SetInterruptHandler
 12204  0F52                     _TMR2_SetInterruptHandler:	
 12205  0F52                     l4132:	
 12206                           ;incstack = 0
 12207                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12208                           
 12209                           
 12210                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 12211  0F52  0020               	movlb	0	; select bank0
 12212  0F53  083B               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12213  0F54  00CC               	movwf	_TMR2_InterruptHandler+1
 12214  0F55  083A               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12215  0F56  00CB               	movwf	_TMR2_InterruptHandler
 12216  0F57                     l1041:	
 12217  0F57  0008               	return
 12218  0F58                     __end_of_TMR2_SetInterruptHandler:	
 12219                           
 12220                           	psect	text20
 12221  05FE                     __ptext20:	
 12222 ;; *************** function _TMR1_Initialize *****************
 12223 ;; Defined at:
 12224 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;		None
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, status,2, status,0, pclath, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;Total ram usage:        0 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:    7
 12245 ;; This function calls:
 12246 ;;		_TMR1_SetInterruptHandler
 12247 ;; This function is called by:
 12248 ;;		_SYSTEM_Initialize
 12249 ;; This function uses a non-reentrant model
 12250 ;;
 12251                           
 12252                           
 12253                           ;psect for function _TMR1_Initialize
 12254  05FE                     _TMR1_Initialize:	
 12255  05FE                     l4522:	
 12256                           ;incstack = 0
 12257                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12258                           
 12259                           
 12260                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12261  05FE  0024               	movlb	4	; select bank4
 12262  05FF  018F               	clrf	15	;volatile
 12263                           
 12264                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12265  0600  0190               	clrf	16	;volatile
 12266  0601                     l4524:	
 12267                           
 12268                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12269  0601  3004               	movlw	4
 12270  0602  0091               	movwf	17	;volatile
 12271  0603                     l4526:	
 12272                           
 12273                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 12274  0603  30E1               	movlw	225
 12275  0604  008D               	movwf	13	;volatile
 12276  0605                     l4528:	
 12277                           
 12278                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 12279  0605  30BA               	movlw	186
 12280  0606  008C               	movwf	12	;volatile
 12281  0607                     l4530:	
 12282                           
 12283                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12284  0607  080D               	movf	13,w	;volatile
 12285  0608  0020               	movlb	0	; select bank0
 12286  0609  00D0               	movwf	_timer1ReloadVal+1	;volatile
 12287  060A  0024               	movlb	4	; select bank4
 12288  060B  080C               	movf	12,w	;volatile
 12289  060C  0020               	movlb	0	; select bank0
 12290  060D  00CF               	movwf	_timer1ReloadVal	;volatile
 12291  060E                     l4532:	
 12292                           
 12293                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 12294  060E  002E               	movlb	14	; select bank14
 12295  060F  1010               	bcf	16,0	;volatile
 12296  0610                     l4534:	
 12297                           
 12298                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12299  0610  141A               	bsf	26,0	;volatile
 12300  0611                     l4536:	
 12301                           
 12302                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12303  0611  30DC               	movlw	low _TMR1_DefaultInterruptHandler
 12304  0612  0020               	movlb	0	; select bank0
 12305  0613  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12306  0614  300E               	movlw	high _TMR1_DefaultInterruptHandler
 12307  0615  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12308  0616  318F  274C  3185   	fcall	_TMR1_SetInterruptHandler
 12309  0619                     l4538:	
 12310                           
 12311                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 12312  0619  3015               	movlw	21
 12313  061A  0024               	movlb	4	; select bank4
 12314  061B  008E               	movwf	14	;volatile
 12315  061C                     l869:	
 12316  061C  0008               	return
 12317  061D                     __end_of_TMR1_Initialize:	
 12318                           
 12319                           	psect	text21
 12320  0F4C                     __ptext21:	
 12321 ;; *************** function _TMR1_SetInterruptHandler *****************
 12322 ;; Defined at:
 12323 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12326 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;Total ram usage:        2 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    6
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_TMR1_Initialize
 12349 ;;		_main
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           
 12354                           ;psect for function _TMR1_SetInterruptHandler
 12355  0F4C                     _TMR1_SetInterruptHandler:	
 12356  0F4C                     l4110:	
 12357                           ;incstack = 0
 12358                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12359                           
 12360                           
 12361                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 12362  0F4C  0020               	movlb	0	; select bank0
 12363  0F4D  083B               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12364  0F4E  00CE               	movwf	_TMR1_InterruptHandler+1
 12365  0F4F  083A               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12366  0F50  00CD               	movwf	_TMR1_InterruptHandler
 12367  0F51                     l899:	
 12368  0F51  0008               	return
 12369  0F52                     __end_of_TMR1_SetInterruptHandler:	
 12370                           
 12371                           	psect	text22
 12372  072E                     __ptext22:	
 12373 ;; *************** function _TMR0_Initialize *****************
 12374 ;; Defined at:
 12375 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		wreg, status,2, status,0, pclath, cstack
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;Total ram usage:        0 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:    7
 12396 ;; This function calls:
 12397 ;;		_TMR0_SetInterruptHandler
 12398 ;; This function is called by:
 12399 ;;		_SYSTEM_Initialize
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           
 12404                           ;psect for function _TMR0_Initialize
 12405  072E                     _TMR0_Initialize:	
 12406  072E                     l4540:	
 12407                           ;incstack = 0
 12408                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12409                           
 12410                           
 12411                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 12412  072E  3095               	movlw	149
 12413  072F  0020               	movlb	0	; select bank0
 12414  0730  009F               	movwf	31	;volatile
 12415                           
 12416                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 12417  0731  30F1               	movlw	241
 12418  0732  009D               	movwf	29	;volatile
 12419  0733                     l4542:	
 12420                           
 12421                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12422  0733  019C               	clrf	28	;volatile
 12423  0734                     l4544:	
 12424                           
 12425                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12426  0734  002E               	movlb	14	; select bank14
 12427  0735  128C               	bcf	12,5	;volatile
 12428  0736                     l4546:	
 12429                           
 12430                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12431  0736  1696               	bsf	22,5	;volatile
 12432  0737                     l4548:	
 12433                           
 12434                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12435  0737  30DB               	movlw	low _TMR0_DefaultInterruptHandler
 12436  0738  0020               	movlb	0	; select bank0
 12437  0739  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12438  073A  300E               	movlw	high _TMR0_DefaultInterruptHandler
 12439  073B  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12440  073C  318F  2746  3187   	fcall	_TMR0_SetInterruptHandler
 12441  073F                     l4550:	
 12442                           
 12443                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 12444  073F  300B               	movlw	11
 12445  0740  0020               	movlb	0	; select bank0
 12446  0741  009E               	movwf	30	;volatile
 12447  0742                     l1519:	
 12448  0742  0008               	return
 12449  0743                     __end_of_TMR0_Initialize:	
 12450                           
 12451                           	psect	text23
 12452  0F46                     __ptext23:	
 12453 ;; *************** function _TMR0_SetInterruptHandler *****************
 12454 ;; Defined at:
 12455 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12458 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        2 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    6
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_main
 12481 ;;		_TMR0_Initialize
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           
 12486                           ;psect for function _TMR0_SetInterruptHandler
 12487  0F46                     _TMR0_SetInterruptHandler:	
 12488  0F46                     l4172:	
 12489                           ;incstack = 0
 12490                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12491                           
 12492                           
 12493                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 12494  0F46  0020               	movlb	0	; select bank0
 12495  0F47  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12496  0F48  00CA               	movwf	_TMR0_InterruptHandler+1
 12497  0F49  083A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12498  0F4A  00C9               	movwf	_TMR0_InterruptHandler
 12499  0F4B                     l1541:	
 12500  0F4B  0008               	return
 12501  0F4C                     __end_of_TMR0_SetInterruptHandler:	
 12502                           
 12503                           	psect	text24
 12504  07F3                     __ptext24:	
 12505 ;; *************** function _PWM6_Initialize *****************
 12506 ;; Defined at:
 12507 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;		None
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;Total ram usage:        0 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:    6
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_SYSTEM_Initialize
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           
 12536                           ;psect for function _PWM6_Initialize
 12537  07F3                     _PWM6_Initialize:	
 12538  07F3                     l4498:	
 12539                           ;incstack = 0
 12540                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12541                           
 12542                           
 12543                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12544  07F3  3080               	movlw	128
 12545  07F4  0027               	movlb	7	; select bank7
 12546  07F5  008E               	movwf	14	;volatile
 12547                           
 12548                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 12549  07F6  303E               	movlw	62
 12550  07F7  008D               	movwf	13	;volatile
 12551                           
 12552                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12553  07F8  3040               	movlw	64
 12554  07F9  008C               	movwf	12	;volatile
 12555  07FA                     l4500:	
 12556                           
 12557                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12558  07FA  0024               	movlb	4	; select bank4
 12559  07FB  081F               	movf	31,w	;volatile
 12560  07FC  39F3               	andlw	-13
 12561  07FD  3804               	iorlw	4
 12562  07FE  009F               	movwf	31	;volatile
 12563  07FF                     l913:	
 12564  07FF  0008               	return
 12565  0800                     __end_of_PWM6_Initialize:	
 12566                           
 12567                           	psect	text25
 12568  0F8C                     __ptext25:	
 12569 ;; *************** function _PMD_Initialize *****************
 12570 ;; Defined at:
 12571 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;		None
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;		None
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  1    wreg      void 
 12578 ;; Registers used:
 12579 ;;		status,2
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;Total ram usage:        0 bytes
 12590 ;; Hardware stack levels used:    1
 12591 ;; Hardware stack levels required when called:    6
 12592 ;; This function calls:
 12593 ;;		Nothing
 12594 ;; This function is called by:
 12595 ;;		_SYSTEM_Initialize
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599                           
 12600                           ;psect for function _PMD_Initialize
 12601  0F8C                     _PMD_Initialize:	
 12602  0F8C                     l4434:	
 12603                           ;incstack = 0
 12604                           ; Regs used in _PMD_Initialize: [status,2]
 12605                           
 12606                           
 12607                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12608  0F8C  002F               	movlb	15	; select bank15
 12609  0F8D  0196               	clrf	22	;volatile
 12610                           
 12611                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12612  0F8E  0197               	clrf	23	;volatile
 12613                           
 12614                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12615  0F8F  0198               	clrf	24	;volatile
 12616                           
 12617                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12618  0F90  0199               	clrf	25	;volatile
 12619                           
 12620                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12621  0F91  019A               	clrf	26	;volatile
 12622                           
 12623                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12624  0F92  019B               	clrf	27	;volatile
 12625  0F93                     l445:	
 12626  0F93  0008               	return
 12627  0F94                     __end_of_PMD_Initialize:	
 12628                           
 12629                           	psect	text26
 12630  03B7                     __ptext26:	
 12631 ;; *************** function _PIN_MANAGER_Initialize *****************
 12632 ;; Defined at:
 12633 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;		None
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;		None
 12638 ;; Return value:  Size  Location     Type
 12639 ;;                  1    wreg      void 
 12640 ;; Registers used:
 12641 ;;		wreg, status,2
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;Total ram usage:        0 bytes
 12652 ;; Hardware stack levels used:    1
 12653 ;; Hardware stack levels required when called:    6
 12654 ;; This function calls:
 12655 ;;		Nothing
 12656 ;; This function is called by:
 12657 ;;		_SYSTEM_Initialize
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           
 12662                           ;psect for function _PIN_MANAGER_Initialize
 12663  03B7                     _PIN_MANAGER_Initialize:	
 12664  03B7                     l4436:	
 12665                           ;incstack = 0
 12666                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12667                           
 12668                           
 12669                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12670  03B7  0020               	movlb	0	; select bank0
 12671  03B8  019A               	clrf	26	;volatile
 12672                           
 12673                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12674  03B9  0199               	clrf	25	;volatile
 12675                           
 12676                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12677  03BA  0196               	clrf	22	;volatile
 12678                           
 12679                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12680  03BB  0197               	clrf	23	;volatile
 12681                           
 12682                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12683  03BC  0198               	clrf	24	;volatile
 12684  03BD                     l4438:	
 12685                           
 12686                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12687  03BD  3007               	movlw	7
 12688  03BE  0095               	movwf	21	;volatile
 12689  03BF                     l4440:	
 12690                           
 12691                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 12692  03BF  300F               	movlw	15
 12693  03C0  0091               	movwf	17	;volatile
 12694  03C1                     l4442:	
 12695                           
 12696                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12697  03C1  30FF               	movlw	255
 12698  03C2  0092               	movwf	18	;volatile
 12699  03C3                     l4444:	
 12700                           
 12701                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 12702  03C3  30FF               	movlw	255
 12703  03C4  0093               	movwf	19	;volatile
 12704  03C5                     l4446:	
 12705                           
 12706                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12707  03C5  30FF               	movlw	255
 12708  03C6  0094               	movwf	20	;volatile
 12709  03C7                     l4448:	
 12710                           
 12711                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 12712  03C7  30FF               	movlw	255
 12713  03C8  003E               	movlb	30	; select bank30
 12714  03C9  00D9               	movwf	89	;volatile
 12715  03CA                     l4450:	
 12716                           
 12717                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 12718  03CA  30C7               	movlw	199
 12719  03CB  00CE               	movwf	78	;volatile
 12720  03CC                     l4452:	
 12721                           
 12722                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 12723  03CC  30EF               	movlw	239
 12724  03CD  00C3               	movwf	67	;volatile
 12725  03CE                     l4454:	
 12726                           
 12727                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 12728  03CE  3007               	movlw	7
 12729  03CF  00E4               	movwf	100	;volatile
 12730  03D0                     l4456:	
 12731                           
 12732                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 12733  03D0  30FF               	movlw	255
 12734  03D1  00B8               	movwf	56	;volatile
 12735                           
 12736                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 12737  03D2  01DA               	clrf	90	;volatile
 12738                           
 12739                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 12740  03D3  01E5               	clrf	101	;volatile
 12741                           
 12742                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 12743  03D4  01C4               	clrf	68	;volatile
 12744                           
 12745                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 12746  03D5  01B9               	clrf	57	;volatile
 12747                           
 12748                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 12749  03D6  01CF               	clrf	79	;volatile
 12750                           
 12751                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 12752  03D7  01E6               	clrf	102	;volatile
 12753                           
 12754                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 12755  03D8  01BA               	clrf	58	;volatile
 12756                           
 12757                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 12758  03D9  01C5               	clrf	69	;volatile
 12759                           
 12760                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 12761  03DA  01D0               	clrf	80	;volatile
 12762                           
 12763                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 12764  03DB  01DB               	clrf	91	;volatile
 12765  03DC                     l4458:	
 12766                           
 12767                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 12768  03DC  30FF               	movlw	255
 12769  03DD  00BB               	movwf	59	;volatile
 12770  03DE                     l4460:	
 12771                           
 12772                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 12773  03DE  30FF               	movlw	255
 12774  03DF  00C6               	movwf	70	;volatile
 12775  03E0                     l4462:	
 12776                           
 12777                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 12778  03E0  30FF               	movlw	255
 12779  03E1  00D1               	movwf	81	;volatile
 12780  03E2                     l4464:	
 12781                           
 12782                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 12783  03E2  30FF               	movlw	255
 12784  03E3  00DC               	movwf	92	;volatile
 12785  03E4                     l4466:	
 12786                           
 12787                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 12788  03E4  3007               	movlw	7
 12789  03E5  00E7               	movwf	103	;volatile
 12790  03E6                     l4468:	
 12791                           
 12792                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 12793  03E6  30FF               	movlw	255
 12794  03E7  00BC               	movwf	60	;volatile
 12795  03E8                     l4470:	
 12796                           
 12797                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 12798  03E8  30FF               	movlw	255
 12799  03E9  00C7               	movwf	71	;volatile
 12800  03EA                     l4472:	
 12801                           
 12802                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 12803  03EA  30FF               	movlw	255
 12804  03EB  00D2               	movwf	82	;volatile
 12805  03EC                     l4474:	
 12806                           
 12807                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 12808  03EC  30FF               	movlw	255
 12809  03ED  00DD               	movwf	93	;volatile
 12810  03EE                     l4476:	
 12811                           
 12812                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 12813  03EE  3007               	movlw	7
 12814  03EF  00E8               	movwf	104	;volatile
 12815  03F0                     l4478:	
 12816                           
 12817                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 12818  03F0  300C               	movlw	12
 12819  03F1  003D               	movlb	29	; select bank29
 12820  03F2  0090               	movwf	16	;volatile
 12821  03F3                     l4480:	
 12822                           
 12823                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 12824  03F3  3013               	movlw	19
 12825  03F4  00C5               	movwf	69	;volatile
 12826  03F5                     l4482:	
 12827                           
 12828                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 12829  03F5  3014               	movlw	20
 12830  03F6  003E               	movlb	30	; select bank30
 12831  03F7  00A3               	movwf	35	;volatile
 12832  03F8                     l4484:	
 12833                           
 12834                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 12835  03F8  3015               	movlw	21
 12836  03F9  00A4               	movwf	36	;volatile
 12837  03FA                     l4486:	
 12838                           
 12839                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 12840  03FA  300E               	movlw	14
 12841  03FB  0096               	movwf	22	;volatile
 12842  03FC                     l4488:	
 12843                           
 12844                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 12845  03FC  3014               	movlw	20
 12846  03FD  003D               	movlb	29	; select bank29
 12847  03FE  00C6               	movwf	70	;volatile
 12848  03FF                     l530:	
 12849  03FF  0008               	return
 12850  0400                     __end_of_PIN_MANAGER_Initialize:	
 12851                           
 12852                           	psect	text27
 12853  0FA6                     __ptext27:	
 12854 ;; *************** function _OSCILLATOR_Initialize *****************
 12855 ;; Defined at:
 12856 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    6
 12877 ;; This function calls:
 12878 ;;		Nothing
 12879 ;; This function is called by:
 12880 ;;		_SYSTEM_Initialize
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           
 12885                           ;psect for function _OSCILLATOR_Initialize
 12886  0FA6                     _OSCILLATOR_Initialize:	
 12887  0FA6                     l4490:	
 12888                           ;incstack = 0
 12889                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12890                           
 12891                           
 12892                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 12893  0FA6  3062               	movlw	98
 12894  0FA7  0031               	movlb	17	; select bank17
 12895  0FA8  008D               	movwf	13	;volatile
 12896  0FA9                     l4492:	
 12897                           
 12898                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12899  0FA9  018F               	clrf	15	;volatile
 12900  0FAA                     l4494:	
 12901                           
 12902                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12903  0FAA  0191               	clrf	17	;volatile
 12904                           
 12905                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 12906  0FAB  3002               	movlw	2
 12907  0FAC  0093               	movwf	19	;volatile
 12908  0FAD                     l4496:	
 12909                           
 12910                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12911  0FAD  0192               	clrf	18	;volatile
 12912  0FAE                     l442:	
 12913  0FAE  0008               	return
 12914  0FAF                     __end_of_OSCILLATOR_Initialize:	
 12915                           
 12916                           	psect	text28
 12917  07E5                     __ptext28:	
 12918 ;; *************** function _EXT_INT_Initialize *****************
 12919 ;; Defined at:
 12920 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0, pclath, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    7
 12941 ;; This function calls:
 12942 ;;		_INT_SetInterruptHandler
 12943 ;; This function is called by:
 12944 ;;		_SYSTEM_Initialize
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           
 12949                           ;psect for function _EXT_INT_Initialize
 12950  07E5                     _EXT_INT_Initialize:	
 12951  07E5                     l4428:	
 12952                           ;incstack = 0
 12953                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12954                           
 12955                           
 12956                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 12957  07E5  002E               	movlb	14	; select bank14
 12958  07E6  100C               	bcf	12,0	;volatile
 12959                           
 12960                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 12961  07E7  140B               	bsf	11,0	;volatile
 12962  07E8                     l4430:	
 12963                           
 12964                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 12965  07E8  30DA               	movlw	low _INT_DefaultInterruptHandler
 12966  07E9  0020               	movlb	0	; select bank0
 12967  07EA  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
 12968  07EB  300E               	movlw	high _INT_DefaultInterruptHandler
 12969  07EC  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12970  07ED  318F  2740  3187   	fcall	_INT_SetInterruptHandler
 12971  07F0                     l4432:	
 12972                           
 12973                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 12974  07F0  002E               	movlb	14	; select bank14
 12975  07F1  1416               	bsf	22,0	;volatile
 12976  07F2                     l347:	
 12977  07F2  0008               	return
 12978  07F3                     __end_of_EXT_INT_Initialize:	
 12979                           
 12980                           	psect	text29
 12981  0F40                     __ptext29:	
 12982 ;; *************** function _INT_SetInterruptHandler *****************
 12983 ;; Defined at:
 12984 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12987 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		wreg
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;Total ram usage:        2 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:    6
 13006 ;; This function calls:
 13007 ;;		Nothing
 13008 ;; This function is called by:
 13009 ;;		_EXT_INT_Initialize
 13010 ;;		_main
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           
 13015                           ;psect for function _INT_SetInterruptHandler
 13016  0F40                     _INT_SetInterruptHandler:	
 13017  0F40                     l4108:	
 13018                           ;incstack = 0
 13019                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13020                           
 13021                           
 13022                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 13023  0F40  0020               	movlb	0	; select bank0
 13024  0F41  083B               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 13025  0F42  00D2               	movwf	_INT_InterruptHandler+1
 13026  0F43  083A               	movf	INT_SetInterruptHandler@InterruptHandler,w
 13027  0F44  00D1               	movwf	_INT_InterruptHandler
 13028  0F45                     l341:	
 13029  0F45  0008               	return
 13030  0F46                     __end_of_INT_SetInterruptHandler:	
 13031                           
 13032                           	psect	text30
 13033  0702                     __ptext30:	
 13034 ;; *************** function _ADCC_Initialize *****************
 13035 ;; Defined at:
 13036 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;		None
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      void 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:        0 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    6
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_SYSTEM_Initialize
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           
 13065                           ;psect for function _ADCC_Initialize
 13066  0702                     _ADCC_Initialize:	
 13067  0702                     l4502:	
 13068                           ;incstack = 0
 13069                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13070                           
 13071                           
 13072                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13073  0702  0022               	movlb	2	; select bank2
 13074  0703  018E               	clrf	14	;volatile
 13075                           
 13076                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13077  0704  018F               	clrf	15	;volatile
 13078                           
 13079                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13080  0705  0190               	clrf	16	;volatile
 13081                           
 13082                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13083  0706  0191               	clrf	17	;volatile
 13084                           
 13085                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13086  0707  0192               	clrf	18	;volatile
 13087                           
 13088                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13089  0708  0193               	clrf	19	;volatile
 13090                           
 13091                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13092  0709  018D               	clrf	13	;volatile
 13093                           
 13094                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13095  070A  0021               	movlb	1	; select bank1
 13096  070B  019E               	clrf	30	;volatile
 13097                           
 13098                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13099  070C  019B               	clrf	27	;volatile
 13100                           
 13101                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 13102  070D  0194               	clrf	20	;volatile
 13103                           
 13104                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 13105  070E  0195               	clrf	21	;volatile
 13106                           
 13107                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 13108  070F  0196               	clrf	22	;volatile
 13109                           
 13110                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 13111  0710  0197               	clrf	23	;volatile
 13112                           
 13113                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 13114  0711  019A               	clrf	26	;volatile
 13115                           
 13116                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 13117  0712  0199               	clrf	25	;volatile
 13118                           
 13119                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 13120  0713  0198               	clrf	24	;volatile
 13121  0714                     l4504:	
 13122                           
 13123                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 13124  0714  3084               	movlw	132
 13125  0715  0093               	movwf	19	;volatile
 13126  0716                     l4506:	
 13127                           
 13128                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 13129  0716  019D               	clrf	29	;volatile
 13130  0717                     l757:	
 13131  0717  0008               	return
 13132  0718                     __end_of_ADCC_Initialize:	
 13133                           
 13134                           	psect	text31
 13135  0655                     __ptext31:	
 13136 ;; *************** function _LED_bin *****************
 13137 ;; Defined at:
 13138 ;;		line 323 in file "main.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;  value           2    3[BANK0 ] unsigned int 
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      void 
 13145 ;; Registers used:
 13146 ;;		wreg, status,2, status,0
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;Total ram usage:        5 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:    6
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_main
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           
 13167                           ;psect for function _LED_bin
 13168  0655                     _LED_bin:	
 13169  0655                     l4838:	
 13170                           ;incstack = 0
 13171                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 13172                           
 13173                           
 13174                           ;main.c: 325:     LATAbits.LATA4 = (value & 1);
 13175  0655  0020               	movlb	0	; select bank0
 13176  0656  083A               	movf	LED_bin@value,w
 13177  0657  3901               	andlw	1
 13178  0658  00BC               	movwf	??_LED_bin
 13179  0659  0EBC               	swapf	??_LED_bin,f
 13180  065A  0816               	movf	22,w	;volatile
 13181  065B  063C               	xorwf	??_LED_bin,w
 13182  065C  39EF               	andlw	-17
 13183  065D  063C               	xorwf	??_LED_bin,w
 13184  065E  0096               	movwf	22	;volatile
 13185                           
 13186                           ;main.c: 326:     LATAbits.LATA5 = (value >>1);
 13187  065F  083B               	movf	LED_bin@value+1,w
 13188  0660  00BD               	movwf	??_LED_bin+1
 13189  0661  083A               	movf	LED_bin@value,w
 13190  0662  00BC               	movwf	??_LED_bin
 13191  0663  36BD               	lsrf	??_LED_bin+1,f
 13192  0664  0CBC               	rrf	??_LED_bin,f
 13193  0665  083C               	movf	??_LED_bin,w
 13194  0666  00BE               	movwf	??_LED_bin+2
 13195  0667  0EBE               	swapf	??_LED_bin+2,f
 13196  0668  0DBE               	rlf	??_LED_bin+2,f
 13197  0669  0816               	movf	22,w	;volatile
 13198  066A  063E               	xorwf	??_LED_bin+2,w
 13199  066B  39DF               	andlw	-33
 13200  066C  063E               	xorwf	??_LED_bin+2,w
 13201  066D  0096               	movwf	22	;volatile
 13202  066E                     l1247:	
 13203  066E  0008               	return
 13204  066F                     __end_of_LED_bin:	
 13205                           
 13206                           	psect	text32
 13207  066F                     __ptext32:	
 13208 ;; *************** function _ADC_read *****************
 13209 ;; Defined at:
 13210 ;;		line 336 in file "main.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;		None
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;		None
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  2    5[BANK0 ] unsigned int 
 13217 ;; Registers used:
 13218 ;;		wreg, status,2, status,0, pclath, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;Total ram usage:        2 bytes
 13229 ;; Hardware stack levels used:    1
 13230 ;; Hardware stack levels required when called:    7
 13231 ;; This function calls:
 13232 ;;		_ADCC_GetConversionResult
 13233 ;;		_ADCC_IsConversionDone
 13234 ;;		_ADCC_StartConversion
 13235 ;; This function is called by:
 13236 ;;		_main
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           
 13241                           ;psect for function _ADC_read
 13242  066F                     _ADC_read:	
 13243  066F                     l4828:	
 13244                           ;incstack = 0
 13245                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 13246                           
 13247                           
 13248                           ;main.c: 338:     ADCC_StartConversion(channel_ANA0);
 13249  066F  3000               	movlw	0
 13250  0670  318F  2784  3186   	fcall	_ADCC_StartConversion
 13251                           
 13252                           ;main.c: 339:     while(!ADCC_IsConversionDone()){
 13253  0673  2E78               	goto	l4832
 13254  0674                     l4830:	
 13255                           
 13256                           ;main.c: 340:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13257  0674  3053               	movlw	83
 13258  0675                     u2457:	
 13259  0675  0B89               	decfsz	9,f
 13260  0676  2E75               	goto	u2457
 13261  0677  0000               	nop
 13262  0678                     l4832:	
 13263                           
 13264                           ;main.c: 339:     while(!ADCC_IsConversionDone()){
 13265  0678  318F  2765  3186   	fcall	_ADCC_IsConversionDone
 13266  067B  3A00               	xorlw	0
 13267  067C  1903               	skipnz
 13268  067D  2E7F               	goto	u1871
 13269  067E  2E80               	goto	u1870
 13270  067F                     u1871:	
 13271  067F  2E74               	goto	l4830
 13272  0680                     u1870:	
 13273  0680                     l4834:	
 13274                           
 13275                           ;main.c: 343:     return ADCC_GetConversionResult();
 13276  0680  318F  279D  3186   	fcall	_ADCC_GetConversionResult
 13277  0683  0020               	movlb	0	; select bank0
 13278  0684  083B               	movf	?_ADCC_GetConversionResult+1,w
 13279  0685  00BD               	movwf	?_ADC_read+1
 13280  0686  083A               	movf	?_ADCC_GetConversionResult,w
 13281  0687  00BC               	movwf	?_ADC_read
 13282  0688                     l1253:	
 13283  0688  0008               	return
 13284  0689                     __end_of_ADC_read:	
 13285                           
 13286                           	psect	text33
 13287  0F84                     __ptext33:	
 13288 ;; *************** function _ADCC_StartConversion *****************
 13289 ;; Defined at:
 13290 ;;		line 106 in file "mcc_generated_files/adcc.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  channel         1    wreg     enum E12246
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;  channel         1    3[BANK0 ] enum E12246
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  1    wreg      void 
 13297 ;; Registers used:
 13298 ;;		wreg
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;Total ram usage:        1 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:    6
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_ADC_read
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           
 13319                           ;psect for function _ADCC_StartConversion
 13320  0F84                     _ADCC_StartConversion:	
 13321                           
 13322                           ;incstack = 0
 13323                           ; Regs used in _ADCC_StartConversion: [wreg]
 13324                           ;ADCC_StartConversion@channel stored from wreg
 13325  0F84  0020               	movlb	0	; select bank0
 13326  0F85  00BA               	movwf	ADCC_StartConversion@channel
 13327  0F86                     l4552:	
 13328                           
 13329                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 13330  0F86  083A               	movf	ADCC_StartConversion@channel,w
 13331  0F87  0021               	movlb	1	; select bank1
 13332  0F88  009E               	movwf	30	;volatile
 13333  0F89                     l4554:	
 13334                           
 13335                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 13336  0F89  1793               	bsf	19,7	;volatile
 13337  0F8A                     l4556:	
 13338                           
 13339                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 13340  0F8A  1413               	bsf	19,0	;volatile
 13341  0F8B                     l760:	
 13342  0F8B  0008               	return
 13343  0F8C                     __end_of_ADCC_StartConversion:	
 13344                           
 13345                           	psect	text34
 13346  0F65                     __ptext34:	
 13347 ;; *************** function _ADCC_IsConversionDone *****************
 13348 ;; Defined at:
 13349 ;;		line 118 in file "mcc_generated_files/adcc.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;		None
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;		None
 13354 ;; Return value:  Size  Location     Type
 13355 ;;                  1    wreg      _Bool 
 13356 ;; Registers used:
 13357 ;;		wreg, status,0
 13358 ;; Tracked objects:
 13359 ;;		On entry : 0/0
 13360 ;;		On exit  : 0/0
 13361 ;;		Unchanged: 0/0
 13362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;Total ram usage:        0 bytes
 13368 ;; Hardware stack levels used:    1
 13369 ;; Hardware stack levels required when called:    6
 13370 ;; This function calls:
 13371 ;;		Nothing
 13372 ;; This function is called by:
 13373 ;;		_ADC_read
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377                           
 13378                           ;psect for function _ADCC_IsConversionDone
 13379  0F65                     _ADCC_IsConversionDone:	
 13380  0F65                     l4558:	
 13381                           ;incstack = 0
 13382                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 13383                           
 13384                           
 13385                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 13386  0F65  1003               	clrc
 13387  0F66  0021               	movlb	1	; select bank1
 13388  0F67  1C13               	btfss	19,0	;volatile
 13389  0F68  1403               	setc
 13390  0F69  3000               	movlw	0
 13391  0F6A  3D09               	addwfc	9,w
 13392  0F6B                     l763:	
 13393  0F6B  0008               	return
 13394  0F6C                     __end_of_ADCC_IsConversionDone:	
 13395                           
 13396                           	psect	text35
 13397  0F9D                     __ptext35:	
 13398 ;; *************** function _ADCC_GetConversionResult *****************
 13399 ;; Defined at:
 13400 ;;		line 124 in file "mcc_generated_files/adcc.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;		None
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;		None
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  2    3[BANK0 ] unsigned short 
 13407 ;; Registers used:
 13408 ;;		wreg
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;Total ram usage:        2 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:    6
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_ADC_read
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           
 13429                           ;psect for function _ADCC_GetConversionResult
 13430  0F9D                     _ADCC_GetConversionResult:	
 13431  0F9D                     l4562:	
 13432                           ;incstack = 0
 13433                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13434                           
 13435                           
 13436                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13437  0F9D  0021               	movlb	1	; select bank1
 13438  0F9E  080D               	movf	13,w	;volatile
 13439  0F9F  0020               	movlb	0	; select bank0
 13440  0FA0  00BB               	movwf	?_ADCC_GetConversionResult+1
 13441  0FA1  0021               	movlb	1	; select bank1
 13442  0FA2  080C               	movf	12,w	;volatile
 13443  0FA3  0020               	movlb	0	; select bank0
 13444  0FA4  00BA               	movwf	?_ADCC_GetConversionResult
 13445  0FA5                     l766:	
 13446  0FA5  0008               	return
 13447  0FA6                     __end_of_ADCC_GetConversionResult:	
 13448                           
 13449                           	psect	intentry
 13450  0004                     __pintentry:	
 13451 ;; *************** function _INTERRUPT_InterruptManager *****************
 13452 ;; Defined at:
 13453 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:    5
 13474 ;; This function calls:
 13475 ;;		Absolute function
 13476 ;;		_INT_ISR
 13477 ;;		_TMR0_ISR
 13478 ;;		_TMR1_ISR
 13479 ;;		_TMR2_ISR
 13480 ;;		_i2c_ISR
 13481 ;;		_i2c_busCollisionISR
 13482 ;; This function is called by:
 13483 ;;		Interrupt level 1
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487  0004                     _INTERRUPT_InterruptManager:	
 13488                           
 13489                           ;incstack = 0
 13490  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13491                           
 13492                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13493  0005  3180               	pagesel	$
 13494  0006                     i1l5038:	
 13495                           
 13496                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 13497  0006  002E               	movlb	14	; select bank14
 13498  0007  1C16               	btfss	22,0	;volatile
 13499  0008  280A               	goto	u211_21
 13500  0009  280B               	goto	u211_20
 13501  000A                     u211_21:	
 13502  000A  2813               	goto	i1l378
 13503  000B                     u211_20:	
 13504  000B                     i1l5040:	
 13505  000B  1C0C               	btfss	12,0	;volatile
 13506  000C  280E               	goto	u212_21
 13507  000D  280F               	goto	u212_20
 13508  000E                     u212_21:	
 13509  000E  2813               	goto	i1l378
 13510  000F                     u212_20:	
 13511  000F                     i1l5042:	
 13512                           
 13513                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 13514  000F  318F  273A  3180   	fcall	_INT_ISR
 13515                           
 13516                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13517  0012  2859               	goto	i1l392
 13518  0013                     i1l378:	
 13519                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 13520                           
 13521  0013  1E96               	btfss	22,5	;volatile
 13522  0014  2816               	goto	u213_21
 13523  0015  2817               	goto	u213_20
 13524  0016                     u213_21:	
 13525  0016  281F               	goto	i1l380
 13526  0017                     u213_20:	
 13527  0017                     i1l5044:	
 13528  0017  1E8C               	btfss	12,5	;volatile
 13529  0018  281A               	goto	u214_21
 13530  0019  281B               	goto	u214_20
 13531  001A                     u214_21:	
 13532  001A  281F               	goto	i1l380
 13533  001B                     u214_20:	
 13534  001B                     i1l5046:	
 13535                           
 13536                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 13537  001B  3187  27D6  3180   	fcall	_TMR0_ISR
 13538                           
 13539                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 13540  001E  2859               	goto	i1l392
 13541  001F                     i1l380:	
 13542                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 13543                           
 13544  001F  1F0B               	btfss	11,6	;volatile
 13545  0020  2822               	goto	u215_21
 13546  0021  2823               	goto	u215_20
 13547  0022                     u215_21:	
 13548  0022  2859               	goto	i1l386
 13549  0023                     u215_20:	
 13550  0023                     i1l5048:	
 13551                           
 13552                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13553  0023  1C99               	btfss	25,1	;volatile
 13554  0024  2826               	goto	u216_21
 13555  0025  2827               	goto	u216_20
 13556  0026                     u216_21:	
 13557  0026  2832               	goto	i1l383
 13558  0027                     u216_20:	
 13559  0027                     i1l5050:	
 13560  0027  1C8F               	btfss	15,1	;volatile
 13561  0028  282A               	goto	u217_21
 13562  0029  282B               	goto	u217_20
 13563  002A                     u217_21:	
 13564  002A  2832               	goto	i1l383
 13565  002B                     u217_20:	
 13566  002B                     i1l5052:	
 13567                           
 13568                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 13569  002B  0020               	movlb	0	; select bank0
 13570  002C  082D               	movf	_i2c1_driver_busCollisionISR+1,w
 13571  002D  008A               	movwf	10
 13572  002E  082C               	movf	_i2c1_driver_busCollisionISR,w
 13573  002F  000A               	callw
 13574  0030  3180               	pagesel	$
 13575                           
 13576                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13577  0031  2859               	goto	i1l392
 13578  0032                     i1l383:	
 13579                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 13580                           
 13581  0032  1C19               	btfss	25,0	;volatile
 13582  0033  2835               	goto	u218_21
 13583  0034  2836               	goto	u218_20
 13584  0035                     u218_21:	
 13585  0035  2841               	goto	i1l385
 13586  0036                     u218_20:	
 13587  0036                     i1l5054:	
 13588  0036  1C0F               	btfss	15,0	;volatile
 13589  0037  2839               	goto	u219_21
 13590  0038  283A               	goto	u219_20
 13591  0039                     u219_21:	
 13592  0039  2841               	goto	i1l385
 13593  003A                     u219_20:	
 13594  003A                     i1l5056:	
 13595                           
 13596                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 13597  003A  0020               	movlb	0	; select bank0
 13598  003B  082B               	movf	_i2c1_driver_i2cISR+1,w
 13599  003C  008A               	movwf	10
 13600  003D  082A               	movf	_i2c1_driver_i2cISR,w
 13601  003E  000A               	callw
 13602  003F  3180               	pagesel	$
 13603                           
 13604                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13605  0040  2859               	goto	i1l392
 13606  0041                     i1l385:	
 13607                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 13608                           
 13609  0041  1C1A               	btfss	26,0	;volatile
 13610  0042  2844               	goto	u220_21
 13611  0043  2845               	goto	u220_20
 13612  0044                     u220_21:	
 13613  0044  284D               	goto	i1l387
 13614  0045                     u220_20:	
 13615  0045                     i1l5058:	
 13616  0045  1C10               	btfss	16,0	;volatile
 13617  0046  2848               	goto	u221_21
 13618  0047  2849               	goto	u221_20
 13619  0048                     u221_21:	
 13620  0048  284D               	goto	i1l387
 13621  0049                     u221_20:	
 13622  0049                     i1l5060:	
 13623                           
 13624                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 13625  0049  3186  26EB  3180   	fcall	_TMR1_ISR
 13626                           
 13627                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 13628  004C  2859               	goto	i1l392
 13629  004D                     i1l387:	
 13630                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 13631                           
 13632  004D  1C9A               	btfss	26,1	;volatile
 13633  004E  2850               	goto	u222_21
 13634  004F  2851               	goto	u222_20
 13635  0050                     u222_21:	
 13636  0050  2859               	goto	i1l386
 13637  0051                     u222_20:	
 13638  0051                     i1l5062:	
 13639  0051  1C90               	btfss	16,1	;volatile
 13640  0052  2854               	goto	u223_21
 13641  0053  2855               	goto	u223_20
 13642  0054                     u223_21:	
 13643  0054  2859               	goto	i1l386
 13644  0055                     u223_20:	
 13645  0055                     i1l5064:	
 13646                           
 13647                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 13648  0055  3187  27C7  3180   	fcall	_TMR2_ISR
 13649                           
 13650                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 13651  0058  2859               	goto	i1l392
 13652  0059                     i1l386:	
 13653  0059                     i1l392:	
 13654  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13655  005A  0009               	retfie
 13656  005B                     __end_of_INTERRUPT_InterruptManager:	
 13657                           
 13658                           	psect	text37
 13659  0F09                     __ptext37:	
 13660 ;; *************** function _i2c_busCollisionISR *****************
 13661 ;; Defined at:
 13662 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;		None
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;		None
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  1    wreg      void 
 13669 ;; Registers used:
 13670 ;;		status,2, status,0, pclath, cstack
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;Total ram usage:        0 bytes
 13681 ;; Hardware stack levels used:    1
 13682 ;; Hardware stack levels required when called:    1
 13683 ;; This function calls:
 13684 ;;		_i2c1_driver_clearBusCollision
 13685 ;; This function is called by:
 13686 ;;		_i2c_open
 13687 ;;		_INTERRUPT_InterruptManager
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           
 13692                           ;psect for function _i2c_busCollisionISR
 13693  0F09                     _i2c_busCollisionISR:	
 13694  0F09                     i1l4766:	
 13695                           ;incstack = 0
 13696                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13697                           
 13698                           
 13699                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 13700  0F09  318E  26F8  318F   	fcall	_i2c1_driver_clearBusCollision
 13701  0F0C                     i1l213:	
 13702  0F0C  0008               	return
 13703  0F0D                     __end_of_i2c_busCollisionISR:	
 13704                           
 13705                           	psect	text38
 13706  0EF8                     __ptext38:	
 13707 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13708 ;; Defined at:
 13709 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 13710 ;; Parameters:    Size  Location     Type
 13711 ;;		None
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;		None
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  1    wreg      void 
 13716 ;; Registers used:
 13717 ;;		None
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;Total ram usage:        0 bytes
 13728 ;; Hardware stack levels used:    1
 13729 ;; This function calls:
 13730 ;;		Nothing
 13731 ;; This function is called by:
 13732 ;;		_i2c_busCollisionISR
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           
 13736                           
 13737                           ;psect for function _i2c1_driver_clearBusCollision
 13738  0EF8                     _i2c1_driver_clearBusCollision:	
 13739  0EF8                     i1l4422:	
 13740                           ;incstack = 0
 13741                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13742                           
 13743                           
 13744                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 13745  0EF8  002E               	movlb	14	; select bank14
 13746  0EF9  108F               	bcf	15,1	;volatile
 13747  0EFA                     i1l672:	
 13748  0EFA  0008               	return
 13749  0EFB                     __end_of_i2c1_driver_clearBusCollision:	
 13750                           
 13751                           	psect	text39
 13752  04C3                     __ptext39:	
 13753 ;; *************** function _i2c_ISR *****************
 13754 ;; Defined at:
 13755 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;                  1    wreg      void 
 13762 ;; Registers used:
 13763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 0/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13771 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;Total ram usage:        3 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:    4
 13776 ;; This function calls:
 13777 ;;		_do_I2C_DO_ACK
 13778 ;;		_do_I2C_DO_ADDRESS_NACK
 13779 ;;		_do_I2C_DO_NACK_RESTART
 13780 ;;		_do_I2C_DO_NACK_STOP
 13781 ;;		_do_I2C_IDLE
 13782 ;;		_do_I2C_RCEN
 13783 ;;		_do_I2C_RESET
 13784 ;;		_do_I2C_RX
 13785 ;;		_do_I2C_SEND_ADR_READ
 13786 ;;		_do_I2C_SEND_ADR_WRITE
 13787 ;;		_do_I2C_SEND_RESTART
 13788 ;;		_do_I2C_SEND_RESTART_READ
 13789 ;;		_do_I2C_SEND_RESTART_WRITE
 13790 ;;		_do_I2C_SEND_STOP
 13791 ;;		_do_I2C_TX
 13792 ;;		_do_I2C_TX_EMPTY
 13793 ;;		_i2c1_driver_isNACK
 13794 ;;		_mssp1_clearIRQ
 13795 ;; This function is called by:
 13796 ;;		_i2c_open
 13797 ;;		_i2c_poller
 13798 ;;		_INTERRUPT_InterruptManager
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           
 13803                           ;psect for function _i2c_ISR
 13804  04C3                     _i2c_ISR:	
 13805  04C3                     i1l4756:	
 13806                           ;incstack = 0
 13807                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13808                           
 13809                           
 13810                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 13811  04C3  318E  26F5  3184   	fcall	_mssp1_clearIRQ
 13812  04C6                     i1l4758:	
 13813                           
 13814                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 13815  04C6  0021               	movlb	1	; select bank1
 13816  04C7  1DA0               	btfss	_i2c_status^(0+128),3
 13817  04C8  2CCA               	goto	u180_21
 13818  04C9  2CCB               	goto	u180_20
 13819  04CA                     u180_21:	
 13820  04CA  2CD8               	goto	i1l4764
 13821  04CB                     u180_20:	
 13822  04CB                     i1l4760:	
 13823  04CB  318F  276C  3184   	fcall	_i2c1_driver_isNACK
 13824  04CE  1C03               	btfss	3,0
 13825  04CF  2CD1               	goto	u181_21
 13826  04D0  2CD2               	goto	u181_20
 13827  04D1                     u181_21:	
 13828  04D1  2CD8               	goto	i1l4764
 13829  04D2                     u181_20:	
 13830  04D2                     i1l4762:	
 13831                           
 13832                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 13833  04D2  300F               	movlw	15
 13834  04D3  0020               	movlb	0	; select bank0
 13835  04D4  00B7               	movwf	??_i2c_ISR
 13836  04D5  0837               	movf	??_i2c_ISR,w
 13837  04D6  0021               	movlb	1	; select bank1
 13838  04D7  00A9               	movwf	(_i2c_status^(0+128)+9)
 13839  04D8                     i1l4764:	
 13840                           
 13841                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 13842  04D8  0021               	movlb	1	; select bank1
 13843  04D9  0829               	movf	(_i2c_status^(0+128)+9),w
 13844  04DA  0020               	movlb	0	; select bank0
 13845  04DB  00B7               	movwf	??_i2c_ISR
 13846  04DC  01B8               	clrf	??_i2c_ISR+1
 13847  04DD  35B7               	lslf	??_i2c_ISR,f
 13848  04DE  0DB8               	rlf	??_i2c_ISR+1,f
 13849  04DF  30BE               	movlw	low (_fsmStateTable| (0+32768))
 13850  04E0  0737               	addwf	??_i2c_ISR,w
 13851  04E1  0084               	movwf	4
 13852  04E2  3085               	movlw	high (_fsmStateTable| (0+32768))
 13853  04E3  3D38               	addwfc	??_i2c_ISR+1,w
 13854  04E4  0085               	movwf	5
 13855  04E5  3F01               	moviw [1]fsr0
 13856  04E6  008A               	movwf	10
 13857  04E7  3F00               	moviw [0]fsr0
 13858  04E8  000A               	callw
 13859  04E9  3184               	pagesel	$
 13860  04EA  0020               	movlb	0	; select bank0
 13861  04EB  00B9               	movwf	??_i2c_ISR+2
 13862  04EC  0839               	movf	??_i2c_ISR+2,w
 13863  04ED  0021               	movlb	1	; select bank1
 13864  04EE  00A9               	movwf	(_i2c_status^(0+128)+9)
 13865  04EF                     i1l210:	
 13866  04EF  0008               	return
 13867  04F0                     __end_of_i2c_ISR:	
 13868                           
 13869                           	psect	text40
 13870  0EF5                     __ptext40:	
 13871 ;; *************** function _mssp1_clearIRQ *****************
 13872 ;; Defined at:
 13873 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;		None
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		None
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;Total ram usage:        0 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; This function calls:
 13894 ;;		Nothing
 13895 ;; This function is called by:
 13896 ;;		_i2c_ISR
 13897 ;;		_i2c_open
 13898 ;;		_i2c_close
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           
 13903                           ;psect for function _mssp1_clearIRQ
 13904  0EF5                     _mssp1_clearIRQ:	
 13905  0EF5                     i1l4238:	
 13906                           ;incstack = 0
 13907                           ; Regs used in _mssp1_clearIRQ: []
 13908                           
 13909                           
 13910                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 13911  0EF5  002E               	movlb	14	; select bank14
 13912  0EF6  100F               	bcf	15,0	;volatile
 13913  0EF7                     i1l576:	
 13914  0EF7  0008               	return
 13915  0EF8                     __end_of_mssp1_clearIRQ:	
 13916                           
 13917                           	psect	text41
 13918  036D                     __ptext41:	
 13919 ;; *************** function _do_I2C_RX *****************
 13920 ;; Defined at:
 13921 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;		None
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;		None
 13926 ;; Return value:  Size  Location     Type
 13927 ;;                  1    wreg      enum E12722
 13928 ;; Registers used:
 13929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13930 ;; Tracked objects:
 13931 ;;		On entry : 0/0
 13932 ;;		On exit  : 0/0
 13933 ;;		Unchanged: 0/0
 13934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;Total ram usage:        3 bytes
 13940 ;; Hardware stack levels used:    1
 13941 ;; Hardware stack levels required when called:    3
 13942 ;; This function calls:
 13943 ;;		Absolute function
 13944 ;;		_do_I2C_DO_NACK_RESTART
 13945 ;;		_do_I2C_DO_NACK_STOP
 13946 ;;		_i2c1_driver_getRXData
 13947 ;;		_i2c1_driver_sendACK
 13948 ;;		_i2c_restartWrite
 13949 ;;		_rd1RegCompleteHandler
 13950 ;;		_rd2RegCompleteHandler
 13951 ;;		_rdBlkRegCompleteHandler
 13952 ;;		_returnReset
 13953 ;;		_returnStop
 13954 ;;		_wr1RegCompleteHandler
 13955 ;;		_wr2RegCompleteHandler
 13956 ;; This function is called by:
 13957 ;;		_i2c_ISR
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961                           
 13962                           ;psect for function _do_I2C_RX
 13963  036D                     _do_I2C_RX:	
 13964  036D                     i1l4364:	
 13965                           ;incstack = 0
 13966                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13967                           
 13968                           
 13969                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 13970  036D  318E  26EF  3183   	fcall	_i2c1_driver_getRXData
 13971  0370  00FA               	movwf	??_do_I2C_RX
 13972  0371  0021               	movlb	1	; select bank1
 13973  0372  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 13974  0373  0086               	movwf	6
 13975  0374  0187               	clrf	7
 13976  0375  087A               	movf	??_do_I2C_RX,w
 13977  0376  0081               	movwf	1
 13978  0377                     i1l4366:	
 13979  0377  3001               	movlw	1
 13980  0378  00FA               	movwf	??_do_I2C_RX
 13981  0379  087A               	movf	??_do_I2C_RX,w
 13982  037A  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 13983  037B                     i1l4368:	
 13984                           
 13985                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 13986  037B  3001               	movlw	1
 13987  037C  02A3               	subwf	(_i2c_status^(0+128)+3),f
 13988  037D  3000               	movlw	0
 13989  037E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 13990  037F  0823               	movf	(_i2c_status^(0+128)+3),w
 13991  0380  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 13992  0381  1903               	btfsc	3,2
 13993  0382  2B84               	goto	u162_21
 13994  0383  2B85               	goto	u162_20
 13995  0384                     u162_21:	
 13996  0384  2B8A               	goto	i1l185
 13997  0385                     u162_20:	
 13998  0385                     i1l4370:	
 13999                           
 14000                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 14001  0385  318F  2701  3183   	fcall	_i2c1_driver_sendACK
 14002  0388                     i1l4372:	
 14003                           
 14004                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 14005  0388  3005               	movlw	5
 14006  0389  2BB6               	goto	i1l186
 14007  038A                     i1l185:	
 14008                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 14009                           
 14010                           
 14011                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 14012  038A  1520               	bsf	_i2c_status^(0+128),2
 14013                           
 14014                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14015  038B  2B94               	goto	i1l4388
 14016  038C                     i1l4378:	
 14017                           
 14018                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 14019  038C  318F  2735  3183   	fcall	_do_I2C_DO_NACK_RESTART
 14020  038F  2BB6               	goto	i1l186
 14021  0390                     i1l4382:	
 14022                           
 14023                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 14024  0390  318F  2730  3183   	fcall	_do_I2C_DO_NACK_STOP
 14025  0393  2BB6               	goto	i1l186
 14026  0394                     i1l4388:	
 14027  0394  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14028  0395  00FA               	movwf	??_do_I2C_RX
 14029  0396  087A               	movf	??_do_I2C_RX,w
 14030  0397  00F9               	movwf	rdBlkRegCompleteHandler@p
 14031  0398  300B               	movlw	11
 14032  0399  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14033  039A  0086               	movwf	6
 14034  039B  0187               	clrf	7
 14035  039C  3F41               	moviw [1]fsr1
 14036  039D  008A               	movwf	10
 14037  039E  3F40               	moviw [0]fsr1
 14038  039F  000A               	callw
 14039  03A0  3183               	pagesel	$
 14040  03A1  00FB               	movwf	??_do_I2C_RX+1
 14041  03A2  01FC               	clrf	??_do_I2C_RX+2
 14042                           
 14043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14044                           ; Switch size 1, requested type "simple"
 14045                           ; Number of cases is 1, Range of values is 0 to 0
 14046                           ; switch strategies available:
 14047                           ; Name         Instructions Cycles
 14048                           ; simple_byte            4     3 (average)
 14049                           ; direct_byte            8     6 (fixed)
 14050                           ; jumptable            260     6 (fixed)
 14051                           ;	Chosen strategy is simple_byte
 14052  03A3  087C               	movf	??_do_I2C_RX+2,w
 14053  03A4  3A00               	xorlw	0	; case 0
 14054  03A5  1903               	skipnz
 14055  03A6  2BA8               	goto	i1l5366
 14056  03A7  2B90               	goto	i1l4382
 14057  03A8                     i1l5366:	
 14058                           
 14059                           ; Switch size 1, requested type "simple"
 14060                           ; Number of cases is 4, Range of values is 1 to 4
 14061                           ; switch strategies available:
 14062                           ; Name         Instructions Cycles
 14063                           ; simple_byte           13     7 (average)
 14064                           ; direct_byte           17     9 (fixed)
 14065                           ; jumptable            263     9 (fixed)
 14066                           ;	Chosen strategy is simple_byte
 14067  03A8  087B               	movf	??_do_I2C_RX+1,w
 14068  03A9  3A01               	xorlw	1	; case 1
 14069  03AA  1903               	skipnz
 14070  03AB  2B90               	goto	i1l4382
 14071  03AC  3A03               	xorlw	3	; case 2
 14072  03AD  1903               	skipnz
 14073  03AE  2B8C               	goto	i1l4378
 14074  03AF  3A01               	xorlw	1	; case 3
 14075  03B0  1903               	skipnz
 14076  03B1  2B8C               	goto	i1l4378
 14077  03B2  3A07               	xorlw	7	; case 4
 14078  03B3  1903               	skipnz
 14079  03B4  2B90               	goto	i1l4382
 14080  03B5  2B90               	goto	i1l4382
 14081  03B6                     i1l186:	
 14082  03B6  0008               	return
 14083  03B7                     __end_of_do_I2C_RX:	
 14084                           
 14085                           	psect	text42
 14086  0319                     __ptext42:	
 14087 ;; *************** function _do_I2C_TX *****************
 14088 ;; Defined at:
 14089 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      enum E12722
 14096 ;; Registers used:
 14097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;Total ram usage:        3 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    3
 14110 ;; This function calls:
 14111 ;;		Absolute function
 14112 ;;		_do_I2C_SEND_RESTART_READ
 14113 ;;		_do_I2C_SEND_RESTART_WRITE
 14114 ;;		_do_I2C_SEND_STOP
 14115 ;;		_i2c1_driver_TXData
 14116 ;;		_i2c1_driver_isNACK
 14117 ;;		_i2c_restartWrite
 14118 ;;		_rd1RegCompleteHandler
 14119 ;;		_rd2RegCompleteHandler
 14120 ;;		_rdBlkRegCompleteHandler
 14121 ;;		_returnReset
 14122 ;;		_returnStop
 14123 ;;		_wr1RegCompleteHandler
 14124 ;;		_wr2RegCompleteHandler
 14125 ;; This function is called by:
 14126 ;;		_i2c_ISR
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           
 14131                           ;psect for function _do_I2C_TX
 14132  0319                     _do_I2C_TX:	
 14133  0319                     i1l4330:	
 14134                           ;incstack = 0
 14135                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14136                           
 14137                           
 14138                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 14139  0319  318F  276C  3183   	fcall	_i2c1_driver_isNACK
 14140  031C  1C03               	btfss	3,0
 14141  031D  2B1F               	goto	u160_21
 14142  031E  2B20               	goto	u160_20
 14143  031F                     u160_21:	
 14144  031F  2B50               	goto	i1l169
 14145  0320                     u160_20:	
 14146  0320  2B2D               	goto	i1l4348
 14147  0321                     i1l4334:	
 14148                           
 14149                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 14150  0321  318F  2717  3183   	fcall	_do_I2C_SEND_RESTART_READ
 14151  0324  2B6C               	goto	i1l172
 14152  0325                     i1l4338:	
 14153                           
 14154                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 14155  0325  318F  271C  3183   	fcall	_do_I2C_SEND_RESTART_WRITE
 14156  0328  2B6C               	goto	i1l172
 14157  0329                     i1l4342:	
 14158                           
 14159                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 14160  0329  318F  2726  3183   	fcall	_do_I2C_SEND_STOP
 14161  032C  2B6C               	goto	i1l172
 14162  032D                     i1l4348:	
 14163  032D  0021               	movlb	1	; select bank1
 14164  032E  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14165  032F  00FA               	movwf	??_do_I2C_TX
 14166  0330  087A               	movf	??_do_I2C_TX,w
 14167  0331  00F9               	movwf	rdBlkRegCompleteHandler@p
 14168  0332  3011               	movlw	17
 14169  0333  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14170  0334  0086               	movwf	6
 14171  0335  0187               	clrf	7
 14172  0336  3F41               	moviw [1]fsr1
 14173  0337  008A               	movwf	10
 14174  0338  3F40               	moviw [0]fsr1
 14175  0339  000A               	callw
 14176  033A  3183               	pagesel	$
 14177  033B  00FB               	movwf	??_do_I2C_TX+1
 14178  033C  01FC               	clrf	??_do_I2C_TX+2
 14179                           
 14180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14181                           ; Switch size 1, requested type "simple"
 14182                           ; Number of cases is 1, Range of values is 0 to 0
 14183                           ; switch strategies available:
 14184                           ; Name         Instructions Cycles
 14185                           ; simple_byte            4     3 (average)
 14186                           ; direct_byte            8     6 (fixed)
 14187                           ; jumptable            260     6 (fixed)
 14188                           ;	Chosen strategy is simple_byte
 14189  033D  087C               	movf	??_do_I2C_TX+2,w
 14190  033E  3A00               	xorlw	0	; case 0
 14191  033F  1903               	skipnz
 14192  0340  2B42               	goto	i1l5368
 14193  0341  2B29               	goto	i1l4342
 14194  0342                     i1l5368:	
 14195                           
 14196                           ; Switch size 1, requested type "simple"
 14197                           ; Number of cases is 4, Range of values is 1 to 4
 14198                           ; switch strategies available:
 14199                           ; Name         Instructions Cycles
 14200                           ; simple_byte           13     7 (average)
 14201                           ; direct_byte           17     9 (fixed)
 14202                           ; jumptable            263     9 (fixed)
 14203                           ;	Chosen strategy is simple_byte
 14204  0342  087B               	movf	??_do_I2C_TX+1,w
 14205  0343  3A01               	xorlw	1	; case 1
 14206  0344  1903               	skipnz
 14207  0345  2B29               	goto	i1l4342
 14208  0346  3A03               	xorlw	3	; case 2
 14209  0347  1903               	skipnz
 14210  0348  2B21               	goto	i1l4334
 14211  0349  3A01               	xorlw	1	; case 3
 14212  034A  1903               	skipnz
 14213  034B  2B25               	goto	i1l4338
 14214  034C  3A07               	xorlw	7	; case 4
 14215  034D  1903               	skipnz
 14216  034E  2B29               	goto	i1l4342
 14217  034F  2B29               	goto	i1l4342
 14218  0350                     i1l169:	
 14219                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 14220                           
 14221                           
 14222                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 14223  0350  0021               	movlb	1	; select bank1
 14224  0351  11A0               	bcf	_i2c_status^(0+128),3
 14225  0352                     i1l4350:	
 14226                           
 14227                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 14228  0352  3002               	movlw	2
 14229  0353  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14230  0354  0086               	movwf	6
 14231  0355  0187               	clrf	7
 14232  0356  3F40               	moviw [0]fsr1
 14233  0357  0084               	movwf	4
 14234  0358  0185               	clrf	5
 14235  0359  0A81               	incf	1,f
 14236  035A  0800               	movf	0,w
 14237  035B  318F  270D  3183   	fcall	_i2c1_driver_TXData
 14238  035E                     i1l4352:	
 14239                           
 14240                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 14241  035E  3001               	movlw	1
 14242  035F  0021               	movlb	1	; select bank1
 14243  0360  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14244  0361  3000               	movlw	0
 14245  0362  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14246  0363  0823               	movf	(_i2c_status^(0+128)+3),w
 14247  0364  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14248  0365  1D03               	btfss	3,2
 14249  0366  2B68               	goto	u161_21
 14250  0367  2B69               	goto	u161_20
 14251  0368                     u161_21:	
 14252  0368  2B6B               	goto	i1l4356
 14253  0369                     u161_20:	
 14254  0369                     i1l4354:	
 14255  0369  3006               	movlw	6
 14256  036A  2B6C               	goto	i1l172
 14257  036B                     i1l4356:	
 14258  036B  3003               	movlw	3
 14259  036C                     i1l172:	
 14260  036C  0008               	return
 14261  036D                     __end_of_do_I2C_TX:	
 14262                           
 14263                           	psect	text43
 14264  04F0                     __ptext43:	
 14265 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14266 ;; Defined at:
 14267 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;		None
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;		None
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  1    wreg      enum E12722
 14274 ;; Registers used:
 14275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : 0/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;Total ram usage:        3 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:    3
 14288 ;; This function calls:
 14289 ;;		Absolute function
 14290 ;;		_do_I2C_SEND_RESTART
 14291 ;;		_do_I2C_SEND_STOP
 14292 ;;		_i2c_restartWrite
 14293 ;;		_rd1RegCompleteHandler
 14294 ;;		_rd2RegCompleteHandler
 14295 ;;		_rdBlkRegCompleteHandler
 14296 ;;		_returnReset
 14297 ;;		_returnStop
 14298 ;;		_wr1RegCompleteHandler
 14299 ;;		_wr2RegCompleteHandler
 14300 ;; This function is called by:
 14301 ;;		_i2c_ISR
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           
 14306                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14307  04F0                     _do_I2C_DO_ADDRESS_NACK:	
 14308  04F0                     i1l4308:	
 14309                           ;incstack = 0
 14310                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14311                           
 14312                           
 14313                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 14314  04F0  0021               	movlb	1	; select bank1
 14315  04F1  11A0               	bcf	_i2c_status^(0+128),3
 14316  04F2                     i1l4310:	
 14317                           
 14318                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14319  04F2  3002               	movlw	2
 14320  04F3  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14321  04F4  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14322  04F5  00AA               	movwf	(_i2c_status^(0+128)+10)
 14323                           
 14324                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14325  04F6  2CFF               	goto	i1l4322
 14326  04F7                     i1l4312:	
 14327                           
 14328                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14329  04F7  318F  2721  3184   	fcall	_do_I2C_SEND_RESTART
 14330  04FA  2D1B               	goto	i1l164
 14331  04FB                     i1l4316:	
 14332                           
 14333                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14334  04FB  318F  2726  3184   	fcall	_do_I2C_SEND_STOP
 14335  04FE  2D1B               	goto	i1l164
 14336  04FF                     i1l4322:	
 14337  04FF  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14338  0500  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14339  0501  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14340  0502  00F9               	movwf	rdBlkRegCompleteHandler@p
 14341  0503  300F               	movlw	15
 14342  0504  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14343  0505  0086               	movwf	6
 14344  0506  0187               	clrf	7
 14345  0507  3F41               	moviw [1]fsr1
 14346  0508  008A               	movwf	10
 14347  0509  3F40               	moviw [0]fsr1
 14348  050A  000A               	callw
 14349  050B  3184               	pagesel	$
 14350  050C  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14351  050D  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14352                           
 14353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14354                           ; Switch size 1, requested type "simple"
 14355                           ; Number of cases is 1, Range of values is 0 to 0
 14356                           ; switch strategies available:
 14357                           ; Name         Instructions Cycles
 14358                           ; simple_byte            4     3 (average)
 14359                           ; direct_byte            8     6 (fixed)
 14360                           ; jumptable            260     6 (fixed)
 14361                           ;	Chosen strategy is simple_byte
 14362  050E  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14363  050F  3A00               	xorlw	0	; case 0
 14364  0510  1903               	skipnz
 14365  0511  2D13               	goto	i1l5370
 14366  0512  2CFB               	goto	i1l4316
 14367  0513                     i1l5370:	
 14368                           
 14369                           ; Switch size 1, requested type "simple"
 14370                           ; Number of cases is 2, Range of values is 2 to 3
 14371                           ; switch strategies available:
 14372                           ; Name         Instructions Cycles
 14373                           ; simple_byte            7     4 (average)
 14374                           ; direct_byte           13     9 (fixed)
 14375                           ; jumptable            263     9 (fixed)
 14376                           ;	Chosen strategy is simple_byte
 14377  0513  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14378  0514  3A02               	xorlw	2	; case 2
 14379  0515  1903               	skipnz
 14380  0516  2CF7               	goto	i1l4312
 14381  0517  3A01               	xorlw	1	; case 3
 14382  0518  1903               	skipnz
 14383  0519  2CF7               	goto	i1l4312
 14384  051A  2CFB               	goto	i1l4316
 14385  051B                     i1l164:	
 14386  051B  0008               	return
 14387  051C                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14388                           
 14389                           	psect	text44
 14390  0F35                     __ptext44:	
 14391 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14392 ;; Defined at:
 14393 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;		None
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;		None
 14398 ;; Return value:  Size  Location     Type
 14399 ;;                  1    wreg      enum E12722
 14400 ;; Registers used:
 14401 ;;		wreg, status,2, status,0, pclath, cstack
 14402 ;; Tracked objects:
 14403 ;;		On entry : 0/0
 14404 ;;		On exit  : 0/0
 14405 ;;		Unchanged: 0/0
 14406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;Total ram usage:        0 bytes
 14412 ;; Hardware stack levels used:    1
 14413 ;; Hardware stack levels required when called:    1
 14414 ;; This function calls:
 14415 ;;		_i2c1_driver_sendNACK
 14416 ;; This function is called by:
 14417 ;;		_do_I2C_RX
 14418 ;;		_i2c_ISR
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           
 14423                           ;psect for function _do_I2C_DO_NACK_RESTART
 14424  0F35                     _do_I2C_DO_NACK_RESTART:	
 14425  0F35                     i1l4046:	
 14426                           ;incstack = 0
 14427                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14428                           
 14429                           
 14430                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14431  0F35  318F  2705  318F   	fcall	_i2c1_driver_sendNACK
 14432  0F38                     i1l4048:	
 14433                           
 14434                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14435  0F38  3009               	movlw	9
 14436  0F39                     i1l158:	
 14437  0F39  0008               	return
 14438  0F3A                     __end_of_do_I2C_DO_NACK_RESTART:	
 14439                           
 14440                           	psect	text45
 14441  0F30                     __ptext45:	
 14442 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14443 ;; Defined at:
 14444 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;		None
 14447 ;; Auto vars:     Size  Location     Type
 14448 ;;		None
 14449 ;; Return value:  Size  Location     Type
 14450 ;;                  1    wreg      enum E12722
 14451 ;; Registers used:
 14452 ;;		wreg, status,2, status,0, pclath, cstack
 14453 ;; Tracked objects:
 14454 ;;		On entry : 0/0
 14455 ;;		On exit  : 0/0
 14456 ;;		Unchanged: 0/0
 14457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;Total ram usage:        0 bytes
 14463 ;; Hardware stack levels used:    1
 14464 ;; Hardware stack levels required when called:    1
 14465 ;; This function calls:
 14466 ;;		_i2c1_driver_sendNACK
 14467 ;; This function is called by:
 14468 ;;		_do_I2C_RX
 14469 ;;		_i2c_ISR
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           
 14474                           ;psect for function _do_I2C_DO_NACK_STOP
 14475  0F30                     _do_I2C_DO_NACK_STOP:	
 14476  0F30                     i1l4040:	
 14477                           ;incstack = 0
 14478                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14479                           
 14480                           
 14481                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14482  0F30  318F  2705  318F   	fcall	_i2c1_driver_sendNACK
 14483  0F33                     i1l4042:	
 14484                           
 14485                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14486  0F33  300A               	movlw	10
 14487  0F34                     i1l155:	
 14488  0F34  0008               	return
 14489  0F35                     __end_of_do_I2C_DO_NACK_STOP:	
 14490                           
 14491                           	psect	text46
 14492  0F2B                     __ptext46:	
 14493 ;; *************** function _do_I2C_DO_ACK *****************
 14494 ;; Defined at:
 14495 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;		None
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;		None
 14500 ;; Return value:  Size  Location     Type
 14501 ;;                  1    wreg      enum E12722
 14502 ;; Registers used:
 14503 ;;		wreg, status,2, status,0, pclath, cstack
 14504 ;; Tracked objects:
 14505 ;;		On entry : 0/0
 14506 ;;		On exit  : 0/0
 14507 ;;		Unchanged: 0/0
 14508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;Total ram usage:        0 bytes
 14514 ;; Hardware stack levels used:    1
 14515 ;; Hardware stack levels required when called:    1
 14516 ;; This function calls:
 14517 ;;		_i2c1_driver_sendACK
 14518 ;; This function is called by:
 14519 ;;		_i2c_ISR
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           
 14523                           
 14524                           ;psect for function _do_I2C_DO_ACK
 14525  0F2B                     _do_I2C_DO_ACK:	
 14526  0F2B                     i1l4302:	
 14527                           ;incstack = 0
 14528                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14529                           
 14530                           
 14531                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14532  0F2B  318F  2701  318F   	fcall	_i2c1_driver_sendACK
 14533  0F2E                     i1l4304:	
 14534                           
 14535                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14536  0F2E  3005               	movlw	5
 14537  0F2F                     i1l152:	
 14538  0F2F  0008               	return
 14539  0F30                     __end_of_do_I2C_DO_ACK:	
 14540                           
 14541                           	psect	text47
 14542  0F5E                     __ptext47:	
 14543 ;; *************** function _do_I2C_RCEN *****************
 14544 ;; Defined at:
 14545 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;		None
 14548 ;; Auto vars:     Size  Location     Type
 14549 ;;		None
 14550 ;; Return value:  Size  Location     Type
 14551 ;;                  1    wreg      enum E12722
 14552 ;; Registers used:
 14553 ;;		wreg, status,2, status,0, pclath, cstack
 14554 ;; Tracked objects:
 14555 ;;		On entry : 0/0
 14556 ;;		On exit  : 0/0
 14557 ;;		Unchanged: 0/0
 14558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;Total ram usage:        0 bytes
 14564 ;; Hardware stack levels used:    1
 14565 ;; Hardware stack levels required when called:    1
 14566 ;; This function calls:
 14567 ;;		_i2c1_driver_startRX
 14568 ;; This function is called by:
 14569 ;;		_i2c_ISR
 14570 ;; This function uses a non-reentrant model
 14571 ;;
 14572                           
 14573                           
 14574                           ;psect for function _do_I2C_RCEN
 14575  0F5E                     _do_I2C_RCEN:	
 14576  0F5E                     i1l4294:	
 14577                           ;incstack = 0
 14578                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14579                           
 14580                           
 14581                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14582  0F5E  0021               	movlb	1	; select bank1
 14583  0F5F  11A0               	bcf	_i2c_status^(0+128),3
 14584  0F60                     i1l4296:	
 14585                           
 14586                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14587  0F60  318E  26EC  318F   	fcall	_i2c1_driver_startRX
 14588  0F63                     i1l4298:	
 14589                           
 14590                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14591  0F63  3004               	movlw	4
 14592  0F64                     i1l149:	
 14593  0F64  0008               	return
 14594  0F65                     __end_of_do_I2C_RCEN:	
 14595                           
 14596                           	psect	text48
 14597  0F7C                     __ptext48:	
 14598 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14599 ;; Defined at:
 14600 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;		None
 14603 ;; Auto vars:     Size  Location     Type
 14604 ;;		None
 14605 ;; Return value:  Size  Location     Type
 14606 ;;                  1    wreg      enum E12722
 14607 ;; Registers used:
 14608 ;;		wreg, status,2, status,0, pclath, cstack
 14609 ;; Tracked objects:
 14610 ;;		On entry : 0/0
 14611 ;;		On exit  : 0/0
 14612 ;;		Unchanged: 0/0
 14613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;Total ram usage:        0 bytes
 14619 ;; Hardware stack levels used:    1
 14620 ;; Hardware stack levels required when called:    1
 14621 ;; This function calls:
 14622 ;;		_i2c1_driver_TXData
 14623 ;; This function is called by:
 14624 ;;		_i2c_ISR
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           
 14629                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14630  0F7C                     _do_I2C_SEND_ADR_WRITE:	
 14631  0F7C                     i1l4286:	
 14632                           ;incstack = 0
 14633                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14634                           
 14635                           
 14636                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 14637  0F7C  0021               	movlb	1	; select bank1
 14638  0F7D  15A0               	bsf	_i2c_status^(0+128),3
 14639  0F7E                     i1l4288:	
 14640                           
 14641                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 14642  0F7E  3521               	lslf	(_i2c_status^(0+128)+1),w
 14643  0F7F  318F  270D  318F   	fcall	_i2c1_driver_TXData
 14644  0F82                     i1l4290:	
 14645                           
 14646                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 14647  0F82  3003               	movlw	3
 14648  0F83                     i1l146:	
 14649  0F83  0008               	return
 14650  0F84                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14651                           
 14652                           	psect	text49
 14653  0F94                     __ptext49:	
 14654 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14655 ;; Defined at:
 14656 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;		None
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;		None
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  1    wreg      enum E12722
 14663 ;; Registers used:
 14664 ;;		wreg, status,2, status,0, pclath, cstack
 14665 ;; Tracked objects:
 14666 ;;		On entry : 0/0
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;Total ram usage:        0 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; Hardware stack levels required when called:    1
 14677 ;; This function calls:
 14678 ;;		_i2c1_driver_TXData
 14679 ;; This function is called by:
 14680 ;;		_i2c_ISR
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           
 14685                           ;psect for function _do_I2C_SEND_ADR_READ
 14686  0F94                     _do_I2C_SEND_ADR_READ:	
 14687  0F94                     i1l4278:	
 14688                           ;incstack = 0
 14689                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14690                           
 14691                           
 14692                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 14693  0F94  0021               	movlb	1	; select bank1
 14694  0F95  15A0               	bsf	_i2c_status^(0+128),3
 14695  0F96                     i1l4280:	
 14696                           
 14697                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 14698  0F96  1403               	setc
 14699  0F97  0D21               	rlf	(_i2c_status^(0+128)+1),w
 14700  0F98  318F  270D  318F   	fcall	_i2c1_driver_TXData
 14701  0F9B                     i1l4282:	
 14702                           
 14703                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 14704  0F9B  3005               	movlw	5
 14705  0F9C                     i1l143:	
 14706  0F9C  0008               	return
 14707  0F9D                     __end_of_do_I2C_SEND_ADR_READ:	
 14708                           
 14709                           	psect	text50
 14710  0F26                     __ptext50:	
 14711 ;; *************** function _do_I2C_SEND_STOP *****************
 14712 ;; Defined at:
 14713 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;		None
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;		None
 14718 ;; Return value:  Size  Location     Type
 14719 ;;                  1    wreg      enum E12722
 14720 ;; Registers used:
 14721 ;;		wreg, status,2, status,0, pclath, cstack
 14722 ;; Tracked objects:
 14723 ;;		On entry : 0/0
 14724 ;;		On exit  : 0/0
 14725 ;;		Unchanged: 0/0
 14726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14731 ;;Total ram usage:        0 bytes
 14732 ;; Hardware stack levels used:    1
 14733 ;; Hardware stack levels required when called:    1
 14734 ;; This function calls:
 14735 ;;		_i2c1_driver_stop
 14736 ;; This function is called by:
 14737 ;;		_do_I2C_DO_ADDRESS_NACK
 14738 ;;		_do_I2C_TX
 14739 ;;		_do_I2C_TX_EMPTY
 14740 ;;		_i2c_ISR
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function _do_I2C_SEND_STOP
 14746  0F26                     _do_I2C_SEND_STOP:	
 14747  0F26                     i1l4028:	
 14748                           ;incstack = 0
 14749                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 14750                           
 14751                           
 14752                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 14753  0F26  318E  26E9  318F   	fcall	_i2c1_driver_stop
 14754  0F29                     i1l4030:	
 14755                           
 14756                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 14757  0F29  3000               	movlw	0
 14758  0F2A                     i1l140:	
 14759  0F2A  0008               	return
 14760  0F2B                     __end_of_do_I2C_SEND_STOP:	
 14761                           
 14762                           	psect	text51
 14763  0F21                     __ptext51:	
 14764 ;; *************** function _do_I2C_SEND_RESTART *****************
 14765 ;; Defined at:
 14766 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;		None
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;		None
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      enum E12722
 14773 ;; Registers used:
 14774 ;;		wreg, status,2, status,0, pclath, cstack
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;Total ram usage:        0 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:    1
 14787 ;; This function calls:
 14788 ;;		_i2c1_driver_restart
 14789 ;; This function is called by:
 14790 ;;		_do_I2C_DO_ADDRESS_NACK
 14791 ;;		_do_I2C_TX_EMPTY
 14792 ;;		_i2c_ISR
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           
 14797                           ;psect for function _do_I2C_SEND_RESTART
 14798  0F21                     _do_I2C_SEND_RESTART:	
 14799  0F21                     i1l4022:	
 14800                           ;incstack = 0
 14801                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14802                           
 14803                           
 14804                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 14805  0F21  318E  26E6  318F   	fcall	_i2c1_driver_restart
 14806  0F24                     i1l4024:	
 14807                           
 14808                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 14809  0F24  3001               	movlw	1
 14810  0F25                     i1l137:	
 14811  0F25  0008               	return
 14812  0F26                     __end_of_do_I2C_SEND_RESTART:	
 14813                           
 14814                           	psect	text52
 14815  0F1C                     __ptext52:	
 14816 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 14817 ;; Defined at:
 14818 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 14819 ;; Parameters:    Size  Location     Type
 14820 ;;		None
 14821 ;; Auto vars:     Size  Location     Type
 14822 ;;		None
 14823 ;; Return value:  Size  Location     Type
 14824 ;;                  1    wreg      enum E12722
 14825 ;; Registers used:
 14826 ;;		wreg, status,2, status,0, pclath, cstack
 14827 ;; Tracked objects:
 14828 ;;		On entry : 0/0
 14829 ;;		On exit  : 0/0
 14830 ;;		Unchanged: 0/0
 14831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14836 ;;Total ram usage:        0 bytes
 14837 ;; Hardware stack levels used:    1
 14838 ;; Hardware stack levels required when called:    1
 14839 ;; This function calls:
 14840 ;;		_i2c1_driver_restart
 14841 ;; This function is called by:
 14842 ;;		_do_I2C_TX
 14843 ;;		_i2c_ISR
 14844 ;; This function uses a non-reentrant model
 14845 ;;
 14846                           
 14847                           
 14848                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 14849  0F1C                     _do_I2C_SEND_RESTART_WRITE:	
 14850  0F1C                     i1l4016:	
 14851                           ;incstack = 0
 14852                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14853                           
 14854                           
 14855                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 14856  0F1C  318E  26E6  318F   	fcall	_i2c1_driver_restart
 14857  0F1F                     i1l4018:	
 14858                           
 14859                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 14860  0F1F  3002               	movlw	2
 14861  0F20                     i1l134:	
 14862  0F20  0008               	return
 14863  0F21                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 14864                           
 14865                           	psect	text53
 14866  0F17                     __ptext53:	
 14867 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 14868 ;; Defined at:
 14869 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      enum E12722
 14876 ;; Registers used:
 14877 ;;		wreg, status,2, status,0, pclath, cstack
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;Total ram usage:        0 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:    1
 14890 ;; This function calls:
 14891 ;;		_i2c1_driver_restart
 14892 ;; This function is called by:
 14893 ;;		_do_I2C_TX
 14894 ;;		_i2c_ISR
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           
 14899                           ;psect for function _do_I2C_SEND_RESTART_READ
 14900  0F17                     _do_I2C_SEND_RESTART_READ:	
 14901  0F17                     i1l4010:	
 14902                           ;incstack = 0
 14903                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14904                           
 14905                           
 14906                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 14907  0F17  318E  26E6  318F   	fcall	_i2c1_driver_restart
 14908  0F1A                     i1l4012:	
 14909                           
 14910                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 14911  0F1A  3001               	movlw	1
 14912  0F1B                     i1l131:	
 14913  0F1B  0008               	return
 14914  0F1C                     __end_of_do_I2C_SEND_RESTART_READ:	
 14915                           
 14916                           	psect	text54
 14917  0F12                     __ptext54:	
 14918 ;; *************** function _do_I2C_IDLE *****************
 14919 ;; Defined at:
 14920 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      enum E12722
 14927 ;; Registers used:
 14928 ;;		wreg, status,2
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; This function calls:
 14941 ;;		Nothing
 14942 ;; This function is called by:
 14943 ;;		_i2c_ISR
 14944 ;; This function uses a non-reentrant model
 14945 ;;
 14946                           
 14947                           
 14948                           ;psect for function _do_I2C_IDLE
 14949  0F12                     _do_I2C_IDLE:	
 14950  0F12                     i1l4270:	
 14951                           ;incstack = 0
 14952                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 14953                           
 14954                           
 14955                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 14956  0F12  0021               	movlb	1	; select bank1
 14957  0F13  1020               	bcf	_i2c_status^(0+128),0
 14958  0F14                     i1l4272:	
 14959                           
 14960                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 14961  0F14  01AA               	clrf	(_i2c_status^(0+128)+10)
 14962  0F15                     i1l4274:	
 14963                           
 14964                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 14965  0F15  300E               	movlw	14
 14966  0F16                     i1l128:	
 14967  0F16  0008               	return
 14968  0F17                     __end_of_do_I2C_IDLE:	
 14969                           
 14970                           	psect	text55
 14971  0F74                     __ptext55:	
 14972 ;; *************** function _do_I2C_RESET *****************
 14973 ;; Defined at:
 14974 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;		None
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;		None
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      enum E12722
 14981 ;; Registers used:
 14982 ;;		wreg, status,2, status,0, pclath, cstack
 14983 ;; Tracked objects:
 14984 ;;		On entry : 0/0
 14985 ;;		On exit  : 0/0
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14992 ;;Total ram usage:        0 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; Hardware stack levels required when called:    1
 14995 ;; This function calls:
 14996 ;;		_i2c1_driver_resetBus
 14997 ;; This function is called by:
 14998 ;;		_i2c_ISR
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           
 15003                           ;psect for function _do_I2C_RESET
 15004  0F74                     _do_I2C_RESET:	
 15005  0F74                     i1l4260:	
 15006                           ;incstack = 0
 15007                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15008                           
 15009                           
 15010                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 15011  0F74  318E  26DE  318F   	fcall	_i2c1_driver_resetBus
 15012  0F77                     i1l4262:	
 15013                           
 15014                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 15015  0F77  0021               	movlb	1	; select bank1
 15016  0F78  1020               	bcf	_i2c_status^(0+128),0
 15017  0F79                     i1l4264:	
 15018                           
 15019                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 15020  0F79  01AA               	clrf	(_i2c_status^(0+128)+10)
 15021  0F7A                     i1l4266:	
 15022                           
 15023                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 15024  0F7A  300E               	movlw	14
 15025  0F7B                     i1l125:	
 15026  0F7B  0008               	return
 15027  0F7C                     __end_of_do_I2C_RESET:	
 15028                           
 15029                           	psect	text56
 15030  0490                     __ptext56:	
 15031 ;; *************** function _do_I2C_TX_EMPTY *****************
 15032 ;; Defined at:
 15033 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      enum E12722
 15040 ;; Registers used:
 15041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        3 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    3
 15054 ;; This function calls:
 15055 ;;		Absolute function
 15056 ;;		_do_I2C_SEND_RESTART
 15057 ;;		_do_I2C_SEND_STOP
 15058 ;;		_i2c_restartWrite
 15059 ;;		_mssp1_setIRQ
 15060 ;;		_rd1RegCompleteHandler
 15061 ;;		_rd2RegCompleteHandler
 15062 ;;		_rdBlkRegCompleteHandler
 15063 ;;		_returnReset
 15064 ;;		_returnStop
 15065 ;;		_wr1RegCompleteHandler
 15066 ;;		_wr2RegCompleteHandler
 15067 ;; This function is called by:
 15068 ;;		_i2c_ISR
 15069 ;; This function uses a non-reentrant model
 15070 ;;
 15071                           
 15072                           
 15073                           ;psect for function _do_I2C_TX_EMPTY
 15074  0490                     _do_I2C_TX_EMPTY:	
 15075  0490                     i1l4396:	
 15076                           ;incstack = 0
 15077                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15078                           
 15079                           
 15080                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 15081  0490  0021               	movlb	1	; select bank1
 15082  0491  1520               	bsf	_i2c_status^(0+128),2
 15083                           
 15084                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15085  0492  2CA0               	goto	i1l4414
 15086  0493                     i1l4398:	
 15087                           
 15088                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 15089  0493  318F  2721  3184   	fcall	_do_I2C_SEND_RESTART
 15090  0496  2CC2               	goto	i1l200
 15091  0497                     i1l4402:	
 15092                           
 15093                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 15094  0497  318E  26F2  3184   	fcall	_mssp1_setIRQ
 15095  049A                     i1l4404:	
 15096                           
 15097                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 15098  049A  3003               	movlw	3
 15099  049B  2CC2               	goto	i1l200
 15100  049C                     i1l4408:	
 15101                           
 15102                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 15103  049C  318F  2726  3184   	fcall	_do_I2C_SEND_STOP
 15104  049F  2CC2               	goto	i1l200
 15105  04A0                     i1l4414:	
 15106  04A0  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15107  04A1  00FA               	movwf	??_do_I2C_TX_EMPTY
 15108  04A2  087A               	movf	??_do_I2C_TX_EMPTY,w
 15109  04A3  00F9               	movwf	rdBlkRegCompleteHandler@p
 15110  04A4  300B               	movlw	11
 15111  04A5  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15112  04A6  0086               	movwf	6
 15113  04A7  0187               	clrf	7
 15114  04A8  3F41               	moviw [1]fsr1
 15115  04A9  008A               	movwf	10
 15116  04AA  3F40               	moviw [0]fsr1
 15117  04AB  000A               	callw
 15118  04AC  3184               	pagesel	$
 15119  04AD  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 15120  04AE  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 15121                           
 15122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15123                           ; Switch size 1, requested type "simple"
 15124                           ; Number of cases is 1, Range of values is 0 to 0
 15125                           ; switch strategies available:
 15126                           ; Name         Instructions Cycles
 15127                           ; simple_byte            4     3 (average)
 15128                           ; direct_byte            8     6 (fixed)
 15129                           ; jumptable            260     6 (fixed)
 15130                           ;	Chosen strategy is simple_byte
 15131  04AF  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 15132  04B0  3A00               	xorlw	0	; case 0
 15133  04B1  1903               	skipnz
 15134  04B2  2CB4               	goto	i1l5372
 15135  04B3  2C9C               	goto	i1l4408
 15136  04B4                     i1l5372:	
 15137                           
 15138                           ; Switch size 1, requested type "simple"
 15139                           ; Number of cases is 4, Range of values is 1 to 4
 15140                           ; switch strategies available:
 15141                           ; Name         Instructions Cycles
 15142                           ; simple_byte           13     7 (average)
 15143                           ; direct_byte           17     9 (fixed)
 15144                           ; jumptable            263     9 (fixed)
 15145                           ;	Chosen strategy is simple_byte
 15146  04B4  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 15147  04B5  3A01               	xorlw	1	; case 1
 15148  04B6  1903               	skipnz
 15149  04B7  2C9C               	goto	i1l4408
 15150  04B8  3A03               	xorlw	3	; case 2
 15151  04B9  1903               	skipnz
 15152  04BA  2C93               	goto	i1l4398
 15153  04BB  3A01               	xorlw	1	; case 3
 15154  04BC  1903               	skipnz
 15155  04BD  2C93               	goto	i1l4398
 15156  04BE  3A07               	xorlw	7	; case 4
 15157  04BF  1903               	skipnz
 15158  04C0  2C97               	goto	i1l4402
 15159  04C1  2C9C               	goto	i1l4408
 15160  04C2                     i1l200:	
 15161  04C2  0008               	return
 15162  04C3                     __end_of_do_I2C_TX_EMPTY:	
 15163                           
 15164                           	psect	text57
 15165  0EF2                     __ptext57:	
 15166 ;; *************** function _mssp1_setIRQ *****************
 15167 ;; Defined at:
 15168 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;		None
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		None
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15186 ;;Total ram usage:        0 bytes
 15187 ;; Hardware stack levels used:    1
 15188 ;; This function calls:
 15189 ;;		Nothing
 15190 ;; This function is called by:
 15191 ;;		_do_I2C_TX_EMPTY
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           
 15196                           ;psect for function _mssp1_setIRQ
 15197  0EF2                     _mssp1_setIRQ:	
 15198  0EF2                     i1l4060:	
 15199                           ;incstack = 0
 15200                           ; Regs used in _mssp1_setIRQ: []
 15201                           
 15202                           
 15203                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 15204  0EF2  002E               	movlb	14	; select bank14
 15205  0EF3  140F               	bsf	15,0	;volatile
 15206  0EF4                     i1l579:	
 15207  0EF4  0008               	return
 15208  0EF5                     __end_of_mssp1_setIRQ:	
 15209                           
 15210                           	psect	text58
 15211  0F6C                     __ptext58:	
 15212 ;; *************** function _i2c1_driver_isNACK *****************
 15213 ;; Defined at:
 15214 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;		None               void
 15221 ;; Registers used:
 15222 ;;		wreg, status,2, status,0
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;Total ram usage:        1 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_do_I2C_TX
 15238 ;;		_i2c_ISR
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           
 15243                           ;psect for function _i2c1_driver_isNACK
 15244  0F6C                     _i2c1_driver_isNACK:	
 15245  0F6C                     i1l4052:	
 15246                           ;incstack = 0
 15247                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15248                           
 15249                           
 15250                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 15251  0F6C  0023               	movlb	3	; select bank3
 15252  0F6D  0E11               	swapf	17,w	;volatile
 15253  0F6E  0C89               	rrf	9,f
 15254  0F6F  0C89               	rrf	9,f
 15255  0F70  3901               	andlw	1
 15256  0F71  00F0               	movwf	??_i2c1_driver_isNACK
 15257  0F72  0C70               	rrf	??_i2c1_driver_isNACK,w
 15258  0F73                     i1l614:	
 15259  0F73  0008               	return
 15260  0F74                     __end_of_i2c1_driver_isNACK:	
 15261                           
 15262                           	psect	text59
 15263  0F0D                     __ptext59:	
 15264 ;; *************** function _i2c1_driver_TXData *****************
 15265 ;; Defined at:
 15266 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  d               1    wreg     unsigned char 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;  d               1    0[COMMON] unsigned char 
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      void 
 15273 ;; Registers used:
 15274 ;;		wreg
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;Total ram usage:        1 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; This function calls:
 15287 ;;		Nothing
 15288 ;; This function is called by:
 15289 ;;		_do_I2C_SEND_ADR_READ
 15290 ;;		_do_I2C_SEND_ADR_WRITE
 15291 ;;		_do_I2C_TX
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           
 15296                           ;psect for function _i2c1_driver_TXData
 15297  0F0D                     _i2c1_driver_TXData:	
 15298                           
 15299                           ;incstack = 0
 15300                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15301                           ;i2c1_driver_TXData@d stored from wreg
 15302  0F0D  00F0               	movwf	i2c1_driver_TXData@d
 15303  0F0E                     i1l4034:	
 15304                           
 15305                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 15306  0F0E  0870               	movf	i2c1_driver_TXData@d,w
 15307  0F0F  0023               	movlb	3	; select bank3
 15308  0F10  008C               	movwf	12	;volatile
 15309  0F11                     i1l629:	
 15310  0F11  0008               	return
 15311  0F12                     __end_of_i2c1_driver_TXData:	
 15312                           
 15313                           	psect	text60
 15314  0EEF                     __ptext60:	
 15315 ;; *************** function _i2c1_driver_getRXData *****************
 15316 ;; Defined at:
 15317 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 15318 ;; Parameters:    Size  Location     Type
 15319 ;;		None
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;		None
 15322 ;; Return value:  Size  Location     Type
 15323 ;;                  1    wreg      unsigned char 
 15324 ;; Registers used:
 15325 ;;		wreg
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;Total ram usage:        0 bytes
 15336 ;; Hardware stack levels used:    1
 15337 ;; This function calls:
 15338 ;;		Nothing
 15339 ;; This function is called by:
 15340 ;;		_do_I2C_RX
 15341 ;; This function uses a non-reentrant model
 15342 ;;
 15343                           
 15344                           
 15345                           ;psect for function _i2c1_driver_getRXData
 15346  0EEF                     _i2c1_driver_getRXData:	
 15347  0EEF                     i1l4056:	
 15348                           ;incstack = 0
 15349                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15350                           
 15351                           
 15352                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 15353  0EEF  0023               	movlb	3	; select bank3
 15354  0EF0  080C               	movf	12,w	;volatile
 15355  0EF1                     i1l620:	
 15356  0EF1  0008               	return
 15357  0EF2                     __end_of_i2c1_driver_getRXData:	
 15358                           
 15359                           	psect	text61
 15360  0F05                     __ptext61:	
 15361 ;; *************** function _i2c1_driver_sendNACK *****************
 15362 ;; Defined at:
 15363 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 15364 ;; Parameters:    Size  Location     Type
 15365 ;;		None
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;		None
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  1    wreg      void 
 15370 ;; Registers used:
 15371 ;;		None
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;Total ram usage:        0 bytes
 15382 ;; Hardware stack levels used:    1
 15383 ;; This function calls:
 15384 ;;		Nothing
 15385 ;; This function is called by:
 15386 ;;		_do_I2C_DO_NACK_STOP
 15387 ;;		_do_I2C_DO_NACK_RESTART
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           
 15391                           
 15392                           ;psect for function _i2c1_driver_sendNACK
 15393  0F05                     _i2c1_driver_sendNACK:	
 15394  0F05                     i1l3956:	
 15395                           ;incstack = 0
 15396                           ; Regs used in _i2c1_driver_sendNACK: []
 15397                           
 15398                           
 15399                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 15400  0F05  0023               	movlb	3	; select bank3
 15401  0F06  1691               	bsf	17,5	;volatile
 15402                           
 15403                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 15404  0F07  1611               	bsf	17,4	;volatile
 15405  0F08                     i1l638:	
 15406  0F08  0008               	return
 15407  0F09                     __end_of_i2c1_driver_sendNACK:	
 15408                           
 15409                           	psect	text62
 15410  0EDE                     __ptext62:	
 15411 ;; *************** function _i2c1_driver_resetBus *****************
 15412 ;; Defined at:
 15413 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 15414 ;; Parameters:    Size  Location     Type
 15415 ;;		None
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;		None
 15418 ;; Return value:  Size  Location     Type
 15419 ;;                  1    wreg      void 
 15420 ;; Registers used:
 15421 ;;		None
 15422 ;; Tracked objects:
 15423 ;;		On entry : 0/0
 15424 ;;		On exit  : 0/0
 15425 ;;		Unchanged: 0/0
 15426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15431 ;;Total ram usage:        0 bytes
 15432 ;; Hardware stack levels used:    1
 15433 ;; This function calls:
 15434 ;;		Nothing
 15435 ;; This function is called by:
 15436 ;;		_do_I2C_RESET
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           
 15441                           ;psect for function _i2c1_driver_resetBus
 15442  0EDE                     _i2c1_driver_resetBus:	
 15443  0EDE                     i1l602:	
 15444                           ;incstack = 0
 15445                           ; Regs used in _i2c1_driver_resetBus: []
 15446                           
 15447  0EDE  0008               	return
 15448  0EDF                     __end_of_i2c1_driver_resetBus:	
 15449                           
 15450                           	psect	text63
 15451  0EEC                     __ptext63:	
 15452 ;; *************** function _i2c1_driver_startRX *****************
 15453 ;; Defined at:
 15454 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;		None
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;		None
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  1    wreg      void 
 15461 ;; Registers used:
 15462 ;;		None
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;Total ram usage:        0 bytes
 15473 ;; Hardware stack levels used:    1
 15474 ;; This function calls:
 15475 ;;		Nothing
 15476 ;; This function is called by:
 15477 ;;		_do_I2C_RCEN
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           
 15482                           ;psect for function _i2c1_driver_startRX
 15483  0EEC                     _i2c1_driver_startRX:	
 15484  0EEC                     i1l4036:	
 15485                           ;incstack = 0
 15486                           ; Regs used in _i2c1_driver_startRX: []
 15487                           
 15488                           
 15489                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 15490  0EEC  0023               	movlb	3	; select bank3
 15491  0EED  1591               	bsf	17,3	;volatile
 15492  0EEE                     i1l617:	
 15493  0EEE  0008               	return
 15494  0EEF                     __end_of_i2c1_driver_startRX:	
 15495                           
 15496                           	psect	text64
 15497  06D3                     __ptext64:	
 15498 ;; *************** function _rdBlkRegCompleteHandler *****************
 15499 ;; Defined at:
 15500 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;  p               1    9[COMMON] PTR void 
 15503 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15504 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;		None
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  1    wreg      enum E358
 15509 ;; Registers used:
 15510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15511 ;; Tracked objects:
 15512 ;;		On entry : 0/0
 15513 ;;		On exit  : 0/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15516 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15520 ;;Total ram usage:        1 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; Hardware stack levels required when called:    2
 15523 ;; This function calls:
 15524 ;;		_i2c_setBuffer
 15525 ;;		_i2c_setDataCompleteCallback
 15526 ;; This function is called by:
 15527 ;;		_i2c_readDataBlock
 15528 ;;		_do_I2C_DO_ADDRESS_NACK
 15529 ;;		_do_I2C_TX
 15530 ;;		_do_I2C_RX
 15531 ;;		_do_I2C_TX_EMPTY
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           
 15536                           ;psect for function _rdBlkRegCompleteHandler
 15537  06D3                     _rdBlkRegCompleteHandler:	
 15538  06D3                     i1l4102:	
 15539                           ;incstack = 0
 15540                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15541                           
 15542                           
 15543                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 15544  06D3  0879               	movf	rdBlkRegCompleteHandler@p,w
 15545  06D4  0086               	movwf	6
 15546  06D5  0187               	clrf	7
 15547  06D6  3F40               	moviw [0]fsr1
 15548  06D7  00F0               	movwf	i2c_setBuffer@bufferSize
 15549  06D8  3F41               	moviw [1]fsr1
 15550  06D9  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15551  06DA  0879               	movf	rdBlkRegCompleteHandler@p,w
 15552  06DB  3E02               	addlw	2
 15553  06DC  0086               	movwf	6
 15554  06DD  0187               	clrf	7
 15555  06DE  0801               	movf	1,w
 15556  06DF  3187  27A8  3186   	fcall	_i2c_setBuffer
 15557                           
 15558                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15559  06E2  3000               	movlw	0
 15560  06E3  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15561  06E4  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15562  06E5  01F7               	clrf	i2c_setDataCompleteCallback@p
 15563  06E6  318F  27F3  3186   	fcall	_i2c_setDataCompleteCallback
 15564  06E9                     i1l4104:	
 15565                           
 15566                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 15567  06E9  3002               	movlw	2
 15568  06EA                     i1l303:	
 15569  06EA  0008               	return
 15570  06EB                     __end_of_rdBlkRegCompleteHandler:	
 15571                           
 15572                           	psect	text65
 15573  0743                     __ptext65:	
 15574 ;; *************** function _rd2RegCompleteHandler *****************
 15575 ;; Defined at:
 15576 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;  p               1    9[COMMON] PTR void 
 15579 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15580 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;		None
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  1    wreg      enum E358
 15585 ;; Registers used:
 15586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/0
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;Total ram usage:        1 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; Hardware stack levels required when called:    2
 15599 ;; This function calls:
 15600 ;;		_i2c_setBuffer
 15601 ;;		_i2c_setDataCompleteCallback
 15602 ;; This function is called by:
 15603 ;;		_i2c_read2ByteRegister
 15604 ;;		_do_I2C_DO_ADDRESS_NACK
 15605 ;;		_do_I2C_TX
 15606 ;;		_do_I2C_RX
 15607 ;;		_do_I2C_TX_EMPTY
 15608 ;; This function uses a non-reentrant model
 15609 ;;
 15610                           
 15611                           
 15612                           ;psect for function _rd2RegCompleteHandler
 15613  0743                     _rd2RegCompleteHandler:	
 15614  0743                     i1l4086:	
 15615                           ;incstack = 0
 15616                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15617                           
 15618                           
 15619                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 15620  0743  3002               	movlw	2
 15621  0744  00F0               	movwf	i2c_setBuffer@bufferSize
 15622  0745  3000               	movlw	0
 15623  0746  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15624  0747  0879               	movf	rd2RegCompleteHandler@p,w
 15625  0748  3187  27A8  3187   	fcall	_i2c_setBuffer
 15626  074B                     i1l4088:	
 15627                           
 15628                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15629  074B  3000               	movlw	0
 15630  074C  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15631  074D  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15632  074E  01F7               	clrf	i2c_setDataCompleteCallback@p
 15633  074F  318F  27F3  3187   	fcall	_i2c_setDataCompleteCallback
 15634  0752                     i1l4090:	
 15635                           
 15636                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 15637  0752  3002               	movlw	2
 15638  0753                     i1l279:	
 15639  0753  0008               	return
 15640  0754                     __end_of_rd2RegCompleteHandler:	
 15641                           
 15642                           	psect	text66
 15643  0754                     __ptext66:	
 15644 ;; *************** function _rd1RegCompleteHandler *****************
 15645 ;; Defined at:
 15646 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;  p               1    9[COMMON] PTR void 
 15649 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15650 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;		None
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  1    wreg      enum E358
 15655 ;; Registers used:
 15656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15662 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;Total ram usage:        1 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    2
 15669 ;; This function calls:
 15670 ;;		_i2c_setBuffer
 15671 ;;		_i2c_setDataCompleteCallback
 15672 ;; This function is called by:
 15673 ;;		_i2c_read1ByteRegister
 15674 ;;		_do_I2C_DO_ADDRESS_NACK
 15675 ;;		_do_I2C_TX
 15676 ;;		_do_I2C_RX
 15677 ;;		_do_I2C_TX_EMPTY
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681                           
 15682                           ;psect for function _rd1RegCompleteHandler
 15683  0754                     _rd1RegCompleteHandler:	
 15684  0754                     i1l4078:	
 15685                           ;incstack = 0
 15686                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15687                           
 15688                           
 15689                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 15690  0754  3001               	movlw	1
 15691  0755  00F0               	movwf	i2c_setBuffer@bufferSize
 15692  0756  3000               	movlw	0
 15693  0757  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15694  0758  0879               	movf	rd1RegCompleteHandler@p,w
 15695  0759  3187  27A8  3187   	fcall	_i2c_setBuffer
 15696  075C                     i1l4080:	
 15697                           
 15698                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15699  075C  3000               	movlw	0
 15700  075D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15701  075E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15702  075F  01F7               	clrf	i2c_setDataCompleteCallback@p
 15703  0760  318F  27F3  3187   	fcall	_i2c_setDataCompleteCallback
 15704  0763                     i1l4082:	
 15705                           
 15706                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 15707  0763  3002               	movlw	2
 15708  0764                     i1l264:	
 15709  0764  0008               	return
 15710  0765                     __end_of_rd1RegCompleteHandler:	
 15711                           
 15712                           	psect	text67
 15713  0765                     __ptext67:	
 15714 ;; *************** function _wr1RegCompleteHandler *****************
 15715 ;; Defined at:
 15716 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15717 ;; Parameters:    Size  Location     Type
 15718 ;;  p               1    9[COMMON] PTR void 
 15719 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15720 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15721 ;; Auto vars:     Size  Location     Type
 15722 ;;		None
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  1    wreg      enum E358
 15725 ;; Registers used:
 15726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;Total ram usage:        1 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    2
 15739 ;; This function calls:
 15740 ;;		_i2c_setBuffer
 15741 ;;		_i2c_setDataCompleteCallback
 15742 ;; This function is called by:
 15743 ;;		_i2c_write1ByteRegister
 15744 ;;		_do_I2C_DO_ADDRESS_NACK
 15745 ;;		_do_I2C_TX
 15746 ;;		_do_I2C_RX
 15747 ;;		_do_I2C_TX_EMPTY
 15748 ;; This function uses a non-reentrant model
 15749 ;;
 15750                           
 15751                           
 15752                           ;psect for function _wr1RegCompleteHandler
 15753  0765                     _wr1RegCompleteHandler:	
 15754  0765                     i1l4070:	
 15755                           ;incstack = 0
 15756                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15757                           
 15758                           
 15759                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 15760  0765  3001               	movlw	1
 15761  0766  00F0               	movwf	i2c_setBuffer@bufferSize
 15762  0767  3000               	movlw	0
 15763  0768  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15764  0769  0879               	movf	wr1RegCompleteHandler@p,w
 15765  076A  3187  27A8  3187   	fcall	_i2c_setBuffer
 15766  076D                     i1l4072:	
 15767                           
 15768                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15769  076D  3000               	movlw	0
 15770  076E  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15771  076F  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15772  0770  01F7               	clrf	i2c_setDataCompleteCallback@p
 15773  0771  318F  27F3  3187   	fcall	_i2c_setDataCompleteCallback
 15774  0774                     i1l4074:	
 15775                           
 15776                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 15777  0774  3004               	movlw	4
 15778  0775                     i1l243:	
 15779  0775  0008               	return
 15780  0776                     __end_of_wr1RegCompleteHandler:	
 15781                           
 15782                           	psect	text68
 15783  0002                     __ptext68:	
 15784 ;; *************** function _returnReset *****************
 15785 ;; Defined at:
 15786 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;  p               1    9[COMMON] PTR void 
 15789 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15790 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      enum E12568
 15795 ;; Registers used:
 15796 ;;		wreg
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;Total ram usage:        1 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; This function calls:
 15809 ;;		Nothing
 15810 ;; This function is called by:
 15811 ;;		_i2c_open
 15812 ;;		_do_I2C_DO_ADDRESS_NACK
 15813 ;;		_do_I2C_TX
 15814 ;;		_do_I2C_RX
 15815 ;;		_do_I2C_TX_EMPTY
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           
 15820                           ;psect for function _returnReset
 15821  0002                     _returnReset:	
 15822  0002                     i1l4066:	
 15823                           ;incstack = 0
 15824                           ; Regs used in _returnReset: [wreg]
 15825                           
 15826                           
 15827                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 15828  0002  3005               	movlw	5
 15829  0003                     i1l219:	
 15830  0003  0008               	return
 15831  0004                     __end_of_returnReset:	
 15832                           
 15833                           	psect	text69
 15834  0EE1                     __ptext69:	
 15835 ;; *************** function _returnStop *****************
 15836 ;; Defined at:
 15837 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  p               1    9[COMMON] PTR void 
 15840 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15841 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;		None
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  1    wreg      enum E12568
 15846 ;; Registers used:
 15847 ;;		wreg
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;Total ram usage:        1 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; This function calls:
 15860 ;;		Nothing
 15861 ;; This function is called by:
 15862 ;;		_setCallBack
 15863 ;;		_i2c_open
 15864 ;;		_do_I2C_DO_ADDRESS_NACK
 15865 ;;		_do_I2C_TX
 15866 ;;		_do_I2C_RX
 15867 ;;		_do_I2C_TX_EMPTY
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           
 15872                           ;psect for function _returnStop
 15873  0EE1                     _returnStop:	
 15874  0EE1                     i1l4062:	
 15875                           ;incstack = 0
 15876                           ; Regs used in _returnStop: [wreg]
 15877                           
 15878                           
 15879                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 15880  0EE1  3001               	movlw	1
 15881  0EE2                     i1l216:	
 15882  0EE2  0008               	return
 15883  0EE3                     __end_of_returnStop:	
 15884                           
 15885                           	psect	text70
 15886  0EDF                     __ptext70:	
 15887 ;; *************** function _i2c_restartWrite *****************
 15888 ;; Defined at:
 15889 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  p               1    9[COMMON] PTR void 
 15892 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15893 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;		None
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1    wreg      enum E358
 15898 ;; Registers used:
 15899 ;;		wreg
 15900 ;; Tracked objects:
 15901 ;;		On entry : 0/0
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15909 ;;Total ram usage:        1 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; This function calls:
 15912 ;;		Nothing
 15913 ;; This function is called by:
 15914 ;;		_i2c_write1ByteRegister
 15915 ;;		_i2c_writeNBytes
 15916 ;;		_i2c_read1ByteRegister
 15917 ;;		_i2c_read2ByteRegister
 15918 ;;		_i2c_write2ByteRegister
 15919 ;;		_i2c_readDataBlock
 15920 ;;		_do_I2C_DO_ADDRESS_NACK
 15921 ;;		_do_I2C_TX
 15922 ;;		_do_I2C_RX
 15923 ;;		_do_I2C_TX_EMPTY
 15924 ;; This function uses a non-reentrant model
 15925 ;;
 15926                           
 15927                           
 15928                           ;psect for function _i2c_restartWrite
 15929  0EDF                     _i2c_restartWrite:	
 15930  0EDF                     i1l3998:	
 15931                           ;incstack = 0
 15932                           ; Regs used in _i2c_restartWrite: [wreg]
 15933                           
 15934                           
 15935                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 15936  0EDF  3003               	movlw	3
 15937  0EE0                     i1l9:	
 15938  0EE0  0008               	return
 15939  0EE1                     __end_of_i2c_restartWrite:	
 15940                           
 15941                           	psect	text71
 15942  0776                     __ptext71:	
 15943 ;; *************** function _wr2RegCompleteHandler *****************
 15944 ;; Defined at:
 15945 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  p               1    9[COMMON] PTR void 
 15948 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15949 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;		None
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      enum E358
 15954 ;; Registers used:
 15955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15961 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;Total ram usage:        1 bytes
 15966 ;; Hardware stack levels used:    1
 15967 ;; Hardware stack levels required when called:    2
 15968 ;; This function calls:
 15969 ;;		_i2c_setBuffer
 15970 ;;		_i2c_setDataCompleteCallback
 15971 ;; This function is called by:
 15972 ;;		_i2c_write2ByteRegister
 15973 ;;		_do_I2C_DO_ADDRESS_NACK
 15974 ;;		_do_I2C_TX
 15975 ;;		_do_I2C_RX
 15976 ;;		_do_I2C_TX_EMPTY
 15977 ;; This function uses a non-reentrant model
 15978 ;;
 15979                           
 15980                           
 15981                           ;psect for function _wr2RegCompleteHandler
 15982  0776                     _wr2RegCompleteHandler:	
 15983  0776                     i1l4094:	
 15984                           ;incstack = 0
 15985                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15986                           
 15987                           
 15988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 15989  0776  3002               	movlw	2
 15990  0777  00F0               	movwf	i2c_setBuffer@bufferSize
 15991  0778  3000               	movlw	0
 15992  0779  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15993  077A  0879               	movf	wr2RegCompleteHandler@p,w
 15994  077B  3187  27A8  3187   	fcall	_i2c_setBuffer
 15995  077E                     i1l4096:	
 15996                           
 15997                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15998  077E  3000               	movlw	0
 15999  077F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16000  0780  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16001  0781  01F7               	clrf	i2c_setDataCompleteCallback@p
 16002  0782  318F  27F3  3187   	fcall	_i2c_setDataCompleteCallback
 16003  0785                     i1l4098:	
 16004                           
 16005                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 16006  0785  3004               	movlw	4
 16007  0786                     i1l291:	
 16008  0786  0008               	return
 16009  0787                     __end_of_wr2RegCompleteHandler:	
 16010                           
 16011                           	psect	text72
 16012  0FF3                     __ptext72:	
 16013 ;; *************** function _i2c_setDataCompleteCallback *****************
 16014 ;; Defined at:
 16015 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16016 ;; Parameters:    Size  Location     Type
 16017 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 16018 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16019 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16020 ;;  p               1    7[COMMON] PTR void 
 16021 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16022 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      void 
 16027 ;; Registers used:
 16028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16034 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;Total ram usage:        4 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:    1
 16041 ;; This function calls:
 16042 ;;		_setCallBack
 16043 ;; This function is called by:
 16044 ;;		_wr1RegCompleteHandler
 16045 ;;		_rd1RegCompleteHandler
 16046 ;;		_rd2RegCompleteHandler
 16047 ;;		_wr2RegCompleteHandler
 16048 ;;		_rdBlkRegCompleteHandler
 16049 ;;		_i2c_write1ByteRegister
 16050 ;;		_i2c_read1ByteRegister
 16051 ;;		_i2c_read2ByteRegister
 16052 ;;		_i2c_write2ByteRegister
 16053 ;;		_i2c_readDataBlock
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           
 16058                           ;psect for function _i2c_setDataCompleteCallback
 16059  0FF3                     _i2c_setDataCompleteCallback:	
 16060  0FF3                     i1l3944:	
 16061                           ;incstack = 0
 16062                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16063                           
 16064                           
 16065                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 16066  0FF3  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 16067  0FF4  00F1               	movwf	setCallBack@cb+1
 16068  0FF5  0875               	movf	i2c_setDataCompleteCallback@cb,w
 16069  0FF6  00F0               	movwf	setCallBack@cb
 16070  0FF7  0877               	movf	i2c_setDataCompleteCallback@p,w
 16071  0FF8  00F8               	movwf	??_i2c_setDataCompleteCallback
 16072  0FF9  0878               	movf	??_i2c_setDataCompleteCallback,w
 16073  0FFA  00F2               	movwf	setCallBack@p
 16074  0FFB  3000               	movlw	0
 16075  0FFC  3185  2574  318F   	fcall	_setCallBack
 16076  0FFF                     i1l73:	
 16077  0FFF  0008               	return
 16078  1000                     __end_of_i2c_setDataCompleteCallback:	
 16079                           
 16080                           	psect	text73
 16081  0574                     __ptext73:	
 16082 ;; *************** function _setCallBack *****************
 16083 ;; Defined at:
 16084 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  idx             1    wreg     enum E12740
 16087 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 16088 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16089 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 16090 ;;  p               1    2[COMMON] PTR void 
 16091 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16092 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;  idx             1    4[COMMON] enum E12740
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16108 ;;Total ram usage:        5 bytes
 16109 ;; Hardware stack levels used:    1
 16110 ;; This function calls:
 16111 ;;		Nothing
 16112 ;; This function is called by:
 16113 ;;		_i2c_setDataCompleteCallback
 16114 ;;		_i2c_setWriteCollisionCallback
 16115 ;;		_i2c_setAddressNACKCallback
 16116 ;;		_i2c_setDataNACKCallback
 16117 ;;		_i2c_setTimeOutCallback
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           
 16122                           ;psect for function _setCallBack
 16123  0574                     _setCallBack:	
 16124                           
 16125                           ;incstack = 0
 16126                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16127                           ;setCallBack@idx stored from wreg
 16128  0574  00F4               	movwf	setCallBack@idx
 16129  0575                     i1l3938:	
 16130                           
 16131                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 16132  0575  0870               	movf	setCallBack@cb,w
 16133  0576  0471               	iorwf	setCallBack@cb+1,w
 16134  0577  1903               	btfsc	3,2
 16135  0578  2D7A               	goto	u140_21
 16136  0579  2D7B               	goto	u140_20
 16137  057A                     u140_21:	
 16138  057A  2D8C               	goto	i1l3942
 16139  057B                     u140_20:	
 16140  057B                     i1l3940:	
 16141                           
 16142                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 16143  057B  3574               	lslf	setCallBack@idx,w
 16144  057C  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16145  057D  0086               	movwf	6
 16146  057E  0187               	clrf	7
 16147  057F  0870               	movf	setCallBack@cb,w
 16148  0580  3FC0               	movwi [0]fsr1
 16149  0581  0871               	movf	setCallBack@cb+1,w
 16150  0582  3FC1               	movwi [1]fsr1
 16151                           
 16152                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 16153  0583  0872               	movf	setCallBack@p,w
 16154  0584  00F3               	movwf	??_setCallBack
 16155  0585  0874               	movf	setCallBack@idx,w
 16156  0586  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16157  0587  0086               	movwf	6
 16158  0588  0187               	clrf	7
 16159  0589  0873               	movf	??_setCallBack,w
 16160  058A  0081               	movwf	1
 16161                           
 16162                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 16163  058B  2D99               	goto	i1l224
 16164  058C                     i1l3942:	
 16165                           
 16166                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 16167  058C  3574               	lslf	setCallBack@idx,w
 16168  058D  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16169  058E  0086               	movwf	6
 16170  058F  0187               	clrf	7
 16171  0590  30E1               	movlw	low _returnStop
 16172  0591  3FC0               	movwi [0]fsr1
 16173  0592  300E               	movlw	high _returnStop
 16174  0593  3FC1               	movwi [1]fsr1
 16175                           
 16176                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 16177  0594  0874               	movf	setCallBack@idx,w
 16178  0595  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16179  0596  0086               	movwf	6
 16180  0597  0187               	clrf	7
 16181  0598  0181               	clrf	1
 16182  0599                     i1l224:	
 16183  0599  0008               	return
 16184  059A                     __end_of_setCallBack:	
 16185                           
 16186                           	psect	text74
 16187  07A8                     __ptext74:	
 16188 ;; *************** function _i2c_setBuffer *****************
 16189 ;; Defined at:
 16190 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16191 ;; Parameters:    Size  Location     Type
 16192 ;;  buffer          1    wreg     PTR void 
 16193 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16194 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16195 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16196 ;;  bufferSize      2    0[COMMON] unsigned int 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  buffer          1    3[COMMON] PTR void 
 16199 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16200 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16201 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  1    wreg      void 
 16204 ;; Registers used:
 16205 ;;		wreg
 16206 ;; Tracked objects:
 16207 ;;		On entry : 0/0
 16208 ;;		On exit  : 0/0
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16215 ;;Total ram usage:        4 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; This function calls:
 16218 ;;		Nothing
 16219 ;; This function is called by:
 16220 ;;		_wr1RegCompleteHandler
 16221 ;;		_rd1RegCompleteHandler
 16222 ;;		_rd2RegCompleteHandler
 16223 ;;		_wr2RegCompleteHandler
 16224 ;;		_rdBlkRegCompleteHandler
 16225 ;;		_i2c_write1ByteRegister
 16226 ;;		_i2c_writeNBytes
 16227 ;;		_i2c_read1ByteRegister
 16228 ;;		_i2c_read2ByteRegister
 16229 ;;		_i2c_write2ByteRegister
 16230 ;;		_i2c_readDataBlock
 16231 ;;		_i2c_readNBytes
 16232 ;; This function uses a non-reentrant model
 16233 ;;
 16234                           
 16235                           
 16236                           ;psect for function _i2c_setBuffer
 16237  07A8                     _i2c_setBuffer:	
 16238                           
 16239                           ;incstack = 0
 16240                           ; Regs used in _i2c_setBuffer: [wreg]
 16241                           ;i2c_setBuffer@buffer stored from wreg
 16242  07A8  00F3               	movwf	i2c_setBuffer@buffer
 16243  07A9                     i1l3946:	
 16244                           
 16245                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 16246  07A9  0021               	movlb	1	; select bank1
 16247  07AA  1D20               	btfss	_i2c_status^(0+128),2
 16248  07AB  2FAD               	goto	u141_21
 16249  07AC  2FAE               	goto	u141_20
 16250  07AD                     u141_21:	
 16251  07AD  2FB7               	goto	i1l103
 16252  07AE                     u141_20:	
 16253  07AE                     i1l3948:	
 16254                           
 16255                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 16256  07AE  0873               	movf	i2c_setBuffer@buffer,w
 16257  07AF  00F2               	movwf	??_i2c_setBuffer
 16258  07B0  0872               	movf	??_i2c_setBuffer,w
 16259  07B1  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16260                           
 16261                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 16262  07B2  0871               	movf	i2c_setBuffer@bufferSize+1,w
 16263  07B3  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16264  07B4  0870               	movf	i2c_setBuffer@bufferSize,w
 16265  07B5  00A3               	movwf	(_i2c_status^(0+128)+3)
 16266  07B6                     i1l3950:	
 16267                           
 16268                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 16269  07B6  1120               	bcf	_i2c_status^(0+128),2
 16270  07B7                     i1l103:	
 16271  07B7  0008               	return
 16272  07B8                     __end_of_i2c_setBuffer:	
 16273                           
 16274                           	psect	text75
 16275  0EE9                     __ptext75:	
 16276 ;; *************** function _i2c1_driver_stop *****************
 16277 ;; Defined at:
 16278 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;		None
 16281 ;; Auto vars:     Size  Location     Type
 16282 ;;		None
 16283 ;; Return value:  Size  Location     Type
 16284 ;;                  1    wreg      void 
 16285 ;; Registers used:
 16286 ;;		None
 16287 ;; Tracked objects:
 16288 ;;		On entry : 0/0
 16289 ;;		On exit  : 0/0
 16290 ;;		Unchanged: 0/0
 16291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16296 ;;Total ram usage:        0 bytes
 16297 ;; Hardware stack levels used:    1
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_do_I2C_SEND_STOP
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           
 16306                           ;psect for function _i2c1_driver_stop
 16307  0EE9                     _i2c1_driver_stop:	
 16308  0EE9                     i1l3954:	
 16309                           ;incstack = 0
 16310                           ; Regs used in _i2c1_driver_stop: []
 16311                           
 16312                           
 16313                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 16314  0EE9  0023               	movlb	3	; select bank3
 16315  0EEA  1511               	bsf	17,2	;volatile
 16316  0EEB                     i1l611:	
 16317  0EEB  0008               	return
 16318  0EEC                     __end_of_i2c1_driver_stop:	
 16319                           
 16320                           	psect	text76
 16321  0EE6                     __ptext76:	
 16322 ;; *************** function _i2c1_driver_restart *****************
 16323 ;; Defined at:
 16324 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;		None
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  1    wreg      void 
 16331 ;; Registers used:
 16332 ;;		None
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;Total ram usage:        0 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; This function calls:
 16345 ;;		Nothing
 16346 ;; This function is called by:
 16347 ;;		_do_I2C_SEND_RESTART_READ
 16348 ;;		_do_I2C_SEND_RESTART_WRITE
 16349 ;;		_do_I2C_SEND_RESTART
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           
 16354                           ;psect for function _i2c1_driver_restart
 16355  0EE6                     _i2c1_driver_restart:	
 16356  0EE6                     i1l3952:	
 16357                           ;incstack = 0
 16358                           ; Regs used in _i2c1_driver_restart: []
 16359                           
 16360                           
 16361                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 16362  0EE6  0023               	movlb	3	; select bank3
 16363  0EE7  1491               	bsf	17,1	;volatile
 16364  0EE8                     i1l608:	
 16365  0EE8  0008               	return
 16366  0EE9                     __end_of_i2c1_driver_restart:	
 16367                           
 16368                           	psect	text77
 16369  0F01                     __ptext77:	
 16370 ;; *************** function _i2c1_driver_sendACK *****************
 16371 ;; Defined at:
 16372 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;		None
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		None
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;Total ram usage:        0 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; This function calls:
 16393 ;;		Nothing
 16394 ;; This function is called by:
 16395 ;;		_do_I2C_DO_ACK
 16396 ;;		_do_I2C_RX
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400                           
 16401                           ;psect for function _i2c1_driver_sendACK
 16402  0F01                     _i2c1_driver_sendACK:	
 16403  0F01                     i1l4038:	
 16404                           ;incstack = 0
 16405                           ; Regs used in _i2c1_driver_sendACK: []
 16406                           
 16407                           
 16408                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 16409  0F01  0023               	movlb	3	; select bank3
 16410  0F02  1291               	bcf	17,5	;volatile
 16411                           
 16412                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 16413  0F03  1611               	bsf	17,4	;volatile
 16414  0F04                     i1l635:	
 16415  0F04  0008               	return
 16416  0F05                     __end_of_i2c1_driver_sendACK:	
 16417                           
 16418                           	psect	text78
 16419  07C7                     __ptext78:	
 16420 ;; *************** function _TMR2_ISR *****************
 16421 ;; Defined at:
 16422 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;		None
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;		None
 16427 ;; Return value:  Size  Location     Type
 16428 ;;                  1    wreg      void 
 16429 ;; Registers used:
 16430 ;;		wreg, status,2, status,0, pclath, cstack
 16431 ;; Tracked objects:
 16432 ;;		On entry : 0/0
 16433 ;;		On exit  : 0/0
 16434 ;;		Unchanged: 0/0
 16435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;Total ram usage:        0 bytes
 16441 ;; Hardware stack levels used:    1
 16442 ;; Hardware stack levels required when called:    1
 16443 ;; This function calls:
 16444 ;;		Absolute function
 16445 ;;		_TMR2_DefaultInterruptHandler
 16446 ;;		_handler_clock_ms
 16447 ;; This function is called by:
 16448 ;;		_INTERRUPT_InterruptManager
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           
 16453                           ;psect for function _TMR2_ISR
 16454  07C7                     _TMR2_ISR:	
 16455  07C7                     i1l4786:	
 16456                           ;incstack = 0
 16457                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16458                           
 16459                           
 16460                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 16461  07C7  002E               	movlb	14	; select bank14
 16462  07C8  1090               	bcf	16,1	;volatile
 16463  07C9                     i1l4788:	
 16464                           
 16465                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 16466  07C9  0020               	movlb	0	; select bank0
 16467  07CA  084B               	movf	_TMR2_InterruptHandler,w
 16468  07CB  044C               	iorwf	_TMR2_InterruptHandler+1,w
 16469  07CC  1903               	btfsc	3,2
 16470  07CD  2FCF               	goto	u184_21
 16471  07CE  2FD0               	goto	u184_20
 16472  07CF                     u184_21:	
 16473  07CF  2FD5               	goto	i1l1038
 16474  07D0                     u184_20:	
 16475  07D0                     i1l4790:	
 16476                           
 16477                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 16478  07D0  084C               	movf	_TMR2_InterruptHandler+1,w
 16479  07D1  008A               	movwf	10
 16480  07D2  084B               	movf	_TMR2_InterruptHandler,w
 16481  07D3  000A               	callw
 16482  07D4  3187               	pagesel	$
 16483  07D5                     i1l1038:	
 16484  07D5  0008               	return
 16485  07D6                     __end_of_TMR2_ISR:	
 16486                           
 16487                           	psect	text79
 16488  0EDD                     __ptext79:	
 16489 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 16490 ;; Defined at:
 16491 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;		None
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;		None
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  1    wreg      void 
 16498 ;; Registers used:
 16499 ;;		None
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;Total ram usage:        0 bytes
 16510 ;; Hardware stack levels used:    1
 16511 ;; This function calls:
 16512 ;;		Nothing
 16513 ;; This function is called by:
 16514 ;;		_TMR2_Initialize
 16515 ;;		_TMR2_ISR
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           
 16520                           ;psect for function _TMR2_DefaultInterruptHandler
 16521  0EDD                     _TMR2_DefaultInterruptHandler:	
 16522  0EDD                     i1l1044:	
 16523                           ;incstack = 0
 16524                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 16525                           
 16526  0EDD  0008               	return
 16527  0EDE                     __end_of_TMR2_DefaultInterruptHandler:	
 16528                           
 16529                           	psect	text80
 16530  0FDA                     __ptext80:	
 16531 ;; *************** function _handler_clock_ms *****************
 16532 ;; Defined at:
 16533 ;;		line 363 in file "main.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;		None
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      void 
 16540 ;; Registers used:
 16541 ;;		wreg, status,2, status,0
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;Total ram usage:        1 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; This function calls:
 16554 ;;		Nothing
 16555 ;; This function is called by:
 16556 ;;		_main
 16557 ;;		_TMR2_ISR
 16558 ;; This function uses a non-reentrant model
 16559 ;;
 16560                           
 16561                           
 16562                           ;psect for function _handler_clock_ms
 16563  0FDA                     _handler_clock_ms:	
 16564  0FDA                     i1l4668:	
 16565                           ;incstack = 0
 16566                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 16567                           
 16568                           
 16569                           ;main.c: 364:     clkms++;
 16570  0FDA  3001               	movlw	1
 16571  0FDB  00F0               	movwf	??_handler_clock_ms
 16572  0FDC  0870               	movf	??_handler_clock_ms,w
 16573  0FDD  07FD               	addwf	_clkms,f	;volatile
 16574  0FDE                     i1l4670:	
 16575                           
 16576                           ;main.c: 366:     if(clkms >= 200){
 16577  0FDE  30C8               	movlw	200
 16578  0FDF  027D               	subwf	_clkms,w	;volatile
 16579  0FE0  1C03               	skipc
 16580  0FE1  2FE3               	goto	u175_21
 16581  0FE2  2FE4               	goto	u175_20
 16582  0FE3                     u175_21:	
 16583  0FE3  2FE5               	goto	i1l1265
 16584  0FE4                     u175_20:	
 16585  0FE4                     i1l4672:	
 16586                           
 16587                           ;main.c: 367:         clkms = 0;
 16588  0FE4  01FD               	clrf	_clkms	;volatile
 16589  0FE5                     i1l1265:	
 16590  0FE5  0008               	return
 16591  0FE6                     __end_of_handler_clock_ms:	
 16592                           
 16593                           	psect	text81
 16594  06EB                     __ptext81:	
 16595 ;; *************** function _TMR1_ISR *****************
 16596 ;; Defined at:
 16597 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;		None
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;		None
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  1    wreg      void 
 16604 ;; Registers used:
 16605 ;;		wreg, status,2, status,0, pclath, cstack
 16606 ;; Tracked objects:
 16607 ;;		On entry : 0/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;Total ram usage:        0 bytes
 16616 ;; Hardware stack levels used:    1
 16617 ;; Hardware stack levels required when called:    1
 16618 ;; This function calls:
 16619 ;;		Absolute function
 16620 ;;		_TMR1_DefaultInterruptHandler
 16621 ;;		_TMR1_WriteTimer
 16622 ;;		_handler_clock_hms
 16623 ;; This function is called by:
 16624 ;;		_INTERRUPT_InterruptManager
 16625 ;; This function uses a non-reentrant model
 16626 ;;
 16627                           
 16628                           
 16629                           ;psect for function _TMR1_ISR
 16630  06EB                     _TMR1_ISR:	
 16631  06EB                     i1l4778:	
 16632                           ;incstack = 0
 16633                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16634                           
 16635                           
 16636                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 16637  06EB  002E               	movlb	14	; select bank14
 16638  06EC  1010               	bcf	16,0	;volatile
 16639  06ED                     i1l4780:	
 16640                           
 16641                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 16642  06ED  0020               	movlb	0	; select bank0
 16643  06EE  0850               	movf	_timer1ReloadVal+1,w	;volatile
 16644  06EF  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16645  06F0  084F               	movf	_timer1ReloadVal,w	;volatile
 16646  06F1  00F0               	movwf	TMR1_WriteTimer@timerVal
 16647  06F2  3187  2787  3186   	fcall	_TMR1_WriteTimer
 16648  06F5                     i1l4782:	
 16649                           
 16650                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 16651  06F5  0020               	movlb	0	; select bank0
 16652  06F6  084D               	movf	_TMR1_InterruptHandler,w
 16653  06F7  044E               	iorwf	_TMR1_InterruptHandler+1,w
 16654  06F8  1903               	btfsc	3,2
 16655  06F9  2EFB               	goto	u183_21
 16656  06FA  2EFC               	goto	u183_20
 16657  06FB                     u183_21:	
 16658  06FB  2F01               	goto	i1l896
 16659  06FC                     u183_20:	
 16660  06FC                     i1l4784:	
 16661                           
 16662                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 16663  06FC  084E               	movf	_TMR1_InterruptHandler+1,w
 16664  06FD  008A               	movwf	10
 16665  06FE  084D               	movf	_TMR1_InterruptHandler,w
 16666  06FF  000A               	callw
 16667  0700  3186               	pagesel	$
 16668  0701                     i1l896:	
 16669  0701  0008               	return
 16670  0702                     __end_of_TMR1_ISR:	
 16671                           
 16672                           	psect	text82
 16673  0EDC                     __ptext82:	
 16674 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16675 ;; Defined at:
 16676 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;		None
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;		None
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  1    wreg      void 
 16683 ;; Registers used:
 16684 ;;		None
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/0
 16687 ;;		On exit  : 0/0
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16694 ;;Total ram usage:        0 bytes
 16695 ;; Hardware stack levels used:    1
 16696 ;; This function calls:
 16697 ;;		Nothing
 16698 ;; This function is called by:
 16699 ;;		_TMR1_Initialize
 16700 ;;		_TMR1_ISR
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           
 16704                           
 16705                           ;psect for function _TMR1_DefaultInterruptHandler
 16706  0EDC                     _TMR1_DefaultInterruptHandler:	
 16707  0EDC                     i1l902:	
 16708                           ;incstack = 0
 16709                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16710                           
 16711  0EDC  0008               	return
 16712  0EDD                     __end_of_TMR1_DefaultInterruptHandler:	
 16713                           
 16714                           	psect	text83
 16715  051C                     __ptext83:	
 16716 ;; *************** function _handler_clock_hms *****************
 16717 ;; Defined at:
 16718 ;;		line 346 in file "main.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;		None
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;		None
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  1    wreg      void 
 16725 ;; Registers used:
 16726 ;;		wreg, status,2, status,0
 16727 ;; Tracked objects:
 16728 ;;		On entry : 0/0
 16729 ;;		On exit  : 0/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;Total ram usage:        1 bytes
 16737 ;; Hardware stack levels used:    1
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_main
 16742 ;;		_TMR1_ISR
 16743 ;; This function uses a non-reentrant model
 16744 ;;
 16745                           
 16746                           
 16747                           ;psect for function _handler_clock_hms
 16748  051C                     _handler_clock_hms:	
 16749  051C                     i1l4650:	
 16750                           ;incstack = 0
 16751                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 16752                           
 16753                           
 16754                           ;main.c: 348:     if(!config_mode){
 16755  051C  0020               	movlb	0	; select bank0
 16756  051D  0830               	movf	_config_mode,w	;volatile
 16757  051E  1D03               	btfss	3,2
 16758  051F  2D21               	goto	u170_21
 16759  0520  2D22               	goto	u170_20
 16760  0521                     u170_21:	
 16761  0521  2D2D               	goto	i1l4654
 16762  0522                     u170_20:	
 16763  0522                     i1l4652:	
 16764  0522  1003               	clrc
 16765  0523  1F96               	btfss	22,7	;volatile
 16766  0524  1403               	setc
 16767  0525  1803               	btfsc	3,0
 16768  0526  2D28               	goto	u171_21
 16769  0527  2D2B               	goto	u171_20
 16770  0528                     u171_21:	
 16771  0528  0020               	movlb	0	; select bank0
 16772  0529  1796               	bsf	22,7	;volatile
 16773  052A  2D2D               	goto	u172_24
 16774  052B                     u171_20:	
 16775  052B  0020               	movlb	0	; select bank0
 16776  052C  1396               	bcf	22,7	;volatile
 16777  052D                     u172_24:	
 16778  052D                     i1l4654:	
 16779                           
 16780                           ;main.c: 352:     seg++;
 16781  052D  3001               	movlw	1
 16782  052E  00F0               	movwf	??_handler_clock_hms
 16783  052F  0870               	movf	??_handler_clock_hms,w
 16784  0530  07B4               	addwf	_seg,f	;volatile
 16785  0531                     i1l4656:	
 16786                           
 16787                           ;main.c: 353:     if(seg >= 60) {
 16788  0531  303C               	movlw	60
 16789  0532  0234               	subwf	_seg,w	;volatile
 16790  0533  1C03               	skipc
 16791  0534  2D36               	goto	u173_21
 16792  0535  2D37               	goto	u173_20
 16793  0536                     u173_21:	
 16794  0536  2D47               	goto	i1l1261
 16795  0537                     u173_20:	
 16796  0537                     i1l4658:	
 16797                           
 16798                           ;main.c: 354:         clkm++;
 16799  0537  3001               	movlw	1
 16800  0538  00F0               	movwf	??_handler_clock_hms
 16801  0539  0870               	movf	??_handler_clock_hms,w
 16802  053A  07B5               	addwf	_clkm,f	;volatile
 16803  053B                     i1l4660:	
 16804                           
 16805                           ;main.c: 355:         seg = 0;
 16806  053B  01B4               	clrf	_seg	;volatile
 16807  053C                     i1l4662:	
 16808                           
 16809                           ;main.c: 356:         if(clkm >= 60) {
 16810  053C  303C               	movlw	60
 16811  053D  0235               	subwf	_clkm,w	;volatile
 16812  053E  1C03               	skipc
 16813  053F  2D41               	goto	u174_21
 16814  0540  2D42               	goto	u174_20
 16815  0541                     u174_21:	
 16816  0541  2D47               	goto	i1l1261
 16817  0542                     u174_20:	
 16818  0542                     i1l4664:	
 16819                           
 16820                           ;main.c: 357:             clkh++;
 16821  0542  3001               	movlw	1
 16822  0543  00F0               	movwf	??_handler_clock_hms
 16823  0544  0870               	movf	??_handler_clock_hms,w
 16824  0545  07B6               	addwf	_clkh,f	;volatile
 16825  0546                     i1l4666:	
 16826                           
 16827                           ;main.c: 358:             clkm = 0;
 16828  0546  01B5               	clrf	_clkm	;volatile
 16829  0547                     i1l1261:	
 16830  0547  0008               	return
 16831  0548                     __end_of_handler_clock_hms:	
 16832                           
 16833                           	psect	text84
 16834  0787                     __ptext84:	
 16835 ;; *************** function _TMR1_WriteTimer *****************
 16836 ;; Defined at:
 16837 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16838 ;; Parameters:    Size  Location     Type
 16839 ;;  timerVal        2    0[COMMON] unsigned short 
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;		None
 16842 ;; Return value:  Size  Location     Type
 16843 ;;                  1    wreg      void 
 16844 ;; Registers used:
 16845 ;;		wreg, status,2
 16846 ;; Tracked objects:
 16847 ;;		On entry : 0/0
 16848 ;;		On exit  : 0/0
 16849 ;;		Unchanged: 0/0
 16850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;Total ram usage:        2 bytes
 16856 ;; Hardware stack levels used:    1
 16857 ;; This function calls:
 16858 ;;		Nothing
 16859 ;; This function is called by:
 16860 ;;		_TMR1_ISR
 16861 ;;		_TMR1_Reload
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           
 16866                           ;psect for function _TMR1_WriteTimer
 16867  0787                     _TMR1_WriteTimer:	
 16868  0787                     i1l4566:	
 16869                           ;incstack = 0
 16870                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16871                           
 16872                           
 16873                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 16874  0787  0024               	movlb	4	; select bank4
 16875  0788  1D0E               	btfss	14,2	;volatile
 16876  0789  2F8B               	goto	u164_21
 16877  078A  2F8C               	goto	u164_20
 16878  078B                     u164_21:	
 16879  078B  2F93               	goto	i1l4576
 16880  078C                     u164_20:	
 16881  078C                     i1l4568:	
 16882                           
 16883                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 16884  078C  100E               	bcf	14,0	;volatile
 16885  078D                     i1l4570:	
 16886                           
 16887                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 16888  078D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16889  078E  008D               	movwf	13	;volatile
 16890  078F                     i1l4572:	
 16891                           
 16892                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 16893  078F  0870               	movf	TMR1_WriteTimer@timerVal,w
 16894  0790  008C               	movwf	12	;volatile
 16895  0791                     i1l4574:	
 16896                           
 16897                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 16898  0791  140E               	bsf	14,0	;volatile
 16899                           
 16900                           ;mcc_generated_files/tmr1.c: 140:     }
 16901  0792  2F97               	goto	i1l883
 16902  0793                     i1l4576:	
 16903                           
 16904                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 16905  0793  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16906  0794  008D               	movwf	13	;volatile
 16907  0795                     i1l4578:	
 16908                           
 16909                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 16910  0795  0870               	movf	TMR1_WriteTimer@timerVal,w
 16911  0796  008C               	movwf	12	;volatile
 16912  0797                     i1l883:	
 16913  0797  0008               	return
 16914  0798                     __end_of_TMR1_WriteTimer:	
 16915                           
 16916                           	psect	text85
 16917  07D6                     __ptext85:	
 16918 ;; *************** function _TMR0_ISR *****************
 16919 ;; Defined at:
 16920 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;		None
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;		None
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  1    wreg      void 
 16927 ;; Registers used:
 16928 ;;		wreg, status,2, status,0, pclath, cstack
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;Total ram usage:        0 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:    2
 16941 ;; This function calls:
 16942 ;;		Absolute function
 16943 ;;		_ISR_3s
 16944 ;;		_TMR0_DefaultInterruptHandler
 16945 ;; This function is called by:
 16946 ;;		_INTERRUPT_InterruptManager
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           
 16951                           ;psect for function _TMR0_ISR
 16952  07D6                     _TMR0_ISR:	
 16953  07D6                     i1l4772:	
 16954                           ;incstack = 0
 16955                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16956                           
 16957                           
 16958                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 16959  07D6  002E               	movlb	14	; select bank14
 16960  07D7  128C               	bcf	12,5	;volatile
 16961  07D8                     i1l4774:	
 16962                           
 16963                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 16964  07D8  0020               	movlb	0	; select bank0
 16965  07D9  0849               	movf	_TMR0_InterruptHandler,w
 16966  07DA  044A               	iorwf	_TMR0_InterruptHandler+1,w
 16967  07DB  1903               	btfsc	3,2
 16968  07DC  2FDE               	goto	u182_21
 16969  07DD  2FDF               	goto	u182_20
 16970  07DE                     u182_21:	
 16971  07DE  2FE4               	goto	i1l1538
 16972  07DF                     u182_20:	
 16973  07DF                     i1l4776:	
 16974                           
 16975                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 16976  07DF  084A               	movf	_TMR0_InterruptHandler+1,w
 16977  07E0  008A               	movwf	10
 16978  07E1  0849               	movf	_TMR0_InterruptHandler,w
 16979  07E2  000A               	callw
 16980  07E3  3187               	pagesel	$
 16981  07E4                     i1l1538:	
 16982  07E4  0008               	return
 16983  07E5                     __end_of_TMR0_ISR:	
 16984                           
 16985                           	psect	text86
 16986  06A2                     __ptext86:	
 16987 ;; *************** function _ISR_3s *****************
 16988 ;; Defined at:
 16989 ;;		line 105 in file "main.c"
 16990 ;; Parameters:    Size  Location     Type
 16991 ;;		None
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;		None
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  1    wreg      void 
 16996 ;; Registers used:
 16997 ;;		wreg, status,2, status,0, pclath, cstack
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;Total ram usage:        1 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; Hardware stack levels required when called:    1
 17010 ;; This function calls:
 17011 ;;		_TMR0_StopTimer
 17012 ;;		i1_PWM6_LoadDutyValue
 17013 ;; This function is called by:
 17014 ;;		_main
 17015 ;;		_TMR0_ISR
 17016 ;; This function uses a non-reentrant model
 17017 ;;
 17018                           
 17019                           
 17020                           ;psect for function _ISR_3s
 17021  06A2                     _ISR_3s:	
 17022  06A2                     i1l4580:	
 17023                           ;incstack = 0
 17024                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 17025                           
 17026                           
 17027                           ;main.c: 107:     if (lum_threshold){
 17028  06A2  0020               	movlb	0	; select bank0
 17029  06A3  0820               	movf	_lum_threshold,w
 17030  06A4  0421               	iorwf	_lum_threshold+1,w
 17031  06A5  1903               	btfsc	3,2
 17032  06A6  2EA8               	goto	u165_21
 17033  06A7  2EA9               	goto	u165_20
 17034  06A8                     u165_21:	
 17035  06A8  2EB5               	goto	i1l1161
 17036  06A9                     u165_20:	
 17037  06A9                     i1l4582:	
 17038                           
 17039                           ;main.c: 108:         PWM6_LoadDutyValue(1023);
 17040  06A9  30FF               	movlw	255
 17041  06AA  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17042  06AB  3003               	movlw	3
 17043  06AC  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17044  06AD  3187  2718  3186   	fcall	i1_PWM6_LoadDutyValue
 17045  06B0                     i1l4584:	
 17046                           
 17047                           ;main.c: 109:         alarm = 1;
 17048  06B0  3001               	movlw	1
 17049  06B1  00F4               	movwf	??_ISR_3s
 17050  06B2  0874               	movf	??_ISR_3s,w
 17051  06B3  0020               	movlb	0	; select bank0
 17052  06B4  00AF               	movwf	_alarm	;volatile
 17053  06B5                     i1l1161:	
 17054                           ;main.c: 111:     }
 17055                           
 17056                           
 17057                           ;main.c: 113:     TMR0_StopTimer();
 17058  06B5  318E  26E3  3186   	fcall	_TMR0_StopTimer
 17059  06B8                     i1l4586:	
 17060                           
 17061                           ;main.c: 114:     PIE0bits.TMR0IE = 0;
 17062  06B8  002E               	movlb	14	; select bank14
 17063  06B9  1296               	bcf	22,5	;volatile
 17064  06BA                     i1l1162:	
 17065  06BA  0008               	return
 17066  06BB                     __end_of_ISR_3s:	
 17067                           
 17068                           	psect	text87
 17069  0EDB                     __ptext87:	
 17070 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17071 ;; Defined at:
 17072 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		None
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;Total ram usage:        0 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; This function calls:
 17093 ;;		Nothing
 17094 ;; This function is called by:
 17095 ;;		_TMR0_Initialize
 17096 ;;		_TMR0_ISR
 17097 ;; This function uses a non-reentrant model
 17098 ;;
 17099                           
 17100                           
 17101                           ;psect for function _TMR0_DefaultInterruptHandler
 17102  0EDB                     _TMR0_DefaultInterruptHandler:	
 17103  0EDB                     i1l1544:	
 17104                           ;incstack = 0
 17105                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17106                           
 17107  0EDB  0008               	return
 17108  0EDC                     __end_of_TMR0_DefaultInterruptHandler:	
 17109                           
 17110                           	psect	text88
 17111  0EE3                     __ptext88:	
 17112 ;; *************** function _TMR0_StopTimer *****************
 17113 ;; Defined at:
 17114 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 17115 ;; Parameters:    Size  Location     Type
 17116 ;;		None
 17117 ;; Auto vars:     Size  Location     Type
 17118 ;;		None
 17119 ;; Return value:  Size  Location     Type
 17120 ;;                  1    wreg      void 
 17121 ;; Registers used:
 17122 ;;		None
 17123 ;; Tracked objects:
 17124 ;;		On entry : 0/0
 17125 ;;		On exit  : 0/0
 17126 ;;		Unchanged: 0/0
 17127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;Total ram usage:        0 bytes
 17133 ;; Hardware stack levels used:    1
 17134 ;; This function calls:
 17135 ;;		Nothing
 17136 ;; This function is called by:
 17137 ;;		_ISR_3s
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           
 17142                           ;psect for function _TMR0_StopTimer
 17143  0EE3                     _TMR0_StopTimer:	
 17144  0EE3                     i1l4170:	
 17145                           ;incstack = 0
 17146                           ; Regs used in _TMR0_StopTimer: []
 17147                           
 17148                           
 17149                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 17150  0EE3  0020               	movlb	0	; select bank0
 17151  0EE4  139E               	bcf	30,7	;volatile
 17152  0EE5                     i1l1525:	
 17153  0EE5  0008               	return
 17154  0EE6                     __end_of_TMR0_StopTimer:	
 17155                           
 17156                           	psect	text89
 17157  0F3A                     __ptext89:	
 17158 ;; *************** function _INT_ISR *****************
 17159 ;; Defined at:
 17160 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;		None
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;		None
 17165 ;; Return value:  Size  Location     Type
 17166 ;;                  1    wreg      void 
 17167 ;; Registers used:
 17168 ;;		wreg, status,2, status,0, pclath, cstack
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17178 ;;Total ram usage:        0 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:    3
 17181 ;; This function calls:
 17182 ;;		_INT_CallBack
 17183 ;; This function is called by:
 17184 ;;		_INTERRUPT_InterruptManager
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           
 17189                           ;psect for function _INT_ISR
 17190  0F3A                     _INT_ISR:	
 17191  0F3A                     i1l4768:	
 17192                           ;incstack = 0
 17193                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 17194                           
 17195                           
 17196                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 17197  0F3A  002E               	movlb	14	; select bank14
 17198  0F3B  100C               	bcf	12,0	;volatile
 17199  0F3C                     i1l4770:	
 17200                           
 17201                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 17202  0F3C  318F  27E6  318F   	fcall	_INT_CallBack
 17203  0F3F                     i1l334:	
 17204  0F3F  0008               	return
 17205  0F40                     __end_of_INT_ISR:	
 17206                           
 17207                           	psect	text90
 17208  0FE6                     __ptext90:	
 17209 ;; *************** function _INT_CallBack *****************
 17210 ;; Defined at:
 17211 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17212 ;; Parameters:    Size  Location     Type
 17213 ;;		None
 17214 ;; Auto vars:     Size  Location     Type
 17215 ;;		None
 17216 ;; Return value:  Size  Location     Type
 17217 ;;                  1    wreg      void 
 17218 ;; Registers used:
 17219 ;;		wreg, status,2, status,0, pclath, cstack
 17220 ;; Tracked objects:
 17221 ;;		On entry : 0/0
 17222 ;;		On exit  : 0/0
 17223 ;;		Unchanged: 0/0
 17224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17229 ;;Total ram usage:        0 bytes
 17230 ;; Hardware stack levels used:    1
 17231 ;; Hardware stack levels required when called:    2
 17232 ;; This function calls:
 17233 ;;		Absolute function
 17234 ;;		_INT_DefaultInterruptHandler
 17235 ;;		_sw1_EXT
 17236 ;; This function is called by:
 17237 ;;		_INT_ISR
 17238 ;; This function uses a non-reentrant model
 17239 ;;
 17240                           
 17241                           
 17242                           ;psect for function _INT_CallBack
 17243  0FE6                     _INT_CallBack:	
 17244  0FE6                     i1l4424:	
 17245                           ;incstack = 0
 17246                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17247                           
 17248                           
 17249                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 17250  0FE6  0020               	movlb	0	; select bank0
 17251  0FE7  0851               	movf	_INT_InterruptHandler,w
 17252  0FE8  0452               	iorwf	_INT_InterruptHandler+1,w
 17253  0FE9  1903               	btfsc	3,2
 17254  0FEA  2FEC               	goto	u163_21
 17255  0FEB  2FED               	goto	u163_20
 17256  0FEC                     u163_21:	
 17257  0FEC  2FF2               	goto	i1l338
 17258  0FED                     u163_20:	
 17259  0FED                     i1l4426:	
 17260                           
 17261                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 17262  0FED  0852               	movf	_INT_InterruptHandler+1,w
 17263  0FEE  008A               	movwf	10
 17264  0FEF  0851               	movf	_INT_InterruptHandler,w
 17265  0FF0  000A               	callw
 17266  0FF1  318F               	pagesel	$
 17267  0FF2                     i1l338:	
 17268  0FF2  0008               	return
 17269  0FF3                     __end_of_INT_CallBack:	
 17270                           
 17271                           	psect	text91
 17272  0EDA                     __ptext91:	
 17273 ;; *************** function _INT_DefaultInterruptHandler *****************
 17274 ;; Defined at:
 17275 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;		None
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;		None
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  1    wreg      void 
 17282 ;; Registers used:
 17283 ;;		None
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17293 ;;Total ram usage:        0 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_EXT_INT_Initialize
 17299 ;;		_INT_CallBack
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           
 17304                           ;psect for function _INT_DefaultInterruptHandler
 17305  0EDA                     _INT_DefaultInterruptHandler:	
 17306  0EDA                     i1l344:	
 17307                           ;incstack = 0
 17308                           ; Regs used in _INT_DefaultInterruptHandler: []
 17309                           
 17310  0EDA  0008               	return
 17311  0EDB                     __end_of_INT_DefaultInterruptHandler:	
 17312                           
 17313                           	psect	text92
 17314  0548                     __ptext92:	
 17315 ;; *************** function _sw1_EXT *****************
 17316 ;; Defined at:
 17317 ;;		line 71 in file "main.c"
 17318 ;; Parameters:    Size  Location     Type
 17319 ;;		None
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;		None
 17322 ;; Return value:  Size  Location     Type
 17323 ;;                  1    wreg      void 
 17324 ;; Registers used:
 17325 ;;		wreg, status,2, status,0, pclath, cstack
 17326 ;; Tracked objects:
 17327 ;;		On entry : 0/0
 17328 ;;		On exit  : 0/0
 17329 ;;		Unchanged: 0/0
 17330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17335 ;;Total ram usage:        1 bytes
 17336 ;; Hardware stack levels used:    1
 17337 ;; Hardware stack levels required when called:    1
 17338 ;; This function calls:
 17339 ;;		i1_PWM6_LoadDutyValue
 17340 ;;		i1_checkDebounceSW1
 17341 ;; This function is called by:
 17342 ;;		_main
 17343 ;;		_INT_CallBack
 17344 ;; This function uses a non-reentrant model
 17345 ;;
 17346                           
 17347                           
 17348                           ;psect for function _sw1_EXT
 17349  0548                     _sw1_EXT:	
 17350  0548                     i1l4134:	
 17351                           ;incstack = 0
 17352                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 17353                           
 17354                           
 17355                           ;main.c: 75:     if(checkDebounceSW1()){
 17356  0548  3184  2448  3185   	fcall	i1_checkDebounceSW1
 17357  054B  3A00               	xorlw	0
 17358  054C  1903               	skipnz
 17359  054D  2D4F               	goto	u149_21
 17360  054E  2D50               	goto	u149_20
 17361  054F                     u149_21:	
 17362  054F  2D73               	goto	i1l1158
 17363  0550                     u149_20:	
 17364  0550                     i1l4136:	
 17365                           
 17366                           ;main.c: 76:         if (alarm == 1){
 17367  0550  0020               	movlb	0	; select bank0
 17368  0551  032F               	decf	_alarm,w	;volatile
 17369  0552  1D03               	btfss	3,2
 17370  0553  2D55               	goto	u150_21
 17371  0554  2D56               	goto	u150_20
 17372  0555                     u150_21:	
 17373  0555  2D5F               	goto	i1l1152
 17374  0556                     u150_20:	
 17375  0556                     i1l4138:	
 17376                           
 17377                           ;main.c: 77:             alarm = 0;
 17378  0556  01AF               	clrf	_alarm	;volatile
 17379  0557                     i1l4140:	
 17380  0557  1316               	bcf	22,6	;volatile
 17381  0558                     i1l4142:	
 17382                           
 17383                           ;main.c: 79:             PWM6_LoadDutyValue(0);
 17384  0558  3000               	movlw	0
 17385  0559  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17386  055A  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17387  055B  3187  2718  3185   	fcall	i1_PWM6_LoadDutyValue
 17388                           
 17389                           ;main.c: 80:         }
 17390  055E  2D6E               	goto	i1l1155
 17391  055F                     i1l1152:	
 17392                           ;main.c: 81:         else{
 17393                           
 17394                           
 17395                           ;main.c: 82:             if(!PORTBbits.RB4){
 17396  055F  1A0D               	btfsc	13,4	;volatile
 17397  0560  2D62               	goto	u151_21
 17398  0561  2D63               	goto	u151_20
 17399  0562                     u151_21:	
 17400  0562  2D6E               	goto	i1l1155
 17401  0563                     u151_20:	
 17402  0563                     i1l4144:	
 17403                           
 17404                           ;main.c: 84:                 if(config_mode == 0){
 17405  0563  0830               	movf	_config_mode,w	;volatile
 17406  0564  1D03               	btfss	3,2
 17407  0565  2D67               	goto	u152_21
 17408  0566  2D68               	goto	u152_20
 17409  0567                     u152_21:	
 17410  0567  2D6E               	goto	i1l1155
 17411  0568                     u152_20:	
 17412  0568                     i1l4146:	
 17413                           
 17414                           ;main.c: 85:                     config_mode = 1;
 17415  0568  3001               	movlw	1
 17416  0569  00F7               	movwf	??_sw1_EXT
 17417  056A  0877               	movf	??_sw1_EXT,w
 17418  056B  00B0               	movwf	_config_mode	;volatile
 17419  056C                     i1l4148:	
 17420                           
 17421                           ;main.c: 87:                     (PIE0bits.INTE = 0);
 17422  056C  002E               	movlb	14	; select bank14
 17423  056D  1016               	bcf	22,0	;volatile
 17424  056E                     i1l1155:	
 17425                           ;main.c: 91:             }
 17426                           
 17427                           
 17428                           ;main.c: 93:             last_ms = clkms;
 17429  056E  087D               	movf	_clkms,w	;volatile
 17430  056F  00F7               	movwf	??_sw1_EXT
 17431  0570  0877               	movf	??_sw1_EXT,w
 17432  0571  0020               	movlb	0	; select bank0
 17433  0572  00B3               	movwf	_last_ms
 17434  0573                     i1l1158:	
 17435  0573  0008               	return
 17436  0574                     __end_of_sw1_EXT:	
 17437                           
 17438                           	psect	text93
 17439  0448                     __ptext93:	
 17440 ;; *************** function i1_checkDebounceSW1 *****************
 17441 ;; Defined at:
 17442 ;;		line 401 in file "main.c"
 17443 ;; Parameters:    Size  Location     Type
 17444 ;;		None
 17445 ;; Auto vars:     Size  Location     Type
 17446 ;;		None
 17447 ;; Return value:  Size  Location     Type
 17448 ;;                  1    wreg      unsigned char 
 17449 ;; Registers used:
 17450 ;;		wreg, status,2, status,0
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17458 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17460 ;;Total ram usage:        7 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_sw1_EXT
 17466 ;; This function uses a non-reentrant model
 17467 ;;
 17468                           
 17469                           
 17470                           ;psect for function i1_checkDebounceSW1
 17471  0448                     i1_checkDebounceSW1:	
 17472  0448                     i1l3978:	
 17473                           ;incstack = 0
 17474                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 17475                           
 17476                           
 17477                           ;main.c: 404:     if(clkms - last_ms < 0){
 17478  0448  087D               	movf	_clkms,w	;volatile
 17479  0449  00F0               	movwf	??i1_checkDebounceSW1
 17480  044A  01F1               	clrf	??i1_checkDebounceSW1+1
 17481  044B  0871               	movf	??i1_checkDebounceSW1+1,w
 17482  044C  00F3               	movwf	??i1_checkDebounceSW1+3
 17483  044D  0020               	movlb	0	; select bank0
 17484  044E  0833               	movf	_last_ms,w
 17485  044F  0270               	subwf	??i1_checkDebounceSW1,w
 17486  0450  00F2               	movwf	??i1_checkDebounceSW1+2
 17487  0451  1C03               	skipc
 17488  0452  03F3               	decf	??i1_checkDebounceSW1+3,f
 17489  0453  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 17490  0454  2C56               	goto	u144_21
 17491  0455  2C57               	goto	u144_20
 17492  0456                     u144_21:	
 17493  0456  2C76               	goto	i1l3986
 17494  0457                     u144_20:	
 17495  0457                     i1l3980:	
 17496                           
 17497                           ;main.c: 406:         if ((200 - last_ms)+ clkms > 80 ){
 17498  0457  087D               	movf	_clkms,w	;volatile
 17499  0458  00F0               	movwf	??i1_checkDebounceSW1
 17500  0459  01F1               	clrf	??i1_checkDebounceSW1+1
 17501  045A  0871               	movf	??i1_checkDebounceSW1+1,w
 17502  045B  00F3               	movwf	??i1_checkDebounceSW1+3
 17503  045C  0833               	movf	_last_ms,w
 17504  045D  0270               	subwf	??i1_checkDebounceSW1,w
 17505  045E  00F2               	movwf	??i1_checkDebounceSW1+2
 17506  045F  1C03               	skipc
 17507  0460  03F3               	decf	??i1_checkDebounceSW1+3,f
 17508  0461  0872               	movf	??i1_checkDebounceSW1+2,w
 17509  0462  3EC8               	addlw	200
 17510  0463  00F4               	movwf	??i1_checkDebounceSW1+4
 17511  0464  3000               	movlw	0
 17512  0465  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 17513  0466  00F5               	movwf	??i1_checkDebounceSW1+5
 17514  0467  0875               	movf	??i1_checkDebounceSW1+5,w
 17515  0468  3A80               	xorlw	128
 17516  0469  00F6               	movwf	??i1_checkDebounceSW1+6
 17517  046A  3080               	movlw	128
 17518  046B  0276               	subwf	??i1_checkDebounceSW1+6,w
 17519  046C  1D03               	skipz
 17520  046D  2C70               	goto	u145_25
 17521  046E  3051               	movlw	81
 17522  046F  0274               	subwf	??i1_checkDebounceSW1+4,w
 17523  0470                     u145_25:	
 17524  0470  1C03               	skipc
 17525  0471  2C73               	goto	u145_21
 17526  0472  2C74               	goto	u145_20
 17527  0473                     u145_21:	
 17528  0473  2C76               	goto	i1l3986
 17529  0474                     u145_20:	
 17530  0474                     i1l3982:	
 17531                           
 17532                           ;main.c: 407:             return 1;
 17533  0474  3001               	movlw	1
 17534  0475  2C8F               	goto	i1l1291
 17535  0476                     i1l3986:	
 17536                           
 17537                           ;main.c: 411:     if(clkms - last_ms < 80){
 17538  0476  087D               	movf	_clkms,w	;volatile
 17539  0477  00F0               	movwf	??i1_checkDebounceSW1
 17540  0478  01F1               	clrf	??i1_checkDebounceSW1+1
 17541  0479  0871               	movf	??i1_checkDebounceSW1+1,w
 17542  047A  00F3               	movwf	??i1_checkDebounceSW1+3
 17543  047B  0020               	movlb	0	; select bank0
 17544  047C  0833               	movf	_last_ms,w
 17545  047D  0270               	subwf	??i1_checkDebounceSW1,w
 17546  047E  00F2               	movwf	??i1_checkDebounceSW1+2
 17547  047F  1C03               	skipc
 17548  0480  03F3               	decf	??i1_checkDebounceSW1+3,f
 17549  0481  0873               	movf	??i1_checkDebounceSW1+3,w
 17550  0482  3A80               	xorlw	128
 17551  0483  00F4               	movwf	??i1_checkDebounceSW1+4
 17552  0484  3080               	movlw	128
 17553  0485  0274               	subwf	??i1_checkDebounceSW1+4,w
 17554  0486  1D03               	skipz
 17555  0487  2C8A               	goto	u146_25
 17556  0488  3050               	movlw	80
 17557  0489  0272               	subwf	??i1_checkDebounceSW1+2,w
 17558  048A                     u146_25:	
 17559  048A  1803               	skipnc
 17560  048B  2C8D               	goto	u146_21
 17561  048C  2C8E               	goto	u146_20
 17562  048D                     u146_21:	
 17563  048D  2C74               	goto	i1l3982
 17564  048E                     u146_20:	
 17565  048E                     i1l3988:	
 17566                           
 17567                           ;main.c: 412:         return 0;
 17568  048E  3000               	movlw	0
 17569  048F                     i1l1291:	
 17570  048F  0008               	return
 17571  0490                     __end_ofi1_checkDebounceSW1:	
 17572                           
 17573                           	psect	text94
 17574  0718                     __ptext94:	
 17575 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17576 ;; Defined at:
 17577 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;  dutyValue       2    0[COMMON] unsigned short 
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;		None
 17582 ;; Return value:  Size  Location     Type
 17583 ;;                  1    wreg      void 
 17584 ;; Registers used:
 17585 ;;		wreg, status,2, status,0
 17586 ;; Tracked objects:
 17587 ;;		On entry : 0/0
 17588 ;;		On exit  : 0/0
 17589 ;;		Unchanged: 0/0
 17590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17595 ;;Total ram usage:        4 bytes
 17596 ;; Hardware stack levels used:    1
 17597 ;; This function calls:
 17598 ;;		Nothing
 17599 ;; This function is called by:
 17600 ;;		_sw1_EXT
 17601 ;;		_ISR_3s
 17602 ;; This function uses a non-reentrant model
 17603 ;;
 17604                           
 17605                           
 17606                           ;psect for function i1_PWM6_LoadDutyValue
 17607  0718                     i1_PWM6_LoadDutyValue:	
 17608  0718                     i1l3976:	
 17609                           ;incstack = 0
 17610                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17611                           
 17612                           
 17613                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17614  0718  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17615  0719  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17616  071A  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17617  071B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17618  071C  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17619  071D  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17620  071E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17621  071F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17622  0720  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17623  0721  0027               	movlb	7	; select bank7
 17624  0722  008D               	movwf	13	;volatile
 17625                           
 17626                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 17627  0723  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17628  0724  3903               	andlw	3
 17629  0725  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17630  0726  3005               	movlw	5
 17631  0727                     u143_25:	
 17632  0727  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 17633  0728  3EFF               	addlw	-1
 17634  0729  1D03               	skipz
 17635  072A  2F27               	goto	u143_25
 17636  072B  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 17637  072C  008C               	movwf	12	;volatile
 17638  072D                     i1l916:	
 17639  072D  0008               	return
 17640  072E                     __end_ofi1_PWM6_LoadDutyValue:	
 17641  007E                     btemp	set	126	;btemp
 17642  007E                     int$flags	set	126
 17643  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         53
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      56
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3562$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3568	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3567	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3562	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_recoverData
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_field
    _clock_field->_checkDebounceSW1
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16927
                                             16 BANK0      4     4      0
                           _ADC_read
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _config_routine
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    6123
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    1221
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    2049
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0     896
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     804
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1153
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0    8441
                                             13 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                        _clock_field
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _clock_field                                          3     3      0    4232
                                             10 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0     828
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     828
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     120
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      22
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _clock_field
       _all_LED
         _PWM6_LoadDutyValue
       _checkDebounceSW1
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      63      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      63      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 12:10:33 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0F58  
                             __CFG_CP$OFF 0000                      __size_of_do_I2C_IDLE 0005  
                     _do_I2C_SEND_RESTART 0F21                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l341 0F45                                       l442 0FAE  
                                     l530 03FF                                       l347 07F2  
                                     l445 0F93                                       l439 0654  
                                     l760 0F8B                                       l913 07FF  
                                     l763 0F6B                                       l916 06A1  
                                     l757 0717                                       l766 0FA5  
                                     l960 05BD                                       l963 07C6  
                                     l869 061C                                       l957 05B2  
                                     l959 05B6                                       l899 0F51  
                                     l998 06D2                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0EE0  
                         _timer1ReloadVal 004F                                       _seg 0034  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 06BB                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 066F  
                                    l1041 0F57                   ??_rd2RegCompleteHandler 007A  
                                    l1206 02BD                                      l1232 02BE  
                                    l1235 02CB                                      l1244 0318  
                                    l1253 0688                                      l1229 0241  
                                    l1247 066E                                      l1273 0FC3  
                                    l1281 0FCE                                      l1169 00B2  
                                    l1522 0EFD                                      l1291 0447  
                                    l1276 0FB8                                      l1541 0F4B  
                                    l4110 0F4C                                      l1286 0FD9  
                                    l1519 0742                                      l4200 0FBB  
                                    l4120 05AB                                      l4112 059A  
                                    l4202 0FC1                                      l4210 0FC6  
                                    l4130 05B7                                      l4122 05AC  
                                    l4114 05A2                                      l1491 05FD  
                                    l4108 0F40                                      l4132 0F52  
                                    l4204 0FAF                                      l4212 0FCC  
                                    l4124 05AD                                      l4116 05A6  
                                    l4220 05DE                                      l5100 00F4  
                                    l1469 01C1                                      l4150 0400  
                                    l4206 0FB1                                      l4214 0FCF  
                                    l4126 05AF                                      l4118 05AA  
                                    l4230 05EF                                      l4222 05E0  
                                    l1486 07A7                                      l5102 00FC  
                                    l5110 010C                                      l4160 0446  
                                    l4152 040F                                      l4208 0FC4  
                                    l4216 0FD1                                      l4128 05B1  
                                    l4232 05F3                                      l1496 0638  
                                    l5120 0122                                      l5112 0112  
                                    l5104 0101                                      l4154 042C  
                                    l4218 0FD7                                      l4234 05FC  
                                    l5122 0125                                      l5114 0118  
                                    l5106 0103                                      l4500 07FA  
                                    l4172 0F46                                      l4180 02DC  
                                    l4228 05E4                                      l5108 0106  
                                    l5116 011B                                      l4502 0702  
                                    l4430 07E8                                      l4510 06C0  
                                    l4190 0302                                      l4182 02EC  
                                    l4174 02C0                                      l4158 042E  
                                    l5118 0120                                      l5070 00A1  
                    _ADCC_StartConversion 0F84                                      l4504 0714  
                                    l4432 07F0                                      l4440 03BF  
                                    l4520 06CF                                      l4512 06C1  
                                    l4192 030B                                      l4184 02F5  
                                    l4176 02C9                                      l4600 01D5  
                                    l5080 00AF                                      l5072 00A1  
                                    l4506 0716                                      l4450 03CA  
                                    l4442 03C1                                      l4434 0F8C  
                                    l4530 0607                                      l4522 05FE  
                                    l4514 06C4                                      l4194 030D  
                                    l4186 02F7                                      l4178 02D4  
                                    l4610 01EA                                      l5090 00CB  
                                    l5082 00B0                                      l5074 00A4  
                                    l4428 07E5                                      l4460 03DE  
                                    l4452 03CC                                      l4444 03C3  
                                    l4436 03B7                                      l4540 072E  
                                    l4532 060E                                      l4524 0601  
                                    l4516 06C6                                      l4508 06BB  
                                    l4196 0316                                      l4188 0300  
                                    l4612 01EE                                      l4604 01DE  
                                    l4620 020C                                      l5092 00D2  
                                    l5084 00B2                                      l5076 00AB  
                                    l5068 007E                                      l4470 03E8  
                                    l4462 03E0                                      l4454 03CE  
                                    l4446 03C5                                      l4438 03BD  
                                    l4550 073F                                      l4542 0733  
                                    l4534 0610                                      l4526 0603  
                                    l4518 06C7                                      l4198 0FB9  
                                    l4606 01E2                                      l5094 00E4  
                                    l5086 00B8                                      l5078 00AD  
                                    l4552 0F86                                      l4480 03F3  
                                    l4472 03EA                                      l4464 03E2  
                                    l4456 03D0                                      l4448 03C7  
                                    l4544 0734                                      l4536 0611  
                                    l4528 0605                                      l4800 0645  
                                    l4640 0238                                      l4632 021E  
                                    l4624 0212                                      l4608 01E6  
                                    l4616 01F4                                      l5360 02A5  
                                    l5096 00EA                                      l5088 00C0  
                                    l4562 0F9D                                      l4554 0F89  
                                    l4490 0FA6                                      l4482 03F5  
                                    l4474 03EC                                      l4466 03E4  
                                    l4458 03DC                                      l4546 0736  
                                    l4538 0619                                      l4802 0648  
                                    l4626 0216                                      l5362 01F9  
                                    l4618 0207                                      l4810 012A  
                                    l5098 00F0                                      l4556 0F8A  
                                    l4492 0FA9                                      l4484 03F8  
                                    l4476 03EE                                      l4468 03E6  
                                    l4548 0737                                      l4804 064B  
                                    l5364 0226                                      l4628 021A  
                                    l4636 0221                                      l4820 019A  
                                    l4812 0137                                      l4558 0F65  
                                    l4830 0674                                      l4494 0FAA  
                                    l4486 03FA                                      l4478 03F0  
                                    l4806 064E                                      l4638 0234  
                                    l4590 01C5                                      l5358 027F  
                                    l4822 01A6                                      l4814 0149  
                                    l4832 0678                                      l4496 0FAD  
                                    l4488 03FC                                      l4808 0651  
                                    l4840 0EFB                                      l4592 01C9  
                                    l3960 07B8                                      l4680 062A  
                                    l4824 01B2                                      l4816 018B  
                                    l4834 0680                                      l4498 07F3  
                                    l4594 01C9                                      l4850 0252  
                                    l4842 0242                                      l3970 07C3  
                                    l3962 07BC                                      l4682 062F  
                                    l4674 061D                                      l4826 01BE  
                                    l4818 018E                                      l4828 066F  
                                    l4596 01CC                                      l4588 01C2  
                                    l4860 026D                                      l4852 0257  
                                    l4844 0245                                      l3972 07C4  
                                    l3964 07C0                                      l4684 0798  
                                    l4838 0655                                      l3958 0689  
                                    l4598 01D1                                      l4862 0271  
                                    l4870 028D                                      l4854 025F  
                                    l4846 0249                                      l3966 07C1  
                                    l4678 0622                                      l4792 0639  
                                    l4864 0275                                      l4856 0265  
                                    l4872 0292                                      l4848 024F  
                                    l3968 07C2                                      l4794 063C  
                                    l4890 02B7                                      l4858 0269  
                                    l4796 063F                                      l4876 0298  
                                    l4868 027A                                      l4798 0642  
                                    l4878 029C                                      l4886 02A0  
                                    l4888 02B3                                      u2300 0112  
                                    u2301 0111                                      _LATA 0016  
                                    u2310 0120                                      _LATB 0017  
                         __end_of_INT_ISR 0F40                                      u2311 011F  
                                    _LATC 0018                                      u2240 00B8  
                                    _LATD 0019                                      u1425 069A  
                                    u2241 00B7                                      _LATE 001A  
                                    u1530 040F                                      u2250 00DD  
                                    u1531 040E                                      u2251 00DB  
                                    u1540 042C                                      u2260 00DE  
                                    u1541 042B                                      u1550 0446  
                                    u2270 00EA                                      u2407 02E0  
                                    u1551 0445                                      u2271 00E9  
                                    u1480 05B6                                      u1560 05FC  
                                    u2280 00F0                                      u2417 02F0  
                                    u1545 0428                                      u1481 05B5  
                                    u1561 05FB                                      u2281 00EF  
                                    u2290 0101                                      _T2PR 028D  
                                    u2427 02FB                                      u1555 0442  
                                    u2291 0100                                      u1660 01D1  
                                    u1900 025F                                      u2437 0306  
                                    u1661 01D0                                      u1901 025E  
                                    u1670 01DD                                      u1910 0297  
                                    u2447 0311                                      u1671 01DC  
                                    u2367 02B4                                      u1911 0296  
                                    u1680 0211                                      u1920 02BD  
                                    u1760 0638                                      u2457 0675  
                                    u2377 0235                                      u1681 0210  
                                    u1921 02BC                                      u1761 0637  
                                    u1690 0241                                      u1850 0137  
                                    u2387 02C4                                      u1691 0240  
                                    u1851 0136                                      u1860 0149  
                                    u2397 02CF                                      u1861 0148  
                                    u1870 0680                                      u1871 067F  
                                    u1880 024F                                      u1881 024E  
                                    u1890 0257                                      u1891 0256  
                                    _PMD0 0796                                      _PMD1 0797  
                                    _PMD2 0798                                      _PMD3 0799  
                                    _PMD4 079A                                      _PMD5 079B  
                                    i1l73 0FFF                      ?_do_I2C_SEND_RESTART 0070  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 007A                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _clkh 0036                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 0035                                      _main 007E  
                                    _tala 0053                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0055  
                         _TMR0_StartTimer 0EFB                                      _pmon 0054  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0EDB               _INT_DefaultInterruptHandler 0EDA  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0689  
         __end_of_INT_SetInterruptHandler 0F46                             _i2c_setBuffer 07A8  
              ??_TMR1_SetInterruptHandler 003C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 04F0  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0045                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0743                              _do_I2C_RESET 0F74  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0FAF                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0EEC  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0F12  
                          __CFG_DEBUG$OFF 0000                                     i1l103 07B7  
                                   i1l200 04C2                                     i1l210 04EF  
                                   i1l131 0F1B                                     i1l140 0F2A  
                                   _T2TMR 028C                                     i1l125 0F7B  
                                   i1l213 0F0C                                     i1l134 0F20  
                                   i1l303 06EA                                     i1l143 0F9C  
                                   i1l224 0599                                     i1l216 0EE2  
                                   i1l128 0F16                                     i1l152 0F2F  
                                   i1l137 0F25                                     i1l146 0F83  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0775                                     i1l155 0F34  
                                   i1l164 051B                                     i1l172 036C  
                                   i1l149 0F64                                     i1l334 0F3F  
                                   i1l158 0F39                                     i1l344 0EDA  
                                   i1l264 0764                                     i1l169 0350  
                                   i1l185 038A                                     i1l338 0FF2  
                                   i1l602 0EDE                                     i1l186 03B6  
                                   i1l611 0EEB                                     i1l291 0786  
                                   i1l620 0EF1                                     i1l380 001F  
                                   i1l614 0F73                                     i1l279 0753  
                                   i1l383 0032                                     i1l608 0EE8  
                                   i1l392 0059                                     i1l617 0EEE  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0F04  
                                   i1l387 004D                                     i1l629 0F11  
                                   i1l902 0EDC                                     i1l638 0F08  
                                   i1l576 0EF7                                     i1l672 0EFA  
                                   i1l579 0EF4                                     i1l916 072D  
                                   i1l883 0797                                     i1l896 0701  
                                   _OSCEN 0891                           __end_of_all_LED 0319  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0006  
                         _PWM6_Initialize 07F3                 ?_TMR0_SetInterruptHandler 003A  
                 ??_ADCC_IsConversionDone 003A                          __end_of_TMR0_ISR 07E5  
                        __end_of_TMR1_ISR 0702                          __end_of_TMR2_ISR 07D6  
                         __end_of_sw1_EXT 0574                           __end_of_cksum_w 07A8  
                         _DATAEE_ReadByte 07B8                                     _alarm 002F  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0F74  
                                   _cksum 05DE                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 0028  
                       ?_checkDebounceSW1 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 061D                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 003A  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0787  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 05BE                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 012A  
                 __end_of_TMR2_Initialize 06D3               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0F2B                  _TMR2_SetInterruptHandler 0F52  
                                  ??_main 0047                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 003C  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0EFE               __size_ofi1_checkDebounceSW1 0048  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                    __size_of_clock_field 0080                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0EDD  
                                  i1l1038 07D5                                    i1l1152 055F  
                                  i1l1161 06B5                                    i1l1162 06BA  
                                  i1l1155 056E                                    i1l1261 0547  
                                  i1l1158 0573                                    i1l1265 0FE5  
                                  _ODCONA 0F3A                                    i1l4010 0F17  
                                  _ODCONB 0F45                                    i1l1291 048F  
                                  _ODCONC 0F50                                    i1l4012 0F1A  
                                  _ODCOND 0F5B                                    i1l1525 0EE5  
                                  _ODCONE 0F66                                    i1l4102 06D3  
                                  i1l4022 0F21                                    i1l4030 0F29  
                                  i1l1544 0EDB                                    i1l4104 06E9  
                                  i1l4016 0F1C                                    i1l4024 0F24  
                                  i1l4040 0F30                                    i1l1538 07E4  
                                  i1l4034 0F0E                                    i1l4018 0F1F  
                                  i1l4042 0F33                                    i1l4140 0557  
                                  i1l4036 0EEC                                    i1l4052 0F6C  
                                  i1l4060 0EF2                                    i1l4028 0F26  
                                  i1l4142 0558                                    i1l4134 0548  
                                  i1l4038 0F01                                    i1l4062 0EE1  
                                  i1l4070 0765                                    i1l4302 0F2B  
                                  i1l4046 0F35                                    i1l4310 04F2  
                                  i1l4144 0563                                    i1l4136 0550  
                                  i1l4072 076D                                    i1l4080 075C  
                                  i1l4056 0EEF                                    i1l4304 0F2E  
                                  i1l4048 0F38                                    i1l4312 04F7  
                                  i1l5040 000B                                    i1l4146 0568  
                                  i1l4138 0556                                    i1l4170 0EE3  
                                  i1l4066 0002                                    i1l4074 0774  
                                  i1l4082 0763                                    i1l4090 0752  
                                  i1l4402 0497                                    i1l4322 04FF  
                                  i1l4330 0319                                    i1l5050 0027  
                                  i1l5042 000F                                    i1l4148 056C  
                                  i1l4404 049A                                    i1l4260 0F74  
                                  i1l4316 04FB                                    i1l4308 04F0  
                                  i1l5060 0049                                    i1l5052 002B  
                                  i1l5044 0017                                    i1l4094 0776  
                                  i1l4078 0754                                    i1l4086 0743  
                                  i1l4414 04A0                                    i1l4262 0F77  
                                  i1l4270 0F12                                    i1l4350 0352  
                                  i1l4342 0329                                    i1l4334 0321  
                                  i1l4238 0EF5                                    i1l4422 0EF8  
                                  i1l5062 0051                                    i1l5054 0036  
                                  i1l5046 001B                                    i1l5038 0006  
                                  i1l4424 0FE6                                    i1l4096 077E  
                                  i1l4088 074B                                    i1l4408 049C  
                                  i1l4264 0F79                                    i1l4272 0F14  
                                  i1l4280 0F96                                    i1l4352 035E  
                                  i1l5064 0055                                    i1l5056 003A  
                                  i1l5048 0023                                    u211_20 000B  
                                  u211_21 000A                                    i1l4426 0FED  
                                  i1l4098 0785                                    i1l4266 0F7A  
                                  i1l4274 0F15                                    i1l4282 0F9B  
                                  i1l4290 0F82                                    i1l4354 0369  
                                  i1l4338 0325                                    i1l4370 0385  
                                  i1l5058 0045                                    i1l4356 036B  
                                  i1l4348 032D                                    i1l4372 0388  
                                  i1l4364 036D                                    i1l4278 0F94  
                                  i1l4286 0F7C                                    i1l4294 0F5E  
                                  i1l4382 0390                                    i1l4366 0377  
                                  u140_20 057B                                    i1l4288 0F7E  
                                  i1l4296 0F60                                    i1l4368 037B  
                                  u220_20 0045                                    u212_20 000F  
                                  u140_21 057A                                    u220_21 0044  
                                  u212_21 000E                                    i1l4570 078D  
                                  i1l4650 051C                                    i1l4298 0F63  
                                  i1l5370 0513                                    i1l4378 038C  
                                  i1l4580 06A2                                    i1l4572 078F  
                                  i1l4660 053B                                    i1l4652 0522  
                                  i1l3940 057B                                    i1l5372 04B4  
                                  i1l4396 0490                                    i1l4388 0394  
                                  i1l4582 06A9                                    i1l4574 0791  
                                  i1l4566 0787                                    i1l4662 053C  
                                  i1l4654 052D                                    i1l4670 0FDE  
                                  i1l3950 07B6                                    i1l3942 058C  
                                  i1l4398 0493                                    i1l5366 03A8  
                                  i1l4584 06B0                                    i1l4568 078C  
                                  i1l4576 0793                                    i1l4664 0542  
                                  i1l4656 0531                                    i1l4672 0FE4  
                                  i1l3952 0EE6                                    u141_20 07AE  
                                  i1l3944 0FF3                                    i1l5368 0342  
                                  i1l4760 04CB                                    u221_20 0049  
                                  u213_20 0017                                    u141_21 07AD  
                                  u221_21 0048                                    u213_21 0016  
                                  i1l4770 0F3C                                    i1l4586 06B8  
                                  i1l4578 0795                                    i1l4666 0546  
                                  i1l4658 0537                                    i1l3954 0EE9  
                                  i1l3946 07A9                                    i1l3938 0575  
                                  i1l4762 04D2                                    i1l3980 0457  
                                  i1l4772 07D6                                    i1l4780 06ED  
                                  i1l4668 0FDA                                    i1l3948 07AE  
                                  i1l3956 0F05                                    i1l4764 04D8  
                                  i1l4756 04C3                                    i1l3982 0474  
                                  i1l4774 07D8                                    i1l4782 06F5  
                                  i1l4790 07D0                                    i1l4758 04C6  
                                  i1l4766 0F09                                    i1l3976 0718  
                                  u150_20 0556                                    i1l4768 0F3A  
                                  i1l4776 07DF                                    i1l4784 06FC  
                                  u222_20 0051                                    u214_20 001B  
                                  u150_21 0555                                    u222_21 0050  
                                  u214_21 001A                                    i1l3986 0476  
                                  i1l3978 0448                                    i1l4778 06EB  
                                  i1l4786 07C7                                    i1l3988 048E  
                                  i1l4788 07C9                                    i1l3998 0EDF  
                                  u151_20 0563                                    u223_20 0055  
                                  u215_20 0023                                    u151_21 0562  
                                  u223_21 0054                                    u215_21 0022  
                                  u143_25 0727                                    u144_20 0457  
                                  u152_20 0568                                    u160_20 0320  
                                  u216_20 0027                                    u144_21 0456  
                                  u152_21 0567                                    u160_21 031F  
                                  u216_21 0026                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u145_20 0474                                    u161_20 0369  
                                  u217_20 002B                                    u145_21 0473  
                                  u161_21 0368                                    u217_21 002A  
                                  u145_25 0470                                    u146_20 048E  
                                  u170_20 0522                                    u162_20 0385  
                                  u218_20 0036                                    u146_21 048D  
                                  u170_21 0521                                    u162_21 0384  
                                  u218_21 0035                                    u146_25 048A  
                                  u163_20 0FED                                    u171_20 052B  
                                  u219_20 003A                                    u163_21 0FEC  
                                  u171_21 0528                                    u219_21 0039  
                                  u164_20 078C                                    u180_20 04CB  
                                  u164_21 078B                                    u180_21 04CA  
                                  u172_24 052D                                    u149_20 0550  
                                  u165_20 06A9                                    u173_20 0537  
                                  u181_20 04D2                                    u149_21 054F  
                                  u165_21 06A8                                    u173_21 0536  
                                  u181_21 04D1                                    u182_20 07DF  
                                  u174_20 0542                                    u182_21 07DE  
                                  u174_21 0541                                    u183_20 06FC  
                                  u175_20 0FE4                                    u183_21 06FB  
                                  u175_21 0FE3                                    u184_20 07D0  
                                  u184_21 07CF                                    _INTPPS 0E90  
                                  _OSCFRQ 0893                                    _ISR_3s 06A2  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0037                ??_ADCC_GetConversionResult 003C  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 072E  
                   _i2c1_driver_getRXData 0EEF                          __end_of_mod1_LED 0FC4  
                        __end_of_mod2_LED 0FB9                          __end_of_mod3_LED 0FCF  
                        __end_of_mod4_LED 0FDA      __end_of_TMR1_DefaultInterruptHandler 0EDD  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0EDC  
                            _CCPTMRS1bits 021F               __end_of_do_I2C_DO_NACK_STOP 0F35  
     __end_of_i2c_setDataCompleteCallback 1000               _i2c_setDataCompleteCallback 0FF3  
   __end_of_i2c1_driver_clearBusCollision 0EFB    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0EF8                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                 ??_all_LED 003E  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0800  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 003E  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 07C7  
                               ??_sw1_EXT 0077                                 ??_cksum_w 0044  
                         _ADCC_Initialize 0702               __end_of_i2c1_driver_sendACK 0F05  
                          _PMD_Initialize 0F8C            __end_of_do_I2C_DO_ADDRESS_NACK 051C  
             __end_of_i2c1_driver_restart 0EE9                              ?_returnReset 0079  
                               ?_ADC_read 003C                    ??_ADCC_StartConversion 003A  
             __end_of_i2c1_driver_startRX 0EEF          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 003A  TMR2_SetInterruptHandler@InterruptHandler 003A  
TMR1_SetInterruptHandler@InterruptHandler 003A   INT_SetInterruptHandler@InterruptHandler 003A  
                 __end_of_TMR1_WriteTimer 0798                          ??_config_routine 0044  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0639  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0F26                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                   _rdBlkRegCompleteHandler 06D3  
                          __pcstackCOMMON 0070                              __pidataBANK0 0EFE  
                     ??_SYSTEM_Initialize 003C                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 05FE  
                        _DATAEE_WriteByte 059A                          ?_TMR2_Initialize 0070  
                            LED_bin@value 003A                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 0F94               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 003E               ADCC_StartConversion@channel 003A  
                          setCallBack@idx 0074                                   ??_cksum 003C  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0F35  
               __end_of_SYSTEM_Initialize 0655                         clock_field@select 0042  
                          _mssp1_clearIRQ 0EF5                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0754  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0787  
                   _rd1RegCompleteHandler 0754                    ?_i2c1_driver_getRXData 0070  
                   _wr1RegCompleteHandler 0765              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
        __end_of_TMR0_SetInterruptHandler 0F4C                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0718                __end_of_PWM6_LoadDutyValue 06A2  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 003A                         __end_of_do_I2C_RX 03B7  
                       __end_of_do_I2C_TX 036D                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0655                          _handler_clock_ms 0FDA  
                                 _INT_ISR 0F3A                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0718  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0EF8                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0F6C  
                 ??_do_I2C_SEND_ADR_WRITE 0071                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0F0D  
                    DATAEE_WriteByte@bAdd 0040                        _i2c1_driver_i2cISR 002A  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 04C3  
               ??_rdBlkRegCompleteHandler 007A                        _i2c1_driver_isNACK 0F6C  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 003C  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 0048  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 02BE  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 012A  
                                 __ptext2 061D                                   __ptext3 0798  
                                 __ptext4 05DE                                   __ptext5 07B8  
                                 __ptext6 059A                                   __ptext7 0242  
                                 __ptext8 01C2                                   __ptext9 0FCF  
                     __end_of_do_I2C_IDLE 0F17                       __end_of_do_I2C_RCEN 0F65  
                                 _sw1_EXT 0548            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0798                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0FA6                                   _last_ms 0033  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0F26  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 0024  
                             reset_recv@i 0044         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                ??_PIN_MANAGER_Initialize 003A                 ?_TMR1_SetInterruptHandler 003A  
                               _T2HLTbits 028F                                   _nreg_pt 002E  
                 _INT_SetInterruptHandler 0F40                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 003E                                ??_mod2_LED 003E  
                              ??_mod3_LED 003E                                ??_mod4_LED 003E  
                _do_I2C_SEND_RESTART_READ 0F17                __size_of_SYSTEM_Initialize 001C  
                                 clrloop0 0F59                      __size_of_returnReset 0002  
                    end_of_initialization 007A                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
            __end_of_i2c1_driver_sendNACK 0F09                    ?_rd1RegCompleteHandler 0079  
                    __end_of_INT_CallBack 0FF3                    ?_wr1RegCompleteHandler 0079  
            __end_of_i2c1_driver_resetBus 0EDF                                _reset_recv 061D  
               _do_I2C_SEND_RESTART_WRITE 0F1C                          ?_ADCC_Initialize 0070  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0EE1  
                _TMR0_SetInterruptHandler 0F46                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 06EB  
                __end_of_do_I2C_SEND_STOP 0F2B                      __CFG_WDTCCS$HFINTOSC 0000  
              __end_ofi1_checkDebounceSW1 0490                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                             ??_clock_field 0041  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 05BE  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 06BB  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0EE3  
                             _do_I2C_IDLE 0F12                               _do_I2C_RCEN 0F5E  
    __end_of_TMR2_DefaultInterruptHandler 0EDE     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0EDD                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 003C              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 003A                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                     _i2c_busCollisionISR 0F09                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003                       __end_of_clock_field 0242  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 003A  
                   __end_of_i2c_setBuffer 07B8              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0EE6                  __end_of_handler_clock_ms 0FE6  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0EF5  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 003A  
                        _checkDebounceSW1 0400                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0053  
              __end_of_EXT_INT_Initialize 07F3             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0F3A  
                    _i2c1_driver_sendNACK 0F05                                  ?_LED_bin 003A  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0EDE                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0037                        _PWM6_LoadDutyValue 0689  
                __size_of_TMR2_Initialize 0018                                 _do_I2C_RX 036D  
                               _do_I2C_TX 0319                     __size_of_INT_CallBack 000D  
          __size_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod1_LED 000B  
                       __size_of_mod2_LED 000A             __end_of_do_I2C_SEND_ADR_WRITE 0F84  
                       __size_of_mod3_LED 000B                         __size_of_mod4_LED 000B  
                     ?_PWM6_LoadDutyValue 003A                          _i2c_restartWrite 0EDF  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0490                     _TMR0_InterruptHandler 0049  
                           ??_setCallBack 0073                                 __pnvBANK0 0049  
                   _rd2RegCompleteHandler 0743                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 05DE                    _PIN_MANAGER_Initialize 03B7  
                   _wr2RegCompleteHandler 0776             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 007C          __end_of_TMR1_SetInterruptHandler 0F52  
                          ??_do_I2C_RESET 0070                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 002C                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0F30                      ??_PWM6_LoadDutyValue 003C  
                           ??_recoverData 0046              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0FE6                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 066F                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                             _clock_field 01C2                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                 _level_bin 0022  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 0F65                         ??_TMR0_Initialize 003C  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0F58                                  _PIE0bits 0716  
                       _handler_clock_hms 051C                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0020  
              ??_TMR0_SetInterruptHandler 003C                                  _PIR0bits 070C  
                             _config_mode 0030                                  _PIR3bits 070F  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 07D6                                  _TMR1_ISR 06EB  
                                _TMR2_ISR 07C7              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 059A  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 003C  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                             _bounce_time 0032                         ?_do_I2C_SEND_STOP 0070  
                                _WPUBbits 0F44      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0006  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 003A  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 0042  
                     __end_of_recoverData 01C2         __end_of_do_I2C_SEND_RESTART_WRITE 0F21  
                        __size_of_INT_ISR 0006                   __end_of_do_I2C_TX_EMPTY 04C3  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0040  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0548                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 003C                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 0043                        i1_checkDebounceSW1 0448  
                     _do_I2C_DO_NACK_STOP 0F30                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0FA6                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                 ??_OSCILLATOR_Initialize 003A                         ??_TMR0_StartTimer 003A  
                     _i2c1_driver_sendACK 0F01           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0EE6                  _TMR1_SetInterruptHandler 0F4C  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0EEC  
            __end_of_do_I2C_SEND_ADR_READ 0F9D                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 004D                          __size_of_sw1_EXT 002C  
                        __size_of_cksum_w 0010                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                              _mssp1_setIRQ 0EF2  
                             ??_do_I2C_RX 007A                               ??_do_I2C_TX 007A  
                    ??i1_checkDebounceSW1 0070                                  __ptext10 0FC4  
                                __ptext11 0FAF                                  __ptext20 05FE  
                                __ptext12 0FB9                                  __ptext21 0F4C  
                                __ptext13 0400                                _T1GCONbits 020F  
                                __ptext30 0702                                  __ptext22 072E  
                                __ptext14 02BE                                  __ptext31 0655  
                                __ptext23 0F46                                  __ptext15 0689  
                                __ptext40 0EF5                                  __ptext32 066F  
                                __ptext24 07F3                                  __ptext16 0EFB  
                                __ptext41 036D                                  __ptext33 0F84  
                                __ptext25 0F8C                                  __ptext17 0639  
                                __ptext50 0F26                                  __ptext42 0319  
                                __ptext34 0F65                                  __ptext26 03B7  
                                __ptext18 06BB                                  __ptext51 0F21  
                                __ptext43 04F0                                  __ptext35 0F9D  
                                __ptext27 0FA6                                  __ptext19 0F52  
                                __ptext60 0EEF                                  __ptext52 0F1C  
                                __ptext44 0F35                                  __ptext28 07E5  
                                __ptext61 0F05                                  __ptext53 0F17  
                                __ptext45 0F30                                  __ptext37 0F09  
                                __ptext29 0F40                                  __ptext70 0EDF  
                                __ptext62 0EDE                                  __ptext54 0F12  
                                __ptext46 0F2B                                  __ptext38 0EF8  
                                __ptext71 0776                                  __ptext63 0EEC  
                                __ptext55 0F74                                  __ptext47 0F5E  
                                __ptext39 04C3                                  __ptext80 0FDA  
                                __ptext72 0FF3                                  __ptext64 06D3  
                                __ptext56 0490                                  __ptext48 0F7C  
                                __ptext81 06EB                                  __ptext73 0574  
                                __ptext65 0743                                  __ptext57 0EF2  
                                __ptext49 0F94                                  __ptext90 0FE6  
                                __ptext82 0EDC                                  __ptext74 07A8  
                                __ptext66 0754                                  __ptext58 0F6C  
                                __ptext91 0EDA                                  __ptext83 051C  
                                __ptext75 0EE9                                  __ptext67 0765  
                                __ptext59 0F0D                                  __ptext92 0548  
                                __ptext84 0787                                  __ptext76 0EE6  
                                __ptext68 0002                                  __ptext93 0448  
                                __ptext85 07D6                                  __ptext77 0F01  
                                __ptext69 0EE1                                  __ptext94 0718  
                                __ptext86 06A2                                  __ptext78 07C7  
                                __ptext87 0EDB                                  __ptext79 0EDD  
                                __ptext88 0EE3                                  __ptext89 0F3A  
                                _mod1_LED 0FB9                              _SSP1CON1bits 0190  
                                _mod2_LED 0FAF                  __end_of_checkDebounceSW1 0448  
                            _SSP1CON2bits 0191                                  _mod3_LED 0FC4  
                                _mod4_LED 0FCF                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0F7C  
             DATAEE_WriteByte@GIEBitValue 0043                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                         ??_PWM6_Initialize 003A  
                        _i2c1_driver_stop 0EE9                             __size_of_main 00AC  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
           __end_of_i2c1_driver_getRXData 0EF2      __end_of_TMR0_DefaultInterruptHandler 0EDC  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0EDB  
                       ??_DATAEE_ReadByte 003C                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0574                              ??_reset_recv 0044  
                       ?_handler_clock_ms 0070                                  _set_mode 0031  
                          _config_routine 0242              __end_of_ADCC_StartConversion 0F8C  
                                int$flags 007E                        ??_handler_clock_ms 0070  
      __end_of_INTERRUPT_InterruptManager 005B                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 003D          __end_of_do_I2C_SEND_RESTART_READ 0F1C  
                            ??_returnStop 007A                  __end_of_i2c_restartWrite 0EE1  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 012A  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0051  
                      __end_of_reset_recv 0639                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 07E5                          ?_do_I2C_TX_EMPTY 0070  
                  _do_I2C_DO_ADDRESS_NACK 04F0                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 002C                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0EE3  
                  __end_of_config_routine 02BE             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 003A  
                _ADCC_GetConversionResult 0F9D                             __pstringtext1 05BE  
                    ??_EXT_INT_Initialize 003C                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 072E  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
                            ?_clock_field 0070               PWM6_LoadDutyValue@dutyValue 003A  
          __end_of_PIN_MANAGER_Initialize 0400                         ??_ADCC_Initialize 003A  
             __end_of_i2c_busCollisionISR 0F0D            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0765            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0776                     _TMR2_InterruptHandler 004B  
                   _do_I2C_SEND_ADR_WRITE 0F7C                      _do_I2C_SEND_ADR_READ 0F94  
                         ?_config_routine 0070                           _TMR1_Initialize 05FE  
