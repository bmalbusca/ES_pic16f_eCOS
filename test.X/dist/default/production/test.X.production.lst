

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 11:23:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text64,local,class=CODE,merge=1,delta=2
    80                           	psect	text65,local,class=CODE,merge=1,delta=2
    81                           	psect	text66,local,class=CODE,merge=1,delta=2
    82                           	psect	text67,local,class=CODE,merge=1,delta=2
    83                           	psect	text68,local,class=CODE,merge=1,delta=2
    84                           	psect	text69,local,class=CODE,merge=1,delta=2
    85                           	psect	text70,local,class=CODE,merge=1,delta=2
    86                           	psect	text71,local,class=CODE,merge=1,delta=2
    87                           	psect	text72,local,class=CODE,merge=1,delta=2
    88                           	psect	text73,local,class=CODE,merge=1,delta=2
    89                           	psect	text74,local,class=CODE,merge=1,delta=2
    90                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text78,local,class=CODE,merge=1,delta=2
    94                           	psect	text79,local,class=CODE,merge=1,delta=2
    95                           	psect	text80,local,class=CODE,merge=1,delta=2
    96                           	psect	text81,local,class=CODE,merge=1,delta=2
    97                           	psect	text82,local,class=CODE,merge=1,delta=2
    98                           	psect	text83,local,class=CODE,merge=1,delta=2
    99                           	psect	text84,local,class=CODE,merge=1,delta=2
   100                           	psect	text85,local,class=CODE,merge=1,delta=2
   101                           	psect	text86,local,class=CODE,merge=1,delta=2
   102                           	psect	text87,local,class=CODE,merge=1,delta=2
   103                           	psect	text88,local,class=CODE,merge=1,delta=2
   104                           	psect	text89,local,class=CODE,merge=1,delta=2
   105                           	psect	text90,local,class=CODE,merge=1,delta=2
   106                           	psect	text91,local,class=CODE,merge=1,delta=2
   107                           	psect	text92,local,class=CODE,merge=1,delta=2
   108                           	psect	text93,local,class=CODE,merge=1,delta=2
   109                           	psect	text94,local,class=CODE,merge=1,delta=2
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 2.10
   113                           ; Generated 31/07/2019 GMT
   114                           ; 
   115                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F18875 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001C                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  008C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0110                     	;# 
   206  0110                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0114                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  018E                     	;# 
   245  018F                     	;# 
   246  0190                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0198                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  020C                     	;# 
   257  020C                     	;# 
   258  020D                     	;# 
   259  020E                     	;# 
   260  020F                     	;# 
   261  020F                     	;# 
   262  0210                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0218                     	;# 
   277  0218                     	;# 
   278  0219                     	;# 
   279  021A                     	;# 
   280  021B                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028C                     	;# 
   290  028D                     	;# 
   291  028D                     	;# 
   292  028E                     	;# 
   293  028F                     	;# 
   294  0290                     	;# 
   295  0290                     	;# 
   296  0291                     	;# 
   297  0292                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0296                     	;# 
   305  0297                     	;# 
   306  0298                     	;# 
   307  0298                     	;# 
   308  0299                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  029B                     	;# 
   312  029C                     	;# 
   313  029C                     	;# 
   314  029D                     	;# 
   315  030C                     	;# 
   316  030C                     	;# 
   317  030D                     	;# 
   318  030E                     	;# 
   319  030F                     	;# 
   320  0310                     	;# 
   321  0310                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0317                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031B                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  031F                     	;# 
   340  038C                     	;# 
   341  038C                     	;# 
   342  038D                     	;# 
   343  038E                     	;# 
   344  0390                     	;# 
   345  0390                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  040C                     	;# 
   349  040D                     	;# 
   350  040E                     	;# 
   351  040F                     	;# 
   352  0410                     	;# 
   353  0411                     	;# 
   354  0416                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  0418                     	;# 
   358  0418                     	;# 
   359  0419                     	;# 
   360  041A                     	;# 
   361  041A                     	;# 
   362  041B                     	;# 
   363  041C                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  041F                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  050C                     	;# 
   391  050C                     	;# 
   392  050D                     	;# 
   393  050E                     	;# 
   394  050F                     	;# 
   395  050F                     	;# 
   396  0510                     	;# 
   397  0511                     	;# 
   398  0512                     	;# 
   399  0512                     	;# 
   400  0513                     	;# 
   401  0514                     	;# 
   402  0515                     	;# 
   403  0515                     	;# 
   404  0516                     	;# 
   405  0517                     	;# 
   406  0518                     	;# 
   407  0519                     	;# 
   408  051A                     	;# 
   409  051B                     	;# 
   410  051C                     	;# 
   411  051D                     	;# 
   412  058C                     	;# 
   413  058C                     	;# 
   414  058D                     	;# 
   415  058E                     	;# 
   416  058F                     	;# 
   417  058F                     	;# 
   418  0590                     	;# 
   419  0591                     	;# 
   420  0592                     	;# 
   421  0593                     	;# 
   422  060C                     	;# 
   423  060D                     	;# 
   424  060E                     	;# 
   425  060F                     	;# 
   426  0610                     	;# 
   427  0611                     	;# 
   428  0612                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0616                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  068C                     	;# 
   441  068D                     	;# 
   442  068E                     	;# 
   443  068F                     	;# 
   444  0690                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081D                     	;# 
   486  081E                     	;# 
   487  081F                     	;# 
   488  088C                     	;# 
   489  088D                     	;# 
   490  088E                     	;# 
   491  088F                     	;# 
   492  0890                     	;# 
   493  0891                     	;# 
   494  0892                     	;# 
   495  0893                     	;# 
   496  0895                     	;# 
   497  0896                     	;# 
   498  0897                     	;# 
   499  0898                     	;# 
   500  0899                     	;# 
   501  089A                     	;# 
   502  089B                     	;# 
   503  090C                     	;# 
   504  090E                     	;# 
   505  090F                     	;# 
   506  091F                     	;# 
   507  091F                     	;# 
   508  098F                     	;# 
   509  098F                     	;# 
   510  0990                     	;# 
   511  0991                     	;# 
   512  0992                     	;# 
   513  0993                     	;# 
   514  0994                     	;# 
   515  0995                     	;# 
   516  0996                     	;# 
   517  0997                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E17                     	;# 
   527  0E18                     	;# 
   528  0E19                     	;# 
   529  0E1A                     	;# 
   530  0E1B                     	;# 
   531  0E1C                     	;# 
   532  0E1D                     	;# 
   533  0E1E                     	;# 
   534  0E1F                     	;# 
   535  0E20                     	;# 
   536  0E21                     	;# 
   537  0E22                     	;# 
   538  0E23                     	;# 
   539  0E24                     	;# 
   540  0E25                     	;# 
   541  0E26                     	;# 
   542  0E27                     	;# 
   543  0E28                     	;# 
   544  0E29                     	;# 
   545  0E2A                     	;# 
   546  0E2B                     	;# 
   547  0E2C                     	;# 
   548  0E2D                     	;# 
   549  0E2E                     	;# 
   550  0E2F                     	;# 
   551  0E30                     	;# 
   552  0E31                     	;# 
   553  0E32                     	;# 
   554  0E33                     	;# 
   555  0E34                     	;# 
   556  0E35                     	;# 
   557  0E36                     	;# 
   558  0E37                     	;# 
   559  0E8F                     	;# 
   560  0E90                     	;# 
   561  0E91                     	;# 
   562  0E92                     	;# 
   563  0E93                     	;# 
   564  0E94                     	;# 
   565  0E95                     	;# 
   566  0E96                     	;# 
   567  0E97                     	;# 
   568  0E9C                     	;# 
   569  0E9D                     	;# 
   570  0E9E                     	;# 
   571  0EA1                     	;# 
   572  0EA2                     	;# 
   573  0EA3                     	;# 
   574  0EA4                     	;# 
   575  0EA5                     	;# 
   576  0EA9                     	;# 
   577  0EAA                     	;# 
   578  0EAB                     	;# 
   579  0EAC                     	;# 
   580  0EB1                     	;# 
   581  0EB2                     	;# 
   582  0EB3                     	;# 
   583  0EB8                     	;# 
   584  0EB9                     	;# 
   585  0EBA                     	;# 
   586  0EBB                     	;# 
   587  0EBC                     	;# 
   588  0EBD                     	;# 
   589  0EBE                     	;# 
   590  0EC3                     	;# 
   591  0EC5                     	;# 
   592  0EC6                     	;# 
   593  0EC7                     	;# 
   594  0EC8                     	;# 
   595  0EC9                     	;# 
   596  0ECA                     	;# 
   597  0ECB                     	;# 
   598  0ECC                     	;# 
   599  0F10                     	;# 
   600  0F11                     	;# 
   601  0F12                     	;# 
   602  0F13                     	;# 
   603  0F14                     	;# 
   604  0F15                     	;# 
   605  0F16                     	;# 
   606  0F17                     	;# 
   607  0F18                     	;# 
   608  0F19                     	;# 
   609  0F1A                     	;# 
   610  0F1B                     	;# 
   611  0F1C                     	;# 
   612  0F1D                     	;# 
   613  0F1E                     	;# 
   614  0F1F                     	;# 
   615  0F20                     	;# 
   616  0F21                     	;# 
   617  0F22                     	;# 
   618  0F23                     	;# 
   619  0F24                     	;# 
   620  0F25                     	;# 
   621  0F26                     	;# 
   622  0F27                     	;# 
   623  0F28                     	;# 
   624  0F29                     	;# 
   625  0F2A                     	;# 
   626  0F2B                     	;# 
   627  0F2C                     	;# 
   628  0F2D                     	;# 
   629  0F2E                     	;# 
   630  0F2F                     	;# 
   631  0F30                     	;# 
   632  0F31                     	;# 
   633  0F32                     	;# 
   634  0F38                     	;# 
   635  0F39                     	;# 
   636  0F3A                     	;# 
   637  0F3B                     	;# 
   638  0F3C                     	;# 
   639  0F3D                     	;# 
   640  0F3E                     	;# 
   641  0F3F                     	;# 
   642  0F40                     	;# 
   643  0F41                     	;# 
   644  0F43                     	;# 
   645  0F44                     	;# 
   646  0F45                     	;# 
   647  0F46                     	;# 
   648  0F47                     	;# 
   649  0F48                     	;# 
   650  0F49                     	;# 
   651  0F4A                     	;# 
   652  0F4B                     	;# 
   653  0F4C                     	;# 
   654  0F4E                     	;# 
   655  0F4F                     	;# 
   656  0F50                     	;# 
   657  0F51                     	;# 
   658  0F52                     	;# 
   659  0F53                     	;# 
   660  0F54                     	;# 
   661  0F55                     	;# 
   662  0F56                     	;# 
   663  0F57                     	;# 
   664  0F59                     	;# 
   665  0F5A                     	;# 
   666  0F5B                     	;# 
   667  0F5C                     	;# 
   668  0F5D                     	;# 
   669  0F61                     	;# 
   670  0F62                     	;# 
   671  0F64                     	;# 
   672  0F65                     	;# 
   673  0F66                     	;# 
   674  0F67                     	;# 
   675  0F68                     	;# 
   676  0F69                     	;# 
   677  0F6A                     	;# 
   678  0F6B                     	;# 
   679  0F6C                     	;# 
   680  0F6D                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEB                     	;# 
   689  0FED                     	;# 
   690  0FEE                     	;# 
   691  0FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000D                     	;# 
   706  000E                     	;# 
   707  000F                     	;# 
   708  0010                     	;# 
   709  0011                     	;# 
   710  0012                     	;# 
   711  0013                     	;# 
   712  0014                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001C                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001D                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008C                     	;# 
   727  008D                     	;# 
   728  008E                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0090                     	;# 
   733  0091                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0110                     	;# 
   752  0110                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0119                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011C                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011D                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011E                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  018C                     	;# 
   789  018D                     	;# 
   790  018E                     	;# 
   791  018F                     	;# 
   792  0190                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0196                     	;# 
   796  0197                     	;# 
   797  0198                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019C                     	;# 
   802  020C                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  020F                     	;# 
   807  020F                     	;# 
   808  0210                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0218                     	;# 
   823  0218                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028C                     	;# 
   836  028D                     	;# 
   837  028D                     	;# 
   838  028E                     	;# 
   839  028F                     	;# 
   840  0290                     	;# 
   841  0290                     	;# 
   842  0291                     	;# 
   843  0292                     	;# 
   844  0292                     	;# 
   845  0293                     	;# 
   846  0293                     	;# 
   847  0294                     	;# 
   848  0295                     	;# 
   849  0296                     	;# 
   850  0296                     	;# 
   851  0297                     	;# 
   852  0298                     	;# 
   853  0298                     	;# 
   854  0299                     	;# 
   855  0299                     	;# 
   856  029A                     	;# 
   857  029B                     	;# 
   858  029C                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  030C                     	;# 
   862  030C                     	;# 
   863  030D                     	;# 
   864  030E                     	;# 
   865  030F                     	;# 
   866  0310                     	;# 
   867  0310                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0314                     	;# 
   872  0314                     	;# 
   873  0315                     	;# 
   874  0316                     	;# 
   875  0317                     	;# 
   876  0318                     	;# 
   877  0318                     	;# 
   878  0319                     	;# 
   879  031A                     	;# 
   880  031B                     	;# 
   881  031C                     	;# 
   882  031C                     	;# 
   883  031D                     	;# 
   884  031E                     	;# 
   885  031F                     	;# 
   886  038C                     	;# 
   887  038C                     	;# 
   888  038D                     	;# 
   889  038E                     	;# 
   890  0390                     	;# 
   891  0390                     	;# 
   892  0391                     	;# 
   893  0392                     	;# 
   894  040C                     	;# 
   895  040D                     	;# 
   896  040E                     	;# 
   897  040F                     	;# 
   898  0410                     	;# 
   899  0411                     	;# 
   900  0416                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041A                     	;# 
   908  041B                     	;# 
   909  041C                     	;# 
   910  041C                     	;# 
   911  041D                     	;# 
   912  041E                     	;# 
   913  041F                     	;# 
   914  048C                     	;# 
   915  048C                     	;# 
   916  048D                     	;# 
   917  048E                     	;# 
   918  048F                     	;# 
   919  048F                     	;# 
   920  0490                     	;# 
   921  0491                     	;# 
   922  0492                     	;# 
   923  0492                     	;# 
   924  0493                     	;# 
   925  0494                     	;# 
   926  0495                     	;# 
   927  0495                     	;# 
   928  0496                     	;# 
   929  0497                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  050C                     	;# 
   937  050C                     	;# 
   938  050D                     	;# 
   939  050E                     	;# 
   940  050F                     	;# 
   941  050F                     	;# 
   942  0510                     	;# 
   943  0511                     	;# 
   944  0512                     	;# 
   945  0512                     	;# 
   946  0513                     	;# 
   947  0514                     	;# 
   948  0515                     	;# 
   949  0515                     	;# 
   950  0516                     	;# 
   951  0517                     	;# 
   952  0518                     	;# 
   953  0519                     	;# 
   954  051A                     	;# 
   955  051B                     	;# 
   956  051C                     	;# 
   957  051D                     	;# 
   958  058C                     	;# 
   959  058C                     	;# 
   960  058D                     	;# 
   961  058E                     	;# 
   962  058F                     	;# 
   963  058F                     	;# 
   964  0590                     	;# 
   965  0591                     	;# 
   966  0592                     	;# 
   967  0593                     	;# 
   968  060C                     	;# 
   969  060D                     	;# 
   970  060E                     	;# 
   971  060F                     	;# 
   972  0610                     	;# 
   973  0611                     	;# 
   974  0612                     	;# 
   975  0613                     	;# 
   976  0614                     	;# 
   977  0616                     	;# 
   978  0617                     	;# 
   979  0618                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061D                     	;# 
   985  061E                     	;# 
   986  068C                     	;# 
   987  068D                     	;# 
   988  068E                     	;# 
   989  068F                     	;# 
   990  0690                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  070C                     	;# 
   996  070D                     	;# 
   997  070E                     	;# 
   998  070F                     	;# 
   999  0710                     	;# 
  1000  0711                     	;# 
  1001  0712                     	;# 
  1002  0713                     	;# 
  1003  0714                     	;# 
  1004  0716                     	;# 
  1005  0717                     	;# 
  1006  0718                     	;# 
  1007  0719                     	;# 
  1008  071A                     	;# 
  1009  071B                     	;# 
  1010  071C                     	;# 
  1011  071D                     	;# 
  1012  071E                     	;# 
  1013  0796                     	;# 
  1014  0797                     	;# 
  1015  0798                     	;# 
  1016  0799                     	;# 
  1017  079A                     	;# 
  1018  079B                     	;# 
  1019  080C                     	;# 
  1020  080D                     	;# 
  1021  080E                     	;# 
  1022  080F                     	;# 
  1023  0810                     	;# 
  1024  0811                     	;# 
  1025  0812                     	;# 
  1026  0813                     	;# 
  1027  0814                     	;# 
  1028  081A                     	;# 
  1029  081B                     	;# 
  1030  081C                     	;# 
  1031  081D                     	;# 
  1032  081E                     	;# 
  1033  081F                     	;# 
  1034  088C                     	;# 
  1035  088D                     	;# 
  1036  088E                     	;# 
  1037  088F                     	;# 
  1038  0890                     	;# 
  1039  0891                     	;# 
  1040  0892                     	;# 
  1041  0893                     	;# 
  1042  0895                     	;# 
  1043  0896                     	;# 
  1044  0897                     	;# 
  1045  0898                     	;# 
  1046  0899                     	;# 
  1047  089A                     	;# 
  1048  089B                     	;# 
  1049  090C                     	;# 
  1050  090E                     	;# 
  1051  090F                     	;# 
  1052  091F                     	;# 
  1053  091F                     	;# 
  1054  098F                     	;# 
  1055  098F                     	;# 
  1056  0990                     	;# 
  1057  0991                     	;# 
  1058  0992                     	;# 
  1059  0993                     	;# 
  1060  0994                     	;# 
  1061  0995                     	;# 
  1062  0996                     	;# 
  1063  0997                     	;# 
  1064  0E0F                     	;# 
  1065  0E10                     	;# 
  1066  0E11                     	;# 
  1067  0E12                     	;# 
  1068  0E13                     	;# 
  1069  0E14                     	;# 
  1070  0E15                     	;# 
  1071  0E16                     	;# 
  1072  0E17                     	;# 
  1073  0E18                     	;# 
  1074  0E19                     	;# 
  1075  0E1A                     	;# 
  1076  0E1B                     	;# 
  1077  0E1C                     	;# 
  1078  0E1D                     	;# 
  1079  0E1E                     	;# 
  1080  0E1F                     	;# 
  1081  0E20                     	;# 
  1082  0E21                     	;# 
  1083  0E22                     	;# 
  1084  0E23                     	;# 
  1085  0E24                     	;# 
  1086  0E25                     	;# 
  1087  0E26                     	;# 
  1088  0E27                     	;# 
  1089  0E28                     	;# 
  1090  0E29                     	;# 
  1091  0E2A                     	;# 
  1092  0E2B                     	;# 
  1093  0E2C                     	;# 
  1094  0E2D                     	;# 
  1095  0E2E                     	;# 
  1096  0E2F                     	;# 
  1097  0E30                     	;# 
  1098  0E31                     	;# 
  1099  0E32                     	;# 
  1100  0E33                     	;# 
  1101  0E34                     	;# 
  1102  0E35                     	;# 
  1103  0E36                     	;# 
  1104  0E37                     	;# 
  1105  0E8F                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E93                     	;# 
  1110  0E94                     	;# 
  1111  0E95                     	;# 
  1112  0E96                     	;# 
  1113  0E97                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0EA1                     	;# 
  1118  0EA2                     	;# 
  1119  0EA3                     	;# 
  1120  0EA4                     	;# 
  1121  0EA5                     	;# 
  1122  0EA9                     	;# 
  1123  0EAA                     	;# 
  1124  0EAB                     	;# 
  1125  0EAC                     	;# 
  1126  0EB1                     	;# 
  1127  0EB2                     	;# 
  1128  0EB3                     	;# 
  1129  0EB8                     	;# 
  1130  0EB9                     	;# 
  1131  0EBA                     	;# 
  1132  0EBB                     	;# 
  1133  0EBC                     	;# 
  1134  0EBD                     	;# 
  1135  0EBE                     	;# 
  1136  0EC3                     	;# 
  1137  0EC5                     	;# 
  1138  0EC6                     	;# 
  1139  0EC7                     	;# 
  1140  0EC8                     	;# 
  1141  0EC9                     	;# 
  1142  0ECA                     	;# 
  1143  0ECB                     	;# 
  1144  0ECC                     	;# 
  1145  0F10                     	;# 
  1146  0F11                     	;# 
  1147  0F12                     	;# 
  1148  0F13                     	;# 
  1149  0F14                     	;# 
  1150  0F15                     	;# 
  1151  0F16                     	;# 
  1152  0F17                     	;# 
  1153  0F18                     	;# 
  1154  0F19                     	;# 
  1155  0F1A                     	;# 
  1156  0F1B                     	;# 
  1157  0F1C                     	;# 
  1158  0F1D                     	;# 
  1159  0F1E                     	;# 
  1160  0F1F                     	;# 
  1161  0F20                     	;# 
  1162  0F21                     	;# 
  1163  0F22                     	;# 
  1164  0F23                     	;# 
  1165  0F24                     	;# 
  1166  0F25                     	;# 
  1167  0F26                     	;# 
  1168  0F27                     	;# 
  1169  0F28                     	;# 
  1170  0F29                     	;# 
  1171  0F2A                     	;# 
  1172  0F2B                     	;# 
  1173  0F2C                     	;# 
  1174  0F2D                     	;# 
  1175  0F2E                     	;# 
  1176  0F2F                     	;# 
  1177  0F30                     	;# 
  1178  0F31                     	;# 
  1179  0F32                     	;# 
  1180  0F38                     	;# 
  1181  0F39                     	;# 
  1182  0F3A                     	;# 
  1183  0F3B                     	;# 
  1184  0F3C                     	;# 
  1185  0F3D                     	;# 
  1186  0F3E                     	;# 
  1187  0F3F                     	;# 
  1188  0F40                     	;# 
  1189  0F41                     	;# 
  1190  0F43                     	;# 
  1191  0F44                     	;# 
  1192  0F45                     	;# 
  1193  0F46                     	;# 
  1194  0F47                     	;# 
  1195  0F48                     	;# 
  1196  0F49                     	;# 
  1197  0F4A                     	;# 
  1198  0F4B                     	;# 
  1199  0F4C                     	;# 
  1200  0F4E                     	;# 
  1201  0F4F                     	;# 
  1202  0F50                     	;# 
  1203  0F51                     	;# 
  1204  0F52                     	;# 
  1205  0F53                     	;# 
  1206  0F54                     	;# 
  1207  0F55                     	;# 
  1208  0F56                     	;# 
  1209  0F57                     	;# 
  1210  0F59                     	;# 
  1211  0F5A                     	;# 
  1212  0F5B                     	;# 
  1213  0F5C                     	;# 
  1214  0F5D                     	;# 
  1215  0F61                     	;# 
  1216  0F62                     	;# 
  1217  0F64                     	;# 
  1218  0F65                     	;# 
  1219  0F66                     	;# 
  1220  0F67                     	;# 
  1221  0F68                     	;# 
  1222  0F69                     	;# 
  1223  0F6A                     	;# 
  1224  0F6B                     	;# 
  1225  0F6C                     	;# 
  1226  0F6D                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238  0000                     	;# 
  1239  0001                     	;# 
  1240  0002                     	;# 
  1241  0003                     	;# 
  1242  0004                     	;# 
  1243  0005                     	;# 
  1244  0006                     	;# 
  1245  0007                     	;# 
  1246  0008                     	;# 
  1247  0009                     	;# 
  1248  000A                     	;# 
  1249  000B                     	;# 
  1250  000C                     	;# 
  1251  000D                     	;# 
  1252  000E                     	;# 
  1253  000F                     	;# 
  1254  0010                     	;# 
  1255  0011                     	;# 
  1256  0012                     	;# 
  1257  0013                     	;# 
  1258  0014                     	;# 
  1259  0015                     	;# 
  1260  0016                     	;# 
  1261  0017                     	;# 
  1262  0018                     	;# 
  1263  0019                     	;# 
  1264  001A                     	;# 
  1265  001C                     	;# 
  1266  001C                     	;# 
  1267  001D                     	;# 
  1268  001D                     	;# 
  1269  001E                     	;# 
  1270  001F                     	;# 
  1271  008C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  008E                     	;# 
  1276  008F                     	;# 
  1277  0090                     	;# 
  1278  0090                     	;# 
  1279  0091                     	;# 
  1280  0093                     	;# 
  1281  0094                     	;# 
  1282  0095                     	;# 
  1283  0096                     	;# 
  1284  0097                     	;# 
  1285  0098                     	;# 
  1286  0099                     	;# 
  1287  009A                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  010C                     	;# 
  1293  010D                     	;# 
  1294  010E                     	;# 
  1295  010E                     	;# 
  1296  010F                     	;# 
  1297  0110                     	;# 
  1298  0110                     	;# 
  1299  0111                     	;# 
  1300  0112                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0114                     	;# 
  1305  0115                     	;# 
  1306  0116                     	;# 
  1307  0116                     	;# 
  1308  0117                     	;# 
  1309  0119                     	;# 
  1310  0119                     	;# 
  1311  0119                     	;# 
  1312  011A                     	;# 
  1313  011A                     	;# 
  1314  011A                     	;# 
  1315  011B                     	;# 
  1316  011B                     	;# 
  1317  011B                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011C                     	;# 
  1321  011C                     	;# 
  1322  011C                     	;# 
  1323  011D                     	;# 
  1324  011D                     	;# 
  1325  011D                     	;# 
  1326  011E                     	;# 
  1327  011E                     	;# 
  1328  011E                     	;# 
  1329  011F                     	;# 
  1330  011F                     	;# 
  1331  011F                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  018C                     	;# 
  1335  018D                     	;# 
  1336  018E                     	;# 
  1337  018F                     	;# 
  1338  0190                     	;# 
  1339  0191                     	;# 
  1340  0192                     	;# 
  1341  0196                     	;# 
  1342  0197                     	;# 
  1343  0198                     	;# 
  1344  0199                     	;# 
  1345  019A                     	;# 
  1346  019B                     	;# 
  1347  019C                     	;# 
  1348  020C                     	;# 
  1349  020C                     	;# 
  1350  020D                     	;# 
  1351  020E                     	;# 
  1352  020F                     	;# 
  1353  020F                     	;# 
  1354  0210                     	;# 
  1355  0210                     	;# 
  1356  0211                     	;# 
  1357  0211                     	;# 
  1358  0212                     	;# 
  1359  0212                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0216                     	;# 
  1365  0216                     	;# 
  1366  0217                     	;# 
  1367  0217                     	;# 
  1368  0218                     	;# 
  1369  0218                     	;# 
  1370  0219                     	;# 
  1371  021A                     	;# 
  1372  021B                     	;# 
  1373  021B                     	;# 
  1374  021C                     	;# 
  1375  021C                     	;# 
  1376  021D                     	;# 
  1377  021D                     	;# 
  1378  021E                     	;# 
  1379  021F                     	;# 
  1380  028C                     	;# 
  1381  028C                     	;# 
  1382  028D                     	;# 
  1383  028D                     	;# 
  1384  028E                     	;# 
  1385  028F                     	;# 
  1386  0290                     	;# 
  1387  0290                     	;# 
  1388  0291                     	;# 
  1389  0292                     	;# 
  1390  0292                     	;# 
  1391  0293                     	;# 
  1392  0293                     	;# 
  1393  0294                     	;# 
  1394  0295                     	;# 
  1395  0296                     	;# 
  1396  0296                     	;# 
  1397  0297                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  0299                     	;# 
  1402  029A                     	;# 
  1403  029B                     	;# 
  1404  029C                     	;# 
  1405  029C                     	;# 
  1406  029D                     	;# 
  1407  030C                     	;# 
  1408  030C                     	;# 
  1409  030D                     	;# 
  1410  030E                     	;# 
  1411  030F                     	;# 
  1412  0310                     	;# 
  1413  0310                     	;# 
  1414  0311                     	;# 
  1415  0312                     	;# 
  1416  0313                     	;# 
  1417  0314                     	;# 
  1418  0314                     	;# 
  1419  0315                     	;# 
  1420  0316                     	;# 
  1421  0317                     	;# 
  1422  0318                     	;# 
  1423  0318                     	;# 
  1424  0319                     	;# 
  1425  031A                     	;# 
  1426  031B                     	;# 
  1427  031C                     	;# 
  1428  031C                     	;# 
  1429  031D                     	;# 
  1430  031E                     	;# 
  1431  031F                     	;# 
  1432  038C                     	;# 
  1433  038C                     	;# 
  1434  038D                     	;# 
  1435  038E                     	;# 
  1436  0390                     	;# 
  1437  0390                     	;# 
  1438  0391                     	;# 
  1439  0392                     	;# 
  1440  040C                     	;# 
  1441  040D                     	;# 
  1442  040E                     	;# 
  1443  040F                     	;# 
  1444  0410                     	;# 
  1445  0411                     	;# 
  1446  0416                     	;# 
  1447  0416                     	;# 
  1448  0417                     	;# 
  1449  0418                     	;# 
  1450  0418                     	;# 
  1451  0419                     	;# 
  1452  041A                     	;# 
  1453  041A                     	;# 
  1454  041B                     	;# 
  1455  041C                     	;# 
  1456  041C                     	;# 
  1457  041D                     	;# 
  1458  041E                     	;# 
  1459  041F                     	;# 
  1460  048C                     	;# 
  1461  048C                     	;# 
  1462  048D                     	;# 
  1463  048E                     	;# 
  1464  048F                     	;# 
  1465  048F                     	;# 
  1466  0490                     	;# 
  1467  0491                     	;# 
  1468  0492                     	;# 
  1469  0492                     	;# 
  1470  0493                     	;# 
  1471  0494                     	;# 
  1472  0495                     	;# 
  1473  0495                     	;# 
  1474  0496                     	;# 
  1475  0497                     	;# 
  1476  0498                     	;# 
  1477  0499                     	;# 
  1478  049A                     	;# 
  1479  049B                     	;# 
  1480  049C                     	;# 
  1481  049D                     	;# 
  1482  050C                     	;# 
  1483  050C                     	;# 
  1484  050D                     	;# 
  1485  050E                     	;# 
  1486  050F                     	;# 
  1487  050F                     	;# 
  1488  0510                     	;# 
  1489  0511                     	;# 
  1490  0512                     	;# 
  1491  0512                     	;# 
  1492  0513                     	;# 
  1493  0514                     	;# 
  1494  0515                     	;# 
  1495  0515                     	;# 
  1496  0516                     	;# 
  1497  0517                     	;# 
  1498  0518                     	;# 
  1499  0519                     	;# 
  1500  051A                     	;# 
  1501  051B                     	;# 
  1502  051C                     	;# 
  1503  051D                     	;# 
  1504  058C                     	;# 
  1505  058C                     	;# 
  1506  058D                     	;# 
  1507  058E                     	;# 
  1508  058F                     	;# 
  1509  058F                     	;# 
  1510  0590                     	;# 
  1511  0591                     	;# 
  1512  0592                     	;# 
  1513  0593                     	;# 
  1514  060C                     	;# 
  1515  060D                     	;# 
  1516  060E                     	;# 
  1517  060F                     	;# 
  1518  0610                     	;# 
  1519  0611                     	;# 
  1520  0612                     	;# 
  1521  0613                     	;# 
  1522  0614                     	;# 
  1523  0616                     	;# 
  1524  0617                     	;# 
  1525  0618                     	;# 
  1526  0619                     	;# 
  1527  061A                     	;# 
  1528  061B                     	;# 
  1529  061C                     	;# 
  1530  061D                     	;# 
  1531  061E                     	;# 
  1532  068C                     	;# 
  1533  068D                     	;# 
  1534  068E                     	;# 
  1535  068F                     	;# 
  1536  0690                     	;# 
  1537  0691                     	;# 
  1538  0692                     	;# 
  1539  0693                     	;# 
  1540  0694                     	;# 
  1541  070C                     	;# 
  1542  070D                     	;# 
  1543  070E                     	;# 
  1544  070F                     	;# 
  1545  0710                     	;# 
  1546  0711                     	;# 
  1547  0712                     	;# 
  1548  0713                     	;# 
  1549  0714                     	;# 
  1550  0716                     	;# 
  1551  0717                     	;# 
  1552  0718                     	;# 
  1553  0719                     	;# 
  1554  071A                     	;# 
  1555  071B                     	;# 
  1556  071C                     	;# 
  1557  071D                     	;# 
  1558  071E                     	;# 
  1559  0796                     	;# 
  1560  0797                     	;# 
  1561  0798                     	;# 
  1562  0799                     	;# 
  1563  079A                     	;# 
  1564  079B                     	;# 
  1565  080C                     	;# 
  1566  080D                     	;# 
  1567  080E                     	;# 
  1568  080F                     	;# 
  1569  0810                     	;# 
  1570  0811                     	;# 
  1571  0812                     	;# 
  1572  0813                     	;# 
  1573  0814                     	;# 
  1574  081A                     	;# 
  1575  081B                     	;# 
  1576  081C                     	;# 
  1577  081D                     	;# 
  1578  081E                     	;# 
  1579  081F                     	;# 
  1580  088C                     	;# 
  1581  088D                     	;# 
  1582  088E                     	;# 
  1583  088F                     	;# 
  1584  0890                     	;# 
  1585  0891                     	;# 
  1586  0892                     	;# 
  1587  0893                     	;# 
  1588  0895                     	;# 
  1589  0896                     	;# 
  1590  0897                     	;# 
  1591  0898                     	;# 
  1592  0899                     	;# 
  1593  089A                     	;# 
  1594  089B                     	;# 
  1595  090C                     	;# 
  1596  090E                     	;# 
  1597  090F                     	;# 
  1598  091F                     	;# 
  1599  091F                     	;# 
  1600  098F                     	;# 
  1601  098F                     	;# 
  1602  0990                     	;# 
  1603  0991                     	;# 
  1604  0992                     	;# 
  1605  0993                     	;# 
  1606  0994                     	;# 
  1607  0995                     	;# 
  1608  0996                     	;# 
  1609  0997                     	;# 
  1610  0E0F                     	;# 
  1611  0E10                     	;# 
  1612  0E11                     	;# 
  1613  0E12                     	;# 
  1614  0E13                     	;# 
  1615  0E14                     	;# 
  1616  0E15                     	;# 
  1617  0E16                     	;# 
  1618  0E17                     	;# 
  1619  0E18                     	;# 
  1620  0E19                     	;# 
  1621  0E1A                     	;# 
  1622  0E1B                     	;# 
  1623  0E1C                     	;# 
  1624  0E1D                     	;# 
  1625  0E1E                     	;# 
  1626  0E1F                     	;# 
  1627  0E20                     	;# 
  1628  0E21                     	;# 
  1629  0E22                     	;# 
  1630  0E23                     	;# 
  1631  0E24                     	;# 
  1632  0E25                     	;# 
  1633  0E26                     	;# 
  1634  0E27                     	;# 
  1635  0E28                     	;# 
  1636  0E29                     	;# 
  1637  0E2A                     	;# 
  1638  0E2B                     	;# 
  1639  0E2C                     	;# 
  1640  0E2D                     	;# 
  1641  0E2E                     	;# 
  1642  0E2F                     	;# 
  1643  0E30                     	;# 
  1644  0E31                     	;# 
  1645  0E32                     	;# 
  1646  0E33                     	;# 
  1647  0E34                     	;# 
  1648  0E35                     	;# 
  1649  0E36                     	;# 
  1650  0E37                     	;# 
  1651  0E8F                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E9C                     	;# 
  1661  0E9D                     	;# 
  1662  0E9E                     	;# 
  1663  0EA1                     	;# 
  1664  0EA2                     	;# 
  1665  0EA3                     	;# 
  1666  0EA4                     	;# 
  1667  0EA5                     	;# 
  1668  0EA9                     	;# 
  1669  0EAA                     	;# 
  1670  0EAB                     	;# 
  1671  0EAC                     	;# 
  1672  0EB1                     	;# 
  1673  0EB2                     	;# 
  1674  0EB3                     	;# 
  1675  0EB8                     	;# 
  1676  0EB9                     	;# 
  1677  0EBA                     	;# 
  1678  0EBB                     	;# 
  1679  0EBC                     	;# 
  1680  0EBD                     	;# 
  1681  0EBE                     	;# 
  1682  0EC3                     	;# 
  1683  0EC5                     	;# 
  1684  0EC6                     	;# 
  1685  0EC7                     	;# 
  1686  0EC8                     	;# 
  1687  0EC9                     	;# 
  1688  0ECA                     	;# 
  1689  0ECB                     	;# 
  1690  0ECC                     	;# 
  1691  0F10                     	;# 
  1692  0F11                     	;# 
  1693  0F12                     	;# 
  1694  0F13                     	;# 
  1695  0F14                     	;# 
  1696  0F15                     	;# 
  1697  0F16                     	;# 
  1698  0F17                     	;# 
  1699  0F18                     	;# 
  1700  0F19                     	;# 
  1701  0F1A                     	;# 
  1702  0F1B                     	;# 
  1703  0F1C                     	;# 
  1704  0F1D                     	;# 
  1705  0F1E                     	;# 
  1706  0F1F                     	;# 
  1707  0F20                     	;# 
  1708  0F21                     	;# 
  1709  0F22                     	;# 
  1710  0F23                     	;# 
  1711  0F24                     	;# 
  1712  0F25                     	;# 
  1713  0F26                     	;# 
  1714  0F27                     	;# 
  1715  0F28                     	;# 
  1716  0F29                     	;# 
  1717  0F2A                     	;# 
  1718  0F2B                     	;# 
  1719  0F2C                     	;# 
  1720  0F2D                     	;# 
  1721  0F2E                     	;# 
  1722  0F2F                     	;# 
  1723  0F30                     	;# 
  1724  0F31                     	;# 
  1725  0F32                     	;# 
  1726  0F38                     	;# 
  1727  0F39                     	;# 
  1728  0F3A                     	;# 
  1729  0F3B                     	;# 
  1730  0F3C                     	;# 
  1731  0F3D                     	;# 
  1732  0F3E                     	;# 
  1733  0F3F                     	;# 
  1734  0F40                     	;# 
  1735  0F41                     	;# 
  1736  0F43                     	;# 
  1737  0F44                     	;# 
  1738  0F45                     	;# 
  1739  0F46                     	;# 
  1740  0F47                     	;# 
  1741  0F48                     	;# 
  1742  0F49                     	;# 
  1743  0F4A                     	;# 
  1744  0F4B                     	;# 
  1745  0F4C                     	;# 
  1746  0F4E                     	;# 
  1747  0F4F                     	;# 
  1748  0F50                     	;# 
  1749  0F51                     	;# 
  1750  0F52                     	;# 
  1751  0F53                     	;# 
  1752  0F54                     	;# 
  1753  0F55                     	;# 
  1754  0F56                     	;# 
  1755  0F57                     	;# 
  1756  0F59                     	;# 
  1757  0F5A                     	;# 
  1758  0F5B                     	;# 
  1759  0F5C                     	;# 
  1760  0F5D                     	;# 
  1761  0F61                     	;# 
  1762  0F62                     	;# 
  1763  0F64                     	;# 
  1764  0F65                     	;# 
  1765  0F66                     	;# 
  1766  0F67                     	;# 
  1767  0F68                     	;# 
  1768  0F69                     	;# 
  1769  0F6A                     	;# 
  1770  0F6B                     	;# 
  1771  0F6C                     	;# 
  1772  0F6D                     	;# 
  1773  0FE4                     	;# 
  1774  0FE5                     	;# 
  1775  0FE6                     	;# 
  1776  0FE7                     	;# 
  1777  0FE8                     	;# 
  1778  0FE9                     	;# 
  1779  0FEA                     	;# 
  1780  0FEB                     	;# 
  1781  0FED                     	;# 
  1782  0FEE                     	;# 
  1783  0FEF                     	;# 
  1784  0000                     	;# 
  1785  0001                     	;# 
  1786  0002                     	;# 
  1787  0003                     	;# 
  1788  0004                     	;# 
  1789  0005                     	;# 
  1790  0006                     	;# 
  1791  0007                     	;# 
  1792  0008                     	;# 
  1793  0009                     	;# 
  1794  000A                     	;# 
  1795  000B                     	;# 
  1796  000C                     	;# 
  1797  000D                     	;# 
  1798  000E                     	;# 
  1799  000F                     	;# 
  1800  0010                     	;# 
  1801  0011                     	;# 
  1802  0012                     	;# 
  1803  0013                     	;# 
  1804  0014                     	;# 
  1805  0015                     	;# 
  1806  0016                     	;# 
  1807  0017                     	;# 
  1808  0018                     	;# 
  1809  0019                     	;# 
  1810  001A                     	;# 
  1811  001C                     	;# 
  1812  001C                     	;# 
  1813  001D                     	;# 
  1814  001D                     	;# 
  1815  001E                     	;# 
  1816  001F                     	;# 
  1817  008C                     	;# 
  1818  008C                     	;# 
  1819  008D                     	;# 
  1820  008E                     	;# 
  1821  008E                     	;# 
  1822  008F                     	;# 
  1823  0090                     	;# 
  1824  0090                     	;# 
  1825  0091                     	;# 
  1826  0093                     	;# 
  1827  0094                     	;# 
  1828  0095                     	;# 
  1829  0096                     	;# 
  1830  0097                     	;# 
  1831  0098                     	;# 
  1832  0099                     	;# 
  1833  009A                     	;# 
  1834  009B                     	;# 
  1835  009C                     	;# 
  1836  009D                     	;# 
  1837  009E                     	;# 
  1838  010C                     	;# 
  1839  010D                     	;# 
  1840  010E                     	;# 
  1841  010E                     	;# 
  1842  010F                     	;# 
  1843  0110                     	;# 
  1844  0110                     	;# 
  1845  0111                     	;# 
  1846  0112                     	;# 
  1847  0112                     	;# 
  1848  0113                     	;# 
  1849  0114                     	;# 
  1850  0114                     	;# 
  1851  0115                     	;# 
  1852  0116                     	;# 
  1853  0116                     	;# 
  1854  0117                     	;# 
  1855  0119                     	;# 
  1856  0119                     	;# 
  1857  0119                     	;# 
  1858  011A                     	;# 
  1859  011A                     	;# 
  1860  011A                     	;# 
  1861  011B                     	;# 
  1862  011B                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011C                     	;# 
  1867  011C                     	;# 
  1868  011C                     	;# 
  1869  011D                     	;# 
  1870  011D                     	;# 
  1871  011D                     	;# 
  1872  011E                     	;# 
  1873  011E                     	;# 
  1874  011E                     	;# 
  1875  011F                     	;# 
  1876  011F                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  018C                     	;# 
  1881  018D                     	;# 
  1882  018E                     	;# 
  1883  018F                     	;# 
  1884  0190                     	;# 
  1885  0191                     	;# 
  1886  0192                     	;# 
  1887  0196                     	;# 
  1888  0197                     	;# 
  1889  0198                     	;# 
  1890  0199                     	;# 
  1891  019A                     	;# 
  1892  019B                     	;# 
  1893  019C                     	;# 
  1894  020C                     	;# 
  1895  020C                     	;# 
  1896  020D                     	;# 
  1897  020E                     	;# 
  1898  020F                     	;# 
  1899  020F                     	;# 
  1900  0210                     	;# 
  1901  0210                     	;# 
  1902  0211                     	;# 
  1903  0211                     	;# 
  1904  0212                     	;# 
  1905  0212                     	;# 
  1906  0213                     	;# 
  1907  0214                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0216                     	;# 
  1911  0216                     	;# 
  1912  0217                     	;# 
  1913  0217                     	;# 
  1914  0218                     	;# 
  1915  0218                     	;# 
  1916  0219                     	;# 
  1917  021A                     	;# 
  1918  021B                     	;# 
  1919  021B                     	;# 
  1920  021C                     	;# 
  1921  021C                     	;# 
  1922  021D                     	;# 
  1923  021D                     	;# 
  1924  021E                     	;# 
  1925  021F                     	;# 
  1926  028C                     	;# 
  1927  028C                     	;# 
  1928  028D                     	;# 
  1929  028D                     	;# 
  1930  028E                     	;# 
  1931  028F                     	;# 
  1932  0290                     	;# 
  1933  0290                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0292                     	;# 
  1937  0293                     	;# 
  1938  0293                     	;# 
  1939  0294                     	;# 
  1940  0295                     	;# 
  1941  0296                     	;# 
  1942  0296                     	;# 
  1943  0297                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029C                     	;# 
  1952  029D                     	;# 
  1953  030C                     	;# 
  1954  030C                     	;# 
  1955  030D                     	;# 
  1956  030E                     	;# 
  1957  030F                     	;# 
  1958  0310                     	;# 
  1959  0310                     	;# 
  1960  0311                     	;# 
  1961  0312                     	;# 
  1962  0313                     	;# 
  1963  0314                     	;# 
  1964  0314                     	;# 
  1965  0315                     	;# 
  1966  0316                     	;# 
  1967  0317                     	;# 
  1968  0318                     	;# 
  1969  0318                     	;# 
  1970  0319                     	;# 
  1971  031A                     	;# 
  1972  031B                     	;# 
  1973  031C                     	;# 
  1974  031C                     	;# 
  1975  031D                     	;# 
  1976  031E                     	;# 
  1977  031F                     	;# 
  1978  038C                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0390                     	;# 
  1983  0390                     	;# 
  1984  0391                     	;# 
  1985  0392                     	;# 
  1986  040C                     	;# 
  1987  040D                     	;# 
  1988  040E                     	;# 
  1989  040F                     	;# 
  1990  0410                     	;# 
  1991  0411                     	;# 
  1992  0416                     	;# 
  1993  0416                     	;# 
  1994  0417                     	;# 
  1995  0418                     	;# 
  1996  0418                     	;# 
  1997  0419                     	;# 
  1998  041A                     	;# 
  1999  041A                     	;# 
  2000  041B                     	;# 
  2001  041C                     	;# 
  2002  041C                     	;# 
  2003  041D                     	;# 
  2004  041E                     	;# 
  2005  041F                     	;# 
  2006  048C                     	;# 
  2007  048C                     	;# 
  2008  048D                     	;# 
  2009  048E                     	;# 
  2010  048F                     	;# 
  2011  048F                     	;# 
  2012  0490                     	;# 
  2013  0491                     	;# 
  2014  0492                     	;# 
  2015  0492                     	;# 
  2016  0493                     	;# 
  2017  0494                     	;# 
  2018  0495                     	;# 
  2019  0495                     	;# 
  2020  0496                     	;# 
  2021  0497                     	;# 
  2022  0498                     	;# 
  2023  0499                     	;# 
  2024  049A                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  050C                     	;# 
  2029  050C                     	;# 
  2030  050D                     	;# 
  2031  050E                     	;# 
  2032  050F                     	;# 
  2033  050F                     	;# 
  2034  0510                     	;# 
  2035  0511                     	;# 
  2036  0512                     	;# 
  2037  0512                     	;# 
  2038  0513                     	;# 
  2039  0514                     	;# 
  2040  0515                     	;# 
  2041  0515                     	;# 
  2042  0516                     	;# 
  2043  0517                     	;# 
  2044  0518                     	;# 
  2045  0519                     	;# 
  2046  051A                     	;# 
  2047  051B                     	;# 
  2048  051C                     	;# 
  2049  051D                     	;# 
  2050  058C                     	;# 
  2051  058C                     	;# 
  2052  058D                     	;# 
  2053  058E                     	;# 
  2054  058F                     	;# 
  2055  058F                     	;# 
  2056  0590                     	;# 
  2057  0591                     	;# 
  2058  0592                     	;# 
  2059  0593                     	;# 
  2060  060C                     	;# 
  2061  060D                     	;# 
  2062  060E                     	;# 
  2063  060F                     	;# 
  2064  0610                     	;# 
  2065  0611                     	;# 
  2066  0612                     	;# 
  2067  0613                     	;# 
  2068  0614                     	;# 
  2069  0616                     	;# 
  2070  0617                     	;# 
  2071  0618                     	;# 
  2072  0619                     	;# 
  2073  061A                     	;# 
  2074  061B                     	;# 
  2075  061C                     	;# 
  2076  061D                     	;# 
  2077  061E                     	;# 
  2078  068C                     	;# 
  2079  068D                     	;# 
  2080  068E                     	;# 
  2081  068F                     	;# 
  2082  0690                     	;# 
  2083  0691                     	;# 
  2084  0692                     	;# 
  2085  0693                     	;# 
  2086  0694                     	;# 
  2087  070C                     	;# 
  2088  070D                     	;# 
  2089  070E                     	;# 
  2090  070F                     	;# 
  2091  0710                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  071A                     	;# 
  2101  071B                     	;# 
  2102  071C                     	;# 
  2103  071D                     	;# 
  2104  071E                     	;# 
  2105  0796                     	;# 
  2106  0797                     	;# 
  2107  0798                     	;# 
  2108  0799                     	;# 
  2109  079A                     	;# 
  2110  079B                     	;# 
  2111  080C                     	;# 
  2112  080D                     	;# 
  2113  080E                     	;# 
  2114  080F                     	;# 
  2115  0810                     	;# 
  2116  0811                     	;# 
  2117  0812                     	;# 
  2118  0813                     	;# 
  2119  0814                     	;# 
  2120  081A                     	;# 
  2121  081B                     	;# 
  2122  081C                     	;# 
  2123  081D                     	;# 
  2124  081E                     	;# 
  2125  081F                     	;# 
  2126  088C                     	;# 
  2127  088D                     	;# 
  2128  088E                     	;# 
  2129  088F                     	;# 
  2130  0890                     	;# 
  2131  0891                     	;# 
  2132  0892                     	;# 
  2133  0893                     	;# 
  2134  0895                     	;# 
  2135  0896                     	;# 
  2136  0897                     	;# 
  2137  0898                     	;# 
  2138  0899                     	;# 
  2139  089A                     	;# 
  2140  089B                     	;# 
  2141  090C                     	;# 
  2142  090E                     	;# 
  2143  090F                     	;# 
  2144  091F                     	;# 
  2145  091F                     	;# 
  2146  098F                     	;# 
  2147  098F                     	;# 
  2148  0990                     	;# 
  2149  0991                     	;# 
  2150  0992                     	;# 
  2151  0993                     	;# 
  2152  0994                     	;# 
  2153  0995                     	;# 
  2154  0996                     	;# 
  2155  0997                     	;# 
  2156  0E0F                     	;# 
  2157  0E10                     	;# 
  2158  0E11                     	;# 
  2159  0E12                     	;# 
  2160  0E13                     	;# 
  2161  0E14                     	;# 
  2162  0E15                     	;# 
  2163  0E16                     	;# 
  2164  0E17                     	;# 
  2165  0E18                     	;# 
  2166  0E19                     	;# 
  2167  0E1A                     	;# 
  2168  0E1B                     	;# 
  2169  0E1C                     	;# 
  2170  0E1D                     	;# 
  2171  0E1E                     	;# 
  2172  0E1F                     	;# 
  2173  0E20                     	;# 
  2174  0E21                     	;# 
  2175  0E22                     	;# 
  2176  0E23                     	;# 
  2177  0E24                     	;# 
  2178  0E25                     	;# 
  2179  0E26                     	;# 
  2180  0E27                     	;# 
  2181  0E28                     	;# 
  2182  0E29                     	;# 
  2183  0E2A                     	;# 
  2184  0E2B                     	;# 
  2185  0E2C                     	;# 
  2186  0E2D                     	;# 
  2187  0E2E                     	;# 
  2188  0E2F                     	;# 
  2189  0E30                     	;# 
  2190  0E31                     	;# 
  2191  0E32                     	;# 
  2192  0E33                     	;# 
  2193  0E34                     	;# 
  2194  0E35                     	;# 
  2195  0E36                     	;# 
  2196  0E37                     	;# 
  2197  0E8F                     	;# 
  2198  0E90                     	;# 
  2199  0E91                     	;# 
  2200  0E92                     	;# 
  2201  0E93                     	;# 
  2202  0E94                     	;# 
  2203  0E95                     	;# 
  2204  0E96                     	;# 
  2205  0E97                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0EA1                     	;# 
  2210  0EA2                     	;# 
  2211  0EA3                     	;# 
  2212  0EA4                     	;# 
  2213  0EA5                     	;# 
  2214  0EA9                     	;# 
  2215  0EAA                     	;# 
  2216  0EAB                     	;# 
  2217  0EAC                     	;# 
  2218  0EB1                     	;# 
  2219  0EB2                     	;# 
  2220  0EB3                     	;# 
  2221  0EB8                     	;# 
  2222  0EB9                     	;# 
  2223  0EBA                     	;# 
  2224  0EBB                     	;# 
  2225  0EBC                     	;# 
  2226  0EBD                     	;# 
  2227  0EBE                     	;# 
  2228  0EC3                     	;# 
  2229  0EC5                     	;# 
  2230  0EC6                     	;# 
  2231  0EC7                     	;# 
  2232  0EC8                     	;# 
  2233  0EC9                     	;# 
  2234  0ECA                     	;# 
  2235  0ECB                     	;# 
  2236  0ECC                     	;# 
  2237  0F10                     	;# 
  2238  0F11                     	;# 
  2239  0F12                     	;# 
  2240  0F13                     	;# 
  2241  0F14                     	;# 
  2242  0F15                     	;# 
  2243  0F16                     	;# 
  2244  0F17                     	;# 
  2245  0F18                     	;# 
  2246  0F19                     	;# 
  2247  0F1A                     	;# 
  2248  0F1B                     	;# 
  2249  0F1C                     	;# 
  2250  0F1D                     	;# 
  2251  0F1E                     	;# 
  2252  0F1F                     	;# 
  2253  0F20                     	;# 
  2254  0F21                     	;# 
  2255  0F22                     	;# 
  2256  0F23                     	;# 
  2257  0F24                     	;# 
  2258  0F25                     	;# 
  2259  0F26                     	;# 
  2260  0F27                     	;# 
  2261  0F28                     	;# 
  2262  0F29                     	;# 
  2263  0F2A                     	;# 
  2264  0F2B                     	;# 
  2265  0F2C                     	;# 
  2266  0F2D                     	;# 
  2267  0F2E                     	;# 
  2268  0F2F                     	;# 
  2269  0F30                     	;# 
  2270  0F31                     	;# 
  2271  0F32                     	;# 
  2272  0F38                     	;# 
  2273  0F39                     	;# 
  2274  0F3A                     	;# 
  2275  0F3B                     	;# 
  2276  0F3C                     	;# 
  2277  0F3D                     	;# 
  2278  0F3E                     	;# 
  2279  0F3F                     	;# 
  2280  0F40                     	;# 
  2281  0F41                     	;# 
  2282  0F43                     	;# 
  2283  0F44                     	;# 
  2284  0F45                     	;# 
  2285  0F46                     	;# 
  2286  0F47                     	;# 
  2287  0F48                     	;# 
  2288  0F49                     	;# 
  2289  0F4A                     	;# 
  2290  0F4B                     	;# 
  2291  0F4C                     	;# 
  2292  0F4E                     	;# 
  2293  0F4F                     	;# 
  2294  0F50                     	;# 
  2295  0F51                     	;# 
  2296  0F52                     	;# 
  2297  0F53                     	;# 
  2298  0F54                     	;# 
  2299  0F55                     	;# 
  2300  0F56                     	;# 
  2301  0F57                     	;# 
  2302  0F59                     	;# 
  2303  0F5A                     	;# 
  2304  0F5B                     	;# 
  2305  0F5C                     	;# 
  2306  0F5D                     	;# 
  2307  0F61                     	;# 
  2308  0F62                     	;# 
  2309  0F64                     	;# 
  2310  0F65                     	;# 
  2311  0F66                     	;# 
  2312  0F67                     	;# 
  2313  0F68                     	;# 
  2314  0F69                     	;# 
  2315  0F6A                     	;# 
  2316  0F6B                     	;# 
  2317  0F6C                     	;# 
  2318  0F6D                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  000F                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001C                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  008E                     	;# 
  2368  008F                     	;# 
  2369  0090                     	;# 
  2370  0090                     	;# 
  2371  0091                     	;# 
  2372  0093                     	;# 
  2373  0094                     	;# 
  2374  0095                     	;# 
  2375  0096                     	;# 
  2376  0097                     	;# 
  2377  0098                     	;# 
  2378  0099                     	;# 
  2379  009A                     	;# 
  2380  009B                     	;# 
  2381  009C                     	;# 
  2382  009D                     	;# 
  2383  009E                     	;# 
  2384  010C                     	;# 
  2385  010D                     	;# 
  2386  010E                     	;# 
  2387  010E                     	;# 
  2388  010F                     	;# 
  2389  0110                     	;# 
  2390  0110                     	;# 
  2391  0111                     	;# 
  2392  0112                     	;# 
  2393  0112                     	;# 
  2394  0113                     	;# 
  2395  0114                     	;# 
  2396  0114                     	;# 
  2397  0115                     	;# 
  2398  0116                     	;# 
  2399  0116                     	;# 
  2400  0117                     	;# 
  2401  0119                     	;# 
  2402  0119                     	;# 
  2403  0119                     	;# 
  2404  011A                     	;# 
  2405  011A                     	;# 
  2406  011A                     	;# 
  2407  011B                     	;# 
  2408  011B                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011C                     	;# 
  2413  011C                     	;# 
  2414  011C                     	;# 
  2415  011D                     	;# 
  2416  011D                     	;# 
  2417  011D                     	;# 
  2418  011E                     	;# 
  2419  011E                     	;# 
  2420  011E                     	;# 
  2421  011F                     	;# 
  2422  011F                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  018C                     	;# 
  2427  018D                     	;# 
  2428  018E                     	;# 
  2429  018F                     	;# 
  2430  0190                     	;# 
  2431  0191                     	;# 
  2432  0192                     	;# 
  2433  0196                     	;# 
  2434  0197                     	;# 
  2435  0198                     	;# 
  2436  0199                     	;# 
  2437  019A                     	;# 
  2438  019B                     	;# 
  2439  019C                     	;# 
  2440  020C                     	;# 
  2441  020C                     	;# 
  2442  020D                     	;# 
  2443  020E                     	;# 
  2444  020F                     	;# 
  2445  020F                     	;# 
  2446  0210                     	;# 
  2447  0210                     	;# 
  2448  0211                     	;# 
  2449  0211                     	;# 
  2450  0212                     	;# 
  2451  0212                     	;# 
  2452  0213                     	;# 
  2453  0214                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0216                     	;# 
  2457  0216                     	;# 
  2458  0217                     	;# 
  2459  0217                     	;# 
  2460  0218                     	;# 
  2461  0218                     	;# 
  2462  0219                     	;# 
  2463  021A                     	;# 
  2464  021B                     	;# 
  2465  021B                     	;# 
  2466  021C                     	;# 
  2467  021C                     	;# 
  2468  021D                     	;# 
  2469  021D                     	;# 
  2470  021E                     	;# 
  2471  021F                     	;# 
  2472  028C                     	;# 
  2473  028C                     	;# 
  2474  028D                     	;# 
  2475  028D                     	;# 
  2476  028E                     	;# 
  2477  028F                     	;# 
  2478  0290                     	;# 
  2479  0290                     	;# 
  2480  0291                     	;# 
  2481  0292                     	;# 
  2482  0292                     	;# 
  2483  0293                     	;# 
  2484  0293                     	;# 
  2485  0294                     	;# 
  2486  0295                     	;# 
  2487  0296                     	;# 
  2488  0296                     	;# 
  2489  0297                     	;# 
  2490  0298                     	;# 
  2491  0298                     	;# 
  2492  0299                     	;# 
  2493  0299                     	;# 
  2494  029A                     	;# 
  2495  029B                     	;# 
  2496  029C                     	;# 
  2497  029C                     	;# 
  2498  029D                     	;# 
  2499  030C                     	;# 
  2500  030C                     	;# 
  2501  030D                     	;# 
  2502  030E                     	;# 
  2503  030F                     	;# 
  2504  0310                     	;# 
  2505  0310                     	;# 
  2506  0311                     	;# 
  2507  0312                     	;# 
  2508  0313                     	;# 
  2509  0314                     	;# 
  2510  0314                     	;# 
  2511  0315                     	;# 
  2512  0316                     	;# 
  2513  0317                     	;# 
  2514  0318                     	;# 
  2515  0318                     	;# 
  2516  0319                     	;# 
  2517  031A                     	;# 
  2518  031B                     	;# 
  2519  031C                     	;# 
  2520  031C                     	;# 
  2521  031D                     	;# 
  2522  031E                     	;# 
  2523  031F                     	;# 
  2524  038C                     	;# 
  2525  038C                     	;# 
  2526  038D                     	;# 
  2527  038E                     	;# 
  2528  0390                     	;# 
  2529  0390                     	;# 
  2530  0391                     	;# 
  2531  0392                     	;# 
  2532  040C                     	;# 
  2533  040D                     	;# 
  2534  040E                     	;# 
  2535  040F                     	;# 
  2536  0410                     	;# 
  2537  0411                     	;# 
  2538  0416                     	;# 
  2539  0416                     	;# 
  2540  0417                     	;# 
  2541  0418                     	;# 
  2542  0418                     	;# 
  2543  0419                     	;# 
  2544  041A                     	;# 
  2545  041A                     	;# 
  2546  041B                     	;# 
  2547  041C                     	;# 
  2548  041C                     	;# 
  2549  041D                     	;# 
  2550  041E                     	;# 
  2551  041F                     	;# 
  2552  048C                     	;# 
  2553  048C                     	;# 
  2554  048D                     	;# 
  2555  048E                     	;# 
  2556  048F                     	;# 
  2557  048F                     	;# 
  2558  0490                     	;# 
  2559  0491                     	;# 
  2560  0492                     	;# 
  2561  0492                     	;# 
  2562  0493                     	;# 
  2563  0494                     	;# 
  2564  0495                     	;# 
  2565  0495                     	;# 
  2566  0496                     	;# 
  2567  0497                     	;# 
  2568  0498                     	;# 
  2569  0499                     	;# 
  2570  049A                     	;# 
  2571  049B                     	;# 
  2572  049C                     	;# 
  2573  049D                     	;# 
  2574  050C                     	;# 
  2575  050C                     	;# 
  2576  050D                     	;# 
  2577  050E                     	;# 
  2578  050F                     	;# 
  2579  050F                     	;# 
  2580  0510                     	;# 
  2581  0511                     	;# 
  2582  0512                     	;# 
  2583  0512                     	;# 
  2584  0513                     	;# 
  2585  0514                     	;# 
  2586  0515                     	;# 
  2587  0515                     	;# 
  2588  0516                     	;# 
  2589  0517                     	;# 
  2590  0518                     	;# 
  2591  0519                     	;# 
  2592  051A                     	;# 
  2593  051B                     	;# 
  2594  051C                     	;# 
  2595  051D                     	;# 
  2596  058C                     	;# 
  2597  058C                     	;# 
  2598  058D                     	;# 
  2599  058E                     	;# 
  2600  058F                     	;# 
  2601  058F                     	;# 
  2602  0590                     	;# 
  2603  0591                     	;# 
  2604  0592                     	;# 
  2605  0593                     	;# 
  2606  060C                     	;# 
  2607  060D                     	;# 
  2608  060E                     	;# 
  2609  060F                     	;# 
  2610  0610                     	;# 
  2611  0611                     	;# 
  2612  0612                     	;# 
  2613  0613                     	;# 
  2614  0614                     	;# 
  2615  0616                     	;# 
  2616  0617                     	;# 
  2617  0618                     	;# 
  2618  0619                     	;# 
  2619  061A                     	;# 
  2620  061B                     	;# 
  2621  061C                     	;# 
  2622  061D                     	;# 
  2623  061E                     	;# 
  2624  068C                     	;# 
  2625  068D                     	;# 
  2626  068E                     	;# 
  2627  068F                     	;# 
  2628  0690                     	;# 
  2629  0691                     	;# 
  2630  0692                     	;# 
  2631  0693                     	;# 
  2632  0694                     	;# 
  2633  070C                     	;# 
  2634  070D                     	;# 
  2635  070E                     	;# 
  2636  070F                     	;# 
  2637  0710                     	;# 
  2638  0711                     	;# 
  2639  0712                     	;# 
  2640  0713                     	;# 
  2641  0714                     	;# 
  2642  0716                     	;# 
  2643  0717                     	;# 
  2644  0718                     	;# 
  2645  0719                     	;# 
  2646  071A                     	;# 
  2647  071B                     	;# 
  2648  071C                     	;# 
  2649  071D                     	;# 
  2650  071E                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  080C                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  081A                     	;# 
  2667  081B                     	;# 
  2668  081C                     	;# 
  2669  081D                     	;# 
  2670  081E                     	;# 
  2671  081F                     	;# 
  2672  088C                     	;# 
  2673  088D                     	;# 
  2674  088E                     	;# 
  2675  088F                     	;# 
  2676  0890                     	;# 
  2677  0891                     	;# 
  2678  0892                     	;# 
  2679  0893                     	;# 
  2680  0895                     	;# 
  2681  0896                     	;# 
  2682  0897                     	;# 
  2683  0898                     	;# 
  2684  0899                     	;# 
  2685  089A                     	;# 
  2686  089B                     	;# 
  2687  090C                     	;# 
  2688  090E                     	;# 
  2689  090F                     	;# 
  2690  091F                     	;# 
  2691  091F                     	;# 
  2692  098F                     	;# 
  2693  098F                     	;# 
  2694  0990                     	;# 
  2695  0991                     	;# 
  2696  0992                     	;# 
  2697  0993                     	;# 
  2698  0994                     	;# 
  2699  0995                     	;# 
  2700  0996                     	;# 
  2701  0997                     	;# 
  2702  0E0F                     	;# 
  2703  0E10                     	;# 
  2704  0E11                     	;# 
  2705  0E12                     	;# 
  2706  0E13                     	;# 
  2707  0E14                     	;# 
  2708  0E15                     	;# 
  2709  0E16                     	;# 
  2710  0E17                     	;# 
  2711  0E18                     	;# 
  2712  0E19                     	;# 
  2713  0E1A                     	;# 
  2714  0E1B                     	;# 
  2715  0E1C                     	;# 
  2716  0E1D                     	;# 
  2717  0E1E                     	;# 
  2718  0E1F                     	;# 
  2719  0E20                     	;# 
  2720  0E21                     	;# 
  2721  0E22                     	;# 
  2722  0E23                     	;# 
  2723  0E24                     	;# 
  2724  0E25                     	;# 
  2725  0E26                     	;# 
  2726  0E27                     	;# 
  2727  0E28                     	;# 
  2728  0E29                     	;# 
  2729  0E2A                     	;# 
  2730  0E2B                     	;# 
  2731  0E2C                     	;# 
  2732  0E2D                     	;# 
  2733  0E2E                     	;# 
  2734  0E2F                     	;# 
  2735  0E30                     	;# 
  2736  0E31                     	;# 
  2737  0E32                     	;# 
  2738  0E33                     	;# 
  2739  0E34                     	;# 
  2740  0E35                     	;# 
  2741  0E36                     	;# 
  2742  0E37                     	;# 
  2743  0E8F                     	;# 
  2744  0E90                     	;# 
  2745  0E91                     	;# 
  2746  0E92                     	;# 
  2747  0E93                     	;# 
  2748  0E94                     	;# 
  2749  0E95                     	;# 
  2750  0E96                     	;# 
  2751  0E97                     	;# 
  2752  0E9C                     	;# 
  2753  0E9D                     	;# 
  2754  0E9E                     	;# 
  2755  0EA1                     	;# 
  2756  0EA2                     	;# 
  2757  0EA3                     	;# 
  2758  0EA4                     	;# 
  2759  0EA5                     	;# 
  2760  0EA9                     	;# 
  2761  0EAA                     	;# 
  2762  0EAB                     	;# 
  2763  0EAC                     	;# 
  2764  0EB1                     	;# 
  2765  0EB2                     	;# 
  2766  0EB3                     	;# 
  2767  0EB8                     	;# 
  2768  0EB9                     	;# 
  2769  0EBA                     	;# 
  2770  0EBB                     	;# 
  2771  0EBC                     	;# 
  2772  0EBD                     	;# 
  2773  0EBE                     	;# 
  2774  0EC3                     	;# 
  2775  0EC5                     	;# 
  2776  0EC6                     	;# 
  2777  0EC7                     	;# 
  2778  0EC8                     	;# 
  2779  0EC9                     	;# 
  2780  0ECA                     	;# 
  2781  0ECB                     	;# 
  2782  0ECC                     	;# 
  2783  0F10                     	;# 
  2784  0F11                     	;# 
  2785  0F12                     	;# 
  2786  0F13                     	;# 
  2787  0F14                     	;# 
  2788  0F15                     	;# 
  2789  0F16                     	;# 
  2790  0F17                     	;# 
  2791  0F18                     	;# 
  2792  0F19                     	;# 
  2793  0F1A                     	;# 
  2794  0F1B                     	;# 
  2795  0F1C                     	;# 
  2796  0F1D                     	;# 
  2797  0F1E                     	;# 
  2798  0F1F                     	;# 
  2799  0F20                     	;# 
  2800  0F21                     	;# 
  2801  0F22                     	;# 
  2802  0F23                     	;# 
  2803  0F24                     	;# 
  2804  0F25                     	;# 
  2805  0F26                     	;# 
  2806  0F27                     	;# 
  2807  0F28                     	;# 
  2808  0F29                     	;# 
  2809  0F2A                     	;# 
  2810  0F2B                     	;# 
  2811  0F2C                     	;# 
  2812  0F2D                     	;# 
  2813  0F2E                     	;# 
  2814  0F2F                     	;# 
  2815  0F30                     	;# 
  2816  0F31                     	;# 
  2817  0F32                     	;# 
  2818  0F38                     	;# 
  2819  0F39                     	;# 
  2820  0F3A                     	;# 
  2821  0F3B                     	;# 
  2822  0F3C                     	;# 
  2823  0F3D                     	;# 
  2824  0F3E                     	;# 
  2825  0F3F                     	;# 
  2826  0F40                     	;# 
  2827  0F41                     	;# 
  2828  0F43                     	;# 
  2829  0F44                     	;# 
  2830  0F45                     	;# 
  2831  0F46                     	;# 
  2832  0F47                     	;# 
  2833  0F48                     	;# 
  2834  0F49                     	;# 
  2835  0F4A                     	;# 
  2836  0F4B                     	;# 
  2837  0F4C                     	;# 
  2838  0F4E                     	;# 
  2839  0F4F                     	;# 
  2840  0F50                     	;# 
  2841  0F51                     	;# 
  2842  0F52                     	;# 
  2843  0F53                     	;# 
  2844  0F54                     	;# 
  2845  0F55                     	;# 
  2846  0F56                     	;# 
  2847  0F57                     	;# 
  2848  0F59                     	;# 
  2849  0F5A                     	;# 
  2850  0F5B                     	;# 
  2851  0F5C                     	;# 
  2852  0F5D                     	;# 
  2853  0F61                     	;# 
  2854  0F62                     	;# 
  2855  0F64                     	;# 
  2856  0F65                     	;# 
  2857  0F66                     	;# 
  2858  0F67                     	;# 
  2859  0F68                     	;# 
  2860  0F69                     	;# 
  2861  0F6A                     	;# 
  2862  0F6B                     	;# 
  2863  0F6C                     	;# 
  2864  0F6D                     	;# 
  2865  0FE4                     	;# 
  2866  0FE5                     	;# 
  2867  0FE6                     	;# 
  2868  0FE7                     	;# 
  2869  0FE8                     	;# 
  2870  0FE9                     	;# 
  2871  0FEA                     	;# 
  2872  0FEB                     	;# 
  2873  0FED                     	;# 
  2874  0FEE                     	;# 
  2875  0FEF                     	;# 
  2876  0000                     	;# 
  2877  0001                     	;# 
  2878  0002                     	;# 
  2879  0003                     	;# 
  2880  0004                     	;# 
  2881  0005                     	;# 
  2882  0006                     	;# 
  2883  0007                     	;# 
  2884  0008                     	;# 
  2885  0009                     	;# 
  2886  000A                     	;# 
  2887  000B                     	;# 
  2888  000C                     	;# 
  2889  000D                     	;# 
  2890  000E                     	;# 
  2891  000F                     	;# 
  2892  0010                     	;# 
  2893  0011                     	;# 
  2894  0012                     	;# 
  2895  0013                     	;# 
  2896  0014                     	;# 
  2897  0015                     	;# 
  2898  0016                     	;# 
  2899  0017                     	;# 
  2900  0018                     	;# 
  2901  0019                     	;# 
  2902  001A                     	;# 
  2903  001C                     	;# 
  2904  001C                     	;# 
  2905  001D                     	;# 
  2906  001D                     	;# 
  2907  001E                     	;# 
  2908  001F                     	;# 
  2909  008C                     	;# 
  2910  008C                     	;# 
  2911  008D                     	;# 
  2912  008E                     	;# 
  2913  008E                     	;# 
  2914  008F                     	;# 
  2915  0090                     	;# 
  2916  0090                     	;# 
  2917  0091                     	;# 
  2918  0093                     	;# 
  2919  0094                     	;# 
  2920  0095                     	;# 
  2921  0096                     	;# 
  2922  0097                     	;# 
  2923  0098                     	;# 
  2924  0099                     	;# 
  2925  009A                     	;# 
  2926  009B                     	;# 
  2927  009C                     	;# 
  2928  009D                     	;# 
  2929  009E                     	;# 
  2930  010C                     	;# 
  2931  010D                     	;# 
  2932  010E                     	;# 
  2933  010E                     	;# 
  2934  010F                     	;# 
  2935  0110                     	;# 
  2936  0110                     	;# 
  2937  0111                     	;# 
  2938  0112                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0114                     	;# 
  2943  0115                     	;# 
  2944  0116                     	;# 
  2945  0116                     	;# 
  2946  0117                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  018F                     	;# 
  2976  0190                     	;# 
  2977  0191                     	;# 
  2978  0192                     	;# 
  2979  0196                     	;# 
  2980  0197                     	;# 
  2981  0198                     	;# 
  2982  0199                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  020C                     	;# 
  2987  020C                     	;# 
  2988  020D                     	;# 
  2989  020E                     	;# 
  2990  020F                     	;# 
  2991  020F                     	;# 
  2992  0210                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0214                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0216                     	;# 
  3003  0216                     	;# 
  3004  0217                     	;# 
  3005  0217                     	;# 
  3006  0218                     	;# 
  3007  0218                     	;# 
  3008  0219                     	;# 
  3009  021A                     	;# 
  3010  021B                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028D                     	;# 
  3022  028E                     	;# 
  3023  028F                     	;# 
  3024  0290                     	;# 
  3025  0290                     	;# 
  3026  0291                     	;# 
  3027  0292                     	;# 
  3028  0292                     	;# 
  3029  0293                     	;# 
  3030  0293                     	;# 
  3031  0294                     	;# 
  3032  0295                     	;# 
  3033  0296                     	;# 
  3034  0296                     	;# 
  3035  0297                     	;# 
  3036  0298                     	;# 
  3037  0298                     	;# 
  3038  0299                     	;# 
  3039  0299                     	;# 
  3040  029A                     	;# 
  3041  029B                     	;# 
  3042  029C                     	;# 
  3043  029C                     	;# 
  3044  029D                     	;# 
  3045  030C                     	;# 
  3046  030C                     	;# 
  3047  030D                     	;# 
  3048  030E                     	;# 
  3049  030F                     	;# 
  3050  0310                     	;# 
  3051  0310                     	;# 
  3052  0311                     	;# 
  3053  0312                     	;# 
  3054  0313                     	;# 
  3055  0314                     	;# 
  3056  0314                     	;# 
  3057  0315                     	;# 
  3058  0316                     	;# 
  3059  0317                     	;# 
  3060  0318                     	;# 
  3061  0318                     	;# 
  3062  0319                     	;# 
  3063  031A                     	;# 
  3064  031B                     	;# 
  3065  031C                     	;# 
  3066  031C                     	;# 
  3067  031D                     	;# 
  3068  031E                     	;# 
  3069  031F                     	;# 
  3070  038C                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0390                     	;# 
  3075  0390                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  040C                     	;# 
  3079  040D                     	;# 
  3080  040E                     	;# 
  3081  040F                     	;# 
  3082  0410                     	;# 
  3083  0411                     	;# 
  3084  0416                     	;# 
  3085  0416                     	;# 
  3086  0417                     	;# 
  3087  0418                     	;# 
  3088  0418                     	;# 
  3089  0419                     	;# 
  3090  041A                     	;# 
  3091  041A                     	;# 
  3092  041B                     	;# 
  3093  041C                     	;# 
  3094  041C                     	;# 
  3095  041D                     	;# 
  3096  041E                     	;# 
  3097  041F                     	;# 
  3098  048C                     	;# 
  3099  048C                     	;# 
  3100  048D                     	;# 
  3101  048E                     	;# 
  3102  048F                     	;# 
  3103  048F                     	;# 
  3104  0490                     	;# 
  3105  0491                     	;# 
  3106  0492                     	;# 
  3107  0492                     	;# 
  3108  0493                     	;# 
  3109  0494                     	;# 
  3110  0495                     	;# 
  3111  0495                     	;# 
  3112  0496                     	;# 
  3113  0497                     	;# 
  3114  0498                     	;# 
  3115  0499                     	;# 
  3116  049A                     	;# 
  3117  049B                     	;# 
  3118  049C                     	;# 
  3119  049D                     	;# 
  3120  050C                     	;# 
  3121  050C                     	;# 
  3122  050D                     	;# 
  3123  050E                     	;# 
  3124  050F                     	;# 
  3125  050F                     	;# 
  3126  0510                     	;# 
  3127  0511                     	;# 
  3128  0512                     	;# 
  3129  0512                     	;# 
  3130  0513                     	;# 
  3131  0514                     	;# 
  3132  0515                     	;# 
  3133  0515                     	;# 
  3134  0516                     	;# 
  3135  0517                     	;# 
  3136  0518                     	;# 
  3137  0519                     	;# 
  3138  051A                     	;# 
  3139  051B                     	;# 
  3140  051C                     	;# 
  3141  051D                     	;# 
  3142  058C                     	;# 
  3143  058C                     	;# 
  3144  058D                     	;# 
  3145  058E                     	;# 
  3146  058F                     	;# 
  3147  058F                     	;# 
  3148  0590                     	;# 
  3149  0591                     	;# 
  3150  0592                     	;# 
  3151  0593                     	;# 
  3152  060C                     	;# 
  3153  060D                     	;# 
  3154  060E                     	;# 
  3155  060F                     	;# 
  3156  0610                     	;# 
  3157  0611                     	;# 
  3158  0612                     	;# 
  3159  0613                     	;# 
  3160  0614                     	;# 
  3161  0616                     	;# 
  3162  0617                     	;# 
  3163  0618                     	;# 
  3164  0619                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  061D                     	;# 
  3169  061E                     	;# 
  3170  068C                     	;# 
  3171  068D                     	;# 
  3172  068E                     	;# 
  3173  068F                     	;# 
  3174  0690                     	;# 
  3175  0691                     	;# 
  3176  0692                     	;# 
  3177  0693                     	;# 
  3178  0694                     	;# 
  3179  070C                     	;# 
  3180  070D                     	;# 
  3181  070E                     	;# 
  3182  070F                     	;# 
  3183  0710                     	;# 
  3184  0711                     	;# 
  3185  0712                     	;# 
  3186  0713                     	;# 
  3187  0714                     	;# 
  3188  0716                     	;# 
  3189  0717                     	;# 
  3190  0718                     	;# 
  3191  0719                     	;# 
  3192  071A                     	;# 
  3193  071B                     	;# 
  3194  071C                     	;# 
  3195  071D                     	;# 
  3196  071E                     	;# 
  3197  0796                     	;# 
  3198  0797                     	;# 
  3199  0798                     	;# 
  3200  0799                     	;# 
  3201  079A                     	;# 
  3202  079B                     	;# 
  3203  080C                     	;# 
  3204  080D                     	;# 
  3205  080E                     	;# 
  3206  080F                     	;# 
  3207  0810                     	;# 
  3208  0811                     	;# 
  3209  0812                     	;# 
  3210  0813                     	;# 
  3211  0814                     	;# 
  3212  081A                     	;# 
  3213  081B                     	;# 
  3214  081C                     	;# 
  3215  081D                     	;# 
  3216  081E                     	;# 
  3217  081F                     	;# 
  3218  088C                     	;# 
  3219  088D                     	;# 
  3220  088E                     	;# 
  3221  088F                     	;# 
  3222  0890                     	;# 
  3223  0891                     	;# 
  3224  0892                     	;# 
  3225  0893                     	;# 
  3226  0895                     	;# 
  3227  0896                     	;# 
  3228  0897                     	;# 
  3229  0898                     	;# 
  3230  0899                     	;# 
  3231  089A                     	;# 
  3232  089B                     	;# 
  3233  090C                     	;# 
  3234  090E                     	;# 
  3235  090F                     	;# 
  3236  091F                     	;# 
  3237  091F                     	;# 
  3238  098F                     	;# 
  3239  098F                     	;# 
  3240  0990                     	;# 
  3241  0991                     	;# 
  3242  0992                     	;# 
  3243  0993                     	;# 
  3244  0994                     	;# 
  3245  0995                     	;# 
  3246  0996                     	;# 
  3247  0997                     	;# 
  3248  0E0F                     	;# 
  3249  0E10                     	;# 
  3250  0E11                     	;# 
  3251  0E12                     	;# 
  3252  0E13                     	;# 
  3253  0E14                     	;# 
  3254  0E15                     	;# 
  3255  0E16                     	;# 
  3256  0E17                     	;# 
  3257  0E18                     	;# 
  3258  0E19                     	;# 
  3259  0E1A                     	;# 
  3260  0E1B                     	;# 
  3261  0E1C                     	;# 
  3262  0E1D                     	;# 
  3263  0E1E                     	;# 
  3264  0E1F                     	;# 
  3265  0E20                     	;# 
  3266  0E21                     	;# 
  3267  0E22                     	;# 
  3268  0E23                     	;# 
  3269  0E24                     	;# 
  3270  0E25                     	;# 
  3271  0E26                     	;# 
  3272  0E27                     	;# 
  3273  0E28                     	;# 
  3274  0E29                     	;# 
  3275  0E2A                     	;# 
  3276  0E2B                     	;# 
  3277  0E2C                     	;# 
  3278  0E2D                     	;# 
  3279  0E2E                     	;# 
  3280  0E2F                     	;# 
  3281  0E30                     	;# 
  3282  0E31                     	;# 
  3283  0E32                     	;# 
  3284  0E33                     	;# 
  3285  0E34                     	;# 
  3286  0E35                     	;# 
  3287  0E36                     	;# 
  3288  0E37                     	;# 
  3289  0E8F                     	;# 
  3290  0E90                     	;# 
  3291  0E91                     	;# 
  3292  0E92                     	;# 
  3293  0E93                     	;# 
  3294  0E94                     	;# 
  3295  0E95                     	;# 
  3296  0E96                     	;# 
  3297  0E97                     	;# 
  3298  0E9C                     	;# 
  3299  0E9D                     	;# 
  3300  0E9E                     	;# 
  3301  0EA1                     	;# 
  3302  0EA2                     	;# 
  3303  0EA3                     	;# 
  3304  0EA4                     	;# 
  3305  0EA5                     	;# 
  3306  0EA9                     	;# 
  3307  0EAA                     	;# 
  3308  0EAB                     	;# 
  3309  0EAC                     	;# 
  3310  0EB1                     	;# 
  3311  0EB2                     	;# 
  3312  0EB3                     	;# 
  3313  0EB8                     	;# 
  3314  0EB9                     	;# 
  3315  0EBA                     	;# 
  3316  0EBB                     	;# 
  3317  0EBC                     	;# 
  3318  0EBD                     	;# 
  3319  0EBE                     	;# 
  3320  0EC3                     	;# 
  3321  0EC5                     	;# 
  3322  0EC6                     	;# 
  3323  0EC7                     	;# 
  3324  0EC8                     	;# 
  3325  0EC9                     	;# 
  3326  0ECA                     	;# 
  3327  0ECB                     	;# 
  3328  0ECC                     	;# 
  3329  0F10                     	;# 
  3330  0F11                     	;# 
  3331  0F12                     	;# 
  3332  0F13                     	;# 
  3333  0F14                     	;# 
  3334  0F15                     	;# 
  3335  0F16                     	;# 
  3336  0F17                     	;# 
  3337  0F18                     	;# 
  3338  0F19                     	;# 
  3339  0F1A                     	;# 
  3340  0F1B                     	;# 
  3341  0F1C                     	;# 
  3342  0F1D                     	;# 
  3343  0F1E                     	;# 
  3344  0F1F                     	;# 
  3345  0F20                     	;# 
  3346  0F21                     	;# 
  3347  0F22                     	;# 
  3348  0F23                     	;# 
  3349  0F24                     	;# 
  3350  0F25                     	;# 
  3351  0F26                     	;# 
  3352  0F27                     	;# 
  3353  0F28                     	;# 
  3354  0F29                     	;# 
  3355  0F2A                     	;# 
  3356  0F2B                     	;# 
  3357  0F2C                     	;# 
  3358  0F2D                     	;# 
  3359  0F2E                     	;# 
  3360  0F2F                     	;# 
  3361  0F30                     	;# 
  3362  0F31                     	;# 
  3363  0F32                     	;# 
  3364  0F38                     	;# 
  3365  0F39                     	;# 
  3366  0F3A                     	;# 
  3367  0F3B                     	;# 
  3368  0F3C                     	;# 
  3369  0F3D                     	;# 
  3370  0F3E                     	;# 
  3371  0F3F                     	;# 
  3372  0F40                     	;# 
  3373  0F41                     	;# 
  3374  0F43                     	;# 
  3375  0F44                     	;# 
  3376  0F45                     	;# 
  3377  0F46                     	;# 
  3378  0F47                     	;# 
  3379  0F48                     	;# 
  3380  0F49                     	;# 
  3381  0F4A                     	;# 
  3382  0F4B                     	;# 
  3383  0F4C                     	;# 
  3384  0F4E                     	;# 
  3385  0F4F                     	;# 
  3386  0F50                     	;# 
  3387  0F51                     	;# 
  3388  0F52                     	;# 
  3389  0F53                     	;# 
  3390  0F54                     	;# 
  3391  0F55                     	;# 
  3392  0F56                     	;# 
  3393  0F57                     	;# 
  3394  0F59                     	;# 
  3395  0F5A                     	;# 
  3396  0F5B                     	;# 
  3397  0F5C                     	;# 
  3398  0F5D                     	;# 
  3399  0F61                     	;# 
  3400  0F62                     	;# 
  3401  0F64                     	;# 
  3402  0F65                     	;# 
  3403  0F66                     	;# 
  3404  0F67                     	;# 
  3405  0F68                     	;# 
  3406  0F69                     	;# 
  3407  0F6A                     	;# 
  3408  0F6B                     	;# 
  3409  0F6C                     	;# 
  3410  0F6D                     	;# 
  3411  0FE4                     	;# 
  3412  0FE5                     	;# 
  3413  0FE6                     	;# 
  3414  0FE7                     	;# 
  3415  0FE8                     	;# 
  3416  0FE9                     	;# 
  3417  0FEA                     	;# 
  3418  0FEB                     	;# 
  3419  0FED                     	;# 
  3420  0FEE                     	;# 
  3421  0FEF                     	;# 
  3422  0000                     	;# 
  3423  0001                     	;# 
  3424  0002                     	;# 
  3425  0003                     	;# 
  3426  0004                     	;# 
  3427  0005                     	;# 
  3428  0006                     	;# 
  3429  0007                     	;# 
  3430  0008                     	;# 
  3431  0009                     	;# 
  3432  000A                     	;# 
  3433  000B                     	;# 
  3434  000C                     	;# 
  3435  000D                     	;# 
  3436  000E                     	;# 
  3437  000F                     	;# 
  3438  0010                     	;# 
  3439  0011                     	;# 
  3440  0012                     	;# 
  3441  0013                     	;# 
  3442  0014                     	;# 
  3443  0015                     	;# 
  3444  0016                     	;# 
  3445  0017                     	;# 
  3446  0018                     	;# 
  3447  0019                     	;# 
  3448  001A                     	;# 
  3449  001C                     	;# 
  3450  001C                     	;# 
  3451  001D                     	;# 
  3452  001D                     	;# 
  3453  001E                     	;# 
  3454  001F                     	;# 
  3455  008C                     	;# 
  3456  008C                     	;# 
  3457  008D                     	;# 
  3458  008E                     	;# 
  3459  008E                     	;# 
  3460  008F                     	;# 
  3461  0090                     	;# 
  3462  0090                     	;# 
  3463  0091                     	;# 
  3464  0093                     	;# 
  3465  0094                     	;# 
  3466  0095                     	;# 
  3467  0096                     	;# 
  3468  0097                     	;# 
  3469  0098                     	;# 
  3470  0099                     	;# 
  3471  009A                     	;# 
  3472  009B                     	;# 
  3473  009C                     	;# 
  3474  009D                     	;# 
  3475  009E                     	;# 
  3476  010C                     	;# 
  3477  010D                     	;# 
  3478  010E                     	;# 
  3479  010E                     	;# 
  3480  010F                     	;# 
  3481  0110                     	;# 
  3482  0110                     	;# 
  3483  0111                     	;# 
  3484  0112                     	;# 
  3485  0112                     	;# 
  3486  0113                     	;# 
  3487  0114                     	;# 
  3488  0114                     	;# 
  3489  0115                     	;# 
  3490  0116                     	;# 
  3491  0116                     	;# 
  3492  0117                     	;# 
  3493  0119                     	;# 
  3494  0119                     	;# 
  3495  0119                     	;# 
  3496  011A                     	;# 
  3497  011A                     	;# 
  3498  011A                     	;# 
  3499  011B                     	;# 
  3500  011B                     	;# 
  3501  011B                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011C                     	;# 
  3505  011C                     	;# 
  3506  011C                     	;# 
  3507  011D                     	;# 
  3508  011D                     	;# 
  3509  011D                     	;# 
  3510  011E                     	;# 
  3511  011E                     	;# 
  3512  011E                     	;# 
  3513  011F                     	;# 
  3514  011F                     	;# 
  3515  011F                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  018C                     	;# 
  3519  018D                     	;# 
  3520  018E                     	;# 
  3521  018F                     	;# 
  3522  0190                     	;# 
  3523  0191                     	;# 
  3524  0192                     	;# 
  3525  0196                     	;# 
  3526  0197                     	;# 
  3527  0198                     	;# 
  3528  0199                     	;# 
  3529  019A                     	;# 
  3530  019B                     	;# 
  3531  019C                     	;# 
  3532  020C                     	;# 
  3533  020C                     	;# 
  3534  020D                     	;# 
  3535  020E                     	;# 
  3536  020F                     	;# 
  3537  020F                     	;# 
  3538  0210                     	;# 
  3539  0210                     	;# 
  3540  0211                     	;# 
  3541  0211                     	;# 
  3542  0212                     	;# 
  3543  0212                     	;# 
  3544  0213                     	;# 
  3545  0214                     	;# 
  3546  0215                     	;# 
  3547  0215                     	;# 
  3548  0216                     	;# 
  3549  0216                     	;# 
  3550  0217                     	;# 
  3551  0217                     	;# 
  3552  0218                     	;# 
  3553  0218                     	;# 
  3554  0219                     	;# 
  3555  021A                     	;# 
  3556  021B                     	;# 
  3557  021B                     	;# 
  3558  021C                     	;# 
  3559  021C                     	;# 
  3560  021D                     	;# 
  3561  021D                     	;# 
  3562  021E                     	;# 
  3563  021F                     	;# 
  3564  028C                     	;# 
  3565  028C                     	;# 
  3566  028D                     	;# 
  3567  028D                     	;# 
  3568  028E                     	;# 
  3569  028F                     	;# 
  3570  0290                     	;# 
  3571  0290                     	;# 
  3572  0291                     	;# 
  3573  0292                     	;# 
  3574  0292                     	;# 
  3575  0293                     	;# 
  3576  0293                     	;# 
  3577  0294                     	;# 
  3578  0295                     	;# 
  3579  0296                     	;# 
  3580  0296                     	;# 
  3581  0297                     	;# 
  3582  0298                     	;# 
  3583  0298                     	;# 
  3584  0299                     	;# 
  3585  0299                     	;# 
  3586  029A                     	;# 
  3587  029B                     	;# 
  3588  029C                     	;# 
  3589  029C                     	;# 
  3590  029D                     	;# 
  3591  030C                     	;# 
  3592  030C                     	;# 
  3593  030D                     	;# 
  3594  030E                     	;# 
  3595  030F                     	;# 
  3596  0310                     	;# 
  3597  0310                     	;# 
  3598  0311                     	;# 
  3599  0312                     	;# 
  3600  0313                     	;# 
  3601  0314                     	;# 
  3602  0314                     	;# 
  3603  0315                     	;# 
  3604  0316                     	;# 
  3605  0317                     	;# 
  3606  0318                     	;# 
  3607  0318                     	;# 
  3608  0319                     	;# 
  3609  031A                     	;# 
  3610  031B                     	;# 
  3611  031C                     	;# 
  3612  031C                     	;# 
  3613  031D                     	;# 
  3614  031E                     	;# 
  3615  031F                     	;# 
  3616  038C                     	;# 
  3617  038C                     	;# 
  3618  038D                     	;# 
  3619  038E                     	;# 
  3620  0390                     	;# 
  3621  0390                     	;# 
  3622  0391                     	;# 
  3623  0392                     	;# 
  3624  040C                     	;# 
  3625  040D                     	;# 
  3626  040E                     	;# 
  3627  040F                     	;# 
  3628  0410                     	;# 
  3629  0411                     	;# 
  3630  0416                     	;# 
  3631  0416                     	;# 
  3632  0417                     	;# 
  3633  0418                     	;# 
  3634  0418                     	;# 
  3635  0419                     	;# 
  3636  041A                     	;# 
  3637  041A                     	;# 
  3638  041B                     	;# 
  3639  041C                     	;# 
  3640  041C                     	;# 
  3641  041D                     	;# 
  3642  041E                     	;# 
  3643  041F                     	;# 
  3644  048C                     	;# 
  3645  048C                     	;# 
  3646  048D                     	;# 
  3647  048E                     	;# 
  3648  048F                     	;# 
  3649  048F                     	;# 
  3650  0490                     	;# 
  3651  0491                     	;# 
  3652  0492                     	;# 
  3653  0492                     	;# 
  3654  0493                     	;# 
  3655  0494                     	;# 
  3656  0495                     	;# 
  3657  0495                     	;# 
  3658  0496                     	;# 
  3659  0497                     	;# 
  3660  0498                     	;# 
  3661  0499                     	;# 
  3662  049A                     	;# 
  3663  049B                     	;# 
  3664  049C                     	;# 
  3665  049D                     	;# 
  3666  050C                     	;# 
  3667  050C                     	;# 
  3668  050D                     	;# 
  3669  050E                     	;# 
  3670  050F                     	;# 
  3671  050F                     	;# 
  3672  0510                     	;# 
  3673  0511                     	;# 
  3674  0512                     	;# 
  3675  0512                     	;# 
  3676  0513                     	;# 
  3677  0514                     	;# 
  3678  0515                     	;# 
  3679  0515                     	;# 
  3680  0516                     	;# 
  3681  0517                     	;# 
  3682  0518                     	;# 
  3683  0519                     	;# 
  3684  051A                     	;# 
  3685  051B                     	;# 
  3686  051C                     	;# 
  3687  051D                     	;# 
  3688  058C                     	;# 
  3689  058C                     	;# 
  3690  058D                     	;# 
  3691  058E                     	;# 
  3692  058F                     	;# 
  3693  058F                     	;# 
  3694  0590                     	;# 
  3695  0591                     	;# 
  3696  0592                     	;# 
  3697  0593                     	;# 
  3698  060C                     	;# 
  3699  060D                     	;# 
  3700  060E                     	;# 
  3701  060F                     	;# 
  3702  0610                     	;# 
  3703  0611                     	;# 
  3704  0612                     	;# 
  3705  0613                     	;# 
  3706  0614                     	;# 
  3707  0616                     	;# 
  3708  0617                     	;# 
  3709  0618                     	;# 
  3710  0619                     	;# 
  3711  061A                     	;# 
  3712  061B                     	;# 
  3713  061C                     	;# 
  3714  061D                     	;# 
  3715  061E                     	;# 
  3716  068C                     	;# 
  3717  068D                     	;# 
  3718  068E                     	;# 
  3719  068F                     	;# 
  3720  0690                     	;# 
  3721  0691                     	;# 
  3722  0692                     	;# 
  3723  0693                     	;# 
  3724  0694                     	;# 
  3725  070C                     	;# 
  3726  070D                     	;# 
  3727  070E                     	;# 
  3728  070F                     	;# 
  3729  0710                     	;# 
  3730  0711                     	;# 
  3731  0712                     	;# 
  3732  0713                     	;# 
  3733  0714                     	;# 
  3734  0716                     	;# 
  3735  0717                     	;# 
  3736  0718                     	;# 
  3737  0719                     	;# 
  3738  071A                     	;# 
  3739  071B                     	;# 
  3740  071C                     	;# 
  3741  071D                     	;# 
  3742  071E                     	;# 
  3743  0796                     	;# 
  3744  0797                     	;# 
  3745  0798                     	;# 
  3746  0799                     	;# 
  3747  079A                     	;# 
  3748  079B                     	;# 
  3749  080C                     	;# 
  3750  080D                     	;# 
  3751  080E                     	;# 
  3752  080F                     	;# 
  3753  0810                     	;# 
  3754  0811                     	;# 
  3755  0812                     	;# 
  3756  0813                     	;# 
  3757  0814                     	;# 
  3758  081A                     	;# 
  3759  081B                     	;# 
  3760  081C                     	;# 
  3761  081D                     	;# 
  3762  081E                     	;# 
  3763  081F                     	;# 
  3764  088C                     	;# 
  3765  088D                     	;# 
  3766  088E                     	;# 
  3767  088F                     	;# 
  3768  0890                     	;# 
  3769  0891                     	;# 
  3770  0892                     	;# 
  3771  0893                     	;# 
  3772  0895                     	;# 
  3773  0896                     	;# 
  3774  0897                     	;# 
  3775  0898                     	;# 
  3776  0899                     	;# 
  3777  089A                     	;# 
  3778  089B                     	;# 
  3779  090C                     	;# 
  3780  090E                     	;# 
  3781  090F                     	;# 
  3782  091F                     	;# 
  3783  091F                     	;# 
  3784  098F                     	;# 
  3785  098F                     	;# 
  3786  0990                     	;# 
  3787  0991                     	;# 
  3788  0992                     	;# 
  3789  0993                     	;# 
  3790  0994                     	;# 
  3791  0995                     	;# 
  3792  0996                     	;# 
  3793  0997                     	;# 
  3794  0E0F                     	;# 
  3795  0E10                     	;# 
  3796  0E11                     	;# 
  3797  0E12                     	;# 
  3798  0E13                     	;# 
  3799  0E14                     	;# 
  3800  0E15                     	;# 
  3801  0E16                     	;# 
  3802  0E17                     	;# 
  3803  0E18                     	;# 
  3804  0E19                     	;# 
  3805  0E1A                     	;# 
  3806  0E1B                     	;# 
  3807  0E1C                     	;# 
  3808  0E1D                     	;# 
  3809  0E1E                     	;# 
  3810  0E1F                     	;# 
  3811  0E20                     	;# 
  3812  0E21                     	;# 
  3813  0E22                     	;# 
  3814  0E23                     	;# 
  3815  0E24                     	;# 
  3816  0E25                     	;# 
  3817  0E26                     	;# 
  3818  0E27                     	;# 
  3819  0E28                     	;# 
  3820  0E29                     	;# 
  3821  0E2A                     	;# 
  3822  0E2B                     	;# 
  3823  0E2C                     	;# 
  3824  0E2D                     	;# 
  3825  0E2E                     	;# 
  3826  0E2F                     	;# 
  3827  0E30                     	;# 
  3828  0E31                     	;# 
  3829  0E32                     	;# 
  3830  0E33                     	;# 
  3831  0E34                     	;# 
  3832  0E35                     	;# 
  3833  0E36                     	;# 
  3834  0E37                     	;# 
  3835  0E8F                     	;# 
  3836  0E90                     	;# 
  3837  0E91                     	;# 
  3838  0E92                     	;# 
  3839  0E93                     	;# 
  3840  0E94                     	;# 
  3841  0E95                     	;# 
  3842  0E96                     	;# 
  3843  0E97                     	;# 
  3844  0E9C                     	;# 
  3845  0E9D                     	;# 
  3846  0E9E                     	;# 
  3847  0EA1                     	;# 
  3848  0EA2                     	;# 
  3849  0EA3                     	;# 
  3850  0EA4                     	;# 
  3851  0EA5                     	;# 
  3852  0EA9                     	;# 
  3853  0EAA                     	;# 
  3854  0EAB                     	;# 
  3855  0EAC                     	;# 
  3856  0EB1                     	;# 
  3857  0EB2                     	;# 
  3858  0EB3                     	;# 
  3859  0EB8                     	;# 
  3860  0EB9                     	;# 
  3861  0EBA                     	;# 
  3862  0EBB                     	;# 
  3863  0EBC                     	;# 
  3864  0EBD                     	;# 
  3865  0EBE                     	;# 
  3866  0EC3                     	;# 
  3867  0EC5                     	;# 
  3868  0EC6                     	;# 
  3869  0EC7                     	;# 
  3870  0EC8                     	;# 
  3871  0EC9                     	;# 
  3872  0ECA                     	;# 
  3873  0ECB                     	;# 
  3874  0ECC                     	;# 
  3875  0F10                     	;# 
  3876  0F11                     	;# 
  3877  0F12                     	;# 
  3878  0F13                     	;# 
  3879  0F14                     	;# 
  3880  0F15                     	;# 
  3881  0F16                     	;# 
  3882  0F17                     	;# 
  3883  0F18                     	;# 
  3884  0F19                     	;# 
  3885  0F1A                     	;# 
  3886  0F1B                     	;# 
  3887  0F1C                     	;# 
  3888  0F1D                     	;# 
  3889  0F1E                     	;# 
  3890  0F1F                     	;# 
  3891  0F20                     	;# 
  3892  0F21                     	;# 
  3893  0F22                     	;# 
  3894  0F23                     	;# 
  3895  0F24                     	;# 
  3896  0F25                     	;# 
  3897  0F26                     	;# 
  3898  0F27                     	;# 
  3899  0F28                     	;# 
  3900  0F29                     	;# 
  3901  0F2A                     	;# 
  3902  0F2B                     	;# 
  3903  0F2C                     	;# 
  3904  0F2D                     	;# 
  3905  0F2E                     	;# 
  3906  0F2F                     	;# 
  3907  0F30                     	;# 
  3908  0F31                     	;# 
  3909  0F32                     	;# 
  3910  0F38                     	;# 
  3911  0F39                     	;# 
  3912  0F3A                     	;# 
  3913  0F3B                     	;# 
  3914  0F3C                     	;# 
  3915  0F3D                     	;# 
  3916  0F3E                     	;# 
  3917  0F3F                     	;# 
  3918  0F40                     	;# 
  3919  0F41                     	;# 
  3920  0F43                     	;# 
  3921  0F44                     	;# 
  3922  0F45                     	;# 
  3923  0F46                     	;# 
  3924  0F47                     	;# 
  3925  0F48                     	;# 
  3926  0F49                     	;# 
  3927  0F4A                     	;# 
  3928  0F4B                     	;# 
  3929  0F4C                     	;# 
  3930  0F4E                     	;# 
  3931  0F4F                     	;# 
  3932  0F50                     	;# 
  3933  0F51                     	;# 
  3934  0F52                     	;# 
  3935  0F53                     	;# 
  3936  0F54                     	;# 
  3937  0F55                     	;# 
  3938  0F56                     	;# 
  3939  0F57                     	;# 
  3940  0F59                     	;# 
  3941  0F5A                     	;# 
  3942  0F5B                     	;# 
  3943  0F5C                     	;# 
  3944  0F5D                     	;# 
  3945  0F61                     	;# 
  3946  0F62                     	;# 
  3947  0F64                     	;# 
  3948  0F65                     	;# 
  3949  0F66                     	;# 
  3950  0F67                     	;# 
  3951  0F68                     	;# 
  3952  0F69                     	;# 
  3953  0F6A                     	;# 
  3954  0F6B                     	;# 
  3955  0F6C                     	;# 
  3956  0F6D                     	;# 
  3957  0FE4                     	;# 
  3958  0FE5                     	;# 
  3959  0FE6                     	;# 
  3960  0FE7                     	;# 
  3961  0FE8                     	;# 
  3962  0FE9                     	;# 
  3963  0FEA                     	;# 
  3964  0FEB                     	;# 
  3965  0FED                     	;# 
  3966  0FEE                     	;# 
  3967  0FEF                     	;# 
  3968  0000                     	;# 
  3969  0001                     	;# 
  3970  0002                     	;# 
  3971  0003                     	;# 
  3972  0004                     	;# 
  3973  0005                     	;# 
  3974  0006                     	;# 
  3975  0007                     	;# 
  3976  0008                     	;# 
  3977  0009                     	;# 
  3978  000A                     	;# 
  3979  000B                     	;# 
  3980  000C                     	;# 
  3981  000D                     	;# 
  3982  000E                     	;# 
  3983  000F                     	;# 
  3984  0010                     	;# 
  3985  0011                     	;# 
  3986  0012                     	;# 
  3987  0013                     	;# 
  3988  0014                     	;# 
  3989  0015                     	;# 
  3990  0016                     	;# 
  3991  0017                     	;# 
  3992  0018                     	;# 
  3993  0019                     	;# 
  3994  001A                     	;# 
  3995  001C                     	;# 
  3996  001C                     	;# 
  3997  001D                     	;# 
  3998  001D                     	;# 
  3999  001E                     	;# 
  4000  001F                     	;# 
  4001  008C                     	;# 
  4002  008C                     	;# 
  4003  008D                     	;# 
  4004  008E                     	;# 
  4005  008E                     	;# 
  4006  008F                     	;# 
  4007  0090                     	;# 
  4008  0090                     	;# 
  4009  0091                     	;# 
  4010  0093                     	;# 
  4011  0094                     	;# 
  4012  0095                     	;# 
  4013  0096                     	;# 
  4014  0097                     	;# 
  4015  0098                     	;# 
  4016  0099                     	;# 
  4017  009A                     	;# 
  4018  009B                     	;# 
  4019  009C                     	;# 
  4020  009D                     	;# 
  4021  009E                     	;# 
  4022  010C                     	;# 
  4023  010D                     	;# 
  4024  010E                     	;# 
  4025  010E                     	;# 
  4026  010F                     	;# 
  4027  0110                     	;# 
  4028  0110                     	;# 
  4029  0111                     	;# 
  4030  0112                     	;# 
  4031  0112                     	;# 
  4032  0113                     	;# 
  4033  0114                     	;# 
  4034  0114                     	;# 
  4035  0115                     	;# 
  4036  0116                     	;# 
  4037  0116                     	;# 
  4038  0117                     	;# 
  4039  0119                     	;# 
  4040  0119                     	;# 
  4041  0119                     	;# 
  4042  011A                     	;# 
  4043  011A                     	;# 
  4044  011A                     	;# 
  4045  011B                     	;# 
  4046  011B                     	;# 
  4047  011B                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011C                     	;# 
  4051  011C                     	;# 
  4052  011C                     	;# 
  4053  011D                     	;# 
  4054  011D                     	;# 
  4055  011D                     	;# 
  4056  011E                     	;# 
  4057  011E                     	;# 
  4058  011E                     	;# 
  4059  011F                     	;# 
  4060  011F                     	;# 
  4061  011F                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  018C                     	;# 
  4065  018D                     	;# 
  4066  018E                     	;# 
  4067  018F                     	;# 
  4068  0190                     	;# 
  4069  0191                     	;# 
  4070  0192                     	;# 
  4071  0196                     	;# 
  4072  0197                     	;# 
  4073  0198                     	;# 
  4074  0199                     	;# 
  4075  019A                     	;# 
  4076  019B                     	;# 
  4077  019C                     	;# 
  4078  020C                     	;# 
  4079  020C                     	;# 
  4080  020D                     	;# 
  4081  020E                     	;# 
  4082  020F                     	;# 
  4083  020F                     	;# 
  4084  0210                     	;# 
  4085  0210                     	;# 
  4086  0211                     	;# 
  4087  0211                     	;# 
  4088  0212                     	;# 
  4089  0212                     	;# 
  4090  0213                     	;# 
  4091  0214                     	;# 
  4092  0215                     	;# 
  4093  0215                     	;# 
  4094  0216                     	;# 
  4095  0216                     	;# 
  4096  0217                     	;# 
  4097  0217                     	;# 
  4098  0218                     	;# 
  4099  0218                     	;# 
  4100  0219                     	;# 
  4101  021A                     	;# 
  4102  021B                     	;# 
  4103  021B                     	;# 
  4104  021C                     	;# 
  4105  021C                     	;# 
  4106  021D                     	;# 
  4107  021D                     	;# 
  4108  021E                     	;# 
  4109  021F                     	;# 
  4110  028C                     	;# 
  4111  028C                     	;# 
  4112  028D                     	;# 
  4113  028D                     	;# 
  4114  028E                     	;# 
  4115  028F                     	;# 
  4116  0290                     	;# 
  4117  0290                     	;# 
  4118  0291                     	;# 
  4119  0292                     	;# 
  4120  0292                     	;# 
  4121  0293                     	;# 
  4122  0293                     	;# 
  4123  0294                     	;# 
  4124  0295                     	;# 
  4125  0296                     	;# 
  4126  0296                     	;# 
  4127  0297                     	;# 
  4128  0298                     	;# 
  4129  0298                     	;# 
  4130  0299                     	;# 
  4131  0299                     	;# 
  4132  029A                     	;# 
  4133  029B                     	;# 
  4134  029C                     	;# 
  4135  029C                     	;# 
  4136  029D                     	;# 
  4137  030C                     	;# 
  4138  030C                     	;# 
  4139  030D                     	;# 
  4140  030E                     	;# 
  4141  030F                     	;# 
  4142  0310                     	;# 
  4143  0310                     	;# 
  4144  0311                     	;# 
  4145  0312                     	;# 
  4146  0313                     	;# 
  4147  0314                     	;# 
  4148  0314                     	;# 
  4149  0315                     	;# 
  4150  0316                     	;# 
  4151  0317                     	;# 
  4152  0318                     	;# 
  4153  0318                     	;# 
  4154  0319                     	;# 
  4155  031A                     	;# 
  4156  031B                     	;# 
  4157  031C                     	;# 
  4158  031C                     	;# 
  4159  031D                     	;# 
  4160  031E                     	;# 
  4161  031F                     	;# 
  4162  038C                     	;# 
  4163  038C                     	;# 
  4164  038D                     	;# 
  4165  038E                     	;# 
  4166  0390                     	;# 
  4167  0390                     	;# 
  4168  0391                     	;# 
  4169  0392                     	;# 
  4170  040C                     	;# 
  4171  040D                     	;# 
  4172  040E                     	;# 
  4173  040F                     	;# 
  4174  0410                     	;# 
  4175  0411                     	;# 
  4176  0416                     	;# 
  4177  0416                     	;# 
  4178  0417                     	;# 
  4179  0418                     	;# 
  4180  0418                     	;# 
  4181  0419                     	;# 
  4182  041A                     	;# 
  4183  041A                     	;# 
  4184  041B                     	;# 
  4185  041C                     	;# 
  4186  041C                     	;# 
  4187  041D                     	;# 
  4188  041E                     	;# 
  4189  041F                     	;# 
  4190  048C                     	;# 
  4191  048C                     	;# 
  4192  048D                     	;# 
  4193  048E                     	;# 
  4194  048F                     	;# 
  4195  048F                     	;# 
  4196  0490                     	;# 
  4197  0491                     	;# 
  4198  0492                     	;# 
  4199  0492                     	;# 
  4200  0493                     	;# 
  4201  0494                     	;# 
  4202  0495                     	;# 
  4203  0495                     	;# 
  4204  0496                     	;# 
  4205  0497                     	;# 
  4206  0498                     	;# 
  4207  0499                     	;# 
  4208  049A                     	;# 
  4209  049B                     	;# 
  4210  049C                     	;# 
  4211  049D                     	;# 
  4212  050C                     	;# 
  4213  050C                     	;# 
  4214  050D                     	;# 
  4215  050E                     	;# 
  4216  050F                     	;# 
  4217  050F                     	;# 
  4218  0510                     	;# 
  4219  0511                     	;# 
  4220  0512                     	;# 
  4221  0512                     	;# 
  4222  0513                     	;# 
  4223  0514                     	;# 
  4224  0515                     	;# 
  4225  0515                     	;# 
  4226  0516                     	;# 
  4227  0517                     	;# 
  4228  0518                     	;# 
  4229  0519                     	;# 
  4230  051A                     	;# 
  4231  051B                     	;# 
  4232  051C                     	;# 
  4233  051D                     	;# 
  4234  058C                     	;# 
  4235  058C                     	;# 
  4236  058D                     	;# 
  4237  058E                     	;# 
  4238  058F                     	;# 
  4239  058F                     	;# 
  4240  0590                     	;# 
  4241  0591                     	;# 
  4242  0592                     	;# 
  4243  0593                     	;# 
  4244  060C                     	;# 
  4245  060D                     	;# 
  4246  060E                     	;# 
  4247  060F                     	;# 
  4248  0610                     	;# 
  4249  0611                     	;# 
  4250  0612                     	;# 
  4251  0613                     	;# 
  4252  0614                     	;# 
  4253  0616                     	;# 
  4254  0617                     	;# 
  4255  0618                     	;# 
  4256  0619                     	;# 
  4257  061A                     	;# 
  4258  061B                     	;# 
  4259  061C                     	;# 
  4260  061D                     	;# 
  4261  061E                     	;# 
  4262  068C                     	;# 
  4263  068D                     	;# 
  4264  068E                     	;# 
  4265  068F                     	;# 
  4266  0690                     	;# 
  4267  0691                     	;# 
  4268  0692                     	;# 
  4269  0693                     	;# 
  4270  0694                     	;# 
  4271  070C                     	;# 
  4272  070D                     	;# 
  4273  070E                     	;# 
  4274  070F                     	;# 
  4275  0710                     	;# 
  4276  0711                     	;# 
  4277  0712                     	;# 
  4278  0713                     	;# 
  4279  0714                     	;# 
  4280  0716                     	;# 
  4281  0717                     	;# 
  4282  0718                     	;# 
  4283  0719                     	;# 
  4284  071A                     	;# 
  4285  071B                     	;# 
  4286  071C                     	;# 
  4287  071D                     	;# 
  4288  071E                     	;# 
  4289  0796                     	;# 
  4290  0797                     	;# 
  4291  0798                     	;# 
  4292  0799                     	;# 
  4293  079A                     	;# 
  4294  079B                     	;# 
  4295  080C                     	;# 
  4296  080D                     	;# 
  4297  080E                     	;# 
  4298  080F                     	;# 
  4299  0810                     	;# 
  4300  0811                     	;# 
  4301  0812                     	;# 
  4302  0813                     	;# 
  4303  0814                     	;# 
  4304  081A                     	;# 
  4305  081B                     	;# 
  4306  081C                     	;# 
  4307  081D                     	;# 
  4308  081E                     	;# 
  4309  081F                     	;# 
  4310  088C                     	;# 
  4311  088D                     	;# 
  4312  088E                     	;# 
  4313  088F                     	;# 
  4314  0890                     	;# 
  4315  0891                     	;# 
  4316  0892                     	;# 
  4317  0893                     	;# 
  4318  0895                     	;# 
  4319  0896                     	;# 
  4320  0897                     	;# 
  4321  0898                     	;# 
  4322  0899                     	;# 
  4323  089A                     	;# 
  4324  089B                     	;# 
  4325  090C                     	;# 
  4326  090E                     	;# 
  4327  090F                     	;# 
  4328  091F                     	;# 
  4329  091F                     	;# 
  4330  098F                     	;# 
  4331  098F                     	;# 
  4332  0990                     	;# 
  4333  0991                     	;# 
  4334  0992                     	;# 
  4335  0993                     	;# 
  4336  0994                     	;# 
  4337  0995                     	;# 
  4338  0996                     	;# 
  4339  0997                     	;# 
  4340  0E0F                     	;# 
  4341  0E10                     	;# 
  4342  0E11                     	;# 
  4343  0E12                     	;# 
  4344  0E13                     	;# 
  4345  0E14                     	;# 
  4346  0E15                     	;# 
  4347  0E16                     	;# 
  4348  0E17                     	;# 
  4349  0E18                     	;# 
  4350  0E19                     	;# 
  4351  0E1A                     	;# 
  4352  0E1B                     	;# 
  4353  0E1C                     	;# 
  4354  0E1D                     	;# 
  4355  0E1E                     	;# 
  4356  0E1F                     	;# 
  4357  0E20                     	;# 
  4358  0E21                     	;# 
  4359  0E22                     	;# 
  4360  0E23                     	;# 
  4361  0E24                     	;# 
  4362  0E25                     	;# 
  4363  0E26                     	;# 
  4364  0E27                     	;# 
  4365  0E28                     	;# 
  4366  0E29                     	;# 
  4367  0E2A                     	;# 
  4368  0E2B                     	;# 
  4369  0E2C                     	;# 
  4370  0E2D                     	;# 
  4371  0E2E                     	;# 
  4372  0E2F                     	;# 
  4373  0E30                     	;# 
  4374  0E31                     	;# 
  4375  0E32                     	;# 
  4376  0E33                     	;# 
  4377  0E34                     	;# 
  4378  0E35                     	;# 
  4379  0E36                     	;# 
  4380  0E37                     	;# 
  4381  0E8F                     	;# 
  4382  0E90                     	;# 
  4383  0E91                     	;# 
  4384  0E92                     	;# 
  4385  0E93                     	;# 
  4386  0E94                     	;# 
  4387  0E95                     	;# 
  4388  0E96                     	;# 
  4389  0E97                     	;# 
  4390  0E9C                     	;# 
  4391  0E9D                     	;# 
  4392  0E9E                     	;# 
  4393  0EA1                     	;# 
  4394  0EA2                     	;# 
  4395  0EA3                     	;# 
  4396  0EA4                     	;# 
  4397  0EA5                     	;# 
  4398  0EA9                     	;# 
  4399  0EAA                     	;# 
  4400  0EAB                     	;# 
  4401  0EAC                     	;# 
  4402  0EB1                     	;# 
  4403  0EB2                     	;# 
  4404  0EB3                     	;# 
  4405  0EB8                     	;# 
  4406  0EB9                     	;# 
  4407  0EBA                     	;# 
  4408  0EBB                     	;# 
  4409  0EBC                     	;# 
  4410  0EBD                     	;# 
  4411  0EBE                     	;# 
  4412  0EC3                     	;# 
  4413  0EC5                     	;# 
  4414  0EC6                     	;# 
  4415  0EC7                     	;# 
  4416  0EC8                     	;# 
  4417  0EC9                     	;# 
  4418  0ECA                     	;# 
  4419  0ECB                     	;# 
  4420  0ECC                     	;# 
  4421  0F10                     	;# 
  4422  0F11                     	;# 
  4423  0F12                     	;# 
  4424  0F13                     	;# 
  4425  0F14                     	;# 
  4426  0F15                     	;# 
  4427  0F16                     	;# 
  4428  0F17                     	;# 
  4429  0F18                     	;# 
  4430  0F19                     	;# 
  4431  0F1A                     	;# 
  4432  0F1B                     	;# 
  4433  0F1C                     	;# 
  4434  0F1D                     	;# 
  4435  0F1E                     	;# 
  4436  0F1F                     	;# 
  4437  0F20                     	;# 
  4438  0F21                     	;# 
  4439  0F22                     	;# 
  4440  0F23                     	;# 
  4441  0F24                     	;# 
  4442  0F25                     	;# 
  4443  0F26                     	;# 
  4444  0F27                     	;# 
  4445  0F28                     	;# 
  4446  0F29                     	;# 
  4447  0F2A                     	;# 
  4448  0F2B                     	;# 
  4449  0F2C                     	;# 
  4450  0F2D                     	;# 
  4451  0F2E                     	;# 
  4452  0F2F                     	;# 
  4453  0F30                     	;# 
  4454  0F31                     	;# 
  4455  0F32                     	;# 
  4456  0F38                     	;# 
  4457  0F39                     	;# 
  4458  0F3A                     	;# 
  4459  0F3B                     	;# 
  4460  0F3C                     	;# 
  4461  0F3D                     	;# 
  4462  0F3E                     	;# 
  4463  0F3F                     	;# 
  4464  0F40                     	;# 
  4465  0F41                     	;# 
  4466  0F43                     	;# 
  4467  0F44                     	;# 
  4468  0F45                     	;# 
  4469  0F46                     	;# 
  4470  0F47                     	;# 
  4471  0F48                     	;# 
  4472  0F49                     	;# 
  4473  0F4A                     	;# 
  4474  0F4B                     	;# 
  4475  0F4C                     	;# 
  4476  0F4E                     	;# 
  4477  0F4F                     	;# 
  4478  0F50                     	;# 
  4479  0F51                     	;# 
  4480  0F52                     	;# 
  4481  0F53                     	;# 
  4482  0F54                     	;# 
  4483  0F55                     	;# 
  4484  0F56                     	;# 
  4485  0F57                     	;# 
  4486  0F59                     	;# 
  4487  0F5A                     	;# 
  4488  0F5B                     	;# 
  4489  0F5C                     	;# 
  4490  0F5D                     	;# 
  4491  0F61                     	;# 
  4492  0F62                     	;# 
  4493  0F64                     	;# 
  4494  0F65                     	;# 
  4495  0F66                     	;# 
  4496  0F67                     	;# 
  4497  0F68                     	;# 
  4498  0F69                     	;# 
  4499  0F6A                     	;# 
  4500  0F6B                     	;# 
  4501  0F6C                     	;# 
  4502  0F6D                     	;# 
  4503  0FE4                     	;# 
  4504  0FE5                     	;# 
  4505  0FE6                     	;# 
  4506  0FE7                     	;# 
  4507  0FE8                     	;# 
  4508  0FE9                     	;# 
  4509  0FEA                     	;# 
  4510  0FEB                     	;# 
  4511  0FED                     	;# 
  4512  0FEE                     	;# 
  4513  0FEF                     	;# 
  4514  0000                     	;# 
  4515  0001                     	;# 
  4516  0002                     	;# 
  4517  0003                     	;# 
  4518  0004                     	;# 
  4519  0005                     	;# 
  4520  0006                     	;# 
  4521  0007                     	;# 
  4522  0008                     	;# 
  4523  0009                     	;# 
  4524  000A                     	;# 
  4525  000B                     	;# 
  4526  000C                     	;# 
  4527  000D                     	;# 
  4528  000E                     	;# 
  4529  000F                     	;# 
  4530  0010                     	;# 
  4531  0011                     	;# 
  4532  0012                     	;# 
  4533  0013                     	;# 
  4534  0014                     	;# 
  4535  0015                     	;# 
  4536  0016                     	;# 
  4537  0017                     	;# 
  4538  0018                     	;# 
  4539  0019                     	;# 
  4540  001A                     	;# 
  4541  001C                     	;# 
  4542  001C                     	;# 
  4543  001D                     	;# 
  4544  001D                     	;# 
  4545  001E                     	;# 
  4546  001F                     	;# 
  4547  008C                     	;# 
  4548  008C                     	;# 
  4549  008D                     	;# 
  4550  008E                     	;# 
  4551  008E                     	;# 
  4552  008F                     	;# 
  4553  0090                     	;# 
  4554  0090                     	;# 
  4555  0091                     	;# 
  4556  0093                     	;# 
  4557  0094                     	;# 
  4558  0095                     	;# 
  4559  0096                     	;# 
  4560  0097                     	;# 
  4561  0098                     	;# 
  4562  0099                     	;# 
  4563  009A                     	;# 
  4564  009B                     	;# 
  4565  009C                     	;# 
  4566  009D                     	;# 
  4567  009E                     	;# 
  4568  010C                     	;# 
  4569  010D                     	;# 
  4570  010E                     	;# 
  4571  010E                     	;# 
  4572  010F                     	;# 
  4573  0110                     	;# 
  4574  0110                     	;# 
  4575  0111                     	;# 
  4576  0112                     	;# 
  4577  0112                     	;# 
  4578  0113                     	;# 
  4579  0114                     	;# 
  4580  0114                     	;# 
  4581  0115                     	;# 
  4582  0116                     	;# 
  4583  0116                     	;# 
  4584  0117                     	;# 
  4585  0119                     	;# 
  4586  0119                     	;# 
  4587  0119                     	;# 
  4588  011A                     	;# 
  4589  011A                     	;# 
  4590  011A                     	;# 
  4591  011B                     	;# 
  4592  011B                     	;# 
  4593  011B                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011C                     	;# 
  4597  011C                     	;# 
  4598  011C                     	;# 
  4599  011D                     	;# 
  4600  011D                     	;# 
  4601  011D                     	;# 
  4602  011E                     	;# 
  4603  011E                     	;# 
  4604  011E                     	;# 
  4605  011F                     	;# 
  4606  011F                     	;# 
  4607  011F                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  018C                     	;# 
  4611  018D                     	;# 
  4612  018E                     	;# 
  4613  018F                     	;# 
  4614  0190                     	;# 
  4615  0191                     	;# 
  4616  0192                     	;# 
  4617  0196                     	;# 
  4618  0197                     	;# 
  4619  0198                     	;# 
  4620  0199                     	;# 
  4621  019A                     	;# 
  4622  019B                     	;# 
  4623  019C                     	;# 
  4624  020C                     	;# 
  4625  020C                     	;# 
  4626  020D                     	;# 
  4627  020E                     	;# 
  4628  020F                     	;# 
  4629  020F                     	;# 
  4630  0210                     	;# 
  4631  0210                     	;# 
  4632  0211                     	;# 
  4633  0211                     	;# 
  4634  0212                     	;# 
  4635  0212                     	;# 
  4636  0213                     	;# 
  4637  0214                     	;# 
  4638  0215                     	;# 
  4639  0215                     	;# 
  4640  0216                     	;# 
  4641  0216                     	;# 
  4642  0217                     	;# 
  4643  0217                     	;# 
  4644  0218                     	;# 
  4645  0218                     	;# 
  4646  0219                     	;# 
  4647  021A                     	;# 
  4648  021B                     	;# 
  4649  021B                     	;# 
  4650  021C                     	;# 
  4651  021C                     	;# 
  4652  021D                     	;# 
  4653  021D                     	;# 
  4654  021E                     	;# 
  4655  021F                     	;# 
  4656  028C                     	;# 
  4657  028C                     	;# 
  4658  028D                     	;# 
  4659  028D                     	;# 
  4660  028E                     	;# 
  4661  028F                     	;# 
  4662  0290                     	;# 
  4663  0290                     	;# 
  4664  0291                     	;# 
  4665  0292                     	;# 
  4666  0292                     	;# 
  4667  0293                     	;# 
  4668  0293                     	;# 
  4669  0294                     	;# 
  4670  0295                     	;# 
  4671  0296                     	;# 
  4672  0296                     	;# 
  4673  0297                     	;# 
  4674  0298                     	;# 
  4675  0298                     	;# 
  4676  0299                     	;# 
  4677  0299                     	;# 
  4678  029A                     	;# 
  4679  029B                     	;# 
  4680  029C                     	;# 
  4681  029C                     	;# 
  4682  029D                     	;# 
  4683  030C                     	;# 
  4684  030C                     	;# 
  4685  030D                     	;# 
  4686  030E                     	;# 
  4687  030F                     	;# 
  4688  0310                     	;# 
  4689  0310                     	;# 
  4690  0311                     	;# 
  4691  0312                     	;# 
  4692  0313                     	;# 
  4693  0314                     	;# 
  4694  0314                     	;# 
  4695  0315                     	;# 
  4696  0316                     	;# 
  4697  0317                     	;# 
  4698  0318                     	;# 
  4699  0318                     	;# 
  4700  0319                     	;# 
  4701  031A                     	;# 
  4702  031B                     	;# 
  4703  031C                     	;# 
  4704  031C                     	;# 
  4705  031D                     	;# 
  4706  031E                     	;# 
  4707  031F                     	;# 
  4708  038C                     	;# 
  4709  038C                     	;# 
  4710  038D                     	;# 
  4711  038E                     	;# 
  4712  0390                     	;# 
  4713  0390                     	;# 
  4714  0391                     	;# 
  4715  0392                     	;# 
  4716  040C                     	;# 
  4717  040D                     	;# 
  4718  040E                     	;# 
  4719  040F                     	;# 
  4720  0410                     	;# 
  4721  0411                     	;# 
  4722  0416                     	;# 
  4723  0416                     	;# 
  4724  0417                     	;# 
  4725  0418                     	;# 
  4726  0418                     	;# 
  4727  0419                     	;# 
  4728  041A                     	;# 
  4729  041A                     	;# 
  4730  041B                     	;# 
  4731  041C                     	;# 
  4732  041C                     	;# 
  4733  041D                     	;# 
  4734  041E                     	;# 
  4735  041F                     	;# 
  4736  048C                     	;# 
  4737  048C                     	;# 
  4738  048D                     	;# 
  4739  048E                     	;# 
  4740  048F                     	;# 
  4741  048F                     	;# 
  4742  0490                     	;# 
  4743  0491                     	;# 
  4744  0492                     	;# 
  4745  0492                     	;# 
  4746  0493                     	;# 
  4747  0494                     	;# 
  4748  0495                     	;# 
  4749  0495                     	;# 
  4750  0496                     	;# 
  4751  0497                     	;# 
  4752  0498                     	;# 
  4753  0499                     	;# 
  4754  049A                     	;# 
  4755  049B                     	;# 
  4756  049C                     	;# 
  4757  049D                     	;# 
  4758  050C                     	;# 
  4759  050C                     	;# 
  4760  050D                     	;# 
  4761  050E                     	;# 
  4762  050F                     	;# 
  4763  050F                     	;# 
  4764  0510                     	;# 
  4765  0511                     	;# 
  4766  0512                     	;# 
  4767  0512                     	;# 
  4768  0513                     	;# 
  4769  0514                     	;# 
  4770  0515                     	;# 
  4771  0515                     	;# 
  4772  0516                     	;# 
  4773  0517                     	;# 
  4774  0518                     	;# 
  4775  0519                     	;# 
  4776  051A                     	;# 
  4777  051B                     	;# 
  4778  051C                     	;# 
  4779  051D                     	;# 
  4780  058C                     	;# 
  4781  058C                     	;# 
  4782  058D                     	;# 
  4783  058E                     	;# 
  4784  058F                     	;# 
  4785  058F                     	;# 
  4786  0590                     	;# 
  4787  0591                     	;# 
  4788  0592                     	;# 
  4789  0593                     	;# 
  4790  060C                     	;# 
  4791  060D                     	;# 
  4792  060E                     	;# 
  4793  060F                     	;# 
  4794  0610                     	;# 
  4795  0611                     	;# 
  4796  0612                     	;# 
  4797  0613                     	;# 
  4798  0614                     	;# 
  4799  0616                     	;# 
  4800  0617                     	;# 
  4801  0618                     	;# 
  4802  0619                     	;# 
  4803  061A                     	;# 
  4804  061B                     	;# 
  4805  061C                     	;# 
  4806  061D                     	;# 
  4807  061E                     	;# 
  4808  068C                     	;# 
  4809  068D                     	;# 
  4810  068E                     	;# 
  4811  068F                     	;# 
  4812  0690                     	;# 
  4813  0691                     	;# 
  4814  0692                     	;# 
  4815  0693                     	;# 
  4816  0694                     	;# 
  4817  070C                     	;# 
  4818  070D                     	;# 
  4819  070E                     	;# 
  4820  070F                     	;# 
  4821  0710                     	;# 
  4822  0711                     	;# 
  4823  0712                     	;# 
  4824  0713                     	;# 
  4825  0714                     	;# 
  4826  0716                     	;# 
  4827  0717                     	;# 
  4828  0718                     	;# 
  4829  0719                     	;# 
  4830  071A                     	;# 
  4831  071B                     	;# 
  4832  071C                     	;# 
  4833  071D                     	;# 
  4834  071E                     	;# 
  4835  0796                     	;# 
  4836  0797                     	;# 
  4837  0798                     	;# 
  4838  0799                     	;# 
  4839  079A                     	;# 
  4840  079B                     	;# 
  4841  080C                     	;# 
  4842  080D                     	;# 
  4843  080E                     	;# 
  4844  080F                     	;# 
  4845  0810                     	;# 
  4846  0811                     	;# 
  4847  0812                     	;# 
  4848  0813                     	;# 
  4849  0814                     	;# 
  4850  081A                     	;# 
  4851  081B                     	;# 
  4852  081C                     	;# 
  4853  081D                     	;# 
  4854  081E                     	;# 
  4855  081F                     	;# 
  4856  088C                     	;# 
  4857  088D                     	;# 
  4858  088E                     	;# 
  4859  088F                     	;# 
  4860  0890                     	;# 
  4861  0891                     	;# 
  4862  0892                     	;# 
  4863  0893                     	;# 
  4864  0895                     	;# 
  4865  0896                     	;# 
  4866  0897                     	;# 
  4867  0898                     	;# 
  4868  0899                     	;# 
  4869  089A                     	;# 
  4870  089B                     	;# 
  4871  090C                     	;# 
  4872  090E                     	;# 
  4873  090F                     	;# 
  4874  091F                     	;# 
  4875  091F                     	;# 
  4876  098F                     	;# 
  4877  098F                     	;# 
  4878  0990                     	;# 
  4879  0991                     	;# 
  4880  0992                     	;# 
  4881  0993                     	;# 
  4882  0994                     	;# 
  4883  0995                     	;# 
  4884  0996                     	;# 
  4885  0997                     	;# 
  4886  0E0F                     	;# 
  4887  0E10                     	;# 
  4888  0E11                     	;# 
  4889  0E12                     	;# 
  4890  0E13                     	;# 
  4891  0E14                     	;# 
  4892  0E15                     	;# 
  4893  0E16                     	;# 
  4894  0E17                     	;# 
  4895  0E18                     	;# 
  4896  0E19                     	;# 
  4897  0E1A                     	;# 
  4898  0E1B                     	;# 
  4899  0E1C                     	;# 
  4900  0E1D                     	;# 
  4901  0E1E                     	;# 
  4902  0E1F                     	;# 
  4903  0E20                     	;# 
  4904  0E21                     	;# 
  4905  0E22                     	;# 
  4906  0E23                     	;# 
  4907  0E24                     	;# 
  4908  0E25                     	;# 
  4909  0E26                     	;# 
  4910  0E27                     	;# 
  4911  0E28                     	;# 
  4912  0E29                     	;# 
  4913  0E2A                     	;# 
  4914  0E2B                     	;# 
  4915  0E2C                     	;# 
  4916  0E2D                     	;# 
  4917  0E2E                     	;# 
  4918  0E2F                     	;# 
  4919  0E30                     	;# 
  4920  0E31                     	;# 
  4921  0E32                     	;# 
  4922  0E33                     	;# 
  4923  0E34                     	;# 
  4924  0E35                     	;# 
  4925  0E36                     	;# 
  4926  0E37                     	;# 
  4927  0E8F                     	;# 
  4928  0E90                     	;# 
  4929  0E91                     	;# 
  4930  0E92                     	;# 
  4931  0E93                     	;# 
  4932  0E94                     	;# 
  4933  0E95                     	;# 
  4934  0E96                     	;# 
  4935  0E97                     	;# 
  4936  0E9C                     	;# 
  4937  0E9D                     	;# 
  4938  0E9E                     	;# 
  4939  0EA1                     	;# 
  4940  0EA2                     	;# 
  4941  0EA3                     	;# 
  4942  0EA4                     	;# 
  4943  0EA5                     	;# 
  4944  0EA9                     	;# 
  4945  0EAA                     	;# 
  4946  0EAB                     	;# 
  4947  0EAC                     	;# 
  4948  0EB1                     	;# 
  4949  0EB2                     	;# 
  4950  0EB3                     	;# 
  4951  0EB8                     	;# 
  4952  0EB9                     	;# 
  4953  0EBA                     	;# 
  4954  0EBB                     	;# 
  4955  0EBC                     	;# 
  4956  0EBD                     	;# 
  4957  0EBE                     	;# 
  4958  0EC3                     	;# 
  4959  0EC5                     	;# 
  4960  0EC6                     	;# 
  4961  0EC7                     	;# 
  4962  0EC8                     	;# 
  4963  0EC9                     	;# 
  4964  0ECA                     	;# 
  4965  0ECB                     	;# 
  4966  0ECC                     	;# 
  4967  0F10                     	;# 
  4968  0F11                     	;# 
  4969  0F12                     	;# 
  4970  0F13                     	;# 
  4971  0F14                     	;# 
  4972  0F15                     	;# 
  4973  0F16                     	;# 
  4974  0F17                     	;# 
  4975  0F18                     	;# 
  4976  0F19                     	;# 
  4977  0F1A                     	;# 
  4978  0F1B                     	;# 
  4979  0F1C                     	;# 
  4980  0F1D                     	;# 
  4981  0F1E                     	;# 
  4982  0F1F                     	;# 
  4983  0F20                     	;# 
  4984  0F21                     	;# 
  4985  0F22                     	;# 
  4986  0F23                     	;# 
  4987  0F24                     	;# 
  4988  0F25                     	;# 
  4989  0F26                     	;# 
  4990  0F27                     	;# 
  4991  0F28                     	;# 
  4992  0F29                     	;# 
  4993  0F2A                     	;# 
  4994  0F2B                     	;# 
  4995  0F2C                     	;# 
  4996  0F2D                     	;# 
  4997  0F2E                     	;# 
  4998  0F2F                     	;# 
  4999  0F30                     	;# 
  5000  0F31                     	;# 
  5001  0F32                     	;# 
  5002  0F38                     	;# 
  5003  0F39                     	;# 
  5004  0F3A                     	;# 
  5005  0F3B                     	;# 
  5006  0F3C                     	;# 
  5007  0F3D                     	;# 
  5008  0F3E                     	;# 
  5009  0F3F                     	;# 
  5010  0F40                     	;# 
  5011  0F41                     	;# 
  5012  0F43                     	;# 
  5013  0F44                     	;# 
  5014  0F45                     	;# 
  5015  0F46                     	;# 
  5016  0F47                     	;# 
  5017  0F48                     	;# 
  5018  0F49                     	;# 
  5019  0F4A                     	;# 
  5020  0F4B                     	;# 
  5021  0F4C                     	;# 
  5022  0F4E                     	;# 
  5023  0F4F                     	;# 
  5024  0F50                     	;# 
  5025  0F51                     	;# 
  5026  0F52                     	;# 
  5027  0F53                     	;# 
  5028  0F54                     	;# 
  5029  0F55                     	;# 
  5030  0F56                     	;# 
  5031  0F57                     	;# 
  5032  0F59                     	;# 
  5033  0F5A                     	;# 
  5034  0F5B                     	;# 
  5035  0F5C                     	;# 
  5036  0F5D                     	;# 
  5037  0F61                     	;# 
  5038  0F62                     	;# 
  5039  0F64                     	;# 
  5040  0F65                     	;# 
  5041  0F66                     	;# 
  5042  0F67                     	;# 
  5043  0F68                     	;# 
  5044  0F69                     	;# 
  5045  0F6A                     	;# 
  5046  0F6B                     	;# 
  5047  0F6C                     	;# 
  5048  0F6D                     	;# 
  5049  0FE4                     	;# 
  5050  0FE5                     	;# 
  5051  0FE6                     	;# 
  5052  0FE7                     	;# 
  5053  0FE8                     	;# 
  5054  0FE9                     	;# 
  5055  0FEA                     	;# 
  5056  0FEB                     	;# 
  5057  0FED                     	;# 
  5058  0FEE                     	;# 
  5059  0FEF                     	;# 
  5060  0000                     	;# 
  5061  0001                     	;# 
  5062  0002                     	;# 
  5063  0003                     	;# 
  5064  0004                     	;# 
  5065  0005                     	;# 
  5066  0006                     	;# 
  5067  0007                     	;# 
  5068  0008                     	;# 
  5069  0009                     	;# 
  5070  000A                     	;# 
  5071  000B                     	;# 
  5072  000C                     	;# 
  5073  000D                     	;# 
  5074  000E                     	;# 
  5075  000F                     	;# 
  5076  0010                     	;# 
  5077  0011                     	;# 
  5078  0012                     	;# 
  5079  0013                     	;# 
  5080  0014                     	;# 
  5081  0015                     	;# 
  5082  0016                     	;# 
  5083  0017                     	;# 
  5084  0018                     	;# 
  5085  0019                     	;# 
  5086  001A                     	;# 
  5087  001C                     	;# 
  5088  001C                     	;# 
  5089  001D                     	;# 
  5090  001D                     	;# 
  5091  001E                     	;# 
  5092  001F                     	;# 
  5093  008C                     	;# 
  5094  008C                     	;# 
  5095  008D                     	;# 
  5096  008E                     	;# 
  5097  008E                     	;# 
  5098  008F                     	;# 
  5099  0090                     	;# 
  5100  0090                     	;# 
  5101  0091                     	;# 
  5102  0093                     	;# 
  5103  0094                     	;# 
  5104  0095                     	;# 
  5105  0096                     	;# 
  5106  0097                     	;# 
  5107  0098                     	;# 
  5108  0099                     	;# 
  5109  009A                     	;# 
  5110  009B                     	;# 
  5111  009C                     	;# 
  5112  009D                     	;# 
  5113  009E                     	;# 
  5114  010C                     	;# 
  5115  010D                     	;# 
  5116  010E                     	;# 
  5117  010E                     	;# 
  5118  010F                     	;# 
  5119  0110                     	;# 
  5120  0110                     	;# 
  5121  0111                     	;# 
  5122  0112                     	;# 
  5123  0112                     	;# 
  5124  0113                     	;# 
  5125  0114                     	;# 
  5126  0114                     	;# 
  5127  0115                     	;# 
  5128  0116                     	;# 
  5129  0116                     	;# 
  5130  0117                     	;# 
  5131  0119                     	;# 
  5132  0119                     	;# 
  5133  0119                     	;# 
  5134  011A                     	;# 
  5135  011A                     	;# 
  5136  011A                     	;# 
  5137  011B                     	;# 
  5138  011B                     	;# 
  5139  011B                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011C                     	;# 
  5143  011C                     	;# 
  5144  011C                     	;# 
  5145  011D                     	;# 
  5146  011D                     	;# 
  5147  011D                     	;# 
  5148  011E                     	;# 
  5149  011E                     	;# 
  5150  011E                     	;# 
  5151  011F                     	;# 
  5152  011F                     	;# 
  5153  011F                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  018C                     	;# 
  5157  018D                     	;# 
  5158  018E                     	;# 
  5159  018F                     	;# 
  5160  0190                     	;# 
  5161  0191                     	;# 
  5162  0192                     	;# 
  5163  0196                     	;# 
  5164  0197                     	;# 
  5165  0198                     	;# 
  5166  0199                     	;# 
  5167  019A                     	;# 
  5168  019B                     	;# 
  5169  019C                     	;# 
  5170  020C                     	;# 
  5171  020C                     	;# 
  5172  020D                     	;# 
  5173  020E                     	;# 
  5174  020F                     	;# 
  5175  020F                     	;# 
  5176  0210                     	;# 
  5177  0210                     	;# 
  5178  0211                     	;# 
  5179  0211                     	;# 
  5180  0212                     	;# 
  5181  0212                     	;# 
  5182  0213                     	;# 
  5183  0214                     	;# 
  5184  0215                     	;# 
  5185  0215                     	;# 
  5186  0216                     	;# 
  5187  0216                     	;# 
  5188  0217                     	;# 
  5189  0217                     	;# 
  5190  0218                     	;# 
  5191  0218                     	;# 
  5192  0219                     	;# 
  5193  021A                     	;# 
  5194  021B                     	;# 
  5195  021B                     	;# 
  5196  021C                     	;# 
  5197  021C                     	;# 
  5198  021D                     	;# 
  5199  021D                     	;# 
  5200  021E                     	;# 
  5201  021F                     	;# 
  5202  028C                     	;# 
  5203  028C                     	;# 
  5204  028D                     	;# 
  5205  028D                     	;# 
  5206  028E                     	;# 
  5207  028F                     	;# 
  5208  0290                     	;# 
  5209  0290                     	;# 
  5210  0291                     	;# 
  5211  0292                     	;# 
  5212  0292                     	;# 
  5213  0293                     	;# 
  5214  0293                     	;# 
  5215  0294                     	;# 
  5216  0295                     	;# 
  5217  0296                     	;# 
  5218  0296                     	;# 
  5219  0297                     	;# 
  5220  0298                     	;# 
  5221  0298                     	;# 
  5222  0299                     	;# 
  5223  0299                     	;# 
  5224  029A                     	;# 
  5225  029B                     	;# 
  5226  029C                     	;# 
  5227  029C                     	;# 
  5228  029D                     	;# 
  5229  030C                     	;# 
  5230  030C                     	;# 
  5231  030D                     	;# 
  5232  030E                     	;# 
  5233  030F                     	;# 
  5234  0310                     	;# 
  5235  0310                     	;# 
  5236  0311                     	;# 
  5237  0312                     	;# 
  5238  0313                     	;# 
  5239  0314                     	;# 
  5240  0314                     	;# 
  5241  0315                     	;# 
  5242  0316                     	;# 
  5243  0317                     	;# 
  5244  0318                     	;# 
  5245  0318                     	;# 
  5246  0319                     	;# 
  5247  031A                     	;# 
  5248  031B                     	;# 
  5249  031C                     	;# 
  5250  031C                     	;# 
  5251  031D                     	;# 
  5252  031E                     	;# 
  5253  031F                     	;# 
  5254  038C                     	;# 
  5255  038C                     	;# 
  5256  038D                     	;# 
  5257  038E                     	;# 
  5258  0390                     	;# 
  5259  0390                     	;# 
  5260  0391                     	;# 
  5261  0392                     	;# 
  5262  040C                     	;# 
  5263  040D                     	;# 
  5264  040E                     	;# 
  5265  040F                     	;# 
  5266  0410                     	;# 
  5267  0411                     	;# 
  5268  0416                     	;# 
  5269  0416                     	;# 
  5270  0417                     	;# 
  5271  0418                     	;# 
  5272  0418                     	;# 
  5273  0419                     	;# 
  5274  041A                     	;# 
  5275  041A                     	;# 
  5276  041B                     	;# 
  5277  041C                     	;# 
  5278  041C                     	;# 
  5279  041D                     	;# 
  5280  041E                     	;# 
  5281  041F                     	;# 
  5282  048C                     	;# 
  5283  048C                     	;# 
  5284  048D                     	;# 
  5285  048E                     	;# 
  5286  048F                     	;# 
  5287  048F                     	;# 
  5288  0490                     	;# 
  5289  0491                     	;# 
  5290  0492                     	;# 
  5291  0492                     	;# 
  5292  0493                     	;# 
  5293  0494                     	;# 
  5294  0495                     	;# 
  5295  0495                     	;# 
  5296  0496                     	;# 
  5297  0497                     	;# 
  5298  0498                     	;# 
  5299  0499                     	;# 
  5300  049A                     	;# 
  5301  049B                     	;# 
  5302  049C                     	;# 
  5303  049D                     	;# 
  5304  050C                     	;# 
  5305  050C                     	;# 
  5306  050D                     	;# 
  5307  050E                     	;# 
  5308  050F                     	;# 
  5309  050F                     	;# 
  5310  0510                     	;# 
  5311  0511                     	;# 
  5312  0512                     	;# 
  5313  0512                     	;# 
  5314  0513                     	;# 
  5315  0514                     	;# 
  5316  0515                     	;# 
  5317  0515                     	;# 
  5318  0516                     	;# 
  5319  0517                     	;# 
  5320  0518                     	;# 
  5321  0519                     	;# 
  5322  051A                     	;# 
  5323  051B                     	;# 
  5324  051C                     	;# 
  5325  051D                     	;# 
  5326  058C                     	;# 
  5327  058C                     	;# 
  5328  058D                     	;# 
  5329  058E                     	;# 
  5330  058F                     	;# 
  5331  058F                     	;# 
  5332  0590                     	;# 
  5333  0591                     	;# 
  5334  0592                     	;# 
  5335  0593                     	;# 
  5336  060C                     	;# 
  5337  060D                     	;# 
  5338  060E                     	;# 
  5339  060F                     	;# 
  5340  0610                     	;# 
  5341  0611                     	;# 
  5342  0612                     	;# 
  5343  0613                     	;# 
  5344  0614                     	;# 
  5345  0616                     	;# 
  5346  0617                     	;# 
  5347  0618                     	;# 
  5348  0619                     	;# 
  5349  061A                     	;# 
  5350  061B                     	;# 
  5351  061C                     	;# 
  5352  061D                     	;# 
  5353  061E                     	;# 
  5354  068C                     	;# 
  5355  068D                     	;# 
  5356  068E                     	;# 
  5357  068F                     	;# 
  5358  0690                     	;# 
  5359  0691                     	;# 
  5360  0692                     	;# 
  5361  0693                     	;# 
  5362  0694                     	;# 
  5363  070C                     	;# 
  5364  070D                     	;# 
  5365  070E                     	;# 
  5366  070F                     	;# 
  5367  0710                     	;# 
  5368  0711                     	;# 
  5369  0712                     	;# 
  5370  0713                     	;# 
  5371  0714                     	;# 
  5372  0716                     	;# 
  5373  0717                     	;# 
  5374  0718                     	;# 
  5375  0719                     	;# 
  5376  071A                     	;# 
  5377  071B                     	;# 
  5378  071C                     	;# 
  5379  071D                     	;# 
  5380  071E                     	;# 
  5381  0796                     	;# 
  5382  0797                     	;# 
  5383  0798                     	;# 
  5384  0799                     	;# 
  5385  079A                     	;# 
  5386  079B                     	;# 
  5387  080C                     	;# 
  5388  080D                     	;# 
  5389  080E                     	;# 
  5390  080F                     	;# 
  5391  0810                     	;# 
  5392  0811                     	;# 
  5393  0812                     	;# 
  5394  0813                     	;# 
  5395  0814                     	;# 
  5396  081A                     	;# 
  5397  081B                     	;# 
  5398  081C                     	;# 
  5399  081D                     	;# 
  5400  081E                     	;# 
  5401  081F                     	;# 
  5402  088C                     	;# 
  5403  088D                     	;# 
  5404  088E                     	;# 
  5405  088F                     	;# 
  5406  0890                     	;# 
  5407  0891                     	;# 
  5408  0892                     	;# 
  5409  0893                     	;# 
  5410  0895                     	;# 
  5411  0896                     	;# 
  5412  0897                     	;# 
  5413  0898                     	;# 
  5414  0899                     	;# 
  5415  089A                     	;# 
  5416  089B                     	;# 
  5417  090C                     	;# 
  5418  090E                     	;# 
  5419  090F                     	;# 
  5420  091F                     	;# 
  5421  091F                     	;# 
  5422  098F                     	;# 
  5423  098F                     	;# 
  5424  0990                     	;# 
  5425  0991                     	;# 
  5426  0992                     	;# 
  5427  0993                     	;# 
  5428  0994                     	;# 
  5429  0995                     	;# 
  5430  0996                     	;# 
  5431  0997                     	;# 
  5432  0E0F                     	;# 
  5433  0E10                     	;# 
  5434  0E11                     	;# 
  5435  0E12                     	;# 
  5436  0E13                     	;# 
  5437  0E14                     	;# 
  5438  0E15                     	;# 
  5439  0E16                     	;# 
  5440  0E17                     	;# 
  5441  0E18                     	;# 
  5442  0E19                     	;# 
  5443  0E1A                     	;# 
  5444  0E1B                     	;# 
  5445  0E1C                     	;# 
  5446  0E1D                     	;# 
  5447  0E1E                     	;# 
  5448  0E1F                     	;# 
  5449  0E20                     	;# 
  5450  0E21                     	;# 
  5451  0E22                     	;# 
  5452  0E23                     	;# 
  5453  0E24                     	;# 
  5454  0E25                     	;# 
  5455  0E26                     	;# 
  5456  0E27                     	;# 
  5457  0E28                     	;# 
  5458  0E29                     	;# 
  5459  0E2A                     	;# 
  5460  0E2B                     	;# 
  5461  0E2C                     	;# 
  5462  0E2D                     	;# 
  5463  0E2E                     	;# 
  5464  0E2F                     	;# 
  5465  0E30                     	;# 
  5466  0E31                     	;# 
  5467  0E32                     	;# 
  5468  0E33                     	;# 
  5469  0E34                     	;# 
  5470  0E35                     	;# 
  5471  0E36                     	;# 
  5472  0E37                     	;# 
  5473  0E8F                     	;# 
  5474  0E90                     	;# 
  5475  0E91                     	;# 
  5476  0E92                     	;# 
  5477  0E93                     	;# 
  5478  0E94                     	;# 
  5479  0E95                     	;# 
  5480  0E96                     	;# 
  5481  0E97                     	;# 
  5482  0E9C                     	;# 
  5483  0E9D                     	;# 
  5484  0E9E                     	;# 
  5485  0EA1                     	;# 
  5486  0EA2                     	;# 
  5487  0EA3                     	;# 
  5488  0EA4                     	;# 
  5489  0EA5                     	;# 
  5490  0EA9                     	;# 
  5491  0EAA                     	;# 
  5492  0EAB                     	;# 
  5493  0EAC                     	;# 
  5494  0EB1                     	;# 
  5495  0EB2                     	;# 
  5496  0EB3                     	;# 
  5497  0EB8                     	;# 
  5498  0EB9                     	;# 
  5499  0EBA                     	;# 
  5500  0EBB                     	;# 
  5501  0EBC                     	;# 
  5502  0EBD                     	;# 
  5503  0EBE                     	;# 
  5504  0EC3                     	;# 
  5505  0EC5                     	;# 
  5506  0EC6                     	;# 
  5507  0EC7                     	;# 
  5508  0EC8                     	;# 
  5509  0EC9                     	;# 
  5510  0ECA                     	;# 
  5511  0ECB                     	;# 
  5512  0ECC                     	;# 
  5513  0F10                     	;# 
  5514  0F11                     	;# 
  5515  0F12                     	;# 
  5516  0F13                     	;# 
  5517  0F14                     	;# 
  5518  0F15                     	;# 
  5519  0F16                     	;# 
  5520  0F17                     	;# 
  5521  0F18                     	;# 
  5522  0F19                     	;# 
  5523  0F1A                     	;# 
  5524  0F1B                     	;# 
  5525  0F1C                     	;# 
  5526  0F1D                     	;# 
  5527  0F1E                     	;# 
  5528  0F1F                     	;# 
  5529  0F20                     	;# 
  5530  0F21                     	;# 
  5531  0F22                     	;# 
  5532  0F23                     	;# 
  5533  0F24                     	;# 
  5534  0F25                     	;# 
  5535  0F26                     	;# 
  5536  0F27                     	;# 
  5537  0F28                     	;# 
  5538  0F29                     	;# 
  5539  0F2A                     	;# 
  5540  0F2B                     	;# 
  5541  0F2C                     	;# 
  5542  0F2D                     	;# 
  5543  0F2E                     	;# 
  5544  0F2F                     	;# 
  5545  0F30                     	;# 
  5546  0F31                     	;# 
  5547  0F32                     	;# 
  5548  0F38                     	;# 
  5549  0F39                     	;# 
  5550  0F3A                     	;# 
  5551  0F3B                     	;# 
  5552  0F3C                     	;# 
  5553  0F3D                     	;# 
  5554  0F3E                     	;# 
  5555  0F3F                     	;# 
  5556  0F40                     	;# 
  5557  0F41                     	;# 
  5558  0F43                     	;# 
  5559  0F44                     	;# 
  5560  0F45                     	;# 
  5561  0F46                     	;# 
  5562  0F47                     	;# 
  5563  0F48                     	;# 
  5564  0F49                     	;# 
  5565  0F4A                     	;# 
  5566  0F4B                     	;# 
  5567  0F4C                     	;# 
  5568  0F4E                     	;# 
  5569  0F4F                     	;# 
  5570  0F50                     	;# 
  5571  0F51                     	;# 
  5572  0F52                     	;# 
  5573  0F53                     	;# 
  5574  0F54                     	;# 
  5575  0F55                     	;# 
  5576  0F56                     	;# 
  5577  0F57                     	;# 
  5578  0F59                     	;# 
  5579  0F5A                     	;# 
  5580  0F5B                     	;# 
  5581  0F5C                     	;# 
  5582  0F5D                     	;# 
  5583  0F61                     	;# 
  5584  0F62                     	;# 
  5585  0F64                     	;# 
  5586  0F65                     	;# 
  5587  0F66                     	;# 
  5588  0F67                     	;# 
  5589  0F68                     	;# 
  5590  0F69                     	;# 
  5591  0F6A                     	;# 
  5592  0F6B                     	;# 
  5593  0F6C                     	;# 
  5594  0F6D                     	;# 
  5595  0FE4                     	;# 
  5596  0FE5                     	;# 
  5597  0FE6                     	;# 
  5598  0FE7                     	;# 
  5599  0FE8                     	;# 
  5600  0FE9                     	;# 
  5601  0FEA                     	;# 
  5602  0FEB                     	;# 
  5603  0FED                     	;# 
  5604  0FEE                     	;# 
  5605  0FEF                     	;# 
  5606  0000                     	;# 
  5607  0001                     	;# 
  5608  0002                     	;# 
  5609  0003                     	;# 
  5610  0004                     	;# 
  5611  0005                     	;# 
  5612  0006                     	;# 
  5613  0007                     	;# 
  5614  0008                     	;# 
  5615  0009                     	;# 
  5616  000A                     	;# 
  5617  000B                     	;# 
  5618  000C                     	;# 
  5619  000D                     	;# 
  5620  000E                     	;# 
  5621  000F                     	;# 
  5622  0010                     	;# 
  5623  0011                     	;# 
  5624  0012                     	;# 
  5625  0013                     	;# 
  5626  0014                     	;# 
  5627  0015                     	;# 
  5628  0016                     	;# 
  5629  0017                     	;# 
  5630  0018                     	;# 
  5631  0019                     	;# 
  5632  001A                     	;# 
  5633  001C                     	;# 
  5634  001C                     	;# 
  5635  001D                     	;# 
  5636  001D                     	;# 
  5637  001E                     	;# 
  5638  001F                     	;# 
  5639  008C                     	;# 
  5640  008C                     	;# 
  5641  008D                     	;# 
  5642  008E                     	;# 
  5643  008E                     	;# 
  5644  008F                     	;# 
  5645  0090                     	;# 
  5646  0090                     	;# 
  5647  0091                     	;# 
  5648  0093                     	;# 
  5649  0094                     	;# 
  5650  0095                     	;# 
  5651  0096                     	;# 
  5652  0097                     	;# 
  5653  0098                     	;# 
  5654  0099                     	;# 
  5655  009A                     	;# 
  5656  009B                     	;# 
  5657  009C                     	;# 
  5658  009D                     	;# 
  5659  009E                     	;# 
  5660  010C                     	;# 
  5661  010D                     	;# 
  5662  010E                     	;# 
  5663  010E                     	;# 
  5664  010F                     	;# 
  5665  0110                     	;# 
  5666  0110                     	;# 
  5667  0111                     	;# 
  5668  0112                     	;# 
  5669  0112                     	;# 
  5670  0113                     	;# 
  5671  0114                     	;# 
  5672  0114                     	;# 
  5673  0115                     	;# 
  5674  0116                     	;# 
  5675  0116                     	;# 
  5676  0117                     	;# 
  5677  0119                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  011A                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011B                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011C                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011D                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011E                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011F                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  018C                     	;# 
  5703  018D                     	;# 
  5704  018E                     	;# 
  5705  018F                     	;# 
  5706  0190                     	;# 
  5707  0191                     	;# 
  5708  0192                     	;# 
  5709  0196                     	;# 
  5710  0197                     	;# 
  5711  0198                     	;# 
  5712  0199                     	;# 
  5713  019A                     	;# 
  5714  019B                     	;# 
  5715  019C                     	;# 
  5716  020C                     	;# 
  5717  020C                     	;# 
  5718  020D                     	;# 
  5719  020E                     	;# 
  5720  020F                     	;# 
  5721  020F                     	;# 
  5722  0210                     	;# 
  5723  0210                     	;# 
  5724  0211                     	;# 
  5725  0211                     	;# 
  5726  0212                     	;# 
  5727  0212                     	;# 
  5728  0213                     	;# 
  5729  0214                     	;# 
  5730  0215                     	;# 
  5731  0215                     	;# 
  5732  0216                     	;# 
  5733  0216                     	;# 
  5734  0217                     	;# 
  5735  0217                     	;# 
  5736  0218                     	;# 
  5737  0218                     	;# 
  5738  0219                     	;# 
  5739  021A                     	;# 
  5740  021B                     	;# 
  5741  021B                     	;# 
  5742  021C                     	;# 
  5743  021C                     	;# 
  5744  021D                     	;# 
  5745  021D                     	;# 
  5746  021E                     	;# 
  5747  021F                     	;# 
  5748  028C                     	;# 
  5749  028C                     	;# 
  5750  028D                     	;# 
  5751  028D                     	;# 
  5752  028E                     	;# 
  5753  028F                     	;# 
  5754  0290                     	;# 
  5755  0290                     	;# 
  5756  0291                     	;# 
  5757  0292                     	;# 
  5758  0292                     	;# 
  5759  0293                     	;# 
  5760  0293                     	;# 
  5761  0294                     	;# 
  5762  0295                     	;# 
  5763  0296                     	;# 
  5764  0296                     	;# 
  5765  0297                     	;# 
  5766  0298                     	;# 
  5767  0298                     	;# 
  5768  0299                     	;# 
  5769  0299                     	;# 
  5770  029A                     	;# 
  5771  029B                     	;# 
  5772  029C                     	;# 
  5773  029C                     	;# 
  5774  029D                     	;# 
  5775  030C                     	;# 
  5776  030C                     	;# 
  5777  030D                     	;# 
  5778  030E                     	;# 
  5779  030F                     	;# 
  5780  0310                     	;# 
  5781  0310                     	;# 
  5782  0311                     	;# 
  5783  0312                     	;# 
  5784  0313                     	;# 
  5785  0314                     	;# 
  5786  0314                     	;# 
  5787  0315                     	;# 
  5788  0316                     	;# 
  5789  0317                     	;# 
  5790  0318                     	;# 
  5791  0318                     	;# 
  5792  0319                     	;# 
  5793  031A                     	;# 
  5794  031B                     	;# 
  5795  031C                     	;# 
  5796  031C                     	;# 
  5797  031D                     	;# 
  5798  031E                     	;# 
  5799  031F                     	;# 
  5800  038C                     	;# 
  5801  038C                     	;# 
  5802  038D                     	;# 
  5803  038E                     	;# 
  5804  0390                     	;# 
  5805  0390                     	;# 
  5806  0391                     	;# 
  5807  0392                     	;# 
  5808  040C                     	;# 
  5809  040D                     	;# 
  5810  040E                     	;# 
  5811  040F                     	;# 
  5812  0410                     	;# 
  5813  0411                     	;# 
  5814  0416                     	;# 
  5815  0416                     	;# 
  5816  0417                     	;# 
  5817  0418                     	;# 
  5818  0418                     	;# 
  5819  0419                     	;# 
  5820  041A                     	;# 
  5821  041A                     	;# 
  5822  041B                     	;# 
  5823  041C                     	;# 
  5824  041C                     	;# 
  5825  041D                     	;# 
  5826  041E                     	;# 
  5827  041F                     	;# 
  5828  048C                     	;# 
  5829  048C                     	;# 
  5830  048D                     	;# 
  5831  048E                     	;# 
  5832  048F                     	;# 
  5833  048F                     	;# 
  5834  0490                     	;# 
  5835  0491                     	;# 
  5836  0492                     	;# 
  5837  0492                     	;# 
  5838  0493                     	;# 
  5839  0494                     	;# 
  5840  0495                     	;# 
  5841  0495                     	;# 
  5842  0496                     	;# 
  5843  0497                     	;# 
  5844  0498                     	;# 
  5845  0499                     	;# 
  5846  049A                     	;# 
  5847  049B                     	;# 
  5848  049C                     	;# 
  5849  049D                     	;# 
  5850  050C                     	;# 
  5851  050C                     	;# 
  5852  050D                     	;# 
  5853  050E                     	;# 
  5854  050F                     	;# 
  5855  050F                     	;# 
  5856  0510                     	;# 
  5857  0511                     	;# 
  5858  0512                     	;# 
  5859  0512                     	;# 
  5860  0513                     	;# 
  5861  0514                     	;# 
  5862  0515                     	;# 
  5863  0515                     	;# 
  5864  0516                     	;# 
  5865  0517                     	;# 
  5866  0518                     	;# 
  5867  0519                     	;# 
  5868  051A                     	;# 
  5869  051B                     	;# 
  5870  051C                     	;# 
  5871  051D                     	;# 
  5872  058C                     	;# 
  5873  058C                     	;# 
  5874  058D                     	;# 
  5875  058E                     	;# 
  5876  058F                     	;# 
  5877  058F                     	;# 
  5878  0590                     	;# 
  5879  0591                     	;# 
  5880  0592                     	;# 
  5881  0593                     	;# 
  5882  060C                     	;# 
  5883  060D                     	;# 
  5884  060E                     	;# 
  5885  060F                     	;# 
  5886  0610                     	;# 
  5887  0611                     	;# 
  5888  0612                     	;# 
  5889  0613                     	;# 
  5890  0614                     	;# 
  5891  0616                     	;# 
  5892  0617                     	;# 
  5893  0618                     	;# 
  5894  0619                     	;# 
  5895  061A                     	;# 
  5896  061B                     	;# 
  5897  061C                     	;# 
  5898  061D                     	;# 
  5899  061E                     	;# 
  5900  068C                     	;# 
  5901  068D                     	;# 
  5902  068E                     	;# 
  5903  068F                     	;# 
  5904  0690                     	;# 
  5905  0691                     	;# 
  5906  0692                     	;# 
  5907  0693                     	;# 
  5908  0694                     	;# 
  5909  070C                     	;# 
  5910  070D                     	;# 
  5911  070E                     	;# 
  5912  070F                     	;# 
  5913  0710                     	;# 
  5914  0711                     	;# 
  5915  0712                     	;# 
  5916  0713                     	;# 
  5917  0714                     	;# 
  5918  0716                     	;# 
  5919  0717                     	;# 
  5920  0718                     	;# 
  5921  0719                     	;# 
  5922  071A                     	;# 
  5923  071B                     	;# 
  5924  071C                     	;# 
  5925  071D                     	;# 
  5926  071E                     	;# 
  5927  0796                     	;# 
  5928  0797                     	;# 
  5929  0798                     	;# 
  5930  0799                     	;# 
  5931  079A                     	;# 
  5932  079B                     	;# 
  5933  080C                     	;# 
  5934  080D                     	;# 
  5935  080E                     	;# 
  5936  080F                     	;# 
  5937  0810                     	;# 
  5938  0811                     	;# 
  5939  0812                     	;# 
  5940  0813                     	;# 
  5941  0814                     	;# 
  5942  081A                     	;# 
  5943  081B                     	;# 
  5944  081C                     	;# 
  5945  081D                     	;# 
  5946  081E                     	;# 
  5947  081F                     	;# 
  5948  088C                     	;# 
  5949  088D                     	;# 
  5950  088E                     	;# 
  5951  088F                     	;# 
  5952  0890                     	;# 
  5953  0891                     	;# 
  5954  0892                     	;# 
  5955  0893                     	;# 
  5956  0895                     	;# 
  5957  0896                     	;# 
  5958  0897                     	;# 
  5959  0898                     	;# 
  5960  0899                     	;# 
  5961  089A                     	;# 
  5962  089B                     	;# 
  5963  090C                     	;# 
  5964  090E                     	;# 
  5965  090F                     	;# 
  5966  091F                     	;# 
  5967  091F                     	;# 
  5968  098F                     	;# 
  5969  098F                     	;# 
  5970  0990                     	;# 
  5971  0991                     	;# 
  5972  0992                     	;# 
  5973  0993                     	;# 
  5974  0994                     	;# 
  5975  0995                     	;# 
  5976  0996                     	;# 
  5977  0997                     	;# 
  5978  0E0F                     	;# 
  5979  0E10                     	;# 
  5980  0E11                     	;# 
  5981  0E12                     	;# 
  5982  0E13                     	;# 
  5983  0E14                     	;# 
  5984  0E15                     	;# 
  5985  0E16                     	;# 
  5986  0E17                     	;# 
  5987  0E18                     	;# 
  5988  0E19                     	;# 
  5989  0E1A                     	;# 
  5990  0E1B                     	;# 
  5991  0E1C                     	;# 
  5992  0E1D                     	;# 
  5993  0E1E                     	;# 
  5994  0E1F                     	;# 
  5995  0E20                     	;# 
  5996  0E21                     	;# 
  5997  0E22                     	;# 
  5998  0E23                     	;# 
  5999  0E24                     	;# 
  6000  0E25                     	;# 
  6001  0E26                     	;# 
  6002  0E27                     	;# 
  6003  0E28                     	;# 
  6004  0E29                     	;# 
  6005  0E2A                     	;# 
  6006  0E2B                     	;# 
  6007  0E2C                     	;# 
  6008  0E2D                     	;# 
  6009  0E2E                     	;# 
  6010  0E2F                     	;# 
  6011  0E30                     	;# 
  6012  0E31                     	;# 
  6013  0E32                     	;# 
  6014  0E33                     	;# 
  6015  0E34                     	;# 
  6016  0E35                     	;# 
  6017  0E36                     	;# 
  6018  0E37                     	;# 
  6019  0E8F                     	;# 
  6020  0E90                     	;# 
  6021  0E91                     	;# 
  6022  0E92                     	;# 
  6023  0E93                     	;# 
  6024  0E94                     	;# 
  6025  0E95                     	;# 
  6026  0E96                     	;# 
  6027  0E97                     	;# 
  6028  0E9C                     	;# 
  6029  0E9D                     	;# 
  6030  0E9E                     	;# 
  6031  0EA1                     	;# 
  6032  0EA2                     	;# 
  6033  0EA3                     	;# 
  6034  0EA4                     	;# 
  6035  0EA5                     	;# 
  6036  0EA9                     	;# 
  6037  0EAA                     	;# 
  6038  0EAB                     	;# 
  6039  0EAC                     	;# 
  6040  0EB1                     	;# 
  6041  0EB2                     	;# 
  6042  0EB3                     	;# 
  6043  0EB8                     	;# 
  6044  0EB9                     	;# 
  6045  0EBA                     	;# 
  6046  0EBB                     	;# 
  6047  0EBC                     	;# 
  6048  0EBD                     	;# 
  6049  0EBE                     	;# 
  6050  0EC3                     	;# 
  6051  0EC5                     	;# 
  6052  0EC6                     	;# 
  6053  0EC7                     	;# 
  6054  0EC8                     	;# 
  6055  0EC9                     	;# 
  6056  0ECA                     	;# 
  6057  0ECB                     	;# 
  6058  0ECC                     	;# 
  6059  0F10                     	;# 
  6060  0F11                     	;# 
  6061  0F12                     	;# 
  6062  0F13                     	;# 
  6063  0F14                     	;# 
  6064  0F15                     	;# 
  6065  0F16                     	;# 
  6066  0F17                     	;# 
  6067  0F18                     	;# 
  6068  0F19                     	;# 
  6069  0F1A                     	;# 
  6070  0F1B                     	;# 
  6071  0F1C                     	;# 
  6072  0F1D                     	;# 
  6073  0F1E                     	;# 
  6074  0F1F                     	;# 
  6075  0F20                     	;# 
  6076  0F21                     	;# 
  6077  0F22                     	;# 
  6078  0F23                     	;# 
  6079  0F24                     	;# 
  6080  0F25                     	;# 
  6081  0F26                     	;# 
  6082  0F27                     	;# 
  6083  0F28                     	;# 
  6084  0F29                     	;# 
  6085  0F2A                     	;# 
  6086  0F2B                     	;# 
  6087  0F2C                     	;# 
  6088  0F2D                     	;# 
  6089  0F2E                     	;# 
  6090  0F2F                     	;# 
  6091  0F30                     	;# 
  6092  0F31                     	;# 
  6093  0F32                     	;# 
  6094  0F38                     	;# 
  6095  0F39                     	;# 
  6096  0F3A                     	;# 
  6097  0F3B                     	;# 
  6098  0F3C                     	;# 
  6099  0F3D                     	;# 
  6100  0F3E                     	;# 
  6101  0F3F                     	;# 
  6102  0F40                     	;# 
  6103  0F41                     	;# 
  6104  0F43                     	;# 
  6105  0F44                     	;# 
  6106  0F45                     	;# 
  6107  0F46                     	;# 
  6108  0F47                     	;# 
  6109  0F48                     	;# 
  6110  0F49                     	;# 
  6111  0F4A                     	;# 
  6112  0F4B                     	;# 
  6113  0F4C                     	;# 
  6114  0F4E                     	;# 
  6115  0F4F                     	;# 
  6116  0F50                     	;# 
  6117  0F51                     	;# 
  6118  0F52                     	;# 
  6119  0F53                     	;# 
  6120  0F54                     	;# 
  6121  0F55                     	;# 
  6122  0F56                     	;# 
  6123  0F57                     	;# 
  6124  0F59                     	;# 
  6125  0F5A                     	;# 
  6126  0F5B                     	;# 
  6127  0F5C                     	;# 
  6128  0F5D                     	;# 
  6129  0F61                     	;# 
  6130  0F62                     	;# 
  6131  0F64                     	;# 
  6132  0F65                     	;# 
  6133  0F66                     	;# 
  6134  0F67                     	;# 
  6135  0F68                     	;# 
  6136  0F69                     	;# 
  6137  0F6A                     	;# 
  6138  0F6B                     	;# 
  6139  0F6C                     	;# 
  6140  0F6D                     	;# 
  6141  0FE4                     	;# 
  6142  0FE5                     	;# 
  6143  0FE6                     	;# 
  6144  0FE7                     	;# 
  6145  0FE8                     	;# 
  6146  0FE9                     	;# 
  6147  0FEA                     	;# 
  6148  0FEB                     	;# 
  6149  0FED                     	;# 
  6150  0FEE                     	;# 
  6151  0FEF                     	;# 
  6152  0000                     	;# 
  6153  0001                     	;# 
  6154  0002                     	;# 
  6155  0003                     	;# 
  6156  0004                     	;# 
  6157  0005                     	;# 
  6158  0006                     	;# 
  6159  0007                     	;# 
  6160  0008                     	;# 
  6161  0009                     	;# 
  6162  000A                     	;# 
  6163  000B                     	;# 
  6164  000C                     	;# 
  6165  000D                     	;# 
  6166  000E                     	;# 
  6167  000F                     	;# 
  6168  0010                     	;# 
  6169  0011                     	;# 
  6170  0012                     	;# 
  6171  0013                     	;# 
  6172  0014                     	;# 
  6173  0015                     	;# 
  6174  0016                     	;# 
  6175  0017                     	;# 
  6176  0018                     	;# 
  6177  0019                     	;# 
  6178  001A                     	;# 
  6179  001C                     	;# 
  6180  001C                     	;# 
  6181  001D                     	;# 
  6182  001D                     	;# 
  6183  001E                     	;# 
  6184  001F                     	;# 
  6185  008C                     	;# 
  6186  008C                     	;# 
  6187  008D                     	;# 
  6188  008E                     	;# 
  6189  008E                     	;# 
  6190  008F                     	;# 
  6191  0090                     	;# 
  6192  0090                     	;# 
  6193  0091                     	;# 
  6194  0093                     	;# 
  6195  0094                     	;# 
  6196  0095                     	;# 
  6197  0096                     	;# 
  6198  0097                     	;# 
  6199  0098                     	;# 
  6200  0099                     	;# 
  6201  009A                     	;# 
  6202  009B                     	;# 
  6203  009C                     	;# 
  6204  009D                     	;# 
  6205  009E                     	;# 
  6206  010C                     	;# 
  6207  010D                     	;# 
  6208  010E                     	;# 
  6209  010E                     	;# 
  6210  010F                     	;# 
  6211  0110                     	;# 
  6212  0110                     	;# 
  6213  0111                     	;# 
  6214  0112                     	;# 
  6215  0112                     	;# 
  6216  0113                     	;# 
  6217  0114                     	;# 
  6218  0114                     	;# 
  6219  0115                     	;# 
  6220  0116                     	;# 
  6221  0116                     	;# 
  6222  0117                     	;# 
  6223  0119                     	;# 
  6224  0119                     	;# 
  6225  0119                     	;# 
  6226  011A                     	;# 
  6227  011A                     	;# 
  6228  011A                     	;# 
  6229  011B                     	;# 
  6230  011B                     	;# 
  6231  011B                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011C                     	;# 
  6235  011C                     	;# 
  6236  011C                     	;# 
  6237  011D                     	;# 
  6238  011D                     	;# 
  6239  011D                     	;# 
  6240  011E                     	;# 
  6241  011E                     	;# 
  6242  011E                     	;# 
  6243  011F                     	;# 
  6244  011F                     	;# 
  6245  011F                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  018C                     	;# 
  6249  018D                     	;# 
  6250  018E                     	;# 
  6251  018F                     	;# 
  6252  0190                     	;# 
  6253  0191                     	;# 
  6254  0192                     	;# 
  6255  0196                     	;# 
  6256  0197                     	;# 
  6257  0198                     	;# 
  6258  0199                     	;# 
  6259  019A                     	;# 
  6260  019B                     	;# 
  6261  019C                     	;# 
  6262  020C                     	;# 
  6263  020C                     	;# 
  6264  020D                     	;# 
  6265  020E                     	;# 
  6266  020F                     	;# 
  6267  020F                     	;# 
  6268  0210                     	;# 
  6269  0210                     	;# 
  6270  0211                     	;# 
  6271  0211                     	;# 
  6272  0212                     	;# 
  6273  0212                     	;# 
  6274  0213                     	;# 
  6275  0214                     	;# 
  6276  0215                     	;# 
  6277  0215                     	;# 
  6278  0216                     	;# 
  6279  0216                     	;# 
  6280  0217                     	;# 
  6281  0217                     	;# 
  6282  0218                     	;# 
  6283  0218                     	;# 
  6284  0219                     	;# 
  6285  021A                     	;# 
  6286  021B                     	;# 
  6287  021B                     	;# 
  6288  021C                     	;# 
  6289  021C                     	;# 
  6290  021D                     	;# 
  6291  021D                     	;# 
  6292  021E                     	;# 
  6293  021F                     	;# 
  6294  028C                     	;# 
  6295  028C                     	;# 
  6296  028D                     	;# 
  6297  028D                     	;# 
  6298  028E                     	;# 
  6299  028F                     	;# 
  6300  0290                     	;# 
  6301  0290                     	;# 
  6302  0291                     	;# 
  6303  0292                     	;# 
  6304  0292                     	;# 
  6305  0293                     	;# 
  6306  0293                     	;# 
  6307  0294                     	;# 
  6308  0295                     	;# 
  6309  0296                     	;# 
  6310  0296                     	;# 
  6311  0297                     	;# 
  6312  0298                     	;# 
  6313  0298                     	;# 
  6314  0299                     	;# 
  6315  0299                     	;# 
  6316  029A                     	;# 
  6317  029B                     	;# 
  6318  029C                     	;# 
  6319  029C                     	;# 
  6320  029D                     	;# 
  6321  030C                     	;# 
  6322  030C                     	;# 
  6323  030D                     	;# 
  6324  030E                     	;# 
  6325  030F                     	;# 
  6326  0310                     	;# 
  6327  0310                     	;# 
  6328  0311                     	;# 
  6329  0312                     	;# 
  6330  0313                     	;# 
  6331  0314                     	;# 
  6332  0314                     	;# 
  6333  0315                     	;# 
  6334  0316                     	;# 
  6335  0317                     	;# 
  6336  0318                     	;# 
  6337  0318                     	;# 
  6338  0319                     	;# 
  6339  031A                     	;# 
  6340  031B                     	;# 
  6341  031C                     	;# 
  6342  031C                     	;# 
  6343  031D                     	;# 
  6344  031E                     	;# 
  6345  031F                     	;# 
  6346  038C                     	;# 
  6347  038C                     	;# 
  6348  038D                     	;# 
  6349  038E                     	;# 
  6350  0390                     	;# 
  6351  0390                     	;# 
  6352  0391                     	;# 
  6353  0392                     	;# 
  6354  040C                     	;# 
  6355  040D                     	;# 
  6356  040E                     	;# 
  6357  040F                     	;# 
  6358  0410                     	;# 
  6359  0411                     	;# 
  6360  0416                     	;# 
  6361  0416                     	;# 
  6362  0417                     	;# 
  6363  0418                     	;# 
  6364  0418                     	;# 
  6365  0419                     	;# 
  6366  041A                     	;# 
  6367  041A                     	;# 
  6368  041B                     	;# 
  6369  041C                     	;# 
  6370  041C                     	;# 
  6371  041D                     	;# 
  6372  041E                     	;# 
  6373  041F                     	;# 
  6374  048C                     	;# 
  6375  048C                     	;# 
  6376  048D                     	;# 
  6377  048E                     	;# 
  6378  048F                     	;# 
  6379  048F                     	;# 
  6380  0490                     	;# 
  6381  0491                     	;# 
  6382  0492                     	;# 
  6383  0492                     	;# 
  6384  0493                     	;# 
  6385  0494                     	;# 
  6386  0495                     	;# 
  6387  0495                     	;# 
  6388  0496                     	;# 
  6389  0497                     	;# 
  6390  0498                     	;# 
  6391  0499                     	;# 
  6392  049A                     	;# 
  6393  049B                     	;# 
  6394  049C                     	;# 
  6395  049D                     	;# 
  6396  050C                     	;# 
  6397  050C                     	;# 
  6398  050D                     	;# 
  6399  050E                     	;# 
  6400  050F                     	;# 
  6401  050F                     	;# 
  6402  0510                     	;# 
  6403  0511                     	;# 
  6404  0512                     	;# 
  6405  0512                     	;# 
  6406  0513                     	;# 
  6407  0514                     	;# 
  6408  0515                     	;# 
  6409  0515                     	;# 
  6410  0516                     	;# 
  6411  0517                     	;# 
  6412  0518                     	;# 
  6413  0519                     	;# 
  6414  051A                     	;# 
  6415  051B                     	;# 
  6416  051C                     	;# 
  6417  051D                     	;# 
  6418  058C                     	;# 
  6419  058C                     	;# 
  6420  058D                     	;# 
  6421  058E                     	;# 
  6422  058F                     	;# 
  6423  058F                     	;# 
  6424  0590                     	;# 
  6425  0591                     	;# 
  6426  0592                     	;# 
  6427  0593                     	;# 
  6428  060C                     	;# 
  6429  060D                     	;# 
  6430  060E                     	;# 
  6431  060F                     	;# 
  6432  0610                     	;# 
  6433  0611                     	;# 
  6434  0612                     	;# 
  6435  0613                     	;# 
  6436  0614                     	;# 
  6437  0616                     	;# 
  6438  0617                     	;# 
  6439  0618                     	;# 
  6440  0619                     	;# 
  6441  061A                     	;# 
  6442  061B                     	;# 
  6443  061C                     	;# 
  6444  061D                     	;# 
  6445  061E                     	;# 
  6446  068C                     	;# 
  6447  068D                     	;# 
  6448  068E                     	;# 
  6449  068F                     	;# 
  6450  0690                     	;# 
  6451  0691                     	;# 
  6452  0692                     	;# 
  6453  0693                     	;# 
  6454  0694                     	;# 
  6455  070C                     	;# 
  6456  070D                     	;# 
  6457  070E                     	;# 
  6458  070F                     	;# 
  6459  0710                     	;# 
  6460  0711                     	;# 
  6461  0712                     	;# 
  6462  0713                     	;# 
  6463  0714                     	;# 
  6464  0716                     	;# 
  6465  0717                     	;# 
  6466  0718                     	;# 
  6467  0719                     	;# 
  6468  071A                     	;# 
  6469  071B                     	;# 
  6470  071C                     	;# 
  6471  071D                     	;# 
  6472  071E                     	;# 
  6473  0796                     	;# 
  6474  0797                     	;# 
  6475  0798                     	;# 
  6476  0799                     	;# 
  6477  079A                     	;# 
  6478  079B                     	;# 
  6479  080C                     	;# 
  6480  080D                     	;# 
  6481  080E                     	;# 
  6482  080F                     	;# 
  6483  0810                     	;# 
  6484  0811                     	;# 
  6485  0812                     	;# 
  6486  0813                     	;# 
  6487  0814                     	;# 
  6488  081A                     	;# 
  6489  081B                     	;# 
  6490  081C                     	;# 
  6491  081D                     	;# 
  6492  081E                     	;# 
  6493  081F                     	;# 
  6494  088C                     	;# 
  6495  088D                     	;# 
  6496  088E                     	;# 
  6497  088F                     	;# 
  6498  0890                     	;# 
  6499  0891                     	;# 
  6500  0892                     	;# 
  6501  0893                     	;# 
  6502  0895                     	;# 
  6503  0896                     	;# 
  6504  0897                     	;# 
  6505  0898                     	;# 
  6506  0899                     	;# 
  6507  089A                     	;# 
  6508  089B                     	;# 
  6509  090C                     	;# 
  6510  090E                     	;# 
  6511  090F                     	;# 
  6512  091F                     	;# 
  6513  091F                     	;# 
  6514  098F                     	;# 
  6515  098F                     	;# 
  6516  0990                     	;# 
  6517  0991                     	;# 
  6518  0992                     	;# 
  6519  0993                     	;# 
  6520  0994                     	;# 
  6521  0995                     	;# 
  6522  0996                     	;# 
  6523  0997                     	;# 
  6524  0E0F                     	;# 
  6525  0E10                     	;# 
  6526  0E11                     	;# 
  6527  0E12                     	;# 
  6528  0E13                     	;# 
  6529  0E14                     	;# 
  6530  0E15                     	;# 
  6531  0E16                     	;# 
  6532  0E17                     	;# 
  6533  0E18                     	;# 
  6534  0E19                     	;# 
  6535  0E1A                     	;# 
  6536  0E1B                     	;# 
  6537  0E1C                     	;# 
  6538  0E1D                     	;# 
  6539  0E1E                     	;# 
  6540  0E1F                     	;# 
  6541  0E20                     	;# 
  6542  0E21                     	;# 
  6543  0E22                     	;# 
  6544  0E23                     	;# 
  6545  0E24                     	;# 
  6546  0E25                     	;# 
  6547  0E26                     	;# 
  6548  0E27                     	;# 
  6549  0E28                     	;# 
  6550  0E29                     	;# 
  6551  0E2A                     	;# 
  6552  0E2B                     	;# 
  6553  0E2C                     	;# 
  6554  0E2D                     	;# 
  6555  0E2E                     	;# 
  6556  0E2F                     	;# 
  6557  0E30                     	;# 
  6558  0E31                     	;# 
  6559  0E32                     	;# 
  6560  0E33                     	;# 
  6561  0E34                     	;# 
  6562  0E35                     	;# 
  6563  0E36                     	;# 
  6564  0E37                     	;# 
  6565  0E8F                     	;# 
  6566  0E90                     	;# 
  6567  0E91                     	;# 
  6568  0E92                     	;# 
  6569  0E93                     	;# 
  6570  0E94                     	;# 
  6571  0E95                     	;# 
  6572  0E96                     	;# 
  6573  0E97                     	;# 
  6574  0E9C                     	;# 
  6575  0E9D                     	;# 
  6576  0E9E                     	;# 
  6577  0EA1                     	;# 
  6578  0EA2                     	;# 
  6579  0EA3                     	;# 
  6580  0EA4                     	;# 
  6581  0EA5                     	;# 
  6582  0EA9                     	;# 
  6583  0EAA                     	;# 
  6584  0EAB                     	;# 
  6585  0EAC                     	;# 
  6586  0EB1                     	;# 
  6587  0EB2                     	;# 
  6588  0EB3                     	;# 
  6589  0EB8                     	;# 
  6590  0EB9                     	;# 
  6591  0EBA                     	;# 
  6592  0EBB                     	;# 
  6593  0EBC                     	;# 
  6594  0EBD                     	;# 
  6595  0EBE                     	;# 
  6596  0EC3                     	;# 
  6597  0EC5                     	;# 
  6598  0EC6                     	;# 
  6599  0EC7                     	;# 
  6600  0EC8                     	;# 
  6601  0EC9                     	;# 
  6602  0ECA                     	;# 
  6603  0ECB                     	;# 
  6604  0ECC                     	;# 
  6605  0F10                     	;# 
  6606  0F11                     	;# 
  6607  0F12                     	;# 
  6608  0F13                     	;# 
  6609  0F14                     	;# 
  6610  0F15                     	;# 
  6611  0F16                     	;# 
  6612  0F17                     	;# 
  6613  0F18                     	;# 
  6614  0F19                     	;# 
  6615  0F1A                     	;# 
  6616  0F1B                     	;# 
  6617  0F1C                     	;# 
  6618  0F1D                     	;# 
  6619  0F1E                     	;# 
  6620  0F1F                     	;# 
  6621  0F20                     	;# 
  6622  0F21                     	;# 
  6623  0F22                     	;# 
  6624  0F23                     	;# 
  6625  0F24                     	;# 
  6626  0F25                     	;# 
  6627  0F26                     	;# 
  6628  0F27                     	;# 
  6629  0F28                     	;# 
  6630  0F29                     	;# 
  6631  0F2A                     	;# 
  6632  0F2B                     	;# 
  6633  0F2C                     	;# 
  6634  0F2D                     	;# 
  6635  0F2E                     	;# 
  6636  0F2F                     	;# 
  6637  0F30                     	;# 
  6638  0F31                     	;# 
  6639  0F32                     	;# 
  6640  0F38                     	;# 
  6641  0F39                     	;# 
  6642  0F3A                     	;# 
  6643  0F3B                     	;# 
  6644  0F3C                     	;# 
  6645  0F3D                     	;# 
  6646  0F3E                     	;# 
  6647  0F3F                     	;# 
  6648  0F40                     	;# 
  6649  0F41                     	;# 
  6650  0F43                     	;# 
  6651  0F44                     	;# 
  6652  0F45                     	;# 
  6653  0F46                     	;# 
  6654  0F47                     	;# 
  6655  0F48                     	;# 
  6656  0F49                     	;# 
  6657  0F4A                     	;# 
  6658  0F4B                     	;# 
  6659  0F4C                     	;# 
  6660  0F4E                     	;# 
  6661  0F4F                     	;# 
  6662  0F50                     	;# 
  6663  0F51                     	;# 
  6664  0F52                     	;# 
  6665  0F53                     	;# 
  6666  0F54                     	;# 
  6667  0F55                     	;# 
  6668  0F56                     	;# 
  6669  0F57                     	;# 
  6670  0F59                     	;# 
  6671  0F5A                     	;# 
  6672  0F5B                     	;# 
  6673  0F5C                     	;# 
  6674  0F5D                     	;# 
  6675  0F61                     	;# 
  6676  0F62                     	;# 
  6677  0F64                     	;# 
  6678  0F65                     	;# 
  6679  0F66                     	;# 
  6680  0F67                     	;# 
  6681  0F68                     	;# 
  6682  0F69                     	;# 
  6683  0F6A                     	;# 
  6684  0F6B                     	;# 
  6685  0F6C                     	;# 
  6686  0F6D                     	;# 
  6687  0FE4                     	;# 
  6688  0FE5                     	;# 
  6689  0FE6                     	;# 
  6690  0FE7                     	;# 
  6691  0FE8                     	;# 
  6692  0FE9                     	;# 
  6693  0FEA                     	;# 
  6694  0FEB                     	;# 
  6695  0FED                     	;# 
  6696  0FEE                     	;# 
  6697  0FEF                     	;# 
  6698  0000                     	;# 
  6699  0001                     	;# 
  6700  0002                     	;# 
  6701  0003                     	;# 
  6702  0004                     	;# 
  6703  0005                     	;# 
  6704  0006                     	;# 
  6705  0007                     	;# 
  6706  0008                     	;# 
  6707  0009                     	;# 
  6708  000A                     	;# 
  6709  000B                     	;# 
  6710  000C                     	;# 
  6711  000D                     	;# 
  6712  000E                     	;# 
  6713  000F                     	;# 
  6714  0010                     	;# 
  6715  0011                     	;# 
  6716  0012                     	;# 
  6717  0013                     	;# 
  6718  0014                     	;# 
  6719  0015                     	;# 
  6720  0016                     	;# 
  6721  0017                     	;# 
  6722  0018                     	;# 
  6723  0019                     	;# 
  6724  001A                     	;# 
  6725  001C                     	;# 
  6726  001C                     	;# 
  6727  001D                     	;# 
  6728  001D                     	;# 
  6729  001E                     	;# 
  6730  001F                     	;# 
  6731  008C                     	;# 
  6732  008C                     	;# 
  6733  008D                     	;# 
  6734  008E                     	;# 
  6735  008E                     	;# 
  6736  008F                     	;# 
  6737  0090                     	;# 
  6738  0090                     	;# 
  6739  0091                     	;# 
  6740  0093                     	;# 
  6741  0094                     	;# 
  6742  0095                     	;# 
  6743  0096                     	;# 
  6744  0097                     	;# 
  6745  0098                     	;# 
  6746  0099                     	;# 
  6747  009A                     	;# 
  6748  009B                     	;# 
  6749  009C                     	;# 
  6750  009D                     	;# 
  6751  009E                     	;# 
  6752  010C                     	;# 
  6753  010D                     	;# 
  6754  010E                     	;# 
  6755  010E                     	;# 
  6756  010F                     	;# 
  6757  0110                     	;# 
  6758  0110                     	;# 
  6759  0111                     	;# 
  6760  0112                     	;# 
  6761  0112                     	;# 
  6762  0113                     	;# 
  6763  0114                     	;# 
  6764  0114                     	;# 
  6765  0115                     	;# 
  6766  0116                     	;# 
  6767  0116                     	;# 
  6768  0117                     	;# 
  6769  0119                     	;# 
  6770  0119                     	;# 
  6771  0119                     	;# 
  6772  011A                     	;# 
  6773  011A                     	;# 
  6774  011A                     	;# 
  6775  011B                     	;# 
  6776  011B                     	;# 
  6777  011B                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011C                     	;# 
  6781  011C                     	;# 
  6782  011C                     	;# 
  6783  011D                     	;# 
  6784  011D                     	;# 
  6785  011D                     	;# 
  6786  011E                     	;# 
  6787  011E                     	;# 
  6788  011E                     	;# 
  6789  011F                     	;# 
  6790  011F                     	;# 
  6791  011F                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  018C                     	;# 
  6795  018D                     	;# 
  6796  018E                     	;# 
  6797  018F                     	;# 
  6798  0190                     	;# 
  6799  0191                     	;# 
  6800  0192                     	;# 
  6801  0196                     	;# 
  6802  0197                     	;# 
  6803  0198                     	;# 
  6804  0199                     	;# 
  6805  019A                     	;# 
  6806  019B                     	;# 
  6807  019C                     	;# 
  6808  020C                     	;# 
  6809  020C                     	;# 
  6810  020D                     	;# 
  6811  020E                     	;# 
  6812  020F                     	;# 
  6813  020F                     	;# 
  6814  0210                     	;# 
  6815  0210                     	;# 
  6816  0211                     	;# 
  6817  0211                     	;# 
  6818  0212                     	;# 
  6819  0212                     	;# 
  6820  0213                     	;# 
  6821  0214                     	;# 
  6822  0215                     	;# 
  6823  0215                     	;# 
  6824  0216                     	;# 
  6825  0216                     	;# 
  6826  0217                     	;# 
  6827  0217                     	;# 
  6828  0218                     	;# 
  6829  0218                     	;# 
  6830  0219                     	;# 
  6831  021A                     	;# 
  6832  021B                     	;# 
  6833  021B                     	;# 
  6834  021C                     	;# 
  6835  021C                     	;# 
  6836  021D                     	;# 
  6837  021D                     	;# 
  6838  021E                     	;# 
  6839  021F                     	;# 
  6840  028C                     	;# 
  6841  028C                     	;# 
  6842  028D                     	;# 
  6843  028D                     	;# 
  6844  028E                     	;# 
  6845  028F                     	;# 
  6846  0290                     	;# 
  6847  0290                     	;# 
  6848  0291                     	;# 
  6849  0292                     	;# 
  6850  0292                     	;# 
  6851  0293                     	;# 
  6852  0293                     	;# 
  6853  0294                     	;# 
  6854  0295                     	;# 
  6855  0296                     	;# 
  6856  0296                     	;# 
  6857  0297                     	;# 
  6858  0298                     	;# 
  6859  0298                     	;# 
  6860  0299                     	;# 
  6861  0299                     	;# 
  6862  029A                     	;# 
  6863  029B                     	;# 
  6864  029C                     	;# 
  6865  029C                     	;# 
  6866  029D                     	;# 
  6867  030C                     	;# 
  6868  030C                     	;# 
  6869  030D                     	;# 
  6870  030E                     	;# 
  6871  030F                     	;# 
  6872  0310                     	;# 
  6873  0310                     	;# 
  6874  0311                     	;# 
  6875  0312                     	;# 
  6876  0313                     	;# 
  6877  0314                     	;# 
  6878  0314                     	;# 
  6879  0315                     	;# 
  6880  0316                     	;# 
  6881  0317                     	;# 
  6882  0318                     	;# 
  6883  0318                     	;# 
  6884  0319                     	;# 
  6885  031A                     	;# 
  6886  031B                     	;# 
  6887  031C                     	;# 
  6888  031C                     	;# 
  6889  031D                     	;# 
  6890  031E                     	;# 
  6891  031F                     	;# 
  6892  038C                     	;# 
  6893  038C                     	;# 
  6894  038D                     	;# 
  6895  038E                     	;# 
  6896  0390                     	;# 
  6897  0390                     	;# 
  6898  0391                     	;# 
  6899  0392                     	;# 
  6900  040C                     	;# 
  6901  040D                     	;# 
  6902  040E                     	;# 
  6903  040F                     	;# 
  6904  0410                     	;# 
  6905  0411                     	;# 
  6906  0416                     	;# 
  6907  0416                     	;# 
  6908  0417                     	;# 
  6909  0418                     	;# 
  6910  0418                     	;# 
  6911  0419                     	;# 
  6912  041A                     	;# 
  6913  041A                     	;# 
  6914  041B                     	;# 
  6915  041C                     	;# 
  6916  041C                     	;# 
  6917  041D                     	;# 
  6918  041E                     	;# 
  6919  041F                     	;# 
  6920  048C                     	;# 
  6921  048C                     	;# 
  6922  048D                     	;# 
  6923  048E                     	;# 
  6924  048F                     	;# 
  6925  048F                     	;# 
  6926  0490                     	;# 
  6927  0491                     	;# 
  6928  0492                     	;# 
  6929  0492                     	;# 
  6930  0493                     	;# 
  6931  0494                     	;# 
  6932  0495                     	;# 
  6933  0495                     	;# 
  6934  0496                     	;# 
  6935  0497                     	;# 
  6936  0498                     	;# 
  6937  0499                     	;# 
  6938  049A                     	;# 
  6939  049B                     	;# 
  6940  049C                     	;# 
  6941  049D                     	;# 
  6942  050C                     	;# 
  6943  050C                     	;# 
  6944  050D                     	;# 
  6945  050E                     	;# 
  6946  050F                     	;# 
  6947  050F                     	;# 
  6948  0510                     	;# 
  6949  0511                     	;# 
  6950  0512                     	;# 
  6951  0512                     	;# 
  6952  0513                     	;# 
  6953  0514                     	;# 
  6954  0515                     	;# 
  6955  0515                     	;# 
  6956  0516                     	;# 
  6957  0517                     	;# 
  6958  0518                     	;# 
  6959  0519                     	;# 
  6960  051A                     	;# 
  6961  051B                     	;# 
  6962  051C                     	;# 
  6963  051D                     	;# 
  6964  058C                     	;# 
  6965  058C                     	;# 
  6966  058D                     	;# 
  6967  058E                     	;# 
  6968  058F                     	;# 
  6969  058F                     	;# 
  6970  0590                     	;# 
  6971  0591                     	;# 
  6972  0592                     	;# 
  6973  0593                     	;# 
  6974  060C                     	;# 
  6975  060D                     	;# 
  6976  060E                     	;# 
  6977  060F                     	;# 
  6978  0610                     	;# 
  6979  0611                     	;# 
  6980  0612                     	;# 
  6981  0613                     	;# 
  6982  0614                     	;# 
  6983  0616                     	;# 
  6984  0617                     	;# 
  6985  0618                     	;# 
  6986  0619                     	;# 
  6987  061A                     	;# 
  6988  061B                     	;# 
  6989  061C                     	;# 
  6990  061D                     	;# 
  6991  061E                     	;# 
  6992  068C                     	;# 
  6993  068D                     	;# 
  6994  068E                     	;# 
  6995  068F                     	;# 
  6996  0690                     	;# 
  6997  0691                     	;# 
  6998  0692                     	;# 
  6999  0693                     	;# 
  7000  0694                     	;# 
  7001  070C                     	;# 
  7002  070D                     	;# 
  7003  070E                     	;# 
  7004  070F                     	;# 
  7005  0710                     	;# 
  7006  0711                     	;# 
  7007  0712                     	;# 
  7008  0713                     	;# 
  7009  0714                     	;# 
  7010  0716                     	;# 
  7011  0717                     	;# 
  7012  0718                     	;# 
  7013  0719                     	;# 
  7014  071A                     	;# 
  7015  071B                     	;# 
  7016  071C                     	;# 
  7017  071D                     	;# 
  7018  071E                     	;# 
  7019  0796                     	;# 
  7020  0797                     	;# 
  7021  0798                     	;# 
  7022  0799                     	;# 
  7023  079A                     	;# 
  7024  079B                     	;# 
  7025  080C                     	;# 
  7026  080D                     	;# 
  7027  080E                     	;# 
  7028  080F                     	;# 
  7029  0810                     	;# 
  7030  0811                     	;# 
  7031  0812                     	;# 
  7032  0813                     	;# 
  7033  0814                     	;# 
  7034  081A                     	;# 
  7035  081B                     	;# 
  7036  081C                     	;# 
  7037  081D                     	;# 
  7038  081E                     	;# 
  7039  081F                     	;# 
  7040  088C                     	;# 
  7041  088D                     	;# 
  7042  088E                     	;# 
  7043  088F                     	;# 
  7044  0890                     	;# 
  7045  0891                     	;# 
  7046  0892                     	;# 
  7047  0893                     	;# 
  7048  0895                     	;# 
  7049  0896                     	;# 
  7050  0897                     	;# 
  7051  0898                     	;# 
  7052  0899                     	;# 
  7053  089A                     	;# 
  7054  089B                     	;# 
  7055  090C                     	;# 
  7056  090E                     	;# 
  7057  090F                     	;# 
  7058  091F                     	;# 
  7059  091F                     	;# 
  7060  098F                     	;# 
  7061  098F                     	;# 
  7062  0990                     	;# 
  7063  0991                     	;# 
  7064  0992                     	;# 
  7065  0993                     	;# 
  7066  0994                     	;# 
  7067  0995                     	;# 
  7068  0996                     	;# 
  7069  0997                     	;# 
  7070  0E0F                     	;# 
  7071  0E10                     	;# 
  7072  0E11                     	;# 
  7073  0E12                     	;# 
  7074  0E13                     	;# 
  7075  0E14                     	;# 
  7076  0E15                     	;# 
  7077  0E16                     	;# 
  7078  0E17                     	;# 
  7079  0E18                     	;# 
  7080  0E19                     	;# 
  7081  0E1A                     	;# 
  7082  0E1B                     	;# 
  7083  0E1C                     	;# 
  7084  0E1D                     	;# 
  7085  0E1E                     	;# 
  7086  0E1F                     	;# 
  7087  0E20                     	;# 
  7088  0E21                     	;# 
  7089  0E22                     	;# 
  7090  0E23                     	;# 
  7091  0E24                     	;# 
  7092  0E25                     	;# 
  7093  0E26                     	;# 
  7094  0E27                     	;# 
  7095  0E28                     	;# 
  7096  0E29                     	;# 
  7097  0E2A                     	;# 
  7098  0E2B                     	;# 
  7099  0E2C                     	;# 
  7100  0E2D                     	;# 
  7101  0E2E                     	;# 
  7102  0E2F                     	;# 
  7103  0E30                     	;# 
  7104  0E31                     	;# 
  7105  0E32                     	;# 
  7106  0E33                     	;# 
  7107  0E34                     	;# 
  7108  0E35                     	;# 
  7109  0E36                     	;# 
  7110  0E37                     	;# 
  7111  0E8F                     	;# 
  7112  0E90                     	;# 
  7113  0E91                     	;# 
  7114  0E92                     	;# 
  7115  0E93                     	;# 
  7116  0E94                     	;# 
  7117  0E95                     	;# 
  7118  0E96                     	;# 
  7119  0E97                     	;# 
  7120  0E9C                     	;# 
  7121  0E9D                     	;# 
  7122  0E9E                     	;# 
  7123  0EA1                     	;# 
  7124  0EA2                     	;# 
  7125  0EA3                     	;# 
  7126  0EA4                     	;# 
  7127  0EA5                     	;# 
  7128  0EA9                     	;# 
  7129  0EAA                     	;# 
  7130  0EAB                     	;# 
  7131  0EAC                     	;# 
  7132  0EB1                     	;# 
  7133  0EB2                     	;# 
  7134  0EB3                     	;# 
  7135  0EB8                     	;# 
  7136  0EB9                     	;# 
  7137  0EBA                     	;# 
  7138  0EBB                     	;# 
  7139  0EBC                     	;# 
  7140  0EBD                     	;# 
  7141  0EBE                     	;# 
  7142  0EC3                     	;# 
  7143  0EC5                     	;# 
  7144  0EC6                     	;# 
  7145  0EC7                     	;# 
  7146  0EC8                     	;# 
  7147  0EC9                     	;# 
  7148  0ECA                     	;# 
  7149  0ECB                     	;# 
  7150  0ECC                     	;# 
  7151  0F10                     	;# 
  7152  0F11                     	;# 
  7153  0F12                     	;# 
  7154  0F13                     	;# 
  7155  0F14                     	;# 
  7156  0F15                     	;# 
  7157  0F16                     	;# 
  7158  0F17                     	;# 
  7159  0F18                     	;# 
  7160  0F19                     	;# 
  7161  0F1A                     	;# 
  7162  0F1B                     	;# 
  7163  0F1C                     	;# 
  7164  0F1D                     	;# 
  7165  0F1E                     	;# 
  7166  0F1F                     	;# 
  7167  0F20                     	;# 
  7168  0F21                     	;# 
  7169  0F22                     	;# 
  7170  0F23                     	;# 
  7171  0F24                     	;# 
  7172  0F25                     	;# 
  7173  0F26                     	;# 
  7174  0F27                     	;# 
  7175  0F28                     	;# 
  7176  0F29                     	;# 
  7177  0F2A                     	;# 
  7178  0F2B                     	;# 
  7179  0F2C                     	;# 
  7180  0F2D                     	;# 
  7181  0F2E                     	;# 
  7182  0F2F                     	;# 
  7183  0F30                     	;# 
  7184  0F31                     	;# 
  7185  0F32                     	;# 
  7186  0F38                     	;# 
  7187  0F39                     	;# 
  7188  0F3A                     	;# 
  7189  0F3B                     	;# 
  7190  0F3C                     	;# 
  7191  0F3D                     	;# 
  7192  0F3E                     	;# 
  7193  0F3F                     	;# 
  7194  0F40                     	;# 
  7195  0F41                     	;# 
  7196  0F43                     	;# 
  7197  0F44                     	;# 
  7198  0F45                     	;# 
  7199  0F46                     	;# 
  7200  0F47                     	;# 
  7201  0F48                     	;# 
  7202  0F49                     	;# 
  7203  0F4A                     	;# 
  7204  0F4B                     	;# 
  7205  0F4C                     	;# 
  7206  0F4E                     	;# 
  7207  0F4F                     	;# 
  7208  0F50                     	;# 
  7209  0F51                     	;# 
  7210  0F52                     	;# 
  7211  0F53                     	;# 
  7212  0F54                     	;# 
  7213  0F55                     	;# 
  7214  0F56                     	;# 
  7215  0F57                     	;# 
  7216  0F59                     	;# 
  7217  0F5A                     	;# 
  7218  0F5B                     	;# 
  7219  0F5C                     	;# 
  7220  0F5D                     	;# 
  7221  0F61                     	;# 
  7222  0F62                     	;# 
  7223  0F64                     	;# 
  7224  0F65                     	;# 
  7225  0F66                     	;# 
  7226  0F67                     	;# 
  7227  0F68                     	;# 
  7228  0F69                     	;# 
  7229  0F6A                     	;# 
  7230  0F6B                     	;# 
  7231  0F6C                     	;# 
  7232  0F6D                     	;# 
  7233  0FE4                     	;# 
  7234  0FE5                     	;# 
  7235  0FE6                     	;# 
  7236  0FE7                     	;# 
  7237  0FE8                     	;# 
  7238  0FE9                     	;# 
  7239  0FEA                     	;# 
  7240  0FEB                     	;# 
  7241  0FED                     	;# 
  7242  0FEE                     	;# 
  7243  0FEF                     	;# 
  7244  0000                     	;# 
  7245  0001                     	;# 
  7246  0002                     	;# 
  7247  0003                     	;# 
  7248  0004                     	;# 
  7249  0005                     	;# 
  7250  0006                     	;# 
  7251  0007                     	;# 
  7252  0008                     	;# 
  7253  0009                     	;# 
  7254  000A                     	;# 
  7255  000B                     	;# 
  7256  000C                     	;# 
  7257  000D                     	;# 
  7258  000E                     	;# 
  7259  000F                     	;# 
  7260  0010                     	;# 
  7261  0011                     	;# 
  7262  0012                     	;# 
  7263  0013                     	;# 
  7264  0014                     	;# 
  7265  0015                     	;# 
  7266  0016                     	;# 
  7267  0017                     	;# 
  7268  0018                     	;# 
  7269  0019                     	;# 
  7270  001A                     	;# 
  7271  001C                     	;# 
  7272  001C                     	;# 
  7273  001D                     	;# 
  7274  001D                     	;# 
  7275  001E                     	;# 
  7276  001F                     	;# 
  7277  008C                     	;# 
  7278  008C                     	;# 
  7279  008D                     	;# 
  7280  008E                     	;# 
  7281  008E                     	;# 
  7282  008F                     	;# 
  7283  0090                     	;# 
  7284  0090                     	;# 
  7285  0091                     	;# 
  7286  0093                     	;# 
  7287  0094                     	;# 
  7288  0095                     	;# 
  7289  0096                     	;# 
  7290  0097                     	;# 
  7291  0098                     	;# 
  7292  0099                     	;# 
  7293  009A                     	;# 
  7294  009B                     	;# 
  7295  009C                     	;# 
  7296  009D                     	;# 
  7297  009E                     	;# 
  7298  010C                     	;# 
  7299  010D                     	;# 
  7300  010E                     	;# 
  7301  010E                     	;# 
  7302  010F                     	;# 
  7303  0110                     	;# 
  7304  0110                     	;# 
  7305  0111                     	;# 
  7306  0112                     	;# 
  7307  0112                     	;# 
  7308  0113                     	;# 
  7309  0114                     	;# 
  7310  0114                     	;# 
  7311  0115                     	;# 
  7312  0116                     	;# 
  7313  0116                     	;# 
  7314  0117                     	;# 
  7315  0119                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  011A                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011B                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011C                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011D                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011E                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011F                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  018C                     	;# 
  7341  018D                     	;# 
  7342  018E                     	;# 
  7343  018F                     	;# 
  7344  0190                     	;# 
  7345  0191                     	;# 
  7346  0192                     	;# 
  7347  0196                     	;# 
  7348  0197                     	;# 
  7349  0198                     	;# 
  7350  0199                     	;# 
  7351  019A                     	;# 
  7352  019B                     	;# 
  7353  019C                     	;# 
  7354  020C                     	;# 
  7355  020C                     	;# 
  7356  020D                     	;# 
  7357  020E                     	;# 
  7358  020F                     	;# 
  7359  020F                     	;# 
  7360  0210                     	;# 
  7361  0210                     	;# 
  7362  0211                     	;# 
  7363  0211                     	;# 
  7364  0212                     	;# 
  7365  0212                     	;# 
  7366  0213                     	;# 
  7367  0214                     	;# 
  7368  0215                     	;# 
  7369  0215                     	;# 
  7370  0216                     	;# 
  7371  0216                     	;# 
  7372  0217                     	;# 
  7373  0217                     	;# 
  7374  0218                     	;# 
  7375  0218                     	;# 
  7376  0219                     	;# 
  7377  021A                     	;# 
  7378  021B                     	;# 
  7379  021B                     	;# 
  7380  021C                     	;# 
  7381  021C                     	;# 
  7382  021D                     	;# 
  7383  021D                     	;# 
  7384  021E                     	;# 
  7385  021F                     	;# 
  7386  028C                     	;# 
  7387  028C                     	;# 
  7388  028D                     	;# 
  7389  028D                     	;# 
  7390  028E                     	;# 
  7391  028F                     	;# 
  7392  0290                     	;# 
  7393  0290                     	;# 
  7394  0291                     	;# 
  7395  0292                     	;# 
  7396  0292                     	;# 
  7397  0293                     	;# 
  7398  0293                     	;# 
  7399  0294                     	;# 
  7400  0295                     	;# 
  7401  0296                     	;# 
  7402  0296                     	;# 
  7403  0297                     	;# 
  7404  0298                     	;# 
  7405  0298                     	;# 
  7406  0299                     	;# 
  7407  0299                     	;# 
  7408  029A                     	;# 
  7409  029B                     	;# 
  7410  029C                     	;# 
  7411  029C                     	;# 
  7412  029D                     	;# 
  7413  030C                     	;# 
  7414  030C                     	;# 
  7415  030D                     	;# 
  7416  030E                     	;# 
  7417  030F                     	;# 
  7418  0310                     	;# 
  7419  0310                     	;# 
  7420  0311                     	;# 
  7421  0312                     	;# 
  7422  0313                     	;# 
  7423  0314                     	;# 
  7424  0314                     	;# 
  7425  0315                     	;# 
  7426  0316                     	;# 
  7427  0317                     	;# 
  7428  0318                     	;# 
  7429  0318                     	;# 
  7430  0319                     	;# 
  7431  031A                     	;# 
  7432  031B                     	;# 
  7433  031C                     	;# 
  7434  031C                     	;# 
  7435  031D                     	;# 
  7436  031E                     	;# 
  7437  031F                     	;# 
  7438  038C                     	;# 
  7439  038C                     	;# 
  7440  038D                     	;# 
  7441  038E                     	;# 
  7442  0390                     	;# 
  7443  0390                     	;# 
  7444  0391                     	;# 
  7445  0392                     	;# 
  7446  040C                     	;# 
  7447  040D                     	;# 
  7448  040E                     	;# 
  7449  040F                     	;# 
  7450  0410                     	;# 
  7451  0411                     	;# 
  7452  0416                     	;# 
  7453  0416                     	;# 
  7454  0417                     	;# 
  7455  0418                     	;# 
  7456  0418                     	;# 
  7457  0419                     	;# 
  7458  041A                     	;# 
  7459  041A                     	;# 
  7460  041B                     	;# 
  7461  041C                     	;# 
  7462  041C                     	;# 
  7463  041D                     	;# 
  7464  041E                     	;# 
  7465  041F                     	;# 
  7466  048C                     	;# 
  7467  048C                     	;# 
  7468  048D                     	;# 
  7469  048E                     	;# 
  7470  048F                     	;# 
  7471  048F                     	;# 
  7472  0490                     	;# 
  7473  0491                     	;# 
  7474  0492                     	;# 
  7475  0492                     	;# 
  7476  0493                     	;# 
  7477  0494                     	;# 
  7478  0495                     	;# 
  7479  0495                     	;# 
  7480  0496                     	;# 
  7481  0497                     	;# 
  7482  0498                     	;# 
  7483  0499                     	;# 
  7484  049A                     	;# 
  7485  049B                     	;# 
  7486  049C                     	;# 
  7487  049D                     	;# 
  7488  050C                     	;# 
  7489  050C                     	;# 
  7490  050D                     	;# 
  7491  050E                     	;# 
  7492  050F                     	;# 
  7493  050F                     	;# 
  7494  0510                     	;# 
  7495  0511                     	;# 
  7496  0512                     	;# 
  7497  0512                     	;# 
  7498  0513                     	;# 
  7499  0514                     	;# 
  7500  0515                     	;# 
  7501  0515                     	;# 
  7502  0516                     	;# 
  7503  0517                     	;# 
  7504  0518                     	;# 
  7505  0519                     	;# 
  7506  051A                     	;# 
  7507  051B                     	;# 
  7508  051C                     	;# 
  7509  051D                     	;# 
  7510  058C                     	;# 
  7511  058C                     	;# 
  7512  058D                     	;# 
  7513  058E                     	;# 
  7514  058F                     	;# 
  7515  058F                     	;# 
  7516  0590                     	;# 
  7517  0591                     	;# 
  7518  0592                     	;# 
  7519  0593                     	;# 
  7520  060C                     	;# 
  7521  060D                     	;# 
  7522  060E                     	;# 
  7523  060F                     	;# 
  7524  0610                     	;# 
  7525  0611                     	;# 
  7526  0612                     	;# 
  7527  0613                     	;# 
  7528  0614                     	;# 
  7529  0616                     	;# 
  7530  0617                     	;# 
  7531  0618                     	;# 
  7532  0619                     	;# 
  7533  061A                     	;# 
  7534  061B                     	;# 
  7535  061C                     	;# 
  7536  061D                     	;# 
  7537  061E                     	;# 
  7538  068C                     	;# 
  7539  068D                     	;# 
  7540  068E                     	;# 
  7541  068F                     	;# 
  7542  0690                     	;# 
  7543  0691                     	;# 
  7544  0692                     	;# 
  7545  0693                     	;# 
  7546  0694                     	;# 
  7547  070C                     	;# 
  7548  070D                     	;# 
  7549  070E                     	;# 
  7550  070F                     	;# 
  7551  0710                     	;# 
  7552  0711                     	;# 
  7553  0712                     	;# 
  7554  0713                     	;# 
  7555  0714                     	;# 
  7556  0716                     	;# 
  7557  0717                     	;# 
  7558  0718                     	;# 
  7559  0719                     	;# 
  7560  071A                     	;# 
  7561  071B                     	;# 
  7562  071C                     	;# 
  7563  071D                     	;# 
  7564  071E                     	;# 
  7565  0796                     	;# 
  7566  0797                     	;# 
  7567  0798                     	;# 
  7568  0799                     	;# 
  7569  079A                     	;# 
  7570  079B                     	;# 
  7571  080C                     	;# 
  7572  080D                     	;# 
  7573  080E                     	;# 
  7574  080F                     	;# 
  7575  0810                     	;# 
  7576  0811                     	;# 
  7577  0812                     	;# 
  7578  0813                     	;# 
  7579  0814                     	;# 
  7580  081A                     	;# 
  7581  081B                     	;# 
  7582  081C                     	;# 
  7583  081D                     	;# 
  7584  081E                     	;# 
  7585  081F                     	;# 
  7586  088C                     	;# 
  7587  088D                     	;# 
  7588  088E                     	;# 
  7589  088F                     	;# 
  7590  0890                     	;# 
  7591  0891                     	;# 
  7592  0892                     	;# 
  7593  0893                     	;# 
  7594  0895                     	;# 
  7595  0896                     	;# 
  7596  0897                     	;# 
  7597  0898                     	;# 
  7598  0899                     	;# 
  7599  089A                     	;# 
  7600  089B                     	;# 
  7601  090C                     	;# 
  7602  090E                     	;# 
  7603  090F                     	;# 
  7604  091F                     	;# 
  7605  091F                     	;# 
  7606  098F                     	;# 
  7607  098F                     	;# 
  7608  0990                     	;# 
  7609  0991                     	;# 
  7610  0992                     	;# 
  7611  0993                     	;# 
  7612  0994                     	;# 
  7613  0995                     	;# 
  7614  0996                     	;# 
  7615  0997                     	;# 
  7616  0E0F                     	;# 
  7617  0E10                     	;# 
  7618  0E11                     	;# 
  7619  0E12                     	;# 
  7620  0E13                     	;# 
  7621  0E14                     	;# 
  7622  0E15                     	;# 
  7623  0E16                     	;# 
  7624  0E17                     	;# 
  7625  0E18                     	;# 
  7626  0E19                     	;# 
  7627  0E1A                     	;# 
  7628  0E1B                     	;# 
  7629  0E1C                     	;# 
  7630  0E1D                     	;# 
  7631  0E1E                     	;# 
  7632  0E1F                     	;# 
  7633  0E20                     	;# 
  7634  0E21                     	;# 
  7635  0E22                     	;# 
  7636  0E23                     	;# 
  7637  0E24                     	;# 
  7638  0E25                     	;# 
  7639  0E26                     	;# 
  7640  0E27                     	;# 
  7641  0E28                     	;# 
  7642  0E29                     	;# 
  7643  0E2A                     	;# 
  7644  0E2B                     	;# 
  7645  0E2C                     	;# 
  7646  0E2D                     	;# 
  7647  0E2E                     	;# 
  7648  0E2F                     	;# 
  7649  0E30                     	;# 
  7650  0E31                     	;# 
  7651  0E32                     	;# 
  7652  0E33                     	;# 
  7653  0E34                     	;# 
  7654  0E35                     	;# 
  7655  0E36                     	;# 
  7656  0E37                     	;# 
  7657  0E8F                     	;# 
  7658  0E90                     	;# 
  7659  0E91                     	;# 
  7660  0E92                     	;# 
  7661  0E93                     	;# 
  7662  0E94                     	;# 
  7663  0E95                     	;# 
  7664  0E96                     	;# 
  7665  0E97                     	;# 
  7666  0E9C                     	;# 
  7667  0E9D                     	;# 
  7668  0E9E                     	;# 
  7669  0EA1                     	;# 
  7670  0EA2                     	;# 
  7671  0EA3                     	;# 
  7672  0EA4                     	;# 
  7673  0EA5                     	;# 
  7674  0EA9                     	;# 
  7675  0EAA                     	;# 
  7676  0EAB                     	;# 
  7677  0EAC                     	;# 
  7678  0EB1                     	;# 
  7679  0EB2                     	;# 
  7680  0EB3                     	;# 
  7681  0EB8                     	;# 
  7682  0EB9                     	;# 
  7683  0EBA                     	;# 
  7684  0EBB                     	;# 
  7685  0EBC                     	;# 
  7686  0EBD                     	;# 
  7687  0EBE                     	;# 
  7688  0EC3                     	;# 
  7689  0EC5                     	;# 
  7690  0EC6                     	;# 
  7691  0EC7                     	;# 
  7692  0EC8                     	;# 
  7693  0EC9                     	;# 
  7694  0ECA                     	;# 
  7695  0ECB                     	;# 
  7696  0ECC                     	;# 
  7697  0F10                     	;# 
  7698  0F11                     	;# 
  7699  0F12                     	;# 
  7700  0F13                     	;# 
  7701  0F14                     	;# 
  7702  0F15                     	;# 
  7703  0F16                     	;# 
  7704  0F17                     	;# 
  7705  0F18                     	;# 
  7706  0F19                     	;# 
  7707  0F1A                     	;# 
  7708  0F1B                     	;# 
  7709  0F1C                     	;# 
  7710  0F1D                     	;# 
  7711  0F1E                     	;# 
  7712  0F1F                     	;# 
  7713  0F20                     	;# 
  7714  0F21                     	;# 
  7715  0F22                     	;# 
  7716  0F23                     	;# 
  7717  0F24                     	;# 
  7718  0F25                     	;# 
  7719  0F26                     	;# 
  7720  0F27                     	;# 
  7721  0F28                     	;# 
  7722  0F29                     	;# 
  7723  0F2A                     	;# 
  7724  0F2B                     	;# 
  7725  0F2C                     	;# 
  7726  0F2D                     	;# 
  7727  0F2E                     	;# 
  7728  0F2F                     	;# 
  7729  0F30                     	;# 
  7730  0F31                     	;# 
  7731  0F32                     	;# 
  7732  0F38                     	;# 
  7733  0F39                     	;# 
  7734  0F3A                     	;# 
  7735  0F3B                     	;# 
  7736  0F3C                     	;# 
  7737  0F3D                     	;# 
  7738  0F3E                     	;# 
  7739  0F3F                     	;# 
  7740  0F40                     	;# 
  7741  0F41                     	;# 
  7742  0F43                     	;# 
  7743  0F44                     	;# 
  7744  0F45                     	;# 
  7745  0F46                     	;# 
  7746  0F47                     	;# 
  7747  0F48                     	;# 
  7748  0F49                     	;# 
  7749  0F4A                     	;# 
  7750  0F4B                     	;# 
  7751  0F4C                     	;# 
  7752  0F4E                     	;# 
  7753  0F4F                     	;# 
  7754  0F50                     	;# 
  7755  0F51                     	;# 
  7756  0F52                     	;# 
  7757  0F53                     	;# 
  7758  0F54                     	;# 
  7759  0F55                     	;# 
  7760  0F56                     	;# 
  7761  0F57                     	;# 
  7762  0F59                     	;# 
  7763  0F5A                     	;# 
  7764  0F5B                     	;# 
  7765  0F5C                     	;# 
  7766  0F5D                     	;# 
  7767  0F61                     	;# 
  7768  0F62                     	;# 
  7769  0F64                     	;# 
  7770  0F65                     	;# 
  7771  0F66                     	;# 
  7772  0F67                     	;# 
  7773  0F68                     	;# 
  7774  0F69                     	;# 
  7775  0F6A                     	;# 
  7776  0F6B                     	;# 
  7777  0F6C                     	;# 
  7778  0F6D                     	;# 
  7779  0FE4                     	;# 
  7780  0FE5                     	;# 
  7781  0FE6                     	;# 
  7782  0FE7                     	;# 
  7783  0FE8                     	;# 
  7784  0FE9                     	;# 
  7785  0FEA                     	;# 
  7786  0FEB                     	;# 
  7787  0FED                     	;# 
  7788  0FEE                     	;# 
  7789  0FEF                     	;# 
  7790  0000                     	;# 
  7791  0001                     	;# 
  7792  0002                     	;# 
  7793  0003                     	;# 
  7794  0004                     	;# 
  7795  0005                     	;# 
  7796  0006                     	;# 
  7797  0007                     	;# 
  7798  0008                     	;# 
  7799  0009                     	;# 
  7800  000A                     	;# 
  7801  000B                     	;# 
  7802  000C                     	;# 
  7803  000D                     	;# 
  7804  000E                     	;# 
  7805  000F                     	;# 
  7806  0010                     	;# 
  7807  0011                     	;# 
  7808  0012                     	;# 
  7809  0013                     	;# 
  7810  0014                     	;# 
  7811  0015                     	;# 
  7812  0016                     	;# 
  7813  0017                     	;# 
  7814  0018                     	;# 
  7815  0019                     	;# 
  7816  001A                     	;# 
  7817  001C                     	;# 
  7818  001C                     	;# 
  7819  001D                     	;# 
  7820  001D                     	;# 
  7821  001E                     	;# 
  7822  001F                     	;# 
  7823  008C                     	;# 
  7824  008C                     	;# 
  7825  008D                     	;# 
  7826  008E                     	;# 
  7827  008E                     	;# 
  7828  008F                     	;# 
  7829  0090                     	;# 
  7830  0090                     	;# 
  7831  0091                     	;# 
  7832  0093                     	;# 
  7833  0094                     	;# 
  7834  0095                     	;# 
  7835  0096                     	;# 
  7836  0097                     	;# 
  7837  0098                     	;# 
  7838  0099                     	;# 
  7839  009A                     	;# 
  7840  009B                     	;# 
  7841  009C                     	;# 
  7842  009D                     	;# 
  7843  009E                     	;# 
  7844  010C                     	;# 
  7845  010D                     	;# 
  7846  010E                     	;# 
  7847  010E                     	;# 
  7848  010F                     	;# 
  7849  0110                     	;# 
  7850  0110                     	;# 
  7851  0111                     	;# 
  7852  0112                     	;# 
  7853  0112                     	;# 
  7854  0113                     	;# 
  7855  0114                     	;# 
  7856  0114                     	;# 
  7857  0115                     	;# 
  7858  0116                     	;# 
  7859  0116                     	;# 
  7860  0117                     	;# 
  7861  0119                     	;# 
  7862  0119                     	;# 
  7863  0119                     	;# 
  7864  011A                     	;# 
  7865  011A                     	;# 
  7866  011A                     	;# 
  7867  011B                     	;# 
  7868  011B                     	;# 
  7869  011B                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011C                     	;# 
  7873  011C                     	;# 
  7874  011C                     	;# 
  7875  011D                     	;# 
  7876  011D                     	;# 
  7877  011D                     	;# 
  7878  011E                     	;# 
  7879  011E                     	;# 
  7880  011E                     	;# 
  7881  011F                     	;# 
  7882  011F                     	;# 
  7883  011F                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  018C                     	;# 
  7887  018D                     	;# 
  7888  018E                     	;# 
  7889  018F                     	;# 
  7890  0190                     	;# 
  7891  0191                     	;# 
  7892  0192                     	;# 
  7893  0196                     	;# 
  7894  0197                     	;# 
  7895  0198                     	;# 
  7896  0199                     	;# 
  7897  019A                     	;# 
  7898  019B                     	;# 
  7899  019C                     	;# 
  7900  020C                     	;# 
  7901  020C                     	;# 
  7902  020D                     	;# 
  7903  020E                     	;# 
  7904  020F                     	;# 
  7905  020F                     	;# 
  7906  0210                     	;# 
  7907  0210                     	;# 
  7908  0211                     	;# 
  7909  0211                     	;# 
  7910  0212                     	;# 
  7911  0212                     	;# 
  7912  0213                     	;# 
  7913  0214                     	;# 
  7914  0215                     	;# 
  7915  0215                     	;# 
  7916  0216                     	;# 
  7917  0216                     	;# 
  7918  0217                     	;# 
  7919  0217                     	;# 
  7920  0218                     	;# 
  7921  0218                     	;# 
  7922  0219                     	;# 
  7923  021A                     	;# 
  7924  021B                     	;# 
  7925  021B                     	;# 
  7926  021C                     	;# 
  7927  021C                     	;# 
  7928  021D                     	;# 
  7929  021D                     	;# 
  7930  021E                     	;# 
  7931  021F                     	;# 
  7932  028C                     	;# 
  7933  028C                     	;# 
  7934  028D                     	;# 
  7935  028D                     	;# 
  7936  028E                     	;# 
  7937  028F                     	;# 
  7938  0290                     	;# 
  7939  0290                     	;# 
  7940  0291                     	;# 
  7941  0292                     	;# 
  7942  0292                     	;# 
  7943  0293                     	;# 
  7944  0293                     	;# 
  7945  0294                     	;# 
  7946  0295                     	;# 
  7947  0296                     	;# 
  7948  0296                     	;# 
  7949  0297                     	;# 
  7950  0298                     	;# 
  7951  0298                     	;# 
  7952  0299                     	;# 
  7953  0299                     	;# 
  7954  029A                     	;# 
  7955  029B                     	;# 
  7956  029C                     	;# 
  7957  029C                     	;# 
  7958  029D                     	;# 
  7959  030C                     	;# 
  7960  030C                     	;# 
  7961  030D                     	;# 
  7962  030E                     	;# 
  7963  030F                     	;# 
  7964  0310                     	;# 
  7965  0310                     	;# 
  7966  0311                     	;# 
  7967  0312                     	;# 
  7968  0313                     	;# 
  7969  0314                     	;# 
  7970  0314                     	;# 
  7971  0315                     	;# 
  7972  0316                     	;# 
  7973  0317                     	;# 
  7974  0318                     	;# 
  7975  0318                     	;# 
  7976  0319                     	;# 
  7977  031A                     	;# 
  7978  031B                     	;# 
  7979  031C                     	;# 
  7980  031C                     	;# 
  7981  031D                     	;# 
  7982  031E                     	;# 
  7983  031F                     	;# 
  7984  038C                     	;# 
  7985  038C                     	;# 
  7986  038D                     	;# 
  7987  038E                     	;# 
  7988  0390                     	;# 
  7989  0390                     	;# 
  7990  0391                     	;# 
  7991  0392                     	;# 
  7992  040C                     	;# 
  7993  040D                     	;# 
  7994  040E                     	;# 
  7995  040F                     	;# 
  7996  0410                     	;# 
  7997  0411                     	;# 
  7998  0416                     	;# 
  7999  0416                     	;# 
  8000  0417                     	;# 
  8001  0418                     	;# 
  8002  0418                     	;# 
  8003  0419                     	;# 
  8004  041A                     	;# 
  8005  041A                     	;# 
  8006  041B                     	;# 
  8007  041C                     	;# 
  8008  041C                     	;# 
  8009  041D                     	;# 
  8010  041E                     	;# 
  8011  041F                     	;# 
  8012  048C                     	;# 
  8013  048C                     	;# 
  8014  048D                     	;# 
  8015  048E                     	;# 
  8016  048F                     	;# 
  8017  048F                     	;# 
  8018  0490                     	;# 
  8019  0491                     	;# 
  8020  0492                     	;# 
  8021  0492                     	;# 
  8022  0493                     	;# 
  8023  0494                     	;# 
  8024  0495                     	;# 
  8025  0495                     	;# 
  8026  0496                     	;# 
  8027  0497                     	;# 
  8028  0498                     	;# 
  8029  0499                     	;# 
  8030  049A                     	;# 
  8031  049B                     	;# 
  8032  049C                     	;# 
  8033  049D                     	;# 
  8034  050C                     	;# 
  8035  050C                     	;# 
  8036  050D                     	;# 
  8037  050E                     	;# 
  8038  050F                     	;# 
  8039  050F                     	;# 
  8040  0510                     	;# 
  8041  0511                     	;# 
  8042  0512                     	;# 
  8043  0512                     	;# 
  8044  0513                     	;# 
  8045  0514                     	;# 
  8046  0515                     	;# 
  8047  0515                     	;# 
  8048  0516                     	;# 
  8049  0517                     	;# 
  8050  0518                     	;# 
  8051  0519                     	;# 
  8052  051A                     	;# 
  8053  051B                     	;# 
  8054  051C                     	;# 
  8055  051D                     	;# 
  8056  058C                     	;# 
  8057  058C                     	;# 
  8058  058D                     	;# 
  8059  058E                     	;# 
  8060  058F                     	;# 
  8061  058F                     	;# 
  8062  0590                     	;# 
  8063  0591                     	;# 
  8064  0592                     	;# 
  8065  0593                     	;# 
  8066  060C                     	;# 
  8067  060D                     	;# 
  8068  060E                     	;# 
  8069  060F                     	;# 
  8070  0610                     	;# 
  8071  0611                     	;# 
  8072  0612                     	;# 
  8073  0613                     	;# 
  8074  0614                     	;# 
  8075  0616                     	;# 
  8076  0617                     	;# 
  8077  0618                     	;# 
  8078  0619                     	;# 
  8079  061A                     	;# 
  8080  061B                     	;# 
  8081  061C                     	;# 
  8082  061D                     	;# 
  8083  061E                     	;# 
  8084  068C                     	;# 
  8085  068D                     	;# 
  8086  068E                     	;# 
  8087  068F                     	;# 
  8088  0690                     	;# 
  8089  0691                     	;# 
  8090  0692                     	;# 
  8091  0693                     	;# 
  8092  0694                     	;# 
  8093  070C                     	;# 
  8094  070D                     	;# 
  8095  070E                     	;# 
  8096  070F                     	;# 
  8097  0710                     	;# 
  8098  0711                     	;# 
  8099  0712                     	;# 
  8100  0713                     	;# 
  8101  0714                     	;# 
  8102  0716                     	;# 
  8103  0717                     	;# 
  8104  0718                     	;# 
  8105  0719                     	;# 
  8106  071A                     	;# 
  8107  071B                     	;# 
  8108  071C                     	;# 
  8109  071D                     	;# 
  8110  071E                     	;# 
  8111  0796                     	;# 
  8112  0797                     	;# 
  8113  0798                     	;# 
  8114  0799                     	;# 
  8115  079A                     	;# 
  8116  079B                     	;# 
  8117  080C                     	;# 
  8118  080D                     	;# 
  8119  080E                     	;# 
  8120  080F                     	;# 
  8121  0810                     	;# 
  8122  0811                     	;# 
  8123  0812                     	;# 
  8124  0813                     	;# 
  8125  0814                     	;# 
  8126  081A                     	;# 
  8127  081B                     	;# 
  8128  081C                     	;# 
  8129  081D                     	;# 
  8130  081E                     	;# 
  8131  081F                     	;# 
  8132  088C                     	;# 
  8133  088D                     	;# 
  8134  088E                     	;# 
  8135  088F                     	;# 
  8136  0890                     	;# 
  8137  0891                     	;# 
  8138  0892                     	;# 
  8139  0893                     	;# 
  8140  0895                     	;# 
  8141  0896                     	;# 
  8142  0897                     	;# 
  8143  0898                     	;# 
  8144  0899                     	;# 
  8145  089A                     	;# 
  8146  089B                     	;# 
  8147  090C                     	;# 
  8148  090E                     	;# 
  8149  090F                     	;# 
  8150  091F                     	;# 
  8151  091F                     	;# 
  8152  098F                     	;# 
  8153  098F                     	;# 
  8154  0990                     	;# 
  8155  0991                     	;# 
  8156  0992                     	;# 
  8157  0993                     	;# 
  8158  0994                     	;# 
  8159  0995                     	;# 
  8160  0996                     	;# 
  8161  0997                     	;# 
  8162  0E0F                     	;# 
  8163  0E10                     	;# 
  8164  0E11                     	;# 
  8165  0E12                     	;# 
  8166  0E13                     	;# 
  8167  0E14                     	;# 
  8168  0E15                     	;# 
  8169  0E16                     	;# 
  8170  0E17                     	;# 
  8171  0E18                     	;# 
  8172  0E19                     	;# 
  8173  0E1A                     	;# 
  8174  0E1B                     	;# 
  8175  0E1C                     	;# 
  8176  0E1D                     	;# 
  8177  0E1E                     	;# 
  8178  0E1F                     	;# 
  8179  0E20                     	;# 
  8180  0E21                     	;# 
  8181  0E22                     	;# 
  8182  0E23                     	;# 
  8183  0E24                     	;# 
  8184  0E25                     	;# 
  8185  0E26                     	;# 
  8186  0E27                     	;# 
  8187  0E28                     	;# 
  8188  0E29                     	;# 
  8189  0E2A                     	;# 
  8190  0E2B                     	;# 
  8191  0E2C                     	;# 
  8192  0E2D                     	;# 
  8193  0E2E                     	;# 
  8194  0E2F                     	;# 
  8195  0E30                     	;# 
  8196  0E31                     	;# 
  8197  0E32                     	;# 
  8198  0E33                     	;# 
  8199  0E34                     	;# 
  8200  0E35                     	;# 
  8201  0E36                     	;# 
  8202  0E37                     	;# 
  8203  0E8F                     	;# 
  8204  0E90                     	;# 
  8205  0E91                     	;# 
  8206  0E92                     	;# 
  8207  0E93                     	;# 
  8208  0E94                     	;# 
  8209  0E95                     	;# 
  8210  0E96                     	;# 
  8211  0E97                     	;# 
  8212  0E9C                     	;# 
  8213  0E9D                     	;# 
  8214  0E9E                     	;# 
  8215  0EA1                     	;# 
  8216  0EA2                     	;# 
  8217  0EA3                     	;# 
  8218  0EA4                     	;# 
  8219  0EA5                     	;# 
  8220  0EA9                     	;# 
  8221  0EAA                     	;# 
  8222  0EAB                     	;# 
  8223  0EAC                     	;# 
  8224  0EB1                     	;# 
  8225  0EB2                     	;# 
  8226  0EB3                     	;# 
  8227  0EB8                     	;# 
  8228  0EB9                     	;# 
  8229  0EBA                     	;# 
  8230  0EBB                     	;# 
  8231  0EBC                     	;# 
  8232  0EBD                     	;# 
  8233  0EBE                     	;# 
  8234  0EC3                     	;# 
  8235  0EC5                     	;# 
  8236  0EC6                     	;# 
  8237  0EC7                     	;# 
  8238  0EC8                     	;# 
  8239  0EC9                     	;# 
  8240  0ECA                     	;# 
  8241  0ECB                     	;# 
  8242  0ECC                     	;# 
  8243  0F10                     	;# 
  8244  0F11                     	;# 
  8245  0F12                     	;# 
  8246  0F13                     	;# 
  8247  0F14                     	;# 
  8248  0F15                     	;# 
  8249  0F16                     	;# 
  8250  0F17                     	;# 
  8251  0F18                     	;# 
  8252  0F19                     	;# 
  8253  0F1A                     	;# 
  8254  0F1B                     	;# 
  8255  0F1C                     	;# 
  8256  0F1D                     	;# 
  8257  0F1E                     	;# 
  8258  0F1F                     	;# 
  8259  0F20                     	;# 
  8260  0F21                     	;# 
  8261  0F22                     	;# 
  8262  0F23                     	;# 
  8263  0F24                     	;# 
  8264  0F25                     	;# 
  8265  0F26                     	;# 
  8266  0F27                     	;# 
  8267  0F28                     	;# 
  8268  0F29                     	;# 
  8269  0F2A                     	;# 
  8270  0F2B                     	;# 
  8271  0F2C                     	;# 
  8272  0F2D                     	;# 
  8273  0F2E                     	;# 
  8274  0F2F                     	;# 
  8275  0F30                     	;# 
  8276  0F31                     	;# 
  8277  0F32                     	;# 
  8278  0F38                     	;# 
  8279  0F39                     	;# 
  8280  0F3A                     	;# 
  8281  0F3B                     	;# 
  8282  0F3C                     	;# 
  8283  0F3D                     	;# 
  8284  0F3E                     	;# 
  8285  0F3F                     	;# 
  8286  0F40                     	;# 
  8287  0F41                     	;# 
  8288  0F43                     	;# 
  8289  0F44                     	;# 
  8290  0F45                     	;# 
  8291  0F46                     	;# 
  8292  0F47                     	;# 
  8293  0F48                     	;# 
  8294  0F49                     	;# 
  8295  0F4A                     	;# 
  8296  0F4B                     	;# 
  8297  0F4C                     	;# 
  8298  0F4E                     	;# 
  8299  0F4F                     	;# 
  8300  0F50                     	;# 
  8301  0F51                     	;# 
  8302  0F52                     	;# 
  8303  0F53                     	;# 
  8304  0F54                     	;# 
  8305  0F55                     	;# 
  8306  0F56                     	;# 
  8307  0F57                     	;# 
  8308  0F59                     	;# 
  8309  0F5A                     	;# 
  8310  0F5B                     	;# 
  8311  0F5C                     	;# 
  8312  0F5D                     	;# 
  8313  0F61                     	;# 
  8314  0F62                     	;# 
  8315  0F64                     	;# 
  8316  0F65                     	;# 
  8317  0F66                     	;# 
  8318  0F67                     	;# 
  8319  0F68                     	;# 
  8320  0F69                     	;# 
  8321  0F6A                     	;# 
  8322  0F6B                     	;# 
  8323  0F6C                     	;# 
  8324  0F6D                     	;# 
  8325  0FE4                     	;# 
  8326  0FE5                     	;# 
  8327  0FE6                     	;# 
  8328  0FE7                     	;# 
  8329  0FE8                     	;# 
  8330  0FE9                     	;# 
  8331  0FEA                     	;# 
  8332  0FEB                     	;# 
  8333  0FED                     	;# 
  8334  0FEE                     	;# 
  8335  0FEF                     	;# 
  8336  0000                     	;# 
  8337  0001                     	;# 
  8338  0002                     	;# 
  8339  0003                     	;# 
  8340  0004                     	;# 
  8341  0005                     	;# 
  8342  0006                     	;# 
  8343  0007                     	;# 
  8344  0008                     	;# 
  8345  0009                     	;# 
  8346  000A                     	;# 
  8347  000B                     	;# 
  8348  000C                     	;# 
  8349  000D                     	;# 
  8350  000E                     	;# 
  8351  000F                     	;# 
  8352  0010                     	;# 
  8353  0011                     	;# 
  8354  0012                     	;# 
  8355  0013                     	;# 
  8356  0014                     	;# 
  8357  0015                     	;# 
  8358  0016                     	;# 
  8359  0017                     	;# 
  8360  0018                     	;# 
  8361  0019                     	;# 
  8362  001A                     	;# 
  8363  001C                     	;# 
  8364  001C                     	;# 
  8365  001D                     	;# 
  8366  001D                     	;# 
  8367  001E                     	;# 
  8368  001F                     	;# 
  8369  008C                     	;# 
  8370  008C                     	;# 
  8371  008D                     	;# 
  8372  008E                     	;# 
  8373  008E                     	;# 
  8374  008F                     	;# 
  8375  0090                     	;# 
  8376  0090                     	;# 
  8377  0091                     	;# 
  8378  0093                     	;# 
  8379  0094                     	;# 
  8380  0095                     	;# 
  8381  0096                     	;# 
  8382  0097                     	;# 
  8383  0098                     	;# 
  8384  0099                     	;# 
  8385  009A                     	;# 
  8386  009B                     	;# 
  8387  009C                     	;# 
  8388  009D                     	;# 
  8389  009E                     	;# 
  8390  010C                     	;# 
  8391  010D                     	;# 
  8392  010E                     	;# 
  8393  010E                     	;# 
  8394  010F                     	;# 
  8395  0110                     	;# 
  8396  0110                     	;# 
  8397  0111                     	;# 
  8398  0112                     	;# 
  8399  0112                     	;# 
  8400  0113                     	;# 
  8401  0114                     	;# 
  8402  0114                     	;# 
  8403  0115                     	;# 
  8404  0116                     	;# 
  8405  0116                     	;# 
  8406  0117                     	;# 
  8407  0119                     	;# 
  8408  0119                     	;# 
  8409  0119                     	;# 
  8410  011A                     	;# 
  8411  011A                     	;# 
  8412  011A                     	;# 
  8413  011B                     	;# 
  8414  011B                     	;# 
  8415  011B                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011C                     	;# 
  8419  011C                     	;# 
  8420  011C                     	;# 
  8421  011D                     	;# 
  8422  011D                     	;# 
  8423  011D                     	;# 
  8424  011E                     	;# 
  8425  011E                     	;# 
  8426  011E                     	;# 
  8427  011F                     	;# 
  8428  011F                     	;# 
  8429  011F                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  018C                     	;# 
  8433  018D                     	;# 
  8434  018E                     	;# 
  8435  018F                     	;# 
  8436  0190                     	;# 
  8437  0191                     	;# 
  8438  0192                     	;# 
  8439  0196                     	;# 
  8440  0197                     	;# 
  8441  0198                     	;# 
  8442  0199                     	;# 
  8443  019A                     	;# 
  8444  019B                     	;# 
  8445  019C                     	;# 
  8446  020C                     	;# 
  8447  020C                     	;# 
  8448  020D                     	;# 
  8449  020E                     	;# 
  8450  020F                     	;# 
  8451  020F                     	;# 
  8452  0210                     	;# 
  8453  0210                     	;# 
  8454  0211                     	;# 
  8455  0211                     	;# 
  8456  0212                     	;# 
  8457  0212                     	;# 
  8458  0213                     	;# 
  8459  0214                     	;# 
  8460  0215                     	;# 
  8461  0215                     	;# 
  8462  0216                     	;# 
  8463  0216                     	;# 
  8464  0217                     	;# 
  8465  0217                     	;# 
  8466  0218                     	;# 
  8467  0218                     	;# 
  8468  0219                     	;# 
  8469  021A                     	;# 
  8470  021B                     	;# 
  8471  021B                     	;# 
  8472  021C                     	;# 
  8473  021C                     	;# 
  8474  021D                     	;# 
  8475  021D                     	;# 
  8476  021E                     	;# 
  8477  021F                     	;# 
  8478  028C                     	;# 
  8479  028C                     	;# 
  8480  028D                     	;# 
  8481  028D                     	;# 
  8482  028E                     	;# 
  8483  028F                     	;# 
  8484  0290                     	;# 
  8485  0290                     	;# 
  8486  0291                     	;# 
  8487  0292                     	;# 
  8488  0292                     	;# 
  8489  0293                     	;# 
  8490  0293                     	;# 
  8491  0294                     	;# 
  8492  0295                     	;# 
  8493  0296                     	;# 
  8494  0296                     	;# 
  8495  0297                     	;# 
  8496  0298                     	;# 
  8497  0298                     	;# 
  8498  0299                     	;# 
  8499  0299                     	;# 
  8500  029A                     	;# 
  8501  029B                     	;# 
  8502  029C                     	;# 
  8503  029C                     	;# 
  8504  029D                     	;# 
  8505  030C                     	;# 
  8506  030C                     	;# 
  8507  030D                     	;# 
  8508  030E                     	;# 
  8509  030F                     	;# 
  8510  0310                     	;# 
  8511  0310                     	;# 
  8512  0311                     	;# 
  8513  0312                     	;# 
  8514  0313                     	;# 
  8515  0314                     	;# 
  8516  0314                     	;# 
  8517  0315                     	;# 
  8518  0316                     	;# 
  8519  0317                     	;# 
  8520  0318                     	;# 
  8521  0318                     	;# 
  8522  0319                     	;# 
  8523  031A                     	;# 
  8524  031B                     	;# 
  8525  031C                     	;# 
  8526  031C                     	;# 
  8527  031D                     	;# 
  8528  031E                     	;# 
  8529  031F                     	;# 
  8530  038C                     	;# 
  8531  038C                     	;# 
  8532  038D                     	;# 
  8533  038E                     	;# 
  8534  0390                     	;# 
  8535  0390                     	;# 
  8536  0391                     	;# 
  8537  0392                     	;# 
  8538  040C                     	;# 
  8539  040D                     	;# 
  8540  040E                     	;# 
  8541  040F                     	;# 
  8542  0410                     	;# 
  8543  0411                     	;# 
  8544  0416                     	;# 
  8545  0416                     	;# 
  8546  0417                     	;# 
  8547  0418                     	;# 
  8548  0418                     	;# 
  8549  0419                     	;# 
  8550  041A                     	;# 
  8551  041A                     	;# 
  8552  041B                     	;# 
  8553  041C                     	;# 
  8554  041C                     	;# 
  8555  041D                     	;# 
  8556  041E                     	;# 
  8557  041F                     	;# 
  8558  048C                     	;# 
  8559  048C                     	;# 
  8560  048D                     	;# 
  8561  048E                     	;# 
  8562  048F                     	;# 
  8563  048F                     	;# 
  8564  0490                     	;# 
  8565  0491                     	;# 
  8566  0492                     	;# 
  8567  0492                     	;# 
  8568  0493                     	;# 
  8569  0494                     	;# 
  8570  0495                     	;# 
  8571  0495                     	;# 
  8572  0496                     	;# 
  8573  0497                     	;# 
  8574  0498                     	;# 
  8575  0499                     	;# 
  8576  049A                     	;# 
  8577  049B                     	;# 
  8578  049C                     	;# 
  8579  049D                     	;# 
  8580  050C                     	;# 
  8581  050C                     	;# 
  8582  050D                     	;# 
  8583  050E                     	;# 
  8584  050F                     	;# 
  8585  050F                     	;# 
  8586  0510                     	;# 
  8587  0511                     	;# 
  8588  0512                     	;# 
  8589  0512                     	;# 
  8590  0513                     	;# 
  8591  0514                     	;# 
  8592  0515                     	;# 
  8593  0515                     	;# 
  8594  0516                     	;# 
  8595  0517                     	;# 
  8596  0518                     	;# 
  8597  0519                     	;# 
  8598  051A                     	;# 
  8599  051B                     	;# 
  8600  051C                     	;# 
  8601  051D                     	;# 
  8602  058C                     	;# 
  8603  058C                     	;# 
  8604  058D                     	;# 
  8605  058E                     	;# 
  8606  058F                     	;# 
  8607  058F                     	;# 
  8608  0590                     	;# 
  8609  0591                     	;# 
  8610  0592                     	;# 
  8611  0593                     	;# 
  8612  060C                     	;# 
  8613  060D                     	;# 
  8614  060E                     	;# 
  8615  060F                     	;# 
  8616  0610                     	;# 
  8617  0611                     	;# 
  8618  0612                     	;# 
  8619  0613                     	;# 
  8620  0614                     	;# 
  8621  0616                     	;# 
  8622  0617                     	;# 
  8623  0618                     	;# 
  8624  0619                     	;# 
  8625  061A                     	;# 
  8626  061B                     	;# 
  8627  061C                     	;# 
  8628  061D                     	;# 
  8629  061E                     	;# 
  8630  068C                     	;# 
  8631  068D                     	;# 
  8632  068E                     	;# 
  8633  068F                     	;# 
  8634  0690                     	;# 
  8635  0691                     	;# 
  8636  0692                     	;# 
  8637  0693                     	;# 
  8638  0694                     	;# 
  8639  070C                     	;# 
  8640  070D                     	;# 
  8641  070E                     	;# 
  8642  070F                     	;# 
  8643  0710                     	;# 
  8644  0711                     	;# 
  8645  0712                     	;# 
  8646  0713                     	;# 
  8647  0714                     	;# 
  8648  0716                     	;# 
  8649  0717                     	;# 
  8650  0718                     	;# 
  8651  0719                     	;# 
  8652  071A                     	;# 
  8653  071B                     	;# 
  8654  071C                     	;# 
  8655  071D                     	;# 
  8656  071E                     	;# 
  8657  0796                     	;# 
  8658  0797                     	;# 
  8659  0798                     	;# 
  8660  0799                     	;# 
  8661  079A                     	;# 
  8662  079B                     	;# 
  8663  080C                     	;# 
  8664  080D                     	;# 
  8665  080E                     	;# 
  8666  080F                     	;# 
  8667  0810                     	;# 
  8668  0811                     	;# 
  8669  0812                     	;# 
  8670  0813                     	;# 
  8671  0814                     	;# 
  8672  081A                     	;# 
  8673  081B                     	;# 
  8674  081C                     	;# 
  8675  081D                     	;# 
  8676  081E                     	;# 
  8677  081F                     	;# 
  8678  088C                     	;# 
  8679  088D                     	;# 
  8680  088E                     	;# 
  8681  088F                     	;# 
  8682  0890                     	;# 
  8683  0891                     	;# 
  8684  0892                     	;# 
  8685  0893                     	;# 
  8686  0895                     	;# 
  8687  0896                     	;# 
  8688  0897                     	;# 
  8689  0898                     	;# 
  8690  0899                     	;# 
  8691  089A                     	;# 
  8692  089B                     	;# 
  8693  090C                     	;# 
  8694  090E                     	;# 
  8695  090F                     	;# 
  8696  091F                     	;# 
  8697  091F                     	;# 
  8698  098F                     	;# 
  8699  098F                     	;# 
  8700  0990                     	;# 
  8701  0991                     	;# 
  8702  0992                     	;# 
  8703  0993                     	;# 
  8704  0994                     	;# 
  8705  0995                     	;# 
  8706  0996                     	;# 
  8707  0997                     	;# 
  8708  0E0F                     	;# 
  8709  0E10                     	;# 
  8710  0E11                     	;# 
  8711  0E12                     	;# 
  8712  0E13                     	;# 
  8713  0E14                     	;# 
  8714  0E15                     	;# 
  8715  0E16                     	;# 
  8716  0E17                     	;# 
  8717  0E18                     	;# 
  8718  0E19                     	;# 
  8719  0E1A                     	;# 
  8720  0E1B                     	;# 
  8721  0E1C                     	;# 
  8722  0E1D                     	;# 
  8723  0E1E                     	;# 
  8724  0E1F                     	;# 
  8725  0E20                     	;# 
  8726  0E21                     	;# 
  8727  0E22                     	;# 
  8728  0E23                     	;# 
  8729  0E24                     	;# 
  8730  0E25                     	;# 
  8731  0E26                     	;# 
  8732  0E27                     	;# 
  8733  0E28                     	;# 
  8734  0E29                     	;# 
  8735  0E2A                     	;# 
  8736  0E2B                     	;# 
  8737  0E2C                     	;# 
  8738  0E2D                     	;# 
  8739  0E2E                     	;# 
  8740  0E2F                     	;# 
  8741  0E30                     	;# 
  8742  0E31                     	;# 
  8743  0E32                     	;# 
  8744  0E33                     	;# 
  8745  0E34                     	;# 
  8746  0E35                     	;# 
  8747  0E36                     	;# 
  8748  0E37                     	;# 
  8749  0E8F                     	;# 
  8750  0E90                     	;# 
  8751  0E91                     	;# 
  8752  0E92                     	;# 
  8753  0E93                     	;# 
  8754  0E94                     	;# 
  8755  0E95                     	;# 
  8756  0E96                     	;# 
  8757  0E97                     	;# 
  8758  0E9C                     	;# 
  8759  0E9D                     	;# 
  8760  0E9E                     	;# 
  8761  0EA1                     	;# 
  8762  0EA2                     	;# 
  8763  0EA3                     	;# 
  8764  0EA4                     	;# 
  8765  0EA5                     	;# 
  8766  0EA9                     	;# 
  8767  0EAA                     	;# 
  8768  0EAB                     	;# 
  8769  0EAC                     	;# 
  8770  0EB1                     	;# 
  8771  0EB2                     	;# 
  8772  0EB3                     	;# 
  8773  0EB8                     	;# 
  8774  0EB9                     	;# 
  8775  0EBA                     	;# 
  8776  0EBB                     	;# 
  8777  0EBC                     	;# 
  8778  0EBD                     	;# 
  8779  0EBE                     	;# 
  8780  0EC3                     	;# 
  8781  0EC5                     	;# 
  8782  0EC6                     	;# 
  8783  0EC7                     	;# 
  8784  0EC8                     	;# 
  8785  0EC9                     	;# 
  8786  0ECA                     	;# 
  8787  0ECB                     	;# 
  8788  0ECC                     	;# 
  8789  0F10                     	;# 
  8790  0F11                     	;# 
  8791  0F12                     	;# 
  8792  0F13                     	;# 
  8793  0F14                     	;# 
  8794  0F15                     	;# 
  8795  0F16                     	;# 
  8796  0F17                     	;# 
  8797  0F18                     	;# 
  8798  0F19                     	;# 
  8799  0F1A                     	;# 
  8800  0F1B                     	;# 
  8801  0F1C                     	;# 
  8802  0F1D                     	;# 
  8803  0F1E                     	;# 
  8804  0F1F                     	;# 
  8805  0F20                     	;# 
  8806  0F21                     	;# 
  8807  0F22                     	;# 
  8808  0F23                     	;# 
  8809  0F24                     	;# 
  8810  0F25                     	;# 
  8811  0F26                     	;# 
  8812  0F27                     	;# 
  8813  0F28                     	;# 
  8814  0F29                     	;# 
  8815  0F2A                     	;# 
  8816  0F2B                     	;# 
  8817  0F2C                     	;# 
  8818  0F2D                     	;# 
  8819  0F2E                     	;# 
  8820  0F2F                     	;# 
  8821  0F30                     	;# 
  8822  0F31                     	;# 
  8823  0F32                     	;# 
  8824  0F38                     	;# 
  8825  0F39                     	;# 
  8826  0F3A                     	;# 
  8827  0F3B                     	;# 
  8828  0F3C                     	;# 
  8829  0F3D                     	;# 
  8830  0F3E                     	;# 
  8831  0F3F                     	;# 
  8832  0F40                     	;# 
  8833  0F41                     	;# 
  8834  0F43                     	;# 
  8835  0F44                     	;# 
  8836  0F45                     	;# 
  8837  0F46                     	;# 
  8838  0F47                     	;# 
  8839  0F48                     	;# 
  8840  0F49                     	;# 
  8841  0F4A                     	;# 
  8842  0F4B                     	;# 
  8843  0F4C                     	;# 
  8844  0F4E                     	;# 
  8845  0F4F                     	;# 
  8846  0F50                     	;# 
  8847  0F51                     	;# 
  8848  0F52                     	;# 
  8849  0F53                     	;# 
  8850  0F54                     	;# 
  8851  0F55                     	;# 
  8852  0F56                     	;# 
  8853  0F57                     	;# 
  8854  0F59                     	;# 
  8855  0F5A                     	;# 
  8856  0F5B                     	;# 
  8857  0F5C                     	;# 
  8858  0F5D                     	;# 
  8859  0F61                     	;# 
  8860  0F62                     	;# 
  8861  0F64                     	;# 
  8862  0F65                     	;# 
  8863  0F66                     	;# 
  8864  0F67                     	;# 
  8865  0F68                     	;# 
  8866  0F69                     	;# 
  8867  0F6A                     	;# 
  8868  0F6B                     	;# 
  8869  0F6C                     	;# 
  8870  0F6D                     	;# 
  8871  0FE4                     	;# 
  8872  0FE5                     	;# 
  8873  0FE6                     	;# 
  8874  0FE7                     	;# 
  8875  0FE8                     	;# 
  8876  0FE9                     	;# 
  8877  0FEA                     	;# 
  8878  0FEB                     	;# 
  8879  0FED                     	;# 
  8880  0FEE                     	;# 
  8881  0FEF                     	;# 
  8882                           
  8883                           	psect	idataBANK0
  8884  07FD                     __pidataBANK0:	
  8885                           
  8886                           ;initializer for _tala
  8887  07FD  3403               	retlw	3
  8888                           
  8889                           ;initializer for _pmon
  8890  07FE  3405               	retlw	5
  8891                           
  8892                           ;initializer for _nreg
  8893  07FF  341E               	retlw	30
  8894                           
  8895                           	psect	stringtext1
  8896  05A1                     __pstringtext1:	
  8897  05A1                     _fsmStateTable:	
  8898  05A1  342C               	retlw	low _do_I2C_IDLE
  8899  05A2  340F               	retlw	high _do_I2C_IDLE
  8900  05A3  34AE               	retlw	low _do_I2C_SEND_ADR_READ
  8901  05A4  340F               	retlw	high _do_I2C_SEND_ADR_READ
  8902  05A5  3496               	retlw	low _do_I2C_SEND_ADR_WRITE
  8903  05A6  340F               	retlw	high _do_I2C_SEND_ADR_WRITE
  8904  05A7  3410               	retlw	low _do_I2C_TX
  8905  05A8  3403               	retlw	high _do_I2C_TX
  8906  05A9  3464               	retlw	low _do_I2C_RX
  8907  05AA  3403               	retlw	high _do_I2C_RX
  8908  05AB  3478               	retlw	low _do_I2C_RCEN
  8909  05AC  340F               	retlw	high _do_I2C_RCEN
  8910  05AD  3473               	retlw	low _do_I2C_TX_EMPTY
  8911  05AE  3404               	retlw	high _do_I2C_TX_EMPTY
  8912  05AF  3431               	retlw	low _do_I2C_SEND_RESTART_READ
  8913  05B0  340F               	retlw	high _do_I2C_SEND_RESTART_READ
  8914  05B1  3436               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8915  05B2  340F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8916  05B3  343B               	retlw	low _do_I2C_SEND_RESTART
  8917  05B4  340F               	retlw	high _do_I2C_SEND_RESTART
  8918  05B5  3440               	retlw	low _do_I2C_SEND_STOP
  8919  05B6  340F               	retlw	high _do_I2C_SEND_STOP
  8920  05B7  3445               	retlw	low _do_I2C_DO_ACK
  8921  05B8  340F               	retlw	high _do_I2C_DO_ACK
  8922  05B9  344A               	retlw	low _do_I2C_DO_NACK_STOP
  8923  05BA  340F               	retlw	high _do_I2C_DO_NACK_STOP
  8924  05BB  344F               	retlw	low _do_I2C_DO_NACK_RESTART
  8925  05BC  340F               	retlw	high _do_I2C_DO_NACK_RESTART
  8926  05BD  348E               	retlw	low _do_I2C_RESET
  8927  05BE  340F               	retlw	high _do_I2C_RESET
  8928  05BF  34D3               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8929  05C0  3404               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8930  05C1                     __end_of_fsmStateTable:	
  8931                           
  8932                           	psect	nvBANK0
  8933  0049                     __pnvBANK0:	
  8934  0049                     _TMR0_InterruptHandler:	
  8935  0049                     	ds	2
  8936  004B                     _TMR2_InterruptHandler:	
  8937  004B                     	ds	2
  8938  004D                     _TMR1_InterruptHandler:	
  8939  004D                     	ds	2
  8940  004F                     _timer1ReloadVal:	
  8941  004F                     	ds	2
  8942  0051                     _INT_InterruptHandler:	
  8943  0051                     	ds	2
  8944  001E                     _T0CON0bits	set	30
  8945  001E                     _T0CON0	set	30
  8946  001C                     _TMR0L	set	28
  8947  001D                     _TMR0H	set	29
  8948  001F                     _T0CON1	set	31
  8949  0013                     _TRISCbits	set	19
  8950  000E                     _PORTCbits	set	14
  8951  000D                     _PORTBbits	set	13
  8952  0016                     _LATAbits	set	22
  8953  0014                     _TRISD	set	20
  8954  0013                     _TRISC	set	19
  8955  0012                     _TRISB	set	18
  8956  0011                     _TRISA	set	17
  8957  0015                     _TRISE	set	21
  8958  0018                     _LATC	set	24
  8959  0017                     _LATB	set	23
  8960  0016                     _LATA	set	22
  8961  0019                     _LATD	set	25
  8962  001A                     _LATE	set	26
  8963  000B                     _INTCONbits	set	11
  8964  0094                     _ADCON1bits	set	148
  8965  008E                     _ADPREVL	set	142
  8966  008F                     _ADPREVH	set	143
  8967  0097                     _ADSTATbits	set	151
  8968  0090                     _ADACCL	set	144
  8969  0091                     _ADACCH	set	145
  8970  0095                     _ADCON2bits	set	149
  8971  009C                     _ADPRE	set	156
  8972  0096                     _ADCON3bits	set	150
  8973  008C                     _ADRESL	set	140
  8974  008D                     _ADRESH	set	141
  8975  0093                     _ADCON0bits	set	147
  8976  009D                     _ADACQ	set	157
  8977  0093                     _ADCON0	set	147
  8978  0098                     _ADCLK	set	152
  8979  0099                     _ADACT	set	153
  8980  009A                     _ADREF	set	154
  8981  0097                     _ADSTAT	set	151
  8982  0096                     _ADCON3	set	150
  8983  0095                     _ADCON2	set	149
  8984  0094                     _ADCON1	set	148
  8985  009B                     _ADCAP	set	155
  8986  009E                     _ADPCH	set	158
  8987  0116                     _ADERRL	set	278
  8988  0117                     _ADERRH	set	279
  8989  0114                     _ADFLTRL	set	276
  8990  0115                     _ADFLTRH	set	277
  8991  010C                     _ADCNT	set	268
  8992  010D                     _ADRPT	set	269
  8993  0113                     _ADSTPTH	set	275
  8994  0112                     _ADSTPTL	set	274
  8995  0111                     _ADUTHH	set	273
  8996  0110                     _ADUTHL	set	272
  8997  010F                     _ADLTHH	set	271
  8998  010E                     _ADLTHL	set	270
  8999  018F                     _SSP1STATbits	set	399
  9000  018E                     _SSP1MSK	set	398
  9001  018C                     _SSP1BUF	set	396
  9002  0191                     _SSP1CON2bits	set	401
  9003  018D                     _SSP1ADD	set	397
  9004  0191                     _SSP1CON2	set	401
  9005  0190                     _SSP1CON1	set	400
  9006  018F                     _SSP1STAT	set	399
  9007  0190                     _SSP1CON1bits	set	400
  9008  021F                     _CCPTMRS1bits	set	543
  9009  020F                     _T1GCONbits	set	527
  9010  020E                     _T1CONbits	set	526
  9011  020E                     _T1CON	set	526
  9012  020C                     _TMR1L	set	524
  9013  020D                     _TMR1H	set	525
  9014  0211                     _T1CLK	set	529
  9015  0210                     _T1GATE	set	528
  9016  020F                     _T1GCON	set	527
  9017  028D                     _PR2	set	653
  9018  028C                     _TMR2	set	652
  9019  028E                     _T2CONbits	set	654
  9020  0291                     _T2RSTbits	set	657
  9021  028F                     _T2HLTbits	set	655
  9022  028E                     _T2CON	set	654
  9023  028C                     _T2TMR	set	652
  9024  028D                     _T2PR	set	653
  9025  0291                     _T2RST	set	657
  9026  028F                     _T2HLT	set	655
  9027  0290                     _T2CLKCON	set	656
  9028  038C                     _PWM6DCL	set	908
  9029  038D                     _PWM6DCH	set	909
  9030  038E                     _PWM6CON	set	910
  9031  0710                     _PIR4bits	set	1808
  9032  071A                     _PIE4bits	set	1818
  9033  070F                     _PIR3bits	set	1807
  9034  0719                     _PIE3bits	set	1817
  9035  0716                     _PIE0bits	set	1814
  9036  070C                     _PIR0bits	set	1804
  9037  079B                     _PMD5	set	1947
  9038  079A                     _PMD4	set	1946
  9039  0799                     _PMD3	set	1945
  9040  0798                     _PMD2	set	1944
  9041  0797                     _PMD1	set	1943
  9042  0796                     _PMD0	set	1942
  9043  081F                     _NVMCON2	set	2079
  9044  081C                     _NVMDATL	set	2076
  9045  081D                     _NVMDATH	set	2077
  9046  081E                     _NVMCON1bits	set	2078
  9047  081B                     _NVMADRH	set	2075
  9048  081A                     _NVMADRL	set	2074
  9049  0892                     _OSCTUNE	set	2194
  9050  0893                     _OSCFRQ	set	2195
  9051  0891                     _OSCEN	set	2193
  9052  088F                     _OSCCON3	set	2191
  9053  088D                     _OSCCON1	set	2189
  9054  0EC6                     _SSP1DATPPS	set	3782
  9055  0EC5                     _SSP1CLKPPS	set	3781
  9056  0E90                     _INTPPS	set	3728
  9057  0F44                     _WPUBbits	set	3908
  9058  0F16                     _RA6PPS	set	3862
  9059  0F24                     _RC4PPS	set	3876
  9060  0F23                     _RC3PPS	set	3875
  9061  0F68                     _INLVLE	set	3944
  9062  0F5D                     _INLVLD	set	3933
  9063  0F52                     _INLVLC	set	3922
  9064  0F47                     _INLVLB	set	3911
  9065  0F3C                     _INLVLA	set	3900
  9066  0F67                     _SLRCONE	set	3943
  9067  0F5C                     _SLRCOND	set	3932
  9068  0F51                     _SLRCONC	set	3921
  9069  0F46                     _SLRCONB	set	3910
  9070  0F3B                     _SLRCONA	set	3899
  9071  0F5B                     _ODCOND	set	3931
  9072  0F50                     _ODCONC	set	3920
  9073  0F45                     _ODCONB	set	3909
  9074  0F3A                     _ODCONA	set	3898
  9075  0F66                     _ODCONE	set	3942
  9076  0F4F                     _WPUC	set	3919
  9077  0F39                     _WPUA	set	3897
  9078  0F44                     _WPUB	set	3908
  9079  0F65                     _WPUE	set	3941
  9080  0F5A                     _WPUD	set	3930
  9081  0F38                     _ANSELA	set	3896
  9082  0F64                     _ANSELE	set	3940
  9083  0F43                     _ANSELB	set	3907
  9084  0F4E                     _ANSELC	set	3918
  9085  0F59                     _ANSELD	set	3929
  9086  7A7C                     _WPUC4	set	31356
  9087  7A7B                     _WPUC3	set	31355
  9088                           
  9089                           ; #config settings
  9090  0000                     
  9091                           	psect	cinit
  9092  005D                     start_initialization:	
  9093  005D                     __initialization:	
  9094                           
  9095                           ; Initialize objects allocated to BANK0
  9096  005D  3187  27FD  3180   	fcall	__pidataBANK0	;fetch initializer
  9097  0060  00D3               	movwf	__pdataBANK0& (0+127)
  9098  0061  3187  27FE  3180   	fcall	__pidataBANK0+1	;fetch initializer
  9099  0064  00D4               	movwf	(__pdataBANK0+1)& (0+127)
  9100  0065  3187  27FF  3180   	fcall	__pidataBANK0+2	;fetch initializer
  9101  0068  00D5               	movwf	(__pdataBANK0+2)& (0+127)
  9102                           
  9103                           ; Clear objects allocated to COMMON
  9104  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9105                           
  9106                           ; Clear objects allocated to BANK0
  9107  006A  3020               	movlw	low __pbssBANK0
  9108  006B  0084               	movwf	4
  9109  006C  3000               	movlw	high __pbssBANK0
  9110  006D  0085               	movwf	5
  9111  006E  3017               	movlw	23
  9112  006F  318F  2772  3180   	fcall	clear_ram0
  9113                           
  9114                           ; Clear objects allocated to BANK1
  9115  0072  30A0               	movlw	low __pbssBANK1
  9116  0073  0084               	movwf	4
  9117  0074  3000               	movlw	high __pbssBANK1
  9118  0075  0085               	movwf	5
  9119  0076  301D               	movlw	29
  9120  0077  318F  2772  3180   	fcall	clear_ram0
  9121  007A                     end_of_initialization:	
  9122                           ;End of C runtime variable initialization code
  9123                           
  9124  007A                     __end_of__initialization:	
  9125  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9126  007B  0020               	movlb	0
  9127  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9128                           
  9129                           	psect	bssCOMMON
  9130  007D                     __pbssCOMMON:	
  9131  007D                     _clkms:	
  9132  007D                     	ds	1
  9133                           
  9134                           	psect	bssBANK0
  9135  0020                     __pbssBANK0:	
  9136  0020                     _lum_threshold:	
  9137  0020                     	ds	2
  9138  0022                     _level_bin:	
  9139  0022                     	ds	2
  9140  0024                     _duty_cycle:	
  9141  0024                     	ds	2
  9142  0026                     _convertedValue:	
  9143  0026                     	ds	2
  9144  0028                     _value:	
  9145  0028                     	ds	2
  9146  002A                     _i2c1_driver_i2cISR:	
  9147  002A                     	ds	2
  9148  002C                     _i2c1_driver_busCollisionISR:	
  9149  002C                     	ds	2
  9150  002E                     _nreg_pt:	
  9151  002E                     	ds	1
  9152  002F                     _alarm:	
  9153  002F                     	ds	1
  9154  0030                     _config_mode:	
  9155  0030                     	ds	1
  9156  0031                     _set_mode:	
  9157  0031                     	ds	1
  9158  0032                     _bounce_time:	
  9159  0032                     	ds	1
  9160  0033                     _last_ms:	
  9161  0033                     	ds	1
  9162  0034                     _seg:	
  9163  0034                     	ds	1
  9164  0035                     _clkm:	
  9165  0035                     	ds	1
  9166  0036                     _clkh:	
  9167  0036                     	ds	1
  9168                           
  9169                           	psect	dataBANK0
  9170  0053                     __pdataBANK0:	
  9171  0053                     _tala:	
  9172  0053                     	ds	1
  9173  0054                     _pmon:	
  9174  0054                     	ds	1
  9175  0055                     _nreg:	
  9176  0055                     	ds	1
  9177                           
  9178                           	psect	bssBANK1
  9179  00A0                     __pbssBANK1:	
  9180  00A0                     _i2c_status:	
  9181  00A0                     	ds	29
  9182                           
  9183                           	psect	clrtext
  9184  0F72                     clear_ram0:	
  9185                           ;	Called with FSR0 containing the base address, and
  9186                           ;	WREG with the size to clear
  9187                           
  9188  0F72  0064               	clrwdt	;clear the watchdog before getting into this loop
  9189  0F73                     clrloop0:	
  9190  0F73  0180               	clrf	0	;clear RAM location pointed to by FSR
  9191  0F74  3101               	addfsr 0,1
  9192  0F75  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9193  0F76  2F73               	goto	clrloop0	;have we reached the end yet?
  9194  0F77  3400               	retlw	0	;all done for this memory range, return
  9195                           
  9196                           	psect	cstackCOMMON
  9197  0070                     __pcstackCOMMON:	
  9198  0070                     ?_i2c1_driver_isNACK:	
  9199  0070                     ?_setCallBack:	
  9200                           ; 1 bit 
  9201                           
  9202  0070                     ?_mssp1_clearIRQ:	
  9203                           ; 1 bytes @ 0x0
  9204                           
  9205  0070                     ??_mssp1_clearIRQ:	
  9206                           ; 1 bytes @ 0x0
  9207                           
  9208  0070                     ?_i2c_busCollisionISR:	
  9209                           ; 1 bytes @ 0x0
  9210                           
  9211  0070                     ??_i2c_busCollisionISR:	
  9212                           ; 1 bytes @ 0x0
  9213                           
  9214  0070                     ?_i2c_ISR:	
  9215                           ; 1 bytes @ 0x0
  9216                           
  9217  0070                     ?_i2c1_driver_resetBus:	
  9218                           ; 1 bytes @ 0x0
  9219                           
  9220  0070                     ??_i2c1_driver_resetBus:	
  9221                           ; 1 bytes @ 0x0
  9222                           
  9223  0070                     ?_i2c1_driver_restart:	
  9224                           ; 1 bytes @ 0x0
  9225                           
  9226  0070                     ??_i2c1_driver_restart:	
  9227                           ; 1 bytes @ 0x0
  9228                           
  9229  0070                     ?_i2c1_driver_stop:	
  9230                           ; 1 bytes @ 0x0
  9231                           
  9232  0070                     ??_i2c1_driver_stop:	
  9233                           ; 1 bytes @ 0x0
  9234                           
  9235  0070                     ?_i2c1_driver_TXData:	
  9236                           ; 1 bytes @ 0x0
  9237                           
  9238  0070                     ??_i2c1_driver_TXData:	
  9239                           ; 1 bytes @ 0x0
  9240                           
  9241  0070                     ?_i2c1_driver_startRX:	
  9242                           ; 1 bytes @ 0x0
  9243                           
  9244  0070                     ??_i2c1_driver_startRX:	
  9245                           ; 1 bytes @ 0x0
  9246                           
  9247  0070                     ?_i2c1_driver_sendACK:	
  9248                           ; 1 bytes @ 0x0
  9249                           
  9250  0070                     ??_i2c1_driver_sendACK:	
  9251                           ; 1 bytes @ 0x0
  9252                           
  9253  0070                     ?_i2c1_driver_sendNACK:	
  9254                           ; 1 bytes @ 0x0
  9255                           
  9256  0070                     ??_i2c1_driver_sendNACK:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0070                     ??_i2c1_driver_isNACK:	
  9260                           ; 1 bytes @ 0x0
  9261                           
  9262  0070                     ?_i2c1_driver_getRXData:	
  9263                           ; 1 bytes @ 0x0
  9264                           
  9265  0070                     ??_i2c1_driver_getRXData:	
  9266                           ; 1 bytes @ 0x0
  9267                           
  9268  0070                     ?_mssp1_setIRQ:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0070                     ??_mssp1_setIRQ:	
  9272                           ; 1 bytes @ 0x0
  9273                           
  9274  0070                     ?_i2c1_driver_clearBusCollision:	
  9275                           ; 1 bytes @ 0x0
  9276                           
  9277  0070                     ??_i2c1_driver_clearBusCollision:	
  9278                           ; 1 bytes @ 0x0
  9279                           
  9280  0070                     ?_INT_CallBack:	
  9281                           ; 1 bytes @ 0x0
  9282                           
  9283  0070                     ?_TMR0_ISR:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0070                     ?_TMR1_ISR:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0070                     ?_TMR2_ISR:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0070                     ?_PMD_Initialize:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0070                     ?_PIN_MANAGER_Initialize:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0070                     ?_OSCILLATOR_Initialize:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0070                     ?_PWM6_Initialize:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0070                     ?_ADCC_Initialize:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0070                     ?_TMR2_Initialize:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0070                     ?_TMR1_Initialize:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0070                     ?_TMR0_Initialize:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0070                     ?_TMR1_DefaultInterruptHandler:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0070                     ??_TMR1_DefaultInterruptHandler:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0070                     ?_TMR2_DefaultInterruptHandler:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0070                     ??_TMR2_DefaultInterruptHandler:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0070                     ?_checkDebounce:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0070                     ?_TMR0_StopTimer:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0070                     ??_TMR0_StopTimer:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0070                     ?_handler_clock_hms:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0070                     ??_handler_clock_hms:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0070                     ?_handler_clock_ms:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0070                     ??_handler_clock_ms:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0070                     ?_recoverData:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0070                     ?_TMR0_StartTimer:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0070                     ?_config_routine:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0070                     ?_all_LED:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0070                     ?_mod1_LED:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0070                     ?_mod2_LED:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0070                     ?_mod3_LED:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0070                     ?_mod4_LED:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0070                     ?_clock_field:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0070                     ?_cksum:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0070                     ?_reset_recv:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0070                     ?_cksum_w:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0070                     ?_TMR0_DefaultInterruptHandler:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0070                     ??_TMR0_DefaultInterruptHandler:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0070                     ?_i2c_setBuffer:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0070                     ?_do_I2C_RESET:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0070                     ??_do_I2C_RESET:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0070                     ?_do_I2C_IDLE:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0070                     ??_do_I2C_IDLE:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0070                     ?_do_I2C_SEND_RESTART:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0070                     ??_do_I2C_SEND_RESTART:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0070                     ?_do_I2C_SEND_STOP:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0070                     ??_do_I2C_SEND_STOP:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0070                     ?_do_I2C_SEND_ADR_READ:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0070                     ??_do_I2C_SEND_ADR_READ:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0070                     ?_do_I2C_RCEN:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0070                     ??_do_I2C_RCEN:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0070                     ?_do_I2C_DO_ACK:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448  0070                     ??_do_I2C_DO_ACK:	
  9449                           ; 1 bytes @ 0x0
  9450                           
  9451  0070                     ?_do_I2C_DO_NACK_STOP:	
  9452                           ; 1 bytes @ 0x0
  9453                           
  9454  0070                     ??_do_I2C_DO_NACK_STOP:	
  9455                           ; 1 bytes @ 0x0
  9456                           
  9457  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9458                           ; 1 bytes @ 0x0
  9459                           
  9460  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9461                           ; 1 bytes @ 0x0
  9462                           
  9463  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9464                           ; 1 bytes @ 0x0
  9465                           
  9466  0070                     ?_do_I2C_TX:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0070                     ?_do_I2C_RX:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0070                     ?_do_I2C_TX_EMPTY:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0070                     ?_INT_ISR:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0070                     ?_INT_DefaultInterruptHandler:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0070                     ??_INT_DefaultInterruptHandler:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0070                     ?_EXT_INT_Initialize:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0070                     ?_INTERRUPT_InterruptManager:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0070                     ?_SYSTEM_Initialize:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0070                     ?_ADCC_StartConversion:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0070                     ?_ADCC_IsConversionDone:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0070                     ?_TMR1_WriteTimer:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0070                     ?_sw1_EXT:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0070                     ?_ISR_3s:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0070                     ?_main:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0070                     ?i1_PWM6_LoadDutyValue:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0070                     ?i1_checkDebounce:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0070                     ??i1_checkDebounce:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0070                     i2c1_driver_TXData@d:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0070                     i2c_setBuffer@bufferSize:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0070                     setCallBack@cb:	
  9527                           ; 2 bytes @ 0x0
  9528                           
  9529  0070                     TMR1_WriteTimer@timerVal:	
  9530                           ; 2 bytes @ 0x0
  9531                           
  9532  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9533                           ; 2 bytes @ 0x0
  9534                           
  9535                           
  9536                           ; 2 bytes @ 0x0
  9537  0070                     	ds	1
  9538  0071                     ??_TMR2_ISR:	
  9539  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9540                           ; 1 bytes @ 0x1
  9541                           
  9542                           
  9543                           ; 1 bytes @ 0x1
  9544  0071                     	ds	1
  9545  0072                     ??_TMR1_ISR:	
  9546  0072                     ??_i2c_setBuffer:	
  9547                           ; 1 bytes @ 0x2
  9548                           
  9549  0072                     ??_TMR1_WriteTimer:	
  9550                           ; 1 bytes @ 0x2
  9551                           
  9552  0072                     ??i1_PWM6_LoadDutyValue:	
  9553                           ; 1 bytes @ 0x2
  9554                           
  9555  0072                     setCallBack@p:	
  9556                           ; 1 bytes @ 0x2
  9557                           
  9558                           
  9559                           ; 1 bytes @ 0x2
  9560  0072                     	ds	1
  9561  0073                     ??_setCallBack:	
  9562  0073                     i2c_setBuffer@buffer:	
  9563                           ; 1 bytes @ 0x3
  9564                           
  9565                           
  9566                           ; 1 bytes @ 0x3
  9567  0073                     	ds	1
  9568  0074                     ??_ISR_3s:	
  9569  0074                     setCallBack@idx:	
  9570                           ; 1 bytes @ 0x4
  9571                           
  9572                           
  9573                           ; 1 bytes @ 0x4
  9574  0074                     	ds	1
  9575  0075                     ??_TMR0_ISR:	
  9576  0075                     ?_i2c_setDataCompleteCallback:	
  9577                           ; 1 bytes @ 0x5
  9578                           
  9579  0075                     ??_sw1_EXT:	
  9580                           ; 1 bytes @ 0x5
  9581                           
  9582  0075                     i2c_setDataCompleteCallback@cb:	
  9583                           ; 1 bytes @ 0x5
  9584                           
  9585                           
  9586                           ; 2 bytes @ 0x5
  9587  0075                     	ds	1
  9588  0076                     ??_INT_CallBack:	
  9589  0076                     ??_INT_ISR:	
  9590                           ; 1 bytes @ 0x6
  9591                           
  9592                           
  9593                           ; 1 bytes @ 0x6
  9594  0076                     	ds	1
  9595  0077                     i2c_setDataCompleteCallback@p:	
  9596                           
  9597                           ; 1 bytes @ 0x7
  9598  0077                     	ds	1
  9599  0078                     ??_i2c_setDataCompleteCallback:	
  9600                           
  9601                           ; 1 bytes @ 0x8
  9602  0078                     	ds	1
  9603  0079                     ?_returnStop:	
  9604  0079                     ?_returnReset:	
  9605                           ; 1 bytes @ 0x9
  9606                           
  9607  0079                     ?_i2c_restartWrite:	
  9608                           ; 1 bytes @ 0x9
  9609                           
  9610  0079                     ?_wr1RegCompleteHandler:	
  9611                           ; 1 bytes @ 0x9
  9612                           
  9613  0079                     ?_rd1RegCompleteHandler:	
  9614                           ; 1 bytes @ 0x9
  9615                           
  9616  0079                     ?_rd2RegCompleteHandler:	
  9617                           ; 1 bytes @ 0x9
  9618                           
  9619  0079                     ?_wr2RegCompleteHandler:	
  9620                           ; 1 bytes @ 0x9
  9621                           
  9622  0079                     ?_rdBlkRegCompleteHandler:	
  9623                           ; 1 bytes @ 0x9
  9624                           
  9625  0079                     i2c_restartWrite@p:	
  9626                           ; 1 bytes @ 0x9
  9627                           
  9628  0079                     returnStop@p:	
  9629                           ; 1 bytes @ 0x9
  9630                           
  9631  0079                     returnReset@p:	
  9632                           ; 1 bytes @ 0x9
  9633                           
  9634  0079                     wr1RegCompleteHandler@p:	
  9635                           ; 1 bytes @ 0x9
  9636                           
  9637  0079                     rd1RegCompleteHandler@p:	
  9638                           ; 1 bytes @ 0x9
  9639                           
  9640  0079                     rd2RegCompleteHandler@p:	
  9641                           ; 1 bytes @ 0x9
  9642                           
  9643  0079                     wr2RegCompleteHandler@p:	
  9644                           ; 1 bytes @ 0x9
  9645                           
  9646  0079                     rdBlkRegCompleteHandler@p:	
  9647                           ; 1 bytes @ 0x9
  9648                           
  9649                           
  9650                           ; 1 bytes @ 0x9
  9651  0079                     	ds	1
  9652  007A                     ??_returnStop:	
  9653  007A                     ??_returnReset:	
  9654                           ; 1 bytes @ 0xA
  9655                           
  9656  007A                     ??_i2c_restartWrite:	
  9657                           ; 1 bytes @ 0xA
  9658                           
  9659  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9660                           ; 1 bytes @ 0xA
  9661                           
  9662  007A                     ??_do_I2C_TX:	
  9663                           ; 1 bytes @ 0xA
  9664                           
  9665  007A                     ??_do_I2C_RX:	
  9666                           ; 1 bytes @ 0xA
  9667                           
  9668  007A                     ??_do_I2C_TX_EMPTY:	
  9669                           ; 1 bytes @ 0xA
  9670                           
  9671  007A                     ??_wr1RegCompleteHandler:	
  9672                           ; 1 bytes @ 0xA
  9673                           
  9674  007A                     ??_rd1RegCompleteHandler:	
  9675                           ; 1 bytes @ 0xA
  9676                           
  9677  007A                     ??_rd2RegCompleteHandler:	
  9678                           ; 1 bytes @ 0xA
  9679                           
  9680  007A                     ??_wr2RegCompleteHandler:	
  9681                           ; 1 bytes @ 0xA
  9682                           
  9683  007A                     ??_rdBlkRegCompleteHandler:	
  9684                           ; 1 bytes @ 0xA
  9685                           
  9686                           
  9687                           ; 1 bytes @ 0xA
  9688  007A                     	ds	3
  9689  007D                     ??_INTERRUPT_InterruptManager:	
  9690                           
  9691                           	psect	cstackBANK0
  9692  0037                     __pcstackBANK0:	
  9693                           ; 1 bytes @ 0xD
  9694                           
  9695  0037                     ??_i2c_ISR:	
  9696                           
  9697                           ; 1 bytes @ 0x0
  9698  0037                     	ds	3
  9699  003A                     ??_PMD_Initialize:	
  9700  003A                     ??_PIN_MANAGER_Initialize:	
  9701                           ; 1 bytes @ 0x3
  9702                           
  9703  003A                     ??_OSCILLATOR_Initialize:	
  9704                           ; 1 bytes @ 0x3
  9705                           
  9706  003A                     ??_PWM6_Initialize:	
  9707                           ; 1 bytes @ 0x3
  9708                           
  9709  003A                     ??_ADCC_Initialize:	
  9710                           ; 1 bytes @ 0x3
  9711                           
  9712  003A                     ?_TMR1_SetInterruptHandler:	
  9713                           ; 1 bytes @ 0x3
  9714                           
  9715  003A                     ?_TMR2_SetInterruptHandler:	
  9716                           ; 1 bytes @ 0x3
  9717                           
  9718  003A                     ??_checkDebounce:	
  9719                           ; 1 bytes @ 0x3
  9720                           
  9721  003A                     ?_TMR0_SetInterruptHandler:	
  9722                           ; 1 bytes @ 0x3
  9723                           
  9724  003A                     ?_LED_bin:	
  9725                           ; 1 bytes @ 0x3
  9726                           
  9727  003A                     ??_TMR0_StartTimer:	
  9728                           ; 1 bytes @ 0x3
  9729                           
  9730  003A                     ?_INT_SetInterruptHandler:	
  9731                           ; 1 bytes @ 0x3
  9732                           
  9733  003A                     ??_ADCC_StartConversion:	
  9734                           ; 1 bytes @ 0x3
  9735                           
  9736  003A                     ??_ADCC_IsConversionDone:	
  9737                           ; 1 bytes @ 0x3
  9738                           
  9739  003A                     ?_PWM6_LoadDutyValue:	
  9740                           ; 1 bytes @ 0x3
  9741                           
  9742  003A                     ?_DATAEE_ReadByte:	
  9743                           ; 1 bytes @ 0x3
  9744                           
  9745  003A                     ?_ADCC_GetConversionResult:	
  9746                           ; 1 bytes @ 0x3
  9747                           
  9748  003A                     ADCC_StartConversion@channel:	
  9749                           ; 2 bytes @ 0x3
  9750                           
  9751  003A                     INT_SetInterruptHandler@InterruptHandler:	
  9752                           ; 1 bytes @ 0x3
  9753                           
  9754  003A                     TMR1_SetInterruptHandler@InterruptHandler:	
  9755                           ; 2 bytes @ 0x3
  9756                           
  9757  003A                     PWM6_LoadDutyValue@dutyValue:	
  9758                           ; 2 bytes @ 0x3
  9759                           
  9760  003A                     DATAEE_ReadByte@bAdd:	
  9761                           ; 2 bytes @ 0x3
  9762                           
  9763  003A                     TMR2_SetInterruptHandler@InterruptHandler:	
  9764                           ; 2 bytes @ 0x3
  9765                           
  9766  003A                     LED_bin@value:	
  9767                           ; 2 bytes @ 0x3
  9768                           
  9769  003A                     TMR0_SetInterruptHandler@InterruptHandler:	
  9770                           ; 2 bytes @ 0x3
  9771                           
  9772                           
  9773                           ; 2 bytes @ 0x3
  9774  003A                     	ds	2
  9775  003C                     ??_TMR2_Initialize:	
  9776  003C                     ??_TMR1_Initialize:	
  9777                           ; 1 bytes @ 0x5
  9778                           
  9779  003C                     ??_TMR0_Initialize:	
  9780                           ; 1 bytes @ 0x5
  9781                           
  9782  003C                     ??_TMR1_SetInterruptHandler:	
  9783                           ; 1 bytes @ 0x5
  9784                           
  9785  003C                     ??_TMR2_SetInterruptHandler:	
  9786                           ; 1 bytes @ 0x5
  9787                           
  9788  003C                     ??_TMR0_SetInterruptHandler:	
  9789                           ; 1 bytes @ 0x5
  9790                           
  9791  003C                     ??_LED_bin:	
  9792                           ; 1 bytes @ 0x5
  9793                           
  9794  003C                     ??_cksum:	
  9795                           ; 1 bytes @ 0x5
  9796                           
  9797  003C                     ??_INT_SetInterruptHandler:	
  9798                           ; 1 bytes @ 0x5
  9799                           
  9800  003C                     ??_EXT_INT_Initialize:	
  9801                           ; 1 bytes @ 0x5
  9802                           
  9803  003C                     ??_SYSTEM_Initialize:	
  9804                           ; 1 bytes @ 0x5
  9805                           
  9806  003C                     ??_ADCC_GetConversionResult:	
  9807                           ; 1 bytes @ 0x5
  9808                           
  9809  003C                     ??_PWM6_LoadDutyValue:	
  9810                           ; 1 bytes @ 0x5
  9811                           
  9812  003C                     ??_DATAEE_ReadByte:	
  9813                           ; 1 bytes @ 0x5
  9814                           
  9815  003C                     ?_ADC_read:	
  9816                           ; 1 bytes @ 0x5
  9817                           
  9818                           
  9819                           ; 2 bytes @ 0x5
  9820  003C                     	ds	1
  9821  003D                     cksum@res:	
  9822                           
  9823                           ; 1 bytes @ 0x6
  9824  003D                     	ds	1
  9825  003E                     ??_ADC_read:	
  9826  003E                     ??_all_LED:	
  9827                           ; 1 bytes @ 0x7
  9828                           
  9829  003E                     ??_mod1_LED:	
  9830                           ; 1 bytes @ 0x7
  9831                           
  9832  003E                     ??_mod2_LED:	
  9833                           ; 1 bytes @ 0x7
  9834                           
  9835  003E                     ??_mod3_LED:	
  9836                           ; 1 bytes @ 0x7
  9837                           
  9838  003E                     ??_mod4_LED:	
  9839                           ; 1 bytes @ 0x7
  9840                           
  9841  003E                     cksum@i:	
  9842                           ; 1 bytes @ 0x7
  9843                           
  9844                           
  9845                           ; 2 bytes @ 0x7
  9846  003E                     	ds	1
  9847  003F                     ??_clock_field:	
  9848                           
  9849                           ; 1 bytes @ 0x8
  9850  003F                     	ds	1
  9851  0040                     ?_DATAEE_WriteByte:	
  9852  0040                     DATAEE_WriteByte@bAdd:	
  9853                           ; 1 bytes @ 0x9
  9854                           
  9855  0040                     clock_field@select:	
  9856                           ; 2 bytes @ 0x9
  9857                           
  9858                           
  9859                           ; 2 bytes @ 0x9
  9860  0040                     	ds	2
  9861  0042                     ??_config_routine:	
  9862  0042                     DATAEE_WriteByte@bData:	
  9863                           ; 1 bytes @ 0xB
  9864                           
  9865                           
  9866                           ; 1 bytes @ 0xB
  9867  0042                     	ds	1
  9868  0043                     ??_DATAEE_WriteByte:	
  9869  0043                     DATAEE_WriteByte@GIEBitValue:	
  9870                           ; 1 bytes @ 0xC
  9871                           
  9872  0043                     config_routine@select_mode:	
  9873                           ; 1 bytes @ 0xC
  9874                           
  9875                           
  9876                           ; 2 bytes @ 0xC
  9877  0043                     	ds	1
  9878  0044                     ??_reset_recv:	
  9879  0044                     ??_cksum_w:	
  9880                           ; 1 bytes @ 0xD
  9881                           
  9882  0044                     reset_recv@i:	
  9883                           ; 1 bytes @ 0xD
  9884                           
  9885                           
  9886                           ; 2 bytes @ 0xD
  9887  0044                     	ds	2
  9888  0046                     ??_recoverData:	
  9889                           
  9890                           ; 1 bytes @ 0xF
  9891  0046                     	ds	1
  9892  0047                     ??_main:	
  9893                           
  9894                           ; 1 bytes @ 0x10
  9895  0047                     	ds	2
  9896                           
  9897                           	psect	maintext
  9898  007E                     __pmaintext:	
  9899 ;;
  9900 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9901 ;;
  9902 ;; *************** function _main *****************
  9903 ;; Defined at:
  9904 ;;		line 118 in file "main.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  task_schedul    2    0        unsigned int 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : B1F/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        4 bytes
  9923 ;; Hardware stack levels required when called:   10
  9924 ;; This function calls:
  9925 ;;		_ADC_read
  9926 ;;		_INT_SetInterruptHandler
  9927 ;;		_LED_bin
  9928 ;;		_PWM6_LoadDutyValue
  9929 ;;		_SYSTEM_Initialize
  9930 ;;		_TMR0_SetInterruptHandler
  9931 ;;		_TMR0_StartTimer
  9932 ;;		_TMR1_SetInterruptHandler
  9933 ;;		_TMR2_SetInterruptHandler
  9934 ;;		_config_routine
  9935 ;;		_recoverData
  9936 ;; This function is called by:
  9937 ;;		Startup code after reset
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _main
  9943  007E                     _main:	
  9944  007E                     l5065:	
  9945                           ;incstack = 0
  9946                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9947                           
  9948                           
  9949                           ;main.c: 119:     SYSTEM_Initialize();
  9950  007E  3186  261C  3180   	fcall	_SYSTEM_Initialize
  9951                           
  9952                           ;main.c: 121:     TMR0_SetInterruptHandler(ISR_3s);
  9953  0081  3085               	movlw	low _ISR_3s
  9954  0082  0020               	movlb	0	; select bank0
  9955  0083  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9956  0084  3006               	movlw	high _ISR_3s
  9957  0085  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9958  0086  318F  2760  3180   	fcall	_TMR0_SetInterruptHandler
  9959                           
  9960                           ;main.c: 122:     TMR1_SetInterruptHandler(handler_clock_hms);
  9961  0089  30FF               	movlw	low _handler_clock_hms
  9962  008A  0020               	movlb	0	; select bank0
  9963  008B  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9964  008C  3004               	movlw	high _handler_clock_hms
  9965  008D  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9966  008E  318F  2766  3180   	fcall	_TMR1_SetInterruptHandler
  9967                           
  9968                           ;main.c: 123:     INT_SetInterruptHandler(sw1_EXT);
  9969  0091  302B               	movlw	low _sw1_EXT
  9970  0092  0020               	movlb	0	; select bank0
  9971  0093  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
  9972  0094  3005               	movlw	high _sw1_EXT
  9973  0095  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  9974  0096  318F  275A  3180   	fcall	_INT_SetInterruptHandler
  9975                           
  9976                           ;main.c: 124:     TMR2_SetInterruptHandler(handler_clock_ms);
  9977  0099  30F4               	movlw	low _handler_clock_ms
  9978  009A  0020               	movlb	0	; select bank0
  9979  009B  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  9980  009C  300F               	movlw	high _handler_clock_ms
  9981  009D  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  9982  009E  318F  276C  3180   	fcall	_TMR2_SetInterruptHandler
  9983  00A1                     l5067:	
  9984  00A1                     l5069:	
  9985                           
  9986                           ;main.c: 128:     recoverData();
  9987  00A1  3181  212A  3180   	fcall	_recoverData
  9988  00A4                     l5071:	
  9989                           
  9990                           ;main.c: 130:     PWM6_LoadDutyValue(0);
  9991  00A4  3000               	movlw	0
  9992  00A5  0020               	movlb	0	; select bank0
  9993  00A6  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
  9994  00A7  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
  9995  00A8  3186  266C  3180   	fcall	_PWM6_LoadDutyValue
  9996  00AB                     l5073:	
  9997                           
  9998                           ;main.c: 131:     alarm = 0 ;
  9999  00AB  0020               	movlb	0	; select bank0
 10000  00AC  01AF               	clrf	_alarm	;volatile
 10001  00AD                     l5075:	
 10002  00AD  003E               	movlb	30	; select bank30
 10003  00AE  1644               	bsf	68,4	;volatile
 10004  00AF                     l5077:	
 10005                           
 10006                           ;main.c: 135:     (INTCONbits.GIE = 1);
 10007  00AF  178B               	bsf	11,7	;volatile
 10008  00B0                     l5079:	
 10009                           
 10010                           ;main.c: 138:     (INTCONbits.PEIE = 1);
 10011  00B0  170B               	bsf	11,6	;volatile
 10012  00B1  28B2               	goto	l5081
 10013  00B2                     l1169:	
 10014                           ;main.c: 141:     while (1)
 10015                           
 10016  00B2                     l5081:	
 10017                           
 10018                           ;main.c: 149:                     if(!config_mode){
 10019  00B2  0020               	movlb	0	; select bank0
 10020  00B3  0830               	movf	_config_mode,w	;volatile
 10021  00B4  1D03               	btfss	3,2
 10022  00B5  28B7               	goto	u2281
 10023  00B6  28B8               	goto	u2280
 10024  00B7                     u2281:	
 10025  00B7  291B               	goto	l5113
 10026  00B8                     u2280:	
 10027  00B8                     l5083:	
 10028                           
 10029                           ;main.c: 151:                         convertedValue = ADC_read();
 10030  00B8  3186  2652  3180   	fcall	_ADC_read
 10031  00BB  0020               	movlb	0	; select bank0
 10032  00BC  083D               	movf	?_ADC_read+1,w
 10033  00BD  00A7               	movwf	_convertedValue+1
 10034  00BE  083C               	movf	?_ADC_read,w
 10035  00BF  00A6               	movwf	_convertedValue
 10036  00C0                     l5085:	
 10037                           
 10038                           ;main.c: 152:                         level_bin = (convertedValue >> 8);
 10039  00C0  0827               	movf	_convertedValue+1,w
 10040  00C1  00C8               	movwf	??_main+1
 10041  00C2  0826               	movf	_convertedValue,w
 10042  00C3  00C7               	movwf	??_main
 10043  00C4  0848               	movf	??_main+1,w
 10044  00C5  00C7               	movwf	??_main
 10045  00C6  01C8               	clrf	??_main+1
 10046  00C7  0847               	movf	??_main,w
 10047  00C8  00A2               	movwf	_level_bin
 10048  00C9  0848               	movf	??_main+1,w
 10049  00CA  00A3               	movwf	_level_bin+1
 10050  00CB                     l5087:	
 10051                           
 10052                           ;main.c: 153:                         LED_bin(level_bin);
 10053  00CB  0823               	movf	_level_bin+1,w
 10054  00CC  00BB               	movwf	LED_bin@value+1
 10055  00CD  0822               	movf	_level_bin,w
 10056  00CE  00BA               	movwf	LED_bin@value
 10057  00CF  3186  2638  3180   	fcall	_LED_bin
 10058  00D2                     l5089:	
 10059                           
 10060                           ;main.c: 154:                         lum_threshold = (level_bin > 2);
 10061  00D2  3000               	movlw	0
 10062  00D3  0020               	movlb	0	; select bank0
 10063  00D4  0223               	subwf	_level_bin+1,w
 10064  00D5  3003               	movlw	3
 10065  00D6  1903               	skipnz
 10066  00D7  0222               	subwf	_level_bin,w
 10067  00D8  1803               	skipnc
 10068  00D9  28DB               	goto	u2291
 10069  00DA  28DD               	goto	u2290
 10070  00DB                     u2291:	
 10071  00DB  3001               	movlw	1
 10072  00DC  28DE               	goto	u2300
 10073  00DD                     u2290:	
 10074  00DD  3000               	movlw	0
 10075  00DE                     u2300:	
 10076  00DE  00C7               	movwf	??_main
 10077  00DF  01C8               	clrf	??_main+1
 10078  00E0  0847               	movf	??_main,w
 10079  00E1  00A0               	movwf	_lum_threshold
 10080  00E2  0848               	movf	??_main+1,w
 10081  00E3  00A1               	movwf	_lum_threshold+1
 10082  00E4                     l5091:	
 10083                           
 10084                           ;main.c: 156:                         if(lum_threshold){
 10085  00E4  0820               	movf	_lum_threshold,w
 10086  00E5  0421               	iorwf	_lum_threshold+1,w
 10087  00E6  1903               	btfsc	3,2
 10088  00E7  28E9               	goto	u2311
 10089  00E8  28EA               	goto	u2310
 10090  00E9                     u2311:	
 10091  00E9  290C               	goto	l5107
 10092  00EA                     u2310:	
 10093  00EA                     l5093:	
 10094                           
 10095                           ;main.c: 157:                             if(alarm == 2){
 10096  00EA  3002               	movlw	2
 10097  00EB  062F               	xorwf	_alarm,w	;volatile
 10098  00EC  1D03               	btfss	3,2
 10099  00ED  28EF               	goto	u2321
 10100  00EE  28F0               	goto	u2320
 10101  00EF                     u2321:	
 10102  00EF  28FC               	goto	l5099
 10103  00F0                     u2320:	
 10104  00F0                     l5095:	
 10105                           
 10106                           ;main.c: 158:                                 duty_cycle +=1 ;
 10107  00F0  3001               	movlw	1
 10108  00F1  07A4               	addwf	_duty_cycle,f
 10109  00F2  3000               	movlw	0
 10110  00F3  3DA5               	addwfc	_duty_cycle+1,f
 10111  00F4                     l5097:	
 10112                           
 10113                           ;main.c: 159:                                 PWM6_LoadDutyValue(duty_cycle);
 10114  00F4  0825               	movf	_duty_cycle+1,w
 10115  00F5  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10116  00F6  0824               	movf	_duty_cycle,w
 10117  00F7  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10118  00F8  3186  266C  3180   	fcall	_PWM6_LoadDutyValue
 10119                           
 10120                           ;main.c: 160:                             }
 10121  00FB  28B2               	goto	l5081
 10122  00FC                     l5099:	
 10123  00FC  082F               	movf	_alarm,w	;volatile
 10124  00FD  1D03               	btfss	3,2
 10125  00FE  2900               	goto	u2331
 10126  00FF  2901               	goto	u2330
 10127  0100                     u2331:	
 10128  0100  28B2               	goto	l1169
 10129  0101                     u2330:	
 10130  0101                     l5101:	
 10131                           
 10132                           ;main.c: 162:                                 PIE0bits.TMR0IE = 1;
 10133  0101  002E               	movlb	14	; select bank14
 10134  0102  1696               	bsf	22,5	;volatile
 10135  0103                     l5103:	
 10136                           
 10137                           ;main.c: 163:                                 TMR0_StartTimer();
 10138  0103  318F  2718  3180   	fcall	_TMR0_StartTimer
 10139  0106                     l5105:	
 10140                           
 10141                           ;main.c: 164:                                 alarm = 2 ;
 10142  0106  3002               	movlw	2
 10143  0107  0020               	movlb	0	; select bank0
 10144  0108  00C7               	movwf	??_main
 10145  0109  0847               	movf	??_main,w
 10146  010A  00AF               	movwf	_alarm	;volatile
 10147  010B  28B2               	goto	l5081
 10148  010C                     l5107:	
 10149                           
 10150                           ;main.c: 168:                             if(alarm == 2){
 10151  010C  3002               	movlw	2
 10152  010D  062F               	xorwf	_alarm,w	;volatile
 10153  010E  1D03               	btfss	3,2
 10154  010F  2911               	goto	u2341
 10155  0110  2912               	goto	u2340
 10156  0111                     u2341:	
 10157  0111  28B2               	goto	l5081
 10158  0112                     u2340:	
 10159  0112                     l5109:	
 10160                           
 10161                           ;main.c: 169:                                 PWM6_LoadDutyValue(0);
 10162  0112  3000               	movlw	0
 10163  0113  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10164  0114  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10165  0115  3186  266C  3180   	fcall	_PWM6_LoadDutyValue
 10166  0118                     l5111:	
 10167                           
 10168                           ;main.c: 170:                                 alarm = 0 ;
 10169  0118  0020               	movlb	0	; select bank0
 10170  0119  01AF               	clrf	_alarm	;volatile
 10171  011A  28B2               	goto	l5081
 10172  011B                     l5113:	
 10173  011B  0330               	decf	_config_mode,w	;volatile
 10174  011C  1D03               	btfss	3,2
 10175  011D  291F               	goto	u2351
 10176  011E  2920               	goto	u2350
 10177  011F                     u2351:	
 10178  011F  28B2               	goto	l5081
 10179  0120                     u2350:	
 10180  0120                     l5115:	
 10181                           
 10182                           ;main.c: 178:                       (PIE0bits.INTE = 0);
 10183  0120  002E               	movlb	14	; select bank14
 10184  0121  1016               	bcf	22,0	;volatile
 10185  0122                     l5117:	
 10186                           
 10187                           ;main.c: 179:                         config_routine();
 10188  0122  3181  21C2  3180   	fcall	_config_routine
 10189  0125                     l5119:	
 10190                           
 10191                           ;main.c: 180:                         (PIE0bits.INTE = 1);
 10192  0125  002E               	movlb	14	; select bank14
 10193  0126  1416               	bsf	22,0	;volatile
 10194  0127  28B2               	goto	l5081
 10195  0128  3180  285B         	ljmp	start
 10196  012A                     __end_of_main:	
 10197                           
 10198                           	psect	text1
 10199  012A                     __ptext1:	
 10200 ;; *************** function _recoverData *****************
 10201 ;; Defined at:
 10202 ;;		line 11 in file "eeprom_rw.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, status,0, pclath, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;Total ram usage:        1 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    9
 10223 ;; This function calls:
 10224 ;;		_DATAEE_ReadByte
 10225 ;;		_DATAEE_WriteByte
 10226 ;;		_cksum
 10227 ;;		_cksum_w
 10228 ;;		_reset_recv
 10229 ;; This function is called by:
 10230 ;;		_main
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _recoverData
 10236  012A                     _recoverData:	
 10237  012A                     l4809:	
 10238                           ;incstack = 0
 10239                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10240                           
 10241                           
 10242                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10243  012A  30F5               	movlw	245
 10244  012B  0020               	movlb	0	; select bank0
 10245  012C  00BA               	movwf	DATAEE_ReadByte@bAdd
 10246  012D  30F0               	movlw	240
 10247  012E  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10248  012F  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10249  0132  3AAB               	xorlw	171
 10250  0133  1D03               	skipz
 10251  0134  2936               	goto	u1891
 10252  0135  2937               	goto	u1890
 10253  0136                     u1891:	
 10254  0136  298B               	goto	l4815
 10255  0137                     u1890:	
 10256  0137                     l4811:	
 10257                           
 10258                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10259  0137  3185  25C1  3181   	fcall	_cksum
 10260  013A  0020               	movlb	0	; select bank0
 10261  013B  00C6               	movwf	??_recoverData
 10262  013C  30FF               	movlw	255
 10263  013D  00BA               	movwf	DATAEE_ReadByte@bAdd
 10264  013E  30F0               	movlw	240
 10265  013F  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10266  0140  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10267  0143  0020               	movlb	0	; select bank0
 10268  0144  0646               	xorwf	??_recoverData,w
 10269  0145  1D03               	skipz
 10270  0146  2948               	goto	u1901
 10271  0147  2949               	goto	u1900
 10272  0148                     u1901:	
 10273  0148  298B               	goto	l4815
 10274  0149                     u1900:	
 10275  0149                     l4813:	
 10276                           
 10277                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10278  0149  30F6               	movlw	246
 10279  014A  00BA               	movwf	DATAEE_ReadByte@bAdd
 10280  014B  30F0               	movlw	240
 10281  014C  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10282  014D  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10283  0150  0020               	movlb	0	; select bank0
 10284  0151  00C6               	movwf	??_recoverData
 10285  0152  0846               	movf	??_recoverData,w
 10286  0153  00B6               	movwf	_clkh	;volatile
 10287                           
 10288                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10289  0154  30F7               	movlw	247
 10290  0155  00BA               	movwf	DATAEE_ReadByte@bAdd
 10291  0156  30F0               	movlw	240
 10292  0157  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10293  0158  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10294  015B  0020               	movlb	0	; select bank0
 10295  015C  00C6               	movwf	??_recoverData
 10296  015D  0846               	movf	??_recoverData,w
 10297  015E  00B5               	movwf	_clkm	;volatile
 10298                           
 10299                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10300  015F  30F8               	movlw	248
 10301  0160  00BA               	movwf	DATAEE_ReadByte@bAdd
 10302  0161  30F0               	movlw	240
 10303  0162  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10304  0163  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10305  0166  0020               	movlb	0	; select bank0
 10306  0167  00C6               	movwf	??_recoverData
 10307  0168  0846               	movf	??_recoverData,w
 10308  0169  00D5               	movwf	_nreg
 10309                           
 10310                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10311  016A  30F9               	movlw	249
 10312  016B  00BA               	movwf	DATAEE_ReadByte@bAdd
 10313  016C  30F0               	movlw	240
 10314  016D  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10315  016E  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10316  0171  0020               	movlb	0	; select bank0
 10317  0172  00C6               	movwf	??_recoverData
 10318  0173  0846               	movf	??_recoverData,w
 10319  0174  00AE               	movwf	_nreg_pt
 10320                           
 10321                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10322  0175  30FA               	movlw	250
 10323  0176  00BA               	movwf	DATAEE_ReadByte@bAdd
 10324  0177  30F0               	movlw	240
 10325  0178  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10326  0179  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10327  017C  0020               	movlb	0	; select bank0
 10328  017D  00C6               	movwf	??_recoverData
 10329  017E  0846               	movf	??_recoverData,w
 10330  017F  00D4               	movwf	_pmon
 10331                           
 10332                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10333  0180  30FB               	movlw	251
 10334  0181  00BA               	movwf	DATAEE_ReadByte@bAdd
 10335  0182  30F0               	movlw	240
 10336  0183  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10337  0184  3187  279B  3181   	fcall	_DATAEE_ReadByte
 10338  0187  0020               	movlb	0	; select bank0
 10339  0188  00C6               	movwf	??_recoverData
 10340  0189  0846               	movf	??_recoverData,w
 10341  018A  00D3               	movwf	_tala
 10342  018B                     l4815:	
 10343                           
 10344                           ;eeprom_rw.c: 24:     reset_recv();
 10345  018B  3186  2600  3181   	fcall	_reset_recv
 10346  018E                     l4817:	
 10347                           
 10348                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10349  018E  30F5               	movlw	245
 10350  018F  0020               	movlb	0	; select bank0
 10351  0190  00C0               	movwf	DATAEE_WriteByte@bAdd
 10352  0191  30F0               	movlw	240
 10353  0192  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10354  0193  30AB               	movlw	171
 10355  0194  00C6               	movwf	??_recoverData
 10356  0195  0846               	movf	??_recoverData,w
 10357  0196  00C2               	movwf	DATAEE_WriteByte@bData
 10358  0197  3185  257D  3181   	fcall	_DATAEE_WriteByte
 10359  019A                     l4819:	
 10360                           
 10361                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10362  019A  30F8               	movlw	248
 10363  019B  0020               	movlb	0	; select bank0
 10364  019C  00C0               	movwf	DATAEE_WriteByte@bAdd
 10365  019D  30F0               	movlw	240
 10366  019E  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10367  019F  0855               	movf	_nreg,w
 10368  01A0  00C6               	movwf	??_recoverData
 10369  01A1  0846               	movf	??_recoverData,w
 10370  01A2  00C2               	movwf	DATAEE_WriteByte@bData
 10371  01A3  3185  257D  3181   	fcall	_DATAEE_WriteByte
 10372  01A6                     l4821:	
 10373                           
 10374                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10375  01A6  30FA               	movlw	250
 10376  01A7  0020               	movlb	0	; select bank0
 10377  01A8  00C0               	movwf	DATAEE_WriteByte@bAdd
 10378  01A9  30F0               	movlw	240
 10379  01AA  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10380  01AB  0854               	movf	_pmon,w
 10381  01AC  00C6               	movwf	??_recoverData
 10382  01AD  0846               	movf	??_recoverData,w
 10383  01AE  00C2               	movwf	DATAEE_WriteByte@bData
 10384  01AF  3185  257D  3181   	fcall	_DATAEE_WriteByte
 10385  01B2                     l4823:	
 10386                           
 10387                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10388  01B2  30FB               	movlw	251
 10389  01B3  0020               	movlb	0	; select bank0
 10390  01B4  00C0               	movwf	DATAEE_WriteByte@bAdd
 10391  01B5  30F0               	movlw	240
 10392  01B6  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10393  01B7  0853               	movf	_tala,w
 10394  01B8  00C6               	movwf	??_recoverData
 10395  01B9  0846               	movf	??_recoverData,w
 10396  01BA  00C2               	movwf	DATAEE_WriteByte@bData
 10397  01BB  3185  257D  3181   	fcall	_DATAEE_WriteByte
 10398  01BE                     l4825:	
 10399                           
 10400                           ;eeprom_rw.c: 31:     cksum_w();
 10401  01BE  3187  277B  3181   	fcall	_cksum_w
 10402  01C1                     l1470:	
 10403  01C1  0008               	return
 10404  01C2                     __end_of_recoverData:	
 10405                           
 10406                           	psect	text2
 10407  0600                     __ptext2:	
 10408 ;; *************** function _reset_recv *****************
 10409 ;; Defined at:
 10410 ;;		line 75 in file "eeprom_rw.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;		None
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  i               2   13[BANK0 ] unsigned int 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0, pclath, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;Total ram usage:        2 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    7
 10431 ;; This function calls:
 10432 ;;		_DATAEE_WriteByte
 10433 ;; This function is called by:
 10434 ;;		_recoverData
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _reset_recv
 10440  0600                     _reset_recv:	
 10441  0600                     l4673:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10444                           
 10445                           
 10446                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10447  0600  30F5               	movlw	245
 10448  0601  0020               	movlb	0	; select bank0
 10449  0602  00C4               	movwf	reset_recv@i
 10450  0603  30F0               	movlw	240
 10451  0604  00C5               	movwf	reset_recv@i+1
 10452  0605                     l4677:	
 10453                           
 10454                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10455  0605  0845               	movf	reset_recv@i+1,w
 10456  0606  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10457  0607  0844               	movf	reset_recv@i,w
 10458  0608  00C0               	movwf	DATAEE_WriteByte@bAdd
 10459  0609  01C2               	clrf	DATAEE_WriteByte@bData
 10460  060A  3185  257D  3186   	fcall	_DATAEE_WriteByte
 10461  060D                     l4679:	
 10462  060D  3001               	movlw	1
 10463  060E  0020               	movlb	0	; select bank0
 10464  060F  07C4               	addwf	reset_recv@i,f
 10465  0610  3000               	movlw	0
 10466  0611  3DC5               	addwfc	reset_recv@i+1,f
 10467  0612                     l4681:	
 10468  0612  30F1               	movlw	241
 10469  0613  0245               	subwf	reset_recv@i+1,w
 10470  0614  3000               	movlw	0
 10471  0615  1903               	skipnz
 10472  0616  0244               	subwf	reset_recv@i,w
 10473  0617  1C03               	skipc
 10474  0618  2E1A               	goto	u1801
 10475  0619  2E1B               	goto	u1800
 10476  061A                     u1801:	
 10477  061A  2E05               	goto	l4677
 10478  061B                     u1800:	
 10479  061B                     l1497:	
 10480  061B  0008               	return
 10481  061C                     __end_of_reset_recv:	
 10482                           
 10483                           	psect	text3
 10484  077B                     __ptext3:	
 10485 ;; *************** function _cksum_w *****************
 10486 ;; Defined at:
 10487 ;;		line 61 in file "eeprom_rw.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0, pclath, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;Total ram usage:        1 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    8
 10508 ;; This function calls:
 10509 ;;		_DATAEE_WriteByte
 10510 ;;		_cksum
 10511 ;; This function is called by:
 10512 ;;		_recoverData
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           
 10517                           ;psect for function _cksum_w
 10518  077B                     _cksum_w:	
 10519  077B                     l4683:	
 10520                           ;incstack = 0
 10521                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10522                           
 10523                           
 10524                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10525  077B  30FF               	movlw	255
 10526  077C  0020               	movlb	0	; select bank0
 10527  077D  00C0               	movwf	DATAEE_WriteByte@bAdd
 10528  077E  30F0               	movlw	240
 10529  077F  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10530  0780  3185  25C1  3187   	fcall	_cksum
 10531  0783  0020               	movlb	0	; select bank0
 10532  0784  00C4               	movwf	??_cksum_w
 10533  0785  0844               	movf	??_cksum_w,w
 10534  0786  00C2               	movwf	DATAEE_WriteByte@bData
 10535  0787  3185  257D  3187   	fcall	_DATAEE_WriteByte
 10536  078A                     l1487:	
 10537  078A  0008               	return
 10538  078B                     __end_of_cksum_w:	
 10539                           
 10540                           	psect	text4
 10541  05C1                     __ptext4:	
 10542 ;; *************** function _cksum *****************
 10543 ;; Defined at:
 10544 ;;		line 66 in file "eeprom_rw.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;		None
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  i               2    7[BANK0 ] unsigned int 
 10549 ;;  res             1    6[BANK0 ] unsigned char 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      unsigned char 
 10552 ;; Registers used:
 10553 ;;		wreg, status,2, status,0, pclath, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;Total ram usage:        4 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:    7
 10566 ;; This function calls:
 10567 ;;		_DATAEE_ReadByte
 10568 ;; This function is called by:
 10569 ;;		_recoverData
 10570 ;;		_cksum_w
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _cksum
 10576  05C1                     _cksum:	
 10577  05C1                     l4223:	
 10578                           ;incstack = 0
 10579                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 10580                           
 10581                           
 10582                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 10583  05C1  0020               	movlb	0	; select bank0
 10584  05C2  01BD               	clrf	cksum@res
 10585  05C3                     l4225:	
 10586                           
 10587                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 10588  05C3  30F5               	movlw	245
 10589  05C4  00BE               	movwf	cksum@i
 10590  05C5  30F0               	movlw	240
 10591  05C6  00BF               	movwf	cksum@i+1
 10592  05C7                     l4231:	
 10593                           
 10594                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 10595  05C7  083F               	movf	cksum@i+1,w
 10596  05C8  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10597  05C9  083E               	movf	cksum@i,w
 10598  05CA  00BA               	movwf	DATAEE_ReadByte@bAdd
 10599  05CB  3187  279B  3185   	fcall	_DATAEE_ReadByte
 10600  05CE  0020               	movlb	0	; select bank0
 10601  05CF  00BC               	movwf	??_cksum
 10602  05D0  083C               	movf	??_cksum,w
 10603  05D1  07BD               	addwf	cksum@res,f
 10604  05D2                     l4233:	
 10605                           
 10606                           ;eeprom_rw.c: 71:     }
 10607  05D2  3001               	movlw	1
 10608  05D3  07BE               	addwf	cksum@i,f
 10609  05D4  3000               	movlw	0
 10610  05D5  3DBF               	addwfc	cksum@i+1,f
 10611  05D6                     l4235:	
 10612  05D6  30F0               	movlw	240
 10613  05D7  023F               	subwf	cksum@i+1,w
 10614  05D8  30FF               	movlw	255
 10615  05D9  1903               	skipnz
 10616  05DA  023E               	subwf	cksum@i,w
 10617  05DB  1C03               	skipc
 10618  05DC  2DDE               	goto	u1601
 10619  05DD  2DDF               	goto	u1600
 10620  05DE                     u1601:	
 10621  05DE  2DC7               	goto	l4231
 10622  05DF                     u1600:	
 10623  05DF                     l4237:	
 10624                           
 10625                           ;eeprom_rw.c: 72:     return res;
 10626  05DF  083D               	movf	cksum@res,w
 10627  05E0                     l1492:	
 10628  05E0  0008               	return
 10629  05E1                     __end_of_cksum:	
 10630                           
 10631                           	psect	text5
 10632  079B                     __ptext5:	
 10633 ;; *************** function _DATAEE_ReadByte *****************
 10634 ;; Defined at:
 10635 ;;		line 202 in file "mcc_generated_files/memory.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  bAdd            2    3[BANK0 ] unsigned short 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      unsigned char 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        2 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    6
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_recoverData
 10660 ;;		_cksum
 10661 ;;		_read_ring
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _DATAEE_ReadByte
 10667  079B                     _DATAEE_ReadByte:	
 10668  079B                     l3959:	
 10669                           ;incstack = 0
 10670                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 10671                           
 10672                           
 10673                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 10674  079B  0020               	movlb	0	; select bank0
 10675  079C  083B               	movf	DATAEE_ReadByte@bAdd+1,w
 10676  079D  0030               	movlb	16	; select bank16
 10677  079E  009B               	movwf	27	;volatile
 10678  079F                     l3961:	
 10679                           
 10680                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 10681  079F  0020               	movlb	0	; select bank0
 10682  07A0  083A               	movf	DATAEE_ReadByte@bAdd,w
 10683  07A1  0030               	movlb	16	; select bank16
 10684  07A2  009A               	movwf	26	;volatile
 10685  07A3                     l3963:	
 10686                           
 10687                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 10688  07A3  171E               	bsf	30,6	;volsfr
 10689  07A4                     l3965:	
 10690                           
 10691                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 10692  07A4  141E               	bsf	30,0	;volsfr
 10693  07A5                     l3967:	
 10694                           
 10695                           ;mcc_generated_files/memory.c: 208:     __nop();
 10696  07A5  0000               	nop
 10697  07A6                     l3969:	
 10698                           
 10699                           ;mcc_generated_files/memory.c: 209:     __nop();
 10700  07A6  0000               	nop
 10701  07A7                     l3971:	
 10702                           
 10703                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 10704  07A7  0030               	movlb	16	; select bank16
 10705  07A8  081C               	movf	28,w	;volatile
 10706  07A9                     l963:	
 10707  07A9  0008               	return
 10708  07AA                     __end_of_DATAEE_ReadByte:	
 10709                           
 10710                           	psect	text6
 10711  057D                     __ptext6:	
 10712 ;; *************** function _DATAEE_WriteByte *****************
 10713 ;; Defined at:
 10714 ;;		line 180 in file "mcc_generated_files/memory.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  bAdd            2    9[BANK0 ] unsigned short 
 10717 ;;  bData           1   11[BANK0 ] unsigned char 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10729 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;Total ram usage:        4 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    6
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_recoverData
 10740 ;;		_cksum_w
 10741 ;;		_reset_recv
 10742 ;;		_push_ring
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           
 10747                           ;psect for function _DATAEE_WriteByte
 10748  057D                     _DATAEE_WriteByte:	
 10749  057D                     l4113:	
 10750                           ;incstack = 0
 10751                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 10752                           
 10753                           
 10754                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 10755  057D  3000               	movlw	0
 10756  057E  1B8B               	btfsc	11,7	;volatile
 10757  057F  3001               	movlw	1
 10758  0580  0020               	movlb	0	; select bank0
 10759  0581  00C3               	movwf	DATAEE_WriteByte@GIEBitValue
 10760                           
 10761                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 10762  0582  0841               	movf	DATAEE_WriteByte@bAdd+1,w
 10763  0583  0030               	movlb	16	; select bank16
 10764  0584  009B               	movwf	27	;volatile
 10765  0585                     l4115:	
 10766                           
 10767                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 10768  0585  0020               	movlb	0	; select bank0
 10769  0586  0840               	movf	DATAEE_WriteByte@bAdd,w
 10770  0587  0030               	movlb	16	; select bank16
 10771  0588  009A               	movwf	26	;volatile
 10772  0589                     l4117:	
 10773                           
 10774                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 10775  0589  0020               	movlb	0	; select bank0
 10776  058A  0842               	movf	DATAEE_WriteByte@bData,w
 10777  058B  0030               	movlb	16	; select bank16
 10778  058C  009C               	movwf	28	;volatile
 10779  058D                     l4119:	
 10780                           
 10781                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 10782  058D  171E               	bsf	30,6	;volsfr
 10783  058E                     l4121:	
 10784                           
 10785                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 10786  058E  151E               	bsf	30,2	;volsfr
 10787  058F                     l4123:	
 10788                           
 10789                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 10790  058F  138B               	bcf	11,7	;volatile
 10791  0590                     l4125:	
 10792                           
 10793                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 10794  0590  3055               	movlw	85
 10795  0591  009F               	movwf	31	;volsfr
 10796  0592                     l4127:	
 10797                           
 10798                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 10799  0592  30AA               	movlw	170
 10800  0593  009F               	movwf	31	;volsfr
 10801  0594                     l4129:	
 10802                           
 10803                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 10804  0594  149E               	bsf	30,1	;volsfr
 10805  0595                     l957:	
 10806                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 10807                           
 10808                           
 10809                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 10810  0595  189E               	btfsc	30,1	;volsfr
 10811  0596  2D98               	goto	u1511
 10812  0597  2D99               	goto	u1510
 10813  0598                     u1511:	
 10814  0598  2D95               	goto	l957
 10815  0599                     u1510:	
 10816  0599                     l959:	
 10817                           
 10818                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 10819  0599  111E               	bcf	30,2	;volsfr
 10820  059A                     l4131:	
 10821                           
 10822                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 10823  059A  0020               	movlb	0	; select bank0
 10824  059B  0C43               	rrf	DATAEE_WriteByte@GIEBitValue,w
 10825  059C  1C03               	skipc
 10826  059D  138B               	bcf	11,7	;volatile
 10827  059E  1803               	skipnc
 10828  059F  178B               	bsf	11,7	;volatile
 10829  05A0                     l960:	
 10830  05A0  0008               	return
 10831  05A1                     __end_of_DATAEE_WriteByte:	
 10832                           
 10833                           	psect	text7
 10834  01C2                     __ptext7:	
 10835 ;; *************** function _config_routine *****************
 10836 ;; Defined at:
 10837 ;;		line 193 in file "main.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  select_mode     2   12[BANK0 ] unsigned int 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        3 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:    9
 10858 ;; This function calls:
 10859 ;;		_all_LED
 10860 ;;		_checkDebounce
 10861 ;;		_clock_field
 10862 ;;		_mod1_LED
 10863 ;;		_mod2_LED
 10864 ;;		_mod3_LED
 10865 ;;		_mod4_LED
 10866 ;; This function is called by:
 10867 ;;		_main
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _config_routine
 10873  01C2                     _config_routine:	
 10874  01C2                     l4841:	
 10875                           ;incstack = 0
 10876                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10877                           
 10878                           
 10879                           ;main.c: 195:     unsigned int select_mode =0;
 10880  01C2  0020               	movlb	0	; select bank0
 10881  01C3  01C3               	clrf	config_routine@select_mode
 10882  01C4  01C4               	clrf	config_routine@select_mode+1
 10883  01C5                     l4843:	
 10884                           
 10885                           ;main.c: 200:                 if(select_mode == 0){
 10886  01C5  0843               	movf	config_routine@select_mode,w
 10887  01C6  0444               	iorwf	config_routine@select_mode+1,w
 10888  01C7  1D03               	btfss	3,2
 10889  01C8  29CA               	goto	u1921
 10890  01C9  29CB               	goto	u1920
 10891  01CA                     u1921:	
 10892  01CA  29CE               	goto	l4847
 10893  01CB                     u1920:	
 10894  01CB                     l4845:	
 10895                           
 10896                           ;main.c: 201:                         all_LED();}
 10897  01CB  3182  22B5  3181   	fcall	_all_LED
 10898  01CE                     l4847:	
 10899                           
 10900                           ;main.c: 203:                 if(!PORTBbits.RB4){
 10901  01CE  0020               	movlb	0	; select bank0
 10902  01CF  1A0D               	btfsc	13,4	;volatile
 10903  01D0  29D2               	goto	u1931
 10904  01D1  29D3               	goto	u1930
 10905  01D2                     u1931:	
 10906  01D2  2A0E               	goto	l4869
 10907  01D3                     u1930:	
 10908  01D3                     l4849:	
 10909                           
 10910                           ;main.c: 204:                     if(checkDebounce()){
 10911  01D3  3183  23F7  3181   	fcall	_checkDebounce
 10912  01D6  3A00               	xorlw	0
 10913  01D7  1903               	skipnz
 10914  01D8  29DA               	goto	u1941
 10915  01D9  29DB               	goto	u1940
 10916  01DA                     u1941:	
 10917  01DA  2A09               	goto	l4867
 10918  01DB                     u1940:	
 10919  01DB                     l4851:	
 10920                           
 10921                           ;main.c: 206:                         select_mode +=1;
 10922  01DB  3001               	movlw	1
 10923  01DC  0020               	movlb	0	; select bank0
 10924  01DD  07C3               	addwf	config_routine@select_mode,f
 10925  01DE  3000               	movlw	0
 10926  01DF  3DC4               	addwfc	config_routine@select_mode+1,f
 10927                           
 10928                           ;main.c: 208:                         switch(select_mode){
 10929  01E0  29F6               	goto	l4865
 10930  01E1                     l4853:	
 10931  01E1  318F  27D3  3181   	fcall	_mod1_LED
 10932  01E4  2A09               	goto	l4867
 10933  01E5                     l4855:	
 10934  01E5  318F  27C9  3181   	fcall	_mod2_LED
 10935  01E8  2A09               	goto	l4867
 10936  01E9                     l4857:	
 10937  01E9  318F  27DE  3181   	fcall	_mod3_LED
 10938  01EC  2A09               	goto	l4867
 10939  01ED                     l4859:	
 10940  01ED  318F  27E9  3181   	fcall	_mod4_LED
 10941  01F0  2A09               	goto	l4867
 10942  01F1                     l4861:	
 10943  01F1  01C3               	clrf	config_routine@select_mode
 10944  01F2  01C4               	clrf	config_routine@select_mode+1
 10945  01F3  01B0               	clrf	_config_mode	;volatile
 10946  01F4  01AF               	clrf	_alarm	;volatile
 10947                           
 10948                           ;main.c: 214:                             break;
 10949  01F5  2A09               	goto	l4867
 10950  01F6                     l4865:	
 10951                           
 10952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10953                           ; Switch size 1, requested type "simple"
 10954                           ; Number of cases is 1, Range of values is 0 to 0
 10955                           ; switch strategies available:
 10956                           ; Name         Instructions Cycles
 10957                           ; simple_byte            4     3 (average)
 10958                           ; direct_byte            8     6 (fixed)
 10959                           ; jumptable            260     6 (fixed)
 10960                           ;	Chosen strategy is simple_byte
 10961  01F6  0844               	movf	config_routine@select_mode+1,w
 10962  01F7  3A00               	xorlw	0	; case 0
 10963  01F8  1903               	skipnz
 10964  01F9  29FB               	goto	l5355
 10965  01FA  29F1               	goto	l4861
 10966  01FB                     l5355:	
 10967                           
 10968                           ; Switch size 1, requested type "simple"
 10969                           ; Number of cases is 4, Range of values is 1 to 4
 10970                           ; switch strategies available:
 10971                           ; Name         Instructions Cycles
 10972                           ; simple_byte           13     7 (average)
 10973                           ; direct_byte           17     9 (fixed)
 10974                           ; jumptable            263     9 (fixed)
 10975                           ;	Chosen strategy is simple_byte
 10976  01FB  0843               	movf	config_routine@select_mode,w
 10977  01FC  3A01               	xorlw	1	; case 1
 10978  01FD  1903               	skipnz
 10979  01FE  29E1               	goto	l4853
 10980  01FF  3A03               	xorlw	3	; case 2
 10981  0200  1903               	skipnz
 10982  0201  29E5               	goto	l4855
 10983  0202  3A01               	xorlw	1	; case 3
 10984  0203  1903               	skipnz
 10985  0204  29E9               	goto	l4857
 10986  0205  3A07               	xorlw	7	; case 4
 10987  0206  1903               	skipnz
 10988  0207  29ED               	goto	l4859
 10989  0208  29F1               	goto	l4861
 10990  0209                     l4867:	
 10991                           
 10992                           ;main.c: 219:                     last_ms = clkms;
 10993  0209  087D               	movf	_clkms,w	;volatile
 10994  020A  0020               	movlb	0	; select bank0
 10995  020B  00C2               	movwf	??_config_routine
 10996  020C  0842               	movf	??_config_routine,w
 10997  020D  00B3               	movwf	_last_ms
 10998  020E                     l4869:	
 10999                           
 11000                           ;main.c: 222:                 if(!PORTCbits.RC5){
 11001  020E  1A8E               	btfsc	14,5	;volatile
 11002  020F  2A11               	goto	u1951
 11003  0210  2A12               	goto	u1950
 11004  0211                     u1951:	
 11005  0211  2A2E               	goto	l4885
 11006  0212                     u1950:	
 11007  0212  2A1B               	goto	l4883
 11008  0213                     l4873:	
 11009  0213  318F  27D3  3181   	fcall	_mod1_LED
 11010  0216  2A2E               	goto	l4885
 11011  0217                     l4875:	
 11012  0217  3182  223E  3181   	fcall	_clock_field
 11013  021A  2A2E               	goto	l4885
 11014  021B                     l4883:	
 11015                           
 11016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11017                           ; Switch size 1, requested type "simple"
 11018                           ; Number of cases is 1, Range of values is 0 to 0
 11019                           ; switch strategies available:
 11020                           ; Name         Instructions Cycles
 11021                           ; simple_byte            4     3 (average)
 11022                           ; direct_byte            8     6 (fixed)
 11023                           ; jumptable            260     6 (fixed)
 11024                           ;	Chosen strategy is simple_byte
 11025  021B  0844               	movf	config_routine@select_mode+1,w
 11026  021C  3A00               	xorlw	0	; case 0
 11027  021D  1903               	skipnz
 11028  021E  2A20               	goto	l5357
 11029  021F  2A2E               	goto	l4885
 11030  0220                     l5357:	
 11031                           
 11032                           ; Switch size 1, requested type "simple"
 11033                           ; Number of cases is 4, Range of values is 1 to 4
 11034                           ; switch strategies available:
 11035                           ; Name         Instructions Cycles
 11036                           ; simple_byte           13     7 (average)
 11037                           ; direct_byte           17     9 (fixed)
 11038                           ; jumptable            263     9 (fixed)
 11039                           ;	Chosen strategy is simple_byte
 11040  0220  0843               	movf	config_routine@select_mode,w
 11041  0221  3A01               	xorlw	1	; case 1
 11042  0222  1903               	skipnz
 11043  0223  2A13               	goto	l4873
 11044  0224  3A03               	xorlw	3	; case 2
 11045  0225  1903               	skipnz
 11046  0226  2A17               	goto	l4875
 11047  0227  3A01               	xorlw	1	; case 3
 11048  0228  1903               	skipnz
 11049  0229  2A13               	goto	l4873
 11050  022A  3A07               	xorlw	7	; case 4
 11051  022B  1903               	skipnz
 11052  022C  2A13               	goto	l4873
 11053  022D  2A2E               	goto	l4885
 11054  022E                     l4885:	
 11055                           
 11056                           ;main.c: 235:                    _delay((unsigned long)((10)*(1000000/4000.0)));
 11057  022E  3004               	movlw	4
 11058  022F  0020               	movlb	0	; select bank0
 11059  0230  00C2               	movwf	??_config_routine
 11060  0231  303D               	movlw	61
 11061  0232                     u2407:	
 11062  0232  0B89               	decfsz	9,f
 11063  0233  2A32               	goto	u2407
 11064  0234  0BC2               	decfsz	??_config_routine,f
 11065  0235  2A32               	goto	u2407
 11066  0236  3200               	nop2
 11067  0237                     l4887:	
 11068                           
 11069                           ;main.c: 237:             }while(config_mode == 1);
 11070  0237  0020               	movlb	0	; select bank0
 11071  0238  0330               	decf	_config_mode,w	;volatile
 11072  0239  1903               	btfsc	3,2
 11073  023A  2A3C               	goto	u1961
 11074  023B  2A3D               	goto	u1960
 11075  023C                     u1961:	
 11076  023C  29C5               	goto	l4843
 11077  023D                     u1960:	
 11078  023D                     l1206:	
 11079  023D  0008               	return
 11080  023E                     __end_of_config_routine:	
 11081                           
 11082                           	psect	text8
 11083  023E                     __ptext8:	
 11084 ;; *************** function _clock_field *****************
 11085 ;; Defined at:
 11086 ;;		line 250 in file "main.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  select          2    9[BANK0 ] unsigned int 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;Total ram usage:        3 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    8
 11107 ;; This function calls:
 11108 ;;		_all_LED
 11109 ;;		_checkDebounce
 11110 ;;		_mod1_LED
 11111 ;;		_mod2_LED
 11112 ;;		_mod3_LED
 11113 ;;		_mod4_LED
 11114 ;; This function is called by:
 11115 ;;		_config_routine
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           
 11120                           ;psect for function _clock_field
 11121  023E                     _clock_field:	
 11122  023E                     l4591:	
 11123                           ;incstack = 0
 11124                           ; Regs used in _clock_field: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11125                           
 11126                           
 11127                           ;main.c: 251:      unsigned int select =0;
 11128  023E  0020               	movlb	0	; select bank0
 11129  023F  01C0               	clrf	clock_field@select
 11130  0240  01C1               	clrf	clock_field@select+1
 11131  0241                     l4593:	
 11132  0241                     l4595:	
 11133                           ;main.c: 253:      if (select == 0){
 11134                           
 11135                           
 11136                           ;main.c: 254:      all_LED();}
 11137  0241  3182  22B5  3182   	fcall	_all_LED
 11138  0244                     l4597:	
 11139                           
 11140                           ;main.c: 257:         if(!PORTBbits.RB4){
 11141  0244  0020               	movlb	0	; select bank0
 11142  0245  1A0D               	btfsc	13,4	;volatile
 11143  0246  2A48               	goto	u1701
 11144  0247  2A49               	goto	u1700
 11145  0248                     u1701:	
 11146  0248  2A84               	goto	l4621
 11147  0249                     u1700:	
 11148  0249                     l4599:	
 11149                           
 11150                           ;main.c: 258:             select = +1;
 11151  0249  3001               	movlw	1
 11152  024A  00C0               	movwf	clock_field@select
 11153  024B  3000               	movlw	0
 11154  024C  00C1               	movwf	clock_field@select+1
 11155  024D                     l4601:	
 11156                           
 11157                           ;main.c: 259:                 if(checkDebounce()){
 11158  024D  3183  23F7  3182   	fcall	_checkDebounce
 11159  0250  3A00               	xorlw	0
 11160  0251  1903               	skipnz
 11161  0252  2A54               	goto	u1711
 11162  0253  2A55               	goto	u1710
 11163  0254                     u1711:	
 11164  0254  2A7F               	goto	l4619
 11165  0255                     u1710:	
 11166  0255  2A6C               	goto	l4617
 11167  0256                     l4605:	
 11168  0256  318F  27D3  3182   	fcall	_mod1_LED
 11169  0259  2A7F               	goto	l4619
 11170  025A                     l4607:	
 11171  025A  318F  27C9  3182   	fcall	_mod2_LED
 11172  025D  2A7F               	goto	l4619
 11173  025E                     l4609:	
 11174  025E  318F  27DE  3182   	fcall	_mod3_LED
 11175  0261  2A7F               	goto	l4619
 11176  0262                     l4611:	
 11177  0262  318F  27E9  3182   	fcall	_mod4_LED
 11178  0265  2A7F               	goto	l4619
 11179  0266                     l4613:	
 11180  0266  30FF               	movlw	255
 11181  0267  0020               	movlb	0	; select bank0
 11182  0268  00C0               	movwf	clock_field@select
 11183  0269  30FF               	movlw	255
 11184  026A  00C1               	movwf	clock_field@select+1
 11185  026B  2A7F               	goto	l4619
 11186  026C                     l4617:	
 11187                           
 11188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11189                           ; Switch size 1, requested type "simple"
 11190                           ; Number of cases is 1, Range of values is 0 to 0
 11191                           ; switch strategies available:
 11192                           ; Name         Instructions Cycles
 11193                           ; simple_byte            4     3 (average)
 11194                           ; direct_byte            8     6 (fixed)
 11195                           ; jumptable            260     6 (fixed)
 11196                           ;	Chosen strategy is simple_byte
 11197  026C  3000               	movlw	0
 11198  026D  3A00               	xorlw	0	; case 0
 11199  026E  1903               	skipnz
 11200  026F  2A71               	goto	l5359
 11201  0270  2A66               	goto	l4613
 11202  0271                     l5359:	
 11203                           
 11204                           ; Switch size 1, requested type "simple"
 11205                           ; Number of cases is 4, Range of values is 1 to 4
 11206                           ; switch strategies available:
 11207                           ; Name         Instructions Cycles
 11208                           ; simple_byte           13     7 (average)
 11209                           ; direct_byte           17     9 (fixed)
 11210                           ; jumptable            263     9 (fixed)
 11211                           ;	Chosen strategy is simple_byte
 11212  0271  3001               	movlw	1
 11213  0272  3A01               	xorlw	1	; case 1
 11214  0273  1903               	skipnz
 11215  0274  2A56               	goto	l4605
 11216  0275  3A03               	xorlw	3	; case 2
 11217  0276  1903               	skipnz
 11218  0277  2A5A               	goto	l4607
 11219  0278  3A01               	xorlw	1	; case 3
 11220  0279  1903               	skipnz
 11221  027A  2A5E               	goto	l4609
 11222  027B  3A07               	xorlw	7	; case 4
 11223  027C  1903               	skipnz
 11224  027D  2A62               	goto	l4611
 11225  027E  2A66               	goto	l4613
 11226  027F                     l4619:	
 11227                           
 11228                           ;main.c: 269:                     last_ms = clkms;
 11229  027F  087D               	movf	_clkms,w	;volatile
 11230  0280  0020               	movlb	0	; select bank0
 11231  0281  00BF               	movwf	??_clock_field
 11232  0282  083F               	movf	??_clock_field,w
 11233  0283  00B3               	movwf	_last_ms
 11234  0284                     l4621:	
 11235                           
 11236                           ;main.c: 272:          if(!PORTCbits.RC5){
 11237  0284  1A8E               	btfsc	14,5	;volatile
 11238  0285  2A87               	goto	u1721
 11239  0286  2A88               	goto	u1720
 11240  0287                     u1721:	
 11241  0287  2AAB               	goto	l4639
 11242  0288                     u1720:	
 11243  0288  2A98               	goto	l4637
 11244  0289                     l4625:	
 11245  0289  318F  27D3  3182   	fcall	_mod1_LED
 11246  028C  2AAB               	goto	l4639
 11247  028D                     l4627:	
 11248  028D  318F  27C9  3182   	fcall	_mod2_LED
 11249  0290  2AAB               	goto	l4639
 11250  0291                     l4629:	
 11251  0291  318F  27DE  3182   	fcall	_mod3_LED
 11252  0294  2AAB               	goto	l4639
 11253  0295                     l4633:	
 11254  0295  01C0               	clrf	clock_field@select
 11255  0296  01C1               	clrf	clock_field@select+1
 11256  0297  2AAB               	goto	l4639
 11257  0298                     l4637:	
 11258                           
 11259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11260                           ; Switch size 1, requested type "simple"
 11261                           ; Number of cases is 1, Range of values is 0 to 0
 11262                           ; switch strategies available:
 11263                           ; Name         Instructions Cycles
 11264                           ; simple_byte            4     3 (average)
 11265                           ; direct_byte            8     6 (fixed)
 11266                           ; jumptable            260     6 (fixed)
 11267                           ;	Chosen strategy is simple_byte
 11268  0298  0841               	movf	clock_field@select+1,w
 11269  0299  3A00               	xorlw	0	; case 0
 11270  029A  1903               	skipnz
 11271  029B  2A9D               	goto	l5361
 11272  029C  2A95               	goto	l4633
 11273  029D                     l5361:	
 11274                           
 11275                           ; Switch size 1, requested type "simple"
 11276                           ; Number of cases is 4, Range of values is 1 to 4
 11277                           ; switch strategies available:
 11278                           ; Name         Instructions Cycles
 11279                           ; simple_byte           13     7 (average)
 11280                           ; direct_byte           17     9 (fixed)
 11281                           ; jumptable            263     9 (fixed)
 11282                           ;	Chosen strategy is simple_byte
 11283  029D  0840               	movf	clock_field@select,w
 11284  029E  3A01               	xorlw	1	; case 1
 11285  029F  1903               	skipnz
 11286  02A0  2A89               	goto	l4625
 11287  02A1  3A03               	xorlw	3	; case 2
 11288  02A2  1903               	skipnz
 11289  02A3  2A8D               	goto	l4627
 11290  02A4  3A01               	xorlw	1	; case 3
 11291  02A5  1903               	skipnz
 11292  02A6  2A91               	goto	l4629
 11293  02A7  3A07               	xorlw	7	; case 4
 11294  02A8  1903               	skipnz
 11295  02A9  2A89               	goto	l4625
 11296  02AA  2A95               	goto	l4633
 11297  02AB                     l4639:	
 11298                           
 11299                           ;main.c: 284:     }while(select != -1);
 11300  02AB  0020               	movlb	0	; select bank0
 11301  02AC  0A40               	incf	clock_field@select,w
 11302  02AD  1D03               	skipz
 11303  02AE  2AB3               	goto	u1731
 11304  02AF  0A41               	incf	clock_field@select+1,w
 11305  02B0  1D03               	btfss	3,2
 11306  02B1  2AB3               	goto	u1731
 11307  02B2  2AB4               	goto	u1730
 11308  02B3                     u1731:	
 11309  02B3  2A44               	goto	l4597
 11310  02B4                     u1730:	
 11311  02B4                     l1229:	
 11312  02B4  0008               	return
 11313  02B5                     __end_of_clock_field:	
 11314                           
 11315                           	psect	text9
 11316  0FE9                     __ptext9:	
 11317 ;; *************** function _mod4_LED *****************
 11318 ;; Defined at:
 11319 ;;		line 391 in file "main.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0, pclath, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    7
 11340 ;; This function calls:
 11341 ;;		_PWM6_LoadDutyValue
 11342 ;; This function is called by:
 11343 ;;		_config_routine
 11344 ;;		_clock_field
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           
 11349                           ;psect for function _mod4_LED
 11350  0FE9                     _mod4_LED:	
 11351  0FE9                     l4217:	
 11352                           ;incstack = 0
 11353                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 11354                           
 11355                           
 11356                           ;main.c: 392:     LATA = 0;
 11357  0FE9  0020               	movlb	0	; select bank0
 11358  0FEA  0196               	clrf	22	;volatile
 11359  0FEB                     l4219:	
 11360                           
 11361                           ;main.c: 393:     PWM6_LoadDutyValue(0);
 11362  0FEB  3000               	movlw	0
 11363  0FEC  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11364  0FED  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11365  0FEE  3186  266C  318F   	fcall	_PWM6_LoadDutyValue
 11366  0FF1                     l4221:	
 11367  0FF1  0020               	movlb	0	; select bank0
 11368  0FF2  1616               	bsf	22,4	;volatile
 11369  0FF3                     l1286:	
 11370  0FF3  0008               	return
 11371  0FF4                     __end_of_mod4_LED:	
 11372                           
 11373                           	psect	text10
 11374  0FDE                     __ptext10:	
 11375 ;; *************** function _mod3_LED *****************
 11376 ;; Defined at:
 11377 ;;		line 384 in file "main.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0, pclath, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;Total ram usage:        0 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:    7
 11398 ;; This function calls:
 11399 ;;		_PWM6_LoadDutyValue
 11400 ;; This function is called by:
 11401 ;;		_config_routine
 11402 ;;		_clock_field
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           
 11407                           ;psect for function _mod3_LED
 11408  0FDE                     _mod3_LED:	
 11409  0FDE                     l4211:	
 11410                           ;incstack = 0
 11411                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 11412                           
 11413                           
 11414                           ;main.c: 385:     LATA = 0;
 11415  0FDE  0020               	movlb	0	; select bank0
 11416  0FDF  0196               	clrf	22	;volatile
 11417  0FE0                     l4213:	
 11418                           
 11419                           ;main.c: 386:     PWM6_LoadDutyValue(0);
 11420  0FE0  3000               	movlw	0
 11421  0FE1  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11422  0FE2  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11423  0FE3  3186  266C  318F   	fcall	_PWM6_LoadDutyValue
 11424  0FE6                     l4215:	
 11425  0FE6  0020               	movlb	0	; select bank0
 11426  0FE7  1696               	bsf	22,5	;volatile
 11427  0FE8                     l1281:	
 11428  0FE8  0008               	return
 11429  0FE9                     __end_of_mod3_LED:	
 11430                           
 11431                           	psect	text11
 11432  0FC9                     __ptext11:	
 11433 ;; *************** function _mod2_LED *****************
 11434 ;; Defined at:
 11435 ;;		line 379 in file "main.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;		None
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;		None
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1    wreg      void 
 11442 ;; Registers used:
 11443 ;;		wreg, status,2, status,0, pclath, cstack
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;Total ram usage:        0 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    7
 11456 ;; This function calls:
 11457 ;;		_PWM6_LoadDutyValue
 11458 ;; This function is called by:
 11459 ;;		_config_routine
 11460 ;;		_clock_field
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           
 11465                           ;psect for function _mod2_LED
 11466  0FC9                     _mod2_LED:	
 11467  0FC9                     l4207:	
 11468                           ;incstack = 0
 11469                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 11470                           
 11471                           
 11472                           ;main.c: 380:     LATA = 0;
 11473  0FC9  0020               	movlb	0	; select bank0
 11474  0FCA  0196               	clrf	22	;volatile
 11475  0FCB                     l4209:	
 11476                           
 11477                           ;main.c: 381:     PWM6_LoadDutyValue(1023);
 11478  0FCB  30FF               	movlw	255
 11479  0FCC  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11480  0FCD  3003               	movlw	3
 11481  0FCE  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11482  0FCF  3186  266C  318F   	fcall	_PWM6_LoadDutyValue
 11483  0FD2                     l1276:	
 11484  0FD2  0008               	return
 11485  0FD3                     __end_of_mod2_LED:	
 11486                           
 11487                           	psect	text12
 11488  0FD3                     __ptext12:	
 11489 ;; *************** function _mod1_LED *****************
 11490 ;; Defined at:
 11491 ;;		line 372 in file "main.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;		None
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  1    wreg      void 
 11498 ;; Registers used:
 11499 ;;		wreg, status,2, status,0, pclath, cstack
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;Total ram usage:        0 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; Hardware stack levels required when called:    7
 11512 ;; This function calls:
 11513 ;;		_PWM6_LoadDutyValue
 11514 ;; This function is called by:
 11515 ;;		_config_routine
 11516 ;;		_clock_field
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function _mod1_LED
 11522  0FD3                     _mod1_LED:	
 11523  0FD3                     l4201:	
 11524                           ;incstack = 0
 11525                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 11526                           
 11527                           
 11528                           ;main.c: 373:     LATA = 0;
 11529  0FD3  0020               	movlb	0	; select bank0
 11530  0FD4  0196               	clrf	22	;volatile
 11531  0FD5                     l4203:	
 11532                           
 11533                           ;main.c: 374:     PWM6_LoadDutyValue(0);
 11534  0FD5  3000               	movlw	0
 11535  0FD6  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11536  0FD7  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11537  0FD8  3186  266C  318F   	fcall	_PWM6_LoadDutyValue
 11538  0FDB                     l4205:	
 11539  0FDB  0020               	movlb	0	; select bank0
 11540  0FDC  1796               	bsf	22,7	;volatile
 11541  0FDD                     l1273:	
 11542  0FDD  0008               	return
 11543  0FDE                     __end_of_mod1_LED:	
 11544                           
 11545                           	psect	text13
 11546  03F7                     __ptext13:	
 11547 ;; *************** function _checkDebounce *****************
 11548 ;; Defined at:
 11549 ;;		line 397 in file "main.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;		None
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      unsigned char 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;Total ram usage:        5 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    6
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_config_routine
 11574 ;;		_clock_field
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           
 11579                           ;psect for function _checkDebounce
 11580  03F7                     _checkDebounce:	
 11581  03F7                     l4151:	
 11582                           ;incstack = 0
 11583                           ; Regs used in _checkDebounce: [wreg+status,2+status,0]
 11584                           
 11585                           
 11586                           ;main.c: 400:     if(clkms - last_ms < 0){
 11587  03F7  087D               	movf	_clkms,w	;volatile
 11588  03F8  0020               	movlb	0	; select bank0
 11589  03F9  00BA               	movwf	??_checkDebounce
 11590  03FA  01BB               	clrf	??_checkDebounce+1
 11591  03FB  083B               	movf	??_checkDebounce+1,w
 11592  03FC  00BD               	movwf	??_checkDebounce+3
 11593  03FD  0833               	movf	_last_ms,w
 11594  03FE  023A               	subwf	??_checkDebounce,w
 11595  03FF  00BC               	movwf	??_checkDebounce+2
 11596  0400  1C03               	skipc
 11597  0401  03BD               	decf	??_checkDebounce+3,f
 11598  0402  1FBD               	btfss	??_checkDebounce+3,7
 11599  0403  2C05               	goto	u1561
 11600  0404  2C06               	goto	u1560
 11601  0405                     u1561:	
 11602  0405  2C0A               	goto	l1289
 11603  0406                     u1560:	
 11604  0406                     l4153:	
 11605                           
 11606                           ;main.c: 401:         clkms+= 100;
 11607  0406  3064               	movlw	100
 11608  0407  00BA               	movwf	??_checkDebounce
 11609  0408  083A               	movf	??_checkDebounce,w
 11610  0409  07FD               	addwf	_clkms,f	;volatile
 11611  040A                     l1289:	
 11612                           ;main.c: 402:     }
 11613                           
 11614                           
 11615                           ;main.c: 404:     if(clkms - last_ms < 18){
 11616  040A  087D               	movf	_clkms,w	;volatile
 11617  040B  00BA               	movwf	??_checkDebounce
 11618  040C  01BB               	clrf	??_checkDebounce+1
 11619  040D  083B               	movf	??_checkDebounce+1,w
 11620  040E  00BD               	movwf	??_checkDebounce+3
 11621  040F  0833               	movf	_last_ms,w
 11622  0410  023A               	subwf	??_checkDebounce,w
 11623  0411  00BC               	movwf	??_checkDebounce+2
 11624  0412  1C03               	skipc
 11625  0413  03BD               	decf	??_checkDebounce+3,f
 11626  0414  083D               	movf	??_checkDebounce+3,w
 11627  0415  3A80               	xorlw	128
 11628  0416  00BE               	movwf	??_checkDebounce+4
 11629  0417  3080               	movlw	128
 11630  0418  023E               	subwf	??_checkDebounce+4,w
 11631  0419  1D03               	skipz
 11632  041A  2C1D               	goto	u1575
 11633  041B  3012               	movlw	18
 11634  041C  023C               	subwf	??_checkDebounce+2,w
 11635  041D                     u1575:	
 11636  041D  1803               	skipnc
 11637  041E  2C20               	goto	u1571
 11638  041F  2C21               	goto	u1570
 11639  0420                     u1571:	
 11640  0420  2C2B               	goto	l4165
 11641  0421                     u1570:	
 11642  0421                     l4155:	
 11643                           
 11644                           ;main.c: 405:         if(clkms > 100){
 11645  0421  3065               	movlw	101
 11646  0422  027D               	subwf	_clkms,w	;volatile
 11647  0423  1C03               	skipc
 11648  0424  2C26               	goto	u1581
 11649  0425  2C27               	goto	u1580
 11650  0426                     u1581:	
 11651  0426  2C29               	goto	l4159
 11652  0427                     u1580:	
 11653  0427                     l4157:	
 11654                           
 11655                           ;main.c: 406:             clkms -= 100;
 11656  0427  3064               	movlw	100
 11657  0428  02FD               	subwf	_clkms,f	;volatile
 11658  0429                     l4159:	
 11659                           
 11660                           ;main.c: 408:         return 0;
 11661  0429  3000               	movlw	0
 11662  042A  2C34               	goto	l1292
 11663  042B                     l4165:	
 11664                           
 11665                           ;main.c: 410:         if(clkms > 100){
 11666  042B  3065               	movlw	101
 11667  042C  027D               	subwf	_clkms,w	;volatile
 11668  042D  1C03               	skipc
 11669  042E  2C30               	goto	u1591
 11670  042F  2C31               	goto	u1590
 11671  0430                     u1591:	
 11672  0430  2C33               	goto	l4169
 11673  0431                     u1590:	
 11674  0431                     l4167:	
 11675                           
 11676                           ;main.c: 411:             clkms -= 100;
 11677  0431  3064               	movlw	100
 11678  0432  02FD               	subwf	_clkms,f	;volatile
 11679  0433                     l4169:	
 11680                           
 11681                           ;main.c: 413:         return 1;
 11682  0433  3001               	movlw	1
 11683  0434                     l1292:	
 11684  0434  0008               	return
 11685  0435                     __end_of_checkDebounce:	
 11686                           
 11687                           	psect	text14
 11688  02B5                     __ptext14:	
 11689 ;; *************** function _all_LED *****************
 11690 ;; Defined at:
 11691 ;;		line 289 in file "main.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;		None
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;		None
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  1    wreg      void 
 11698 ;; Registers used:
 11699 ;;		wreg, status,2, status,0, pclath, cstack
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;Total ram usage:        1 bytes
 11710 ;; Hardware stack levels used:    1
 11711 ;; Hardware stack levels required when called:    7
 11712 ;; This function calls:
 11713 ;;		_PWM6_LoadDutyValue
 11714 ;; This function is called by:
 11715 ;;		_config_routine
 11716 ;;		_clock_field
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           
 11721                           ;psect for function _all_LED
 11722  02B5                     _all_LED:	
 11723  02B5                     l1232:	
 11724                           ;incstack = 0
 11725                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 11726                           ;main.c: 291:        do { LATAbits.LATA7 = 1; } while(0);
 11727                           
 11728  02B5  0020               	movlb	0	; select bank0
 11729  02B6  1796               	bsf	22,7	;volatile
 11730  02B7                     l4177:	
 11731                           
 11732                           ;main.c: 292:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11733  02B7  3021               	movlw	33
 11734  02B8  0020               	movlb	0	; select bank0
 11735  02B9  00BE               	movwf	??_all_LED
 11736  02BA  3076               	movlw	118
 11737  02BB                     u2417:	
 11738  02BB  0B89               	decfsz	9,f
 11739  02BC  2ABB               	goto	u2417
 11740  02BD  0BBE               	decfsz	??_all_LED,f
 11741  02BE  2ABB               	goto	u2417
 11742  02BF  0000               	nop
 11743  02C0                     l4179:	
 11744  02C0  0020               	movlb	0	; select bank0
 11745  02C1  1396               	bcf	22,7	;volatile
 11746  02C2                     l1235:	
 11747                           
 11748                           ;main.c: 294:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11749  02C2  3021               	movlw	33
 11750  02C3  0020               	movlb	0	; select bank0
 11751  02C4  00BE               	movwf	??_all_LED
 11752  02C5  3076               	movlw	118
 11753  02C6                     u2427:	
 11754  02C6  0B89               	decfsz	9,f
 11755  02C7  2AC6               	goto	u2427
 11756  02C8  0BBE               	decfsz	??_all_LED,f
 11757  02C9  2AC6               	goto	u2427
 11758  02CA  0000               	nop
 11759  02CB                     l4181:	
 11760                           
 11761                           ;main.c: 296:        PWM6_LoadDutyValue(1023);
 11762  02CB  30FF               	movlw	255
 11763  02CC  0020               	movlb	0	; select bank0
 11764  02CD  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11765  02CE  3003               	movlw	3
 11766  02CF  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11767  02D0  3186  266C  3182   	fcall	_PWM6_LoadDutyValue
 11768  02D3                     l4183:	
 11769                           
 11770                           ;main.c: 297:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11771  02D3  3021               	movlw	33
 11772  02D4  0020               	movlb	0	; select bank0
 11773  02D5  00BE               	movwf	??_all_LED
 11774  02D6  3076               	movlw	118
 11775  02D7                     u2437:	
 11776  02D7  0B89               	decfsz	9,f
 11777  02D8  2AD7               	goto	u2437
 11778  02D9  0BBE               	decfsz	??_all_LED,f
 11779  02DA  2AD7               	goto	u2437
 11780  02DB  0000               	nop
 11781                           
 11782                           ;main.c: 299:         PWM6_LoadDutyValue(0);
 11783  02DC  3000               	movlw	0
 11784  02DD  0020               	movlb	0	; select bank0
 11785  02DE  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11786  02DF  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11787  02E0  3186  266C  3182   	fcall	_PWM6_LoadDutyValue
 11788  02E3                     l4185:	
 11789                           
 11790                           ;main.c: 300:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11791  02E3  3021               	movlw	33
 11792  02E4  0020               	movlb	0	; select bank0
 11793  02E5  00BE               	movwf	??_all_LED
 11794  02E6  3076               	movlw	118
 11795  02E7                     u2447:	
 11796  02E7  0B89               	decfsz	9,f
 11797  02E8  2AE7               	goto	u2447
 11798  02E9  0BBE               	decfsz	??_all_LED,f
 11799  02EA  2AE7               	goto	u2447
 11800  02EB  0000               	nop
 11801  02EC                     l4187:	
 11802  02EC  0020               	movlb	0	; select bank0
 11803  02ED  1696               	bsf	22,5	;volatile
 11804  02EE                     l4189:	
 11805                           
 11806                           ;main.c: 302:          _delay((unsigned long)((100)*(1000000/4000.0)));
 11807  02EE  3021               	movlw	33
 11808  02EF  0020               	movlb	0	; select bank0
 11809  02F0  00BE               	movwf	??_all_LED
 11810  02F1  3076               	movlw	118
 11811  02F2                     u2457:	
 11812  02F2  0B89               	decfsz	9,f
 11813  02F3  2AF2               	goto	u2457
 11814  02F4  0BBE               	decfsz	??_all_LED,f
 11815  02F5  2AF2               	goto	u2457
 11816  02F6  0000               	nop
 11817  02F7                     l4191:	
 11818  02F7  0020               	movlb	0	; select bank0
 11819  02F8  1296               	bcf	22,5	;volatile
 11820  02F9                     l4193:	
 11821                           
 11822                           ;main.c: 304:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11823  02F9  3021               	movlw	33
 11824  02FA  0020               	movlb	0	; select bank0
 11825  02FB  00BE               	movwf	??_all_LED
 11826  02FC  3076               	movlw	118
 11827  02FD                     u2467:	
 11828  02FD  0B89               	decfsz	9,f
 11829  02FE  2AFD               	goto	u2467
 11830  02FF  0BBE               	decfsz	??_all_LED,f
 11831  0300  2AFD               	goto	u2467
 11832  0301  0000               	nop
 11833  0302                     l4195:	
 11834  0302  0020               	movlb	0	; select bank0
 11835  0303  1616               	bsf	22,4	;volatile
 11836  0304                     l4197:	
 11837                           
 11838                           ;main.c: 306:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11839  0304  3021               	movlw	33
 11840  0305  0020               	movlb	0	; select bank0
 11841  0306  00BE               	movwf	??_all_LED
 11842  0307  3076               	movlw	118
 11843  0308                     u2477:	
 11844  0308  0B89               	decfsz	9,f
 11845  0309  2B08               	goto	u2477
 11846  030A  0BBE               	decfsz	??_all_LED,f
 11847  030B  2B08               	goto	u2477
 11848  030C  0000               	nop
 11849  030D                     l4199:	
 11850  030D  0020               	movlb	0	; select bank0
 11851  030E  1216               	bcf	22,4	;volatile
 11852  030F                     l1244:	
 11853  030F  0008               	return
 11854  0310                     __end_of_all_LED:	
 11855                           
 11856                           	psect	text15
 11857  066C                     __ptext15:	
 11858 ;; *************** function _PWM6_LoadDutyValue *****************
 11859 ;; Defined at:
 11860 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11861 ;; Parameters:    Size  Location     Type
 11862 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 11863 ;; Auto vars:     Size  Location     Type
 11864 ;;		None
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  1    wreg      void 
 11867 ;; Registers used:
 11868 ;;		wreg, status,2, status,0
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;Total ram usage:        4 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:    6
 11881 ;; This function calls:
 11882 ;;		Nothing
 11883 ;; This function is called by:
 11884 ;;		_main
 11885 ;;		_all_LED
 11886 ;;		_mod1_LED
 11887 ;;		_mod2_LED
 11888 ;;		_mod3_LED
 11889 ;;		_mod4_LED
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function _PWM6_LoadDutyValue
 11895  066C                     _PWM6_LoadDutyValue:	
 11896  066C                     l3957:	
 11897                           ;incstack = 0
 11898                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11899                           
 11900                           
 11901                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11902  066C  0020               	movlb	0	; select bank0
 11903  066D  083B               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11904  066E  00BD               	movwf	??_PWM6_LoadDutyValue+1
 11905  066F  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 11906  0670  00BC               	movwf	??_PWM6_LoadDutyValue
 11907  0671  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 11908  0672  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 11909  0673  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 11910  0674  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 11911  0675  083C               	movf	??_PWM6_LoadDutyValue,w
 11912  0676  0027               	movlb	7	; select bank7
 11913  0677  008D               	movwf	13	;volatile
 11914                           
 11915                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 11916  0678  0020               	movlb	0	; select bank0
 11917  0679  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 11918  067A  3903               	andlw	3
 11919  067B  00BC               	movwf	??_PWM6_LoadDutyValue
 11920  067C  3005               	movlw	5
 11921  067D                     u1445:	
 11922  067D  35BC               	lslf	??_PWM6_LoadDutyValue,f
 11923  067E  3EFF               	addlw	-1
 11924  067F  1D03               	skipz
 11925  0680  2E7D               	goto	u1445
 11926  0681  353C               	lslf	??_PWM6_LoadDutyValue,w
 11927  0682  0027               	movlb	7	; select bank7
 11928  0683  008C               	movwf	12	;volatile
 11929  0684                     l916:	
 11930  0684  0008               	return
 11931  0685                     __end_of_PWM6_LoadDutyValue:	
 11932                           
 11933                           	psect	text16
 11934  0F18                     __ptext16:	
 11935 ;; *************** function _TMR0_StartTimer *****************
 11936 ;; Defined at:
 11937 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;		None
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		None
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;Total ram usage:        0 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:    6
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_main
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _TMR0_StartTimer
 11967  0F18                     _TMR0_StartTimer:	
 11968  0F18                     l4839:	
 11969                           ;incstack = 0
 11970                           ; Regs used in _TMR0_StartTimer: []
 11971                           
 11972                           
 11973                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 11974  0F18  0020               	movlb	0	; select bank0
 11975  0F19  179E               	bsf	30,7	;volatile
 11976  0F1A                     l1523:	
 11977  0F1A  0008               	return
 11978  0F1B                     __end_of_TMR0_StartTimer:	
 11979                           
 11980                           	psect	text17
 11981  061C                     __ptext17:	
 11982 ;; *************** function _SYSTEM_Initialize *****************
 11983 ;; Defined at:
 11984 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;		None
 11987 ;; Auto vars:     Size  Location     Type
 11988 ;;		None
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  1    wreg      void 
 11991 ;; Registers used:
 11992 ;;		wreg, status,2, status,0, pclath, cstack
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;Total ram usage:        0 bytes
 12003 ;; Hardware stack levels used:    1
 12004 ;; Hardware stack levels required when called:    8
 12005 ;; This function calls:
 12006 ;;		_ADCC_Initialize
 12007 ;;		_EXT_INT_Initialize
 12008 ;;		_OSCILLATOR_Initialize
 12009 ;;		_PIN_MANAGER_Initialize
 12010 ;;		_PMD_Initialize
 12011 ;;		_PWM6_Initialize
 12012 ;;		_TMR0_Initialize
 12013 ;;		_TMR1_Initialize
 12014 ;;		_TMR2_Initialize
 12015 ;; This function is called by:
 12016 ;;		_main
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           
 12021                           ;psect for function _SYSTEM_Initialize
 12022  061C                     _SYSTEM_Initialize:	
 12023  061C                     l4791:	
 12024                           ;incstack = 0
 12025                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12026                           
 12027                           
 12028                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12029  061C  318F  27A6  3186   	fcall	_PMD_Initialize
 12030  061F                     l4793:	
 12031                           
 12032                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12033  061F  3183  23AE  3186   	fcall	_PIN_MANAGER_Initialize
 12034  0622                     l4795:	
 12035                           
 12036                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12037  0622  318F  27C0  3186   	fcall	_OSCILLATOR_Initialize
 12038  0625                     l4797:	
 12039                           
 12040                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 12041  0625  3187  27D6  3186   	fcall	_PWM6_Initialize
 12042  0628                     l4799:	
 12043                           
 12044                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12045  0628  3186  26E5  3186   	fcall	_ADCC_Initialize
 12046  062B                     l4801:	
 12047                           
 12048                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 12049  062B  3186  269E  3186   	fcall	_TMR2_Initialize
 12050  062E                     l4803:	
 12051                           
 12052                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12053  062E  3187  27C8  3186   	fcall	_EXT_INT_Initialize
 12054  0631                     l4805:	
 12055                           
 12056                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 12057  0631  3185  25E1  3186   	fcall	_TMR1_Initialize
 12058  0634                     l4807:	
 12059                           
 12060                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 12061  0634  3187  2711  3186   	fcall	_TMR0_Initialize
 12062  0637                     l439:	
 12063  0637  0008               	return
 12064  0638                     __end_of_SYSTEM_Initialize:	
 12065                           
 12066                           	psect	text18
 12067  069E                     __ptext18:	
 12068 ;; *************** function _TMR2_Initialize *****************
 12069 ;; Defined at:
 12070 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, pclath, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;Total ram usage:        0 bytes
 12089 ;; Hardware stack levels used:    1
 12090 ;; Hardware stack levels required when called:    7
 12091 ;; This function calls:
 12092 ;;		_TMR2_SetInterruptHandler
 12093 ;; This function is called by:
 12094 ;;		_SYSTEM_Initialize
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           
 12099                           ;psect for function _TMR2_Initialize
 12100  069E                     _TMR2_Initialize:	
 12101  069E                     l4511:	
 12102                           ;incstack = 0
 12103                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12104                           
 12105                           
 12106                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 12107  069E  3001               	movlw	1
 12108  069F  0025               	movlb	5	; select bank5
 12109  06A0  0090               	movwf	16	;volatile
 12110                           
 12111                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 12112  06A1  3020               	movlw	32
 12113  06A2  008F               	movwf	15	;volatile
 12114  06A3                     l4513:	
 12115                           
 12116                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12117  06A3  0191               	clrf	17	;volatile
 12118  06A4                     l4515:	
 12119                           
 12120                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 12121  06A4  309B               	movlw	155
 12122  06A5  008D               	movwf	13	;volatile
 12123                           
 12124                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12125  06A6  018C               	clrf	12	;volatile
 12126  06A7                     l4517:	
 12127                           
 12128                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 12129  06A7  002E               	movlb	14	; select bank14
 12130  06A8  1090               	bcf	16,1	;volatile
 12131  06A9                     l4519:	
 12132                           
 12133                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 12134  06A9  149A               	bsf	26,1	;volatile
 12135  06AA                     l4521:	
 12136                           
 12137                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12138  06AA  30FA               	movlw	low _TMR2_DefaultInterruptHandler
 12139  06AB  0020               	movlb	0	; select bank0
 12140  06AC  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12141  06AD  300E               	movlw	high _TMR2_DefaultInterruptHandler
 12142  06AE  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12143  06AF  318F  276C  3186   	fcall	_TMR2_SetInterruptHandler
 12144  06B2                     l4523:	
 12145                           
 12146                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 12147  06B2  30B1               	movlw	177
 12148  06B3  0025               	movlb	5	; select bank5
 12149  06B4  008E               	movwf	14	;volatile
 12150  06B5                     l998:	
 12151  06B5  0008               	return
 12152  06B6                     __end_of_TMR2_Initialize:	
 12153                           
 12154                           	psect	text19
 12155  0F6C                     __ptext19:	
 12156 ;; *************** function _TMR2_SetInterruptHandler *****************
 12157 ;; Defined at:
 12158 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12161 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;		None
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;Total ram usage:        2 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    6
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		_TMR2_Initialize
 12184 ;;		_main
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           
 12189                           ;psect for function _TMR2_SetInterruptHandler
 12190  0F6C                     _TMR2_SetInterruptHandler:	
 12191  0F6C                     l4133:	
 12192                           ;incstack = 0
 12193                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12194                           
 12195                           
 12196                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 12197  0F6C  0020               	movlb	0	; select bank0
 12198  0F6D  083B               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12199  0F6E  00CC               	movwf	_TMR2_InterruptHandler+1
 12200  0F6F  083A               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12201  0F70  00CB               	movwf	_TMR2_InterruptHandler
 12202  0F71                     l1041:	
 12203  0F71  0008               	return
 12204  0F72                     __end_of_TMR2_SetInterruptHandler:	
 12205                           
 12206                           	psect	text20
 12207  05E1                     __ptext20:	
 12208 ;; *************** function _TMR1_Initialize *****************
 12209 ;; Defined at:
 12210 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, pclath, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:    7
 12231 ;; This function calls:
 12232 ;;		_TMR1_SetInterruptHandler
 12233 ;; This function is called by:
 12234 ;;		_SYSTEM_Initialize
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           
 12239                           ;psect for function _TMR1_Initialize
 12240  05E1                     _TMR1_Initialize:	
 12241  05E1                     l4525:	
 12242                           ;incstack = 0
 12243                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12244                           
 12245                           
 12246                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12247  05E1  0024               	movlb	4	; select bank4
 12248  05E2  018F               	clrf	15	;volatile
 12249                           
 12250                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12251  05E3  0190               	clrf	16	;volatile
 12252  05E4                     l4527:	
 12253                           
 12254                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12255  05E4  3004               	movlw	4
 12256  05E5  0091               	movwf	17	;volatile
 12257  05E6                     l4529:	
 12258                           
 12259                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 12260  05E6  30E1               	movlw	225
 12261  05E7  008D               	movwf	13	;volatile
 12262  05E8                     l4531:	
 12263                           
 12264                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 12265  05E8  30BA               	movlw	186
 12266  05E9  008C               	movwf	12	;volatile
 12267  05EA                     l4533:	
 12268                           
 12269                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12270  05EA  080D               	movf	13,w	;volatile
 12271  05EB  0020               	movlb	0	; select bank0
 12272  05EC  00D0               	movwf	_timer1ReloadVal+1	;volatile
 12273  05ED  0024               	movlb	4	; select bank4
 12274  05EE  080C               	movf	12,w	;volatile
 12275  05EF  0020               	movlb	0	; select bank0
 12276  05F0  00CF               	movwf	_timer1ReloadVal	;volatile
 12277  05F1                     l4535:	
 12278                           
 12279                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 12280  05F1  002E               	movlb	14	; select bank14
 12281  05F2  1010               	bcf	16,0	;volatile
 12282  05F3                     l4537:	
 12283                           
 12284                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12285  05F3  141A               	bsf	26,0	;volatile
 12286  05F4                     l4539:	
 12287                           
 12288                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12289  05F4  30F9               	movlw	low _TMR1_DefaultInterruptHandler
 12290  05F5  0020               	movlb	0	; select bank0
 12291  05F6  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12292  05F7  300E               	movlw	high _TMR1_DefaultInterruptHandler
 12293  05F8  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12294  05F9  318F  2766  3185   	fcall	_TMR1_SetInterruptHandler
 12295  05FC                     l4541:	
 12296                           
 12297                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 12298  05FC  3015               	movlw	21
 12299  05FD  0024               	movlb	4	; select bank4
 12300  05FE  008E               	movwf	14	;volatile
 12301  05FF                     l869:	
 12302  05FF  0008               	return
 12303  0600                     __end_of_TMR1_Initialize:	
 12304                           
 12305                           	psect	text21
 12306  0F66                     __ptext21:	
 12307 ;; *************** function _TMR1_SetInterruptHandler *****************
 12308 ;; Defined at:
 12309 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12312 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      void 
 12317 ;; Registers used:
 12318 ;;		wreg
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;Total ram usage:        2 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:    6
 12331 ;; This function calls:
 12332 ;;		Nothing
 12333 ;; This function is called by:
 12334 ;;		_TMR1_Initialize
 12335 ;;		_main
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           
 12340                           ;psect for function _TMR1_SetInterruptHandler
 12341  0F66                     _TMR1_SetInterruptHandler:	
 12342  0F66                     l4111:	
 12343                           ;incstack = 0
 12344                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12345                           
 12346                           
 12347                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 12348  0F66  0020               	movlb	0	; select bank0
 12349  0F67  083B               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12350  0F68  00CE               	movwf	_TMR1_InterruptHandler+1
 12351  0F69  083A               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12352  0F6A  00CD               	movwf	_TMR1_InterruptHandler
 12353  0F6B                     l899:	
 12354  0F6B  0008               	return
 12355  0F6C                     __end_of_TMR1_SetInterruptHandler:	
 12356                           
 12357                           	psect	text22
 12358  0711                     __ptext22:	
 12359 ;; *************** function _TMR0_Initialize *****************
 12360 ;; Defined at:
 12361 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12362 ;; Parameters:    Size  Location     Type
 12363 ;;		None
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;		None
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  1    wreg      void 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0, pclath, cstack
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;Total ram usage:        0 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    7
 12382 ;; This function calls:
 12383 ;;		_TMR0_SetInterruptHandler
 12384 ;; This function is called by:
 12385 ;;		_SYSTEM_Initialize
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           
 12390                           ;psect for function _TMR0_Initialize
 12391  0711                     _TMR0_Initialize:	
 12392  0711                     l4543:	
 12393                           ;incstack = 0
 12394                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12395                           
 12396                           
 12397                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 12398  0711  3095               	movlw	149
 12399  0712  0020               	movlb	0	; select bank0
 12400  0713  009F               	movwf	31	;volatile
 12401                           
 12402                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 12403  0714  30F1               	movlw	241
 12404  0715  009D               	movwf	29	;volatile
 12405  0716                     l4545:	
 12406                           
 12407                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12408  0716  019C               	clrf	28	;volatile
 12409  0717                     l4547:	
 12410                           
 12411                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12412  0717  002E               	movlb	14	; select bank14
 12413  0718  128C               	bcf	12,5	;volatile
 12414  0719                     l4549:	
 12415                           
 12416                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12417  0719  1696               	bsf	22,5	;volatile
 12418  071A                     l4551:	
 12419                           
 12420                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12421  071A  30F8               	movlw	low _TMR0_DefaultInterruptHandler
 12422  071B  0020               	movlb	0	; select bank0
 12423  071C  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12424  071D  300E               	movlw	high _TMR0_DefaultInterruptHandler
 12425  071E  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12426  071F  318F  2760  3187   	fcall	_TMR0_SetInterruptHandler
 12427  0722                     l4553:	
 12428                           
 12429                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 12430  0722  300B               	movlw	11
 12431  0723  0020               	movlb	0	; select bank0
 12432  0724  009E               	movwf	30	;volatile
 12433  0725                     l1520:	
 12434  0725  0008               	return
 12435  0726                     __end_of_TMR0_Initialize:	
 12436                           
 12437                           	psect	text23
 12438  0F60                     __ptext23:	
 12439 ;; *************** function _TMR0_SetInterruptHandler *****************
 12440 ;; Defined at:
 12441 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12444 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;Total ram usage:        2 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    6
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_main
 12467 ;;		_TMR0_Initialize
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           
 12472                           ;psect for function _TMR0_SetInterruptHandler
 12473  0F60                     _TMR0_SetInterruptHandler:	
 12474  0F60                     l4175:	
 12475                           ;incstack = 0
 12476                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12477                           
 12478                           
 12479                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 12480  0F60  0020               	movlb	0	; select bank0
 12481  0F61  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12482  0F62  00CA               	movwf	_TMR0_InterruptHandler+1
 12483  0F63  083A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12484  0F64  00C9               	movwf	_TMR0_InterruptHandler
 12485  0F65                     l1542:	
 12486  0F65  0008               	return
 12487  0F66                     __end_of_TMR0_SetInterruptHandler:	
 12488                           
 12489                           	psect	text24
 12490  07D6                     __ptext24:	
 12491 ;; *************** function _PWM6_Initialize *****************
 12492 ;; Defined at:
 12493 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;		None
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  1    wreg      void 
 12500 ;; Registers used:
 12501 ;;		wreg, status,2, status,0
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;Total ram usage:        0 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    6
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_SYSTEM_Initialize
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           
 12522                           ;psect for function _PWM6_Initialize
 12523  07D6                     _PWM6_Initialize:	
 12524  07D6                     l4501:	
 12525                           ;incstack = 0
 12526                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12527                           
 12528                           
 12529                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12530  07D6  3080               	movlw	128
 12531  07D7  0027               	movlb	7	; select bank7
 12532  07D8  008E               	movwf	14	;volatile
 12533                           
 12534                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 12535  07D9  303E               	movlw	62
 12536  07DA  008D               	movwf	13	;volatile
 12537                           
 12538                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12539  07DB  3040               	movlw	64
 12540  07DC  008C               	movwf	12	;volatile
 12541  07DD                     l4503:	
 12542                           
 12543                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12544  07DD  0024               	movlb	4	; select bank4
 12545  07DE  081F               	movf	31,w	;volatile
 12546  07DF  39F3               	andlw	-13
 12547  07E0  3804               	iorlw	4
 12548  07E1  009F               	movwf	31	;volatile
 12549  07E2                     l913:	
 12550  07E2  0008               	return
 12551  07E3                     __end_of_PWM6_Initialize:	
 12552                           
 12553                           	psect	text25
 12554  0FA6                     __ptext25:	
 12555 ;; *************** function _PMD_Initialize *****************
 12556 ;; Defined at:
 12557 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;		None
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;		None
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  1    wreg      void 
 12564 ;; Registers used:
 12565 ;;		status,2
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;Total ram usage:        0 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:    6
 12578 ;; This function calls:
 12579 ;;		Nothing
 12580 ;; This function is called by:
 12581 ;;		_SYSTEM_Initialize
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           
 12586                           ;psect for function _PMD_Initialize
 12587  0FA6                     _PMD_Initialize:	
 12588  0FA6                     l4437:	
 12589                           ;incstack = 0
 12590                           ; Regs used in _PMD_Initialize: [status,2]
 12591                           
 12592                           
 12593                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12594  0FA6  002F               	movlb	15	; select bank15
 12595  0FA7  0196               	clrf	22	;volatile
 12596                           
 12597                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12598  0FA8  0197               	clrf	23	;volatile
 12599                           
 12600                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12601  0FA9  0198               	clrf	24	;volatile
 12602                           
 12603                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12604  0FAA  0199               	clrf	25	;volatile
 12605                           
 12606                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12607  0FAB  019A               	clrf	26	;volatile
 12608                           
 12609                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12610  0FAC  019B               	clrf	27	;volatile
 12611  0FAD                     l445:	
 12612  0FAD  0008               	return
 12613  0FAE                     __end_of_PMD_Initialize:	
 12614                           
 12615                           	psect	text26
 12616  03AE                     __ptext26:	
 12617 ;; *************** function _PIN_MANAGER_Initialize *****************
 12618 ;; Defined at:
 12619 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;		None
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;		None
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  1    wreg      void 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;Total ram usage:        0 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    6
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_SYSTEM_Initialize
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           
 12648                           ;psect for function _PIN_MANAGER_Initialize
 12649  03AE                     _PIN_MANAGER_Initialize:	
 12650  03AE                     l4439:	
 12651                           ;incstack = 0
 12652                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12653                           
 12654                           
 12655                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12656  03AE  0020               	movlb	0	; select bank0
 12657  03AF  019A               	clrf	26	;volatile
 12658                           
 12659                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12660  03B0  0199               	clrf	25	;volatile
 12661                           
 12662                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12663  03B1  0196               	clrf	22	;volatile
 12664                           
 12665                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12666  03B2  0197               	clrf	23	;volatile
 12667                           
 12668                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12669  03B3  0198               	clrf	24	;volatile
 12670  03B4                     l4441:	
 12671                           
 12672                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12673  03B4  3007               	movlw	7
 12674  03B5  0095               	movwf	21	;volatile
 12675  03B6                     l4443:	
 12676                           
 12677                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 12678  03B6  300F               	movlw	15
 12679  03B7  0091               	movwf	17	;volatile
 12680  03B8                     l4445:	
 12681                           
 12682                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12683  03B8  30FF               	movlw	255
 12684  03B9  0092               	movwf	18	;volatile
 12685  03BA                     l4447:	
 12686                           
 12687                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 12688  03BA  30FF               	movlw	255
 12689  03BB  0093               	movwf	19	;volatile
 12690  03BC                     l4449:	
 12691                           
 12692                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12693  03BC  30FF               	movlw	255
 12694  03BD  0094               	movwf	20	;volatile
 12695  03BE                     l4451:	
 12696                           
 12697                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 12698  03BE  30FF               	movlw	255
 12699  03BF  003E               	movlb	30	; select bank30
 12700  03C0  00D9               	movwf	89	;volatile
 12701  03C1                     l4453:	
 12702                           
 12703                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 12704  03C1  30C7               	movlw	199
 12705  03C2  00CE               	movwf	78	;volatile
 12706  03C3                     l4455:	
 12707                           
 12708                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 12709  03C3  30EF               	movlw	239
 12710  03C4  00C3               	movwf	67	;volatile
 12711  03C5                     l4457:	
 12712                           
 12713                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 12714  03C5  3007               	movlw	7
 12715  03C6  00E4               	movwf	100	;volatile
 12716  03C7                     l4459:	
 12717                           
 12718                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 12719  03C7  30FF               	movlw	255
 12720  03C8  00B8               	movwf	56	;volatile
 12721                           
 12722                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 12723  03C9  01DA               	clrf	90	;volatile
 12724                           
 12725                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 12726  03CA  01E5               	clrf	101	;volatile
 12727                           
 12728                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 12729  03CB  01C4               	clrf	68	;volatile
 12730                           
 12731                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 12732  03CC  01B9               	clrf	57	;volatile
 12733                           
 12734                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 12735  03CD  01CF               	clrf	79	;volatile
 12736                           
 12737                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 12738  03CE  01E6               	clrf	102	;volatile
 12739                           
 12740                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 12741  03CF  01BA               	clrf	58	;volatile
 12742                           
 12743                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 12744  03D0  01C5               	clrf	69	;volatile
 12745                           
 12746                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 12747  03D1  01D0               	clrf	80	;volatile
 12748                           
 12749                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 12750  03D2  01DB               	clrf	91	;volatile
 12751  03D3                     l4461:	
 12752                           
 12753                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 12754  03D3  30FF               	movlw	255
 12755  03D4  00BB               	movwf	59	;volatile
 12756  03D5                     l4463:	
 12757                           
 12758                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 12759  03D5  30FF               	movlw	255
 12760  03D6  00C6               	movwf	70	;volatile
 12761  03D7                     l4465:	
 12762                           
 12763                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 12764  03D7  30FF               	movlw	255
 12765  03D8  00D1               	movwf	81	;volatile
 12766  03D9                     l4467:	
 12767                           
 12768                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 12769  03D9  30FF               	movlw	255
 12770  03DA  00DC               	movwf	92	;volatile
 12771  03DB                     l4469:	
 12772                           
 12773                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 12774  03DB  3007               	movlw	7
 12775  03DC  00E7               	movwf	103	;volatile
 12776  03DD                     l4471:	
 12777                           
 12778                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 12779  03DD  30FF               	movlw	255
 12780  03DE  00BC               	movwf	60	;volatile
 12781  03DF                     l4473:	
 12782                           
 12783                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 12784  03DF  30FF               	movlw	255
 12785  03E0  00C7               	movwf	71	;volatile
 12786  03E1                     l4475:	
 12787                           
 12788                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 12789  03E1  30FF               	movlw	255
 12790  03E2  00D2               	movwf	82	;volatile
 12791  03E3                     l4477:	
 12792                           
 12793                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 12794  03E3  30FF               	movlw	255
 12795  03E4  00DD               	movwf	93	;volatile
 12796  03E5                     l4479:	
 12797                           
 12798                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 12799  03E5  3007               	movlw	7
 12800  03E6  00E8               	movwf	104	;volatile
 12801  03E7                     l4481:	
 12802                           
 12803                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 12804  03E7  300C               	movlw	12
 12805  03E8  003D               	movlb	29	; select bank29
 12806  03E9  0090               	movwf	16	;volatile
 12807  03EA                     l4483:	
 12808                           
 12809                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 12810  03EA  3013               	movlw	19
 12811  03EB  00C5               	movwf	69	;volatile
 12812  03EC                     l4485:	
 12813                           
 12814                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 12815  03EC  3014               	movlw	20
 12816  03ED  003E               	movlb	30	; select bank30
 12817  03EE  00A3               	movwf	35	;volatile
 12818  03EF                     l4487:	
 12819                           
 12820                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 12821  03EF  3015               	movlw	21
 12822  03F0  00A4               	movwf	36	;volatile
 12823  03F1                     l4489:	
 12824                           
 12825                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 12826  03F1  300E               	movlw	14
 12827  03F2  0096               	movwf	22	;volatile
 12828  03F3                     l4491:	
 12829                           
 12830                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 12831  03F3  3014               	movlw	20
 12832  03F4  003D               	movlb	29	; select bank29
 12833  03F5  00C6               	movwf	70	;volatile
 12834  03F6                     l530:	
 12835  03F6  0008               	return
 12836  03F7                     __end_of_PIN_MANAGER_Initialize:	
 12837                           
 12838                           	psect	text27
 12839  0FC0                     __ptext27:	
 12840 ;; *************** function _OSCILLATOR_Initialize *****************
 12841 ;; Defined at:
 12842 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;		None
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, status,2
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;Total ram usage:        0 bytes
 12861 ;; Hardware stack levels used:    1
 12862 ;; Hardware stack levels required when called:    6
 12863 ;; This function calls:
 12864 ;;		Nothing
 12865 ;; This function is called by:
 12866 ;;		_SYSTEM_Initialize
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           
 12871                           ;psect for function _OSCILLATOR_Initialize
 12872  0FC0                     _OSCILLATOR_Initialize:	
 12873  0FC0                     l4493:	
 12874                           ;incstack = 0
 12875                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12876                           
 12877                           
 12878                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 12879  0FC0  3062               	movlw	98
 12880  0FC1  0031               	movlb	17	; select bank17
 12881  0FC2  008D               	movwf	13	;volatile
 12882  0FC3                     l4495:	
 12883                           
 12884                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12885  0FC3  018F               	clrf	15	;volatile
 12886  0FC4                     l4497:	
 12887                           
 12888                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12889  0FC4  0191               	clrf	17	;volatile
 12890                           
 12891                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 12892  0FC5  3002               	movlw	2
 12893  0FC6  0093               	movwf	19	;volatile
 12894  0FC7                     l4499:	
 12895                           
 12896                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12897  0FC7  0192               	clrf	18	;volatile
 12898  0FC8                     l442:	
 12899  0FC8  0008               	return
 12900  0FC9                     __end_of_OSCILLATOR_Initialize:	
 12901                           
 12902                           	psect	text28
 12903  07C8                     __ptext28:	
 12904 ;; *************** function _EXT_INT_Initialize *****************
 12905 ;; Defined at:
 12906 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      void 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        0 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; Hardware stack levels required when called:    7
 12927 ;; This function calls:
 12928 ;;		_INT_SetInterruptHandler
 12929 ;; This function is called by:
 12930 ;;		_SYSTEM_Initialize
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           
 12935                           ;psect for function _EXT_INT_Initialize
 12936  07C8                     _EXT_INT_Initialize:	
 12937  07C8                     l4431:	
 12938                           ;incstack = 0
 12939                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12940                           
 12941                           
 12942                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 12943  07C8  002E               	movlb	14	; select bank14
 12944  07C9  100C               	bcf	12,0	;volatile
 12945                           
 12946                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 12947  07CA  140B               	bsf	11,0	;volatile
 12948  07CB                     l4433:	
 12949                           
 12950                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 12951  07CB  30F7               	movlw	low _INT_DefaultInterruptHandler
 12952  07CC  0020               	movlb	0	; select bank0
 12953  07CD  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
 12954  07CE  300E               	movlw	high _INT_DefaultInterruptHandler
 12955  07CF  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12956  07D0  318F  275A  3187   	fcall	_INT_SetInterruptHandler
 12957  07D3                     l4435:	
 12958                           
 12959                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 12960  07D3  002E               	movlb	14	; select bank14
 12961  07D4  1416               	bsf	22,0	;volatile
 12962  07D5                     l347:	
 12963  07D5  0008               	return
 12964  07D6                     __end_of_EXT_INT_Initialize:	
 12965                           
 12966                           	psect	text29
 12967  0F5A                     __ptext29:	
 12968 ;; *************** function _INT_SetInterruptHandler *****************
 12969 ;; Defined at:
 12970 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12973 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;Total ram usage:        2 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:    6
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_EXT_INT_Initialize
 12996 ;;		_main
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           
 13001                           ;psect for function _INT_SetInterruptHandler
 13002  0F5A                     _INT_SetInterruptHandler:	
 13003  0F5A                     l4109:	
 13004                           ;incstack = 0
 13005                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13006                           
 13007                           
 13008                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 13009  0F5A  0020               	movlb	0	; select bank0
 13010  0F5B  083B               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 13011  0F5C  00D2               	movwf	_INT_InterruptHandler+1
 13012  0F5D  083A               	movf	INT_SetInterruptHandler@InterruptHandler,w
 13013  0F5E  00D1               	movwf	_INT_InterruptHandler
 13014  0F5F                     l341:	
 13015  0F5F  0008               	return
 13016  0F60                     __end_of_INT_SetInterruptHandler:	
 13017                           
 13018                           	psect	text30
 13019  06E5                     __ptext30:	
 13020 ;; *************** function _ADCC_Initialize *****************
 13021 ;; Defined at:
 13022 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;		None
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1    wreg      void 
 13029 ;; Registers used:
 13030 ;;		wreg, status,2
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13040 ;;Total ram usage:        0 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    6
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		_SYSTEM_Initialize
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           
 13051                           ;psect for function _ADCC_Initialize
 13052  06E5                     _ADCC_Initialize:	
 13053  06E5                     l4505:	
 13054                           ;incstack = 0
 13055                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13056                           
 13057                           
 13058                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13059  06E5  0022               	movlb	2	; select bank2
 13060  06E6  018E               	clrf	14	;volatile
 13061                           
 13062                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13063  06E7  018F               	clrf	15	;volatile
 13064                           
 13065                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13066  06E8  0190               	clrf	16	;volatile
 13067                           
 13068                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13069  06E9  0191               	clrf	17	;volatile
 13070                           
 13071                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13072  06EA  0192               	clrf	18	;volatile
 13073                           
 13074                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13075  06EB  0193               	clrf	19	;volatile
 13076                           
 13077                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13078  06EC  018D               	clrf	13	;volatile
 13079                           
 13080                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13081  06ED  0021               	movlb	1	; select bank1
 13082  06EE  019E               	clrf	30	;volatile
 13083                           
 13084                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13085  06EF  019B               	clrf	27	;volatile
 13086                           
 13087                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 13088  06F0  0194               	clrf	20	;volatile
 13089                           
 13090                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 13091  06F1  0195               	clrf	21	;volatile
 13092                           
 13093                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 13094  06F2  0196               	clrf	22	;volatile
 13095                           
 13096                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 13097  06F3  0197               	clrf	23	;volatile
 13098                           
 13099                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 13100  06F4  019A               	clrf	26	;volatile
 13101                           
 13102                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 13103  06F5  0199               	clrf	25	;volatile
 13104                           
 13105                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 13106  06F6  0198               	clrf	24	;volatile
 13107  06F7                     l4507:	
 13108                           
 13109                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 13110  06F7  3084               	movlw	132
 13111  06F8  0093               	movwf	19	;volatile
 13112  06F9                     l4509:	
 13113                           
 13114                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 13115  06F9  019D               	clrf	29	;volatile
 13116  06FA                     l757:	
 13117  06FA  0008               	return
 13118  06FB                     __end_of_ADCC_Initialize:	
 13119                           
 13120                           	psect	text31
 13121  0638                     __ptext31:	
 13122 ;; *************** function _LED_bin *****************
 13123 ;; Defined at:
 13124 ;;		line 319 in file "main.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;  value           2    3[BANK0 ] unsigned int 
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;		None
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		wreg, status,2, status,0
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13140 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;Total ram usage:        5 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    6
 13145 ;; This function calls:
 13146 ;;		Nothing
 13147 ;; This function is called by:
 13148 ;;		_main
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           
 13153                           ;psect for function _LED_bin
 13154  0638                     _LED_bin:	
 13155  0638                     l4837:	
 13156                           ;incstack = 0
 13157                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 13158                           
 13159                           
 13160                           ;main.c: 321:     LATAbits.LATA4 = (value & 1);
 13161  0638  0020               	movlb	0	; select bank0
 13162  0639  083A               	movf	LED_bin@value,w
 13163  063A  3901               	andlw	1
 13164  063B  00BC               	movwf	??_LED_bin
 13165  063C  0EBC               	swapf	??_LED_bin,f
 13166  063D  0816               	movf	22,w	;volatile
 13167  063E  063C               	xorwf	??_LED_bin,w
 13168  063F  39EF               	andlw	-17
 13169  0640  063C               	xorwf	??_LED_bin,w
 13170  0641  0096               	movwf	22	;volatile
 13171                           
 13172                           ;main.c: 322:     LATAbits.LATA5 = (value >>1);
 13173  0642  083B               	movf	LED_bin@value+1,w
 13174  0643  00BD               	movwf	??_LED_bin+1
 13175  0644  083A               	movf	LED_bin@value,w
 13176  0645  00BC               	movwf	??_LED_bin
 13177  0646  36BD               	lsrf	??_LED_bin+1,f
 13178  0647  0CBC               	rrf	??_LED_bin,f
 13179  0648  083C               	movf	??_LED_bin,w
 13180  0649  00BE               	movwf	??_LED_bin+2
 13181  064A  0EBE               	swapf	??_LED_bin+2,f
 13182  064B  0DBE               	rlf	??_LED_bin+2,f
 13183  064C  0816               	movf	22,w	;volatile
 13184  064D  063E               	xorwf	??_LED_bin+2,w
 13185  064E  39DF               	andlw	-33
 13186  064F  063E               	xorwf	??_LED_bin+2,w
 13187  0650  0096               	movwf	22	;volatile
 13188  0651                     l1247:	
 13189  0651  0008               	return
 13190  0652                     __end_of_LED_bin:	
 13191                           
 13192                           	psect	text32
 13193  0652                     __ptext32:	
 13194 ;; *************** function _ADC_read *****************
 13195 ;; Defined at:
 13196 ;;		line 332 in file "main.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;		None
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  2    5[BANK0 ] unsigned int 
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0, pclath, cstack
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;Total ram usage:        2 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    7
 13217 ;; This function calls:
 13218 ;;		_ADCC_GetConversionResult
 13219 ;;		_ADCC_IsConversionDone
 13220 ;;		_ADCC_StartConversion
 13221 ;; This function is called by:
 13222 ;;		_main
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _ADC_read
 13228  0652                     _ADC_read:	
 13229  0652                     l4827:	
 13230                           ;incstack = 0
 13231                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 13232                           
 13233                           
 13234                           ;main.c: 334:     ADCC_StartConversion(channel_ANA0);
 13235  0652  3000               	movlw	0
 13236  0653  318F  279E  3186   	fcall	_ADCC_StartConversion
 13237                           
 13238                           ;main.c: 335:     while(!ADCC_IsConversionDone()){
 13239  0656  2E5B               	goto	l4831
 13240  0657                     l4829:	
 13241                           
 13242                           ;main.c: 336:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13243  0657  3053               	movlw	83
 13244  0658                     u2487:	
 13245  0658  0B89               	decfsz	9,f
 13246  0659  2E58               	goto	u2487
 13247  065A  0000               	nop
 13248  065B                     l4831:	
 13249                           
 13250                           ;main.c: 335:     while(!ADCC_IsConversionDone()){
 13251  065B  318F  277F  3186   	fcall	_ADCC_IsConversionDone
 13252  065E  3A00               	xorlw	0
 13253  065F  1903               	skipnz
 13254  0660  2E62               	goto	u1911
 13255  0661  2E63               	goto	u1910
 13256  0662                     u1911:	
 13257  0662  2E57               	goto	l4829
 13258  0663                     u1910:	
 13259  0663                     l4833:	
 13260                           
 13261                           ;main.c: 339:     return ADCC_GetConversionResult();
 13262  0663  318F  27B7  3186   	fcall	_ADCC_GetConversionResult
 13263  0666  0020               	movlb	0	; select bank0
 13264  0667  083B               	movf	?_ADCC_GetConversionResult+1,w
 13265  0668  00BD               	movwf	?_ADC_read+1
 13266  0669  083A               	movf	?_ADCC_GetConversionResult,w
 13267  066A  00BC               	movwf	?_ADC_read
 13268  066B                     l1253:	
 13269  066B  0008               	return
 13270  066C                     __end_of_ADC_read:	
 13271                           
 13272                           	psect	text33
 13273  0F9E                     __ptext33:	
 13274 ;; *************** function _ADCC_StartConversion *****************
 13275 ;; Defined at:
 13276 ;;		line 106 in file "mcc_generated_files/adcc.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  channel         1    wreg     enum E12246
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  channel         1    3[BANK0 ] enum E12246
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;Total ram usage:        1 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    6
 13297 ;; This function calls:
 13298 ;;		Nothing
 13299 ;; This function is called by:
 13300 ;;		_ADC_read
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           
 13305                           ;psect for function _ADCC_StartConversion
 13306  0F9E                     _ADCC_StartConversion:	
 13307                           
 13308                           ;incstack = 0
 13309                           ; Regs used in _ADCC_StartConversion: [wreg]
 13310                           ;ADCC_StartConversion@channel stored from wreg
 13311  0F9E  0020               	movlb	0	; select bank0
 13312  0F9F  00BA               	movwf	ADCC_StartConversion@channel
 13313  0FA0                     l4555:	
 13314                           
 13315                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 13316  0FA0  083A               	movf	ADCC_StartConversion@channel,w
 13317  0FA1  0021               	movlb	1	; select bank1
 13318  0FA2  009E               	movwf	30	;volatile
 13319  0FA3                     l4557:	
 13320                           
 13321                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 13322  0FA3  1793               	bsf	19,7	;volatile
 13323  0FA4                     l4559:	
 13324                           
 13325                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 13326  0FA4  1413               	bsf	19,0	;volatile
 13327  0FA5                     l760:	
 13328  0FA5  0008               	return
 13329  0FA6                     __end_of_ADCC_StartConversion:	
 13330                           
 13331                           	psect	text34
 13332  0F7F                     __ptext34:	
 13333 ;; *************** function _ADCC_IsConversionDone *****************
 13334 ;; Defined at:
 13335 ;;		line 118 in file "mcc_generated_files/adcc.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;		None
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;		None
 13340 ;; Return value:  Size  Location     Type
 13341 ;;                  1    wreg      _Bool 
 13342 ;; Registers used:
 13343 ;;		wreg, status,0
 13344 ;; Tracked objects:
 13345 ;;		On entry : 0/0
 13346 ;;		On exit  : 0/0
 13347 ;;		Unchanged: 0/0
 13348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13353 ;;Total ram usage:        0 bytes
 13354 ;; Hardware stack levels used:    1
 13355 ;; Hardware stack levels required when called:    6
 13356 ;; This function calls:
 13357 ;;		Nothing
 13358 ;; This function is called by:
 13359 ;;		_ADC_read
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           
 13364                           ;psect for function _ADCC_IsConversionDone
 13365  0F7F                     _ADCC_IsConversionDone:	
 13366  0F7F                     l4561:	
 13367                           ;incstack = 0
 13368                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 13369                           
 13370                           
 13371                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 13372  0F7F  1003               	clrc
 13373  0F80  0021               	movlb	1	; select bank1
 13374  0F81  1C13               	btfss	19,0	;volatile
 13375  0F82  1403               	setc
 13376  0F83  3000               	movlw	0
 13377  0F84  3D09               	addwfc	9,w
 13378  0F85                     l763:	
 13379  0F85  0008               	return
 13380  0F86                     __end_of_ADCC_IsConversionDone:	
 13381                           
 13382                           	psect	text35
 13383  0FB7                     __ptext35:	
 13384 ;; *************** function _ADCC_GetConversionResult *****************
 13385 ;; Defined at:
 13386 ;;		line 124 in file "mcc_generated_files/adcc.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;		None
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;		None
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  2    3[BANK0 ] unsigned short 
 13393 ;; Registers used:
 13394 ;;		wreg
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;Total ram usage:        2 bytes
 13405 ;; Hardware stack levels used:    1
 13406 ;; Hardware stack levels required when called:    6
 13407 ;; This function calls:
 13408 ;;		Nothing
 13409 ;; This function is called by:
 13410 ;;		_ADC_read
 13411 ;; This function uses a non-reentrant model
 13412 ;;
 13413                           
 13414                           
 13415                           ;psect for function _ADCC_GetConversionResult
 13416  0FB7                     _ADCC_GetConversionResult:	
 13417  0FB7                     l4565:	
 13418                           ;incstack = 0
 13419                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13420                           
 13421                           
 13422                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13423  0FB7  0021               	movlb	1	; select bank1
 13424  0FB8  080D               	movf	13,w	;volatile
 13425  0FB9  0020               	movlb	0	; select bank0
 13426  0FBA  00BB               	movwf	?_ADCC_GetConversionResult+1
 13427  0FBB  0021               	movlb	1	; select bank1
 13428  0FBC  080C               	movf	12,w	;volatile
 13429  0FBD  0020               	movlb	0	; select bank0
 13430  0FBE  00BA               	movwf	?_ADCC_GetConversionResult
 13431  0FBF                     l766:	
 13432  0FBF  0008               	return
 13433  0FC0                     __end_of_ADCC_GetConversionResult:	
 13434                           
 13435                           	psect	intentry
 13436  0004                     __pintentry:	
 13437 ;; *************** function _INTERRUPT_InterruptManager *****************
 13438 ;; Defined at:
 13439 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;		None
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      void 
 13446 ;; Registers used:
 13447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13457 ;;Total ram usage:        0 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; Hardware stack levels required when called:    5
 13460 ;; This function calls:
 13461 ;;		Absolute function
 13462 ;;		_INT_ISR
 13463 ;;		_TMR0_ISR
 13464 ;;		_TMR1_ISR
 13465 ;;		_TMR2_ISR
 13466 ;;		_i2c_ISR
 13467 ;;		_i2c_busCollisionISR
 13468 ;; This function is called by:
 13469 ;;		Interrupt level 1
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473  0004                     _INTERRUPT_InterruptManager:	
 13474                           
 13475                           ;incstack = 0
 13476  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13477                           
 13478                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13479  0005  3180               	pagesel	$
 13480  0006                     i1l5035:	
 13481                           
 13482                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 13483  0006  002E               	movlb	14	; select bank14
 13484  0007  1C16               	btfss	22,0	;volatile
 13485  0008  280A               	goto	u215_21
 13486  0009  280B               	goto	u215_20
 13487  000A                     u215_21:	
 13488  000A  2813               	goto	i1l378
 13489  000B                     u215_20:	
 13490  000B                     i1l5037:	
 13491  000B  1C0C               	btfss	12,0	;volatile
 13492  000C  280E               	goto	u216_21
 13493  000D  280F               	goto	u216_20
 13494  000E                     u216_21:	
 13495  000E  2813               	goto	i1l378
 13496  000F                     u216_20:	
 13497  000F                     i1l5039:	
 13498                           
 13499                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 13500  000F  318F  2754  3180   	fcall	_INT_ISR
 13501                           
 13502                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13503  0012  2859               	goto	i1l392
 13504  0013                     i1l378:	
 13505                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 13506                           
 13507  0013  1E96               	btfss	22,5	;volatile
 13508  0014  2816               	goto	u217_21
 13509  0015  2817               	goto	u217_20
 13510  0016                     u217_21:	
 13511  0016  281F               	goto	i1l380
 13512  0017                     u217_20:	
 13513  0017                     i1l5041:	
 13514  0017  1E8C               	btfss	12,5	;volatile
 13515  0018  281A               	goto	u218_21
 13516  0019  281B               	goto	u218_20
 13517  001A                     u218_21:	
 13518  001A  281F               	goto	i1l380
 13519  001B                     u218_20:	
 13520  001B                     i1l5043:	
 13521                           
 13522                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 13523  001B  3187  27B9  3180   	fcall	_TMR0_ISR
 13524                           
 13525                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 13526  001E  2859               	goto	i1l392
 13527  001F                     i1l380:	
 13528                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 13529                           
 13530  001F  1F0B               	btfss	11,6	;volatile
 13531  0020  2822               	goto	u219_21
 13532  0021  2823               	goto	u219_20
 13533  0022                     u219_21:	
 13534  0022  2859               	goto	i1l386
 13535  0023                     u219_20:	
 13536  0023                     i1l5045:	
 13537                           
 13538                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13539  0023  1C99               	btfss	25,1	;volatile
 13540  0024  2826               	goto	u220_21
 13541  0025  2827               	goto	u220_20
 13542  0026                     u220_21:	
 13543  0026  2832               	goto	i1l383
 13544  0027                     u220_20:	
 13545  0027                     i1l5047:	
 13546  0027  1C8F               	btfss	15,1	;volatile
 13547  0028  282A               	goto	u221_21
 13548  0029  282B               	goto	u221_20
 13549  002A                     u221_21:	
 13550  002A  2832               	goto	i1l383
 13551  002B                     u221_20:	
 13552  002B                     i1l5049:	
 13553                           
 13554                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 13555  002B  0020               	movlb	0	; select bank0
 13556  002C  082D               	movf	_i2c1_driver_busCollisionISR+1,w
 13557  002D  008A               	movwf	10
 13558  002E  082C               	movf	_i2c1_driver_busCollisionISR,w
 13559  002F  000A               	callw
 13560  0030  3180               	pagesel	$
 13561                           
 13562                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13563  0031  2859               	goto	i1l392
 13564  0032                     i1l383:	
 13565                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 13566                           
 13567  0032  1C19               	btfss	25,0	;volatile
 13568  0033  2835               	goto	u222_21
 13569  0034  2836               	goto	u222_20
 13570  0035                     u222_21:	
 13571  0035  2841               	goto	i1l385
 13572  0036                     u222_20:	
 13573  0036                     i1l5051:	
 13574  0036  1C0F               	btfss	15,0	;volatile
 13575  0037  2839               	goto	u223_21
 13576  0038  283A               	goto	u223_20
 13577  0039                     u223_21:	
 13578  0039  2841               	goto	i1l385
 13579  003A                     u223_20:	
 13580  003A                     i1l5053:	
 13581                           
 13582                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 13583  003A  0020               	movlb	0	; select bank0
 13584  003B  082B               	movf	_i2c1_driver_i2cISR+1,w
 13585  003C  008A               	movwf	10
 13586  003D  082A               	movf	_i2c1_driver_i2cISR,w
 13587  003E  000A               	callw
 13588  003F  3180               	pagesel	$
 13589                           
 13590                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13591  0040  2859               	goto	i1l392
 13592  0041                     i1l385:	
 13593                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 13594                           
 13595  0041  1C1A               	btfss	26,0	;volatile
 13596  0042  2844               	goto	u224_21
 13597  0043  2845               	goto	u224_20
 13598  0044                     u224_21:	
 13599  0044  284D               	goto	i1l387
 13600  0045                     u224_20:	
 13601  0045                     i1l5055:	
 13602  0045  1C10               	btfss	16,0	;volatile
 13603  0046  2848               	goto	u225_21
 13604  0047  2849               	goto	u225_20
 13605  0048                     u225_21:	
 13606  0048  284D               	goto	i1l387
 13607  0049                     u225_20:	
 13608  0049                     i1l5057:	
 13609                           
 13610                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 13611  0049  3186  26CE  3180   	fcall	_TMR1_ISR
 13612                           
 13613                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 13614  004C  2859               	goto	i1l392
 13615  004D                     i1l387:	
 13616                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 13617                           
 13618  004D  1C9A               	btfss	26,1	;volatile
 13619  004E  2850               	goto	u226_21
 13620  004F  2851               	goto	u226_20
 13621  0050                     u226_21:	
 13622  0050  2859               	goto	i1l386
 13623  0051                     u226_20:	
 13624  0051                     i1l5059:	
 13625  0051  1C90               	btfss	16,1	;volatile
 13626  0052  2854               	goto	u227_21
 13627  0053  2855               	goto	u227_20
 13628  0054                     u227_21:	
 13629  0054  2859               	goto	i1l386
 13630  0055                     u227_20:	
 13631  0055                     i1l5061:	
 13632                           
 13633                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 13634  0055  3187  27AA  3180   	fcall	_TMR2_ISR
 13635                           
 13636                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 13637  0058  2859               	goto	i1l392
 13638  0059                     i1l386:	
 13639  0059                     i1l392:	
 13640  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13641  005A  0009               	retfie
 13642  005B                     __end_of_INTERRUPT_InterruptManager:	
 13643                           
 13644                           	psect	text37
 13645  0F23                     __ptext37:	
 13646 ;; *************** function _i2c_busCollisionISR *****************
 13647 ;; Defined at:
 13648 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;		None
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		status,2, status,0, pclath, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;Total ram usage:        0 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:    1
 13669 ;; This function calls:
 13670 ;;		_i2c1_driver_clearBusCollision
 13671 ;; This function is called by:
 13672 ;;		_i2c_open
 13673 ;;		_INTERRUPT_InterruptManager
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           
 13678                           ;psect for function _i2c_busCollisionISR
 13679  0F23                     _i2c_busCollisionISR:	
 13680  0F23                     i1l4765:	
 13681                           ;incstack = 0
 13682                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13683                           
 13684                           
 13685                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 13686  0F23  318F  2715  318F   	fcall	_i2c1_driver_clearBusCollision
 13687  0F26                     i1l213:	
 13688  0F26  0008               	return
 13689  0F27                     __end_of_i2c_busCollisionISR:	
 13690                           
 13691                           	psect	text38
 13692  0F15                     __ptext38:	
 13693 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13694 ;; Defined at:
 13695 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;		None
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;		None
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      void 
 13702 ;; Registers used:
 13703 ;;		None
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;Total ram usage:        0 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; This function calls:
 13716 ;;		Nothing
 13717 ;; This function is called by:
 13718 ;;		_i2c_busCollisionISR
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722                           
 13723                           ;psect for function _i2c1_driver_clearBusCollision
 13724  0F15                     _i2c1_driver_clearBusCollision:	
 13725  0F15                     i1l4425:	
 13726                           ;incstack = 0
 13727                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13728                           
 13729                           
 13730                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 13731  0F15  002E               	movlb	14	; select bank14
 13732  0F16  108F               	bcf	15,1	;volatile
 13733  0F17                     i1l672:	
 13734  0F17  0008               	return
 13735  0F18                     __end_of_i2c1_driver_clearBusCollision:	
 13736                           
 13737                           	psect	text39
 13738  04A6                     __ptext39:	
 13739 ;; *************** function _i2c_ISR *****************
 13740 ;; Defined at:
 13741 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;		None
 13744 ;; Auto vars:     Size  Location     Type
 13745 ;;		None
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  1    wreg      void 
 13748 ;; Registers used:
 13749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13757 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13758 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;Total ram usage:        3 bytes
 13760 ;; Hardware stack levels used:    1
 13761 ;; Hardware stack levels required when called:    4
 13762 ;; This function calls:
 13763 ;;		_do_I2C_DO_ACK
 13764 ;;		_do_I2C_DO_ADDRESS_NACK
 13765 ;;		_do_I2C_DO_NACK_RESTART
 13766 ;;		_do_I2C_DO_NACK_STOP
 13767 ;;		_do_I2C_IDLE
 13768 ;;		_do_I2C_RCEN
 13769 ;;		_do_I2C_RESET
 13770 ;;		_do_I2C_RX
 13771 ;;		_do_I2C_SEND_ADR_READ
 13772 ;;		_do_I2C_SEND_ADR_WRITE
 13773 ;;		_do_I2C_SEND_RESTART
 13774 ;;		_do_I2C_SEND_RESTART_READ
 13775 ;;		_do_I2C_SEND_RESTART_WRITE
 13776 ;;		_do_I2C_SEND_STOP
 13777 ;;		_do_I2C_TX
 13778 ;;		_do_I2C_TX_EMPTY
 13779 ;;		_i2c1_driver_isNACK
 13780 ;;		_mssp1_clearIRQ
 13781 ;; This function is called by:
 13782 ;;		_i2c_open
 13783 ;;		_i2c_poller
 13784 ;;		_INTERRUPT_InterruptManager
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           
 13789                           ;psect for function _i2c_ISR
 13790  04A6                     _i2c_ISR:	
 13791  04A6                     i1l4755:	
 13792                           ;incstack = 0
 13793                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13794                           
 13795                           
 13796                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 13797  04A6  318F  2712  3184   	fcall	_mssp1_clearIRQ
 13798  04A9                     i1l4757:	
 13799                           
 13800                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 13801  04A9  0021               	movlb	1	; select bank1
 13802  04AA  1DA0               	btfss	_i2c_status^(0+128),3
 13803  04AB  2CAD               	goto	u184_21
 13804  04AC  2CAE               	goto	u184_20
 13805  04AD                     u184_21:	
 13806  04AD  2CBB               	goto	i1l4763
 13807  04AE                     u184_20:	
 13808  04AE                     i1l4759:	
 13809  04AE  318F  2786  3184   	fcall	_i2c1_driver_isNACK
 13810  04B1  1C03               	btfss	3,0
 13811  04B2  2CB4               	goto	u185_21
 13812  04B3  2CB5               	goto	u185_20
 13813  04B4                     u185_21:	
 13814  04B4  2CBB               	goto	i1l4763
 13815  04B5                     u185_20:	
 13816  04B5                     i1l4761:	
 13817                           
 13818                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 13819  04B5  300F               	movlw	15
 13820  04B6  0020               	movlb	0	; select bank0
 13821  04B7  00B7               	movwf	??_i2c_ISR
 13822  04B8  0837               	movf	??_i2c_ISR,w
 13823  04B9  0021               	movlb	1	; select bank1
 13824  04BA  00A9               	movwf	(_i2c_status^(0+128)+9)
 13825  04BB                     i1l4763:	
 13826                           
 13827                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 13828  04BB  0021               	movlb	1	; select bank1
 13829  04BC  0829               	movf	(_i2c_status^(0+128)+9),w
 13830  04BD  0020               	movlb	0	; select bank0
 13831  04BE  00B7               	movwf	??_i2c_ISR
 13832  04BF  01B8               	clrf	??_i2c_ISR+1
 13833  04C0  35B7               	lslf	??_i2c_ISR,f
 13834  04C1  0DB8               	rlf	??_i2c_ISR+1,f
 13835  04C2  30A1               	movlw	low (_fsmStateTable| (0+32768))
 13836  04C3  0737               	addwf	??_i2c_ISR,w
 13837  04C4  0084               	movwf	4
 13838  04C5  3085               	movlw	high (_fsmStateTable| (0+32768))
 13839  04C6  3D38               	addwfc	??_i2c_ISR+1,w
 13840  04C7  0085               	movwf	5
 13841  04C8  3F01               	moviw [1]fsr0
 13842  04C9  008A               	movwf	10
 13843  04CA  3F00               	moviw [0]fsr0
 13844  04CB  000A               	callw
 13845  04CC  3184               	pagesel	$
 13846  04CD  0020               	movlb	0	; select bank0
 13847  04CE  00B9               	movwf	??_i2c_ISR+2
 13848  04CF  0839               	movf	??_i2c_ISR+2,w
 13849  04D0  0021               	movlb	1	; select bank1
 13850  04D1  00A9               	movwf	(_i2c_status^(0+128)+9)
 13851  04D2                     i1l210:	
 13852  04D2  0008               	return
 13853  04D3                     __end_of_i2c_ISR:	
 13854                           
 13855                           	psect	text40
 13856  0F12                     __ptext40:	
 13857 ;; *************** function _mssp1_clearIRQ *****************
 13858 ;; Defined at:
 13859 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;		None
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;		None
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		None
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;Total ram usage:        0 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; This function calls:
 13880 ;;		Nothing
 13881 ;; This function is called by:
 13882 ;;		_i2c_ISR
 13883 ;;		_i2c_open
 13884 ;;		_i2c_close
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           
 13889                           ;psect for function _mssp1_clearIRQ
 13890  0F12                     _mssp1_clearIRQ:	
 13891  0F12                     i1l4241:	
 13892                           ;incstack = 0
 13893                           ; Regs used in _mssp1_clearIRQ: []
 13894                           
 13895                           
 13896                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 13897  0F12  002E               	movlb	14	; select bank14
 13898  0F13  100F               	bcf	15,0	;volatile
 13899  0F14                     i1l576:	
 13900  0F14  0008               	return
 13901  0F15                     __end_of_mssp1_clearIRQ:	
 13902                           
 13903                           	psect	text41
 13904  0364                     __ptext41:	
 13905 ;; *************** function _do_I2C_RX *****************
 13906 ;; Defined at:
 13907 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;		None
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;		None
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  1    wreg      enum E12722
 13914 ;; Registers used:
 13915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/0
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;Total ram usage:        3 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; Hardware stack levels required when called:    3
 13928 ;; This function calls:
 13929 ;;		Absolute function
 13930 ;;		_do_I2C_DO_NACK_RESTART
 13931 ;;		_do_I2C_DO_NACK_STOP
 13932 ;;		_i2c1_driver_getRXData
 13933 ;;		_i2c1_driver_sendACK
 13934 ;;		_i2c_restartWrite
 13935 ;;		_rd1RegCompleteHandler
 13936 ;;		_rd2RegCompleteHandler
 13937 ;;		_rdBlkRegCompleteHandler
 13938 ;;		_returnReset
 13939 ;;		_returnStop
 13940 ;;		_wr1RegCompleteHandler
 13941 ;;		_wr2RegCompleteHandler
 13942 ;; This function is called by:
 13943 ;;		_i2c_ISR
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function _do_I2C_RX
 13949  0364                     _do_I2C_RX:	
 13950  0364                     i1l4367:	
 13951                           ;incstack = 0
 13952                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13953                           
 13954                           
 13955                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 13956  0364  318F  270C  3183   	fcall	_i2c1_driver_getRXData
 13957  0367  00FA               	movwf	??_do_I2C_RX
 13958  0368  0021               	movlb	1	; select bank1
 13959  0369  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 13960  036A  0086               	movwf	6
 13961  036B  0187               	clrf	7
 13962  036C  087A               	movf	??_do_I2C_RX,w
 13963  036D  0081               	movwf	1
 13964  036E                     i1l4369:	
 13965  036E  3001               	movlw	1
 13966  036F  00FA               	movwf	??_do_I2C_RX
 13967  0370  087A               	movf	??_do_I2C_RX,w
 13968  0371  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 13969  0372                     i1l4371:	
 13970                           
 13971                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 13972  0372  3001               	movlw	1
 13973  0373  02A3               	subwf	(_i2c_status^(0+128)+3),f
 13974  0374  3000               	movlw	0
 13975  0375  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 13976  0376  0823               	movf	(_i2c_status^(0+128)+3),w
 13977  0377  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 13978  0378  1903               	btfsc	3,2
 13979  0379  2B7B               	goto	u166_21
 13980  037A  2B7C               	goto	u166_20
 13981  037B                     u166_21:	
 13982  037B  2B81               	goto	i1l185
 13983  037C                     u166_20:	
 13984  037C                     i1l4373:	
 13985                           
 13986                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 13987  037C  318F  271B  3183   	fcall	_i2c1_driver_sendACK
 13988  037F                     i1l4375:	
 13989                           
 13990                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 13991  037F  3005               	movlw	5
 13992  0380  2BAD               	goto	i1l186
 13993  0381                     i1l185:	
 13994                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 13995                           
 13996                           
 13997                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 13998  0381  1520               	bsf	_i2c_status^(0+128),2
 13999                           
 14000                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14001  0382  2B8B               	goto	i1l4391
 14002  0383                     i1l4381:	
 14003                           
 14004                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 14005  0383  318F  274F  3183   	fcall	_do_I2C_DO_NACK_RESTART
 14006  0386  2BAD               	goto	i1l186
 14007  0387                     i1l4385:	
 14008                           
 14009                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 14010  0387  318F  274A  3183   	fcall	_do_I2C_DO_NACK_STOP
 14011  038A  2BAD               	goto	i1l186
 14012  038B                     i1l4391:	
 14013  038B  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14014  038C  00FA               	movwf	??_do_I2C_RX
 14015  038D  087A               	movf	??_do_I2C_RX,w
 14016  038E  00F9               	movwf	rdBlkRegCompleteHandler@p
 14017  038F  300B               	movlw	11
 14018  0390  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14019  0391  0086               	movwf	6
 14020  0392  0187               	clrf	7
 14021  0393  3F41               	moviw [1]fsr1
 14022  0394  008A               	movwf	10
 14023  0395  3F40               	moviw [0]fsr1
 14024  0396  000A               	callw
 14025  0397  3183               	pagesel	$
 14026  0398  00FB               	movwf	??_do_I2C_RX+1
 14027  0399  01FC               	clrf	??_do_I2C_RX+2
 14028                           
 14029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14030                           ; Switch size 1, requested type "simple"
 14031                           ; Number of cases is 1, Range of values is 0 to 0
 14032                           ; switch strategies available:
 14033                           ; Name         Instructions Cycles
 14034                           ; simple_byte            4     3 (average)
 14035                           ; direct_byte            8     6 (fixed)
 14036                           ; jumptable            260     6 (fixed)
 14037                           ;	Chosen strategy is simple_byte
 14038  039A  087C               	movf	??_do_I2C_RX+2,w
 14039  039B  3A00               	xorlw	0	; case 0
 14040  039C  1903               	skipnz
 14041  039D  2B9F               	goto	i1l5363
 14042  039E  2B87               	goto	i1l4385
 14043  039F                     i1l5363:	
 14044                           
 14045                           ; Switch size 1, requested type "simple"
 14046                           ; Number of cases is 4, Range of values is 1 to 4
 14047                           ; switch strategies available:
 14048                           ; Name         Instructions Cycles
 14049                           ; simple_byte           13     7 (average)
 14050                           ; direct_byte           17     9 (fixed)
 14051                           ; jumptable            263     9 (fixed)
 14052                           ;	Chosen strategy is simple_byte
 14053  039F  087B               	movf	??_do_I2C_RX+1,w
 14054  03A0  3A01               	xorlw	1	; case 1
 14055  03A1  1903               	skipnz
 14056  03A2  2B87               	goto	i1l4385
 14057  03A3  3A03               	xorlw	3	; case 2
 14058  03A4  1903               	skipnz
 14059  03A5  2B83               	goto	i1l4381
 14060  03A6  3A01               	xorlw	1	; case 3
 14061  03A7  1903               	skipnz
 14062  03A8  2B83               	goto	i1l4381
 14063  03A9  3A07               	xorlw	7	; case 4
 14064  03AA  1903               	skipnz
 14065  03AB  2B87               	goto	i1l4385
 14066  03AC  2B87               	goto	i1l4385
 14067  03AD                     i1l186:	
 14068  03AD  0008               	return
 14069  03AE                     __end_of_do_I2C_RX:	
 14070                           
 14071                           	psect	text42
 14072  0310                     __ptext42:	
 14073 ;; *************** function _do_I2C_TX *****************
 14074 ;; Defined at:
 14075 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;		None
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;		None
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  1    wreg      enum E12722
 14082 ;; Registers used:
 14083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;Total ram usage:        3 bytes
 14094 ;; Hardware stack levels used:    1
 14095 ;; Hardware stack levels required when called:    3
 14096 ;; This function calls:
 14097 ;;		Absolute function
 14098 ;;		_do_I2C_SEND_RESTART_READ
 14099 ;;		_do_I2C_SEND_RESTART_WRITE
 14100 ;;		_do_I2C_SEND_STOP
 14101 ;;		_i2c1_driver_TXData
 14102 ;;		_i2c1_driver_isNACK
 14103 ;;		_i2c_restartWrite
 14104 ;;		_rd1RegCompleteHandler
 14105 ;;		_rd2RegCompleteHandler
 14106 ;;		_rdBlkRegCompleteHandler
 14107 ;;		_returnReset
 14108 ;;		_returnStop
 14109 ;;		_wr1RegCompleteHandler
 14110 ;;		_wr2RegCompleteHandler
 14111 ;; This function is called by:
 14112 ;;		_i2c_ISR
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           
 14117                           ;psect for function _do_I2C_TX
 14118  0310                     _do_I2C_TX:	
 14119  0310                     i1l4333:	
 14120                           ;incstack = 0
 14121                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14122                           
 14123                           
 14124                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 14125  0310  318F  2786  3183   	fcall	_i2c1_driver_isNACK
 14126  0313  1C03               	btfss	3,0
 14127  0314  2B16               	goto	u164_21
 14128  0315  2B17               	goto	u164_20
 14129  0316                     u164_21:	
 14130  0316  2B47               	goto	i1l169
 14131  0317                     u164_20:	
 14132  0317  2B24               	goto	i1l4351
 14133  0318                     i1l4337:	
 14134                           
 14135                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 14136  0318  318F  2731  3183   	fcall	_do_I2C_SEND_RESTART_READ
 14137  031B  2B63               	goto	i1l172
 14138  031C                     i1l4341:	
 14139                           
 14140                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 14141  031C  318F  2736  3183   	fcall	_do_I2C_SEND_RESTART_WRITE
 14142  031F  2B63               	goto	i1l172
 14143  0320                     i1l4345:	
 14144                           
 14145                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 14146  0320  318F  2740  3183   	fcall	_do_I2C_SEND_STOP
 14147  0323  2B63               	goto	i1l172
 14148  0324                     i1l4351:	
 14149  0324  0021               	movlb	1	; select bank1
 14150  0325  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14151  0326  00FA               	movwf	??_do_I2C_TX
 14152  0327  087A               	movf	??_do_I2C_TX,w
 14153  0328  00F9               	movwf	rdBlkRegCompleteHandler@p
 14154  0329  3011               	movlw	17
 14155  032A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14156  032B  0086               	movwf	6
 14157  032C  0187               	clrf	7
 14158  032D  3F41               	moviw [1]fsr1
 14159  032E  008A               	movwf	10
 14160  032F  3F40               	moviw [0]fsr1
 14161  0330  000A               	callw
 14162  0331  3183               	pagesel	$
 14163  0332  00FB               	movwf	??_do_I2C_TX+1
 14164  0333  01FC               	clrf	??_do_I2C_TX+2
 14165                           
 14166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14167                           ; Switch size 1, requested type "simple"
 14168                           ; Number of cases is 1, Range of values is 0 to 0
 14169                           ; switch strategies available:
 14170                           ; Name         Instructions Cycles
 14171                           ; simple_byte            4     3 (average)
 14172                           ; direct_byte            8     6 (fixed)
 14173                           ; jumptable            260     6 (fixed)
 14174                           ;	Chosen strategy is simple_byte
 14175  0334  087C               	movf	??_do_I2C_TX+2,w
 14176  0335  3A00               	xorlw	0	; case 0
 14177  0336  1903               	skipnz
 14178  0337  2B39               	goto	i1l5365
 14179  0338  2B20               	goto	i1l4345
 14180  0339                     i1l5365:	
 14181                           
 14182                           ; Switch size 1, requested type "simple"
 14183                           ; Number of cases is 4, Range of values is 1 to 4
 14184                           ; switch strategies available:
 14185                           ; Name         Instructions Cycles
 14186                           ; simple_byte           13     7 (average)
 14187                           ; direct_byte           17     9 (fixed)
 14188                           ; jumptable            263     9 (fixed)
 14189                           ;	Chosen strategy is simple_byte
 14190  0339  087B               	movf	??_do_I2C_TX+1,w
 14191  033A  3A01               	xorlw	1	; case 1
 14192  033B  1903               	skipnz
 14193  033C  2B20               	goto	i1l4345
 14194  033D  3A03               	xorlw	3	; case 2
 14195  033E  1903               	skipnz
 14196  033F  2B18               	goto	i1l4337
 14197  0340  3A01               	xorlw	1	; case 3
 14198  0341  1903               	skipnz
 14199  0342  2B1C               	goto	i1l4341
 14200  0343  3A07               	xorlw	7	; case 4
 14201  0344  1903               	skipnz
 14202  0345  2B20               	goto	i1l4345
 14203  0346  2B20               	goto	i1l4345
 14204  0347                     i1l169:	
 14205                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 14206                           
 14207                           
 14208                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 14209  0347  0021               	movlb	1	; select bank1
 14210  0348  11A0               	bcf	_i2c_status^(0+128),3
 14211  0349                     i1l4353:	
 14212                           
 14213                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 14214  0349  3002               	movlw	2
 14215  034A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14216  034B  0086               	movwf	6
 14217  034C  0187               	clrf	7
 14218  034D  3F40               	moviw [0]fsr1
 14219  034E  0084               	movwf	4
 14220  034F  0185               	clrf	5
 14221  0350  0A81               	incf	1,f
 14222  0351  0800               	movf	0,w
 14223  0352  318F  2727  3183   	fcall	_i2c1_driver_TXData
 14224  0355                     i1l4355:	
 14225                           
 14226                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 14227  0355  3001               	movlw	1
 14228  0356  0021               	movlb	1	; select bank1
 14229  0357  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14230  0358  3000               	movlw	0
 14231  0359  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14232  035A  0823               	movf	(_i2c_status^(0+128)+3),w
 14233  035B  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14234  035C  1D03               	btfss	3,2
 14235  035D  2B5F               	goto	u165_21
 14236  035E  2B60               	goto	u165_20
 14237  035F                     u165_21:	
 14238  035F  2B62               	goto	i1l4359
 14239  0360                     u165_20:	
 14240  0360                     i1l4357:	
 14241  0360  3006               	movlw	6
 14242  0361  2B63               	goto	i1l172
 14243  0362                     i1l4359:	
 14244  0362  3003               	movlw	3
 14245  0363                     i1l172:	
 14246  0363  0008               	return
 14247  0364                     __end_of_do_I2C_TX:	
 14248                           
 14249                           	psect	text43
 14250  04D3                     __ptext43:	
 14251 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14252 ;; Defined at:
 14253 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;		None
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  1    wreg      enum E12722
 14260 ;; Registers used:
 14261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;Total ram usage:        3 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    3
 14274 ;; This function calls:
 14275 ;;		Absolute function
 14276 ;;		_do_I2C_SEND_RESTART
 14277 ;;		_do_I2C_SEND_STOP
 14278 ;;		_i2c_restartWrite
 14279 ;;		_rd1RegCompleteHandler
 14280 ;;		_rd2RegCompleteHandler
 14281 ;;		_rdBlkRegCompleteHandler
 14282 ;;		_returnReset
 14283 ;;		_returnStop
 14284 ;;		_wr1RegCompleteHandler
 14285 ;;		_wr2RegCompleteHandler
 14286 ;; This function is called by:
 14287 ;;		_i2c_ISR
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           
 14292                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14293  04D3                     _do_I2C_DO_ADDRESS_NACK:	
 14294  04D3                     i1l4311:	
 14295                           ;incstack = 0
 14296                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14297                           
 14298                           
 14299                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 14300  04D3  0021               	movlb	1	; select bank1
 14301  04D4  11A0               	bcf	_i2c_status^(0+128),3
 14302  04D5                     i1l4313:	
 14303                           
 14304                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14305  04D5  3002               	movlw	2
 14306  04D6  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14307  04D7  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14308  04D8  00AA               	movwf	(_i2c_status^(0+128)+10)
 14309                           
 14310                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14311  04D9  2CE2               	goto	i1l4325
 14312  04DA                     i1l4315:	
 14313                           
 14314                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14315  04DA  318F  273B  3184   	fcall	_do_I2C_SEND_RESTART
 14316  04DD  2CFE               	goto	i1l164
 14317  04DE                     i1l4319:	
 14318                           
 14319                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14320  04DE  318F  2740  3184   	fcall	_do_I2C_SEND_STOP
 14321  04E1  2CFE               	goto	i1l164
 14322  04E2                     i1l4325:	
 14323  04E2  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14324  04E3  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14325  04E4  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14326  04E5  00F9               	movwf	rdBlkRegCompleteHandler@p
 14327  04E6  300F               	movlw	15
 14328  04E7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14329  04E8  0086               	movwf	6
 14330  04E9  0187               	clrf	7
 14331  04EA  3F41               	moviw [1]fsr1
 14332  04EB  008A               	movwf	10
 14333  04EC  3F40               	moviw [0]fsr1
 14334  04ED  000A               	callw
 14335  04EE  3184               	pagesel	$
 14336  04EF  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14337  04F0  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14338                           
 14339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14340                           ; Switch size 1, requested type "simple"
 14341                           ; Number of cases is 1, Range of values is 0 to 0
 14342                           ; switch strategies available:
 14343                           ; Name         Instructions Cycles
 14344                           ; simple_byte            4     3 (average)
 14345                           ; direct_byte            8     6 (fixed)
 14346                           ; jumptable            260     6 (fixed)
 14347                           ;	Chosen strategy is simple_byte
 14348  04F1  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14349  04F2  3A00               	xorlw	0	; case 0
 14350  04F3  1903               	skipnz
 14351  04F4  2CF6               	goto	i1l5367
 14352  04F5  2CDE               	goto	i1l4319
 14353  04F6                     i1l5367:	
 14354                           
 14355                           ; Switch size 1, requested type "simple"
 14356                           ; Number of cases is 2, Range of values is 2 to 3
 14357                           ; switch strategies available:
 14358                           ; Name         Instructions Cycles
 14359                           ; simple_byte            7     4 (average)
 14360                           ; direct_byte           13     9 (fixed)
 14361                           ; jumptable            263     9 (fixed)
 14362                           ;	Chosen strategy is simple_byte
 14363  04F6  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14364  04F7  3A02               	xorlw	2	; case 2
 14365  04F8  1903               	skipnz
 14366  04F9  2CDA               	goto	i1l4315
 14367  04FA  3A01               	xorlw	1	; case 3
 14368  04FB  1903               	skipnz
 14369  04FC  2CDA               	goto	i1l4315
 14370  04FD  2CDE               	goto	i1l4319
 14371  04FE                     i1l164:	
 14372  04FE  0008               	return
 14373  04FF                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14374                           
 14375                           	psect	text44
 14376  0F4F                     __ptext44:	
 14377 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14378 ;; Defined at:
 14379 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      enum E12722
 14386 ;; Registers used:
 14387 ;;		wreg, status,2, status,0, pclath, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;Total ram usage:        0 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; Hardware stack levels required when called:    1
 14400 ;; This function calls:
 14401 ;;		_i2c1_driver_sendNACK
 14402 ;; This function is called by:
 14403 ;;		_do_I2C_RX
 14404 ;;		_i2c_ISR
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           
 14409                           ;psect for function _do_I2C_DO_NACK_RESTART
 14410  0F4F                     _do_I2C_DO_NACK_RESTART:	
 14411  0F4F                     i1l4047:	
 14412                           ;incstack = 0
 14413                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14414                           
 14415                           
 14416                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14417  0F4F  318F  271F  318F   	fcall	_i2c1_driver_sendNACK
 14418  0F52                     i1l4049:	
 14419                           
 14420                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14421  0F52  3009               	movlw	9
 14422  0F53                     i1l158:	
 14423  0F53  0008               	return
 14424  0F54                     __end_of_do_I2C_DO_NACK_RESTART:	
 14425                           
 14426                           	psect	text45
 14427  0F4A                     __ptext45:	
 14428 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14429 ;; Defined at:
 14430 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;		None
 14433 ;; Auto vars:     Size  Location     Type
 14434 ;;		None
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  1    wreg      enum E12722
 14437 ;; Registers used:
 14438 ;;		wreg, status,2, status,0, pclath, cstack
 14439 ;; Tracked objects:
 14440 ;;		On entry : 0/0
 14441 ;;		On exit  : 0/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;Total ram usage:        0 bytes
 14449 ;; Hardware stack levels used:    1
 14450 ;; Hardware stack levels required when called:    1
 14451 ;; This function calls:
 14452 ;;		_i2c1_driver_sendNACK
 14453 ;; This function is called by:
 14454 ;;		_do_I2C_RX
 14455 ;;		_i2c_ISR
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           
 14460                           ;psect for function _do_I2C_DO_NACK_STOP
 14461  0F4A                     _do_I2C_DO_NACK_STOP:	
 14462  0F4A                     i1l4041:	
 14463                           ;incstack = 0
 14464                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14465                           
 14466                           
 14467                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14468  0F4A  318F  271F  318F   	fcall	_i2c1_driver_sendNACK
 14469  0F4D                     i1l4043:	
 14470                           
 14471                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14472  0F4D  300A               	movlw	10
 14473  0F4E                     i1l155:	
 14474  0F4E  0008               	return
 14475  0F4F                     __end_of_do_I2C_DO_NACK_STOP:	
 14476                           
 14477                           	psect	text46
 14478  0F45                     __ptext46:	
 14479 ;; *************** function _do_I2C_DO_ACK *****************
 14480 ;; Defined at:
 14481 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14482 ;; Parameters:    Size  Location     Type
 14483 ;;		None
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;		None
 14486 ;; Return value:  Size  Location     Type
 14487 ;;                  1    wreg      enum E12722
 14488 ;; Registers used:
 14489 ;;		wreg, status,2, status,0, pclath, cstack
 14490 ;; Tracked objects:
 14491 ;;		On entry : 0/0
 14492 ;;		On exit  : 0/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;Total ram usage:        0 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; Hardware stack levels required when called:    1
 14502 ;; This function calls:
 14503 ;;		_i2c1_driver_sendACK
 14504 ;; This function is called by:
 14505 ;;		_i2c_ISR
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           
 14510                           ;psect for function _do_I2C_DO_ACK
 14511  0F45                     _do_I2C_DO_ACK:	
 14512  0F45                     i1l4305:	
 14513                           ;incstack = 0
 14514                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14515                           
 14516                           
 14517                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14518  0F45  318F  271B  318F   	fcall	_i2c1_driver_sendACK
 14519  0F48                     i1l4307:	
 14520                           
 14521                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14522  0F48  3005               	movlw	5
 14523  0F49                     i1l152:	
 14524  0F49  0008               	return
 14525  0F4A                     __end_of_do_I2C_DO_ACK:	
 14526                           
 14527                           	psect	text47
 14528  0F78                     __ptext47:	
 14529 ;; *************** function _do_I2C_RCEN *****************
 14530 ;; Defined at:
 14531 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;		None
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;		None
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      enum E12722
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0, pclath, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;Total ram usage:        0 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    1
 14552 ;; This function calls:
 14553 ;;		_i2c1_driver_startRX
 14554 ;; This function is called by:
 14555 ;;		_i2c_ISR
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           
 14560                           ;psect for function _do_I2C_RCEN
 14561  0F78                     _do_I2C_RCEN:	
 14562  0F78                     i1l4297:	
 14563                           ;incstack = 0
 14564                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14565                           
 14566                           
 14567                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14568  0F78  0021               	movlb	1	; select bank1
 14569  0F79  11A0               	bcf	_i2c_status^(0+128),3
 14570  0F7A                     i1l4299:	
 14571                           
 14572                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14573  0F7A  318F  2709  318F   	fcall	_i2c1_driver_startRX
 14574  0F7D                     i1l4301:	
 14575                           
 14576                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14577  0F7D  3004               	movlw	4
 14578  0F7E                     i1l149:	
 14579  0F7E  0008               	return
 14580  0F7F                     __end_of_do_I2C_RCEN:	
 14581                           
 14582                           	psect	text48
 14583  0F96                     __ptext48:	
 14584 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14585 ;; Defined at:
 14586 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;		None
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      enum E12722
 14593 ;; Registers used:
 14594 ;;		wreg, status,2, status,0, pclath, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;Total ram usage:        0 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    1
 14607 ;; This function calls:
 14608 ;;		_i2c1_driver_TXData
 14609 ;; This function is called by:
 14610 ;;		_i2c_ISR
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14616  0F96                     _do_I2C_SEND_ADR_WRITE:	
 14617  0F96                     i1l4289:	
 14618                           ;incstack = 0
 14619                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14620                           
 14621                           
 14622                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 14623  0F96  0021               	movlb	1	; select bank1
 14624  0F97  15A0               	bsf	_i2c_status^(0+128),3
 14625  0F98                     i1l4291:	
 14626                           
 14627                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 14628  0F98  3521               	lslf	(_i2c_status^(0+128)+1),w
 14629  0F99  318F  2727  318F   	fcall	_i2c1_driver_TXData
 14630  0F9C                     i1l4293:	
 14631                           
 14632                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 14633  0F9C  3003               	movlw	3
 14634  0F9D                     i1l146:	
 14635  0F9D  0008               	return
 14636  0F9E                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14637                           
 14638                           	psect	text49
 14639  0FAE                     __ptext49:	
 14640 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14641 ;; Defined at:
 14642 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;		None
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;		None
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  1    wreg      enum E12722
 14649 ;; Registers used:
 14650 ;;		wreg, status,2, status,0, pclath, cstack
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;Total ram usage:        0 bytes
 14661 ;; Hardware stack levels used:    1
 14662 ;; Hardware stack levels required when called:    1
 14663 ;; This function calls:
 14664 ;;		_i2c1_driver_TXData
 14665 ;; This function is called by:
 14666 ;;		_i2c_ISR
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           
 14671                           ;psect for function _do_I2C_SEND_ADR_READ
 14672  0FAE                     _do_I2C_SEND_ADR_READ:	
 14673  0FAE                     i1l4281:	
 14674                           ;incstack = 0
 14675                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14676                           
 14677                           
 14678                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 14679  0FAE  0021               	movlb	1	; select bank1
 14680  0FAF  15A0               	bsf	_i2c_status^(0+128),3
 14681  0FB0                     i1l4283:	
 14682                           
 14683                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 14684  0FB0  1403               	setc
 14685  0FB1  0D21               	rlf	(_i2c_status^(0+128)+1),w
 14686  0FB2  318F  2727  318F   	fcall	_i2c1_driver_TXData
 14687  0FB5                     i1l4285:	
 14688                           
 14689                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 14690  0FB5  3005               	movlw	5
 14691  0FB6                     i1l143:	
 14692  0FB6  0008               	return
 14693  0FB7                     __end_of_do_I2C_SEND_ADR_READ:	
 14694                           
 14695                           	psect	text50
 14696  0F40                     __ptext50:	
 14697 ;; *************** function _do_I2C_SEND_STOP *****************
 14698 ;; Defined at:
 14699 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;		None
 14702 ;; Auto vars:     Size  Location     Type
 14703 ;;		None
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  1    wreg      enum E12722
 14706 ;; Registers used:
 14707 ;;		wreg, status,2, status,0, pclath, cstack
 14708 ;; Tracked objects:
 14709 ;;		On entry : 0/0
 14710 ;;		On exit  : 0/0
 14711 ;;		Unchanged: 0/0
 14712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;Total ram usage:        0 bytes
 14718 ;; Hardware stack levels used:    1
 14719 ;; Hardware stack levels required when called:    1
 14720 ;; This function calls:
 14721 ;;		_i2c1_driver_stop
 14722 ;; This function is called by:
 14723 ;;		_do_I2C_DO_ADDRESS_NACK
 14724 ;;		_do_I2C_TX
 14725 ;;		_do_I2C_TX_EMPTY
 14726 ;;		_i2c_ISR
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           
 14731                           ;psect for function _do_I2C_SEND_STOP
 14732  0F40                     _do_I2C_SEND_STOP:	
 14733  0F40                     i1l4029:	
 14734                           ;incstack = 0
 14735                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 14736                           
 14737                           
 14738                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 14739  0F40  318F  2706  318F   	fcall	_i2c1_driver_stop
 14740  0F43                     i1l4031:	
 14741                           
 14742                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 14743  0F43  3000               	movlw	0
 14744  0F44                     i1l140:	
 14745  0F44  0008               	return
 14746  0F45                     __end_of_do_I2C_SEND_STOP:	
 14747                           
 14748                           	psect	text51
 14749  0F3B                     __ptext51:	
 14750 ;; *************** function _do_I2C_SEND_RESTART *****************
 14751 ;; Defined at:
 14752 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;		None
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;		None
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      enum E12722
 14759 ;; Registers used:
 14760 ;;		wreg, status,2, status,0, pclath, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;Total ram usage:        0 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; Hardware stack levels required when called:    1
 14773 ;; This function calls:
 14774 ;;		_i2c1_driver_restart
 14775 ;; This function is called by:
 14776 ;;		_do_I2C_DO_ADDRESS_NACK
 14777 ;;		_do_I2C_TX_EMPTY
 14778 ;;		_i2c_ISR
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           
 14783                           ;psect for function _do_I2C_SEND_RESTART
 14784  0F3B                     _do_I2C_SEND_RESTART:	
 14785  0F3B                     i1l4023:	
 14786                           ;incstack = 0
 14787                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14788                           
 14789                           
 14790                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 14791  0F3B  318F  2703  318F   	fcall	_i2c1_driver_restart
 14792  0F3E                     i1l4025:	
 14793                           
 14794                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 14795  0F3E  3001               	movlw	1
 14796  0F3F                     i1l137:	
 14797  0F3F  0008               	return
 14798  0F40                     __end_of_do_I2C_SEND_RESTART:	
 14799                           
 14800                           	psect	text52
 14801  0F36                     __ptext52:	
 14802 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 14803 ;; Defined at:
 14804 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;		None
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;		None
 14809 ;; Return value:  Size  Location     Type
 14810 ;;                  1    wreg      enum E12722
 14811 ;; Registers used:
 14812 ;;		wreg, status,2, status,0, pclath, cstack
 14813 ;; Tracked objects:
 14814 ;;		On entry : 0/0
 14815 ;;		On exit  : 0/0
 14816 ;;		Unchanged: 0/0
 14817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;Total ram usage:        0 bytes
 14823 ;; Hardware stack levels used:    1
 14824 ;; Hardware stack levels required when called:    1
 14825 ;; This function calls:
 14826 ;;		_i2c1_driver_restart
 14827 ;; This function is called by:
 14828 ;;		_do_I2C_TX
 14829 ;;		_i2c_ISR
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 14835  0F36                     _do_I2C_SEND_RESTART_WRITE:	
 14836  0F36                     i1l4017:	
 14837                           ;incstack = 0
 14838                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14839                           
 14840                           
 14841                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 14842  0F36  318F  2703  318F   	fcall	_i2c1_driver_restart
 14843  0F39                     i1l4019:	
 14844                           
 14845                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 14846  0F39  3002               	movlw	2
 14847  0F3A                     i1l134:	
 14848  0F3A  0008               	return
 14849  0F3B                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 14850                           
 14851                           	psect	text53
 14852  0F31                     __ptext53:	
 14853 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 14854 ;; Defined at:
 14855 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;		None
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      enum E12722
 14862 ;; Registers used:
 14863 ;;		wreg, status,2, status,0, pclath, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;Total ram usage:        0 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:    1
 14876 ;; This function calls:
 14877 ;;		_i2c1_driver_restart
 14878 ;; This function is called by:
 14879 ;;		_do_I2C_TX
 14880 ;;		_i2c_ISR
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           
 14885                           ;psect for function _do_I2C_SEND_RESTART_READ
 14886  0F31                     _do_I2C_SEND_RESTART_READ:	
 14887  0F31                     i1l4011:	
 14888                           ;incstack = 0
 14889                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14890                           
 14891                           
 14892                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 14893  0F31  318F  2703  318F   	fcall	_i2c1_driver_restart
 14894  0F34                     i1l4013:	
 14895                           
 14896                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 14897  0F34  3001               	movlw	1
 14898  0F35                     i1l131:	
 14899  0F35  0008               	return
 14900  0F36                     __end_of_do_I2C_SEND_RESTART_READ:	
 14901                           
 14902                           	psect	text54
 14903  0F2C                     __ptext54:	
 14904 ;; *************** function _do_I2C_IDLE *****************
 14905 ;; Defined at:
 14906 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 14907 ;; Parameters:    Size  Location     Type
 14908 ;;		None
 14909 ;; Auto vars:     Size  Location     Type
 14910 ;;		None
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  1    wreg      enum E12722
 14913 ;; Registers used:
 14914 ;;		wreg, status,2
 14915 ;; Tracked objects:
 14916 ;;		On entry : 0/0
 14917 ;;		On exit  : 0/0
 14918 ;;		Unchanged: 0/0
 14919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;Total ram usage:        0 bytes
 14925 ;; Hardware stack levels used:    1
 14926 ;; This function calls:
 14927 ;;		Nothing
 14928 ;; This function is called by:
 14929 ;;		_i2c_ISR
 14930 ;; This function uses a non-reentrant model
 14931 ;;
 14932                           
 14933                           
 14934                           ;psect for function _do_I2C_IDLE
 14935  0F2C                     _do_I2C_IDLE:	
 14936  0F2C                     i1l4273:	
 14937                           ;incstack = 0
 14938                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 14939                           
 14940                           
 14941                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 14942  0F2C  0021               	movlb	1	; select bank1
 14943  0F2D  1020               	bcf	_i2c_status^(0+128),0
 14944  0F2E                     i1l4275:	
 14945                           
 14946                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 14947  0F2E  01AA               	clrf	(_i2c_status^(0+128)+10)
 14948  0F2F                     i1l4277:	
 14949                           
 14950                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 14951  0F2F  300E               	movlw	14
 14952  0F30                     i1l128:	
 14953  0F30  0008               	return
 14954  0F31                     __end_of_do_I2C_IDLE:	
 14955                           
 14956                           	psect	text55
 14957  0F8E                     __ptext55:	
 14958 ;; *************** function _do_I2C_RESET *****************
 14959 ;; Defined at:
 14960 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;		None
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;		None
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      enum E12722
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, status,0, pclath, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;Total ram usage:        0 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    1
 14981 ;; This function calls:
 14982 ;;		_i2c1_driver_resetBus
 14983 ;; This function is called by:
 14984 ;;		_i2c_ISR
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           
 14989                           ;psect for function _do_I2C_RESET
 14990  0F8E                     _do_I2C_RESET:	
 14991  0F8E                     i1l4263:	
 14992                           ;incstack = 0
 14993                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 14994                           
 14995                           
 14996                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 14997  0F8E  318E  26FB  318F   	fcall	_i2c1_driver_resetBus
 14998  0F91                     i1l4265:	
 14999                           
 15000                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 15001  0F91  0021               	movlb	1	; select bank1
 15002  0F92  1020               	bcf	_i2c_status^(0+128),0
 15003  0F93                     i1l4267:	
 15004                           
 15005                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 15006  0F93  01AA               	clrf	(_i2c_status^(0+128)+10)
 15007  0F94                     i1l4269:	
 15008                           
 15009                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 15010  0F94  300E               	movlw	14
 15011  0F95                     i1l125:	
 15012  0F95  0008               	return
 15013  0F96                     __end_of_do_I2C_RESET:	
 15014                           
 15015                           	psect	text56
 15016  0473                     __ptext56:	
 15017 ;; *************** function _do_I2C_TX_EMPTY *****************
 15018 ;; Defined at:
 15019 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;		None
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;		None
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      enum E12722
 15026 ;; Registers used:
 15027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15028 ;; Tracked objects:
 15029 ;;		On entry : 0/0
 15030 ;;		On exit  : 0/0
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;Total ram usage:        3 bytes
 15038 ;; Hardware stack levels used:    1
 15039 ;; Hardware stack levels required when called:    3
 15040 ;; This function calls:
 15041 ;;		Absolute function
 15042 ;;		_do_I2C_SEND_RESTART
 15043 ;;		_do_I2C_SEND_STOP
 15044 ;;		_i2c_restartWrite
 15045 ;;		_mssp1_setIRQ
 15046 ;;		_rd1RegCompleteHandler
 15047 ;;		_rd2RegCompleteHandler
 15048 ;;		_rdBlkRegCompleteHandler
 15049 ;;		_returnReset
 15050 ;;		_returnStop
 15051 ;;		_wr1RegCompleteHandler
 15052 ;;		_wr2RegCompleteHandler
 15053 ;; This function is called by:
 15054 ;;		_i2c_ISR
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           
 15059                           ;psect for function _do_I2C_TX_EMPTY
 15060  0473                     _do_I2C_TX_EMPTY:	
 15061  0473                     i1l4399:	
 15062                           ;incstack = 0
 15063                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15064                           
 15065                           
 15066                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 15067  0473  0021               	movlb	1	; select bank1
 15068  0474  1520               	bsf	_i2c_status^(0+128),2
 15069                           
 15070                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15071  0475  2C83               	goto	i1l4417
 15072  0476                     i1l4401:	
 15073                           
 15074                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 15075  0476  318F  273B  3184   	fcall	_do_I2C_SEND_RESTART
 15076  0479  2CA5               	goto	i1l200
 15077  047A                     i1l4405:	
 15078                           
 15079                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 15080  047A  318F  270F  3184   	fcall	_mssp1_setIRQ
 15081  047D                     i1l4407:	
 15082                           
 15083                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 15084  047D  3003               	movlw	3
 15085  047E  2CA5               	goto	i1l200
 15086  047F                     i1l4411:	
 15087                           
 15088                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 15089  047F  318F  2740  3184   	fcall	_do_I2C_SEND_STOP
 15090  0482  2CA5               	goto	i1l200
 15091  0483                     i1l4417:	
 15092  0483  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15093  0484  00FA               	movwf	??_do_I2C_TX_EMPTY
 15094  0485  087A               	movf	??_do_I2C_TX_EMPTY,w
 15095  0486  00F9               	movwf	rdBlkRegCompleteHandler@p
 15096  0487  300B               	movlw	11
 15097  0488  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15098  0489  0086               	movwf	6
 15099  048A  0187               	clrf	7
 15100  048B  3F41               	moviw [1]fsr1
 15101  048C  008A               	movwf	10
 15102  048D  3F40               	moviw [0]fsr1
 15103  048E  000A               	callw
 15104  048F  3184               	pagesel	$
 15105  0490  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 15106  0491  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 15107                           
 15108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15109                           ; Switch size 1, requested type "simple"
 15110                           ; Number of cases is 1, Range of values is 0 to 0
 15111                           ; switch strategies available:
 15112                           ; Name         Instructions Cycles
 15113                           ; simple_byte            4     3 (average)
 15114                           ; direct_byte            8     6 (fixed)
 15115                           ; jumptable            260     6 (fixed)
 15116                           ;	Chosen strategy is simple_byte
 15117  0492  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 15118  0493  3A00               	xorlw	0	; case 0
 15119  0494  1903               	skipnz
 15120  0495  2C97               	goto	i1l5369
 15121  0496  2C7F               	goto	i1l4411
 15122  0497                     i1l5369:	
 15123                           
 15124                           ; Switch size 1, requested type "simple"
 15125                           ; Number of cases is 4, Range of values is 1 to 4
 15126                           ; switch strategies available:
 15127                           ; Name         Instructions Cycles
 15128                           ; simple_byte           13     7 (average)
 15129                           ; direct_byte           17     9 (fixed)
 15130                           ; jumptable            263     9 (fixed)
 15131                           ;	Chosen strategy is simple_byte
 15132  0497  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 15133  0498  3A01               	xorlw	1	; case 1
 15134  0499  1903               	skipnz
 15135  049A  2C7F               	goto	i1l4411
 15136  049B  3A03               	xorlw	3	; case 2
 15137  049C  1903               	skipnz
 15138  049D  2C76               	goto	i1l4401
 15139  049E  3A01               	xorlw	1	; case 3
 15140  049F  1903               	skipnz
 15141  04A0  2C76               	goto	i1l4401
 15142  04A1  3A07               	xorlw	7	; case 4
 15143  04A2  1903               	skipnz
 15144  04A3  2C7A               	goto	i1l4405
 15145  04A4  2C7F               	goto	i1l4411
 15146  04A5                     i1l200:	
 15147  04A5  0008               	return
 15148  04A6                     __end_of_do_I2C_TX_EMPTY:	
 15149                           
 15150                           	psect	text57
 15151  0F0F                     __ptext57:	
 15152 ;; *************** function _mssp1_setIRQ *****************
 15153 ;; Defined at:
 15154 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 15155 ;; Parameters:    Size  Location     Type
 15156 ;;		None
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;		None
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      void 
 15161 ;; Registers used:
 15162 ;;		None
 15163 ;; Tracked objects:
 15164 ;;		On entry : 0/0
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;Total ram usage:        0 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; This function calls:
 15175 ;;		Nothing
 15176 ;; This function is called by:
 15177 ;;		_do_I2C_TX_EMPTY
 15178 ;; This function uses a non-reentrant model
 15179 ;;
 15180                           
 15181                           
 15182                           ;psect for function _mssp1_setIRQ
 15183  0F0F                     _mssp1_setIRQ:	
 15184  0F0F                     i1l4061:	
 15185                           ;incstack = 0
 15186                           ; Regs used in _mssp1_setIRQ: []
 15187                           
 15188                           
 15189                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 15190  0F0F  002E               	movlb	14	; select bank14
 15191  0F10  140F               	bsf	15,0	;volatile
 15192  0F11                     i1l579:	
 15193  0F11  0008               	return
 15194  0F12                     __end_of_mssp1_setIRQ:	
 15195                           
 15196                           	psect	text58
 15197  0F86                     __ptext58:	
 15198 ;; *************** function _i2c1_driver_isNACK *****************
 15199 ;; Defined at:
 15200 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;		None
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;		None
 15205 ;; Return value:  Size  Location     Type
 15206 ;;		None               void
 15207 ;; Registers used:
 15208 ;;		wreg, status,2, status,0
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;Total ram usage:        1 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_do_I2C_TX
 15224 ;;		_i2c_ISR
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           
 15229                           ;psect for function _i2c1_driver_isNACK
 15230  0F86                     _i2c1_driver_isNACK:	
 15231  0F86                     i1l4053:	
 15232                           ;incstack = 0
 15233                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15234                           
 15235                           
 15236                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 15237  0F86  0023               	movlb	3	; select bank3
 15238  0F87  0E11               	swapf	17,w	;volatile
 15239  0F88  0C89               	rrf	9,f
 15240  0F89  0C89               	rrf	9,f
 15241  0F8A  3901               	andlw	1
 15242  0F8B  00F0               	movwf	??_i2c1_driver_isNACK
 15243  0F8C  0C70               	rrf	??_i2c1_driver_isNACK,w
 15244  0F8D                     i1l614:	
 15245  0F8D  0008               	return
 15246  0F8E                     __end_of_i2c1_driver_isNACK:	
 15247                           
 15248                           	psect	text59
 15249  0F27                     __ptext59:	
 15250 ;; *************** function _i2c1_driver_TXData *****************
 15251 ;; Defined at:
 15252 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;  d               1    wreg     unsigned char 
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;  d               1    0[COMMON] unsigned char 
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      void 
 15259 ;; Registers used:
 15260 ;;		wreg
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;Total ram usage:        1 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; This function calls:
 15273 ;;		Nothing
 15274 ;; This function is called by:
 15275 ;;		_do_I2C_SEND_ADR_READ
 15276 ;;		_do_I2C_SEND_ADR_WRITE
 15277 ;;		_do_I2C_TX
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           
 15282                           ;psect for function _i2c1_driver_TXData
 15283  0F27                     _i2c1_driver_TXData:	
 15284                           
 15285                           ;incstack = 0
 15286                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15287                           ;i2c1_driver_TXData@d stored from wreg
 15288  0F27  00F0               	movwf	i2c1_driver_TXData@d
 15289  0F28                     i1l4035:	
 15290                           
 15291                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 15292  0F28  0870               	movf	i2c1_driver_TXData@d,w
 15293  0F29  0023               	movlb	3	; select bank3
 15294  0F2A  008C               	movwf	12	;volatile
 15295  0F2B                     i1l629:	
 15296  0F2B  0008               	return
 15297  0F2C                     __end_of_i2c1_driver_TXData:	
 15298                           
 15299                           	psect	text60
 15300  0F0C                     __ptext60:	
 15301 ;; *************** function _i2c1_driver_getRXData *****************
 15302 ;; Defined at:
 15303 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      unsigned char 
 15310 ;; Registers used:
 15311 ;;		wreg
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;Total ram usage:        0 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; This function calls:
 15324 ;;		Nothing
 15325 ;; This function is called by:
 15326 ;;		_do_I2C_RX
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           
 15331                           ;psect for function _i2c1_driver_getRXData
 15332  0F0C                     _i2c1_driver_getRXData:	
 15333  0F0C                     i1l4057:	
 15334                           ;incstack = 0
 15335                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15336                           
 15337                           
 15338                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 15339  0F0C  0023               	movlb	3	; select bank3
 15340  0F0D  080C               	movf	12,w	;volatile
 15341  0F0E                     i1l620:	
 15342  0F0E  0008               	return
 15343  0F0F                     __end_of_i2c1_driver_getRXData:	
 15344                           
 15345                           	psect	text61
 15346  0F1F                     __ptext61:	
 15347 ;; *************** function _i2c1_driver_sendNACK *****************
 15348 ;; Defined at:
 15349 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 15350 ;; Parameters:    Size  Location     Type
 15351 ;;		None
 15352 ;; Auto vars:     Size  Location     Type
 15353 ;;		None
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  1    wreg      void 
 15356 ;; Registers used:
 15357 ;;		None
 15358 ;; Tracked objects:
 15359 ;;		On entry : 0/0
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;Total ram usage:        0 bytes
 15368 ;; Hardware stack levels used:    1
 15369 ;; This function calls:
 15370 ;;		Nothing
 15371 ;; This function is called by:
 15372 ;;		_do_I2C_DO_NACK_STOP
 15373 ;;		_do_I2C_DO_NACK_RESTART
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           
 15378                           ;psect for function _i2c1_driver_sendNACK
 15379  0F1F                     _i2c1_driver_sendNACK:	
 15380  0F1F                     i1l3955:	
 15381                           ;incstack = 0
 15382                           ; Regs used in _i2c1_driver_sendNACK: []
 15383                           
 15384                           
 15385                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 15386  0F1F  0023               	movlb	3	; select bank3
 15387  0F20  1691               	bsf	17,5	;volatile
 15388                           
 15389                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 15390  0F21  1611               	bsf	17,4	;volatile
 15391  0F22                     i1l638:	
 15392  0F22  0008               	return
 15393  0F23                     __end_of_i2c1_driver_sendNACK:	
 15394                           
 15395                           	psect	text62
 15396  0EFB                     __ptext62:	
 15397 ;; *************** function _i2c1_driver_resetBus *****************
 15398 ;; Defined at:
 15399 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;		None
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;		None
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1    wreg      void 
 15406 ;; Registers used:
 15407 ;;		None
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15417 ;;Total ram usage:        0 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; This function calls:
 15420 ;;		Nothing
 15421 ;; This function is called by:
 15422 ;;		_do_I2C_RESET
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           
 15427                           ;psect for function _i2c1_driver_resetBus
 15428  0EFB                     _i2c1_driver_resetBus:	
 15429  0EFB                     i1l602:	
 15430                           ;incstack = 0
 15431                           ; Regs used in _i2c1_driver_resetBus: []
 15432                           
 15433  0EFB  0008               	return
 15434  0EFC                     __end_of_i2c1_driver_resetBus:	
 15435                           
 15436                           	psect	text63
 15437  0F09                     __ptext63:	
 15438 ;; *************** function _i2c1_driver_startRX *****************
 15439 ;; Defined at:
 15440 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;		None
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		None
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15458 ;;Total ram usage:        0 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; This function calls:
 15461 ;;		Nothing
 15462 ;; This function is called by:
 15463 ;;		_do_I2C_RCEN
 15464 ;; This function uses a non-reentrant model
 15465 ;;
 15466                           
 15467                           
 15468                           ;psect for function _i2c1_driver_startRX
 15469  0F09                     _i2c1_driver_startRX:	
 15470  0F09                     i1l4037:	
 15471                           ;incstack = 0
 15472                           ; Regs used in _i2c1_driver_startRX: []
 15473                           
 15474                           
 15475                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 15476  0F09  0023               	movlb	3	; select bank3
 15477  0F0A  1591               	bsf	17,3	;volatile
 15478  0F0B                     i1l617:	
 15479  0F0B  0008               	return
 15480  0F0C                     __end_of_i2c1_driver_startRX:	
 15481                           
 15482                           	psect	text64
 15483  06B6                     __ptext64:	
 15484 ;; *************** function _rdBlkRegCompleteHandler *****************
 15485 ;; Defined at:
 15486 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  p               1    9[COMMON] PTR void 
 15489 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15490 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1    wreg      enum E358
 15495 ;; Registers used:
 15496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;Total ram usage:        1 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    2
 15509 ;; This function calls:
 15510 ;;		_i2c_setBuffer
 15511 ;;		_i2c_setDataCompleteCallback
 15512 ;; This function is called by:
 15513 ;;		_i2c_readDataBlock
 15514 ;;		_do_I2C_DO_ADDRESS_NACK
 15515 ;;		_do_I2C_TX
 15516 ;;		_do_I2C_RX
 15517 ;;		_do_I2C_TX_EMPTY
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           
 15522                           ;psect for function _rdBlkRegCompleteHandler
 15523  06B6                     _rdBlkRegCompleteHandler:	
 15524  06B6                     i1l4103:	
 15525                           ;incstack = 0
 15526                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15527                           
 15528                           
 15529                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 15530  06B6  0879               	movf	rdBlkRegCompleteHandler@p,w
 15531  06B7  0086               	movwf	6
 15532  06B8  0187               	clrf	7
 15533  06B9  3F40               	moviw [0]fsr1
 15534  06BA  00F0               	movwf	i2c_setBuffer@bufferSize
 15535  06BB  3F41               	moviw [1]fsr1
 15536  06BC  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15537  06BD  0879               	movf	rdBlkRegCompleteHandler@p,w
 15538  06BE  3E02               	addlw	2
 15539  06BF  0086               	movwf	6
 15540  06C0  0187               	clrf	7
 15541  06C1  0801               	movf	1,w
 15542  06C2  3187  278B  3186   	fcall	_i2c_setBuffer
 15543                           
 15544                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15545  06C5  3000               	movlw	0
 15546  06C6  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15547  06C7  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15548  06C8  01F7               	clrf	i2c_setDataCompleteCallback@p
 15549  06C9  3187  27E3  3186   	fcall	_i2c_setDataCompleteCallback
 15550  06CC                     i1l4105:	
 15551                           
 15552                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 15553  06CC  3002               	movlw	2
 15554  06CD                     i1l303:	
 15555  06CD  0008               	return
 15556  06CE                     __end_of_rdBlkRegCompleteHandler:	
 15557                           
 15558                           	psect	text65
 15559  0726                     __ptext65:	
 15560 ;; *************** function _rd2RegCompleteHandler *****************
 15561 ;; Defined at:
 15562 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15563 ;; Parameters:    Size  Location     Type
 15564 ;;  p               1    9[COMMON] PTR void 
 15565 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15566 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;		None
 15569 ;; Return value:  Size  Location     Type
 15570 ;;                  1    wreg      enum E358
 15571 ;; Registers used:
 15572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15573 ;; Tracked objects:
 15574 ;;		On entry : 0/0
 15575 ;;		On exit  : 0/0
 15576 ;;		Unchanged: 0/0
 15577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15578 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;Total ram usage:        1 bytes
 15583 ;; Hardware stack levels used:    1
 15584 ;; Hardware stack levels required when called:    2
 15585 ;; This function calls:
 15586 ;;		_i2c_setBuffer
 15587 ;;		_i2c_setDataCompleteCallback
 15588 ;; This function is called by:
 15589 ;;		_i2c_read2ByteRegister
 15590 ;;		_do_I2C_DO_ADDRESS_NACK
 15591 ;;		_do_I2C_TX
 15592 ;;		_do_I2C_RX
 15593 ;;		_do_I2C_TX_EMPTY
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           
 15598                           ;psect for function _rd2RegCompleteHandler
 15599  0726                     _rd2RegCompleteHandler:	
 15600  0726                     i1l4087:	
 15601                           ;incstack = 0
 15602                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15603                           
 15604                           
 15605                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 15606  0726  3002               	movlw	2
 15607  0727  00F0               	movwf	i2c_setBuffer@bufferSize
 15608  0728  3000               	movlw	0
 15609  0729  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15610  072A  0879               	movf	rd2RegCompleteHandler@p,w
 15611  072B  3187  278B  3187   	fcall	_i2c_setBuffer
 15612  072E                     i1l4089:	
 15613                           
 15614                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15615  072E  3000               	movlw	0
 15616  072F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15617  0730  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15618  0731  01F7               	clrf	i2c_setDataCompleteCallback@p
 15619  0732  3187  27E3  3187   	fcall	_i2c_setDataCompleteCallback
 15620  0735                     i1l4091:	
 15621                           
 15622                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 15623  0735  3002               	movlw	2
 15624  0736                     i1l279:	
 15625  0736  0008               	return
 15626  0737                     __end_of_rd2RegCompleteHandler:	
 15627                           
 15628                           	psect	text66
 15629  0737                     __ptext66:	
 15630 ;; *************** function _rd1RegCompleteHandler *****************
 15631 ;; Defined at:
 15632 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;  p               1    9[COMMON] PTR void 
 15635 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15636 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      enum E358
 15641 ;; Registers used:
 15642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15648 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;Total ram usage:        1 bytes
 15653 ;; Hardware stack levels used:    1
 15654 ;; Hardware stack levels required when called:    2
 15655 ;; This function calls:
 15656 ;;		_i2c_setBuffer
 15657 ;;		_i2c_setDataCompleteCallback
 15658 ;; This function is called by:
 15659 ;;		_i2c_read1ByteRegister
 15660 ;;		_do_I2C_DO_ADDRESS_NACK
 15661 ;;		_do_I2C_TX
 15662 ;;		_do_I2C_RX
 15663 ;;		_do_I2C_TX_EMPTY
 15664 ;; This function uses a non-reentrant model
 15665 ;;
 15666                           
 15667                           
 15668                           ;psect for function _rd1RegCompleteHandler
 15669  0737                     _rd1RegCompleteHandler:	
 15670  0737                     i1l4079:	
 15671                           ;incstack = 0
 15672                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15673                           
 15674                           
 15675                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 15676  0737  3001               	movlw	1
 15677  0738  00F0               	movwf	i2c_setBuffer@bufferSize
 15678  0739  3000               	movlw	0
 15679  073A  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15680  073B  0879               	movf	rd1RegCompleteHandler@p,w
 15681  073C  3187  278B  3187   	fcall	_i2c_setBuffer
 15682  073F                     i1l4081:	
 15683                           
 15684                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15685  073F  3000               	movlw	0
 15686  0740  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15687  0741  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15688  0742  01F7               	clrf	i2c_setDataCompleteCallback@p
 15689  0743  3187  27E3  3187   	fcall	_i2c_setDataCompleteCallback
 15690  0746                     i1l4083:	
 15691                           
 15692                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 15693  0746  3002               	movlw	2
 15694  0747                     i1l264:	
 15695  0747  0008               	return
 15696  0748                     __end_of_rd1RegCompleteHandler:	
 15697                           
 15698                           	psect	text67
 15699  0748                     __ptext67:	
 15700 ;; *************** function _wr1RegCompleteHandler *****************
 15701 ;; Defined at:
 15702 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15703 ;; Parameters:    Size  Location     Type
 15704 ;;  p               1    9[COMMON] PTR void 
 15705 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15706 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      enum E358
 15711 ;; Registers used:
 15712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;Total ram usage:        1 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; Hardware stack levels required when called:    2
 15725 ;; This function calls:
 15726 ;;		_i2c_setBuffer
 15727 ;;		_i2c_setDataCompleteCallback
 15728 ;; This function is called by:
 15729 ;;		_i2c_write1ByteRegister
 15730 ;;		_do_I2C_DO_ADDRESS_NACK
 15731 ;;		_do_I2C_TX
 15732 ;;		_do_I2C_RX
 15733 ;;		_do_I2C_TX_EMPTY
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           
 15738                           ;psect for function _wr1RegCompleteHandler
 15739  0748                     _wr1RegCompleteHandler:	
 15740  0748                     i1l4071:	
 15741                           ;incstack = 0
 15742                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15743                           
 15744                           
 15745                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 15746  0748  3001               	movlw	1
 15747  0749  00F0               	movwf	i2c_setBuffer@bufferSize
 15748  074A  3000               	movlw	0
 15749  074B  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15750  074C  0879               	movf	wr1RegCompleteHandler@p,w
 15751  074D  3187  278B  3187   	fcall	_i2c_setBuffer
 15752  0750                     i1l4073:	
 15753                           
 15754                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15755  0750  3000               	movlw	0
 15756  0751  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15757  0752  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15758  0753  01F7               	clrf	i2c_setDataCompleteCallback@p
 15759  0754  3187  27E3  3187   	fcall	_i2c_setDataCompleteCallback
 15760  0757                     i1l4075:	
 15761                           
 15762                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 15763  0757  3004               	movlw	4
 15764  0758                     i1l243:	
 15765  0758  0008               	return
 15766  0759                     __end_of_wr1RegCompleteHandler:	
 15767                           
 15768                           	psect	text68
 15769  0002                     __ptext68:	
 15770 ;; *************** function _returnReset *****************
 15771 ;; Defined at:
 15772 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  p               1    9[COMMON] PTR void 
 15775 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15776 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15777 ;; Auto vars:     Size  Location     Type
 15778 ;;		None
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      enum E12568
 15781 ;; Registers used:
 15782 ;;		wreg
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15788 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;Total ram usage:        1 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; This function calls:
 15795 ;;		Nothing
 15796 ;; This function is called by:
 15797 ;;		_i2c_open
 15798 ;;		_do_I2C_DO_ADDRESS_NACK
 15799 ;;		_do_I2C_TX
 15800 ;;		_do_I2C_RX
 15801 ;;		_do_I2C_TX_EMPTY
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           
 15806                           ;psect for function _returnReset
 15807  0002                     _returnReset:	
 15808  0002                     i1l4067:	
 15809                           ;incstack = 0
 15810                           ; Regs used in _returnReset: [wreg]
 15811                           
 15812                           
 15813                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 15814  0002  3005               	movlw	5
 15815  0003                     i1l219:	
 15816  0003  0008               	return
 15817  0004                     __end_of_returnReset:	
 15818                           
 15819                           	psect	text69
 15820  0EFE                     __ptext69:	
 15821 ;; *************** function _returnStop *****************
 15822 ;; Defined at:
 15823 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  p               1    9[COMMON] PTR void 
 15826 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15827 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      enum E12568
 15832 ;; Registers used:
 15833 ;;		wreg
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15839 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;Total ram usage:        1 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_setCallBack
 15849 ;;		_i2c_open
 15850 ;;		_do_I2C_DO_ADDRESS_NACK
 15851 ;;		_do_I2C_TX
 15852 ;;		_do_I2C_RX
 15853 ;;		_do_I2C_TX_EMPTY
 15854 ;; This function uses a non-reentrant model
 15855 ;;
 15856                           
 15857                           
 15858                           ;psect for function _returnStop
 15859  0EFE                     _returnStop:	
 15860  0EFE                     i1l4063:	
 15861                           ;incstack = 0
 15862                           ; Regs used in _returnStop: [wreg]
 15863                           
 15864                           
 15865                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 15866  0EFE  3001               	movlw	1
 15867  0EFF                     i1l216:	
 15868  0EFF  0008               	return
 15869  0F00                     __end_of_returnStop:	
 15870                           
 15871                           	psect	text70
 15872  0EFC                     __ptext70:	
 15873 ;; *************** function _i2c_restartWrite *****************
 15874 ;; Defined at:
 15875 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;  p               1    9[COMMON] PTR void 
 15878 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15879 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;		None
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      enum E358
 15884 ;; Registers used:
 15885 ;;		wreg
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;Total ram usage:        1 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		_i2c_write1ByteRegister
 15901 ;;		_i2c_writeNBytes
 15902 ;;		_i2c_read1ByteRegister
 15903 ;;		_i2c_read2ByteRegister
 15904 ;;		_i2c_write2ByteRegister
 15905 ;;		_i2c_readDataBlock
 15906 ;;		_do_I2C_DO_ADDRESS_NACK
 15907 ;;		_do_I2C_TX
 15908 ;;		_do_I2C_RX
 15909 ;;		_do_I2C_TX_EMPTY
 15910 ;; This function uses a non-reentrant model
 15911 ;;
 15912                           
 15913                           
 15914                           ;psect for function _i2c_restartWrite
 15915  0EFC                     _i2c_restartWrite:	
 15916  0EFC                     i1l3999:	
 15917                           ;incstack = 0
 15918                           ; Regs used in _i2c_restartWrite: [wreg]
 15919                           
 15920                           
 15921                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 15922  0EFC  3003               	movlw	3
 15923  0EFD                     i1l9:	
 15924  0EFD  0008               	return
 15925  0EFE                     __end_of_i2c_restartWrite:	
 15926                           
 15927                           	psect	text71
 15928  0759                     __ptext71:	
 15929 ;; *************** function _wr2RegCompleteHandler *****************
 15930 ;; Defined at:
 15931 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  p               1    9[COMMON] PTR void 
 15934 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15935 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15936 ;; Auto vars:     Size  Location     Type
 15937 ;;		None
 15938 ;; Return value:  Size  Location     Type
 15939 ;;                  1    wreg      enum E358
 15940 ;; Registers used:
 15941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15942 ;; Tracked objects:
 15943 ;;		On entry : 0/0
 15944 ;;		On exit  : 0/0
 15945 ;;		Unchanged: 0/0
 15946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15947 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;Total ram usage:        1 bytes
 15952 ;; Hardware stack levels used:    1
 15953 ;; Hardware stack levels required when called:    2
 15954 ;; This function calls:
 15955 ;;		_i2c_setBuffer
 15956 ;;		_i2c_setDataCompleteCallback
 15957 ;; This function is called by:
 15958 ;;		_i2c_write2ByteRegister
 15959 ;;		_do_I2C_DO_ADDRESS_NACK
 15960 ;;		_do_I2C_TX
 15961 ;;		_do_I2C_RX
 15962 ;;		_do_I2C_TX_EMPTY
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           
 15967                           ;psect for function _wr2RegCompleteHandler
 15968  0759                     _wr2RegCompleteHandler:	
 15969  0759                     i1l4095:	
 15970                           ;incstack = 0
 15971                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15972                           
 15973                           
 15974                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 15975  0759  3002               	movlw	2
 15976  075A  00F0               	movwf	i2c_setBuffer@bufferSize
 15977  075B  3000               	movlw	0
 15978  075C  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15979  075D  0879               	movf	wr2RegCompleteHandler@p,w
 15980  075E  3187  278B  3187   	fcall	_i2c_setBuffer
 15981  0761                     i1l4097:	
 15982                           
 15983                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15984  0761  3000               	movlw	0
 15985  0762  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15986  0763  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15987  0764  01F7               	clrf	i2c_setDataCompleteCallback@p
 15988  0765  3187  27E3  3187   	fcall	_i2c_setDataCompleteCallback
 15989  0768                     i1l4099:	
 15990                           
 15991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 15992  0768  3004               	movlw	4
 15993  0769                     i1l291:	
 15994  0769  0008               	return
 15995  076A                     __end_of_wr2RegCompleteHandler:	
 15996                           
 15997                           	psect	text72
 15998  07E3                     __ptext72:	
 15999 ;; *************** function _i2c_setDataCompleteCallback *****************
 16000 ;; Defined at:
 16001 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16002 ;; Parameters:    Size  Location     Type
 16003 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 16004 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16005 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16006 ;;  p               1    7[COMMON] PTR void 
 16007 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16008 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;		None
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      void 
 16013 ;; Registers used:
 16014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;Total ram usage:        4 bytes
 16025 ;; Hardware stack levels used:    1
 16026 ;; Hardware stack levels required when called:    1
 16027 ;; This function calls:
 16028 ;;		_setCallBack
 16029 ;; This function is called by:
 16030 ;;		_wr1RegCompleteHandler
 16031 ;;		_rd1RegCompleteHandler
 16032 ;;		_rd2RegCompleteHandler
 16033 ;;		_wr2RegCompleteHandler
 16034 ;;		_rdBlkRegCompleteHandler
 16035 ;;		_i2c_write1ByteRegister
 16036 ;;		_i2c_read1ByteRegister
 16037 ;;		_i2c_read2ByteRegister
 16038 ;;		_i2c_write2ByteRegister
 16039 ;;		_i2c_readDataBlock
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           
 16044                           ;psect for function _i2c_setDataCompleteCallback
 16045  07E3                     _i2c_setDataCompleteCallback:	
 16046  07E3                     i1l3943:	
 16047                           ;incstack = 0
 16048                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16049                           
 16050                           
 16051                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 16052  07E3  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 16053  07E4  00F1               	movwf	setCallBack@cb+1
 16054  07E5  0875               	movf	i2c_setDataCompleteCallback@cb,w
 16055  07E6  00F0               	movwf	setCallBack@cb
 16056  07E7  0877               	movf	i2c_setDataCompleteCallback@p,w
 16057  07E8  00F8               	movwf	??_i2c_setDataCompleteCallback
 16058  07E9  0878               	movf	??_i2c_setDataCompleteCallback,w
 16059  07EA  00F2               	movwf	setCallBack@p
 16060  07EB  3000               	movlw	0
 16061  07EC  3185  2557  3187   	fcall	_setCallBack
 16062  07EF                     i1l73:	
 16063  07EF  0008               	return
 16064  07F0                     __end_of_i2c_setDataCompleteCallback:	
 16065                           
 16066                           	psect	text73
 16067  0557                     __ptext73:	
 16068 ;; *************** function _setCallBack *****************
 16069 ;; Defined at:
 16070 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  idx             1    wreg     enum E12740
 16073 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 16074 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16075 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 16076 ;;  p               1    2[COMMON] PTR void 
 16077 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16078 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16079 ;; Auto vars:     Size  Location     Type
 16080 ;;  idx             1    4[COMMON] enum E12740
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  1    wreg      void 
 16083 ;; Registers used:
 16084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16090 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;Total ram usage:        5 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; This function calls:
 16097 ;;		Nothing
 16098 ;; This function is called by:
 16099 ;;		_i2c_setDataCompleteCallback
 16100 ;;		_i2c_setWriteCollisionCallback
 16101 ;;		_i2c_setAddressNACKCallback
 16102 ;;		_i2c_setDataNACKCallback
 16103 ;;		_i2c_setTimeOutCallback
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           
 16108                           ;psect for function _setCallBack
 16109  0557                     _setCallBack:	
 16110                           
 16111                           ;incstack = 0
 16112                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16113                           ;setCallBack@idx stored from wreg
 16114  0557  00F4               	movwf	setCallBack@idx
 16115  0558                     i1l3937:	
 16116                           
 16117                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 16118  0558  0870               	movf	setCallBack@cb,w
 16119  0559  0471               	iorwf	setCallBack@cb+1,w
 16120  055A  1903               	btfsc	3,2
 16121  055B  2D5D               	goto	u142_21
 16122  055C  2D5E               	goto	u142_20
 16123  055D                     u142_21:	
 16124  055D  2D6F               	goto	i1l3941
 16125  055E                     u142_20:	
 16126  055E                     i1l3939:	
 16127                           
 16128                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 16129  055E  3574               	lslf	setCallBack@idx,w
 16130  055F  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16131  0560  0086               	movwf	6
 16132  0561  0187               	clrf	7
 16133  0562  0870               	movf	setCallBack@cb,w
 16134  0563  3FC0               	movwi [0]fsr1
 16135  0564  0871               	movf	setCallBack@cb+1,w
 16136  0565  3FC1               	movwi [1]fsr1
 16137                           
 16138                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 16139  0566  0872               	movf	setCallBack@p,w
 16140  0567  00F3               	movwf	??_setCallBack
 16141  0568  0874               	movf	setCallBack@idx,w
 16142  0569  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16143  056A  0086               	movwf	6
 16144  056B  0187               	clrf	7
 16145  056C  0873               	movf	??_setCallBack,w
 16146  056D  0081               	movwf	1
 16147                           
 16148                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 16149  056E  2D7C               	goto	i1l224
 16150  056F                     i1l3941:	
 16151                           
 16152                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 16153  056F  3574               	lslf	setCallBack@idx,w
 16154  0570  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16155  0571  0086               	movwf	6
 16156  0572  0187               	clrf	7
 16157  0573  30FE               	movlw	low _returnStop
 16158  0574  3FC0               	movwi [0]fsr1
 16159  0575  300E               	movlw	high _returnStop
 16160  0576  3FC1               	movwi [1]fsr1
 16161                           
 16162                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 16163  0577  0874               	movf	setCallBack@idx,w
 16164  0578  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16165  0579  0086               	movwf	6
 16166  057A  0187               	clrf	7
 16167  057B  0181               	clrf	1
 16168  057C                     i1l224:	
 16169  057C  0008               	return
 16170  057D                     __end_of_setCallBack:	
 16171                           
 16172                           	psect	text74
 16173  078B                     __ptext74:	
 16174 ;; *************** function _i2c_setBuffer *****************
 16175 ;; Defined at:
 16176 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;  buffer          1    wreg     PTR void 
 16179 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16180 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16181 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16182 ;;  bufferSize      2    0[COMMON] unsigned int 
 16183 ;; Auto vars:     Size  Location     Type
 16184 ;;  buffer          1    3[COMMON] PTR void 
 16185 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16186 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16187 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;                  1    wreg      void 
 16190 ;; Registers used:
 16191 ;;		wreg
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16201 ;;Total ram usage:        4 bytes
 16202 ;; Hardware stack levels used:    1
 16203 ;; This function calls:
 16204 ;;		Nothing
 16205 ;; This function is called by:
 16206 ;;		_wr1RegCompleteHandler
 16207 ;;		_rd1RegCompleteHandler
 16208 ;;		_rd2RegCompleteHandler
 16209 ;;		_wr2RegCompleteHandler
 16210 ;;		_rdBlkRegCompleteHandler
 16211 ;;		_i2c_write1ByteRegister
 16212 ;;		_i2c_writeNBytes
 16213 ;;		_i2c_read1ByteRegister
 16214 ;;		_i2c_read2ByteRegister
 16215 ;;		_i2c_write2ByteRegister
 16216 ;;		_i2c_readDataBlock
 16217 ;;		_i2c_readNBytes
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           
 16222                           ;psect for function _i2c_setBuffer
 16223  078B                     _i2c_setBuffer:	
 16224                           
 16225                           ;incstack = 0
 16226                           ; Regs used in _i2c_setBuffer: [wreg]
 16227                           ;i2c_setBuffer@buffer stored from wreg
 16228  078B  00F3               	movwf	i2c_setBuffer@buffer
 16229  078C                     i1l3945:	
 16230                           
 16231                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 16232  078C  0021               	movlb	1	; select bank1
 16233  078D  1D20               	btfss	_i2c_status^(0+128),2
 16234  078E  2F90               	goto	u143_21
 16235  078F  2F91               	goto	u143_20
 16236  0790                     u143_21:	
 16237  0790  2F9A               	goto	i1l103
 16238  0791                     u143_20:	
 16239  0791                     i1l3947:	
 16240                           
 16241                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 16242  0791  0873               	movf	i2c_setBuffer@buffer,w
 16243  0792  00F2               	movwf	??_i2c_setBuffer
 16244  0793  0872               	movf	??_i2c_setBuffer,w
 16245  0794  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16246                           
 16247                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 16248  0795  0871               	movf	i2c_setBuffer@bufferSize+1,w
 16249  0796  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16250  0797  0870               	movf	i2c_setBuffer@bufferSize,w
 16251  0798  00A3               	movwf	(_i2c_status^(0+128)+3)
 16252  0799                     i1l3949:	
 16253                           
 16254                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 16255  0799  1120               	bcf	_i2c_status^(0+128),2
 16256  079A                     i1l103:	
 16257  079A  0008               	return
 16258  079B                     __end_of_i2c_setBuffer:	
 16259                           
 16260                           	psect	text75
 16261  0F06                     __ptext75:	
 16262 ;; *************** function _i2c1_driver_stop *****************
 16263 ;; Defined at:
 16264 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;		None
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;		None
 16269 ;; Return value:  Size  Location     Type
 16270 ;;                  1    wreg      void 
 16271 ;; Registers used:
 16272 ;;		None
 16273 ;; Tracked objects:
 16274 ;;		On entry : 0/0
 16275 ;;		On exit  : 0/0
 16276 ;;		Unchanged: 0/0
 16277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;Total ram usage:        0 bytes
 16283 ;; Hardware stack levels used:    1
 16284 ;; This function calls:
 16285 ;;		Nothing
 16286 ;; This function is called by:
 16287 ;;		_do_I2C_SEND_STOP
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           
 16292                           ;psect for function _i2c1_driver_stop
 16293  0F06                     _i2c1_driver_stop:	
 16294  0F06                     i1l3953:	
 16295                           ;incstack = 0
 16296                           ; Regs used in _i2c1_driver_stop: []
 16297                           
 16298                           
 16299                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 16300  0F06  0023               	movlb	3	; select bank3
 16301  0F07  1511               	bsf	17,2	;volatile
 16302  0F08                     i1l611:	
 16303  0F08  0008               	return
 16304  0F09                     __end_of_i2c1_driver_stop:	
 16305                           
 16306                           	psect	text76
 16307  0F03                     __ptext76:	
 16308 ;; *************** function _i2c1_driver_restart *****************
 16309 ;; Defined at:
 16310 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;		None
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;		None
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  1    wreg      void 
 16317 ;; Registers used:
 16318 ;;		None
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;Total ram usage:        0 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; This function calls:
 16331 ;;		Nothing
 16332 ;; This function is called by:
 16333 ;;		_do_I2C_SEND_RESTART_READ
 16334 ;;		_do_I2C_SEND_RESTART_WRITE
 16335 ;;		_do_I2C_SEND_RESTART
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339                           
 16340                           ;psect for function _i2c1_driver_restart
 16341  0F03                     _i2c1_driver_restart:	
 16342  0F03                     i1l3951:	
 16343                           ;incstack = 0
 16344                           ; Regs used in _i2c1_driver_restart: []
 16345                           
 16346                           
 16347                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 16348  0F03  0023               	movlb	3	; select bank3
 16349  0F04  1491               	bsf	17,1	;volatile
 16350  0F05                     i1l608:	
 16351  0F05  0008               	return
 16352  0F06                     __end_of_i2c1_driver_restart:	
 16353                           
 16354                           	psect	text77
 16355  0F1B                     __ptext77:	
 16356 ;; *************** function _i2c1_driver_sendACK *****************
 16357 ;; Defined at:
 16358 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;		None
 16361 ;; Auto vars:     Size  Location     Type
 16362 ;;		None
 16363 ;; Return value:  Size  Location     Type
 16364 ;;                  1    wreg      void 
 16365 ;; Registers used:
 16366 ;;		None
 16367 ;; Tracked objects:
 16368 ;;		On entry : 0/0
 16369 ;;		On exit  : 0/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16376 ;;Total ram usage:        0 bytes
 16377 ;; Hardware stack levels used:    1
 16378 ;; This function calls:
 16379 ;;		Nothing
 16380 ;; This function is called by:
 16381 ;;		_do_I2C_DO_ACK
 16382 ;;		_do_I2C_RX
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           
 16386                           
 16387                           ;psect for function _i2c1_driver_sendACK
 16388  0F1B                     _i2c1_driver_sendACK:	
 16389  0F1B                     i1l4039:	
 16390                           ;incstack = 0
 16391                           ; Regs used in _i2c1_driver_sendACK: []
 16392                           
 16393                           
 16394                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 16395  0F1B  0023               	movlb	3	; select bank3
 16396  0F1C  1291               	bcf	17,5	;volatile
 16397                           
 16398                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 16399  0F1D  1611               	bsf	17,4	;volatile
 16400  0F1E                     i1l635:	
 16401  0F1E  0008               	return
 16402  0F1F                     __end_of_i2c1_driver_sendACK:	
 16403                           
 16404                           	psect	text78
 16405  07AA                     __ptext78:	
 16406 ;; *************** function _TMR2_ISR *****************
 16407 ;; Defined at:
 16408 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 16409 ;; Parameters:    Size  Location     Type
 16410 ;;		None
 16411 ;; Auto vars:     Size  Location     Type
 16412 ;;		None
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  1    wreg      void 
 16415 ;; Registers used:
 16416 ;;		wreg, status,2, status,0, pclath, cstack
 16417 ;; Tracked objects:
 16418 ;;		On entry : 0/0
 16419 ;;		On exit  : 0/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16426 ;;Total ram usage:        0 bytes
 16427 ;; Hardware stack levels used:    1
 16428 ;; Hardware stack levels required when called:    1
 16429 ;; This function calls:
 16430 ;;		Absolute function
 16431 ;;		_TMR2_DefaultInterruptHandler
 16432 ;;		_handler_clock_ms
 16433 ;; This function is called by:
 16434 ;;		_INTERRUPT_InterruptManager
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           
 16439                           ;psect for function _TMR2_ISR
 16440  07AA                     _TMR2_ISR:	
 16441  07AA                     i1l4785:	
 16442                           ;incstack = 0
 16443                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16444                           
 16445                           
 16446                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 16447  07AA  002E               	movlb	14	; select bank14
 16448  07AB  1090               	bcf	16,1	;volatile
 16449  07AC                     i1l4787:	
 16450                           
 16451                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 16452  07AC  0020               	movlb	0	; select bank0
 16453  07AD  084B               	movf	_TMR2_InterruptHandler,w
 16454  07AE  044C               	iorwf	_TMR2_InterruptHandler+1,w
 16455  07AF  1903               	btfsc	3,2
 16456  07B0  2FB2               	goto	u188_21
 16457  07B1  2FB3               	goto	u188_20
 16458  07B2                     u188_21:	
 16459  07B2  2FB8               	goto	i1l1038
 16460  07B3                     u188_20:	
 16461  07B3                     i1l4789:	
 16462                           
 16463                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 16464  07B3  084C               	movf	_TMR2_InterruptHandler+1,w
 16465  07B4  008A               	movwf	10
 16466  07B5  084B               	movf	_TMR2_InterruptHandler,w
 16467  07B6  000A               	callw
 16468  07B7  3187               	pagesel	$
 16469  07B8                     i1l1038:	
 16470  07B8  0008               	return
 16471  07B9                     __end_of_TMR2_ISR:	
 16472                           
 16473                           	psect	text79
 16474  0EFA                     __ptext79:	
 16475 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 16476 ;; Defined at:
 16477 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 16478 ;; Parameters:    Size  Location     Type
 16479 ;;		None
 16480 ;; Auto vars:     Size  Location     Type
 16481 ;;		None
 16482 ;; Return value:  Size  Location     Type
 16483 ;;                  1    wreg      void 
 16484 ;; Registers used:
 16485 ;;		None
 16486 ;; Tracked objects:
 16487 ;;		On entry : 0/0
 16488 ;;		On exit  : 0/0
 16489 ;;		Unchanged: 0/0
 16490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;Total ram usage:        0 bytes
 16496 ;; Hardware stack levels used:    1
 16497 ;; This function calls:
 16498 ;;		Nothing
 16499 ;; This function is called by:
 16500 ;;		_TMR2_Initialize
 16501 ;;		_TMR2_ISR
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505                           
 16506                           ;psect for function _TMR2_DefaultInterruptHandler
 16507  0EFA                     _TMR2_DefaultInterruptHandler:	
 16508  0EFA                     i1l1044:	
 16509                           ;incstack = 0
 16510                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 16511                           
 16512  0EFA  0008               	return
 16513  0EFB                     __end_of_TMR2_DefaultInterruptHandler:	
 16514                           
 16515                           	psect	text80
 16516  0FF4                     __ptext80:	
 16517 ;; *************** function _handler_clock_ms *****************
 16518 ;; Defined at:
 16519 ;;		line 359 in file "main.c"
 16520 ;; Parameters:    Size  Location     Type
 16521 ;;		None
 16522 ;; Auto vars:     Size  Location     Type
 16523 ;;		None
 16524 ;; Return value:  Size  Location     Type
 16525 ;;                  1    wreg      void 
 16526 ;; Registers used:
 16527 ;;		wreg, status,2, status,0
 16528 ;; Tracked objects:
 16529 ;;		On entry : 0/0
 16530 ;;		On exit  : 0/0
 16531 ;;		Unchanged: 0/0
 16532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16537 ;;Total ram usage:        1 bytes
 16538 ;; Hardware stack levels used:    1
 16539 ;; This function calls:
 16540 ;;		Nothing
 16541 ;; This function is called by:
 16542 ;;		_main
 16543 ;;		_TMR2_ISR
 16544 ;; This function uses a non-reentrant model
 16545 ;;
 16546                           
 16547                           
 16548                           ;psect for function _handler_clock_ms
 16549  0FF4                     _handler_clock_ms:	
 16550  0FF4                     i1l4667:	
 16551                           ;incstack = 0
 16552                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 16553                           
 16554                           
 16555                           ;main.c: 360:     clkms++;
 16556  0FF4  3001               	movlw	1
 16557  0FF5  00F0               	movwf	??_handler_clock_ms
 16558  0FF6  0870               	movf	??_handler_clock_ms,w
 16559  0FF7  07FD               	addwf	_clkms,f	;volatile
 16560  0FF8                     i1l4669:	
 16561                           
 16562                           ;main.c: 362:     if(clkms >= 100){
 16563  0FF8  3064               	movlw	100
 16564  0FF9  027D               	subwf	_clkms,w	;volatile
 16565  0FFA  1C03               	skipc
 16566  0FFB  2FFD               	goto	u179_21
 16567  0FFC  2FFE               	goto	u179_20
 16568  0FFD                     u179_21:	
 16569  0FFD  2FFF               	goto	i1l1265
 16570  0FFE                     u179_20:	
 16571  0FFE                     i1l4671:	
 16572                           
 16573                           ;main.c: 363:         clkms = 0;
 16574  0FFE  01FD               	clrf	_clkms	;volatile
 16575  0FFF                     i1l1265:	
 16576  0FFF  0008               	return
 16577  1000                     __end_of_handler_clock_ms:	
 16578                           
 16579                           	psect	text81
 16580  06CE                     __ptext81:	
 16581 ;; *************** function _TMR1_ISR *****************
 16582 ;; Defined at:
 16583 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16584 ;; Parameters:    Size  Location     Type
 16585 ;;		None
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;		None
 16588 ;; Return value:  Size  Location     Type
 16589 ;;                  1    wreg      void 
 16590 ;; Registers used:
 16591 ;;		wreg, status,2, status,0, pclath, cstack
 16592 ;; Tracked objects:
 16593 ;;		On entry : 0/0
 16594 ;;		On exit  : 0/0
 16595 ;;		Unchanged: 0/0
 16596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;Total ram usage:        0 bytes
 16602 ;; Hardware stack levels used:    1
 16603 ;; Hardware stack levels required when called:    1
 16604 ;; This function calls:
 16605 ;;		Absolute function
 16606 ;;		_TMR1_DefaultInterruptHandler
 16607 ;;		_TMR1_WriteTimer
 16608 ;;		_handler_clock_hms
 16609 ;; This function is called by:
 16610 ;;		_INTERRUPT_InterruptManager
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           
 16614                           
 16615                           ;psect for function _TMR1_ISR
 16616  06CE                     _TMR1_ISR:	
 16617  06CE                     i1l4777:	
 16618                           ;incstack = 0
 16619                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16620                           
 16621                           
 16622                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 16623  06CE  002E               	movlb	14	; select bank14
 16624  06CF  1010               	bcf	16,0	;volatile
 16625  06D0                     i1l4779:	
 16626                           
 16627                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 16628  06D0  0020               	movlb	0	; select bank0
 16629  06D1  0850               	movf	_timer1ReloadVal+1,w	;volatile
 16630  06D2  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16631  06D3  084F               	movf	_timer1ReloadVal,w	;volatile
 16632  06D4  00F0               	movwf	TMR1_WriteTimer@timerVal
 16633  06D5  3187  276A  3186   	fcall	_TMR1_WriteTimer
 16634  06D8                     i1l4781:	
 16635                           
 16636                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 16637  06D8  0020               	movlb	0	; select bank0
 16638  06D9  084D               	movf	_TMR1_InterruptHandler,w
 16639  06DA  044E               	iorwf	_TMR1_InterruptHandler+1,w
 16640  06DB  1903               	btfsc	3,2
 16641  06DC  2EDE               	goto	u187_21
 16642  06DD  2EDF               	goto	u187_20
 16643  06DE                     u187_21:	
 16644  06DE  2EE4               	goto	i1l896
 16645  06DF                     u187_20:	
 16646  06DF                     i1l4783:	
 16647                           
 16648                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 16649  06DF  084E               	movf	_TMR1_InterruptHandler+1,w
 16650  06E0  008A               	movwf	10
 16651  06E1  084D               	movf	_TMR1_InterruptHandler,w
 16652  06E2  000A               	callw
 16653  06E3  3186               	pagesel	$
 16654  06E4                     i1l896:	
 16655  06E4  0008               	return
 16656  06E5                     __end_of_TMR1_ISR:	
 16657                           
 16658                           	psect	text82
 16659  0EF9                     __ptext82:	
 16660 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16661 ;; Defined at:
 16662 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;		None
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;		None
 16667 ;; Return value:  Size  Location     Type
 16668 ;;                  1    wreg      void 
 16669 ;; Registers used:
 16670 ;;		None
 16671 ;; Tracked objects:
 16672 ;;		On entry : 0/0
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16680 ;;Total ram usage:        0 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; This function calls:
 16683 ;;		Nothing
 16684 ;; This function is called by:
 16685 ;;		_TMR1_Initialize
 16686 ;;		_TMR1_ISR
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           
 16691                           ;psect for function _TMR1_DefaultInterruptHandler
 16692  0EF9                     _TMR1_DefaultInterruptHandler:	
 16693  0EF9                     i1l902:	
 16694                           ;incstack = 0
 16695                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16696                           
 16697  0EF9  0008               	return
 16698  0EFA                     __end_of_TMR1_DefaultInterruptHandler:	
 16699                           
 16700                           	psect	text83
 16701  04FF                     __ptext83:	
 16702 ;; *************** function _handler_clock_hms *****************
 16703 ;; Defined at:
 16704 ;;		line 342 in file "main.c"
 16705 ;; Parameters:    Size  Location     Type
 16706 ;;		None
 16707 ;; Auto vars:     Size  Location     Type
 16708 ;;		None
 16709 ;; Return value:  Size  Location     Type
 16710 ;;                  1    wreg      void 
 16711 ;; Registers used:
 16712 ;;		wreg, status,2, status,0
 16713 ;; Tracked objects:
 16714 ;;		On entry : 0/0
 16715 ;;		On exit  : 0/0
 16716 ;;		Unchanged: 0/0
 16717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;Total ram usage:        1 bytes
 16723 ;; Hardware stack levels used:    1
 16724 ;; This function calls:
 16725 ;;		Nothing
 16726 ;; This function is called by:
 16727 ;;		_main
 16728 ;;		_TMR1_ISR
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           
 16733                           ;psect for function _handler_clock_hms
 16734  04FF                     _handler_clock_hms:	
 16735  04FF                     i1l4649:	
 16736                           ;incstack = 0
 16737                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 16738                           
 16739                           
 16740                           ;main.c: 344:     if(!config_mode){
 16741  04FF  0020               	movlb	0	; select bank0
 16742  0500  0830               	movf	_config_mode,w	;volatile
 16743  0501  1D03               	btfss	3,2
 16744  0502  2D04               	goto	u174_21
 16745  0503  2D05               	goto	u174_20
 16746  0504                     u174_21:	
 16747  0504  2D10               	goto	i1l4653
 16748  0505                     u174_20:	
 16749  0505                     i1l4651:	
 16750  0505  1003               	clrc
 16751  0506  1F96               	btfss	22,7	;volatile
 16752  0507  1403               	setc
 16753  0508  1803               	btfsc	3,0
 16754  0509  2D0B               	goto	u175_21
 16755  050A  2D0E               	goto	u175_20
 16756  050B                     u175_21:	
 16757  050B  0020               	movlb	0	; select bank0
 16758  050C  1796               	bsf	22,7	;volatile
 16759  050D  2D10               	goto	u176_24
 16760  050E                     u175_20:	
 16761  050E  0020               	movlb	0	; select bank0
 16762  050F  1396               	bcf	22,7	;volatile
 16763  0510                     u176_24:	
 16764  0510                     i1l4653:	
 16765                           
 16766                           ;main.c: 348:     seg++;
 16767  0510  3001               	movlw	1
 16768  0511  00F0               	movwf	??_handler_clock_hms
 16769  0512  0870               	movf	??_handler_clock_hms,w
 16770  0513  07B4               	addwf	_seg,f	;volatile
 16771  0514                     i1l4655:	
 16772                           
 16773                           ;main.c: 349:     if(seg >= 60) {
 16774  0514  303C               	movlw	60
 16775  0515  0234               	subwf	_seg,w	;volatile
 16776  0516  1C03               	skipc
 16777  0517  2D19               	goto	u177_21
 16778  0518  2D1A               	goto	u177_20
 16779  0519                     u177_21:	
 16780  0519  2D2A               	goto	i1l1261
 16781  051A                     u177_20:	
 16782  051A                     i1l4657:	
 16783                           
 16784                           ;main.c: 350:         clkm++;
 16785  051A  3001               	movlw	1
 16786  051B  00F0               	movwf	??_handler_clock_hms
 16787  051C  0870               	movf	??_handler_clock_hms,w
 16788  051D  07B5               	addwf	_clkm,f	;volatile
 16789  051E                     i1l4659:	
 16790                           
 16791                           ;main.c: 351:         seg = 0;
 16792  051E  01B4               	clrf	_seg	;volatile
 16793  051F                     i1l4661:	
 16794                           
 16795                           ;main.c: 352:         if(clkm >= 60) {
 16796  051F  303C               	movlw	60
 16797  0520  0235               	subwf	_clkm,w	;volatile
 16798  0521  1C03               	skipc
 16799  0522  2D24               	goto	u178_21
 16800  0523  2D25               	goto	u178_20
 16801  0524                     u178_21:	
 16802  0524  2D2A               	goto	i1l1261
 16803  0525                     u178_20:	
 16804  0525                     i1l4663:	
 16805                           
 16806                           ;main.c: 353:             clkh++;
 16807  0525  3001               	movlw	1
 16808  0526  00F0               	movwf	??_handler_clock_hms
 16809  0527  0870               	movf	??_handler_clock_hms,w
 16810  0528  07B6               	addwf	_clkh,f	;volatile
 16811  0529                     i1l4665:	
 16812                           
 16813                           ;main.c: 354:             clkm = 0;
 16814  0529  01B5               	clrf	_clkm	;volatile
 16815  052A                     i1l1261:	
 16816  052A  0008               	return
 16817  052B                     __end_of_handler_clock_hms:	
 16818                           
 16819                           	psect	text84
 16820  076A                     __ptext84:	
 16821 ;; *************** function _TMR1_WriteTimer *****************
 16822 ;; Defined at:
 16823 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16824 ;; Parameters:    Size  Location     Type
 16825 ;;  timerVal        2    0[COMMON] unsigned short 
 16826 ;; Auto vars:     Size  Location     Type
 16827 ;;		None
 16828 ;; Return value:  Size  Location     Type
 16829 ;;                  1    wreg      void 
 16830 ;; Registers used:
 16831 ;;		wreg, status,2
 16832 ;; Tracked objects:
 16833 ;;		On entry : 0/0
 16834 ;;		On exit  : 0/0
 16835 ;;		Unchanged: 0/0
 16836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;Total ram usage:        2 bytes
 16842 ;; Hardware stack levels used:    1
 16843 ;; This function calls:
 16844 ;;		Nothing
 16845 ;; This function is called by:
 16846 ;;		_TMR1_ISR
 16847 ;;		_TMR1_Reload
 16848 ;; This function uses a non-reentrant model
 16849 ;;
 16850                           
 16851                           
 16852                           ;psect for function _TMR1_WriteTimer
 16853  076A                     _TMR1_WriteTimer:	
 16854  076A                     i1l4569:	
 16855                           ;incstack = 0
 16856                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16857                           
 16858                           
 16859                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 16860  076A  0024               	movlb	4	; select bank4
 16861  076B  1D0E               	btfss	14,2	;volatile
 16862  076C  2F6E               	goto	u168_21
 16863  076D  2F6F               	goto	u168_20
 16864  076E                     u168_21:	
 16865  076E  2F76               	goto	i1l4579
 16866  076F                     u168_20:	
 16867  076F                     i1l4571:	
 16868                           
 16869                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 16870  076F  100E               	bcf	14,0	;volatile
 16871  0770                     i1l4573:	
 16872                           
 16873                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 16874  0770  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16875  0771  008D               	movwf	13	;volatile
 16876  0772                     i1l4575:	
 16877                           
 16878                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 16879  0772  0870               	movf	TMR1_WriteTimer@timerVal,w
 16880  0773  008C               	movwf	12	;volatile
 16881  0774                     i1l4577:	
 16882                           
 16883                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 16884  0774  140E               	bsf	14,0	;volatile
 16885                           
 16886                           ;mcc_generated_files/tmr1.c: 140:     }
 16887  0775  2F7A               	goto	i1l883
 16888  0776                     i1l4579:	
 16889                           
 16890                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 16891  0776  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16892  0777  008D               	movwf	13	;volatile
 16893  0778                     i1l4581:	
 16894                           
 16895                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 16896  0778  0870               	movf	TMR1_WriteTimer@timerVal,w
 16897  0779  008C               	movwf	12	;volatile
 16898  077A                     i1l883:	
 16899  077A  0008               	return
 16900  077B                     __end_of_TMR1_WriteTimer:	
 16901                           
 16902                           	psect	text85
 16903  07B9                     __ptext85:	
 16904 ;; *************** function _TMR0_ISR *****************
 16905 ;; Defined at:
 16906 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 16907 ;; Parameters:    Size  Location     Type
 16908 ;;		None
 16909 ;; Auto vars:     Size  Location     Type
 16910 ;;		None
 16911 ;; Return value:  Size  Location     Type
 16912 ;;                  1    wreg      void 
 16913 ;; Registers used:
 16914 ;;		wreg, status,2, status,0, pclath, cstack
 16915 ;; Tracked objects:
 16916 ;;		On entry : 0/0
 16917 ;;		On exit  : 0/0
 16918 ;;		Unchanged: 0/0
 16919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;Total ram usage:        0 bytes
 16925 ;; Hardware stack levels used:    1
 16926 ;; Hardware stack levels required when called:    2
 16927 ;; This function calls:
 16928 ;;		Absolute function
 16929 ;;		_ISR_3s
 16930 ;;		_TMR0_DefaultInterruptHandler
 16931 ;; This function is called by:
 16932 ;;		_INTERRUPT_InterruptManager
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           
 16937                           ;psect for function _TMR0_ISR
 16938  07B9                     _TMR0_ISR:	
 16939  07B9                     i1l4771:	
 16940                           ;incstack = 0
 16941                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16942                           
 16943                           
 16944                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 16945  07B9  002E               	movlb	14	; select bank14
 16946  07BA  128C               	bcf	12,5	;volatile
 16947  07BB                     i1l4773:	
 16948                           
 16949                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 16950  07BB  0020               	movlb	0	; select bank0
 16951  07BC  0849               	movf	_TMR0_InterruptHandler,w
 16952  07BD  044A               	iorwf	_TMR0_InterruptHandler+1,w
 16953  07BE  1903               	btfsc	3,2
 16954  07BF  2FC1               	goto	u186_21
 16955  07C0  2FC2               	goto	u186_20
 16956  07C1                     u186_21:	
 16957  07C1  2FC7               	goto	i1l1539
 16958  07C2                     u186_20:	
 16959  07C2                     i1l4775:	
 16960                           
 16961                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 16962  07C2  084A               	movf	_TMR0_InterruptHandler+1,w
 16963  07C3  008A               	movwf	10
 16964  07C4  0849               	movf	_TMR0_InterruptHandler,w
 16965  07C5  000A               	callw
 16966  07C6  3187               	pagesel	$
 16967  07C7                     i1l1539:	
 16968  07C7  0008               	return
 16969  07C8                     __end_of_TMR0_ISR:	
 16970                           
 16971                           	psect	text86
 16972  0685                     __ptext86:	
 16973 ;; *************** function _ISR_3s *****************
 16974 ;; Defined at:
 16975 ;;		line 105 in file "main.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;		None
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;		None
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  1    wreg      void 
 16982 ;; Registers used:
 16983 ;;		wreg, status,2, status,0, pclath, cstack
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 0/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;Total ram usage:        1 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; Hardware stack levels required when called:    1
 16996 ;; This function calls:
 16997 ;;		_TMR0_StopTimer
 16998 ;;		i1_PWM6_LoadDutyValue
 16999 ;; This function is called by:
 17000 ;;		_main
 17001 ;;		_TMR0_ISR
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           
 17006                           ;psect for function _ISR_3s
 17007  0685                     _ISR_3s:	
 17008  0685                     i1l4583:	
 17009                           ;incstack = 0
 17010                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 17011                           
 17012                           
 17013                           ;main.c: 107:     if (lum_threshold){
 17014  0685  0020               	movlb	0	; select bank0
 17015  0686  0820               	movf	_lum_threshold,w
 17016  0687  0421               	iorwf	_lum_threshold+1,w
 17017  0688  1903               	btfsc	3,2
 17018  0689  2E8B               	goto	u169_21
 17019  068A  2E8C               	goto	u169_20
 17020  068B                     u169_21:	
 17021  068B  2E98               	goto	i1l1161
 17022  068C                     u169_20:	
 17023  068C                     i1l4585:	
 17024                           
 17025                           ;main.c: 108:         PWM6_LoadDutyValue(1023);
 17026  068C  30FF               	movlw	255
 17027  068D  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17028  068E  3003               	movlw	3
 17029  068F  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17030  0690  3186  26FB  3186   	fcall	i1_PWM6_LoadDutyValue
 17031  0693                     i1l4587:	
 17032                           
 17033                           ;main.c: 109:         alarm = 1;
 17034  0693  3001               	movlw	1
 17035  0694  00F4               	movwf	??_ISR_3s
 17036  0695  0874               	movf	??_ISR_3s,w
 17037  0696  0020               	movlb	0	; select bank0
 17038  0697  00AF               	movwf	_alarm	;volatile
 17039  0698                     i1l1161:	
 17040                           ;main.c: 111:     }
 17041                           
 17042                           
 17043                           ;main.c: 113:     TMR0_StopTimer();
 17044  0698  318F  2700  3186   	fcall	_TMR0_StopTimer
 17045  069B                     i1l4589:	
 17046                           
 17047                           ;main.c: 114:     PIE0bits.TMR0IE = 0;
 17048  069B  002E               	movlb	14	; select bank14
 17049  069C  1296               	bcf	22,5	;volatile
 17050  069D                     i1l1162:	
 17051  069D  0008               	return
 17052  069E                     __end_of_ISR_3s:	
 17053                           
 17054                           	psect	text87
 17055  0EF8                     __ptext87:	
 17056 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17057 ;; Defined at:
 17058 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;		None
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;		None
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		None
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17076 ;;Total ram usage:        0 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; This function calls:
 17079 ;;		Nothing
 17080 ;; This function is called by:
 17081 ;;		_TMR0_Initialize
 17082 ;;		_TMR0_ISR
 17083 ;; This function uses a non-reentrant model
 17084 ;;
 17085                           
 17086                           
 17087                           ;psect for function _TMR0_DefaultInterruptHandler
 17088  0EF8                     _TMR0_DefaultInterruptHandler:	
 17089  0EF8                     i1l1545:	
 17090                           ;incstack = 0
 17091                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17092                           
 17093  0EF8  0008               	return
 17094  0EF9                     __end_of_TMR0_DefaultInterruptHandler:	
 17095                           
 17096                           	psect	text88
 17097  0F00                     __ptext88:	
 17098 ;; *************** function _TMR0_StopTimer *****************
 17099 ;; Defined at:
 17100 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;		None
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  1    wreg      void 
 17107 ;; Registers used:
 17108 ;;		None
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;Total ram usage:        0 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; This function calls:
 17121 ;;		Nothing
 17122 ;; This function is called by:
 17123 ;;		_ISR_3s
 17124 ;; This function uses a non-reentrant model
 17125 ;;
 17126                           
 17127                           
 17128                           ;psect for function _TMR0_StopTimer
 17129  0F00                     _TMR0_StopTimer:	
 17130  0F00                     i1l4173:	
 17131                           ;incstack = 0
 17132                           ; Regs used in _TMR0_StopTimer: []
 17133                           
 17134                           
 17135                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 17136  0F00  0020               	movlb	0	; select bank0
 17137  0F01  139E               	bcf	30,7	;volatile
 17138  0F02                     i1l1526:	
 17139  0F02  0008               	return
 17140  0F03                     __end_of_TMR0_StopTimer:	
 17141                           
 17142                           	psect	text89
 17143  0F54                     __ptext89:	
 17144 ;; *************** function _INT_ISR *****************
 17145 ;; Defined at:
 17146 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17147 ;; Parameters:    Size  Location     Type
 17148 ;;		None
 17149 ;; Auto vars:     Size  Location     Type
 17150 ;;		None
 17151 ;; Return value:  Size  Location     Type
 17152 ;;                  1    wreg      void 
 17153 ;; Registers used:
 17154 ;;		wreg, status,2, status,0, pclath, cstack
 17155 ;; Tracked objects:
 17156 ;;		On entry : 0/0
 17157 ;;		On exit  : 0/0
 17158 ;;		Unchanged: 0/0
 17159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;Total ram usage:        0 bytes
 17165 ;; Hardware stack levels used:    1
 17166 ;; Hardware stack levels required when called:    3
 17167 ;; This function calls:
 17168 ;;		_INT_CallBack
 17169 ;; This function is called by:
 17170 ;;		_INTERRUPT_InterruptManager
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           
 17175                           ;psect for function _INT_ISR
 17176  0F54                     _INT_ISR:	
 17177  0F54                     i1l4767:	
 17178                           ;incstack = 0
 17179                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 17180                           
 17181                           
 17182                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 17183  0F54  002E               	movlb	14	; select bank14
 17184  0F55  100C               	bcf	12,0	;volatile
 17185  0F56                     i1l4769:	
 17186                           
 17187                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 17188  0F56  3187  27F0  318F   	fcall	_INT_CallBack
 17189  0F59                     i1l334:	
 17190  0F59  0008               	return
 17191  0F5A                     __end_of_INT_ISR:	
 17192                           
 17193                           	psect	text90
 17194  07F0                     __ptext90:	
 17195 ;; *************** function _INT_CallBack *****************
 17196 ;; Defined at:
 17197 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;		None
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;		None
 17202 ;; Return value:  Size  Location     Type
 17203 ;;                  1    wreg      void 
 17204 ;; Registers used:
 17205 ;;		wreg, status,2, status,0, pclath, cstack
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;Total ram usage:        0 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:    2
 17218 ;; This function calls:
 17219 ;;		Absolute function
 17220 ;;		_INT_DefaultInterruptHandler
 17221 ;;		_sw1_EXT
 17222 ;; This function is called by:
 17223 ;;		_INT_ISR
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           
 17228                           ;psect for function _INT_CallBack
 17229  07F0                     _INT_CallBack:	
 17230  07F0                     i1l4427:	
 17231                           ;incstack = 0
 17232                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17233                           
 17234                           
 17235                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 17236  07F0  0020               	movlb	0	; select bank0
 17237  07F1  0851               	movf	_INT_InterruptHandler,w
 17238  07F2  0452               	iorwf	_INT_InterruptHandler+1,w
 17239  07F3  1903               	btfsc	3,2
 17240  07F4  2FF6               	goto	u167_21
 17241  07F5  2FF7               	goto	u167_20
 17242  07F6                     u167_21:	
 17243  07F6  2FFC               	goto	i1l338
 17244  07F7                     u167_20:	
 17245  07F7                     i1l4429:	
 17246                           
 17247                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 17248  07F7  0852               	movf	_INT_InterruptHandler+1,w
 17249  07F8  008A               	movwf	10
 17250  07F9  0851               	movf	_INT_InterruptHandler,w
 17251  07FA  000A               	callw
 17252  07FB  3187               	pagesel	$
 17253  07FC                     i1l338:	
 17254  07FC  0008               	return
 17255  07FD                     __end_of_INT_CallBack:	
 17256                           
 17257                           	psect	text91
 17258  0EF7                     __ptext91:	
 17259 ;; *************** function _INT_DefaultInterruptHandler *****************
 17260 ;; Defined at:
 17261 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;		None
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;		None
 17266 ;; Return value:  Size  Location     Type
 17267 ;;                  1    wreg      void 
 17268 ;; Registers used:
 17269 ;;		None
 17270 ;; Tracked objects:
 17271 ;;		On entry : 0/0
 17272 ;;		On exit  : 0/0
 17273 ;;		Unchanged: 0/0
 17274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;Total ram usage:        0 bytes
 17280 ;; Hardware stack levels used:    1
 17281 ;; This function calls:
 17282 ;;		Nothing
 17283 ;; This function is called by:
 17284 ;;		_EXT_INT_Initialize
 17285 ;;		_INT_CallBack
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           
 17290                           ;psect for function _INT_DefaultInterruptHandler
 17291  0EF7                     _INT_DefaultInterruptHandler:	
 17292  0EF7                     i1l344:	
 17293                           ;incstack = 0
 17294                           ; Regs used in _INT_DefaultInterruptHandler: []
 17295                           
 17296  0EF7  0008               	return
 17297  0EF8                     __end_of_INT_DefaultInterruptHandler:	
 17298                           
 17299                           	psect	text92
 17300  052B                     __ptext92:	
 17301 ;; *************** function _sw1_EXT *****************
 17302 ;; Defined at:
 17303 ;;		line 71 in file "main.c"
 17304 ;; Parameters:    Size  Location     Type
 17305 ;;		None
 17306 ;; Auto vars:     Size  Location     Type
 17307 ;;		None
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  1    wreg      void 
 17310 ;; Registers used:
 17311 ;;		wreg, status,2, status,0, pclath, cstack
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17321 ;;Total ram usage:        1 bytes
 17322 ;; Hardware stack levels used:    1
 17323 ;; Hardware stack levels required when called:    1
 17324 ;; This function calls:
 17325 ;;		i1_PWM6_LoadDutyValue
 17326 ;;		i1_checkDebounce
 17327 ;; This function is called by:
 17328 ;;		_main
 17329 ;;		_INT_CallBack
 17330 ;; This function uses a non-reentrant model
 17331 ;;
 17332                           
 17333                           
 17334                           ;psect for function _sw1_EXT
 17335  052B                     _sw1_EXT:	
 17336  052B                     i1l4135:	
 17337                           ;incstack = 0
 17338                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 17339                           
 17340                           
 17341                           ;main.c: 75:     if(checkDebounce()){
 17342  052B  3184  2435  3185   	fcall	i1_checkDebounce
 17343  052E  3A00               	xorlw	0
 17344  052F  1903               	skipnz
 17345  0530  2D32               	goto	u152_21
 17346  0531  2D33               	goto	u152_20
 17347  0532                     u152_21:	
 17348  0532  2D56               	goto	i1l1158
 17349  0533                     u152_20:	
 17350  0533                     i1l4137:	
 17351                           
 17352                           ;main.c: 76:         if (alarm == 1){
 17353  0533  0020               	movlb	0	; select bank0
 17354  0534  032F               	decf	_alarm,w	;volatile
 17355  0535  1D03               	btfss	3,2
 17356  0536  2D38               	goto	u153_21
 17357  0537  2D39               	goto	u153_20
 17358  0538                     u153_21:	
 17359  0538  2D42               	goto	i1l1152
 17360  0539                     u153_20:	
 17361  0539                     i1l4139:	
 17362                           
 17363                           ;main.c: 77:             alarm = 0;
 17364  0539  01AF               	clrf	_alarm	;volatile
 17365  053A                     i1l4141:	
 17366  053A  1316               	bcf	22,6	;volatile
 17367  053B                     i1l4143:	
 17368                           
 17369                           ;main.c: 79:             PWM6_LoadDutyValue(0);
 17370  053B  3000               	movlw	0
 17371  053C  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17372  053D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17373  053E  3186  26FB  3185   	fcall	i1_PWM6_LoadDutyValue
 17374                           
 17375                           ;main.c: 80:         }
 17376  0541  2D51               	goto	i1l1155
 17377  0542                     i1l1152:	
 17378                           ;main.c: 81:         else{
 17379                           
 17380                           
 17381                           ;main.c: 82:             if(!PORTBbits.RB4){
 17382  0542  1A0D               	btfsc	13,4	;volatile
 17383  0543  2D45               	goto	u154_21
 17384  0544  2D46               	goto	u154_20
 17385  0545                     u154_21:	
 17386  0545  2D51               	goto	i1l1155
 17387  0546                     u154_20:	
 17388  0546                     i1l4145:	
 17389                           
 17390                           ;main.c: 84:                 if(config_mode == 0){
 17391  0546  0830               	movf	_config_mode,w	;volatile
 17392  0547  1D03               	btfss	3,2
 17393  0548  2D4A               	goto	u155_21
 17394  0549  2D4B               	goto	u155_20
 17395  054A                     u155_21:	
 17396  054A  2D51               	goto	i1l1155
 17397  054B                     u155_20:	
 17398  054B                     i1l4147:	
 17399                           
 17400                           ;main.c: 85:                     config_mode = 1;
 17401  054B  3001               	movlw	1
 17402  054C  00F5               	movwf	??_sw1_EXT
 17403  054D  0875               	movf	??_sw1_EXT,w
 17404  054E  00B0               	movwf	_config_mode	;volatile
 17405  054F                     i1l4149:	
 17406                           
 17407                           ;main.c: 87:                     (PIE0bits.INTE = 0);
 17408  054F  002E               	movlb	14	; select bank14
 17409  0550  1016               	bcf	22,0	;volatile
 17410  0551                     i1l1155:	
 17411                           ;main.c: 91:             }
 17412                           
 17413                           
 17414                           ;main.c: 93:             last_ms = clkms;
 17415  0551  087D               	movf	_clkms,w	;volatile
 17416  0552  00F5               	movwf	??_sw1_EXT
 17417  0553  0875               	movf	??_sw1_EXT,w
 17418  0554  0020               	movlb	0	; select bank0
 17419  0555  00B3               	movwf	_last_ms
 17420  0556                     i1l1158:	
 17421  0556  0008               	return
 17422  0557                     __end_of_sw1_EXT:	
 17423                           
 17424                           	psect	text93
 17425  0435                     __ptext93:	
 17426 ;; *************** function i1_checkDebounce *****************
 17427 ;; Defined at:
 17428 ;;		line 397 in file "main.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      unsigned char 
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        5 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; This function calls:
 17449 ;;		Nothing
 17450 ;; This function is called by:
 17451 ;;		_sw1_EXT
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455                           
 17456                           ;psect for function i1_checkDebounce
 17457  0435                     i1_checkDebounce:	
 17458  0435                     i1l3977:	
 17459                           ;incstack = 0
 17460                           ; Regs used in i1_checkDebounce: [wreg+status,2+status,0]
 17461                           
 17462                           
 17463                           ;main.c: 400:     if(clkms - last_ms < 0){
 17464  0435  087D               	movf	_clkms,w	;volatile
 17465  0436  00F0               	movwf	??i1_checkDebounce
 17466  0437  01F1               	clrf	??i1_checkDebounce+1
 17467  0438  0871               	movf	??i1_checkDebounce+1,w
 17468  0439  00F3               	movwf	??i1_checkDebounce+3
 17469  043A  0020               	movlb	0	; select bank0
 17470  043B  0833               	movf	_last_ms,w
 17471  043C  0270               	subwf	??i1_checkDebounce,w
 17472  043D  00F2               	movwf	??i1_checkDebounce+2
 17473  043E  1C03               	skipc
 17474  043F  03F3               	decf	??i1_checkDebounce+3,f
 17475  0440  1FF3               	btfss	??i1_checkDebounce+3,7
 17476  0441  2C43               	goto	u146_21
 17477  0442  2C44               	goto	u146_20
 17478  0443                     u146_21:	
 17479  0443  2C48               	goto	i1l1289
 17480  0444                     u146_20:	
 17481  0444                     i1l3979:	
 17482                           
 17483                           ;main.c: 401:         clkms+= 100;
 17484  0444  3064               	movlw	100
 17485  0445  00F0               	movwf	??i1_checkDebounce
 17486  0446  0870               	movf	??i1_checkDebounce,w
 17487  0447  07FD               	addwf	_clkms,f	;volatile
 17488  0448                     i1l1289:	
 17489                           ;main.c: 402:     }
 17490                           
 17491                           
 17492                           ;main.c: 404:     if(clkms - last_ms < 18){
 17493  0448  087D               	movf	_clkms,w	;volatile
 17494  0449  00F0               	movwf	??i1_checkDebounce
 17495  044A  01F1               	clrf	??i1_checkDebounce+1
 17496  044B  0871               	movf	??i1_checkDebounce+1,w
 17497  044C  00F3               	movwf	??i1_checkDebounce+3
 17498  044D  0833               	movf	_last_ms,w
 17499  044E  0270               	subwf	??i1_checkDebounce,w
 17500  044F  00F2               	movwf	??i1_checkDebounce+2
 17501  0450  1C03               	skipc
 17502  0451  03F3               	decf	??i1_checkDebounce+3,f
 17503  0452  0873               	movf	??i1_checkDebounce+3,w
 17504  0453  3A80               	xorlw	128
 17505  0454  00F4               	movwf	??i1_checkDebounce+4
 17506  0455  3080               	movlw	128
 17507  0456  0274               	subwf	??i1_checkDebounce+4,w
 17508  0457  1D03               	skipz
 17509  0458  2C5B               	goto	u147_25
 17510  0459  3012               	movlw	18
 17511  045A  0272               	subwf	??i1_checkDebounce+2,w
 17512  045B                     u147_25:	
 17513  045B  1803               	skipnc
 17514  045C  2C5E               	goto	u147_21
 17515  045D  2C5F               	goto	u147_20
 17516  045E                     u147_21:	
 17517  045E  2C69               	goto	i1l3991
 17518  045F                     u147_20:	
 17519  045F                     i1l3981:	
 17520                           
 17521                           ;main.c: 405:         if(clkms > 100){
 17522  045F  3065               	movlw	101
 17523  0460  027D               	subwf	_clkms,w	;volatile
 17524  0461  1C03               	skipc
 17525  0462  2C64               	goto	u148_21
 17526  0463  2C65               	goto	u148_20
 17527  0464                     u148_21:	
 17528  0464  2C67               	goto	i1l3985
 17529  0465                     u148_20:	
 17530  0465                     i1l3983:	
 17531                           
 17532                           ;main.c: 406:             clkms -= 100;
 17533  0465  3064               	movlw	100
 17534  0466  02FD               	subwf	_clkms,f	;volatile
 17535  0467                     i1l3985:	
 17536                           
 17537                           ;main.c: 408:         return 0;
 17538  0467  3000               	movlw	0
 17539  0468  2C72               	goto	i1l1292
 17540  0469                     i1l3991:	
 17541                           
 17542                           ;main.c: 410:         if(clkms > 100){
 17543  0469  3065               	movlw	101
 17544  046A  027D               	subwf	_clkms,w	;volatile
 17545  046B  1C03               	skipc
 17546  046C  2C6E               	goto	u149_21
 17547  046D  2C6F               	goto	u149_20
 17548  046E                     u149_21:	
 17549  046E  2C71               	goto	i1l3995
 17550  046F                     u149_20:	
 17551  046F                     i1l3993:	
 17552                           
 17553                           ;main.c: 411:             clkms -= 100;
 17554  046F  3064               	movlw	100
 17555  0470  02FD               	subwf	_clkms,f	;volatile
 17556  0471                     i1l3995:	
 17557                           
 17558                           ;main.c: 413:         return 1;
 17559  0471  3001               	movlw	1
 17560  0472                     i1l1292:	
 17561  0472  0008               	return
 17562  0473                     __end_ofi1_checkDebounce:	
 17563                           
 17564                           	psect	text94
 17565  06FB                     __ptext94:	
 17566 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17567 ;; Defined at:
 17568 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  dutyValue       2    0[COMMON] unsigned short 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      void 
 17575 ;; Registers used:
 17576 ;;		wreg, status,2, status,0
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17585 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17586 ;;Total ram usage:        4 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; This function calls:
 17589 ;;		Nothing
 17590 ;; This function is called by:
 17591 ;;		_sw1_EXT
 17592 ;;		_ISR_3s
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           
 17597                           ;psect for function i1_PWM6_LoadDutyValue
 17598  06FB                     i1_PWM6_LoadDutyValue:	
 17599  06FB                     i1l3975:	
 17600                           ;incstack = 0
 17601                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17602                           
 17603                           
 17604                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17605  06FB  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17606  06FC  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17607  06FD  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17608  06FE  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17609  06FF  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17610  0700  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17611  0701  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17612  0702  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17613  0703  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17614  0704  0027               	movlb	7	; select bank7
 17615  0705  008D               	movwf	13	;volatile
 17616                           
 17617                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 17618  0706  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17619  0707  3903               	andlw	3
 17620  0708  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17621  0709  3005               	movlw	5
 17622  070A                     u145_25:	
 17623  070A  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 17624  070B  3EFF               	addlw	-1
 17625  070C  1D03               	skipz
 17626  070D  2F0A               	goto	u145_25
 17627  070E  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 17628  070F  008C               	movwf	12	;volatile
 17629  0710                     i1l916:	
 17630  0710  0008               	return
 17631  0711                     __end_ofi1_PWM6_LoadDutyValue:	
 17632  007E                     btemp	set	126	;btemp
 17633  007E                     int$flags	set	126
 17634  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         53
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      56
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3562$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3568	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3567	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3562	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounce

Critical Paths under _main in BANK0

    _main->_recoverData
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_field
    _clock_field->_all_LED
    _clock_field->_checkDebounce
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16927
                                             16 BANK0      4     4      0
                           _ADC_read
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _config_routine
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    6123
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    1221
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    2049
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0     896
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     804
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1153
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0    8441
                                             11 BANK0      3     3      0
                            _all_LED
                      _checkDebounce
                        _clock_field
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _clock_field                                          3     3      0    4232
                                              8 BANK0      3     3      0
                            _all_LED
                      _checkDebounce
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _checkDebounce                                        5     5      0       0
                                              3 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0     828
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     828
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     120
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      22
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              5 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                    i1_checkDebounce
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounce                                      5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounce
     _clock_field
       _all_LED
         _PWM6_LoadDutyValue
       _checkDebounce
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounce
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      63      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      63      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 11:23:27 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0F72  
                             __CFG_CP$OFF 0000                      __size_of_do_I2C_IDLE 0005  
                     _do_I2C_SEND_RESTART 0F3B                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l341 0F5F                                       l442 0FC8  
                                     l530 03F6                                       l347 07D5  
                                     l445 0FAD                                       l439 0637  
                                     l760 0FA5                                       l913 07E2  
                                     l763 0F85                                       l916 0684  
                                     l757 06FA                                       l766 0FBF  
                                     l960 05A0                                       l963 07A9  
                                     l869 05FF                                       l957 0595  
                                     l959 0599                                       l899 0F6B  
                                     l998 06B5                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0EFD  
                         _timer1ReloadVal 004F                                       _seg 0034  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 069E                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0652  
                                    l1041 0F71                   ??_rd2RegCompleteHandler 007A  
                                    l1206 023D                                      l1232 02B5  
                                    l1235 02C2                                      l1244 030F  
                                    l1253 066B                                      l1229 02B4  
                                    l1247 0651                                      l1520 0725  
                                    l1273 0FDD                                      l1281 0FE8  
                                    l1169 00B2                                      l1523 0F1A  
                                    l1292 0434                                      l1276 0FD2  
                                    l1542 0F65                                      l1286 0FF3  
                                    l1470 01C1                                      l4111 0F66  
                                    l1289 040A                                      l4201 0FD3  
                                    l4121 058E                                      l4113 057D  
                                    l4203 0FD5                                      l4211 0FDE  
                                    l4131 059A                                      l4123 058F  
                                    l4115 0585                                      l1492 05E0  
                                    l4109 0F5A                                      l4133 0F6C  
                                    l4205 0FDB                                      l4213 0FE0  
                                    l4221 0FF1                                      l4125 0590  
                                    l4117 0589                                      l5101 0101  
                                    l4151 03F7                                      l4207 0FC9  
                                    l4215 0FE6                                      l4127 0592  
                                    l4119 058D                                      l4231 05C7  
                                    l4223 05C1                                      l1487 078A  
                                    l5111 0118                                      l5103 0103  
                                    l4153 0406                                      l4209 0FCB  
                                    l4217 0FE9                                      l4129 0594  
                                    l4233 05D2                                      l4225 05C3  
                                    l1497 061B                                      l5105 0106  
                                    l5113 011B                                      l4155 0421  
                                    l4219 0FEB                                      l4235 05D6  
                                    l5115 0120                                      l5107 010C  
                                    l4501 07D6                                      l4181 02CB  
                                    l4157 0427                                      l4165 042B  
                                    l4237 05DF                                      l5117 0122  
                                    l5109 0112                      _ADCC_StartConversion 0F9E  
                                    l4431 07C8                                      l4503 07DD  
                                    l4175 0F60                                      l4511 069E  
                                    l4191 02F7                                      l4183 02D3  
                                    l4167 0431                                      l4159 0429  
                                    l5119 0125                                      l5071 00A4  
                                    l4505 06E5                                      l4433 07CB  
                                    l4441 03B4                                      l4521 06AA  
                                    l4513 06A3                                      l4193 02F9  
                                    l4185 02E3                                      l4177 02B7  
                                    l4169 0433                                      l4601 024D  
                                    l5081 00B2                                      l5073 00AB  
                                    l5065 007E                                      l4507 06F7  
                                    l4435 07D3                                      l4451 03BE  
                                    l4443 03B6                                      l4531 05E8  
                                    l4523 06B2                                      l4515 06A4  
                                    l4195 0302                                      l4187 02EC  
                                    l4179 02C0                                      l4611 0262  
                                    l5091 00E4                                      l5083 00B8  
                                    l5075 00AD                                      l5067 00A1  
                                    l4509 06F9                                      l4461 03D3  
                                    l4453 03C1                                      l4445 03B8  
                                    l4437 0FA6                                      l4541 05FC  
                                    l4533 05EA                                      l4525 05E1  
                                    l4517 06A7                                      l4197 0304  
                                    l4189 02EE                                      l4613 0266  
                                    l4605 0256                                      l4621 0284  
                                    l5093 00EA                                      l5085 00C0  
                                    l5077 00AF                                      l5069 00A1  
                                    l4471 03DD                                      l4463 03D5  
                                    l4455 03C3                                      l4447 03BA  
                                    l4439 03AE                                      l4551 071A  
                                    l4543 0711                                      l4535 05F1  
                                    l4527 05E4                                      l4519 06A9  
                                    l4199 030D                                      l4607 025A  
                                    l5095 00F0                                      l5087 00CB  
                                    l5079 00B0                                      l4561 0F7F  
                                    l4481 03E7                                      l4473 03DF  
                                    l4465 03D7                                      l4457 03C5  
                                    l4449 03BC                                      l4553 0722  
                                    l4545 0716                                      l4537 05F3  
                                    l4529 05E6                                      l4801 062B  
                                    l5361 029D                                      l4633 0295  
                                    l4625 0289                                      l4609 025E  
                                    l4617 026C                                      l5097 00F4  
                                    l5089 00D2                                      l4555 0FA0  
                                    l4491 03F3                                      l4483 03EA  
                                    l4475 03E1                                      l4467 03D9  
                                    l4459 03C7                                      l4547 0717  
                                    l4539 05F4                                      l4803 062E  
                                    l4627 028D                                      l4619 027F  
                                    l5355 01FB                                      l4811 0137  
                                    l5099 00FC                                      l4565 0FB7  
                                    l4557 0FA3                                      l4493 0FC0  
                                    l4485 03EC                                      l4477 03E3  
                                    l4469 03DB                                      l4549 0719  
                                    l4805 0631                                      l4629 0291  
                                    l4637 0298                                      l5357 0220  
                                    l4821 01A6                                      l4813 0149  
                                    l4559 0FA4                                      l4831 065B  
                                    l4495 0FC3                                      l4487 03EF  
                                    l4479 03E5                                      l4807 0634  
                                    l4639 02AB                                      l5359 0271  
                                    l4591 023E                                      l4823 01B2  
                                    l4815 018B                                      l4833 0663  
                                    l4497 0FC4                                      l4489 03F1  
                                    l4593 0241                                      l4841 01C2  
                                    l3961 079F                                      l4681 0612  
                                    l4673 0600                                      l4825 01BE  
                                    l4817 018E                                      l4809 012A  
                                    l4827 0652                                      l4499 0FC7  
                                    l4595 0241                                      l4851 01DB  
                                    l4843 01C5                                      l3971 07A7  
                                    l3963 07A3                                      l4683 077B  
                                    l4819 019A                                      l4829 0657  
                                    l4837 0638                                      l3957 066C  
                                    l4597 0244                                      l4861 01F1  
                                    l4853 01E1                                      l4845 01CB  
                                    l3965 07A4                                      l4677 0605  
                                    l4791 061C                                      l4839 0F18  
                                    l4599 0249                                      l4855 01E5  
                                    l4847 01CE                                      l3967 07A5  
                                    l3959 079B                                      l4679 060D  
                                    l4793 061F                                      l4873 0213  
                                    l4857 01E9                                      l4865 01F6  
                                    l4849 01D3                                      l3969 07A6  
                                    l4795 0622                                      l4875 0217  
                                    l4883 021B                                      l4859 01ED  
                                    l4867 0209                                      l4797 0625  
                                    l4885 022E                                      l4869 020E  
                                    l4799 0628                                      l4887 0237  
                                    u2300 00DE                                      _LATA 0016  
                                    u1510 0599                                      u2310 00EA  
                                    _LATB 0017                           __end_of_INT_ISR 0F5A  
                                    u1511 0598                                      u2311 00E9  
                                    _LATC 0018                                      u1600 05DF  
                                    u2320 00F0                                      _LATD 0019  
                                    u1601 05DE                                      u2321 00EF  
                                    _LATE 001A                                      u2330 0101  
                                    u2331 0100                                      u1700 0249  
                                    u2340 0112                                      u1445 067D  
                                    u1701 0248                                      u2341 0111  
                                    u1710 0255                                      u2350 0120  
                                    u1711 0254                                      u2407 0232  
                                    u2351 011F                                      u1560 0406  
                                    u1720 0288                                      u1800 061B  
                                    u2280 00B8                                      u2417 02BB  
                                    u1561 0405                                      u1721 0287  
                                    u1801 061A                                      u2281 00B7  
                                    u1570 0421                                      u1730 02B4  
                                    u2290 00DD                                      _T2PR 028D  
                                    u2427 02C6                                      u1571 0420  
                                    u1731 02B3                                      u2291 00DB  
                                    u1580 0427                                      u1900 0149  
                                    u2437 02D7                                      u1581 0426  
                                    u1901 0148                                      u1910 0663  
                                    u1590 0431                                      u1911 0662  
                                    u2447 02E7                                      u1591 0430  
                                    u1575 041D                                      u1920 01CB  
                                    u2457 02F2                                      u1921 01CA  
                                    u1930 01D3                                      u2467 02FD  
                                    u1931 01D2                                      u1940 01DB  
                                    u2477 0308                                      u1941 01DA  
                                    u1950 0212                                      u2487 0658  
                                    u1951 0211                                      u1960 023D  
                                    u1961 023C                                      u1890 0137  
                                    u1891 0136                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                                      i1l73 07EF  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _clkh 0036  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0035  
                                    _main 007E                                      _tala 0053  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 0055                           _TMR0_StartTimer 0F18  
                                    _pmon 0054                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0EF8  
             _INT_DefaultInterruptHandler 0EF7                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 066C           __end_of_INT_SetInterruptHandler 0F60  
                           _i2c_setBuffer 078B                ??_TMR1_SetInterruptHandler 003C  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 04D3          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0043  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0726  
                            _do_I2C_RESET 0F8E            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0FC9  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                __end_of_i2c1_driver_stop 0F09                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 0F2C                            __CFG_DEBUG$OFF 0000  
                                   i1l103 079A                                     i1l200 04A5  
                                   i1l210 04D2                                     i1l131 0F35  
                                   i1l140 0F44                                     _T2TMR 028C  
                                   i1l125 0F95                                     i1l213 0F26  
                                   i1l134 0F3A                                     i1l303 06CD  
                                   i1l143 0FB6                                     i1l224 057C  
                                   i1l216 0EFF                                     i1l128 0F30  
                                   i1l152 0F49                                     i1l137 0F3F  
                                   i1l146 0F9D                                     _T2RST 0291  
                                   i1l219 0003                                     i1l243 0758  
                                   i1l155 0F4E                                     i1l164 04FE  
                                   i1l172 0363                                     i1l149 0F7E  
                                   i1l334 0F59                                     i1l158 0F53  
                                   i1l344 0EF7                                     i1l264 0747  
                                   i1l169 0347                                     i1l185 0381  
                                   i1l338 07FC                                     i1l602 0EFB  
                                   i1l186 03AD                                     i1l611 0F08  
                                   i1l291 0769                                     i1l620 0F0E  
                                   i1l380 001F                                     i1l614 0F8D  
                                   i1l279 0736                                     i1l383 0032  
                                   i1l608 0F05                                     i1l392 0059  
                                   i1l617 0F0B                                     i1l385 0041  
                                   i1l386 0059                                     i1l378 0013  
                                   i1l635 0F1E                                     i1l387 004D  
                                   i1l629 0F2B                                     i1l902 0EF9  
                                   i1l638 0F22                                     i1l576 0F14  
                                   i1l672 0F17                                     i1l579 0F11  
                                   i1l916 0710                                     i1l883 077A  
                                   i1l896 06E4                                     _OSCEN 0891  
                         __end_of_all_LED 0310                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0006                           _PWM6_Initialize 07D6  
               ?_TMR0_SetInterruptHandler 003A                   ??_ADCC_IsConversionDone 003A  
                        __end_of_TMR0_ISR 07C8                          __end_of_TMR1_ISR 06E5  
                        __end_of_TMR2_ISR 07B9                           __end_of_sw1_EXT 0557  
                         __end_of_cksum_w 078B                           _DATAEE_ReadByte 079B  
                                   _alarm 002F                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 0F8E                                     _cksum 05C1  
                   ?_ADCC_StartConversion 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 0028                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 0600                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 076A                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 05A1  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 012A                   __end_of_TMR2_Initialize 06B6  
             ?_INTERRUPT_InterruptManager 0070                              ?_recoverData 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0F45  
                _TMR2_SetInterruptHandler 0F6C                                    ??_main 0047  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
                               ??_LED_bin 003C                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000C             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0076                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 0026                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 0F1B  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                    __size_of_clock_field 0077                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0EFA  
                                  i1l1038 07B8                                    i1l1152 0542  
                                  i1l1161 0698                                    i1l1162 069D  
                                  i1l1155 0551                                    i1l1261 052A  
                                  i1l1158 0556                                    i1l1265 0FFF  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l4011 0F31                                    _ODCONC 0F50  
                                  i1l1292 0472                                    _ODCOND 0F5B  
                                  i1l4013 0F34                                    _ODCONE 0F66  
                                  i1l1526 0F02                                    i1l4103 06B6  
                                  i1l4023 0F3B                                    i1l4031 0F43  
                                  i1l1289 0448                                    i1l1545 0EF8  
                                  i1l4105 06CC                                    i1l4017 0F36  
                                  i1l4025 0F3E                                    i1l4041 0F4A  
                                  i1l1539 07C7                                    i1l4035 0F28  
                                  i1l4019 0F39                                    i1l4043 0F4D  
                                  i1l4141 053A                                    i1l4037 0F09  
                                  i1l4053 0F86                                    i1l4061 0F0F  
                                  i1l4029 0F40                                    i1l4301 0F7D  
                                  i1l4143 053B                                    i1l4135 052B  
                                  i1l4039 0F1B                                    i1l4063 0EFE  
                                  i1l4071 0748                                    i1l4047 0F4F  
                                  i1l4311 04D3                                    i1l4145 0546  
                                  i1l4137 0533                                    i1l4073 0750  
                                  i1l4081 073F                                    i1l4057 0F0C  
                                  i1l4401 0476                                    i1l4305 0F45  
                                  i1l4049 0F52                                    i1l4313 04D5  
                                  i1l4241 0F12                                    i1l5041 0017  
                                  i1l4147 054B                                    i1l4139 0539  
                                  i1l4067 0002                                    i1l4075 0757  
                                  i1l4083 0746                                    i1l4091 0735  
                                  i1l4411 047F                                    i1l4307 0F48  
                                  i1l4315 04DA                                    i1l5051 0036  
                                  i1l5043 001B                                    i1l5035 0006  
                                  i1l4149 054F                                    i1l4173 0F00  
                                  i1l4405 047A                                    i1l4325 04E2  
                                  i1l4341 031C                                    i1l4333 0310  
                                  i1l5061 0055                                    i1l5053 003A  
                                  i1l5045 0023                                    i1l5037 000B  
                                  i1l4095 0759                                    i1l4079 0737  
                                  i1l4087 0726                                    i1l4407 047D  
                                  i1l4263 0F8E                                    i1l4319 04DE  
                                  i1l4351 0324                                    i1l5055 0045  
                                  i1l5047 0027                                    i1l5039 000F  
                                  i1l4097 0761                                    i1l4089 072E  
                                  i1l4417 0483                                    i1l4265 0F91  
                                  i1l4273 0F2C                                    i1l4281 0FAE  
                                  i1l4353 0349                                    i1l4345 0320  
                                  i1l4337 0318                                    i1l4425 0F15  
                                  i1l5057 0049                                    i1l5049 002B  
                                  i1l4427 07F0                                    i1l4099 0768  
                                  i1l4267 0F93                                    i1l4275 0F2E  
                                  i1l4283 0FB0                                    i1l4291 0F98  
                                  i1l4355 0355                                    i1l4371 0372  
                                  i1l5059 0051                                    i1l4429 07F7  
                                  i1l4269 0F94                                    i1l4277 0F2F  
                                  i1l4285 0FB5                                    i1l4293 0F9C  
                                  i1l4357 0360                                    i1l4381 0383  
                                  i1l4373 037C                                    i1l4359 0362  
                                  i1l4391 038B                                    i1l4375 037F  
                                  i1l4367 0364                                    u220_20 0027  
                                  i1l4289 0F96                                    i1l4297 0F78  
                                  i1l4385 0387                                    i1l4369 036E  
                                  u220_21 0026                                    i1l4571 076F  
                                  i1l4651 0505                                    i1l4299 0F7A  
                                  i1l5363 039F                                    i1l4581 0778  
                                  i1l4573 0770                                    i1l4661 051F  
                                  i1l4653 0510                                    i1l3941 056F  
                                  i1l5365 0339                                    i1l4583 0685  
                                  i1l4575 0772                                    i1l4663 0525  
                                  i1l4655 0514                                    i1l4671 0FFE  
                                  i1l3951 0F03                                    i1l3943 07E3  
                                  i1l4399 0473                                    i1l5367 04F6  
                                  u221_20 002B                                    i1l4585 068C  
                                  i1l4577 0774                                    i1l4569 076A  
                                  i1l4665 0529                                    i1l4657 051A  
                                  i1l4649 04FF                                    i1l3953 0F06  
                                  i1l3945 078C                                    i1l3937 0558  
                                  i1l5369 0497                                    i1l4761 04B5  
                                  u221_21 002A                                    i1l4587 0693  
                                  i1l4771 07B9                                    i1l4579 0776  
                                  i1l4659 051E                                    i1l4667 0FF4  
                                  i1l3947 0791                                    i1l3939 055E  
                                  i1l3955 0F1F                                    i1l4763 04BB  
                                  i1l4755 04A6                                    i1l3981 045F  
                                  i1l4589 069B                                    i1l4773 07BB  
                                  i1l4781 06D8                                    i1l4669 0FF8  
                                  i1l3949 0799                                    i1l4757 04A9  
                                  i1l4765 0F23                                    i1l3975 06FB  
                                  i1l3983 0465                                    i1l3991 0469  
                                  i1l4767 0F54                                    i1l4775 07C2  
                                  i1l4783 06DF                                    i1l4759 04AE  
                                  u142_20 055E                                    u222_20 0036  
                                  i1l3993 046F                                    i1l3985 0467  
                                  i1l3977 0435                                    i1l4769 0F56  
                                  i1l4777 06CE                                    i1l4785 07AA  
                                  u142_21 055D                                    u222_21 0035  
                                  i1l3995 0471                                    i1l3979 0444  
                                  i1l4779 06D0                                    i1l4787 07AC  
                                  i1l4789 07B3                                    i1l3999 0EFC  
                                  u143_20 0791                                    u223_20 003A  
                                  u215_20 000B                                    u143_21 0790  
                                  u223_21 0039                                    u215_21 000A  
                                  u152_20 0533                                    u224_20 0045  
                                  u216_20 000F                                    u152_21 0532  
                                  u224_21 0044                                    u216_21 000E  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u153_20 0539  
                                  u225_20 0049                                    u217_20 0017  
                                  u153_21 0538                                    u225_21 0048  
                                  u217_21 0016                                    u145_25 070A  
                                  u146_20 0444                                    u154_20 0546  
                                  u226_20 0051                                    u218_20 001B  
                                  u146_21 0443                                    u154_21 0545  
                                  u226_21 0050                                    u218_21 001A  
                                  u147_20 045F                                    u155_20 054B  
                                  u227_20 0055                                    u219_20 0023  
                                  u147_21 045E                                    u155_21 054A  
                                  u227_21 0054                                    u219_21 0022  
                                  u147_25 045B                                    u148_20 0465  
                                  u164_20 0317                                    u148_21 0464  
                                  u164_21 0316                                    u149_20 046F  
                                  u165_20 0360                                    u149_21 046E  
                                  u165_21 035F                                    u174_20 0505  
                                  u166_20 037C                                    u174_21 0504  
                                  u166_21 037B                                    u167_20 07F7  
                                  u175_20 050E                                    u167_21 07F6  
                                  u175_21 050B                                    u168_20 076F  
                                  u184_20 04AE                                    u168_21 076E  
                                  u184_21 04AD                                    _INTPPS 0E90  
                                  u176_24 0510                                    u169_20 068C  
                                  u177_20 051A                                    u185_20 04B5  
                                  u169_21 068B                                    u177_21 0519  
                                  u185_21 04B4                                    u186_20 07C2  
                                  u178_20 0525                                    u186_21 07C1  
                                  u178_21 0524                                    u187_20 06DF  
                                  u179_20 0FFE                                    u187_21 06DE  
                                  u179_21 0FFD                                    u188_20 07B3  
                                  u188_21 07B2                                    _OSCFRQ 0893  
                                  _ISR_3s 0685                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0037  
              ??_ADCC_GetConversionResult 003C                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0711                     _i2c1_driver_getRXData 0F0C  
                        __end_of_mod1_LED 0FDE                          __end_of_mod2_LED 0FD3  
                        __end_of_mod3_LED 0FE9                          __end_of_mod4_LED 0FF4  
    __end_of_TMR1_DefaultInterruptHandler 0EFA     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0EF9                              _CCPTMRS1bits 021F  
                __size_ofi1_checkDebounce 003E               __end_of_do_I2C_DO_NACK_STOP 0F4F  
     __end_of_i2c_setDataCompleteCallback 07F0               _i2c_setDataCompleteCallback 07E3  
   __end_of_i2c1_driver_clearBusCollision 0F18    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0F15                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                 ??_all_LED 003E  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 07E3  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 003E  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 07AA  
                               ??_sw1_EXT 0075                                 ??_cksum_w 0044  
                         _ADCC_Initialize 06E5               __end_of_i2c1_driver_sendACK 0F1F  
                          _PMD_Initialize 0FA6            __end_of_do_I2C_DO_ADDRESS_NACK 04FF  
             __end_of_i2c1_driver_restart 0F06                              ?_returnReset 0079  
                               ?_ADC_read 003C                    ??_ADCC_StartConversion 003A  
             __end_of_i2c1_driver_startRX 0F0C          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 003A  TMR2_SetInterruptHandler@InterruptHandler 003A  
TMR1_SetInterruptHandler@InterruptHandler 003A   INT_SetInterruptHandler@InterruptHandler 003A  
                 __end_of_TMR1_WriteTimer 077B                          ??_config_routine 0042  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 061C  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0F40                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                   _rdBlkRegCompleteHandler 06B6  
                          __pcstackCOMMON 0070                              __pidataBANK0 07FD  
                     ??_SYSTEM_Initialize 003C                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 05E1  
                        _DATAEE_WriteByte 057D                          ?_TMR2_Initialize 0070  
                            LED_bin@value 003A                            ??_INT_CallBack 0076  
                  __end_of_PMD_Initialize 0FAE               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 003E               ADCC_StartConversion@channel 003A  
                          setCallBack@idx 0074                                   ??_cksum 003C  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0F4F  
               __end_of_SYSTEM_Initialize 0638                         clock_field@select 0040  
                          _mssp1_clearIRQ 0F12                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0737  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 076A  
                   _rd1RegCompleteHandler 0737                    ?_i2c1_driver_getRXData 0070  
                   _wr1RegCompleteHandler 0748              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
        __end_of_TMR0_SetInterruptHandler 0F66                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 06FB                __end_of_PWM6_LoadDutyValue 0685  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                    __size_of_checkDebounce 003E  
          ?_i2c1_driver_clearBusCollision 0070                         ??i1_checkDebounce 0070  
                        ?_DATAEE_ReadByte 003A                         __end_of_do_I2C_RX 03AE  
                       __end_of_do_I2C_TX 0364                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0638                          _handler_clock_ms 0FF4  
                                 _INT_ISR 0F54                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 06FB  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0F15                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0F86  
                 ??_do_I2C_SEND_ADR_WRITE 0071                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0F27  
                    DATAEE_WriteByte@bAdd 0040                        _i2c1_driver_i2cISR 002A  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 04A6  
               ??_rdBlkRegCompleteHandler 007A                        _i2c1_driver_isNACK 0F86  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 003C  
                    __CFG_SCANE$available 0000                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 02B5                       ?_i2c1_driver_isNACK 0070  
                                 __ptext1 012A                                   __ptext2 0600  
                                 __ptext3 077B                                   __ptext4 05C1  
                                 __ptext5 079B                                   __ptext6 057D  
                                 __ptext7 01C2                                   __ptext8 023E  
                                 __ptext9 0FE9                       __end_of_do_I2C_IDLE 0F31  
                     __end_of_do_I2C_RCEN 0F7F                                   _sw1_EXT 052B  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 077B  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0FC0  
                                 _last_ms 0033                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0F40                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 0024                               reset_recv@i 0044  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                  ??_PIN_MANAGER_Initialize 003A  
               ?_TMR1_SetInterruptHandler 003A                                 _T2HLTbits 028F  
                                 _nreg_pt 002E                   _INT_SetInterruptHandler 0F5A  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 003E  
                              ??_mod2_LED 003E                                ??_mod3_LED 003E  
                              ??_mod4_LED 003E                  _do_I2C_SEND_RESTART_READ 0F31  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0F73  
                    __size_of_returnReset 0002                      end_of_initialization 007A  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
                           _checkDebounce 03F7                 __size_of_i2c_restartWrite 0002  
            __end_of_i2c1_driver_sendNACK 0F23                    ?_rd1RegCompleteHandler 0079  
                    __end_of_INT_CallBack 07FD                    ?_wr1RegCompleteHandler 0079  
            __end_of_i2c1_driver_resetBus 0EFC                                _reset_recv 0600  
               _do_I2C_SEND_RESTART_WRITE 0F36                          ?_ADCC_Initialize 0070  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0EFE  
                _TMR0_SetInterruptHandler 0F60                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 06CE  
                __end_of_do_I2C_SEND_STOP 0F45                      __CFG_WDTCCS$HFINTOSC 0000  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                           ??_clock_field 003F                               returnStop@p 0079  
                        __CFG_FEXTOSC$OFF 0000                         __size_of_ADC_read 001A  
                __end_of_DATAEE_WriteByte 05A1                            ?_checkDebounce 0070  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 069E  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0F00  
                             _do_I2C_IDLE 0F2C                               _do_I2C_RCEN 0F78  
    __end_of_TMR2_DefaultInterruptHandler 0EFB     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0EFA                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 003C              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 003A                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                     _i2c_busCollisionISR 0F23                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003                       __end_of_clock_field 02B5  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 003A  
                   __end_of_i2c_setBuffer 079B              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0F03                  __end_of_handler_clock_ms 1000  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                           i1_checkDebounce 0435  
                    __end_of_mssp1_setIRQ 0F12                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 003A                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0053  
              __end_of_EXT_INT_Initialize 07D6             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0F54  
                    _i2c1_driver_sendNACK 0F1F                                  ?_LED_bin 003A  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0EFB                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0037                        _PWM6_LoadDutyValue 066C  
                __size_of_TMR2_Initialize 0018                                 _do_I2C_RX 0364  
                               _do_I2C_TX 0310                     __size_of_INT_CallBack 000D  
                         ??_checkDebounce 003A            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0F9E                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 003A  
                        _i2c_restartWrite 0EFC                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0473  
                   _TMR0_InterruptHandler 0049                             ??_setCallBack 0073  
                               __pnvBANK0 0049                     _rd2RegCompleteHandler 0726  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 05C1  
                  _PIN_MANAGER_Initialize 03AE                     _wr2RegCompleteHandler 0759  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 007C  
        __end_of_TMR1_SetInterruptHandler 0F6C                            ??_do_I2C_RESET 0070  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 002C  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0F4A  
                    ??_PWM6_LoadDutyValue 003C                             ??_recoverData 0046  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 07F0  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                  _ADC_read 0652  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                               _clock_field 023E  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                               _level_bin 0022                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0F7F  
                 __end_ofi1_checkDebounce 0473                         ??_TMR0_Initialize 003C  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0F72                                  _PIE0bits 0716  
                       _handler_clock_hms 04FF                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0020  
              ??_TMR0_SetInterruptHandler 003C                                  _PIR0bits 070C  
                             _config_mode 0030                                  _PIR3bits 070F  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 07B9                                  _TMR1_ISR 06CE  
                                _TMR2_ISR 07AA              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 057D  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 003C  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                             _bounce_time 0032                         ?_do_I2C_SEND_STOP 0070  
                                _WPUBbits 0F44      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0006  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 003A  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 0042  
                     __end_of_recoverData 01C2         __end_of_do_I2C_SEND_RESTART_WRITE 0F3B  
                        __size_of_INT_ISR 0006                   __end_of_do_I2C_TX_EMPTY 04A6  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0040  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 052B                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 003C                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 0043                       _do_I2C_DO_NACK_STOP 0F4A  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0079  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 0FC0  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                 ??_OSCILLATOR_Initialize 003A                         ??_TMR0_StartTimer 003A  
                     _i2c1_driver_sendACK 0F1B           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0F03                  _TMR1_SetInterruptHandler 0F66  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0F09  
            __end_of_do_I2C_SEND_ADR_READ 0FB7                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 004D                          __size_of_sw1_EXT 002C  
                        __size_of_cksum_w 0010                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                              _mssp1_setIRQ 0F0F  
                             ??_do_I2C_RX 007A                               ??_do_I2C_TX 007A  
                                __ptext10 0FDE                                  __ptext11 0FC9  
                                __ptext20 05E1                                  __ptext12 0FD3  
                                __ptext21 0F66                                  __ptext13 03F7  
                              _T1GCONbits 020F                                  __ptext30 06E5  
                                __ptext22 0711                                  __ptext14 02B5  
                                __ptext31 0638                                  __ptext23 0F60  
                                __ptext15 066C                                  __ptext40 0F12  
                                __ptext32 0652                                  __ptext24 07D6  
                                __ptext16 0F18                                  __ptext41 0364  
                                __ptext33 0F9E                                  __ptext25 0FA6  
                                __ptext17 061C                                  __ptext50 0F40  
                                __ptext42 0310                                  __ptext34 0F7F  
                                __ptext26 03AE                                  __ptext18 069E  
                                __ptext51 0F3B                                  __ptext43 04D3  
                                __ptext35 0FB7                                  __ptext27 0FC0  
                                __ptext19 0F6C                                  __ptext60 0F0C  
                                __ptext52 0F36                                  __ptext44 0F4F  
                                __ptext28 07C8                                  __ptext61 0F1F  
                                __ptext53 0F31                                  __ptext45 0F4A  
                                __ptext37 0F23                                  __ptext29 0F5A  
                                __ptext70 0EFC                                  __ptext62 0EFB  
                                __ptext54 0F2C                                  __ptext46 0F45  
                                __ptext38 0F15                                  __ptext71 0759  
                                __ptext63 0F09                                  __ptext55 0F8E  
                                __ptext47 0F78                                  __ptext39 04A6  
                                __ptext80 0FF4                                  __ptext72 07E3  
                                __ptext64 06B6                                  __ptext56 0473  
                                __ptext48 0F96                                  __ptext81 06CE  
                                __ptext73 0557                                  __ptext65 0726  
                                __ptext57 0F0F                                  __ptext49 0FAE  
                                __ptext90 07F0                                  __ptext82 0EF9  
                                __ptext74 078B                                  __ptext66 0737  
                                __ptext58 0F86                                  __ptext91 0EF7  
                                __ptext83 04FF                                  __ptext75 0F06  
                                __ptext67 0748                                  __ptext59 0F27  
                                __ptext92 052B                                  __ptext84 076A  
                                __ptext76 0F03                                  __ptext68 0002  
                                __ptext93 0435                                  __ptext85 07B9  
                                __ptext77 0F1B                                  __ptext69 0EFE  
                                __ptext94 06FB                                  __ptext86 0685  
                                __ptext78 07AA                                  __ptext87 0EF8  
                                __ptext79 0EFA                                  __ptext88 0F00  
                                __ptext89 0F54                                  _mod1_LED 0FD3  
                            _SSP1CON1bits 0190                                  _mod2_LED 0FC9  
                            _SSP1CON2bits 0191                                  _mod3_LED 0FDE  
                                _mod4_LED 0FE9                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0F96  
             DATAEE_WriteByte@GIEBitValue 0043                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                          ?i1_checkDebounce 0070  
                       ??_PWM6_Initialize 003A                          _i2c1_driver_stop 0F06  
                           __size_of_main 00AC                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 0F0F  
    __end_of_TMR0_DefaultInterruptHandler 0EF9     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0EF8                         ??_DATAEE_ReadByte 003C  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0557  
                            ??_reset_recv 0044                         ?_handler_clock_ms 0070  
                                _set_mode 0031                            _config_routine 01C2  
            __end_of_ADCC_StartConversion 0FA6                                  int$flags 007E  
                      ??_handler_clock_ms 0070        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 003D  
        __end_of_do_I2C_SEND_RESTART_READ 0F36                              ??_returnStop 007A  
                __end_of_i2c_restartWrite 0EFE                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 012A                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 0051                        __end_of_reset_recv 061C  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 07C8  
                        ?_do_I2C_TX_EMPTY 0070                    _do_I2C_DO_ADDRESS_NACK 04D3  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 002C  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0F00                    __end_of_config_routine 023E  
           ?_TMR0_DefaultInterruptHandler 0070                    wr2RegCompleteHandler@p 0079  
                ?_INT_SetInterruptHandler 003A                  _ADCC_GetConversionResult 0FB7  
                           __pstringtext1 05A1                      ??_EXT_INT_Initialize 003C  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0711                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002                              ?_clock_field 0070  
             PWM6_LoadDutyValue@dutyValue 003A            __end_of_PIN_MANAGER_Initialize 03F7  
                       ??_ADCC_Initialize 003A                     __end_of_checkDebounce 0435  
             __end_of_i2c_busCollisionISR 0F27            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0748            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0759                     _TMR2_InterruptHandler 004B  
                   _do_I2C_SEND_ADR_WRITE 0F96                      _do_I2C_SEND_ADR_READ 0FAE  
                         ?_config_routine 0070                           _TMR1_Initialize 05E1  
