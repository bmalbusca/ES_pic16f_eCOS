

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 02 20:16:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	bitnvBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,delta=2
    97                           	psect	text83,local,class=CODE,merge=1,delta=2
    98                           	psect	text84,local,class=CODE,merge=1,delta=2
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	dabs	1,0x7E,2
   103  0000                     
   104                           ; Version 2.10
   105                           ; Generated 31/07/2019 GMT
   106                           ; 
   107                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC16F18875 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001C                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  008C                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0110                     	;# 
   198  0110                     	;# 
   199  0111                     	;# 
   200  0112                     	;# 
   201  0112                     	;# 
   202  0113                     	;# 
   203  0114                     	;# 
   204  0114                     	;# 
   205  0115                     	;# 
   206  0116                     	;# 
   207  0116                     	;# 
   208  0117                     	;# 
   209  0119                     	;# 
   210  0119                     	;# 
   211  0119                     	;# 
   212  011A                     	;# 
   213  011A                     	;# 
   214  011A                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011B                     	;# 
   218  011B                     	;# 
   219  011B                     	;# 
   220  011C                     	;# 
   221  011C                     	;# 
   222  011C                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  011D                     	;# 
   226  011E                     	;# 
   227  011E                     	;# 
   228  011E                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  011F                     	;# 
   232  011F                     	;# 
   233  011F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  018E                     	;# 
   237  018F                     	;# 
   238  0190                     	;# 
   239  0191                     	;# 
   240  0192                     	;# 
   241  0196                     	;# 
   242  0197                     	;# 
   243  0198                     	;# 
   244  0199                     	;# 
   245  019A                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  020C                     	;# 
   249  020C                     	;# 
   250  020D                     	;# 
   251  020E                     	;# 
   252  020F                     	;# 
   253  020F                     	;# 
   254  0210                     	;# 
   255  0210                     	;# 
   256  0211                     	;# 
   257  0211                     	;# 
   258  0212                     	;# 
   259  0212                     	;# 
   260  0213                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0216                     	;# 
   265  0216                     	;# 
   266  0217                     	;# 
   267  0217                     	;# 
   268  0218                     	;# 
   269  0218                     	;# 
   270  0219                     	;# 
   271  021A                     	;# 
   272  021B                     	;# 
   273  021B                     	;# 
   274  021C                     	;# 
   275  021C                     	;# 
   276  021D                     	;# 
   277  021D                     	;# 
   278  021E                     	;# 
   279  021F                     	;# 
   280  028C                     	;# 
   281  028C                     	;# 
   282  028D                     	;# 
   283  028D                     	;# 
   284  028E                     	;# 
   285  028F                     	;# 
   286  0290                     	;# 
   287  0290                     	;# 
   288  0291                     	;# 
   289  0292                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0296                     	;# 
   297  0297                     	;# 
   298  0298                     	;# 
   299  0298                     	;# 
   300  0299                     	;# 
   301  0299                     	;# 
   302  029A                     	;# 
   303  029B                     	;# 
   304  029C                     	;# 
   305  029C                     	;# 
   306  029D                     	;# 
   307  030C                     	;# 
   308  030C                     	;# 
   309  030D                     	;# 
   310  030E                     	;# 
   311  030F                     	;# 
   312  0310                     	;# 
   313  0310                     	;# 
   314  0311                     	;# 
   315  0312                     	;# 
   316  0313                     	;# 
   317  0314                     	;# 
   318  0314                     	;# 
   319  0315                     	;# 
   320  0316                     	;# 
   321  0317                     	;# 
   322  0318                     	;# 
   323  0318                     	;# 
   324  0319                     	;# 
   325  031A                     	;# 
   326  031B                     	;# 
   327  031C                     	;# 
   328  031C                     	;# 
   329  031D                     	;# 
   330  031E                     	;# 
   331  031F                     	;# 
   332  038C                     	;# 
   333  038C                     	;# 
   334  038D                     	;# 
   335  038E                     	;# 
   336  0390                     	;# 
   337  0390                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  040C                     	;# 
   341  040D                     	;# 
   342  040E                     	;# 
   343  040F                     	;# 
   344  0410                     	;# 
   345  0411                     	;# 
   346  0416                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  0418                     	;# 
   350  0418                     	;# 
   351  0419                     	;# 
   352  041A                     	;# 
   353  041A                     	;# 
   354  041B                     	;# 
   355  041C                     	;# 
   356  041C                     	;# 
   357  041D                     	;# 
   358  041E                     	;# 
   359  041F                     	;# 
   360  048C                     	;# 
   361  048C                     	;# 
   362  048D                     	;# 
   363  048E                     	;# 
   364  048F                     	;# 
   365  048F                     	;# 
   366  0490                     	;# 
   367  0491                     	;# 
   368  0492                     	;# 
   369  0492                     	;# 
   370  0493                     	;# 
   371  0494                     	;# 
   372  0495                     	;# 
   373  0495                     	;# 
   374  0496                     	;# 
   375  0497                     	;# 
   376  0498                     	;# 
   377  0499                     	;# 
   378  049A                     	;# 
   379  049B                     	;# 
   380  049C                     	;# 
   381  049D                     	;# 
   382  050C                     	;# 
   383  050C                     	;# 
   384  050D                     	;# 
   385  050E                     	;# 
   386  050F                     	;# 
   387  050F                     	;# 
   388  0510                     	;# 
   389  0511                     	;# 
   390  0512                     	;# 
   391  0512                     	;# 
   392  0513                     	;# 
   393  0514                     	;# 
   394  0515                     	;# 
   395  0515                     	;# 
   396  0516                     	;# 
   397  0517                     	;# 
   398  0518                     	;# 
   399  0519                     	;# 
   400  051A                     	;# 
   401  051B                     	;# 
   402  051C                     	;# 
   403  051D                     	;# 
   404  058C                     	;# 
   405  058C                     	;# 
   406  058D                     	;# 
   407  058E                     	;# 
   408  058F                     	;# 
   409  058F                     	;# 
   410  0590                     	;# 
   411  0591                     	;# 
   412  0592                     	;# 
   413  0593                     	;# 
   414  060C                     	;# 
   415  060D                     	;# 
   416  060E                     	;# 
   417  060F                     	;# 
   418  0610                     	;# 
   419  0611                     	;# 
   420  0612                     	;# 
   421  0613                     	;# 
   422  0614                     	;# 
   423  0616                     	;# 
   424  0617                     	;# 
   425  0618                     	;# 
   426  0619                     	;# 
   427  061A                     	;# 
   428  061B                     	;# 
   429  061C                     	;# 
   430  061D                     	;# 
   431  061E                     	;# 
   432  068C                     	;# 
   433  068D                     	;# 
   434  068E                     	;# 
   435  068F                     	;# 
   436  0690                     	;# 
   437  0691                     	;# 
   438  0692                     	;# 
   439  0693                     	;# 
   440  0694                     	;# 
   441  070C                     	;# 
   442  070D                     	;# 
   443  070E                     	;# 
   444  070F                     	;# 
   445  0710                     	;# 
   446  0711                     	;# 
   447  0712                     	;# 
   448  0713                     	;# 
   449  0714                     	;# 
   450  0716                     	;# 
   451  0717                     	;# 
   452  0718                     	;# 
   453  0719                     	;# 
   454  071A                     	;# 
   455  071B                     	;# 
   456  071C                     	;# 
   457  071D                     	;# 
   458  071E                     	;# 
   459  0796                     	;# 
   460  0797                     	;# 
   461  0798                     	;# 
   462  0799                     	;# 
   463  079A                     	;# 
   464  079B                     	;# 
   465  080C                     	;# 
   466  080D                     	;# 
   467  080E                     	;# 
   468  080F                     	;# 
   469  0810                     	;# 
   470  0811                     	;# 
   471  0812                     	;# 
   472  0813                     	;# 
   473  0814                     	;# 
   474  081A                     	;# 
   475  081B                     	;# 
   476  081C                     	;# 
   477  081D                     	;# 
   478  081E                     	;# 
   479  081F                     	;# 
   480  088C                     	;# 
   481  088D                     	;# 
   482  088E                     	;# 
   483  088F                     	;# 
   484  0890                     	;# 
   485  0891                     	;# 
   486  0892                     	;# 
   487  0893                     	;# 
   488  0895                     	;# 
   489  0896                     	;# 
   490  0897                     	;# 
   491  0898                     	;# 
   492  0899                     	;# 
   493  089A                     	;# 
   494  089B                     	;# 
   495  090C                     	;# 
   496  090E                     	;# 
   497  090F                     	;# 
   498  091F                     	;# 
   499  091F                     	;# 
   500  098F                     	;# 
   501  098F                     	;# 
   502  0990                     	;# 
   503  0991                     	;# 
   504  0992                     	;# 
   505  0993                     	;# 
   506  0994                     	;# 
   507  0995                     	;# 
   508  0996                     	;# 
   509  0997                     	;# 
   510  0E0F                     	;# 
   511  0E10                     	;# 
   512  0E11                     	;# 
   513  0E12                     	;# 
   514  0E13                     	;# 
   515  0E14                     	;# 
   516  0E15                     	;# 
   517  0E16                     	;# 
   518  0E17                     	;# 
   519  0E18                     	;# 
   520  0E19                     	;# 
   521  0E1A                     	;# 
   522  0E1B                     	;# 
   523  0E1C                     	;# 
   524  0E1D                     	;# 
   525  0E1E                     	;# 
   526  0E1F                     	;# 
   527  0E20                     	;# 
   528  0E21                     	;# 
   529  0E22                     	;# 
   530  0E23                     	;# 
   531  0E24                     	;# 
   532  0E25                     	;# 
   533  0E26                     	;# 
   534  0E27                     	;# 
   535  0E28                     	;# 
   536  0E29                     	;# 
   537  0E2A                     	;# 
   538  0E2B                     	;# 
   539  0E2C                     	;# 
   540  0E2D                     	;# 
   541  0E2E                     	;# 
   542  0E2F                     	;# 
   543  0E30                     	;# 
   544  0E31                     	;# 
   545  0E32                     	;# 
   546  0E33                     	;# 
   547  0E34                     	;# 
   548  0E35                     	;# 
   549  0E36                     	;# 
   550  0E37                     	;# 
   551  0E8F                     	;# 
   552  0E90                     	;# 
   553  0E91                     	;# 
   554  0E92                     	;# 
   555  0E93                     	;# 
   556  0E94                     	;# 
   557  0E95                     	;# 
   558  0E96                     	;# 
   559  0E97                     	;# 
   560  0E9C                     	;# 
   561  0E9D                     	;# 
   562  0E9E                     	;# 
   563  0EA1                     	;# 
   564  0EA2                     	;# 
   565  0EA3                     	;# 
   566  0EA4                     	;# 
   567  0EA5                     	;# 
   568  0EA9                     	;# 
   569  0EAA                     	;# 
   570  0EAB                     	;# 
   571  0EAC                     	;# 
   572  0EB1                     	;# 
   573  0EB2                     	;# 
   574  0EB3                     	;# 
   575  0EB8                     	;# 
   576  0EB9                     	;# 
   577  0EBA                     	;# 
   578  0EBB                     	;# 
   579  0EBC                     	;# 
   580  0EBD                     	;# 
   581  0EBE                     	;# 
   582  0EC3                     	;# 
   583  0EC5                     	;# 
   584  0EC6                     	;# 
   585  0EC7                     	;# 
   586  0EC8                     	;# 
   587  0EC9                     	;# 
   588  0ECA                     	;# 
   589  0ECB                     	;# 
   590  0ECC                     	;# 
   591  0F10                     	;# 
   592  0F11                     	;# 
   593  0F12                     	;# 
   594  0F13                     	;# 
   595  0F14                     	;# 
   596  0F15                     	;# 
   597  0F16                     	;# 
   598  0F17                     	;# 
   599  0F18                     	;# 
   600  0F19                     	;# 
   601  0F1A                     	;# 
   602  0F1B                     	;# 
   603  0F1C                     	;# 
   604  0F1D                     	;# 
   605  0F1E                     	;# 
   606  0F1F                     	;# 
   607  0F20                     	;# 
   608  0F21                     	;# 
   609  0F22                     	;# 
   610  0F23                     	;# 
   611  0F24                     	;# 
   612  0F25                     	;# 
   613  0F26                     	;# 
   614  0F27                     	;# 
   615  0F28                     	;# 
   616  0F29                     	;# 
   617  0F2A                     	;# 
   618  0F2B                     	;# 
   619  0F2C                     	;# 
   620  0F2D                     	;# 
   621  0F2E                     	;# 
   622  0F2F                     	;# 
   623  0F30                     	;# 
   624  0F31                     	;# 
   625  0F32                     	;# 
   626  0F38                     	;# 
   627  0F39                     	;# 
   628  0F3A                     	;# 
   629  0F3B                     	;# 
   630  0F3C                     	;# 
   631  0F3D                     	;# 
   632  0F3E                     	;# 
   633  0F3F                     	;# 
   634  0F40                     	;# 
   635  0F41                     	;# 
   636  0F43                     	;# 
   637  0F44                     	;# 
   638  0F45                     	;# 
   639  0F46                     	;# 
   640  0F47                     	;# 
   641  0F48                     	;# 
   642  0F49                     	;# 
   643  0F4A                     	;# 
   644  0F4B                     	;# 
   645  0F4C                     	;# 
   646  0F4E                     	;# 
   647  0F4F                     	;# 
   648  0F50                     	;# 
   649  0F51                     	;# 
   650  0F52                     	;# 
   651  0F53                     	;# 
   652  0F54                     	;# 
   653  0F55                     	;# 
   654  0F56                     	;# 
   655  0F57                     	;# 
   656  0F59                     	;# 
   657  0F5A                     	;# 
   658  0F5B                     	;# 
   659  0F5C                     	;# 
   660  0F5D                     	;# 
   661  0F61                     	;# 
   662  0F62                     	;# 
   663  0F64                     	;# 
   664  0F65                     	;# 
   665  0F66                     	;# 
   666  0F67                     	;# 
   667  0F68                     	;# 
   668  0F69                     	;# 
   669  0F6A                     	;# 
   670  0F6B                     	;# 
   671  0F6C                     	;# 
   672  0F6D                     	;# 
   673  0FE4                     	;# 
   674  0FE5                     	;# 
   675  0FE6                     	;# 
   676  0FE7                     	;# 
   677  0FE8                     	;# 
   678  0FE9                     	;# 
   679  0FEA                     	;# 
   680  0FEB                     	;# 
   681  0FED                     	;# 
   682  0FEE                     	;# 
   683  0FEF                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0008                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  000F                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0017                     	;# 
   708  0018                     	;# 
   709  0019                     	;# 
   710  001A                     	;# 
   711  001C                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001D                     	;# 
   715  001E                     	;# 
   716  001F                     	;# 
   717  008C                     	;# 
   718  008C                     	;# 
   719  008D                     	;# 
   720  008E                     	;# 
   721  008E                     	;# 
   722  008F                     	;# 
   723  0090                     	;# 
   724  0090                     	;# 
   725  0091                     	;# 
   726  0093                     	;# 
   727  0094                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  010C                     	;# 
   739  010D                     	;# 
   740  010E                     	;# 
   741  010E                     	;# 
   742  010F                     	;# 
   743  0110                     	;# 
   744  0110                     	;# 
   745  0111                     	;# 
   746  0112                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0114                     	;# 
   751  0115                     	;# 
   752  0116                     	;# 
   753  0116                     	;# 
   754  0117                     	;# 
   755  0119                     	;# 
   756  0119                     	;# 
   757  0119                     	;# 
   758  011A                     	;# 
   759  011A                     	;# 
   760  011A                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011B                     	;# 
   764  011B                     	;# 
   765  011B                     	;# 
   766  011C                     	;# 
   767  011C                     	;# 
   768  011C                     	;# 
   769  011D                     	;# 
   770  011D                     	;# 
   771  011D                     	;# 
   772  011E                     	;# 
   773  011E                     	;# 
   774  011E                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  011F                     	;# 
   778  011F                     	;# 
   779  011F                     	;# 
   780  018C                     	;# 
   781  018D                     	;# 
   782  018E                     	;# 
   783  018F                     	;# 
   784  0190                     	;# 
   785  0191                     	;# 
   786  0192                     	;# 
   787  0196                     	;# 
   788  0197                     	;# 
   789  0198                     	;# 
   790  0199                     	;# 
   791  019A                     	;# 
   792  019B                     	;# 
   793  019C                     	;# 
   794  020C                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  020E                     	;# 
   798  020F                     	;# 
   799  020F                     	;# 
   800  0210                     	;# 
   801  0210                     	;# 
   802  0211                     	;# 
   803  0211                     	;# 
   804  0212                     	;# 
   805  0212                     	;# 
   806  0213                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0216                     	;# 
   811  0216                     	;# 
   812  0217                     	;# 
   813  0217                     	;# 
   814  0218                     	;# 
   815  0218                     	;# 
   816  0219                     	;# 
   817  021A                     	;# 
   818  021B                     	;# 
   819  021B                     	;# 
   820  021C                     	;# 
   821  021C                     	;# 
   822  021D                     	;# 
   823  021D                     	;# 
   824  021E                     	;# 
   825  021F                     	;# 
   826  028C                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028D                     	;# 
   830  028E                     	;# 
   831  028F                     	;# 
   832  0290                     	;# 
   833  0290                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0293                     	;# 
   839  0294                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0296                     	;# 
   843  0297                     	;# 
   844  0298                     	;# 
   845  0298                     	;# 
   846  0299                     	;# 
   847  0299                     	;# 
   848  029A                     	;# 
   849  029B                     	;# 
   850  029C                     	;# 
   851  029C                     	;# 
   852  029D                     	;# 
   853  030C                     	;# 
   854  030C                     	;# 
   855  030D                     	;# 
   856  030E                     	;# 
   857  030F                     	;# 
   858  0310                     	;# 
   859  0310                     	;# 
   860  0311                     	;# 
   861  0312                     	;# 
   862  0313                     	;# 
   863  0314                     	;# 
   864  0314                     	;# 
   865  0315                     	;# 
   866  0316                     	;# 
   867  0317                     	;# 
   868  0318                     	;# 
   869  0318                     	;# 
   870  0319                     	;# 
   871  031A                     	;# 
   872  031B                     	;# 
   873  031C                     	;# 
   874  031C                     	;# 
   875  031D                     	;# 
   876  031E                     	;# 
   877  031F                     	;# 
   878  038C                     	;# 
   879  038C                     	;# 
   880  038D                     	;# 
   881  038E                     	;# 
   882  0390                     	;# 
   883  0390                     	;# 
   884  0391                     	;# 
   885  0392                     	;# 
   886  040C                     	;# 
   887  040D                     	;# 
   888  040E                     	;# 
   889  040F                     	;# 
   890  0410                     	;# 
   891  0411                     	;# 
   892  0416                     	;# 
   893  0416                     	;# 
   894  0417                     	;# 
   895  0418                     	;# 
   896  0418                     	;# 
   897  0419                     	;# 
   898  041A                     	;# 
   899  041A                     	;# 
   900  041B                     	;# 
   901  041C                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  041F                     	;# 
   906  048C                     	;# 
   907  048C                     	;# 
   908  048D                     	;# 
   909  048E                     	;# 
   910  048F                     	;# 
   911  048F                     	;# 
   912  0490                     	;# 
   913  0491                     	;# 
   914  0492                     	;# 
   915  0492                     	;# 
   916  0493                     	;# 
   917  0494                     	;# 
   918  0495                     	;# 
   919  0495                     	;# 
   920  0496                     	;# 
   921  0497                     	;# 
   922  0498                     	;# 
   923  0499                     	;# 
   924  049A                     	;# 
   925  049B                     	;# 
   926  049C                     	;# 
   927  049D                     	;# 
   928  050C                     	;# 
   929  050C                     	;# 
   930  050D                     	;# 
   931  050E                     	;# 
   932  050F                     	;# 
   933  050F                     	;# 
   934  0510                     	;# 
   935  0511                     	;# 
   936  0512                     	;# 
   937  0512                     	;# 
   938  0513                     	;# 
   939  0514                     	;# 
   940  0515                     	;# 
   941  0515                     	;# 
   942  0516                     	;# 
   943  0517                     	;# 
   944  0518                     	;# 
   945  0519                     	;# 
   946  051A                     	;# 
   947  051B                     	;# 
   948  051C                     	;# 
   949  051D                     	;# 
   950  058C                     	;# 
   951  058C                     	;# 
   952  058D                     	;# 
   953  058E                     	;# 
   954  058F                     	;# 
   955  058F                     	;# 
   956  0590                     	;# 
   957  0591                     	;# 
   958  0592                     	;# 
   959  0593                     	;# 
   960  060C                     	;# 
   961  060D                     	;# 
   962  060E                     	;# 
   963  060F                     	;# 
   964  0610                     	;# 
   965  0611                     	;# 
   966  0612                     	;# 
   967  0613                     	;# 
   968  0614                     	;# 
   969  0616                     	;# 
   970  0617                     	;# 
   971  0618                     	;# 
   972  0619                     	;# 
   973  061A                     	;# 
   974  061B                     	;# 
   975  061C                     	;# 
   976  061D                     	;# 
   977  061E                     	;# 
   978  068C                     	;# 
   979  068D                     	;# 
   980  068E                     	;# 
   981  068F                     	;# 
   982  0690                     	;# 
   983  0691                     	;# 
   984  0692                     	;# 
   985  0693                     	;# 
   986  0694                     	;# 
   987  070C                     	;# 
   988  070D                     	;# 
   989  070E                     	;# 
   990  070F                     	;# 
   991  0710                     	;# 
   992  0711                     	;# 
   993  0712                     	;# 
   994  0713                     	;# 
   995  0714                     	;# 
   996  0716                     	;# 
   997  0717                     	;# 
   998  0718                     	;# 
   999  0719                     	;# 
  1000  071A                     	;# 
  1001  071B                     	;# 
  1002  071C                     	;# 
  1003  071D                     	;# 
  1004  071E                     	;# 
  1005  0796                     	;# 
  1006  0797                     	;# 
  1007  0798                     	;# 
  1008  0799                     	;# 
  1009  079A                     	;# 
  1010  079B                     	;# 
  1011  080C                     	;# 
  1012  080D                     	;# 
  1013  080E                     	;# 
  1014  080F                     	;# 
  1015  0810                     	;# 
  1016  0811                     	;# 
  1017  0812                     	;# 
  1018  0813                     	;# 
  1019  0814                     	;# 
  1020  081A                     	;# 
  1021  081B                     	;# 
  1022  081C                     	;# 
  1023  081D                     	;# 
  1024  081E                     	;# 
  1025  081F                     	;# 
  1026  088C                     	;# 
  1027  088D                     	;# 
  1028  088E                     	;# 
  1029  088F                     	;# 
  1030  0890                     	;# 
  1031  0891                     	;# 
  1032  0892                     	;# 
  1033  0893                     	;# 
  1034  0895                     	;# 
  1035  0896                     	;# 
  1036  0897                     	;# 
  1037  0898                     	;# 
  1038  0899                     	;# 
  1039  089A                     	;# 
  1040  089B                     	;# 
  1041  090C                     	;# 
  1042  090E                     	;# 
  1043  090F                     	;# 
  1044  091F                     	;# 
  1045  091F                     	;# 
  1046  098F                     	;# 
  1047  098F                     	;# 
  1048  0990                     	;# 
  1049  0991                     	;# 
  1050  0992                     	;# 
  1051  0993                     	;# 
  1052  0994                     	;# 
  1053  0995                     	;# 
  1054  0996                     	;# 
  1055  0997                     	;# 
  1056  0E0F                     	;# 
  1057  0E10                     	;# 
  1058  0E11                     	;# 
  1059  0E12                     	;# 
  1060  0E13                     	;# 
  1061  0E14                     	;# 
  1062  0E15                     	;# 
  1063  0E16                     	;# 
  1064  0E17                     	;# 
  1065  0E18                     	;# 
  1066  0E19                     	;# 
  1067  0E1A                     	;# 
  1068  0E1B                     	;# 
  1069  0E1C                     	;# 
  1070  0E1D                     	;# 
  1071  0E1E                     	;# 
  1072  0E1F                     	;# 
  1073  0E20                     	;# 
  1074  0E21                     	;# 
  1075  0E22                     	;# 
  1076  0E23                     	;# 
  1077  0E24                     	;# 
  1078  0E25                     	;# 
  1079  0E26                     	;# 
  1080  0E27                     	;# 
  1081  0E28                     	;# 
  1082  0E29                     	;# 
  1083  0E2A                     	;# 
  1084  0E2B                     	;# 
  1085  0E2C                     	;# 
  1086  0E2D                     	;# 
  1087  0E2E                     	;# 
  1088  0E2F                     	;# 
  1089  0E30                     	;# 
  1090  0E31                     	;# 
  1091  0E32                     	;# 
  1092  0E33                     	;# 
  1093  0E34                     	;# 
  1094  0E35                     	;# 
  1095  0E36                     	;# 
  1096  0E37                     	;# 
  1097  0E8F                     	;# 
  1098  0E90                     	;# 
  1099  0E91                     	;# 
  1100  0E92                     	;# 
  1101  0E93                     	;# 
  1102  0E94                     	;# 
  1103  0E95                     	;# 
  1104  0E96                     	;# 
  1105  0E97                     	;# 
  1106  0E9C                     	;# 
  1107  0E9D                     	;# 
  1108  0E9E                     	;# 
  1109  0EA1                     	;# 
  1110  0EA2                     	;# 
  1111  0EA3                     	;# 
  1112  0EA4                     	;# 
  1113  0EA5                     	;# 
  1114  0EA9                     	;# 
  1115  0EAA                     	;# 
  1116  0EAB                     	;# 
  1117  0EAC                     	;# 
  1118  0EB1                     	;# 
  1119  0EB2                     	;# 
  1120  0EB3                     	;# 
  1121  0EB8                     	;# 
  1122  0EB9                     	;# 
  1123  0EBA                     	;# 
  1124  0EBB                     	;# 
  1125  0EBC                     	;# 
  1126  0EBD                     	;# 
  1127  0EBE                     	;# 
  1128  0EC3                     	;# 
  1129  0EC5                     	;# 
  1130  0EC6                     	;# 
  1131  0EC7                     	;# 
  1132  0EC8                     	;# 
  1133  0EC9                     	;# 
  1134  0ECA                     	;# 
  1135  0ECB                     	;# 
  1136  0ECC                     	;# 
  1137  0F10                     	;# 
  1138  0F11                     	;# 
  1139  0F12                     	;# 
  1140  0F13                     	;# 
  1141  0F14                     	;# 
  1142  0F15                     	;# 
  1143  0F16                     	;# 
  1144  0F17                     	;# 
  1145  0F18                     	;# 
  1146  0F19                     	;# 
  1147  0F1A                     	;# 
  1148  0F1B                     	;# 
  1149  0F1C                     	;# 
  1150  0F1D                     	;# 
  1151  0F1E                     	;# 
  1152  0F1F                     	;# 
  1153  0F20                     	;# 
  1154  0F21                     	;# 
  1155  0F22                     	;# 
  1156  0F23                     	;# 
  1157  0F24                     	;# 
  1158  0F25                     	;# 
  1159  0F26                     	;# 
  1160  0F27                     	;# 
  1161  0F28                     	;# 
  1162  0F29                     	;# 
  1163  0F2A                     	;# 
  1164  0F2B                     	;# 
  1165  0F2C                     	;# 
  1166  0F2D                     	;# 
  1167  0F2E                     	;# 
  1168  0F2F                     	;# 
  1169  0F30                     	;# 
  1170  0F31                     	;# 
  1171  0F32                     	;# 
  1172  0F38                     	;# 
  1173  0F39                     	;# 
  1174  0F3A                     	;# 
  1175  0F3B                     	;# 
  1176  0F3C                     	;# 
  1177  0F3D                     	;# 
  1178  0F3E                     	;# 
  1179  0F3F                     	;# 
  1180  0F40                     	;# 
  1181  0F41                     	;# 
  1182  0F43                     	;# 
  1183  0F44                     	;# 
  1184  0F45                     	;# 
  1185  0F46                     	;# 
  1186  0F47                     	;# 
  1187  0F48                     	;# 
  1188  0F49                     	;# 
  1189  0F4A                     	;# 
  1190  0F4B                     	;# 
  1191  0F4C                     	;# 
  1192  0F4E                     	;# 
  1193  0F4F                     	;# 
  1194  0F50                     	;# 
  1195  0F51                     	;# 
  1196  0F52                     	;# 
  1197  0F53                     	;# 
  1198  0F54                     	;# 
  1199  0F55                     	;# 
  1200  0F56                     	;# 
  1201  0F57                     	;# 
  1202  0F59                     	;# 
  1203  0F5A                     	;# 
  1204  0F5B                     	;# 
  1205  0F5C                     	;# 
  1206  0F5D                     	;# 
  1207  0F61                     	;# 
  1208  0F62                     	;# 
  1209  0F64                     	;# 
  1210  0F65                     	;# 
  1211  0F66                     	;# 
  1212  0F67                     	;# 
  1213  0F68                     	;# 
  1214  0F69                     	;# 
  1215  0F6A                     	;# 
  1216  0F6B                     	;# 
  1217  0F6C                     	;# 
  1218  0F6D                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230  0000                     	;# 
  1231  0001                     	;# 
  1232  0002                     	;# 
  1233  0003                     	;# 
  1234  0004                     	;# 
  1235  0005                     	;# 
  1236  0006                     	;# 
  1237  0007                     	;# 
  1238  0008                     	;# 
  1239  0009                     	;# 
  1240  000A                     	;# 
  1241  000B                     	;# 
  1242  000C                     	;# 
  1243  000D                     	;# 
  1244  000E                     	;# 
  1245  000F                     	;# 
  1246  0010                     	;# 
  1247  0011                     	;# 
  1248  0012                     	;# 
  1249  0013                     	;# 
  1250  0014                     	;# 
  1251  0015                     	;# 
  1252  0016                     	;# 
  1253  0017                     	;# 
  1254  0018                     	;# 
  1255  0019                     	;# 
  1256  001A                     	;# 
  1257  001C                     	;# 
  1258  001C                     	;# 
  1259  001D                     	;# 
  1260  001D                     	;# 
  1261  001E                     	;# 
  1262  001F                     	;# 
  1263  008C                     	;# 
  1264  008C                     	;# 
  1265  008D                     	;# 
  1266  008E                     	;# 
  1267  008E                     	;# 
  1268  008F                     	;# 
  1269  0090                     	;# 
  1270  0090                     	;# 
  1271  0091                     	;# 
  1272  0093                     	;# 
  1273  0094                     	;# 
  1274  0095                     	;# 
  1275  0096                     	;# 
  1276  0097                     	;# 
  1277  0098                     	;# 
  1278  0099                     	;# 
  1279  009A                     	;# 
  1280  009B                     	;# 
  1281  009C                     	;# 
  1282  009D                     	;# 
  1283  009E                     	;# 
  1284  010C                     	;# 
  1285  010D                     	;# 
  1286  010E                     	;# 
  1287  010E                     	;# 
  1288  010F                     	;# 
  1289  0110                     	;# 
  1290  0110                     	;# 
  1291  0111                     	;# 
  1292  0112                     	;# 
  1293  0112                     	;# 
  1294  0113                     	;# 
  1295  0114                     	;# 
  1296  0114                     	;# 
  1297  0115                     	;# 
  1298  0116                     	;# 
  1299  0116                     	;# 
  1300  0117                     	;# 
  1301  0119                     	;# 
  1302  0119                     	;# 
  1303  0119                     	;# 
  1304  011A                     	;# 
  1305  011A                     	;# 
  1306  011A                     	;# 
  1307  011B                     	;# 
  1308  011B                     	;# 
  1309  011B                     	;# 
  1310  011B                     	;# 
  1311  011B                     	;# 
  1312  011C                     	;# 
  1313  011C                     	;# 
  1314  011C                     	;# 
  1315  011D                     	;# 
  1316  011D                     	;# 
  1317  011D                     	;# 
  1318  011E                     	;# 
  1319  011E                     	;# 
  1320  011E                     	;# 
  1321  011F                     	;# 
  1322  011F                     	;# 
  1323  011F                     	;# 
  1324  011F                     	;# 
  1325  011F                     	;# 
  1326  018C                     	;# 
  1327  018D                     	;# 
  1328  018E                     	;# 
  1329  018F                     	;# 
  1330  0190                     	;# 
  1331  0191                     	;# 
  1332  0192                     	;# 
  1333  0196                     	;# 
  1334  0197                     	;# 
  1335  0198                     	;# 
  1336  0199                     	;# 
  1337  019A                     	;# 
  1338  019B                     	;# 
  1339  019C                     	;# 
  1340  020C                     	;# 
  1341  020C                     	;# 
  1342  020D                     	;# 
  1343  020E                     	;# 
  1344  020F                     	;# 
  1345  020F                     	;# 
  1346  0210                     	;# 
  1347  0210                     	;# 
  1348  0211                     	;# 
  1349  0211                     	;# 
  1350  0212                     	;# 
  1351  0212                     	;# 
  1352  0213                     	;# 
  1353  0214                     	;# 
  1354  0215                     	;# 
  1355  0215                     	;# 
  1356  0216                     	;# 
  1357  0216                     	;# 
  1358  0217                     	;# 
  1359  0217                     	;# 
  1360  0218                     	;# 
  1361  0218                     	;# 
  1362  0219                     	;# 
  1363  021A                     	;# 
  1364  021B                     	;# 
  1365  021B                     	;# 
  1366  021C                     	;# 
  1367  021C                     	;# 
  1368  021D                     	;# 
  1369  021D                     	;# 
  1370  021E                     	;# 
  1371  021F                     	;# 
  1372  028C                     	;# 
  1373  028C                     	;# 
  1374  028D                     	;# 
  1375  028D                     	;# 
  1376  028E                     	;# 
  1377  028F                     	;# 
  1378  0290                     	;# 
  1379  0290                     	;# 
  1380  0291                     	;# 
  1381  0292                     	;# 
  1382  0292                     	;# 
  1383  0293                     	;# 
  1384  0293                     	;# 
  1385  0294                     	;# 
  1386  0295                     	;# 
  1387  0296                     	;# 
  1388  0296                     	;# 
  1389  0297                     	;# 
  1390  0298                     	;# 
  1391  0298                     	;# 
  1392  0299                     	;# 
  1393  0299                     	;# 
  1394  029A                     	;# 
  1395  029B                     	;# 
  1396  029C                     	;# 
  1397  029C                     	;# 
  1398  029D                     	;# 
  1399  030C                     	;# 
  1400  030C                     	;# 
  1401  030D                     	;# 
  1402  030E                     	;# 
  1403  030F                     	;# 
  1404  0310                     	;# 
  1405  0310                     	;# 
  1406  0311                     	;# 
  1407  0312                     	;# 
  1408  0313                     	;# 
  1409  0314                     	;# 
  1410  0314                     	;# 
  1411  0315                     	;# 
  1412  0316                     	;# 
  1413  0317                     	;# 
  1414  0318                     	;# 
  1415  0318                     	;# 
  1416  0319                     	;# 
  1417  031A                     	;# 
  1418  031B                     	;# 
  1419  031C                     	;# 
  1420  031C                     	;# 
  1421  031D                     	;# 
  1422  031E                     	;# 
  1423  031F                     	;# 
  1424  038C                     	;# 
  1425  038C                     	;# 
  1426  038D                     	;# 
  1427  038E                     	;# 
  1428  0390                     	;# 
  1429  0390                     	;# 
  1430  0391                     	;# 
  1431  0392                     	;# 
  1432  040C                     	;# 
  1433  040D                     	;# 
  1434  040E                     	;# 
  1435  040F                     	;# 
  1436  0410                     	;# 
  1437  0411                     	;# 
  1438  0416                     	;# 
  1439  0416                     	;# 
  1440  0417                     	;# 
  1441  0418                     	;# 
  1442  0418                     	;# 
  1443  0419                     	;# 
  1444  041A                     	;# 
  1445  041A                     	;# 
  1446  041B                     	;# 
  1447  041C                     	;# 
  1448  041C                     	;# 
  1449  041D                     	;# 
  1450  041E                     	;# 
  1451  041F                     	;# 
  1452  048C                     	;# 
  1453  048C                     	;# 
  1454  048D                     	;# 
  1455  048E                     	;# 
  1456  048F                     	;# 
  1457  048F                     	;# 
  1458  0490                     	;# 
  1459  0491                     	;# 
  1460  0492                     	;# 
  1461  0492                     	;# 
  1462  0493                     	;# 
  1463  0494                     	;# 
  1464  0495                     	;# 
  1465  0495                     	;# 
  1466  0496                     	;# 
  1467  0497                     	;# 
  1468  0498                     	;# 
  1469  0499                     	;# 
  1470  049A                     	;# 
  1471  049B                     	;# 
  1472  049C                     	;# 
  1473  049D                     	;# 
  1474  050C                     	;# 
  1475  050C                     	;# 
  1476  050D                     	;# 
  1477  050E                     	;# 
  1478  050F                     	;# 
  1479  050F                     	;# 
  1480  0510                     	;# 
  1481  0511                     	;# 
  1482  0512                     	;# 
  1483  0512                     	;# 
  1484  0513                     	;# 
  1485  0514                     	;# 
  1486  0515                     	;# 
  1487  0515                     	;# 
  1488  0516                     	;# 
  1489  0517                     	;# 
  1490  0518                     	;# 
  1491  0519                     	;# 
  1492  051A                     	;# 
  1493  051B                     	;# 
  1494  051C                     	;# 
  1495  051D                     	;# 
  1496  058C                     	;# 
  1497  058C                     	;# 
  1498  058D                     	;# 
  1499  058E                     	;# 
  1500  058F                     	;# 
  1501  058F                     	;# 
  1502  0590                     	;# 
  1503  0591                     	;# 
  1504  0592                     	;# 
  1505  0593                     	;# 
  1506  060C                     	;# 
  1507  060D                     	;# 
  1508  060E                     	;# 
  1509  060F                     	;# 
  1510  0610                     	;# 
  1511  0611                     	;# 
  1512  0612                     	;# 
  1513  0613                     	;# 
  1514  0614                     	;# 
  1515  0616                     	;# 
  1516  0617                     	;# 
  1517  0618                     	;# 
  1518  0619                     	;# 
  1519  061A                     	;# 
  1520  061B                     	;# 
  1521  061C                     	;# 
  1522  061D                     	;# 
  1523  061E                     	;# 
  1524  068C                     	;# 
  1525  068D                     	;# 
  1526  068E                     	;# 
  1527  068F                     	;# 
  1528  0690                     	;# 
  1529  0691                     	;# 
  1530  0692                     	;# 
  1531  0693                     	;# 
  1532  0694                     	;# 
  1533  070C                     	;# 
  1534  070D                     	;# 
  1535  070E                     	;# 
  1536  070F                     	;# 
  1537  0710                     	;# 
  1538  0711                     	;# 
  1539  0712                     	;# 
  1540  0713                     	;# 
  1541  0714                     	;# 
  1542  0716                     	;# 
  1543  0717                     	;# 
  1544  0718                     	;# 
  1545  0719                     	;# 
  1546  071A                     	;# 
  1547  071B                     	;# 
  1548  071C                     	;# 
  1549  071D                     	;# 
  1550  071E                     	;# 
  1551  0796                     	;# 
  1552  0797                     	;# 
  1553  0798                     	;# 
  1554  0799                     	;# 
  1555  079A                     	;# 
  1556  079B                     	;# 
  1557  080C                     	;# 
  1558  080D                     	;# 
  1559  080E                     	;# 
  1560  080F                     	;# 
  1561  0810                     	;# 
  1562  0811                     	;# 
  1563  0812                     	;# 
  1564  0813                     	;# 
  1565  0814                     	;# 
  1566  081A                     	;# 
  1567  081B                     	;# 
  1568  081C                     	;# 
  1569  081D                     	;# 
  1570  081E                     	;# 
  1571  081F                     	;# 
  1572  088C                     	;# 
  1573  088D                     	;# 
  1574  088E                     	;# 
  1575  088F                     	;# 
  1576  0890                     	;# 
  1577  0891                     	;# 
  1578  0892                     	;# 
  1579  0893                     	;# 
  1580  0895                     	;# 
  1581  0896                     	;# 
  1582  0897                     	;# 
  1583  0898                     	;# 
  1584  0899                     	;# 
  1585  089A                     	;# 
  1586  089B                     	;# 
  1587  090C                     	;# 
  1588  090E                     	;# 
  1589  090F                     	;# 
  1590  091F                     	;# 
  1591  091F                     	;# 
  1592  098F                     	;# 
  1593  098F                     	;# 
  1594  0990                     	;# 
  1595  0991                     	;# 
  1596  0992                     	;# 
  1597  0993                     	;# 
  1598  0994                     	;# 
  1599  0995                     	;# 
  1600  0996                     	;# 
  1601  0997                     	;# 
  1602  0E0F                     	;# 
  1603  0E10                     	;# 
  1604  0E11                     	;# 
  1605  0E12                     	;# 
  1606  0E13                     	;# 
  1607  0E14                     	;# 
  1608  0E15                     	;# 
  1609  0E16                     	;# 
  1610  0E17                     	;# 
  1611  0E18                     	;# 
  1612  0E19                     	;# 
  1613  0E1A                     	;# 
  1614  0E1B                     	;# 
  1615  0E1C                     	;# 
  1616  0E1D                     	;# 
  1617  0E1E                     	;# 
  1618  0E1F                     	;# 
  1619  0E20                     	;# 
  1620  0E21                     	;# 
  1621  0E22                     	;# 
  1622  0E23                     	;# 
  1623  0E24                     	;# 
  1624  0E25                     	;# 
  1625  0E26                     	;# 
  1626  0E27                     	;# 
  1627  0E28                     	;# 
  1628  0E29                     	;# 
  1629  0E2A                     	;# 
  1630  0E2B                     	;# 
  1631  0E2C                     	;# 
  1632  0E2D                     	;# 
  1633  0E2E                     	;# 
  1634  0E2F                     	;# 
  1635  0E30                     	;# 
  1636  0E31                     	;# 
  1637  0E32                     	;# 
  1638  0E33                     	;# 
  1639  0E34                     	;# 
  1640  0E35                     	;# 
  1641  0E36                     	;# 
  1642  0E37                     	;# 
  1643  0E8F                     	;# 
  1644  0E90                     	;# 
  1645  0E91                     	;# 
  1646  0E92                     	;# 
  1647  0E93                     	;# 
  1648  0E94                     	;# 
  1649  0E95                     	;# 
  1650  0E96                     	;# 
  1651  0E97                     	;# 
  1652  0E9C                     	;# 
  1653  0E9D                     	;# 
  1654  0E9E                     	;# 
  1655  0EA1                     	;# 
  1656  0EA2                     	;# 
  1657  0EA3                     	;# 
  1658  0EA4                     	;# 
  1659  0EA5                     	;# 
  1660  0EA9                     	;# 
  1661  0EAA                     	;# 
  1662  0EAB                     	;# 
  1663  0EAC                     	;# 
  1664  0EB1                     	;# 
  1665  0EB2                     	;# 
  1666  0EB3                     	;# 
  1667  0EB8                     	;# 
  1668  0EB9                     	;# 
  1669  0EBA                     	;# 
  1670  0EBB                     	;# 
  1671  0EBC                     	;# 
  1672  0EBD                     	;# 
  1673  0EBE                     	;# 
  1674  0EC3                     	;# 
  1675  0EC5                     	;# 
  1676  0EC6                     	;# 
  1677  0EC7                     	;# 
  1678  0EC8                     	;# 
  1679  0EC9                     	;# 
  1680  0ECA                     	;# 
  1681  0ECB                     	;# 
  1682  0ECC                     	;# 
  1683  0F10                     	;# 
  1684  0F11                     	;# 
  1685  0F12                     	;# 
  1686  0F13                     	;# 
  1687  0F14                     	;# 
  1688  0F15                     	;# 
  1689  0F16                     	;# 
  1690  0F17                     	;# 
  1691  0F18                     	;# 
  1692  0F19                     	;# 
  1693  0F1A                     	;# 
  1694  0F1B                     	;# 
  1695  0F1C                     	;# 
  1696  0F1D                     	;# 
  1697  0F1E                     	;# 
  1698  0F1F                     	;# 
  1699  0F20                     	;# 
  1700  0F21                     	;# 
  1701  0F22                     	;# 
  1702  0F23                     	;# 
  1703  0F24                     	;# 
  1704  0F25                     	;# 
  1705  0F26                     	;# 
  1706  0F27                     	;# 
  1707  0F28                     	;# 
  1708  0F29                     	;# 
  1709  0F2A                     	;# 
  1710  0F2B                     	;# 
  1711  0F2C                     	;# 
  1712  0F2D                     	;# 
  1713  0F2E                     	;# 
  1714  0F2F                     	;# 
  1715  0F30                     	;# 
  1716  0F31                     	;# 
  1717  0F32                     	;# 
  1718  0F38                     	;# 
  1719  0F39                     	;# 
  1720  0F3A                     	;# 
  1721  0F3B                     	;# 
  1722  0F3C                     	;# 
  1723  0F3D                     	;# 
  1724  0F3E                     	;# 
  1725  0F3F                     	;# 
  1726  0F40                     	;# 
  1727  0F41                     	;# 
  1728  0F43                     	;# 
  1729  0F44                     	;# 
  1730  0F45                     	;# 
  1731  0F46                     	;# 
  1732  0F47                     	;# 
  1733  0F48                     	;# 
  1734  0F49                     	;# 
  1735  0F4A                     	;# 
  1736  0F4B                     	;# 
  1737  0F4C                     	;# 
  1738  0F4E                     	;# 
  1739  0F4F                     	;# 
  1740  0F50                     	;# 
  1741  0F51                     	;# 
  1742  0F52                     	;# 
  1743  0F53                     	;# 
  1744  0F54                     	;# 
  1745  0F55                     	;# 
  1746  0F56                     	;# 
  1747  0F57                     	;# 
  1748  0F59                     	;# 
  1749  0F5A                     	;# 
  1750  0F5B                     	;# 
  1751  0F5C                     	;# 
  1752  0F5D                     	;# 
  1753  0F61                     	;# 
  1754  0F62                     	;# 
  1755  0F64                     	;# 
  1756  0F65                     	;# 
  1757  0F66                     	;# 
  1758  0F67                     	;# 
  1759  0F68                     	;# 
  1760  0F69                     	;# 
  1761  0F6A                     	;# 
  1762  0F6B                     	;# 
  1763  0F6C                     	;# 
  1764  0F6D                     	;# 
  1765  0FE4                     	;# 
  1766  0FE5                     	;# 
  1767  0FE6                     	;# 
  1768  0FE7                     	;# 
  1769  0FE8                     	;# 
  1770  0FE9                     	;# 
  1771  0FEA                     	;# 
  1772  0FEB                     	;# 
  1773  0FED                     	;# 
  1774  0FEE                     	;# 
  1775  0FEF                     	;# 
  1776  0000                     	;# 
  1777  0001                     	;# 
  1778  0002                     	;# 
  1779  0003                     	;# 
  1780  0004                     	;# 
  1781  0005                     	;# 
  1782  0006                     	;# 
  1783  0007                     	;# 
  1784  0008                     	;# 
  1785  0009                     	;# 
  1786  000A                     	;# 
  1787  000B                     	;# 
  1788  000C                     	;# 
  1789  000D                     	;# 
  1790  000E                     	;# 
  1791  000F                     	;# 
  1792  0010                     	;# 
  1793  0011                     	;# 
  1794  0012                     	;# 
  1795  0013                     	;# 
  1796  0014                     	;# 
  1797  0015                     	;# 
  1798  0016                     	;# 
  1799  0017                     	;# 
  1800  0018                     	;# 
  1801  0019                     	;# 
  1802  001A                     	;# 
  1803  001C                     	;# 
  1804  001C                     	;# 
  1805  001D                     	;# 
  1806  001D                     	;# 
  1807  001E                     	;# 
  1808  001F                     	;# 
  1809  008C                     	;# 
  1810  008C                     	;# 
  1811  008D                     	;# 
  1812  008E                     	;# 
  1813  008E                     	;# 
  1814  008F                     	;# 
  1815  0090                     	;# 
  1816  0090                     	;# 
  1817  0091                     	;# 
  1818  0093                     	;# 
  1819  0094                     	;# 
  1820  0095                     	;# 
  1821  0096                     	;# 
  1822  0097                     	;# 
  1823  0098                     	;# 
  1824  0099                     	;# 
  1825  009A                     	;# 
  1826  009B                     	;# 
  1827  009C                     	;# 
  1828  009D                     	;# 
  1829  009E                     	;# 
  1830  010C                     	;# 
  1831  010D                     	;# 
  1832  010E                     	;# 
  1833  010E                     	;# 
  1834  010F                     	;# 
  1835  0110                     	;# 
  1836  0110                     	;# 
  1837  0111                     	;# 
  1838  0112                     	;# 
  1839  0112                     	;# 
  1840  0113                     	;# 
  1841  0114                     	;# 
  1842  0114                     	;# 
  1843  0115                     	;# 
  1844  0116                     	;# 
  1845  0116                     	;# 
  1846  0117                     	;# 
  1847  0119                     	;# 
  1848  0119                     	;# 
  1849  0119                     	;# 
  1850  011A                     	;# 
  1851  011A                     	;# 
  1852  011A                     	;# 
  1853  011B                     	;# 
  1854  011B                     	;# 
  1855  011B                     	;# 
  1856  011B                     	;# 
  1857  011B                     	;# 
  1858  011C                     	;# 
  1859  011C                     	;# 
  1860  011C                     	;# 
  1861  011D                     	;# 
  1862  011D                     	;# 
  1863  011D                     	;# 
  1864  011E                     	;# 
  1865  011E                     	;# 
  1866  011E                     	;# 
  1867  011F                     	;# 
  1868  011F                     	;# 
  1869  011F                     	;# 
  1870  011F                     	;# 
  1871  011F                     	;# 
  1872  018C                     	;# 
  1873  018D                     	;# 
  1874  018E                     	;# 
  1875  018F                     	;# 
  1876  0190                     	;# 
  1877  0191                     	;# 
  1878  0192                     	;# 
  1879  0196                     	;# 
  1880  0197                     	;# 
  1881  0198                     	;# 
  1882  0199                     	;# 
  1883  019A                     	;# 
  1884  019B                     	;# 
  1885  019C                     	;# 
  1886  020C                     	;# 
  1887  020C                     	;# 
  1888  020D                     	;# 
  1889  020E                     	;# 
  1890  020F                     	;# 
  1891  020F                     	;# 
  1892  0210                     	;# 
  1893  0210                     	;# 
  1894  0211                     	;# 
  1895  0211                     	;# 
  1896  0212                     	;# 
  1897  0212                     	;# 
  1898  0213                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0216                     	;# 
  1903  0216                     	;# 
  1904  0217                     	;# 
  1905  0217                     	;# 
  1906  0218                     	;# 
  1907  0218                     	;# 
  1908  0219                     	;# 
  1909  021A                     	;# 
  1910  021B                     	;# 
  1911  021B                     	;# 
  1912  021C                     	;# 
  1913  021C                     	;# 
  1914  021D                     	;# 
  1915  021D                     	;# 
  1916  021E                     	;# 
  1917  021F                     	;# 
  1918  028C                     	;# 
  1919  028C                     	;# 
  1920  028D                     	;# 
  1921  028D                     	;# 
  1922  028E                     	;# 
  1923  028F                     	;# 
  1924  0290                     	;# 
  1925  0290                     	;# 
  1926  0291                     	;# 
  1927  0292                     	;# 
  1928  0292                     	;# 
  1929  0293                     	;# 
  1930  0293                     	;# 
  1931  0294                     	;# 
  1932  0295                     	;# 
  1933  0296                     	;# 
  1934  0296                     	;# 
  1935  0297                     	;# 
  1936  0298                     	;# 
  1937  0298                     	;# 
  1938  0299                     	;# 
  1939  0299                     	;# 
  1940  029A                     	;# 
  1941  029B                     	;# 
  1942  029C                     	;# 
  1943  029C                     	;# 
  1944  029D                     	;# 
  1945  030C                     	;# 
  1946  030C                     	;# 
  1947  030D                     	;# 
  1948  030E                     	;# 
  1949  030F                     	;# 
  1950  0310                     	;# 
  1951  0310                     	;# 
  1952  0311                     	;# 
  1953  0312                     	;# 
  1954  0313                     	;# 
  1955  0314                     	;# 
  1956  0314                     	;# 
  1957  0315                     	;# 
  1958  0316                     	;# 
  1959  0317                     	;# 
  1960  0318                     	;# 
  1961  0318                     	;# 
  1962  0319                     	;# 
  1963  031A                     	;# 
  1964  031B                     	;# 
  1965  031C                     	;# 
  1966  031C                     	;# 
  1967  031D                     	;# 
  1968  031E                     	;# 
  1969  031F                     	;# 
  1970  038C                     	;# 
  1971  038C                     	;# 
  1972  038D                     	;# 
  1973  038E                     	;# 
  1974  0390                     	;# 
  1975  0390                     	;# 
  1976  0391                     	;# 
  1977  0392                     	;# 
  1978  040C                     	;# 
  1979  040D                     	;# 
  1980  040E                     	;# 
  1981  040F                     	;# 
  1982  0410                     	;# 
  1983  0411                     	;# 
  1984  0416                     	;# 
  1985  0416                     	;# 
  1986  0417                     	;# 
  1987  0418                     	;# 
  1988  0418                     	;# 
  1989  0419                     	;# 
  1990  041A                     	;# 
  1991  041A                     	;# 
  1992  041B                     	;# 
  1993  041C                     	;# 
  1994  041C                     	;# 
  1995  041D                     	;# 
  1996  041E                     	;# 
  1997  041F                     	;# 
  1998  048C                     	;# 
  1999  048C                     	;# 
  2000  048D                     	;# 
  2001  048E                     	;# 
  2002  048F                     	;# 
  2003  048F                     	;# 
  2004  0490                     	;# 
  2005  0491                     	;# 
  2006  0492                     	;# 
  2007  0492                     	;# 
  2008  0493                     	;# 
  2009  0494                     	;# 
  2010  0495                     	;# 
  2011  0495                     	;# 
  2012  0496                     	;# 
  2013  0497                     	;# 
  2014  0498                     	;# 
  2015  0499                     	;# 
  2016  049A                     	;# 
  2017  049B                     	;# 
  2018  049C                     	;# 
  2019  049D                     	;# 
  2020  050C                     	;# 
  2021  050C                     	;# 
  2022  050D                     	;# 
  2023  050E                     	;# 
  2024  050F                     	;# 
  2025  050F                     	;# 
  2026  0510                     	;# 
  2027  0511                     	;# 
  2028  0512                     	;# 
  2029  0512                     	;# 
  2030  0513                     	;# 
  2031  0514                     	;# 
  2032  0515                     	;# 
  2033  0515                     	;# 
  2034  0516                     	;# 
  2035  0517                     	;# 
  2036  0518                     	;# 
  2037  0519                     	;# 
  2038  051A                     	;# 
  2039  051B                     	;# 
  2040  051C                     	;# 
  2041  051D                     	;# 
  2042  058C                     	;# 
  2043  058C                     	;# 
  2044  058D                     	;# 
  2045  058E                     	;# 
  2046  058F                     	;# 
  2047  058F                     	;# 
  2048  0590                     	;# 
  2049  0591                     	;# 
  2050  0592                     	;# 
  2051  0593                     	;# 
  2052  060C                     	;# 
  2053  060D                     	;# 
  2054  060E                     	;# 
  2055  060F                     	;# 
  2056  0610                     	;# 
  2057  0611                     	;# 
  2058  0612                     	;# 
  2059  0613                     	;# 
  2060  0614                     	;# 
  2061  0616                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061B                     	;# 
  2067  061C                     	;# 
  2068  061D                     	;# 
  2069  061E                     	;# 
  2070  068C                     	;# 
  2071  068D                     	;# 
  2072  068E                     	;# 
  2073  068F                     	;# 
  2074  0690                     	;# 
  2075  0691                     	;# 
  2076  0692                     	;# 
  2077  0693                     	;# 
  2078  0694                     	;# 
  2079  070C                     	;# 
  2080  070D                     	;# 
  2081  070E                     	;# 
  2082  070F                     	;# 
  2083  0710                     	;# 
  2084  0711                     	;# 
  2085  0712                     	;# 
  2086  0713                     	;# 
  2087  0714                     	;# 
  2088  0716                     	;# 
  2089  0717                     	;# 
  2090  0718                     	;# 
  2091  0719                     	;# 
  2092  071A                     	;# 
  2093  071B                     	;# 
  2094  071C                     	;# 
  2095  071D                     	;# 
  2096  071E                     	;# 
  2097  0796                     	;# 
  2098  0797                     	;# 
  2099  0798                     	;# 
  2100  0799                     	;# 
  2101  079A                     	;# 
  2102  079B                     	;# 
  2103  080C                     	;# 
  2104  080D                     	;# 
  2105  080E                     	;# 
  2106  080F                     	;# 
  2107  0810                     	;# 
  2108  0811                     	;# 
  2109  0812                     	;# 
  2110  0813                     	;# 
  2111  0814                     	;# 
  2112  081A                     	;# 
  2113  081B                     	;# 
  2114  081C                     	;# 
  2115  081D                     	;# 
  2116  081E                     	;# 
  2117  081F                     	;# 
  2118  088C                     	;# 
  2119  088D                     	;# 
  2120  088E                     	;# 
  2121  088F                     	;# 
  2122  0890                     	;# 
  2123  0891                     	;# 
  2124  0892                     	;# 
  2125  0893                     	;# 
  2126  0895                     	;# 
  2127  0896                     	;# 
  2128  0897                     	;# 
  2129  0898                     	;# 
  2130  0899                     	;# 
  2131  089A                     	;# 
  2132  089B                     	;# 
  2133  090C                     	;# 
  2134  090E                     	;# 
  2135  090F                     	;# 
  2136  091F                     	;# 
  2137  091F                     	;# 
  2138  098F                     	;# 
  2139  098F                     	;# 
  2140  0990                     	;# 
  2141  0991                     	;# 
  2142  0992                     	;# 
  2143  0993                     	;# 
  2144  0994                     	;# 
  2145  0995                     	;# 
  2146  0996                     	;# 
  2147  0997                     	;# 
  2148  0E0F                     	;# 
  2149  0E10                     	;# 
  2150  0E11                     	;# 
  2151  0E12                     	;# 
  2152  0E13                     	;# 
  2153  0E14                     	;# 
  2154  0E15                     	;# 
  2155  0E16                     	;# 
  2156  0E17                     	;# 
  2157  0E18                     	;# 
  2158  0E19                     	;# 
  2159  0E1A                     	;# 
  2160  0E1B                     	;# 
  2161  0E1C                     	;# 
  2162  0E1D                     	;# 
  2163  0E1E                     	;# 
  2164  0E1F                     	;# 
  2165  0E20                     	;# 
  2166  0E21                     	;# 
  2167  0E22                     	;# 
  2168  0E23                     	;# 
  2169  0E24                     	;# 
  2170  0E25                     	;# 
  2171  0E26                     	;# 
  2172  0E27                     	;# 
  2173  0E28                     	;# 
  2174  0E29                     	;# 
  2175  0E2A                     	;# 
  2176  0E2B                     	;# 
  2177  0E2C                     	;# 
  2178  0E2D                     	;# 
  2179  0E2E                     	;# 
  2180  0E2F                     	;# 
  2181  0E30                     	;# 
  2182  0E31                     	;# 
  2183  0E32                     	;# 
  2184  0E33                     	;# 
  2185  0E34                     	;# 
  2186  0E35                     	;# 
  2187  0E36                     	;# 
  2188  0E37                     	;# 
  2189  0E8F                     	;# 
  2190  0E90                     	;# 
  2191  0E91                     	;# 
  2192  0E92                     	;# 
  2193  0E93                     	;# 
  2194  0E94                     	;# 
  2195  0E95                     	;# 
  2196  0E96                     	;# 
  2197  0E97                     	;# 
  2198  0E9C                     	;# 
  2199  0E9D                     	;# 
  2200  0E9E                     	;# 
  2201  0EA1                     	;# 
  2202  0EA2                     	;# 
  2203  0EA3                     	;# 
  2204  0EA4                     	;# 
  2205  0EA5                     	;# 
  2206  0EA9                     	;# 
  2207  0EAA                     	;# 
  2208  0EAB                     	;# 
  2209  0EAC                     	;# 
  2210  0EB1                     	;# 
  2211  0EB2                     	;# 
  2212  0EB3                     	;# 
  2213  0EB8                     	;# 
  2214  0EB9                     	;# 
  2215  0EBA                     	;# 
  2216  0EBB                     	;# 
  2217  0EBC                     	;# 
  2218  0EBD                     	;# 
  2219  0EBE                     	;# 
  2220  0EC3                     	;# 
  2221  0EC5                     	;# 
  2222  0EC6                     	;# 
  2223  0EC7                     	;# 
  2224  0EC8                     	;# 
  2225  0EC9                     	;# 
  2226  0ECA                     	;# 
  2227  0ECB                     	;# 
  2228  0ECC                     	;# 
  2229  0F10                     	;# 
  2230  0F11                     	;# 
  2231  0F12                     	;# 
  2232  0F13                     	;# 
  2233  0F14                     	;# 
  2234  0F15                     	;# 
  2235  0F16                     	;# 
  2236  0F17                     	;# 
  2237  0F18                     	;# 
  2238  0F19                     	;# 
  2239  0F1A                     	;# 
  2240  0F1B                     	;# 
  2241  0F1C                     	;# 
  2242  0F1D                     	;# 
  2243  0F1E                     	;# 
  2244  0F1F                     	;# 
  2245  0F20                     	;# 
  2246  0F21                     	;# 
  2247  0F22                     	;# 
  2248  0F23                     	;# 
  2249  0F24                     	;# 
  2250  0F25                     	;# 
  2251  0F26                     	;# 
  2252  0F27                     	;# 
  2253  0F28                     	;# 
  2254  0F29                     	;# 
  2255  0F2A                     	;# 
  2256  0F2B                     	;# 
  2257  0F2C                     	;# 
  2258  0F2D                     	;# 
  2259  0F2E                     	;# 
  2260  0F2F                     	;# 
  2261  0F30                     	;# 
  2262  0F31                     	;# 
  2263  0F32                     	;# 
  2264  0F38                     	;# 
  2265  0F39                     	;# 
  2266  0F3A                     	;# 
  2267  0F3B                     	;# 
  2268  0F3C                     	;# 
  2269  0F3D                     	;# 
  2270  0F3E                     	;# 
  2271  0F3F                     	;# 
  2272  0F40                     	;# 
  2273  0F41                     	;# 
  2274  0F43                     	;# 
  2275  0F44                     	;# 
  2276  0F45                     	;# 
  2277  0F46                     	;# 
  2278  0F47                     	;# 
  2279  0F48                     	;# 
  2280  0F49                     	;# 
  2281  0F4A                     	;# 
  2282  0F4B                     	;# 
  2283  0F4C                     	;# 
  2284  0F4E                     	;# 
  2285  0F4F                     	;# 
  2286  0F50                     	;# 
  2287  0F51                     	;# 
  2288  0F52                     	;# 
  2289  0F53                     	;# 
  2290  0F54                     	;# 
  2291  0F55                     	;# 
  2292  0F56                     	;# 
  2293  0F57                     	;# 
  2294  0F59                     	;# 
  2295  0F5A                     	;# 
  2296  0F5B                     	;# 
  2297  0F5C                     	;# 
  2298  0F5D                     	;# 
  2299  0F61                     	;# 
  2300  0F62                     	;# 
  2301  0F64                     	;# 
  2302  0F65                     	;# 
  2303  0F66                     	;# 
  2304  0F67                     	;# 
  2305  0F68                     	;# 
  2306  0F69                     	;# 
  2307  0F6A                     	;# 
  2308  0F6B                     	;# 
  2309  0F6C                     	;# 
  2310  0F6D                     	;# 
  2311  0FE4                     	;# 
  2312  0FE5                     	;# 
  2313  0FE6                     	;# 
  2314  0FE7                     	;# 
  2315  0FE8                     	;# 
  2316  0FE9                     	;# 
  2317  0FEA                     	;# 
  2318  0FEB                     	;# 
  2319  0FED                     	;# 
  2320  0FEE                     	;# 
  2321  0FEF                     	;# 
  2322  0000                     	;# 
  2323  0001                     	;# 
  2324  0002                     	;# 
  2325  0003                     	;# 
  2326  0004                     	;# 
  2327  0005                     	;# 
  2328  0006                     	;# 
  2329  0007                     	;# 
  2330  0008                     	;# 
  2331  0009                     	;# 
  2332  000A                     	;# 
  2333  000B                     	;# 
  2334  000C                     	;# 
  2335  000D                     	;# 
  2336  000E                     	;# 
  2337  000F                     	;# 
  2338  0010                     	;# 
  2339  0011                     	;# 
  2340  0012                     	;# 
  2341  0013                     	;# 
  2342  0014                     	;# 
  2343  0015                     	;# 
  2344  0016                     	;# 
  2345  0017                     	;# 
  2346  0018                     	;# 
  2347  0019                     	;# 
  2348  001A                     	;# 
  2349  001C                     	;# 
  2350  001C                     	;# 
  2351  001D                     	;# 
  2352  001D                     	;# 
  2353  001E                     	;# 
  2354  001F                     	;# 
  2355  008C                     	;# 
  2356  008C                     	;# 
  2357  008D                     	;# 
  2358  008E                     	;# 
  2359  008E                     	;# 
  2360  008F                     	;# 
  2361  0090                     	;# 
  2362  0090                     	;# 
  2363  0091                     	;# 
  2364  0093                     	;# 
  2365  0094                     	;# 
  2366  0095                     	;# 
  2367  0096                     	;# 
  2368  0097                     	;# 
  2369  0098                     	;# 
  2370  0099                     	;# 
  2371  009A                     	;# 
  2372  009B                     	;# 
  2373  009C                     	;# 
  2374  009D                     	;# 
  2375  009E                     	;# 
  2376  010C                     	;# 
  2377  010D                     	;# 
  2378  010E                     	;# 
  2379  010E                     	;# 
  2380  010F                     	;# 
  2381  0110                     	;# 
  2382  0110                     	;# 
  2383  0111                     	;# 
  2384  0112                     	;# 
  2385  0112                     	;# 
  2386  0113                     	;# 
  2387  0114                     	;# 
  2388  0114                     	;# 
  2389  0115                     	;# 
  2390  0116                     	;# 
  2391  0116                     	;# 
  2392  0117                     	;# 
  2393  0119                     	;# 
  2394  0119                     	;# 
  2395  0119                     	;# 
  2396  011A                     	;# 
  2397  011A                     	;# 
  2398  011A                     	;# 
  2399  011B                     	;# 
  2400  011B                     	;# 
  2401  011B                     	;# 
  2402  011B                     	;# 
  2403  011B                     	;# 
  2404  011C                     	;# 
  2405  011C                     	;# 
  2406  011C                     	;# 
  2407  011D                     	;# 
  2408  011D                     	;# 
  2409  011D                     	;# 
  2410  011E                     	;# 
  2411  011E                     	;# 
  2412  011E                     	;# 
  2413  011F                     	;# 
  2414  011F                     	;# 
  2415  011F                     	;# 
  2416  011F                     	;# 
  2417  011F                     	;# 
  2418  018C                     	;# 
  2419  018D                     	;# 
  2420  018E                     	;# 
  2421  018F                     	;# 
  2422  0190                     	;# 
  2423  0191                     	;# 
  2424  0192                     	;# 
  2425  0196                     	;# 
  2426  0197                     	;# 
  2427  0198                     	;# 
  2428  0199                     	;# 
  2429  019A                     	;# 
  2430  019B                     	;# 
  2431  019C                     	;# 
  2432  020C                     	;# 
  2433  020C                     	;# 
  2434  020D                     	;# 
  2435  020E                     	;# 
  2436  020F                     	;# 
  2437  020F                     	;# 
  2438  0210                     	;# 
  2439  0210                     	;# 
  2440  0211                     	;# 
  2441  0211                     	;# 
  2442  0212                     	;# 
  2443  0212                     	;# 
  2444  0213                     	;# 
  2445  0214                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0216                     	;# 
  2449  0216                     	;# 
  2450  0217                     	;# 
  2451  0217                     	;# 
  2452  0218                     	;# 
  2453  0218                     	;# 
  2454  0219                     	;# 
  2455  021A                     	;# 
  2456  021B                     	;# 
  2457  021B                     	;# 
  2458  021C                     	;# 
  2459  021C                     	;# 
  2460  021D                     	;# 
  2461  021D                     	;# 
  2462  021E                     	;# 
  2463  021F                     	;# 
  2464  028C                     	;# 
  2465  028C                     	;# 
  2466  028D                     	;# 
  2467  028D                     	;# 
  2468  028E                     	;# 
  2469  028F                     	;# 
  2470  0290                     	;# 
  2471  0290                     	;# 
  2472  0291                     	;# 
  2473  0292                     	;# 
  2474  0292                     	;# 
  2475  0293                     	;# 
  2476  0293                     	;# 
  2477  0294                     	;# 
  2478  0295                     	;# 
  2479  0296                     	;# 
  2480  0296                     	;# 
  2481  0297                     	;# 
  2482  0298                     	;# 
  2483  0298                     	;# 
  2484  0299                     	;# 
  2485  0299                     	;# 
  2486  029A                     	;# 
  2487  029B                     	;# 
  2488  029C                     	;# 
  2489  029C                     	;# 
  2490  029D                     	;# 
  2491  030C                     	;# 
  2492  030C                     	;# 
  2493  030D                     	;# 
  2494  030E                     	;# 
  2495  030F                     	;# 
  2496  0310                     	;# 
  2497  0310                     	;# 
  2498  0311                     	;# 
  2499  0312                     	;# 
  2500  0313                     	;# 
  2501  0314                     	;# 
  2502  0314                     	;# 
  2503  0315                     	;# 
  2504  0316                     	;# 
  2505  0317                     	;# 
  2506  0318                     	;# 
  2507  0318                     	;# 
  2508  0319                     	;# 
  2509  031A                     	;# 
  2510  031B                     	;# 
  2511  031C                     	;# 
  2512  031C                     	;# 
  2513  031D                     	;# 
  2514  031E                     	;# 
  2515  031F                     	;# 
  2516  038C                     	;# 
  2517  038C                     	;# 
  2518  038D                     	;# 
  2519  038E                     	;# 
  2520  0390                     	;# 
  2521  0390                     	;# 
  2522  0391                     	;# 
  2523  0392                     	;# 
  2524  040C                     	;# 
  2525  040D                     	;# 
  2526  040E                     	;# 
  2527  040F                     	;# 
  2528  0410                     	;# 
  2529  0411                     	;# 
  2530  0416                     	;# 
  2531  0416                     	;# 
  2532  0417                     	;# 
  2533  0418                     	;# 
  2534  0418                     	;# 
  2535  0419                     	;# 
  2536  041A                     	;# 
  2537  041A                     	;# 
  2538  041B                     	;# 
  2539  041C                     	;# 
  2540  041C                     	;# 
  2541  041D                     	;# 
  2542  041E                     	;# 
  2543  041F                     	;# 
  2544  048C                     	;# 
  2545  048C                     	;# 
  2546  048D                     	;# 
  2547  048E                     	;# 
  2548  048F                     	;# 
  2549  048F                     	;# 
  2550  0490                     	;# 
  2551  0491                     	;# 
  2552  0492                     	;# 
  2553  0492                     	;# 
  2554  0493                     	;# 
  2555  0494                     	;# 
  2556  0495                     	;# 
  2557  0495                     	;# 
  2558  0496                     	;# 
  2559  0497                     	;# 
  2560  0498                     	;# 
  2561  0499                     	;# 
  2562  049A                     	;# 
  2563  049B                     	;# 
  2564  049C                     	;# 
  2565  049D                     	;# 
  2566  050C                     	;# 
  2567  050C                     	;# 
  2568  050D                     	;# 
  2569  050E                     	;# 
  2570  050F                     	;# 
  2571  050F                     	;# 
  2572  0510                     	;# 
  2573  0511                     	;# 
  2574  0512                     	;# 
  2575  0512                     	;# 
  2576  0513                     	;# 
  2577  0514                     	;# 
  2578  0515                     	;# 
  2579  0515                     	;# 
  2580  0516                     	;# 
  2581  0517                     	;# 
  2582  0518                     	;# 
  2583  0519                     	;# 
  2584  051A                     	;# 
  2585  051B                     	;# 
  2586  051C                     	;# 
  2587  051D                     	;# 
  2588  058C                     	;# 
  2589  058C                     	;# 
  2590  058D                     	;# 
  2591  058E                     	;# 
  2592  058F                     	;# 
  2593  058F                     	;# 
  2594  0590                     	;# 
  2595  0591                     	;# 
  2596  0592                     	;# 
  2597  0593                     	;# 
  2598  060C                     	;# 
  2599  060D                     	;# 
  2600  060E                     	;# 
  2601  060F                     	;# 
  2602  0610                     	;# 
  2603  0611                     	;# 
  2604  0612                     	;# 
  2605  0613                     	;# 
  2606  0614                     	;# 
  2607  0616                     	;# 
  2608  0617                     	;# 
  2609  0618                     	;# 
  2610  0619                     	;# 
  2611  061A                     	;# 
  2612  061B                     	;# 
  2613  061C                     	;# 
  2614  061D                     	;# 
  2615  061E                     	;# 
  2616  068C                     	;# 
  2617  068D                     	;# 
  2618  068E                     	;# 
  2619  068F                     	;# 
  2620  0690                     	;# 
  2621  0691                     	;# 
  2622  0692                     	;# 
  2623  0693                     	;# 
  2624  0694                     	;# 
  2625  070C                     	;# 
  2626  070D                     	;# 
  2627  070E                     	;# 
  2628  070F                     	;# 
  2629  0710                     	;# 
  2630  0711                     	;# 
  2631  0712                     	;# 
  2632  0713                     	;# 
  2633  0714                     	;# 
  2634  0716                     	;# 
  2635  0717                     	;# 
  2636  0718                     	;# 
  2637  0719                     	;# 
  2638  071A                     	;# 
  2639  071B                     	;# 
  2640  071C                     	;# 
  2641  071D                     	;# 
  2642  071E                     	;# 
  2643  0796                     	;# 
  2644  0797                     	;# 
  2645  0798                     	;# 
  2646  0799                     	;# 
  2647  079A                     	;# 
  2648  079B                     	;# 
  2649  080C                     	;# 
  2650  080D                     	;# 
  2651  080E                     	;# 
  2652  080F                     	;# 
  2653  0810                     	;# 
  2654  0811                     	;# 
  2655  0812                     	;# 
  2656  0813                     	;# 
  2657  0814                     	;# 
  2658  081A                     	;# 
  2659  081B                     	;# 
  2660  081C                     	;# 
  2661  081D                     	;# 
  2662  081E                     	;# 
  2663  081F                     	;# 
  2664  088C                     	;# 
  2665  088D                     	;# 
  2666  088E                     	;# 
  2667  088F                     	;# 
  2668  0890                     	;# 
  2669  0891                     	;# 
  2670  0892                     	;# 
  2671  0893                     	;# 
  2672  0895                     	;# 
  2673  0896                     	;# 
  2674  0897                     	;# 
  2675  0898                     	;# 
  2676  0899                     	;# 
  2677  089A                     	;# 
  2678  089B                     	;# 
  2679  090C                     	;# 
  2680  090E                     	;# 
  2681  090F                     	;# 
  2682  091F                     	;# 
  2683  091F                     	;# 
  2684  098F                     	;# 
  2685  098F                     	;# 
  2686  0990                     	;# 
  2687  0991                     	;# 
  2688  0992                     	;# 
  2689  0993                     	;# 
  2690  0994                     	;# 
  2691  0995                     	;# 
  2692  0996                     	;# 
  2693  0997                     	;# 
  2694  0E0F                     	;# 
  2695  0E10                     	;# 
  2696  0E11                     	;# 
  2697  0E12                     	;# 
  2698  0E13                     	;# 
  2699  0E14                     	;# 
  2700  0E15                     	;# 
  2701  0E16                     	;# 
  2702  0E17                     	;# 
  2703  0E18                     	;# 
  2704  0E19                     	;# 
  2705  0E1A                     	;# 
  2706  0E1B                     	;# 
  2707  0E1C                     	;# 
  2708  0E1D                     	;# 
  2709  0E1E                     	;# 
  2710  0E1F                     	;# 
  2711  0E20                     	;# 
  2712  0E21                     	;# 
  2713  0E22                     	;# 
  2714  0E23                     	;# 
  2715  0E24                     	;# 
  2716  0E25                     	;# 
  2717  0E26                     	;# 
  2718  0E27                     	;# 
  2719  0E28                     	;# 
  2720  0E29                     	;# 
  2721  0E2A                     	;# 
  2722  0E2B                     	;# 
  2723  0E2C                     	;# 
  2724  0E2D                     	;# 
  2725  0E2E                     	;# 
  2726  0E2F                     	;# 
  2727  0E30                     	;# 
  2728  0E31                     	;# 
  2729  0E32                     	;# 
  2730  0E33                     	;# 
  2731  0E34                     	;# 
  2732  0E35                     	;# 
  2733  0E36                     	;# 
  2734  0E37                     	;# 
  2735  0E8F                     	;# 
  2736  0E90                     	;# 
  2737  0E91                     	;# 
  2738  0E92                     	;# 
  2739  0E93                     	;# 
  2740  0E94                     	;# 
  2741  0E95                     	;# 
  2742  0E96                     	;# 
  2743  0E97                     	;# 
  2744  0E9C                     	;# 
  2745  0E9D                     	;# 
  2746  0E9E                     	;# 
  2747  0EA1                     	;# 
  2748  0EA2                     	;# 
  2749  0EA3                     	;# 
  2750  0EA4                     	;# 
  2751  0EA5                     	;# 
  2752  0EA9                     	;# 
  2753  0EAA                     	;# 
  2754  0EAB                     	;# 
  2755  0EAC                     	;# 
  2756  0EB1                     	;# 
  2757  0EB2                     	;# 
  2758  0EB3                     	;# 
  2759  0EB8                     	;# 
  2760  0EB9                     	;# 
  2761  0EBA                     	;# 
  2762  0EBB                     	;# 
  2763  0EBC                     	;# 
  2764  0EBD                     	;# 
  2765  0EBE                     	;# 
  2766  0EC3                     	;# 
  2767  0EC5                     	;# 
  2768  0EC6                     	;# 
  2769  0EC7                     	;# 
  2770  0EC8                     	;# 
  2771  0EC9                     	;# 
  2772  0ECA                     	;# 
  2773  0ECB                     	;# 
  2774  0ECC                     	;# 
  2775  0F10                     	;# 
  2776  0F11                     	;# 
  2777  0F12                     	;# 
  2778  0F13                     	;# 
  2779  0F14                     	;# 
  2780  0F15                     	;# 
  2781  0F16                     	;# 
  2782  0F17                     	;# 
  2783  0F18                     	;# 
  2784  0F19                     	;# 
  2785  0F1A                     	;# 
  2786  0F1B                     	;# 
  2787  0F1C                     	;# 
  2788  0F1D                     	;# 
  2789  0F1E                     	;# 
  2790  0F1F                     	;# 
  2791  0F20                     	;# 
  2792  0F21                     	;# 
  2793  0F22                     	;# 
  2794  0F23                     	;# 
  2795  0F24                     	;# 
  2796  0F25                     	;# 
  2797  0F26                     	;# 
  2798  0F27                     	;# 
  2799  0F28                     	;# 
  2800  0F29                     	;# 
  2801  0F2A                     	;# 
  2802  0F2B                     	;# 
  2803  0F2C                     	;# 
  2804  0F2D                     	;# 
  2805  0F2E                     	;# 
  2806  0F2F                     	;# 
  2807  0F30                     	;# 
  2808  0F31                     	;# 
  2809  0F32                     	;# 
  2810  0F38                     	;# 
  2811  0F39                     	;# 
  2812  0F3A                     	;# 
  2813  0F3B                     	;# 
  2814  0F3C                     	;# 
  2815  0F3D                     	;# 
  2816  0F3E                     	;# 
  2817  0F3F                     	;# 
  2818  0F40                     	;# 
  2819  0F41                     	;# 
  2820  0F43                     	;# 
  2821  0F44                     	;# 
  2822  0F45                     	;# 
  2823  0F46                     	;# 
  2824  0F47                     	;# 
  2825  0F48                     	;# 
  2826  0F49                     	;# 
  2827  0F4A                     	;# 
  2828  0F4B                     	;# 
  2829  0F4C                     	;# 
  2830  0F4E                     	;# 
  2831  0F4F                     	;# 
  2832  0F50                     	;# 
  2833  0F51                     	;# 
  2834  0F52                     	;# 
  2835  0F53                     	;# 
  2836  0F54                     	;# 
  2837  0F55                     	;# 
  2838  0F56                     	;# 
  2839  0F57                     	;# 
  2840  0F59                     	;# 
  2841  0F5A                     	;# 
  2842  0F5B                     	;# 
  2843  0F5C                     	;# 
  2844  0F5D                     	;# 
  2845  0F61                     	;# 
  2846  0F62                     	;# 
  2847  0F64                     	;# 
  2848  0F65                     	;# 
  2849  0F66                     	;# 
  2850  0F67                     	;# 
  2851  0F68                     	;# 
  2852  0F69                     	;# 
  2853  0F6A                     	;# 
  2854  0F6B                     	;# 
  2855  0F6C                     	;# 
  2856  0F6D                     	;# 
  2857  0FE4                     	;# 
  2858  0FE5                     	;# 
  2859  0FE6                     	;# 
  2860  0FE7                     	;# 
  2861  0FE8                     	;# 
  2862  0FE9                     	;# 
  2863  0FEA                     	;# 
  2864  0FEB                     	;# 
  2865  0FED                     	;# 
  2866  0FEE                     	;# 
  2867  0FEF                     	;# 
  2868  0000                     	;# 
  2869  0001                     	;# 
  2870  0002                     	;# 
  2871  0003                     	;# 
  2872  0004                     	;# 
  2873  0005                     	;# 
  2874  0006                     	;# 
  2875  0007                     	;# 
  2876  0008                     	;# 
  2877  0009                     	;# 
  2878  000A                     	;# 
  2879  000B                     	;# 
  2880  000C                     	;# 
  2881  000D                     	;# 
  2882  000E                     	;# 
  2883  000F                     	;# 
  2884  0010                     	;# 
  2885  0011                     	;# 
  2886  0012                     	;# 
  2887  0013                     	;# 
  2888  0014                     	;# 
  2889  0015                     	;# 
  2890  0016                     	;# 
  2891  0017                     	;# 
  2892  0018                     	;# 
  2893  0019                     	;# 
  2894  001A                     	;# 
  2895  001C                     	;# 
  2896  001C                     	;# 
  2897  001D                     	;# 
  2898  001D                     	;# 
  2899  001E                     	;# 
  2900  001F                     	;# 
  2901  008C                     	;# 
  2902  008C                     	;# 
  2903  008D                     	;# 
  2904  008E                     	;# 
  2905  008E                     	;# 
  2906  008F                     	;# 
  2907  0090                     	;# 
  2908  0090                     	;# 
  2909  0091                     	;# 
  2910  0093                     	;# 
  2911  0094                     	;# 
  2912  0095                     	;# 
  2913  0096                     	;# 
  2914  0097                     	;# 
  2915  0098                     	;# 
  2916  0099                     	;# 
  2917  009A                     	;# 
  2918  009B                     	;# 
  2919  009C                     	;# 
  2920  009D                     	;# 
  2921  009E                     	;# 
  2922  010C                     	;# 
  2923  010D                     	;# 
  2924  010E                     	;# 
  2925  010E                     	;# 
  2926  010F                     	;# 
  2927  0110                     	;# 
  2928  0110                     	;# 
  2929  0111                     	;# 
  2930  0112                     	;# 
  2931  0112                     	;# 
  2932  0113                     	;# 
  2933  0114                     	;# 
  2934  0114                     	;# 
  2935  0115                     	;# 
  2936  0116                     	;# 
  2937  0116                     	;# 
  2938  0117                     	;# 
  2939  0119                     	;# 
  2940  0119                     	;# 
  2941  0119                     	;# 
  2942  011A                     	;# 
  2943  011A                     	;# 
  2944  011A                     	;# 
  2945  011B                     	;# 
  2946  011B                     	;# 
  2947  011B                     	;# 
  2948  011B                     	;# 
  2949  011B                     	;# 
  2950  011C                     	;# 
  2951  011C                     	;# 
  2952  011C                     	;# 
  2953  011D                     	;# 
  2954  011D                     	;# 
  2955  011D                     	;# 
  2956  011E                     	;# 
  2957  011E                     	;# 
  2958  011E                     	;# 
  2959  011F                     	;# 
  2960  011F                     	;# 
  2961  011F                     	;# 
  2962  011F                     	;# 
  2963  011F                     	;# 
  2964  018C                     	;# 
  2965  018D                     	;# 
  2966  018E                     	;# 
  2967  018F                     	;# 
  2968  0190                     	;# 
  2969  0191                     	;# 
  2970  0192                     	;# 
  2971  0196                     	;# 
  2972  0197                     	;# 
  2973  0198                     	;# 
  2974  0199                     	;# 
  2975  019A                     	;# 
  2976  019B                     	;# 
  2977  019C                     	;# 
  2978  020C                     	;# 
  2979  020C                     	;# 
  2980  020D                     	;# 
  2981  020E                     	;# 
  2982  020F                     	;# 
  2983  020F                     	;# 
  2984  0210                     	;# 
  2985  0210                     	;# 
  2986  0211                     	;# 
  2987  0211                     	;# 
  2988  0212                     	;# 
  2989  0212                     	;# 
  2990  0213                     	;# 
  2991  0214                     	;# 
  2992  0215                     	;# 
  2993  0215                     	;# 
  2994  0216                     	;# 
  2995  0216                     	;# 
  2996  0217                     	;# 
  2997  0217                     	;# 
  2998  0218                     	;# 
  2999  0218                     	;# 
  3000  0219                     	;# 
  3001  021A                     	;# 
  3002  021B                     	;# 
  3003  021B                     	;# 
  3004  021C                     	;# 
  3005  021C                     	;# 
  3006  021D                     	;# 
  3007  021D                     	;# 
  3008  021E                     	;# 
  3009  021F                     	;# 
  3010  028C                     	;# 
  3011  028C                     	;# 
  3012  028D                     	;# 
  3013  028D                     	;# 
  3014  028E                     	;# 
  3015  028F                     	;# 
  3016  0290                     	;# 
  3017  0290                     	;# 
  3018  0291                     	;# 
  3019  0292                     	;# 
  3020  0292                     	;# 
  3021  0293                     	;# 
  3022  0293                     	;# 
  3023  0294                     	;# 
  3024  0295                     	;# 
  3025  0296                     	;# 
  3026  0296                     	;# 
  3027  0297                     	;# 
  3028  0298                     	;# 
  3029  0298                     	;# 
  3030  0299                     	;# 
  3031  0299                     	;# 
  3032  029A                     	;# 
  3033  029B                     	;# 
  3034  029C                     	;# 
  3035  029C                     	;# 
  3036  029D                     	;# 
  3037  030C                     	;# 
  3038  030C                     	;# 
  3039  030D                     	;# 
  3040  030E                     	;# 
  3041  030F                     	;# 
  3042  0310                     	;# 
  3043  0310                     	;# 
  3044  0311                     	;# 
  3045  0312                     	;# 
  3046  0313                     	;# 
  3047  0314                     	;# 
  3048  0314                     	;# 
  3049  0315                     	;# 
  3050  0316                     	;# 
  3051  0317                     	;# 
  3052  0318                     	;# 
  3053  0318                     	;# 
  3054  0319                     	;# 
  3055  031A                     	;# 
  3056  031B                     	;# 
  3057  031C                     	;# 
  3058  031C                     	;# 
  3059  031D                     	;# 
  3060  031E                     	;# 
  3061  031F                     	;# 
  3062  038C                     	;# 
  3063  038C                     	;# 
  3064  038D                     	;# 
  3065  038E                     	;# 
  3066  0390                     	;# 
  3067  0390                     	;# 
  3068  0391                     	;# 
  3069  0392                     	;# 
  3070  040C                     	;# 
  3071  040D                     	;# 
  3072  040E                     	;# 
  3073  040F                     	;# 
  3074  0410                     	;# 
  3075  0411                     	;# 
  3076  0416                     	;# 
  3077  0416                     	;# 
  3078  0417                     	;# 
  3079  0418                     	;# 
  3080  0418                     	;# 
  3081  0419                     	;# 
  3082  041A                     	;# 
  3083  041A                     	;# 
  3084  041B                     	;# 
  3085  041C                     	;# 
  3086  041C                     	;# 
  3087  041D                     	;# 
  3088  041E                     	;# 
  3089  041F                     	;# 
  3090  048C                     	;# 
  3091  048C                     	;# 
  3092  048D                     	;# 
  3093  048E                     	;# 
  3094  048F                     	;# 
  3095  048F                     	;# 
  3096  0490                     	;# 
  3097  0491                     	;# 
  3098  0492                     	;# 
  3099  0492                     	;# 
  3100  0493                     	;# 
  3101  0494                     	;# 
  3102  0495                     	;# 
  3103  0495                     	;# 
  3104  0496                     	;# 
  3105  0497                     	;# 
  3106  0498                     	;# 
  3107  0499                     	;# 
  3108  049A                     	;# 
  3109  049B                     	;# 
  3110  049C                     	;# 
  3111  049D                     	;# 
  3112  050C                     	;# 
  3113  050C                     	;# 
  3114  050D                     	;# 
  3115  050E                     	;# 
  3116  050F                     	;# 
  3117  050F                     	;# 
  3118  0510                     	;# 
  3119  0511                     	;# 
  3120  0512                     	;# 
  3121  0512                     	;# 
  3122  0513                     	;# 
  3123  0514                     	;# 
  3124  0515                     	;# 
  3125  0515                     	;# 
  3126  0516                     	;# 
  3127  0517                     	;# 
  3128  0518                     	;# 
  3129  0519                     	;# 
  3130  051A                     	;# 
  3131  051B                     	;# 
  3132  051C                     	;# 
  3133  051D                     	;# 
  3134  058C                     	;# 
  3135  058C                     	;# 
  3136  058D                     	;# 
  3137  058E                     	;# 
  3138  058F                     	;# 
  3139  058F                     	;# 
  3140  0590                     	;# 
  3141  0591                     	;# 
  3142  0592                     	;# 
  3143  0593                     	;# 
  3144  060C                     	;# 
  3145  060D                     	;# 
  3146  060E                     	;# 
  3147  060F                     	;# 
  3148  0610                     	;# 
  3149  0611                     	;# 
  3150  0612                     	;# 
  3151  0613                     	;# 
  3152  0614                     	;# 
  3153  0616                     	;# 
  3154  0617                     	;# 
  3155  0618                     	;# 
  3156  0619                     	;# 
  3157  061A                     	;# 
  3158  061B                     	;# 
  3159  061C                     	;# 
  3160  061D                     	;# 
  3161  061E                     	;# 
  3162  068C                     	;# 
  3163  068D                     	;# 
  3164  068E                     	;# 
  3165  068F                     	;# 
  3166  0690                     	;# 
  3167  0691                     	;# 
  3168  0692                     	;# 
  3169  0693                     	;# 
  3170  0694                     	;# 
  3171  070C                     	;# 
  3172  070D                     	;# 
  3173  070E                     	;# 
  3174  070F                     	;# 
  3175  0710                     	;# 
  3176  0711                     	;# 
  3177  0712                     	;# 
  3178  0713                     	;# 
  3179  0714                     	;# 
  3180  0716                     	;# 
  3181  0717                     	;# 
  3182  0718                     	;# 
  3183  0719                     	;# 
  3184  071A                     	;# 
  3185  071B                     	;# 
  3186  071C                     	;# 
  3187  071D                     	;# 
  3188  071E                     	;# 
  3189  0796                     	;# 
  3190  0797                     	;# 
  3191  0798                     	;# 
  3192  0799                     	;# 
  3193  079A                     	;# 
  3194  079B                     	;# 
  3195  080C                     	;# 
  3196  080D                     	;# 
  3197  080E                     	;# 
  3198  080F                     	;# 
  3199  0810                     	;# 
  3200  0811                     	;# 
  3201  0812                     	;# 
  3202  0813                     	;# 
  3203  0814                     	;# 
  3204  081A                     	;# 
  3205  081B                     	;# 
  3206  081C                     	;# 
  3207  081D                     	;# 
  3208  081E                     	;# 
  3209  081F                     	;# 
  3210  088C                     	;# 
  3211  088D                     	;# 
  3212  088E                     	;# 
  3213  088F                     	;# 
  3214  0890                     	;# 
  3215  0891                     	;# 
  3216  0892                     	;# 
  3217  0893                     	;# 
  3218  0895                     	;# 
  3219  0896                     	;# 
  3220  0897                     	;# 
  3221  0898                     	;# 
  3222  0899                     	;# 
  3223  089A                     	;# 
  3224  089B                     	;# 
  3225  090C                     	;# 
  3226  090E                     	;# 
  3227  090F                     	;# 
  3228  091F                     	;# 
  3229  091F                     	;# 
  3230  098F                     	;# 
  3231  098F                     	;# 
  3232  0990                     	;# 
  3233  0991                     	;# 
  3234  0992                     	;# 
  3235  0993                     	;# 
  3236  0994                     	;# 
  3237  0995                     	;# 
  3238  0996                     	;# 
  3239  0997                     	;# 
  3240  0E0F                     	;# 
  3241  0E10                     	;# 
  3242  0E11                     	;# 
  3243  0E12                     	;# 
  3244  0E13                     	;# 
  3245  0E14                     	;# 
  3246  0E15                     	;# 
  3247  0E16                     	;# 
  3248  0E17                     	;# 
  3249  0E18                     	;# 
  3250  0E19                     	;# 
  3251  0E1A                     	;# 
  3252  0E1B                     	;# 
  3253  0E1C                     	;# 
  3254  0E1D                     	;# 
  3255  0E1E                     	;# 
  3256  0E1F                     	;# 
  3257  0E20                     	;# 
  3258  0E21                     	;# 
  3259  0E22                     	;# 
  3260  0E23                     	;# 
  3261  0E24                     	;# 
  3262  0E25                     	;# 
  3263  0E26                     	;# 
  3264  0E27                     	;# 
  3265  0E28                     	;# 
  3266  0E29                     	;# 
  3267  0E2A                     	;# 
  3268  0E2B                     	;# 
  3269  0E2C                     	;# 
  3270  0E2D                     	;# 
  3271  0E2E                     	;# 
  3272  0E2F                     	;# 
  3273  0E30                     	;# 
  3274  0E31                     	;# 
  3275  0E32                     	;# 
  3276  0E33                     	;# 
  3277  0E34                     	;# 
  3278  0E35                     	;# 
  3279  0E36                     	;# 
  3280  0E37                     	;# 
  3281  0E8F                     	;# 
  3282  0E90                     	;# 
  3283  0E91                     	;# 
  3284  0E92                     	;# 
  3285  0E93                     	;# 
  3286  0E94                     	;# 
  3287  0E95                     	;# 
  3288  0E96                     	;# 
  3289  0E97                     	;# 
  3290  0E9C                     	;# 
  3291  0E9D                     	;# 
  3292  0E9E                     	;# 
  3293  0EA1                     	;# 
  3294  0EA2                     	;# 
  3295  0EA3                     	;# 
  3296  0EA4                     	;# 
  3297  0EA5                     	;# 
  3298  0EA9                     	;# 
  3299  0EAA                     	;# 
  3300  0EAB                     	;# 
  3301  0EAC                     	;# 
  3302  0EB1                     	;# 
  3303  0EB2                     	;# 
  3304  0EB3                     	;# 
  3305  0EB8                     	;# 
  3306  0EB9                     	;# 
  3307  0EBA                     	;# 
  3308  0EBB                     	;# 
  3309  0EBC                     	;# 
  3310  0EBD                     	;# 
  3311  0EBE                     	;# 
  3312  0EC3                     	;# 
  3313  0EC5                     	;# 
  3314  0EC6                     	;# 
  3315  0EC7                     	;# 
  3316  0EC8                     	;# 
  3317  0EC9                     	;# 
  3318  0ECA                     	;# 
  3319  0ECB                     	;# 
  3320  0ECC                     	;# 
  3321  0F10                     	;# 
  3322  0F11                     	;# 
  3323  0F12                     	;# 
  3324  0F13                     	;# 
  3325  0F14                     	;# 
  3326  0F15                     	;# 
  3327  0F16                     	;# 
  3328  0F17                     	;# 
  3329  0F18                     	;# 
  3330  0F19                     	;# 
  3331  0F1A                     	;# 
  3332  0F1B                     	;# 
  3333  0F1C                     	;# 
  3334  0F1D                     	;# 
  3335  0F1E                     	;# 
  3336  0F1F                     	;# 
  3337  0F20                     	;# 
  3338  0F21                     	;# 
  3339  0F22                     	;# 
  3340  0F23                     	;# 
  3341  0F24                     	;# 
  3342  0F25                     	;# 
  3343  0F26                     	;# 
  3344  0F27                     	;# 
  3345  0F28                     	;# 
  3346  0F29                     	;# 
  3347  0F2A                     	;# 
  3348  0F2B                     	;# 
  3349  0F2C                     	;# 
  3350  0F2D                     	;# 
  3351  0F2E                     	;# 
  3352  0F2F                     	;# 
  3353  0F30                     	;# 
  3354  0F31                     	;# 
  3355  0F32                     	;# 
  3356  0F38                     	;# 
  3357  0F39                     	;# 
  3358  0F3A                     	;# 
  3359  0F3B                     	;# 
  3360  0F3C                     	;# 
  3361  0F3D                     	;# 
  3362  0F3E                     	;# 
  3363  0F3F                     	;# 
  3364  0F40                     	;# 
  3365  0F41                     	;# 
  3366  0F43                     	;# 
  3367  0F44                     	;# 
  3368  0F45                     	;# 
  3369  0F46                     	;# 
  3370  0F47                     	;# 
  3371  0F48                     	;# 
  3372  0F49                     	;# 
  3373  0F4A                     	;# 
  3374  0F4B                     	;# 
  3375  0F4C                     	;# 
  3376  0F4E                     	;# 
  3377  0F4F                     	;# 
  3378  0F50                     	;# 
  3379  0F51                     	;# 
  3380  0F52                     	;# 
  3381  0F53                     	;# 
  3382  0F54                     	;# 
  3383  0F55                     	;# 
  3384  0F56                     	;# 
  3385  0F57                     	;# 
  3386  0F59                     	;# 
  3387  0F5A                     	;# 
  3388  0F5B                     	;# 
  3389  0F5C                     	;# 
  3390  0F5D                     	;# 
  3391  0F61                     	;# 
  3392  0F62                     	;# 
  3393  0F64                     	;# 
  3394  0F65                     	;# 
  3395  0F66                     	;# 
  3396  0F67                     	;# 
  3397  0F68                     	;# 
  3398  0F69                     	;# 
  3399  0F6A                     	;# 
  3400  0F6B                     	;# 
  3401  0F6C                     	;# 
  3402  0F6D                     	;# 
  3403  0FE4                     	;# 
  3404  0FE5                     	;# 
  3405  0FE6                     	;# 
  3406  0FE7                     	;# 
  3407  0FE8                     	;# 
  3408  0FE9                     	;# 
  3409  0FEA                     	;# 
  3410  0FEB                     	;# 
  3411  0FED                     	;# 
  3412  0FEE                     	;# 
  3413  0FEF                     	;# 
  3414  0000                     	;# 
  3415  0001                     	;# 
  3416  0002                     	;# 
  3417  0003                     	;# 
  3418  0004                     	;# 
  3419  0005                     	;# 
  3420  0006                     	;# 
  3421  0007                     	;# 
  3422  0008                     	;# 
  3423  0009                     	;# 
  3424  000A                     	;# 
  3425  000B                     	;# 
  3426  000C                     	;# 
  3427  000D                     	;# 
  3428  000E                     	;# 
  3429  000F                     	;# 
  3430  0010                     	;# 
  3431  0011                     	;# 
  3432  0012                     	;# 
  3433  0013                     	;# 
  3434  0014                     	;# 
  3435  0015                     	;# 
  3436  0016                     	;# 
  3437  0017                     	;# 
  3438  0018                     	;# 
  3439  0019                     	;# 
  3440  001A                     	;# 
  3441  001C                     	;# 
  3442  001C                     	;# 
  3443  001D                     	;# 
  3444  001D                     	;# 
  3445  001E                     	;# 
  3446  001F                     	;# 
  3447  008C                     	;# 
  3448  008C                     	;# 
  3449  008D                     	;# 
  3450  008E                     	;# 
  3451  008E                     	;# 
  3452  008F                     	;# 
  3453  0090                     	;# 
  3454  0090                     	;# 
  3455  0091                     	;# 
  3456  0093                     	;# 
  3457  0094                     	;# 
  3458  0095                     	;# 
  3459  0096                     	;# 
  3460  0097                     	;# 
  3461  0098                     	;# 
  3462  0099                     	;# 
  3463  009A                     	;# 
  3464  009B                     	;# 
  3465  009C                     	;# 
  3466  009D                     	;# 
  3467  009E                     	;# 
  3468  010C                     	;# 
  3469  010D                     	;# 
  3470  010E                     	;# 
  3471  010E                     	;# 
  3472  010F                     	;# 
  3473  0110                     	;# 
  3474  0110                     	;# 
  3475  0111                     	;# 
  3476  0112                     	;# 
  3477  0112                     	;# 
  3478  0113                     	;# 
  3479  0114                     	;# 
  3480  0114                     	;# 
  3481  0115                     	;# 
  3482  0116                     	;# 
  3483  0116                     	;# 
  3484  0117                     	;# 
  3485  0119                     	;# 
  3486  0119                     	;# 
  3487  0119                     	;# 
  3488  011A                     	;# 
  3489  011A                     	;# 
  3490  011A                     	;# 
  3491  011B                     	;# 
  3492  011B                     	;# 
  3493  011B                     	;# 
  3494  011B                     	;# 
  3495  011B                     	;# 
  3496  011C                     	;# 
  3497  011C                     	;# 
  3498  011C                     	;# 
  3499  011D                     	;# 
  3500  011D                     	;# 
  3501  011D                     	;# 
  3502  011E                     	;# 
  3503  011E                     	;# 
  3504  011E                     	;# 
  3505  011F                     	;# 
  3506  011F                     	;# 
  3507  011F                     	;# 
  3508  011F                     	;# 
  3509  011F                     	;# 
  3510  018C                     	;# 
  3511  018D                     	;# 
  3512  018E                     	;# 
  3513  018F                     	;# 
  3514  0190                     	;# 
  3515  0191                     	;# 
  3516  0192                     	;# 
  3517  0196                     	;# 
  3518  0197                     	;# 
  3519  0198                     	;# 
  3520  0199                     	;# 
  3521  019A                     	;# 
  3522  019B                     	;# 
  3523  019C                     	;# 
  3524  020C                     	;# 
  3525  020C                     	;# 
  3526  020D                     	;# 
  3527  020E                     	;# 
  3528  020F                     	;# 
  3529  020F                     	;# 
  3530  0210                     	;# 
  3531  0210                     	;# 
  3532  0211                     	;# 
  3533  0211                     	;# 
  3534  0212                     	;# 
  3535  0212                     	;# 
  3536  0213                     	;# 
  3537  0214                     	;# 
  3538  0215                     	;# 
  3539  0215                     	;# 
  3540  0216                     	;# 
  3541  0216                     	;# 
  3542  0217                     	;# 
  3543  0217                     	;# 
  3544  0218                     	;# 
  3545  0218                     	;# 
  3546  0219                     	;# 
  3547  021A                     	;# 
  3548  021B                     	;# 
  3549  021B                     	;# 
  3550  021C                     	;# 
  3551  021C                     	;# 
  3552  021D                     	;# 
  3553  021D                     	;# 
  3554  021E                     	;# 
  3555  021F                     	;# 
  3556  028C                     	;# 
  3557  028C                     	;# 
  3558  028D                     	;# 
  3559  028D                     	;# 
  3560  028E                     	;# 
  3561  028F                     	;# 
  3562  0290                     	;# 
  3563  0290                     	;# 
  3564  0291                     	;# 
  3565  0292                     	;# 
  3566  0292                     	;# 
  3567  0293                     	;# 
  3568  0293                     	;# 
  3569  0294                     	;# 
  3570  0295                     	;# 
  3571  0296                     	;# 
  3572  0296                     	;# 
  3573  0297                     	;# 
  3574  0298                     	;# 
  3575  0298                     	;# 
  3576  0299                     	;# 
  3577  0299                     	;# 
  3578  029A                     	;# 
  3579  029B                     	;# 
  3580  029C                     	;# 
  3581  029C                     	;# 
  3582  029D                     	;# 
  3583  030C                     	;# 
  3584  030C                     	;# 
  3585  030D                     	;# 
  3586  030E                     	;# 
  3587  030F                     	;# 
  3588  0310                     	;# 
  3589  0310                     	;# 
  3590  0311                     	;# 
  3591  0312                     	;# 
  3592  0313                     	;# 
  3593  0314                     	;# 
  3594  0314                     	;# 
  3595  0315                     	;# 
  3596  0316                     	;# 
  3597  0317                     	;# 
  3598  0318                     	;# 
  3599  0318                     	;# 
  3600  0319                     	;# 
  3601  031A                     	;# 
  3602  031B                     	;# 
  3603  031C                     	;# 
  3604  031C                     	;# 
  3605  031D                     	;# 
  3606  031E                     	;# 
  3607  031F                     	;# 
  3608  038C                     	;# 
  3609  038C                     	;# 
  3610  038D                     	;# 
  3611  038E                     	;# 
  3612  0390                     	;# 
  3613  0390                     	;# 
  3614  0391                     	;# 
  3615  0392                     	;# 
  3616  040C                     	;# 
  3617  040D                     	;# 
  3618  040E                     	;# 
  3619  040F                     	;# 
  3620  0410                     	;# 
  3621  0411                     	;# 
  3622  0416                     	;# 
  3623  0416                     	;# 
  3624  0417                     	;# 
  3625  0418                     	;# 
  3626  0418                     	;# 
  3627  0419                     	;# 
  3628  041A                     	;# 
  3629  041A                     	;# 
  3630  041B                     	;# 
  3631  041C                     	;# 
  3632  041C                     	;# 
  3633  041D                     	;# 
  3634  041E                     	;# 
  3635  041F                     	;# 
  3636  048C                     	;# 
  3637  048C                     	;# 
  3638  048D                     	;# 
  3639  048E                     	;# 
  3640  048F                     	;# 
  3641  048F                     	;# 
  3642  0490                     	;# 
  3643  0491                     	;# 
  3644  0492                     	;# 
  3645  0492                     	;# 
  3646  0493                     	;# 
  3647  0494                     	;# 
  3648  0495                     	;# 
  3649  0495                     	;# 
  3650  0496                     	;# 
  3651  0497                     	;# 
  3652  0498                     	;# 
  3653  0499                     	;# 
  3654  049A                     	;# 
  3655  049B                     	;# 
  3656  049C                     	;# 
  3657  049D                     	;# 
  3658  050C                     	;# 
  3659  050C                     	;# 
  3660  050D                     	;# 
  3661  050E                     	;# 
  3662  050F                     	;# 
  3663  050F                     	;# 
  3664  0510                     	;# 
  3665  0511                     	;# 
  3666  0512                     	;# 
  3667  0512                     	;# 
  3668  0513                     	;# 
  3669  0514                     	;# 
  3670  0515                     	;# 
  3671  0515                     	;# 
  3672  0516                     	;# 
  3673  0517                     	;# 
  3674  0518                     	;# 
  3675  0519                     	;# 
  3676  051A                     	;# 
  3677  051B                     	;# 
  3678  051C                     	;# 
  3679  051D                     	;# 
  3680  058C                     	;# 
  3681  058C                     	;# 
  3682  058D                     	;# 
  3683  058E                     	;# 
  3684  058F                     	;# 
  3685  058F                     	;# 
  3686  0590                     	;# 
  3687  0591                     	;# 
  3688  0592                     	;# 
  3689  0593                     	;# 
  3690  060C                     	;# 
  3691  060D                     	;# 
  3692  060E                     	;# 
  3693  060F                     	;# 
  3694  0610                     	;# 
  3695  0611                     	;# 
  3696  0612                     	;# 
  3697  0613                     	;# 
  3698  0614                     	;# 
  3699  0616                     	;# 
  3700  0617                     	;# 
  3701  0618                     	;# 
  3702  0619                     	;# 
  3703  061A                     	;# 
  3704  061B                     	;# 
  3705  061C                     	;# 
  3706  061D                     	;# 
  3707  061E                     	;# 
  3708  068C                     	;# 
  3709  068D                     	;# 
  3710  068E                     	;# 
  3711  068F                     	;# 
  3712  0690                     	;# 
  3713  0691                     	;# 
  3714  0692                     	;# 
  3715  0693                     	;# 
  3716  0694                     	;# 
  3717  070C                     	;# 
  3718  070D                     	;# 
  3719  070E                     	;# 
  3720  070F                     	;# 
  3721  0710                     	;# 
  3722  0711                     	;# 
  3723  0712                     	;# 
  3724  0713                     	;# 
  3725  0714                     	;# 
  3726  0716                     	;# 
  3727  0717                     	;# 
  3728  0718                     	;# 
  3729  0719                     	;# 
  3730  071A                     	;# 
  3731  071B                     	;# 
  3732  071C                     	;# 
  3733  071D                     	;# 
  3734  071E                     	;# 
  3735  0796                     	;# 
  3736  0797                     	;# 
  3737  0798                     	;# 
  3738  0799                     	;# 
  3739  079A                     	;# 
  3740  079B                     	;# 
  3741  080C                     	;# 
  3742  080D                     	;# 
  3743  080E                     	;# 
  3744  080F                     	;# 
  3745  0810                     	;# 
  3746  0811                     	;# 
  3747  0812                     	;# 
  3748  0813                     	;# 
  3749  0814                     	;# 
  3750  081A                     	;# 
  3751  081B                     	;# 
  3752  081C                     	;# 
  3753  081D                     	;# 
  3754  081E                     	;# 
  3755  081F                     	;# 
  3756  088C                     	;# 
  3757  088D                     	;# 
  3758  088E                     	;# 
  3759  088F                     	;# 
  3760  0890                     	;# 
  3761  0891                     	;# 
  3762  0892                     	;# 
  3763  0893                     	;# 
  3764  0895                     	;# 
  3765  0896                     	;# 
  3766  0897                     	;# 
  3767  0898                     	;# 
  3768  0899                     	;# 
  3769  089A                     	;# 
  3770  089B                     	;# 
  3771  090C                     	;# 
  3772  090E                     	;# 
  3773  090F                     	;# 
  3774  091F                     	;# 
  3775  091F                     	;# 
  3776  098F                     	;# 
  3777  098F                     	;# 
  3778  0990                     	;# 
  3779  0991                     	;# 
  3780  0992                     	;# 
  3781  0993                     	;# 
  3782  0994                     	;# 
  3783  0995                     	;# 
  3784  0996                     	;# 
  3785  0997                     	;# 
  3786  0E0F                     	;# 
  3787  0E10                     	;# 
  3788  0E11                     	;# 
  3789  0E12                     	;# 
  3790  0E13                     	;# 
  3791  0E14                     	;# 
  3792  0E15                     	;# 
  3793  0E16                     	;# 
  3794  0E17                     	;# 
  3795  0E18                     	;# 
  3796  0E19                     	;# 
  3797  0E1A                     	;# 
  3798  0E1B                     	;# 
  3799  0E1C                     	;# 
  3800  0E1D                     	;# 
  3801  0E1E                     	;# 
  3802  0E1F                     	;# 
  3803  0E20                     	;# 
  3804  0E21                     	;# 
  3805  0E22                     	;# 
  3806  0E23                     	;# 
  3807  0E24                     	;# 
  3808  0E25                     	;# 
  3809  0E26                     	;# 
  3810  0E27                     	;# 
  3811  0E28                     	;# 
  3812  0E29                     	;# 
  3813  0E2A                     	;# 
  3814  0E2B                     	;# 
  3815  0E2C                     	;# 
  3816  0E2D                     	;# 
  3817  0E2E                     	;# 
  3818  0E2F                     	;# 
  3819  0E30                     	;# 
  3820  0E31                     	;# 
  3821  0E32                     	;# 
  3822  0E33                     	;# 
  3823  0E34                     	;# 
  3824  0E35                     	;# 
  3825  0E36                     	;# 
  3826  0E37                     	;# 
  3827  0E8F                     	;# 
  3828  0E90                     	;# 
  3829  0E91                     	;# 
  3830  0E92                     	;# 
  3831  0E93                     	;# 
  3832  0E94                     	;# 
  3833  0E95                     	;# 
  3834  0E96                     	;# 
  3835  0E97                     	;# 
  3836  0E9C                     	;# 
  3837  0E9D                     	;# 
  3838  0E9E                     	;# 
  3839  0EA1                     	;# 
  3840  0EA2                     	;# 
  3841  0EA3                     	;# 
  3842  0EA4                     	;# 
  3843  0EA5                     	;# 
  3844  0EA9                     	;# 
  3845  0EAA                     	;# 
  3846  0EAB                     	;# 
  3847  0EAC                     	;# 
  3848  0EB1                     	;# 
  3849  0EB2                     	;# 
  3850  0EB3                     	;# 
  3851  0EB8                     	;# 
  3852  0EB9                     	;# 
  3853  0EBA                     	;# 
  3854  0EBB                     	;# 
  3855  0EBC                     	;# 
  3856  0EBD                     	;# 
  3857  0EBE                     	;# 
  3858  0EC3                     	;# 
  3859  0EC5                     	;# 
  3860  0EC6                     	;# 
  3861  0EC7                     	;# 
  3862  0EC8                     	;# 
  3863  0EC9                     	;# 
  3864  0ECA                     	;# 
  3865  0ECB                     	;# 
  3866  0ECC                     	;# 
  3867  0F10                     	;# 
  3868  0F11                     	;# 
  3869  0F12                     	;# 
  3870  0F13                     	;# 
  3871  0F14                     	;# 
  3872  0F15                     	;# 
  3873  0F16                     	;# 
  3874  0F17                     	;# 
  3875  0F18                     	;# 
  3876  0F19                     	;# 
  3877  0F1A                     	;# 
  3878  0F1B                     	;# 
  3879  0F1C                     	;# 
  3880  0F1D                     	;# 
  3881  0F1E                     	;# 
  3882  0F1F                     	;# 
  3883  0F20                     	;# 
  3884  0F21                     	;# 
  3885  0F22                     	;# 
  3886  0F23                     	;# 
  3887  0F24                     	;# 
  3888  0F25                     	;# 
  3889  0F26                     	;# 
  3890  0F27                     	;# 
  3891  0F28                     	;# 
  3892  0F29                     	;# 
  3893  0F2A                     	;# 
  3894  0F2B                     	;# 
  3895  0F2C                     	;# 
  3896  0F2D                     	;# 
  3897  0F2E                     	;# 
  3898  0F2F                     	;# 
  3899  0F30                     	;# 
  3900  0F31                     	;# 
  3901  0F32                     	;# 
  3902  0F38                     	;# 
  3903  0F39                     	;# 
  3904  0F3A                     	;# 
  3905  0F3B                     	;# 
  3906  0F3C                     	;# 
  3907  0F3D                     	;# 
  3908  0F3E                     	;# 
  3909  0F3F                     	;# 
  3910  0F40                     	;# 
  3911  0F41                     	;# 
  3912  0F43                     	;# 
  3913  0F44                     	;# 
  3914  0F45                     	;# 
  3915  0F46                     	;# 
  3916  0F47                     	;# 
  3917  0F48                     	;# 
  3918  0F49                     	;# 
  3919  0F4A                     	;# 
  3920  0F4B                     	;# 
  3921  0F4C                     	;# 
  3922  0F4E                     	;# 
  3923  0F4F                     	;# 
  3924  0F50                     	;# 
  3925  0F51                     	;# 
  3926  0F52                     	;# 
  3927  0F53                     	;# 
  3928  0F54                     	;# 
  3929  0F55                     	;# 
  3930  0F56                     	;# 
  3931  0F57                     	;# 
  3932  0F59                     	;# 
  3933  0F5A                     	;# 
  3934  0F5B                     	;# 
  3935  0F5C                     	;# 
  3936  0F5D                     	;# 
  3937  0F61                     	;# 
  3938  0F62                     	;# 
  3939  0F64                     	;# 
  3940  0F65                     	;# 
  3941  0F66                     	;# 
  3942  0F67                     	;# 
  3943  0F68                     	;# 
  3944  0F69                     	;# 
  3945  0F6A                     	;# 
  3946  0F6B                     	;# 
  3947  0F6C                     	;# 
  3948  0F6D                     	;# 
  3949  0FE4                     	;# 
  3950  0FE5                     	;# 
  3951  0FE6                     	;# 
  3952  0FE7                     	;# 
  3953  0FE8                     	;# 
  3954  0FE9                     	;# 
  3955  0FEA                     	;# 
  3956  0FEB                     	;# 
  3957  0FED                     	;# 
  3958  0FEE                     	;# 
  3959  0FEF                     	;# 
  3960  0000                     	;# 
  3961  0001                     	;# 
  3962  0002                     	;# 
  3963  0003                     	;# 
  3964  0004                     	;# 
  3965  0005                     	;# 
  3966  0006                     	;# 
  3967  0007                     	;# 
  3968  0008                     	;# 
  3969  0009                     	;# 
  3970  000A                     	;# 
  3971  000B                     	;# 
  3972  000C                     	;# 
  3973  000D                     	;# 
  3974  000E                     	;# 
  3975  000F                     	;# 
  3976  0010                     	;# 
  3977  0011                     	;# 
  3978  0012                     	;# 
  3979  0013                     	;# 
  3980  0014                     	;# 
  3981  0015                     	;# 
  3982  0016                     	;# 
  3983  0017                     	;# 
  3984  0018                     	;# 
  3985  0019                     	;# 
  3986  001A                     	;# 
  3987  001C                     	;# 
  3988  001C                     	;# 
  3989  001D                     	;# 
  3990  001D                     	;# 
  3991  001E                     	;# 
  3992  001F                     	;# 
  3993  008C                     	;# 
  3994  008C                     	;# 
  3995  008D                     	;# 
  3996  008E                     	;# 
  3997  008E                     	;# 
  3998  008F                     	;# 
  3999  0090                     	;# 
  4000  0090                     	;# 
  4001  0091                     	;# 
  4002  0093                     	;# 
  4003  0094                     	;# 
  4004  0095                     	;# 
  4005  0096                     	;# 
  4006  0097                     	;# 
  4007  0098                     	;# 
  4008  0099                     	;# 
  4009  009A                     	;# 
  4010  009B                     	;# 
  4011  009C                     	;# 
  4012  009D                     	;# 
  4013  009E                     	;# 
  4014  010C                     	;# 
  4015  010D                     	;# 
  4016  010E                     	;# 
  4017  010E                     	;# 
  4018  010F                     	;# 
  4019  0110                     	;# 
  4020  0110                     	;# 
  4021  0111                     	;# 
  4022  0112                     	;# 
  4023  0112                     	;# 
  4024  0113                     	;# 
  4025  0114                     	;# 
  4026  0114                     	;# 
  4027  0115                     	;# 
  4028  0116                     	;# 
  4029  0116                     	;# 
  4030  0117                     	;# 
  4031  0119                     	;# 
  4032  0119                     	;# 
  4033  0119                     	;# 
  4034  011A                     	;# 
  4035  011A                     	;# 
  4036  011A                     	;# 
  4037  011B                     	;# 
  4038  011B                     	;# 
  4039  011B                     	;# 
  4040  011B                     	;# 
  4041  011B                     	;# 
  4042  011C                     	;# 
  4043  011C                     	;# 
  4044  011C                     	;# 
  4045  011D                     	;# 
  4046  011D                     	;# 
  4047  011D                     	;# 
  4048  011E                     	;# 
  4049  011E                     	;# 
  4050  011E                     	;# 
  4051  011F                     	;# 
  4052  011F                     	;# 
  4053  011F                     	;# 
  4054  011F                     	;# 
  4055  011F                     	;# 
  4056  018C                     	;# 
  4057  018D                     	;# 
  4058  018E                     	;# 
  4059  018F                     	;# 
  4060  0190                     	;# 
  4061  0191                     	;# 
  4062  0192                     	;# 
  4063  0196                     	;# 
  4064  0197                     	;# 
  4065  0198                     	;# 
  4066  0199                     	;# 
  4067  019A                     	;# 
  4068  019B                     	;# 
  4069  019C                     	;# 
  4070  020C                     	;# 
  4071  020C                     	;# 
  4072  020D                     	;# 
  4073  020E                     	;# 
  4074  020F                     	;# 
  4075  020F                     	;# 
  4076  0210                     	;# 
  4077  0210                     	;# 
  4078  0211                     	;# 
  4079  0211                     	;# 
  4080  0212                     	;# 
  4081  0212                     	;# 
  4082  0213                     	;# 
  4083  0214                     	;# 
  4084  0215                     	;# 
  4085  0215                     	;# 
  4086  0216                     	;# 
  4087  0216                     	;# 
  4088  0217                     	;# 
  4089  0217                     	;# 
  4090  0218                     	;# 
  4091  0218                     	;# 
  4092  0219                     	;# 
  4093  021A                     	;# 
  4094  021B                     	;# 
  4095  021B                     	;# 
  4096  021C                     	;# 
  4097  021C                     	;# 
  4098  021D                     	;# 
  4099  021D                     	;# 
  4100  021E                     	;# 
  4101  021F                     	;# 
  4102  028C                     	;# 
  4103  028C                     	;# 
  4104  028D                     	;# 
  4105  028D                     	;# 
  4106  028E                     	;# 
  4107  028F                     	;# 
  4108  0290                     	;# 
  4109  0290                     	;# 
  4110  0291                     	;# 
  4111  0292                     	;# 
  4112  0292                     	;# 
  4113  0293                     	;# 
  4114  0293                     	;# 
  4115  0294                     	;# 
  4116  0295                     	;# 
  4117  0296                     	;# 
  4118  0296                     	;# 
  4119  0297                     	;# 
  4120  0298                     	;# 
  4121  0298                     	;# 
  4122  0299                     	;# 
  4123  0299                     	;# 
  4124  029A                     	;# 
  4125  029B                     	;# 
  4126  029C                     	;# 
  4127  029C                     	;# 
  4128  029D                     	;# 
  4129  030C                     	;# 
  4130  030C                     	;# 
  4131  030D                     	;# 
  4132  030E                     	;# 
  4133  030F                     	;# 
  4134  0310                     	;# 
  4135  0310                     	;# 
  4136  0311                     	;# 
  4137  0312                     	;# 
  4138  0313                     	;# 
  4139  0314                     	;# 
  4140  0314                     	;# 
  4141  0315                     	;# 
  4142  0316                     	;# 
  4143  0317                     	;# 
  4144  0318                     	;# 
  4145  0318                     	;# 
  4146  0319                     	;# 
  4147  031A                     	;# 
  4148  031B                     	;# 
  4149  031C                     	;# 
  4150  031C                     	;# 
  4151  031D                     	;# 
  4152  031E                     	;# 
  4153  031F                     	;# 
  4154  038C                     	;# 
  4155  038C                     	;# 
  4156  038D                     	;# 
  4157  038E                     	;# 
  4158  0390                     	;# 
  4159  0390                     	;# 
  4160  0391                     	;# 
  4161  0392                     	;# 
  4162  040C                     	;# 
  4163  040D                     	;# 
  4164  040E                     	;# 
  4165  040F                     	;# 
  4166  0410                     	;# 
  4167  0411                     	;# 
  4168  0416                     	;# 
  4169  0416                     	;# 
  4170  0417                     	;# 
  4171  0418                     	;# 
  4172  0418                     	;# 
  4173  0419                     	;# 
  4174  041A                     	;# 
  4175  041A                     	;# 
  4176  041B                     	;# 
  4177  041C                     	;# 
  4178  041C                     	;# 
  4179  041D                     	;# 
  4180  041E                     	;# 
  4181  041F                     	;# 
  4182  048C                     	;# 
  4183  048C                     	;# 
  4184  048D                     	;# 
  4185  048E                     	;# 
  4186  048F                     	;# 
  4187  048F                     	;# 
  4188  0490                     	;# 
  4189  0491                     	;# 
  4190  0492                     	;# 
  4191  0492                     	;# 
  4192  0493                     	;# 
  4193  0494                     	;# 
  4194  0495                     	;# 
  4195  0495                     	;# 
  4196  0496                     	;# 
  4197  0497                     	;# 
  4198  0498                     	;# 
  4199  0499                     	;# 
  4200  049A                     	;# 
  4201  049B                     	;# 
  4202  049C                     	;# 
  4203  049D                     	;# 
  4204  050C                     	;# 
  4205  050C                     	;# 
  4206  050D                     	;# 
  4207  050E                     	;# 
  4208  050F                     	;# 
  4209  050F                     	;# 
  4210  0510                     	;# 
  4211  0511                     	;# 
  4212  0512                     	;# 
  4213  0512                     	;# 
  4214  0513                     	;# 
  4215  0514                     	;# 
  4216  0515                     	;# 
  4217  0515                     	;# 
  4218  0516                     	;# 
  4219  0517                     	;# 
  4220  0518                     	;# 
  4221  0519                     	;# 
  4222  051A                     	;# 
  4223  051B                     	;# 
  4224  051C                     	;# 
  4225  051D                     	;# 
  4226  058C                     	;# 
  4227  058C                     	;# 
  4228  058D                     	;# 
  4229  058E                     	;# 
  4230  058F                     	;# 
  4231  058F                     	;# 
  4232  0590                     	;# 
  4233  0591                     	;# 
  4234  0592                     	;# 
  4235  0593                     	;# 
  4236  060C                     	;# 
  4237  060D                     	;# 
  4238  060E                     	;# 
  4239  060F                     	;# 
  4240  0610                     	;# 
  4241  0611                     	;# 
  4242  0612                     	;# 
  4243  0613                     	;# 
  4244  0614                     	;# 
  4245  0616                     	;# 
  4246  0617                     	;# 
  4247  0618                     	;# 
  4248  0619                     	;# 
  4249  061A                     	;# 
  4250  061B                     	;# 
  4251  061C                     	;# 
  4252  061D                     	;# 
  4253  061E                     	;# 
  4254  068C                     	;# 
  4255  068D                     	;# 
  4256  068E                     	;# 
  4257  068F                     	;# 
  4258  0690                     	;# 
  4259  0691                     	;# 
  4260  0692                     	;# 
  4261  0693                     	;# 
  4262  0694                     	;# 
  4263  070C                     	;# 
  4264  070D                     	;# 
  4265  070E                     	;# 
  4266  070F                     	;# 
  4267  0710                     	;# 
  4268  0711                     	;# 
  4269  0712                     	;# 
  4270  0713                     	;# 
  4271  0714                     	;# 
  4272  0716                     	;# 
  4273  0717                     	;# 
  4274  0718                     	;# 
  4275  0719                     	;# 
  4276  071A                     	;# 
  4277  071B                     	;# 
  4278  071C                     	;# 
  4279  071D                     	;# 
  4280  071E                     	;# 
  4281  0796                     	;# 
  4282  0797                     	;# 
  4283  0798                     	;# 
  4284  0799                     	;# 
  4285  079A                     	;# 
  4286  079B                     	;# 
  4287  080C                     	;# 
  4288  080D                     	;# 
  4289  080E                     	;# 
  4290  080F                     	;# 
  4291  0810                     	;# 
  4292  0811                     	;# 
  4293  0812                     	;# 
  4294  0813                     	;# 
  4295  0814                     	;# 
  4296  081A                     	;# 
  4297  081B                     	;# 
  4298  081C                     	;# 
  4299  081D                     	;# 
  4300  081E                     	;# 
  4301  081F                     	;# 
  4302  088C                     	;# 
  4303  088D                     	;# 
  4304  088E                     	;# 
  4305  088F                     	;# 
  4306  0890                     	;# 
  4307  0891                     	;# 
  4308  0892                     	;# 
  4309  0893                     	;# 
  4310  0895                     	;# 
  4311  0896                     	;# 
  4312  0897                     	;# 
  4313  0898                     	;# 
  4314  0899                     	;# 
  4315  089A                     	;# 
  4316  089B                     	;# 
  4317  090C                     	;# 
  4318  090E                     	;# 
  4319  090F                     	;# 
  4320  091F                     	;# 
  4321  091F                     	;# 
  4322  098F                     	;# 
  4323  098F                     	;# 
  4324  0990                     	;# 
  4325  0991                     	;# 
  4326  0992                     	;# 
  4327  0993                     	;# 
  4328  0994                     	;# 
  4329  0995                     	;# 
  4330  0996                     	;# 
  4331  0997                     	;# 
  4332  0E0F                     	;# 
  4333  0E10                     	;# 
  4334  0E11                     	;# 
  4335  0E12                     	;# 
  4336  0E13                     	;# 
  4337  0E14                     	;# 
  4338  0E15                     	;# 
  4339  0E16                     	;# 
  4340  0E17                     	;# 
  4341  0E18                     	;# 
  4342  0E19                     	;# 
  4343  0E1A                     	;# 
  4344  0E1B                     	;# 
  4345  0E1C                     	;# 
  4346  0E1D                     	;# 
  4347  0E1E                     	;# 
  4348  0E1F                     	;# 
  4349  0E20                     	;# 
  4350  0E21                     	;# 
  4351  0E22                     	;# 
  4352  0E23                     	;# 
  4353  0E24                     	;# 
  4354  0E25                     	;# 
  4355  0E26                     	;# 
  4356  0E27                     	;# 
  4357  0E28                     	;# 
  4358  0E29                     	;# 
  4359  0E2A                     	;# 
  4360  0E2B                     	;# 
  4361  0E2C                     	;# 
  4362  0E2D                     	;# 
  4363  0E2E                     	;# 
  4364  0E2F                     	;# 
  4365  0E30                     	;# 
  4366  0E31                     	;# 
  4367  0E32                     	;# 
  4368  0E33                     	;# 
  4369  0E34                     	;# 
  4370  0E35                     	;# 
  4371  0E36                     	;# 
  4372  0E37                     	;# 
  4373  0E8F                     	;# 
  4374  0E90                     	;# 
  4375  0E91                     	;# 
  4376  0E92                     	;# 
  4377  0E93                     	;# 
  4378  0E94                     	;# 
  4379  0E95                     	;# 
  4380  0E96                     	;# 
  4381  0E97                     	;# 
  4382  0E9C                     	;# 
  4383  0E9D                     	;# 
  4384  0E9E                     	;# 
  4385  0EA1                     	;# 
  4386  0EA2                     	;# 
  4387  0EA3                     	;# 
  4388  0EA4                     	;# 
  4389  0EA5                     	;# 
  4390  0EA9                     	;# 
  4391  0EAA                     	;# 
  4392  0EAB                     	;# 
  4393  0EAC                     	;# 
  4394  0EB1                     	;# 
  4395  0EB2                     	;# 
  4396  0EB3                     	;# 
  4397  0EB8                     	;# 
  4398  0EB9                     	;# 
  4399  0EBA                     	;# 
  4400  0EBB                     	;# 
  4401  0EBC                     	;# 
  4402  0EBD                     	;# 
  4403  0EBE                     	;# 
  4404  0EC3                     	;# 
  4405  0EC5                     	;# 
  4406  0EC6                     	;# 
  4407  0EC7                     	;# 
  4408  0EC8                     	;# 
  4409  0EC9                     	;# 
  4410  0ECA                     	;# 
  4411  0ECB                     	;# 
  4412  0ECC                     	;# 
  4413  0F10                     	;# 
  4414  0F11                     	;# 
  4415  0F12                     	;# 
  4416  0F13                     	;# 
  4417  0F14                     	;# 
  4418  0F15                     	;# 
  4419  0F16                     	;# 
  4420  0F17                     	;# 
  4421  0F18                     	;# 
  4422  0F19                     	;# 
  4423  0F1A                     	;# 
  4424  0F1B                     	;# 
  4425  0F1C                     	;# 
  4426  0F1D                     	;# 
  4427  0F1E                     	;# 
  4428  0F1F                     	;# 
  4429  0F20                     	;# 
  4430  0F21                     	;# 
  4431  0F22                     	;# 
  4432  0F23                     	;# 
  4433  0F24                     	;# 
  4434  0F25                     	;# 
  4435  0F26                     	;# 
  4436  0F27                     	;# 
  4437  0F28                     	;# 
  4438  0F29                     	;# 
  4439  0F2A                     	;# 
  4440  0F2B                     	;# 
  4441  0F2C                     	;# 
  4442  0F2D                     	;# 
  4443  0F2E                     	;# 
  4444  0F2F                     	;# 
  4445  0F30                     	;# 
  4446  0F31                     	;# 
  4447  0F32                     	;# 
  4448  0F38                     	;# 
  4449  0F39                     	;# 
  4450  0F3A                     	;# 
  4451  0F3B                     	;# 
  4452  0F3C                     	;# 
  4453  0F3D                     	;# 
  4454  0F3E                     	;# 
  4455  0F3F                     	;# 
  4456  0F40                     	;# 
  4457  0F41                     	;# 
  4458  0F43                     	;# 
  4459  0F44                     	;# 
  4460  0F45                     	;# 
  4461  0F46                     	;# 
  4462  0F47                     	;# 
  4463  0F48                     	;# 
  4464  0F49                     	;# 
  4465  0F4A                     	;# 
  4466  0F4B                     	;# 
  4467  0F4C                     	;# 
  4468  0F4E                     	;# 
  4469  0F4F                     	;# 
  4470  0F50                     	;# 
  4471  0F51                     	;# 
  4472  0F52                     	;# 
  4473  0F53                     	;# 
  4474  0F54                     	;# 
  4475  0F55                     	;# 
  4476  0F56                     	;# 
  4477  0F57                     	;# 
  4478  0F59                     	;# 
  4479  0F5A                     	;# 
  4480  0F5B                     	;# 
  4481  0F5C                     	;# 
  4482  0F5D                     	;# 
  4483  0F61                     	;# 
  4484  0F62                     	;# 
  4485  0F64                     	;# 
  4486  0F65                     	;# 
  4487  0F66                     	;# 
  4488  0F67                     	;# 
  4489  0F68                     	;# 
  4490  0F69                     	;# 
  4491  0F6A                     	;# 
  4492  0F6B                     	;# 
  4493  0F6C                     	;# 
  4494  0F6D                     	;# 
  4495  0FE4                     	;# 
  4496  0FE5                     	;# 
  4497  0FE6                     	;# 
  4498  0FE7                     	;# 
  4499  0FE8                     	;# 
  4500  0FE9                     	;# 
  4501  0FEA                     	;# 
  4502  0FEB                     	;# 
  4503  0FED                     	;# 
  4504  0FEE                     	;# 
  4505  0FEF                     	;# 
  4506  0000                     	;# 
  4507  0001                     	;# 
  4508  0002                     	;# 
  4509  0003                     	;# 
  4510  0004                     	;# 
  4511  0005                     	;# 
  4512  0006                     	;# 
  4513  0007                     	;# 
  4514  0008                     	;# 
  4515  0009                     	;# 
  4516  000A                     	;# 
  4517  000B                     	;# 
  4518  000C                     	;# 
  4519  000D                     	;# 
  4520  000E                     	;# 
  4521  000F                     	;# 
  4522  0010                     	;# 
  4523  0011                     	;# 
  4524  0012                     	;# 
  4525  0013                     	;# 
  4526  0014                     	;# 
  4527  0015                     	;# 
  4528  0016                     	;# 
  4529  0017                     	;# 
  4530  0018                     	;# 
  4531  0019                     	;# 
  4532  001A                     	;# 
  4533  001C                     	;# 
  4534  001C                     	;# 
  4535  001D                     	;# 
  4536  001D                     	;# 
  4537  001E                     	;# 
  4538  001F                     	;# 
  4539  008C                     	;# 
  4540  008C                     	;# 
  4541  008D                     	;# 
  4542  008E                     	;# 
  4543  008E                     	;# 
  4544  008F                     	;# 
  4545  0090                     	;# 
  4546  0090                     	;# 
  4547  0091                     	;# 
  4548  0093                     	;# 
  4549  0094                     	;# 
  4550  0095                     	;# 
  4551  0096                     	;# 
  4552  0097                     	;# 
  4553  0098                     	;# 
  4554  0099                     	;# 
  4555  009A                     	;# 
  4556  009B                     	;# 
  4557  009C                     	;# 
  4558  009D                     	;# 
  4559  009E                     	;# 
  4560  010C                     	;# 
  4561  010D                     	;# 
  4562  010E                     	;# 
  4563  010E                     	;# 
  4564  010F                     	;# 
  4565  0110                     	;# 
  4566  0110                     	;# 
  4567  0111                     	;# 
  4568  0112                     	;# 
  4569  0112                     	;# 
  4570  0113                     	;# 
  4571  0114                     	;# 
  4572  0114                     	;# 
  4573  0115                     	;# 
  4574  0116                     	;# 
  4575  0116                     	;# 
  4576  0117                     	;# 
  4577  0119                     	;# 
  4578  0119                     	;# 
  4579  0119                     	;# 
  4580  011A                     	;# 
  4581  011A                     	;# 
  4582  011A                     	;# 
  4583  011B                     	;# 
  4584  011B                     	;# 
  4585  011B                     	;# 
  4586  011B                     	;# 
  4587  011B                     	;# 
  4588  011C                     	;# 
  4589  011C                     	;# 
  4590  011C                     	;# 
  4591  011D                     	;# 
  4592  011D                     	;# 
  4593  011D                     	;# 
  4594  011E                     	;# 
  4595  011E                     	;# 
  4596  011E                     	;# 
  4597  011F                     	;# 
  4598  011F                     	;# 
  4599  011F                     	;# 
  4600  011F                     	;# 
  4601  011F                     	;# 
  4602  018C                     	;# 
  4603  018D                     	;# 
  4604  018E                     	;# 
  4605  018F                     	;# 
  4606  0190                     	;# 
  4607  0191                     	;# 
  4608  0192                     	;# 
  4609  0196                     	;# 
  4610  0197                     	;# 
  4611  0198                     	;# 
  4612  0199                     	;# 
  4613  019A                     	;# 
  4614  019B                     	;# 
  4615  019C                     	;# 
  4616  020C                     	;# 
  4617  020C                     	;# 
  4618  020D                     	;# 
  4619  020E                     	;# 
  4620  020F                     	;# 
  4621  020F                     	;# 
  4622  0210                     	;# 
  4623  0210                     	;# 
  4624  0211                     	;# 
  4625  0211                     	;# 
  4626  0212                     	;# 
  4627  0212                     	;# 
  4628  0213                     	;# 
  4629  0214                     	;# 
  4630  0215                     	;# 
  4631  0215                     	;# 
  4632  0216                     	;# 
  4633  0216                     	;# 
  4634  0217                     	;# 
  4635  0217                     	;# 
  4636  0218                     	;# 
  4637  0218                     	;# 
  4638  0219                     	;# 
  4639  021A                     	;# 
  4640  021B                     	;# 
  4641  021B                     	;# 
  4642  021C                     	;# 
  4643  021C                     	;# 
  4644  021D                     	;# 
  4645  021D                     	;# 
  4646  021E                     	;# 
  4647  021F                     	;# 
  4648  028C                     	;# 
  4649  028C                     	;# 
  4650  028D                     	;# 
  4651  028D                     	;# 
  4652  028E                     	;# 
  4653  028F                     	;# 
  4654  0290                     	;# 
  4655  0290                     	;# 
  4656  0291                     	;# 
  4657  0292                     	;# 
  4658  0292                     	;# 
  4659  0293                     	;# 
  4660  0293                     	;# 
  4661  0294                     	;# 
  4662  0295                     	;# 
  4663  0296                     	;# 
  4664  0296                     	;# 
  4665  0297                     	;# 
  4666  0298                     	;# 
  4667  0298                     	;# 
  4668  0299                     	;# 
  4669  0299                     	;# 
  4670  029A                     	;# 
  4671  029B                     	;# 
  4672  029C                     	;# 
  4673  029C                     	;# 
  4674  029D                     	;# 
  4675  030C                     	;# 
  4676  030C                     	;# 
  4677  030D                     	;# 
  4678  030E                     	;# 
  4679  030F                     	;# 
  4680  0310                     	;# 
  4681  0310                     	;# 
  4682  0311                     	;# 
  4683  0312                     	;# 
  4684  0313                     	;# 
  4685  0314                     	;# 
  4686  0314                     	;# 
  4687  0315                     	;# 
  4688  0316                     	;# 
  4689  0317                     	;# 
  4690  0318                     	;# 
  4691  0318                     	;# 
  4692  0319                     	;# 
  4693  031A                     	;# 
  4694  031B                     	;# 
  4695  031C                     	;# 
  4696  031C                     	;# 
  4697  031D                     	;# 
  4698  031E                     	;# 
  4699  031F                     	;# 
  4700  038C                     	;# 
  4701  038C                     	;# 
  4702  038D                     	;# 
  4703  038E                     	;# 
  4704  0390                     	;# 
  4705  0390                     	;# 
  4706  0391                     	;# 
  4707  0392                     	;# 
  4708  040C                     	;# 
  4709  040D                     	;# 
  4710  040E                     	;# 
  4711  040F                     	;# 
  4712  0410                     	;# 
  4713  0411                     	;# 
  4714  0416                     	;# 
  4715  0416                     	;# 
  4716  0417                     	;# 
  4717  0418                     	;# 
  4718  0418                     	;# 
  4719  0419                     	;# 
  4720  041A                     	;# 
  4721  041A                     	;# 
  4722  041B                     	;# 
  4723  041C                     	;# 
  4724  041C                     	;# 
  4725  041D                     	;# 
  4726  041E                     	;# 
  4727  041F                     	;# 
  4728  048C                     	;# 
  4729  048C                     	;# 
  4730  048D                     	;# 
  4731  048E                     	;# 
  4732  048F                     	;# 
  4733  048F                     	;# 
  4734  0490                     	;# 
  4735  0491                     	;# 
  4736  0492                     	;# 
  4737  0492                     	;# 
  4738  0493                     	;# 
  4739  0494                     	;# 
  4740  0495                     	;# 
  4741  0495                     	;# 
  4742  0496                     	;# 
  4743  0497                     	;# 
  4744  0498                     	;# 
  4745  0499                     	;# 
  4746  049A                     	;# 
  4747  049B                     	;# 
  4748  049C                     	;# 
  4749  049D                     	;# 
  4750  050C                     	;# 
  4751  050C                     	;# 
  4752  050D                     	;# 
  4753  050E                     	;# 
  4754  050F                     	;# 
  4755  050F                     	;# 
  4756  0510                     	;# 
  4757  0511                     	;# 
  4758  0512                     	;# 
  4759  0512                     	;# 
  4760  0513                     	;# 
  4761  0514                     	;# 
  4762  0515                     	;# 
  4763  0515                     	;# 
  4764  0516                     	;# 
  4765  0517                     	;# 
  4766  0518                     	;# 
  4767  0519                     	;# 
  4768  051A                     	;# 
  4769  051B                     	;# 
  4770  051C                     	;# 
  4771  051D                     	;# 
  4772  058C                     	;# 
  4773  058C                     	;# 
  4774  058D                     	;# 
  4775  058E                     	;# 
  4776  058F                     	;# 
  4777  058F                     	;# 
  4778  0590                     	;# 
  4779  0591                     	;# 
  4780  0592                     	;# 
  4781  0593                     	;# 
  4782  060C                     	;# 
  4783  060D                     	;# 
  4784  060E                     	;# 
  4785  060F                     	;# 
  4786  0610                     	;# 
  4787  0611                     	;# 
  4788  0612                     	;# 
  4789  0613                     	;# 
  4790  0614                     	;# 
  4791  0616                     	;# 
  4792  0617                     	;# 
  4793  0618                     	;# 
  4794  0619                     	;# 
  4795  061A                     	;# 
  4796  061B                     	;# 
  4797  061C                     	;# 
  4798  061D                     	;# 
  4799  061E                     	;# 
  4800  068C                     	;# 
  4801  068D                     	;# 
  4802  068E                     	;# 
  4803  068F                     	;# 
  4804  0690                     	;# 
  4805  0691                     	;# 
  4806  0692                     	;# 
  4807  0693                     	;# 
  4808  0694                     	;# 
  4809  070C                     	;# 
  4810  070D                     	;# 
  4811  070E                     	;# 
  4812  070F                     	;# 
  4813  0710                     	;# 
  4814  0711                     	;# 
  4815  0712                     	;# 
  4816  0713                     	;# 
  4817  0714                     	;# 
  4818  0716                     	;# 
  4819  0717                     	;# 
  4820  0718                     	;# 
  4821  0719                     	;# 
  4822  071A                     	;# 
  4823  071B                     	;# 
  4824  071C                     	;# 
  4825  071D                     	;# 
  4826  071E                     	;# 
  4827  0796                     	;# 
  4828  0797                     	;# 
  4829  0798                     	;# 
  4830  0799                     	;# 
  4831  079A                     	;# 
  4832  079B                     	;# 
  4833  080C                     	;# 
  4834  080D                     	;# 
  4835  080E                     	;# 
  4836  080F                     	;# 
  4837  0810                     	;# 
  4838  0811                     	;# 
  4839  0812                     	;# 
  4840  0813                     	;# 
  4841  0814                     	;# 
  4842  081A                     	;# 
  4843  081B                     	;# 
  4844  081C                     	;# 
  4845  081D                     	;# 
  4846  081E                     	;# 
  4847  081F                     	;# 
  4848  088C                     	;# 
  4849  088D                     	;# 
  4850  088E                     	;# 
  4851  088F                     	;# 
  4852  0890                     	;# 
  4853  0891                     	;# 
  4854  0892                     	;# 
  4855  0893                     	;# 
  4856  0895                     	;# 
  4857  0896                     	;# 
  4858  0897                     	;# 
  4859  0898                     	;# 
  4860  0899                     	;# 
  4861  089A                     	;# 
  4862  089B                     	;# 
  4863  090C                     	;# 
  4864  090E                     	;# 
  4865  090F                     	;# 
  4866  091F                     	;# 
  4867  091F                     	;# 
  4868  098F                     	;# 
  4869  098F                     	;# 
  4870  0990                     	;# 
  4871  0991                     	;# 
  4872  0992                     	;# 
  4873  0993                     	;# 
  4874  0994                     	;# 
  4875  0995                     	;# 
  4876  0996                     	;# 
  4877  0997                     	;# 
  4878  0E0F                     	;# 
  4879  0E10                     	;# 
  4880  0E11                     	;# 
  4881  0E12                     	;# 
  4882  0E13                     	;# 
  4883  0E14                     	;# 
  4884  0E15                     	;# 
  4885  0E16                     	;# 
  4886  0E17                     	;# 
  4887  0E18                     	;# 
  4888  0E19                     	;# 
  4889  0E1A                     	;# 
  4890  0E1B                     	;# 
  4891  0E1C                     	;# 
  4892  0E1D                     	;# 
  4893  0E1E                     	;# 
  4894  0E1F                     	;# 
  4895  0E20                     	;# 
  4896  0E21                     	;# 
  4897  0E22                     	;# 
  4898  0E23                     	;# 
  4899  0E24                     	;# 
  4900  0E25                     	;# 
  4901  0E26                     	;# 
  4902  0E27                     	;# 
  4903  0E28                     	;# 
  4904  0E29                     	;# 
  4905  0E2A                     	;# 
  4906  0E2B                     	;# 
  4907  0E2C                     	;# 
  4908  0E2D                     	;# 
  4909  0E2E                     	;# 
  4910  0E2F                     	;# 
  4911  0E30                     	;# 
  4912  0E31                     	;# 
  4913  0E32                     	;# 
  4914  0E33                     	;# 
  4915  0E34                     	;# 
  4916  0E35                     	;# 
  4917  0E36                     	;# 
  4918  0E37                     	;# 
  4919  0E8F                     	;# 
  4920  0E90                     	;# 
  4921  0E91                     	;# 
  4922  0E92                     	;# 
  4923  0E93                     	;# 
  4924  0E94                     	;# 
  4925  0E95                     	;# 
  4926  0E96                     	;# 
  4927  0E97                     	;# 
  4928  0E9C                     	;# 
  4929  0E9D                     	;# 
  4930  0E9E                     	;# 
  4931  0EA1                     	;# 
  4932  0EA2                     	;# 
  4933  0EA3                     	;# 
  4934  0EA4                     	;# 
  4935  0EA5                     	;# 
  4936  0EA9                     	;# 
  4937  0EAA                     	;# 
  4938  0EAB                     	;# 
  4939  0EAC                     	;# 
  4940  0EB1                     	;# 
  4941  0EB2                     	;# 
  4942  0EB3                     	;# 
  4943  0EB8                     	;# 
  4944  0EB9                     	;# 
  4945  0EBA                     	;# 
  4946  0EBB                     	;# 
  4947  0EBC                     	;# 
  4948  0EBD                     	;# 
  4949  0EBE                     	;# 
  4950  0EC3                     	;# 
  4951  0EC5                     	;# 
  4952  0EC6                     	;# 
  4953  0EC7                     	;# 
  4954  0EC8                     	;# 
  4955  0EC9                     	;# 
  4956  0ECA                     	;# 
  4957  0ECB                     	;# 
  4958  0ECC                     	;# 
  4959  0F10                     	;# 
  4960  0F11                     	;# 
  4961  0F12                     	;# 
  4962  0F13                     	;# 
  4963  0F14                     	;# 
  4964  0F15                     	;# 
  4965  0F16                     	;# 
  4966  0F17                     	;# 
  4967  0F18                     	;# 
  4968  0F19                     	;# 
  4969  0F1A                     	;# 
  4970  0F1B                     	;# 
  4971  0F1C                     	;# 
  4972  0F1D                     	;# 
  4973  0F1E                     	;# 
  4974  0F1F                     	;# 
  4975  0F20                     	;# 
  4976  0F21                     	;# 
  4977  0F22                     	;# 
  4978  0F23                     	;# 
  4979  0F24                     	;# 
  4980  0F25                     	;# 
  4981  0F26                     	;# 
  4982  0F27                     	;# 
  4983  0F28                     	;# 
  4984  0F29                     	;# 
  4985  0F2A                     	;# 
  4986  0F2B                     	;# 
  4987  0F2C                     	;# 
  4988  0F2D                     	;# 
  4989  0F2E                     	;# 
  4990  0F2F                     	;# 
  4991  0F30                     	;# 
  4992  0F31                     	;# 
  4993  0F32                     	;# 
  4994  0F38                     	;# 
  4995  0F39                     	;# 
  4996  0F3A                     	;# 
  4997  0F3B                     	;# 
  4998  0F3C                     	;# 
  4999  0F3D                     	;# 
  5000  0F3E                     	;# 
  5001  0F3F                     	;# 
  5002  0F40                     	;# 
  5003  0F41                     	;# 
  5004  0F43                     	;# 
  5005  0F44                     	;# 
  5006  0F45                     	;# 
  5007  0F46                     	;# 
  5008  0F47                     	;# 
  5009  0F48                     	;# 
  5010  0F49                     	;# 
  5011  0F4A                     	;# 
  5012  0F4B                     	;# 
  5013  0F4C                     	;# 
  5014  0F4E                     	;# 
  5015  0F4F                     	;# 
  5016  0F50                     	;# 
  5017  0F51                     	;# 
  5018  0F52                     	;# 
  5019  0F53                     	;# 
  5020  0F54                     	;# 
  5021  0F55                     	;# 
  5022  0F56                     	;# 
  5023  0F57                     	;# 
  5024  0F59                     	;# 
  5025  0F5A                     	;# 
  5026  0F5B                     	;# 
  5027  0F5C                     	;# 
  5028  0F5D                     	;# 
  5029  0F61                     	;# 
  5030  0F62                     	;# 
  5031  0F64                     	;# 
  5032  0F65                     	;# 
  5033  0F66                     	;# 
  5034  0F67                     	;# 
  5035  0F68                     	;# 
  5036  0F69                     	;# 
  5037  0F6A                     	;# 
  5038  0F6B                     	;# 
  5039  0F6C                     	;# 
  5040  0F6D                     	;# 
  5041  0FE4                     	;# 
  5042  0FE5                     	;# 
  5043  0FE6                     	;# 
  5044  0FE7                     	;# 
  5045  0FE8                     	;# 
  5046  0FE9                     	;# 
  5047  0FEA                     	;# 
  5048  0FEB                     	;# 
  5049  0FED                     	;# 
  5050  0FEE                     	;# 
  5051  0FEF                     	;# 
  5052  0000                     	;# 
  5053  0001                     	;# 
  5054  0002                     	;# 
  5055  0003                     	;# 
  5056  0004                     	;# 
  5057  0005                     	;# 
  5058  0006                     	;# 
  5059  0007                     	;# 
  5060  0008                     	;# 
  5061  0009                     	;# 
  5062  000A                     	;# 
  5063  000B                     	;# 
  5064  000C                     	;# 
  5065  000D                     	;# 
  5066  000E                     	;# 
  5067  000F                     	;# 
  5068  0010                     	;# 
  5069  0011                     	;# 
  5070  0012                     	;# 
  5071  0013                     	;# 
  5072  0014                     	;# 
  5073  0015                     	;# 
  5074  0016                     	;# 
  5075  0017                     	;# 
  5076  0018                     	;# 
  5077  0019                     	;# 
  5078  001A                     	;# 
  5079  001C                     	;# 
  5080  001C                     	;# 
  5081  001D                     	;# 
  5082  001D                     	;# 
  5083  001E                     	;# 
  5084  001F                     	;# 
  5085  008C                     	;# 
  5086  008C                     	;# 
  5087  008D                     	;# 
  5088  008E                     	;# 
  5089  008E                     	;# 
  5090  008F                     	;# 
  5091  0090                     	;# 
  5092  0090                     	;# 
  5093  0091                     	;# 
  5094  0093                     	;# 
  5095  0094                     	;# 
  5096  0095                     	;# 
  5097  0096                     	;# 
  5098  0097                     	;# 
  5099  0098                     	;# 
  5100  0099                     	;# 
  5101  009A                     	;# 
  5102  009B                     	;# 
  5103  009C                     	;# 
  5104  009D                     	;# 
  5105  009E                     	;# 
  5106  010C                     	;# 
  5107  010D                     	;# 
  5108  010E                     	;# 
  5109  010E                     	;# 
  5110  010F                     	;# 
  5111  0110                     	;# 
  5112  0110                     	;# 
  5113  0111                     	;# 
  5114  0112                     	;# 
  5115  0112                     	;# 
  5116  0113                     	;# 
  5117  0114                     	;# 
  5118  0114                     	;# 
  5119  0115                     	;# 
  5120  0116                     	;# 
  5121  0116                     	;# 
  5122  0117                     	;# 
  5123  0119                     	;# 
  5124  0119                     	;# 
  5125  0119                     	;# 
  5126  011A                     	;# 
  5127  011A                     	;# 
  5128  011A                     	;# 
  5129  011B                     	;# 
  5130  011B                     	;# 
  5131  011B                     	;# 
  5132  011B                     	;# 
  5133  011B                     	;# 
  5134  011C                     	;# 
  5135  011C                     	;# 
  5136  011C                     	;# 
  5137  011D                     	;# 
  5138  011D                     	;# 
  5139  011D                     	;# 
  5140  011E                     	;# 
  5141  011E                     	;# 
  5142  011E                     	;# 
  5143  011F                     	;# 
  5144  011F                     	;# 
  5145  011F                     	;# 
  5146  011F                     	;# 
  5147  011F                     	;# 
  5148  018C                     	;# 
  5149  018D                     	;# 
  5150  018E                     	;# 
  5151  018F                     	;# 
  5152  0190                     	;# 
  5153  0191                     	;# 
  5154  0192                     	;# 
  5155  0196                     	;# 
  5156  0197                     	;# 
  5157  0198                     	;# 
  5158  0199                     	;# 
  5159  019A                     	;# 
  5160  019B                     	;# 
  5161  019C                     	;# 
  5162  020C                     	;# 
  5163  020C                     	;# 
  5164  020D                     	;# 
  5165  020E                     	;# 
  5166  020F                     	;# 
  5167  020F                     	;# 
  5168  0210                     	;# 
  5169  0210                     	;# 
  5170  0211                     	;# 
  5171  0211                     	;# 
  5172  0212                     	;# 
  5173  0212                     	;# 
  5174  0213                     	;# 
  5175  0214                     	;# 
  5176  0215                     	;# 
  5177  0215                     	;# 
  5178  0216                     	;# 
  5179  0216                     	;# 
  5180  0217                     	;# 
  5181  0217                     	;# 
  5182  0218                     	;# 
  5183  0218                     	;# 
  5184  0219                     	;# 
  5185  021A                     	;# 
  5186  021B                     	;# 
  5187  021B                     	;# 
  5188  021C                     	;# 
  5189  021C                     	;# 
  5190  021D                     	;# 
  5191  021D                     	;# 
  5192  021E                     	;# 
  5193  021F                     	;# 
  5194  028C                     	;# 
  5195  028C                     	;# 
  5196  028D                     	;# 
  5197  028D                     	;# 
  5198  028E                     	;# 
  5199  028F                     	;# 
  5200  0290                     	;# 
  5201  0290                     	;# 
  5202  0291                     	;# 
  5203  0292                     	;# 
  5204  0292                     	;# 
  5205  0293                     	;# 
  5206  0293                     	;# 
  5207  0294                     	;# 
  5208  0295                     	;# 
  5209  0296                     	;# 
  5210  0296                     	;# 
  5211  0297                     	;# 
  5212  0298                     	;# 
  5213  0298                     	;# 
  5214  0299                     	;# 
  5215  0299                     	;# 
  5216  029A                     	;# 
  5217  029B                     	;# 
  5218  029C                     	;# 
  5219  029C                     	;# 
  5220  029D                     	;# 
  5221  030C                     	;# 
  5222  030C                     	;# 
  5223  030D                     	;# 
  5224  030E                     	;# 
  5225  030F                     	;# 
  5226  0310                     	;# 
  5227  0310                     	;# 
  5228  0311                     	;# 
  5229  0312                     	;# 
  5230  0313                     	;# 
  5231  0314                     	;# 
  5232  0314                     	;# 
  5233  0315                     	;# 
  5234  0316                     	;# 
  5235  0317                     	;# 
  5236  0318                     	;# 
  5237  0318                     	;# 
  5238  0319                     	;# 
  5239  031A                     	;# 
  5240  031B                     	;# 
  5241  031C                     	;# 
  5242  031C                     	;# 
  5243  031D                     	;# 
  5244  031E                     	;# 
  5245  031F                     	;# 
  5246  038C                     	;# 
  5247  038C                     	;# 
  5248  038D                     	;# 
  5249  038E                     	;# 
  5250  0390                     	;# 
  5251  0390                     	;# 
  5252  0391                     	;# 
  5253  0392                     	;# 
  5254  040C                     	;# 
  5255  040D                     	;# 
  5256  040E                     	;# 
  5257  040F                     	;# 
  5258  0410                     	;# 
  5259  0411                     	;# 
  5260  0416                     	;# 
  5261  0416                     	;# 
  5262  0417                     	;# 
  5263  0418                     	;# 
  5264  0418                     	;# 
  5265  0419                     	;# 
  5266  041A                     	;# 
  5267  041A                     	;# 
  5268  041B                     	;# 
  5269  041C                     	;# 
  5270  041C                     	;# 
  5271  041D                     	;# 
  5272  041E                     	;# 
  5273  041F                     	;# 
  5274  048C                     	;# 
  5275  048C                     	;# 
  5276  048D                     	;# 
  5277  048E                     	;# 
  5278  048F                     	;# 
  5279  048F                     	;# 
  5280  0490                     	;# 
  5281  0491                     	;# 
  5282  0492                     	;# 
  5283  0492                     	;# 
  5284  0493                     	;# 
  5285  0494                     	;# 
  5286  0495                     	;# 
  5287  0495                     	;# 
  5288  0496                     	;# 
  5289  0497                     	;# 
  5290  0498                     	;# 
  5291  0499                     	;# 
  5292  049A                     	;# 
  5293  049B                     	;# 
  5294  049C                     	;# 
  5295  049D                     	;# 
  5296  050C                     	;# 
  5297  050C                     	;# 
  5298  050D                     	;# 
  5299  050E                     	;# 
  5300  050F                     	;# 
  5301  050F                     	;# 
  5302  0510                     	;# 
  5303  0511                     	;# 
  5304  0512                     	;# 
  5305  0512                     	;# 
  5306  0513                     	;# 
  5307  0514                     	;# 
  5308  0515                     	;# 
  5309  0515                     	;# 
  5310  0516                     	;# 
  5311  0517                     	;# 
  5312  0518                     	;# 
  5313  0519                     	;# 
  5314  051A                     	;# 
  5315  051B                     	;# 
  5316  051C                     	;# 
  5317  051D                     	;# 
  5318  058C                     	;# 
  5319  058C                     	;# 
  5320  058D                     	;# 
  5321  058E                     	;# 
  5322  058F                     	;# 
  5323  058F                     	;# 
  5324  0590                     	;# 
  5325  0591                     	;# 
  5326  0592                     	;# 
  5327  0593                     	;# 
  5328  060C                     	;# 
  5329  060D                     	;# 
  5330  060E                     	;# 
  5331  060F                     	;# 
  5332  0610                     	;# 
  5333  0611                     	;# 
  5334  0612                     	;# 
  5335  0613                     	;# 
  5336  0614                     	;# 
  5337  0616                     	;# 
  5338  0617                     	;# 
  5339  0618                     	;# 
  5340  0619                     	;# 
  5341  061A                     	;# 
  5342  061B                     	;# 
  5343  061C                     	;# 
  5344  061D                     	;# 
  5345  061E                     	;# 
  5346  068C                     	;# 
  5347  068D                     	;# 
  5348  068E                     	;# 
  5349  068F                     	;# 
  5350  0690                     	;# 
  5351  0691                     	;# 
  5352  0692                     	;# 
  5353  0693                     	;# 
  5354  0694                     	;# 
  5355  070C                     	;# 
  5356  070D                     	;# 
  5357  070E                     	;# 
  5358  070F                     	;# 
  5359  0710                     	;# 
  5360  0711                     	;# 
  5361  0712                     	;# 
  5362  0713                     	;# 
  5363  0714                     	;# 
  5364  0716                     	;# 
  5365  0717                     	;# 
  5366  0718                     	;# 
  5367  0719                     	;# 
  5368  071A                     	;# 
  5369  071B                     	;# 
  5370  071C                     	;# 
  5371  071D                     	;# 
  5372  071E                     	;# 
  5373  0796                     	;# 
  5374  0797                     	;# 
  5375  0798                     	;# 
  5376  0799                     	;# 
  5377  079A                     	;# 
  5378  079B                     	;# 
  5379  080C                     	;# 
  5380  080D                     	;# 
  5381  080E                     	;# 
  5382  080F                     	;# 
  5383  0810                     	;# 
  5384  0811                     	;# 
  5385  0812                     	;# 
  5386  0813                     	;# 
  5387  0814                     	;# 
  5388  081A                     	;# 
  5389  081B                     	;# 
  5390  081C                     	;# 
  5391  081D                     	;# 
  5392  081E                     	;# 
  5393  081F                     	;# 
  5394  088C                     	;# 
  5395  088D                     	;# 
  5396  088E                     	;# 
  5397  088F                     	;# 
  5398  0890                     	;# 
  5399  0891                     	;# 
  5400  0892                     	;# 
  5401  0893                     	;# 
  5402  0895                     	;# 
  5403  0896                     	;# 
  5404  0897                     	;# 
  5405  0898                     	;# 
  5406  0899                     	;# 
  5407  089A                     	;# 
  5408  089B                     	;# 
  5409  090C                     	;# 
  5410  090E                     	;# 
  5411  090F                     	;# 
  5412  091F                     	;# 
  5413  091F                     	;# 
  5414  098F                     	;# 
  5415  098F                     	;# 
  5416  0990                     	;# 
  5417  0991                     	;# 
  5418  0992                     	;# 
  5419  0993                     	;# 
  5420  0994                     	;# 
  5421  0995                     	;# 
  5422  0996                     	;# 
  5423  0997                     	;# 
  5424  0E0F                     	;# 
  5425  0E10                     	;# 
  5426  0E11                     	;# 
  5427  0E12                     	;# 
  5428  0E13                     	;# 
  5429  0E14                     	;# 
  5430  0E15                     	;# 
  5431  0E16                     	;# 
  5432  0E17                     	;# 
  5433  0E18                     	;# 
  5434  0E19                     	;# 
  5435  0E1A                     	;# 
  5436  0E1B                     	;# 
  5437  0E1C                     	;# 
  5438  0E1D                     	;# 
  5439  0E1E                     	;# 
  5440  0E1F                     	;# 
  5441  0E20                     	;# 
  5442  0E21                     	;# 
  5443  0E22                     	;# 
  5444  0E23                     	;# 
  5445  0E24                     	;# 
  5446  0E25                     	;# 
  5447  0E26                     	;# 
  5448  0E27                     	;# 
  5449  0E28                     	;# 
  5450  0E29                     	;# 
  5451  0E2A                     	;# 
  5452  0E2B                     	;# 
  5453  0E2C                     	;# 
  5454  0E2D                     	;# 
  5455  0E2E                     	;# 
  5456  0E2F                     	;# 
  5457  0E30                     	;# 
  5458  0E31                     	;# 
  5459  0E32                     	;# 
  5460  0E33                     	;# 
  5461  0E34                     	;# 
  5462  0E35                     	;# 
  5463  0E36                     	;# 
  5464  0E37                     	;# 
  5465  0E8F                     	;# 
  5466  0E90                     	;# 
  5467  0E91                     	;# 
  5468  0E92                     	;# 
  5469  0E93                     	;# 
  5470  0E94                     	;# 
  5471  0E95                     	;# 
  5472  0E96                     	;# 
  5473  0E97                     	;# 
  5474  0E9C                     	;# 
  5475  0E9D                     	;# 
  5476  0E9E                     	;# 
  5477  0EA1                     	;# 
  5478  0EA2                     	;# 
  5479  0EA3                     	;# 
  5480  0EA4                     	;# 
  5481  0EA5                     	;# 
  5482  0EA9                     	;# 
  5483  0EAA                     	;# 
  5484  0EAB                     	;# 
  5485  0EAC                     	;# 
  5486  0EB1                     	;# 
  5487  0EB2                     	;# 
  5488  0EB3                     	;# 
  5489  0EB8                     	;# 
  5490  0EB9                     	;# 
  5491  0EBA                     	;# 
  5492  0EBB                     	;# 
  5493  0EBC                     	;# 
  5494  0EBD                     	;# 
  5495  0EBE                     	;# 
  5496  0EC3                     	;# 
  5497  0EC5                     	;# 
  5498  0EC6                     	;# 
  5499  0EC7                     	;# 
  5500  0EC8                     	;# 
  5501  0EC9                     	;# 
  5502  0ECA                     	;# 
  5503  0ECB                     	;# 
  5504  0ECC                     	;# 
  5505  0F10                     	;# 
  5506  0F11                     	;# 
  5507  0F12                     	;# 
  5508  0F13                     	;# 
  5509  0F14                     	;# 
  5510  0F15                     	;# 
  5511  0F16                     	;# 
  5512  0F17                     	;# 
  5513  0F18                     	;# 
  5514  0F19                     	;# 
  5515  0F1A                     	;# 
  5516  0F1B                     	;# 
  5517  0F1C                     	;# 
  5518  0F1D                     	;# 
  5519  0F1E                     	;# 
  5520  0F1F                     	;# 
  5521  0F20                     	;# 
  5522  0F21                     	;# 
  5523  0F22                     	;# 
  5524  0F23                     	;# 
  5525  0F24                     	;# 
  5526  0F25                     	;# 
  5527  0F26                     	;# 
  5528  0F27                     	;# 
  5529  0F28                     	;# 
  5530  0F29                     	;# 
  5531  0F2A                     	;# 
  5532  0F2B                     	;# 
  5533  0F2C                     	;# 
  5534  0F2D                     	;# 
  5535  0F2E                     	;# 
  5536  0F2F                     	;# 
  5537  0F30                     	;# 
  5538  0F31                     	;# 
  5539  0F32                     	;# 
  5540  0F38                     	;# 
  5541  0F39                     	;# 
  5542  0F3A                     	;# 
  5543  0F3B                     	;# 
  5544  0F3C                     	;# 
  5545  0F3D                     	;# 
  5546  0F3E                     	;# 
  5547  0F3F                     	;# 
  5548  0F40                     	;# 
  5549  0F41                     	;# 
  5550  0F43                     	;# 
  5551  0F44                     	;# 
  5552  0F45                     	;# 
  5553  0F46                     	;# 
  5554  0F47                     	;# 
  5555  0F48                     	;# 
  5556  0F49                     	;# 
  5557  0F4A                     	;# 
  5558  0F4B                     	;# 
  5559  0F4C                     	;# 
  5560  0F4E                     	;# 
  5561  0F4F                     	;# 
  5562  0F50                     	;# 
  5563  0F51                     	;# 
  5564  0F52                     	;# 
  5565  0F53                     	;# 
  5566  0F54                     	;# 
  5567  0F55                     	;# 
  5568  0F56                     	;# 
  5569  0F57                     	;# 
  5570  0F59                     	;# 
  5571  0F5A                     	;# 
  5572  0F5B                     	;# 
  5573  0F5C                     	;# 
  5574  0F5D                     	;# 
  5575  0F61                     	;# 
  5576  0F62                     	;# 
  5577  0F64                     	;# 
  5578  0F65                     	;# 
  5579  0F66                     	;# 
  5580  0F67                     	;# 
  5581  0F68                     	;# 
  5582  0F69                     	;# 
  5583  0F6A                     	;# 
  5584  0F6B                     	;# 
  5585  0F6C                     	;# 
  5586  0F6D                     	;# 
  5587  0FE4                     	;# 
  5588  0FE5                     	;# 
  5589  0FE6                     	;# 
  5590  0FE7                     	;# 
  5591  0FE8                     	;# 
  5592  0FE9                     	;# 
  5593  0FEA                     	;# 
  5594  0FEB                     	;# 
  5595  0FED                     	;# 
  5596  0FEE                     	;# 
  5597  0FEF                     	;# 
  5598  0000                     	;# 
  5599  0001                     	;# 
  5600  0002                     	;# 
  5601  0003                     	;# 
  5602  0004                     	;# 
  5603  0005                     	;# 
  5604  0006                     	;# 
  5605  0007                     	;# 
  5606  0008                     	;# 
  5607  0009                     	;# 
  5608  000A                     	;# 
  5609  000B                     	;# 
  5610  000C                     	;# 
  5611  000D                     	;# 
  5612  000E                     	;# 
  5613  000F                     	;# 
  5614  0010                     	;# 
  5615  0011                     	;# 
  5616  0012                     	;# 
  5617  0013                     	;# 
  5618  0014                     	;# 
  5619  0015                     	;# 
  5620  0016                     	;# 
  5621  0017                     	;# 
  5622  0018                     	;# 
  5623  0019                     	;# 
  5624  001A                     	;# 
  5625  001C                     	;# 
  5626  001C                     	;# 
  5627  001D                     	;# 
  5628  001D                     	;# 
  5629  001E                     	;# 
  5630  001F                     	;# 
  5631  008C                     	;# 
  5632  008C                     	;# 
  5633  008D                     	;# 
  5634  008E                     	;# 
  5635  008E                     	;# 
  5636  008F                     	;# 
  5637  0090                     	;# 
  5638  0090                     	;# 
  5639  0091                     	;# 
  5640  0093                     	;# 
  5641  0094                     	;# 
  5642  0095                     	;# 
  5643  0096                     	;# 
  5644  0097                     	;# 
  5645  0098                     	;# 
  5646  0099                     	;# 
  5647  009A                     	;# 
  5648  009B                     	;# 
  5649  009C                     	;# 
  5650  009D                     	;# 
  5651  009E                     	;# 
  5652  010C                     	;# 
  5653  010D                     	;# 
  5654  010E                     	;# 
  5655  010E                     	;# 
  5656  010F                     	;# 
  5657  0110                     	;# 
  5658  0110                     	;# 
  5659  0111                     	;# 
  5660  0112                     	;# 
  5661  0112                     	;# 
  5662  0113                     	;# 
  5663  0114                     	;# 
  5664  0114                     	;# 
  5665  0115                     	;# 
  5666  0116                     	;# 
  5667  0116                     	;# 
  5668  0117                     	;# 
  5669  0119                     	;# 
  5670  0119                     	;# 
  5671  0119                     	;# 
  5672  011A                     	;# 
  5673  011A                     	;# 
  5674  011A                     	;# 
  5675  011B                     	;# 
  5676  011B                     	;# 
  5677  011B                     	;# 
  5678  011B                     	;# 
  5679  011B                     	;# 
  5680  011C                     	;# 
  5681  011C                     	;# 
  5682  011C                     	;# 
  5683  011D                     	;# 
  5684  011D                     	;# 
  5685  011D                     	;# 
  5686  011E                     	;# 
  5687  011E                     	;# 
  5688  011E                     	;# 
  5689  011F                     	;# 
  5690  011F                     	;# 
  5691  011F                     	;# 
  5692  011F                     	;# 
  5693  011F                     	;# 
  5694  018C                     	;# 
  5695  018D                     	;# 
  5696  018E                     	;# 
  5697  018F                     	;# 
  5698  0190                     	;# 
  5699  0191                     	;# 
  5700  0192                     	;# 
  5701  0196                     	;# 
  5702  0197                     	;# 
  5703  0198                     	;# 
  5704  0199                     	;# 
  5705  019A                     	;# 
  5706  019B                     	;# 
  5707  019C                     	;# 
  5708  020C                     	;# 
  5709  020C                     	;# 
  5710  020D                     	;# 
  5711  020E                     	;# 
  5712  020F                     	;# 
  5713  020F                     	;# 
  5714  0210                     	;# 
  5715  0210                     	;# 
  5716  0211                     	;# 
  5717  0211                     	;# 
  5718  0212                     	;# 
  5719  0212                     	;# 
  5720  0213                     	;# 
  5721  0214                     	;# 
  5722  0215                     	;# 
  5723  0215                     	;# 
  5724  0216                     	;# 
  5725  0216                     	;# 
  5726  0217                     	;# 
  5727  0217                     	;# 
  5728  0218                     	;# 
  5729  0218                     	;# 
  5730  0219                     	;# 
  5731  021A                     	;# 
  5732  021B                     	;# 
  5733  021B                     	;# 
  5734  021C                     	;# 
  5735  021C                     	;# 
  5736  021D                     	;# 
  5737  021D                     	;# 
  5738  021E                     	;# 
  5739  021F                     	;# 
  5740  028C                     	;# 
  5741  028C                     	;# 
  5742  028D                     	;# 
  5743  028D                     	;# 
  5744  028E                     	;# 
  5745  028F                     	;# 
  5746  0290                     	;# 
  5747  0290                     	;# 
  5748  0291                     	;# 
  5749  0292                     	;# 
  5750  0292                     	;# 
  5751  0293                     	;# 
  5752  0293                     	;# 
  5753  0294                     	;# 
  5754  0295                     	;# 
  5755  0296                     	;# 
  5756  0296                     	;# 
  5757  0297                     	;# 
  5758  0298                     	;# 
  5759  0298                     	;# 
  5760  0299                     	;# 
  5761  0299                     	;# 
  5762  029A                     	;# 
  5763  029B                     	;# 
  5764  029C                     	;# 
  5765  029C                     	;# 
  5766  029D                     	;# 
  5767  030C                     	;# 
  5768  030C                     	;# 
  5769  030D                     	;# 
  5770  030E                     	;# 
  5771  030F                     	;# 
  5772  0310                     	;# 
  5773  0310                     	;# 
  5774  0311                     	;# 
  5775  0312                     	;# 
  5776  0313                     	;# 
  5777  0314                     	;# 
  5778  0314                     	;# 
  5779  0315                     	;# 
  5780  0316                     	;# 
  5781  0317                     	;# 
  5782  0318                     	;# 
  5783  0318                     	;# 
  5784  0319                     	;# 
  5785  031A                     	;# 
  5786  031B                     	;# 
  5787  031C                     	;# 
  5788  031C                     	;# 
  5789  031D                     	;# 
  5790  031E                     	;# 
  5791  031F                     	;# 
  5792  038C                     	;# 
  5793  038C                     	;# 
  5794  038D                     	;# 
  5795  038E                     	;# 
  5796  0390                     	;# 
  5797  0390                     	;# 
  5798  0391                     	;# 
  5799  0392                     	;# 
  5800  040C                     	;# 
  5801  040D                     	;# 
  5802  040E                     	;# 
  5803  040F                     	;# 
  5804  0410                     	;# 
  5805  0411                     	;# 
  5806  0416                     	;# 
  5807  0416                     	;# 
  5808  0417                     	;# 
  5809  0418                     	;# 
  5810  0418                     	;# 
  5811  0419                     	;# 
  5812  041A                     	;# 
  5813  041A                     	;# 
  5814  041B                     	;# 
  5815  041C                     	;# 
  5816  041C                     	;# 
  5817  041D                     	;# 
  5818  041E                     	;# 
  5819  041F                     	;# 
  5820  048C                     	;# 
  5821  048C                     	;# 
  5822  048D                     	;# 
  5823  048E                     	;# 
  5824  048F                     	;# 
  5825  048F                     	;# 
  5826  0490                     	;# 
  5827  0491                     	;# 
  5828  0492                     	;# 
  5829  0492                     	;# 
  5830  0493                     	;# 
  5831  0494                     	;# 
  5832  0495                     	;# 
  5833  0495                     	;# 
  5834  0496                     	;# 
  5835  0497                     	;# 
  5836  0498                     	;# 
  5837  0499                     	;# 
  5838  049A                     	;# 
  5839  049B                     	;# 
  5840  049C                     	;# 
  5841  049D                     	;# 
  5842  050C                     	;# 
  5843  050C                     	;# 
  5844  050D                     	;# 
  5845  050E                     	;# 
  5846  050F                     	;# 
  5847  050F                     	;# 
  5848  0510                     	;# 
  5849  0511                     	;# 
  5850  0512                     	;# 
  5851  0512                     	;# 
  5852  0513                     	;# 
  5853  0514                     	;# 
  5854  0515                     	;# 
  5855  0515                     	;# 
  5856  0516                     	;# 
  5857  0517                     	;# 
  5858  0518                     	;# 
  5859  0519                     	;# 
  5860  051A                     	;# 
  5861  051B                     	;# 
  5862  051C                     	;# 
  5863  051D                     	;# 
  5864  058C                     	;# 
  5865  058C                     	;# 
  5866  058D                     	;# 
  5867  058E                     	;# 
  5868  058F                     	;# 
  5869  058F                     	;# 
  5870  0590                     	;# 
  5871  0591                     	;# 
  5872  0592                     	;# 
  5873  0593                     	;# 
  5874  060C                     	;# 
  5875  060D                     	;# 
  5876  060E                     	;# 
  5877  060F                     	;# 
  5878  0610                     	;# 
  5879  0611                     	;# 
  5880  0612                     	;# 
  5881  0613                     	;# 
  5882  0614                     	;# 
  5883  0616                     	;# 
  5884  0617                     	;# 
  5885  0618                     	;# 
  5886  0619                     	;# 
  5887  061A                     	;# 
  5888  061B                     	;# 
  5889  061C                     	;# 
  5890  061D                     	;# 
  5891  061E                     	;# 
  5892  068C                     	;# 
  5893  068D                     	;# 
  5894  068E                     	;# 
  5895  068F                     	;# 
  5896  0690                     	;# 
  5897  0691                     	;# 
  5898  0692                     	;# 
  5899  0693                     	;# 
  5900  0694                     	;# 
  5901  070C                     	;# 
  5902  070D                     	;# 
  5903  070E                     	;# 
  5904  070F                     	;# 
  5905  0710                     	;# 
  5906  0711                     	;# 
  5907  0712                     	;# 
  5908  0713                     	;# 
  5909  0714                     	;# 
  5910  0716                     	;# 
  5911  0717                     	;# 
  5912  0718                     	;# 
  5913  0719                     	;# 
  5914  071A                     	;# 
  5915  071B                     	;# 
  5916  071C                     	;# 
  5917  071D                     	;# 
  5918  071E                     	;# 
  5919  0796                     	;# 
  5920  0797                     	;# 
  5921  0798                     	;# 
  5922  0799                     	;# 
  5923  079A                     	;# 
  5924  079B                     	;# 
  5925  080C                     	;# 
  5926  080D                     	;# 
  5927  080E                     	;# 
  5928  080F                     	;# 
  5929  0810                     	;# 
  5930  0811                     	;# 
  5931  0812                     	;# 
  5932  0813                     	;# 
  5933  0814                     	;# 
  5934  081A                     	;# 
  5935  081B                     	;# 
  5936  081C                     	;# 
  5937  081D                     	;# 
  5938  081E                     	;# 
  5939  081F                     	;# 
  5940  088C                     	;# 
  5941  088D                     	;# 
  5942  088E                     	;# 
  5943  088F                     	;# 
  5944  0890                     	;# 
  5945  0891                     	;# 
  5946  0892                     	;# 
  5947  0893                     	;# 
  5948  0895                     	;# 
  5949  0896                     	;# 
  5950  0897                     	;# 
  5951  0898                     	;# 
  5952  0899                     	;# 
  5953  089A                     	;# 
  5954  089B                     	;# 
  5955  090C                     	;# 
  5956  090E                     	;# 
  5957  090F                     	;# 
  5958  091F                     	;# 
  5959  091F                     	;# 
  5960  098F                     	;# 
  5961  098F                     	;# 
  5962  0990                     	;# 
  5963  0991                     	;# 
  5964  0992                     	;# 
  5965  0993                     	;# 
  5966  0994                     	;# 
  5967  0995                     	;# 
  5968  0996                     	;# 
  5969  0997                     	;# 
  5970  0E0F                     	;# 
  5971  0E10                     	;# 
  5972  0E11                     	;# 
  5973  0E12                     	;# 
  5974  0E13                     	;# 
  5975  0E14                     	;# 
  5976  0E15                     	;# 
  5977  0E16                     	;# 
  5978  0E17                     	;# 
  5979  0E18                     	;# 
  5980  0E19                     	;# 
  5981  0E1A                     	;# 
  5982  0E1B                     	;# 
  5983  0E1C                     	;# 
  5984  0E1D                     	;# 
  5985  0E1E                     	;# 
  5986  0E1F                     	;# 
  5987  0E20                     	;# 
  5988  0E21                     	;# 
  5989  0E22                     	;# 
  5990  0E23                     	;# 
  5991  0E24                     	;# 
  5992  0E25                     	;# 
  5993  0E26                     	;# 
  5994  0E27                     	;# 
  5995  0E28                     	;# 
  5996  0E29                     	;# 
  5997  0E2A                     	;# 
  5998  0E2B                     	;# 
  5999  0E2C                     	;# 
  6000  0E2D                     	;# 
  6001  0E2E                     	;# 
  6002  0E2F                     	;# 
  6003  0E30                     	;# 
  6004  0E31                     	;# 
  6005  0E32                     	;# 
  6006  0E33                     	;# 
  6007  0E34                     	;# 
  6008  0E35                     	;# 
  6009  0E36                     	;# 
  6010  0E37                     	;# 
  6011  0E8F                     	;# 
  6012  0E90                     	;# 
  6013  0E91                     	;# 
  6014  0E92                     	;# 
  6015  0E93                     	;# 
  6016  0E94                     	;# 
  6017  0E95                     	;# 
  6018  0E96                     	;# 
  6019  0E97                     	;# 
  6020  0E9C                     	;# 
  6021  0E9D                     	;# 
  6022  0E9E                     	;# 
  6023  0EA1                     	;# 
  6024  0EA2                     	;# 
  6025  0EA3                     	;# 
  6026  0EA4                     	;# 
  6027  0EA5                     	;# 
  6028  0EA9                     	;# 
  6029  0EAA                     	;# 
  6030  0EAB                     	;# 
  6031  0EAC                     	;# 
  6032  0EB1                     	;# 
  6033  0EB2                     	;# 
  6034  0EB3                     	;# 
  6035  0EB8                     	;# 
  6036  0EB9                     	;# 
  6037  0EBA                     	;# 
  6038  0EBB                     	;# 
  6039  0EBC                     	;# 
  6040  0EBD                     	;# 
  6041  0EBE                     	;# 
  6042  0EC3                     	;# 
  6043  0EC5                     	;# 
  6044  0EC6                     	;# 
  6045  0EC7                     	;# 
  6046  0EC8                     	;# 
  6047  0EC9                     	;# 
  6048  0ECA                     	;# 
  6049  0ECB                     	;# 
  6050  0ECC                     	;# 
  6051  0F10                     	;# 
  6052  0F11                     	;# 
  6053  0F12                     	;# 
  6054  0F13                     	;# 
  6055  0F14                     	;# 
  6056  0F15                     	;# 
  6057  0F16                     	;# 
  6058  0F17                     	;# 
  6059  0F18                     	;# 
  6060  0F19                     	;# 
  6061  0F1A                     	;# 
  6062  0F1B                     	;# 
  6063  0F1C                     	;# 
  6064  0F1D                     	;# 
  6065  0F1E                     	;# 
  6066  0F1F                     	;# 
  6067  0F20                     	;# 
  6068  0F21                     	;# 
  6069  0F22                     	;# 
  6070  0F23                     	;# 
  6071  0F24                     	;# 
  6072  0F25                     	;# 
  6073  0F26                     	;# 
  6074  0F27                     	;# 
  6075  0F28                     	;# 
  6076  0F29                     	;# 
  6077  0F2A                     	;# 
  6078  0F2B                     	;# 
  6079  0F2C                     	;# 
  6080  0F2D                     	;# 
  6081  0F2E                     	;# 
  6082  0F2F                     	;# 
  6083  0F30                     	;# 
  6084  0F31                     	;# 
  6085  0F32                     	;# 
  6086  0F38                     	;# 
  6087  0F39                     	;# 
  6088  0F3A                     	;# 
  6089  0F3B                     	;# 
  6090  0F3C                     	;# 
  6091  0F3D                     	;# 
  6092  0F3E                     	;# 
  6093  0F3F                     	;# 
  6094  0F40                     	;# 
  6095  0F41                     	;# 
  6096  0F43                     	;# 
  6097  0F44                     	;# 
  6098  0F45                     	;# 
  6099  0F46                     	;# 
  6100  0F47                     	;# 
  6101  0F48                     	;# 
  6102  0F49                     	;# 
  6103  0F4A                     	;# 
  6104  0F4B                     	;# 
  6105  0F4C                     	;# 
  6106  0F4E                     	;# 
  6107  0F4F                     	;# 
  6108  0F50                     	;# 
  6109  0F51                     	;# 
  6110  0F52                     	;# 
  6111  0F53                     	;# 
  6112  0F54                     	;# 
  6113  0F55                     	;# 
  6114  0F56                     	;# 
  6115  0F57                     	;# 
  6116  0F59                     	;# 
  6117  0F5A                     	;# 
  6118  0F5B                     	;# 
  6119  0F5C                     	;# 
  6120  0F5D                     	;# 
  6121  0F61                     	;# 
  6122  0F62                     	;# 
  6123  0F64                     	;# 
  6124  0F65                     	;# 
  6125  0F66                     	;# 
  6126  0F67                     	;# 
  6127  0F68                     	;# 
  6128  0F69                     	;# 
  6129  0F6A                     	;# 
  6130  0F6B                     	;# 
  6131  0F6C                     	;# 
  6132  0F6D                     	;# 
  6133  0FE4                     	;# 
  6134  0FE5                     	;# 
  6135  0FE6                     	;# 
  6136  0FE7                     	;# 
  6137  0FE8                     	;# 
  6138  0FE9                     	;# 
  6139  0FEA                     	;# 
  6140  0FEB                     	;# 
  6141  0FED                     	;# 
  6142  0FEE                     	;# 
  6143  0FEF                     	;# 
  6144  0000                     	;# 
  6145  0001                     	;# 
  6146  0002                     	;# 
  6147  0003                     	;# 
  6148  0004                     	;# 
  6149  0005                     	;# 
  6150  0006                     	;# 
  6151  0007                     	;# 
  6152  0008                     	;# 
  6153  0009                     	;# 
  6154  000A                     	;# 
  6155  000B                     	;# 
  6156  000C                     	;# 
  6157  000D                     	;# 
  6158  000E                     	;# 
  6159  000F                     	;# 
  6160  0010                     	;# 
  6161  0011                     	;# 
  6162  0012                     	;# 
  6163  0013                     	;# 
  6164  0014                     	;# 
  6165  0015                     	;# 
  6166  0016                     	;# 
  6167  0017                     	;# 
  6168  0018                     	;# 
  6169  0019                     	;# 
  6170  001A                     	;# 
  6171  001C                     	;# 
  6172  001C                     	;# 
  6173  001D                     	;# 
  6174  001D                     	;# 
  6175  001E                     	;# 
  6176  001F                     	;# 
  6177  008C                     	;# 
  6178  008C                     	;# 
  6179  008D                     	;# 
  6180  008E                     	;# 
  6181  008E                     	;# 
  6182  008F                     	;# 
  6183  0090                     	;# 
  6184  0090                     	;# 
  6185  0091                     	;# 
  6186  0093                     	;# 
  6187  0094                     	;# 
  6188  0095                     	;# 
  6189  0096                     	;# 
  6190  0097                     	;# 
  6191  0098                     	;# 
  6192  0099                     	;# 
  6193  009A                     	;# 
  6194  009B                     	;# 
  6195  009C                     	;# 
  6196  009D                     	;# 
  6197  009E                     	;# 
  6198  010C                     	;# 
  6199  010D                     	;# 
  6200  010E                     	;# 
  6201  010E                     	;# 
  6202  010F                     	;# 
  6203  0110                     	;# 
  6204  0110                     	;# 
  6205  0111                     	;# 
  6206  0112                     	;# 
  6207  0112                     	;# 
  6208  0113                     	;# 
  6209  0114                     	;# 
  6210  0114                     	;# 
  6211  0115                     	;# 
  6212  0116                     	;# 
  6213  0116                     	;# 
  6214  0117                     	;# 
  6215  0119                     	;# 
  6216  0119                     	;# 
  6217  0119                     	;# 
  6218  011A                     	;# 
  6219  011A                     	;# 
  6220  011A                     	;# 
  6221  011B                     	;# 
  6222  011B                     	;# 
  6223  011B                     	;# 
  6224  011B                     	;# 
  6225  011B                     	;# 
  6226  011C                     	;# 
  6227  011C                     	;# 
  6228  011C                     	;# 
  6229  011D                     	;# 
  6230  011D                     	;# 
  6231  011D                     	;# 
  6232  011E                     	;# 
  6233  011E                     	;# 
  6234  011E                     	;# 
  6235  011F                     	;# 
  6236  011F                     	;# 
  6237  011F                     	;# 
  6238  011F                     	;# 
  6239  011F                     	;# 
  6240  018C                     	;# 
  6241  018D                     	;# 
  6242  018E                     	;# 
  6243  018F                     	;# 
  6244  0190                     	;# 
  6245  0191                     	;# 
  6246  0192                     	;# 
  6247  0196                     	;# 
  6248  0197                     	;# 
  6249  0198                     	;# 
  6250  0199                     	;# 
  6251  019A                     	;# 
  6252  019B                     	;# 
  6253  019C                     	;# 
  6254  020C                     	;# 
  6255  020C                     	;# 
  6256  020D                     	;# 
  6257  020E                     	;# 
  6258  020F                     	;# 
  6259  020F                     	;# 
  6260  0210                     	;# 
  6261  0210                     	;# 
  6262  0211                     	;# 
  6263  0211                     	;# 
  6264  0212                     	;# 
  6265  0212                     	;# 
  6266  0213                     	;# 
  6267  0214                     	;# 
  6268  0215                     	;# 
  6269  0215                     	;# 
  6270  0216                     	;# 
  6271  0216                     	;# 
  6272  0217                     	;# 
  6273  0217                     	;# 
  6274  0218                     	;# 
  6275  0218                     	;# 
  6276  0219                     	;# 
  6277  021A                     	;# 
  6278  021B                     	;# 
  6279  021B                     	;# 
  6280  021C                     	;# 
  6281  021C                     	;# 
  6282  021D                     	;# 
  6283  021D                     	;# 
  6284  021E                     	;# 
  6285  021F                     	;# 
  6286  028C                     	;# 
  6287  028C                     	;# 
  6288  028D                     	;# 
  6289  028D                     	;# 
  6290  028E                     	;# 
  6291  028F                     	;# 
  6292  0290                     	;# 
  6293  0290                     	;# 
  6294  0291                     	;# 
  6295  0292                     	;# 
  6296  0292                     	;# 
  6297  0293                     	;# 
  6298  0293                     	;# 
  6299  0294                     	;# 
  6300  0295                     	;# 
  6301  0296                     	;# 
  6302  0296                     	;# 
  6303  0297                     	;# 
  6304  0298                     	;# 
  6305  0298                     	;# 
  6306  0299                     	;# 
  6307  0299                     	;# 
  6308  029A                     	;# 
  6309  029B                     	;# 
  6310  029C                     	;# 
  6311  029C                     	;# 
  6312  029D                     	;# 
  6313  030C                     	;# 
  6314  030C                     	;# 
  6315  030D                     	;# 
  6316  030E                     	;# 
  6317  030F                     	;# 
  6318  0310                     	;# 
  6319  0310                     	;# 
  6320  0311                     	;# 
  6321  0312                     	;# 
  6322  0313                     	;# 
  6323  0314                     	;# 
  6324  0314                     	;# 
  6325  0315                     	;# 
  6326  0316                     	;# 
  6327  0317                     	;# 
  6328  0318                     	;# 
  6329  0318                     	;# 
  6330  0319                     	;# 
  6331  031A                     	;# 
  6332  031B                     	;# 
  6333  031C                     	;# 
  6334  031C                     	;# 
  6335  031D                     	;# 
  6336  031E                     	;# 
  6337  031F                     	;# 
  6338  038C                     	;# 
  6339  038C                     	;# 
  6340  038D                     	;# 
  6341  038E                     	;# 
  6342  0390                     	;# 
  6343  0390                     	;# 
  6344  0391                     	;# 
  6345  0392                     	;# 
  6346  040C                     	;# 
  6347  040D                     	;# 
  6348  040E                     	;# 
  6349  040F                     	;# 
  6350  0410                     	;# 
  6351  0411                     	;# 
  6352  0416                     	;# 
  6353  0416                     	;# 
  6354  0417                     	;# 
  6355  0418                     	;# 
  6356  0418                     	;# 
  6357  0419                     	;# 
  6358  041A                     	;# 
  6359  041A                     	;# 
  6360  041B                     	;# 
  6361  041C                     	;# 
  6362  041C                     	;# 
  6363  041D                     	;# 
  6364  041E                     	;# 
  6365  041F                     	;# 
  6366  048C                     	;# 
  6367  048C                     	;# 
  6368  048D                     	;# 
  6369  048E                     	;# 
  6370  048F                     	;# 
  6371  048F                     	;# 
  6372  0490                     	;# 
  6373  0491                     	;# 
  6374  0492                     	;# 
  6375  0492                     	;# 
  6376  0493                     	;# 
  6377  0494                     	;# 
  6378  0495                     	;# 
  6379  0495                     	;# 
  6380  0496                     	;# 
  6381  0497                     	;# 
  6382  0498                     	;# 
  6383  0499                     	;# 
  6384  049A                     	;# 
  6385  049B                     	;# 
  6386  049C                     	;# 
  6387  049D                     	;# 
  6388  050C                     	;# 
  6389  050C                     	;# 
  6390  050D                     	;# 
  6391  050E                     	;# 
  6392  050F                     	;# 
  6393  050F                     	;# 
  6394  0510                     	;# 
  6395  0511                     	;# 
  6396  0512                     	;# 
  6397  0512                     	;# 
  6398  0513                     	;# 
  6399  0514                     	;# 
  6400  0515                     	;# 
  6401  0515                     	;# 
  6402  0516                     	;# 
  6403  0517                     	;# 
  6404  0518                     	;# 
  6405  0519                     	;# 
  6406  051A                     	;# 
  6407  051B                     	;# 
  6408  051C                     	;# 
  6409  051D                     	;# 
  6410  058C                     	;# 
  6411  058C                     	;# 
  6412  058D                     	;# 
  6413  058E                     	;# 
  6414  058F                     	;# 
  6415  058F                     	;# 
  6416  0590                     	;# 
  6417  0591                     	;# 
  6418  0592                     	;# 
  6419  0593                     	;# 
  6420  060C                     	;# 
  6421  060D                     	;# 
  6422  060E                     	;# 
  6423  060F                     	;# 
  6424  0610                     	;# 
  6425  0611                     	;# 
  6426  0612                     	;# 
  6427  0613                     	;# 
  6428  0614                     	;# 
  6429  0616                     	;# 
  6430  0617                     	;# 
  6431  0618                     	;# 
  6432  0619                     	;# 
  6433  061A                     	;# 
  6434  061B                     	;# 
  6435  061C                     	;# 
  6436  061D                     	;# 
  6437  061E                     	;# 
  6438  068C                     	;# 
  6439  068D                     	;# 
  6440  068E                     	;# 
  6441  068F                     	;# 
  6442  0690                     	;# 
  6443  0691                     	;# 
  6444  0692                     	;# 
  6445  0693                     	;# 
  6446  0694                     	;# 
  6447  070C                     	;# 
  6448  070D                     	;# 
  6449  070E                     	;# 
  6450  070F                     	;# 
  6451  0710                     	;# 
  6452  0711                     	;# 
  6453  0712                     	;# 
  6454  0713                     	;# 
  6455  0714                     	;# 
  6456  0716                     	;# 
  6457  0717                     	;# 
  6458  0718                     	;# 
  6459  0719                     	;# 
  6460  071A                     	;# 
  6461  071B                     	;# 
  6462  071C                     	;# 
  6463  071D                     	;# 
  6464  071E                     	;# 
  6465  0796                     	;# 
  6466  0797                     	;# 
  6467  0798                     	;# 
  6468  0799                     	;# 
  6469  079A                     	;# 
  6470  079B                     	;# 
  6471  080C                     	;# 
  6472  080D                     	;# 
  6473  080E                     	;# 
  6474  080F                     	;# 
  6475  0810                     	;# 
  6476  0811                     	;# 
  6477  0812                     	;# 
  6478  0813                     	;# 
  6479  0814                     	;# 
  6480  081A                     	;# 
  6481  081B                     	;# 
  6482  081C                     	;# 
  6483  081D                     	;# 
  6484  081E                     	;# 
  6485  081F                     	;# 
  6486  088C                     	;# 
  6487  088D                     	;# 
  6488  088E                     	;# 
  6489  088F                     	;# 
  6490  0890                     	;# 
  6491  0891                     	;# 
  6492  0892                     	;# 
  6493  0893                     	;# 
  6494  0895                     	;# 
  6495  0896                     	;# 
  6496  0897                     	;# 
  6497  0898                     	;# 
  6498  0899                     	;# 
  6499  089A                     	;# 
  6500  089B                     	;# 
  6501  090C                     	;# 
  6502  090E                     	;# 
  6503  090F                     	;# 
  6504  091F                     	;# 
  6505  091F                     	;# 
  6506  098F                     	;# 
  6507  098F                     	;# 
  6508  0990                     	;# 
  6509  0991                     	;# 
  6510  0992                     	;# 
  6511  0993                     	;# 
  6512  0994                     	;# 
  6513  0995                     	;# 
  6514  0996                     	;# 
  6515  0997                     	;# 
  6516  0E0F                     	;# 
  6517  0E10                     	;# 
  6518  0E11                     	;# 
  6519  0E12                     	;# 
  6520  0E13                     	;# 
  6521  0E14                     	;# 
  6522  0E15                     	;# 
  6523  0E16                     	;# 
  6524  0E17                     	;# 
  6525  0E18                     	;# 
  6526  0E19                     	;# 
  6527  0E1A                     	;# 
  6528  0E1B                     	;# 
  6529  0E1C                     	;# 
  6530  0E1D                     	;# 
  6531  0E1E                     	;# 
  6532  0E1F                     	;# 
  6533  0E20                     	;# 
  6534  0E21                     	;# 
  6535  0E22                     	;# 
  6536  0E23                     	;# 
  6537  0E24                     	;# 
  6538  0E25                     	;# 
  6539  0E26                     	;# 
  6540  0E27                     	;# 
  6541  0E28                     	;# 
  6542  0E29                     	;# 
  6543  0E2A                     	;# 
  6544  0E2B                     	;# 
  6545  0E2C                     	;# 
  6546  0E2D                     	;# 
  6547  0E2E                     	;# 
  6548  0E2F                     	;# 
  6549  0E30                     	;# 
  6550  0E31                     	;# 
  6551  0E32                     	;# 
  6552  0E33                     	;# 
  6553  0E34                     	;# 
  6554  0E35                     	;# 
  6555  0E36                     	;# 
  6556  0E37                     	;# 
  6557  0E8F                     	;# 
  6558  0E90                     	;# 
  6559  0E91                     	;# 
  6560  0E92                     	;# 
  6561  0E93                     	;# 
  6562  0E94                     	;# 
  6563  0E95                     	;# 
  6564  0E96                     	;# 
  6565  0E97                     	;# 
  6566  0E9C                     	;# 
  6567  0E9D                     	;# 
  6568  0E9E                     	;# 
  6569  0EA1                     	;# 
  6570  0EA2                     	;# 
  6571  0EA3                     	;# 
  6572  0EA4                     	;# 
  6573  0EA5                     	;# 
  6574  0EA9                     	;# 
  6575  0EAA                     	;# 
  6576  0EAB                     	;# 
  6577  0EAC                     	;# 
  6578  0EB1                     	;# 
  6579  0EB2                     	;# 
  6580  0EB3                     	;# 
  6581  0EB8                     	;# 
  6582  0EB9                     	;# 
  6583  0EBA                     	;# 
  6584  0EBB                     	;# 
  6585  0EBC                     	;# 
  6586  0EBD                     	;# 
  6587  0EBE                     	;# 
  6588  0EC3                     	;# 
  6589  0EC5                     	;# 
  6590  0EC6                     	;# 
  6591  0EC7                     	;# 
  6592  0EC8                     	;# 
  6593  0EC9                     	;# 
  6594  0ECA                     	;# 
  6595  0ECB                     	;# 
  6596  0ECC                     	;# 
  6597  0F10                     	;# 
  6598  0F11                     	;# 
  6599  0F12                     	;# 
  6600  0F13                     	;# 
  6601  0F14                     	;# 
  6602  0F15                     	;# 
  6603  0F16                     	;# 
  6604  0F17                     	;# 
  6605  0F18                     	;# 
  6606  0F19                     	;# 
  6607  0F1A                     	;# 
  6608  0F1B                     	;# 
  6609  0F1C                     	;# 
  6610  0F1D                     	;# 
  6611  0F1E                     	;# 
  6612  0F1F                     	;# 
  6613  0F20                     	;# 
  6614  0F21                     	;# 
  6615  0F22                     	;# 
  6616  0F23                     	;# 
  6617  0F24                     	;# 
  6618  0F25                     	;# 
  6619  0F26                     	;# 
  6620  0F27                     	;# 
  6621  0F28                     	;# 
  6622  0F29                     	;# 
  6623  0F2A                     	;# 
  6624  0F2B                     	;# 
  6625  0F2C                     	;# 
  6626  0F2D                     	;# 
  6627  0F2E                     	;# 
  6628  0F2F                     	;# 
  6629  0F30                     	;# 
  6630  0F31                     	;# 
  6631  0F32                     	;# 
  6632  0F38                     	;# 
  6633  0F39                     	;# 
  6634  0F3A                     	;# 
  6635  0F3B                     	;# 
  6636  0F3C                     	;# 
  6637  0F3D                     	;# 
  6638  0F3E                     	;# 
  6639  0F3F                     	;# 
  6640  0F40                     	;# 
  6641  0F41                     	;# 
  6642  0F43                     	;# 
  6643  0F44                     	;# 
  6644  0F45                     	;# 
  6645  0F46                     	;# 
  6646  0F47                     	;# 
  6647  0F48                     	;# 
  6648  0F49                     	;# 
  6649  0F4A                     	;# 
  6650  0F4B                     	;# 
  6651  0F4C                     	;# 
  6652  0F4E                     	;# 
  6653  0F4F                     	;# 
  6654  0F50                     	;# 
  6655  0F51                     	;# 
  6656  0F52                     	;# 
  6657  0F53                     	;# 
  6658  0F54                     	;# 
  6659  0F55                     	;# 
  6660  0F56                     	;# 
  6661  0F57                     	;# 
  6662  0F59                     	;# 
  6663  0F5A                     	;# 
  6664  0F5B                     	;# 
  6665  0F5C                     	;# 
  6666  0F5D                     	;# 
  6667  0F61                     	;# 
  6668  0F62                     	;# 
  6669  0F64                     	;# 
  6670  0F65                     	;# 
  6671  0F66                     	;# 
  6672  0F67                     	;# 
  6673  0F68                     	;# 
  6674  0F69                     	;# 
  6675  0F6A                     	;# 
  6676  0F6B                     	;# 
  6677  0F6C                     	;# 
  6678  0F6D                     	;# 
  6679  0FE4                     	;# 
  6680  0FE5                     	;# 
  6681  0FE6                     	;# 
  6682  0FE7                     	;# 
  6683  0FE8                     	;# 
  6684  0FE9                     	;# 
  6685  0FEA                     	;# 
  6686  0FEB                     	;# 
  6687  0FED                     	;# 
  6688  0FEE                     	;# 
  6689  0FEF                     	;# 
  6690  0000                     	;# 
  6691  0001                     	;# 
  6692  0002                     	;# 
  6693  0003                     	;# 
  6694  0004                     	;# 
  6695  0005                     	;# 
  6696  0006                     	;# 
  6697  0007                     	;# 
  6698  0008                     	;# 
  6699  0009                     	;# 
  6700  000A                     	;# 
  6701  000B                     	;# 
  6702  000C                     	;# 
  6703  000D                     	;# 
  6704  000E                     	;# 
  6705  000F                     	;# 
  6706  0010                     	;# 
  6707  0011                     	;# 
  6708  0012                     	;# 
  6709  0013                     	;# 
  6710  0014                     	;# 
  6711  0015                     	;# 
  6712  0016                     	;# 
  6713  0017                     	;# 
  6714  0018                     	;# 
  6715  0019                     	;# 
  6716  001A                     	;# 
  6717  001C                     	;# 
  6718  001C                     	;# 
  6719  001D                     	;# 
  6720  001D                     	;# 
  6721  001E                     	;# 
  6722  001F                     	;# 
  6723  008C                     	;# 
  6724  008C                     	;# 
  6725  008D                     	;# 
  6726  008E                     	;# 
  6727  008E                     	;# 
  6728  008F                     	;# 
  6729  0090                     	;# 
  6730  0090                     	;# 
  6731  0091                     	;# 
  6732  0093                     	;# 
  6733  0094                     	;# 
  6734  0095                     	;# 
  6735  0096                     	;# 
  6736  0097                     	;# 
  6737  0098                     	;# 
  6738  0099                     	;# 
  6739  009A                     	;# 
  6740  009B                     	;# 
  6741  009C                     	;# 
  6742  009D                     	;# 
  6743  009E                     	;# 
  6744  010C                     	;# 
  6745  010D                     	;# 
  6746  010E                     	;# 
  6747  010E                     	;# 
  6748  010F                     	;# 
  6749  0110                     	;# 
  6750  0110                     	;# 
  6751  0111                     	;# 
  6752  0112                     	;# 
  6753  0112                     	;# 
  6754  0113                     	;# 
  6755  0114                     	;# 
  6756  0114                     	;# 
  6757  0115                     	;# 
  6758  0116                     	;# 
  6759  0116                     	;# 
  6760  0117                     	;# 
  6761  0119                     	;# 
  6762  0119                     	;# 
  6763  0119                     	;# 
  6764  011A                     	;# 
  6765  011A                     	;# 
  6766  011A                     	;# 
  6767  011B                     	;# 
  6768  011B                     	;# 
  6769  011B                     	;# 
  6770  011B                     	;# 
  6771  011B                     	;# 
  6772  011C                     	;# 
  6773  011C                     	;# 
  6774  011C                     	;# 
  6775  011D                     	;# 
  6776  011D                     	;# 
  6777  011D                     	;# 
  6778  011E                     	;# 
  6779  011E                     	;# 
  6780  011E                     	;# 
  6781  011F                     	;# 
  6782  011F                     	;# 
  6783  011F                     	;# 
  6784  011F                     	;# 
  6785  011F                     	;# 
  6786  018C                     	;# 
  6787  018D                     	;# 
  6788  018E                     	;# 
  6789  018F                     	;# 
  6790  0190                     	;# 
  6791  0191                     	;# 
  6792  0192                     	;# 
  6793  0196                     	;# 
  6794  0197                     	;# 
  6795  0198                     	;# 
  6796  0199                     	;# 
  6797  019A                     	;# 
  6798  019B                     	;# 
  6799  019C                     	;# 
  6800  020C                     	;# 
  6801  020C                     	;# 
  6802  020D                     	;# 
  6803  020E                     	;# 
  6804  020F                     	;# 
  6805  020F                     	;# 
  6806  0210                     	;# 
  6807  0210                     	;# 
  6808  0211                     	;# 
  6809  0211                     	;# 
  6810  0212                     	;# 
  6811  0212                     	;# 
  6812  0213                     	;# 
  6813  0214                     	;# 
  6814  0215                     	;# 
  6815  0215                     	;# 
  6816  0216                     	;# 
  6817  0216                     	;# 
  6818  0217                     	;# 
  6819  0217                     	;# 
  6820  0218                     	;# 
  6821  0218                     	;# 
  6822  0219                     	;# 
  6823  021A                     	;# 
  6824  021B                     	;# 
  6825  021B                     	;# 
  6826  021C                     	;# 
  6827  021C                     	;# 
  6828  021D                     	;# 
  6829  021D                     	;# 
  6830  021E                     	;# 
  6831  021F                     	;# 
  6832  028C                     	;# 
  6833  028C                     	;# 
  6834  028D                     	;# 
  6835  028D                     	;# 
  6836  028E                     	;# 
  6837  028F                     	;# 
  6838  0290                     	;# 
  6839  0290                     	;# 
  6840  0291                     	;# 
  6841  0292                     	;# 
  6842  0292                     	;# 
  6843  0293                     	;# 
  6844  0293                     	;# 
  6845  0294                     	;# 
  6846  0295                     	;# 
  6847  0296                     	;# 
  6848  0296                     	;# 
  6849  0297                     	;# 
  6850  0298                     	;# 
  6851  0298                     	;# 
  6852  0299                     	;# 
  6853  0299                     	;# 
  6854  029A                     	;# 
  6855  029B                     	;# 
  6856  029C                     	;# 
  6857  029C                     	;# 
  6858  029D                     	;# 
  6859  030C                     	;# 
  6860  030C                     	;# 
  6861  030D                     	;# 
  6862  030E                     	;# 
  6863  030F                     	;# 
  6864  0310                     	;# 
  6865  0310                     	;# 
  6866  0311                     	;# 
  6867  0312                     	;# 
  6868  0313                     	;# 
  6869  0314                     	;# 
  6870  0314                     	;# 
  6871  0315                     	;# 
  6872  0316                     	;# 
  6873  0317                     	;# 
  6874  0318                     	;# 
  6875  0318                     	;# 
  6876  0319                     	;# 
  6877  031A                     	;# 
  6878  031B                     	;# 
  6879  031C                     	;# 
  6880  031C                     	;# 
  6881  031D                     	;# 
  6882  031E                     	;# 
  6883  031F                     	;# 
  6884  038C                     	;# 
  6885  038C                     	;# 
  6886  038D                     	;# 
  6887  038E                     	;# 
  6888  0390                     	;# 
  6889  0390                     	;# 
  6890  0391                     	;# 
  6891  0392                     	;# 
  6892  040C                     	;# 
  6893  040D                     	;# 
  6894  040E                     	;# 
  6895  040F                     	;# 
  6896  0410                     	;# 
  6897  0411                     	;# 
  6898  0416                     	;# 
  6899  0416                     	;# 
  6900  0417                     	;# 
  6901  0418                     	;# 
  6902  0418                     	;# 
  6903  0419                     	;# 
  6904  041A                     	;# 
  6905  041A                     	;# 
  6906  041B                     	;# 
  6907  041C                     	;# 
  6908  041C                     	;# 
  6909  041D                     	;# 
  6910  041E                     	;# 
  6911  041F                     	;# 
  6912  048C                     	;# 
  6913  048C                     	;# 
  6914  048D                     	;# 
  6915  048E                     	;# 
  6916  048F                     	;# 
  6917  048F                     	;# 
  6918  0490                     	;# 
  6919  0491                     	;# 
  6920  0492                     	;# 
  6921  0492                     	;# 
  6922  0493                     	;# 
  6923  0494                     	;# 
  6924  0495                     	;# 
  6925  0495                     	;# 
  6926  0496                     	;# 
  6927  0497                     	;# 
  6928  0498                     	;# 
  6929  0499                     	;# 
  6930  049A                     	;# 
  6931  049B                     	;# 
  6932  049C                     	;# 
  6933  049D                     	;# 
  6934  050C                     	;# 
  6935  050C                     	;# 
  6936  050D                     	;# 
  6937  050E                     	;# 
  6938  050F                     	;# 
  6939  050F                     	;# 
  6940  0510                     	;# 
  6941  0511                     	;# 
  6942  0512                     	;# 
  6943  0512                     	;# 
  6944  0513                     	;# 
  6945  0514                     	;# 
  6946  0515                     	;# 
  6947  0515                     	;# 
  6948  0516                     	;# 
  6949  0517                     	;# 
  6950  0518                     	;# 
  6951  0519                     	;# 
  6952  051A                     	;# 
  6953  051B                     	;# 
  6954  051C                     	;# 
  6955  051D                     	;# 
  6956  058C                     	;# 
  6957  058C                     	;# 
  6958  058D                     	;# 
  6959  058E                     	;# 
  6960  058F                     	;# 
  6961  058F                     	;# 
  6962  0590                     	;# 
  6963  0591                     	;# 
  6964  0592                     	;# 
  6965  0593                     	;# 
  6966  060C                     	;# 
  6967  060D                     	;# 
  6968  060E                     	;# 
  6969  060F                     	;# 
  6970  0610                     	;# 
  6971  0611                     	;# 
  6972  0612                     	;# 
  6973  0613                     	;# 
  6974  0614                     	;# 
  6975  0616                     	;# 
  6976  0617                     	;# 
  6977  0618                     	;# 
  6978  0619                     	;# 
  6979  061A                     	;# 
  6980  061B                     	;# 
  6981  061C                     	;# 
  6982  061D                     	;# 
  6983  061E                     	;# 
  6984  068C                     	;# 
  6985  068D                     	;# 
  6986  068E                     	;# 
  6987  068F                     	;# 
  6988  0690                     	;# 
  6989  0691                     	;# 
  6990  0692                     	;# 
  6991  0693                     	;# 
  6992  0694                     	;# 
  6993  070C                     	;# 
  6994  070D                     	;# 
  6995  070E                     	;# 
  6996  070F                     	;# 
  6997  0710                     	;# 
  6998  0711                     	;# 
  6999  0712                     	;# 
  7000  0713                     	;# 
  7001  0714                     	;# 
  7002  0716                     	;# 
  7003  0717                     	;# 
  7004  0718                     	;# 
  7005  0719                     	;# 
  7006  071A                     	;# 
  7007  071B                     	;# 
  7008  071C                     	;# 
  7009  071D                     	;# 
  7010  071E                     	;# 
  7011  0796                     	;# 
  7012  0797                     	;# 
  7013  0798                     	;# 
  7014  0799                     	;# 
  7015  079A                     	;# 
  7016  079B                     	;# 
  7017  080C                     	;# 
  7018  080D                     	;# 
  7019  080E                     	;# 
  7020  080F                     	;# 
  7021  0810                     	;# 
  7022  0811                     	;# 
  7023  0812                     	;# 
  7024  0813                     	;# 
  7025  0814                     	;# 
  7026  081A                     	;# 
  7027  081B                     	;# 
  7028  081C                     	;# 
  7029  081D                     	;# 
  7030  081E                     	;# 
  7031  081F                     	;# 
  7032  088C                     	;# 
  7033  088D                     	;# 
  7034  088E                     	;# 
  7035  088F                     	;# 
  7036  0890                     	;# 
  7037  0891                     	;# 
  7038  0892                     	;# 
  7039  0893                     	;# 
  7040  0895                     	;# 
  7041  0896                     	;# 
  7042  0897                     	;# 
  7043  0898                     	;# 
  7044  0899                     	;# 
  7045  089A                     	;# 
  7046  089B                     	;# 
  7047  090C                     	;# 
  7048  090E                     	;# 
  7049  090F                     	;# 
  7050  091F                     	;# 
  7051  091F                     	;# 
  7052  098F                     	;# 
  7053  098F                     	;# 
  7054  0990                     	;# 
  7055  0991                     	;# 
  7056  0992                     	;# 
  7057  0993                     	;# 
  7058  0994                     	;# 
  7059  0995                     	;# 
  7060  0996                     	;# 
  7061  0997                     	;# 
  7062  0E0F                     	;# 
  7063  0E10                     	;# 
  7064  0E11                     	;# 
  7065  0E12                     	;# 
  7066  0E13                     	;# 
  7067  0E14                     	;# 
  7068  0E15                     	;# 
  7069  0E16                     	;# 
  7070  0E17                     	;# 
  7071  0E18                     	;# 
  7072  0E19                     	;# 
  7073  0E1A                     	;# 
  7074  0E1B                     	;# 
  7075  0E1C                     	;# 
  7076  0E1D                     	;# 
  7077  0E1E                     	;# 
  7078  0E1F                     	;# 
  7079  0E20                     	;# 
  7080  0E21                     	;# 
  7081  0E22                     	;# 
  7082  0E23                     	;# 
  7083  0E24                     	;# 
  7084  0E25                     	;# 
  7085  0E26                     	;# 
  7086  0E27                     	;# 
  7087  0E28                     	;# 
  7088  0E29                     	;# 
  7089  0E2A                     	;# 
  7090  0E2B                     	;# 
  7091  0E2C                     	;# 
  7092  0E2D                     	;# 
  7093  0E2E                     	;# 
  7094  0E2F                     	;# 
  7095  0E30                     	;# 
  7096  0E31                     	;# 
  7097  0E32                     	;# 
  7098  0E33                     	;# 
  7099  0E34                     	;# 
  7100  0E35                     	;# 
  7101  0E36                     	;# 
  7102  0E37                     	;# 
  7103  0E8F                     	;# 
  7104  0E90                     	;# 
  7105  0E91                     	;# 
  7106  0E92                     	;# 
  7107  0E93                     	;# 
  7108  0E94                     	;# 
  7109  0E95                     	;# 
  7110  0E96                     	;# 
  7111  0E97                     	;# 
  7112  0E9C                     	;# 
  7113  0E9D                     	;# 
  7114  0E9E                     	;# 
  7115  0EA1                     	;# 
  7116  0EA2                     	;# 
  7117  0EA3                     	;# 
  7118  0EA4                     	;# 
  7119  0EA5                     	;# 
  7120  0EA9                     	;# 
  7121  0EAA                     	;# 
  7122  0EAB                     	;# 
  7123  0EAC                     	;# 
  7124  0EB1                     	;# 
  7125  0EB2                     	;# 
  7126  0EB3                     	;# 
  7127  0EB8                     	;# 
  7128  0EB9                     	;# 
  7129  0EBA                     	;# 
  7130  0EBB                     	;# 
  7131  0EBC                     	;# 
  7132  0EBD                     	;# 
  7133  0EBE                     	;# 
  7134  0EC3                     	;# 
  7135  0EC5                     	;# 
  7136  0EC6                     	;# 
  7137  0EC7                     	;# 
  7138  0EC8                     	;# 
  7139  0EC9                     	;# 
  7140  0ECA                     	;# 
  7141  0ECB                     	;# 
  7142  0ECC                     	;# 
  7143  0F10                     	;# 
  7144  0F11                     	;# 
  7145  0F12                     	;# 
  7146  0F13                     	;# 
  7147  0F14                     	;# 
  7148  0F15                     	;# 
  7149  0F16                     	;# 
  7150  0F17                     	;# 
  7151  0F18                     	;# 
  7152  0F19                     	;# 
  7153  0F1A                     	;# 
  7154  0F1B                     	;# 
  7155  0F1C                     	;# 
  7156  0F1D                     	;# 
  7157  0F1E                     	;# 
  7158  0F1F                     	;# 
  7159  0F20                     	;# 
  7160  0F21                     	;# 
  7161  0F22                     	;# 
  7162  0F23                     	;# 
  7163  0F24                     	;# 
  7164  0F25                     	;# 
  7165  0F26                     	;# 
  7166  0F27                     	;# 
  7167  0F28                     	;# 
  7168  0F29                     	;# 
  7169  0F2A                     	;# 
  7170  0F2B                     	;# 
  7171  0F2C                     	;# 
  7172  0F2D                     	;# 
  7173  0F2E                     	;# 
  7174  0F2F                     	;# 
  7175  0F30                     	;# 
  7176  0F31                     	;# 
  7177  0F32                     	;# 
  7178  0F38                     	;# 
  7179  0F39                     	;# 
  7180  0F3A                     	;# 
  7181  0F3B                     	;# 
  7182  0F3C                     	;# 
  7183  0F3D                     	;# 
  7184  0F3E                     	;# 
  7185  0F3F                     	;# 
  7186  0F40                     	;# 
  7187  0F41                     	;# 
  7188  0F43                     	;# 
  7189  0F44                     	;# 
  7190  0F45                     	;# 
  7191  0F46                     	;# 
  7192  0F47                     	;# 
  7193  0F48                     	;# 
  7194  0F49                     	;# 
  7195  0F4A                     	;# 
  7196  0F4B                     	;# 
  7197  0F4C                     	;# 
  7198  0F4E                     	;# 
  7199  0F4F                     	;# 
  7200  0F50                     	;# 
  7201  0F51                     	;# 
  7202  0F52                     	;# 
  7203  0F53                     	;# 
  7204  0F54                     	;# 
  7205  0F55                     	;# 
  7206  0F56                     	;# 
  7207  0F57                     	;# 
  7208  0F59                     	;# 
  7209  0F5A                     	;# 
  7210  0F5B                     	;# 
  7211  0F5C                     	;# 
  7212  0F5D                     	;# 
  7213  0F61                     	;# 
  7214  0F62                     	;# 
  7215  0F64                     	;# 
  7216  0F65                     	;# 
  7217  0F66                     	;# 
  7218  0F67                     	;# 
  7219  0F68                     	;# 
  7220  0F69                     	;# 
  7221  0F6A                     	;# 
  7222  0F6B                     	;# 
  7223  0F6C                     	;# 
  7224  0F6D                     	;# 
  7225  0FE4                     	;# 
  7226  0FE5                     	;# 
  7227  0FE6                     	;# 
  7228  0FE7                     	;# 
  7229  0FE8                     	;# 
  7230  0FE9                     	;# 
  7231  0FEA                     	;# 
  7232  0FEB                     	;# 
  7233  0FED                     	;# 
  7234  0FEE                     	;# 
  7235  0FEF                     	;# 
  7236  0000                     	;# 
  7237  0001                     	;# 
  7238  0002                     	;# 
  7239  0003                     	;# 
  7240  0004                     	;# 
  7241  0005                     	;# 
  7242  0006                     	;# 
  7243  0007                     	;# 
  7244  0008                     	;# 
  7245  0009                     	;# 
  7246  000A                     	;# 
  7247  000B                     	;# 
  7248  000C                     	;# 
  7249  000D                     	;# 
  7250  000E                     	;# 
  7251  000F                     	;# 
  7252  0010                     	;# 
  7253  0011                     	;# 
  7254  0012                     	;# 
  7255  0013                     	;# 
  7256  0014                     	;# 
  7257  0015                     	;# 
  7258  0016                     	;# 
  7259  0017                     	;# 
  7260  0018                     	;# 
  7261  0019                     	;# 
  7262  001A                     	;# 
  7263  001C                     	;# 
  7264  001C                     	;# 
  7265  001D                     	;# 
  7266  001D                     	;# 
  7267  001E                     	;# 
  7268  001F                     	;# 
  7269  008C                     	;# 
  7270  008C                     	;# 
  7271  008D                     	;# 
  7272  008E                     	;# 
  7273  008E                     	;# 
  7274  008F                     	;# 
  7275  0090                     	;# 
  7276  0090                     	;# 
  7277  0091                     	;# 
  7278  0093                     	;# 
  7279  0094                     	;# 
  7280  0095                     	;# 
  7281  0096                     	;# 
  7282  0097                     	;# 
  7283  0098                     	;# 
  7284  0099                     	;# 
  7285  009A                     	;# 
  7286  009B                     	;# 
  7287  009C                     	;# 
  7288  009D                     	;# 
  7289  009E                     	;# 
  7290  010C                     	;# 
  7291  010D                     	;# 
  7292  010E                     	;# 
  7293  010E                     	;# 
  7294  010F                     	;# 
  7295  0110                     	;# 
  7296  0110                     	;# 
  7297  0111                     	;# 
  7298  0112                     	;# 
  7299  0112                     	;# 
  7300  0113                     	;# 
  7301  0114                     	;# 
  7302  0114                     	;# 
  7303  0115                     	;# 
  7304  0116                     	;# 
  7305  0116                     	;# 
  7306  0117                     	;# 
  7307  0119                     	;# 
  7308  0119                     	;# 
  7309  0119                     	;# 
  7310  011A                     	;# 
  7311  011A                     	;# 
  7312  011A                     	;# 
  7313  011B                     	;# 
  7314  011B                     	;# 
  7315  011B                     	;# 
  7316  011B                     	;# 
  7317  011B                     	;# 
  7318  011C                     	;# 
  7319  011C                     	;# 
  7320  011C                     	;# 
  7321  011D                     	;# 
  7322  011D                     	;# 
  7323  011D                     	;# 
  7324  011E                     	;# 
  7325  011E                     	;# 
  7326  011E                     	;# 
  7327  011F                     	;# 
  7328  011F                     	;# 
  7329  011F                     	;# 
  7330  011F                     	;# 
  7331  011F                     	;# 
  7332  018C                     	;# 
  7333  018D                     	;# 
  7334  018E                     	;# 
  7335  018F                     	;# 
  7336  0190                     	;# 
  7337  0191                     	;# 
  7338  0192                     	;# 
  7339  0196                     	;# 
  7340  0197                     	;# 
  7341  0198                     	;# 
  7342  0199                     	;# 
  7343  019A                     	;# 
  7344  019B                     	;# 
  7345  019C                     	;# 
  7346  020C                     	;# 
  7347  020C                     	;# 
  7348  020D                     	;# 
  7349  020E                     	;# 
  7350  020F                     	;# 
  7351  020F                     	;# 
  7352  0210                     	;# 
  7353  0210                     	;# 
  7354  0211                     	;# 
  7355  0211                     	;# 
  7356  0212                     	;# 
  7357  0212                     	;# 
  7358  0213                     	;# 
  7359  0214                     	;# 
  7360  0215                     	;# 
  7361  0215                     	;# 
  7362  0216                     	;# 
  7363  0216                     	;# 
  7364  0217                     	;# 
  7365  0217                     	;# 
  7366  0218                     	;# 
  7367  0218                     	;# 
  7368  0219                     	;# 
  7369  021A                     	;# 
  7370  021B                     	;# 
  7371  021B                     	;# 
  7372  021C                     	;# 
  7373  021C                     	;# 
  7374  021D                     	;# 
  7375  021D                     	;# 
  7376  021E                     	;# 
  7377  021F                     	;# 
  7378  028C                     	;# 
  7379  028C                     	;# 
  7380  028D                     	;# 
  7381  028D                     	;# 
  7382  028E                     	;# 
  7383  028F                     	;# 
  7384  0290                     	;# 
  7385  0290                     	;# 
  7386  0291                     	;# 
  7387  0292                     	;# 
  7388  0292                     	;# 
  7389  0293                     	;# 
  7390  0293                     	;# 
  7391  0294                     	;# 
  7392  0295                     	;# 
  7393  0296                     	;# 
  7394  0296                     	;# 
  7395  0297                     	;# 
  7396  0298                     	;# 
  7397  0298                     	;# 
  7398  0299                     	;# 
  7399  0299                     	;# 
  7400  029A                     	;# 
  7401  029B                     	;# 
  7402  029C                     	;# 
  7403  029C                     	;# 
  7404  029D                     	;# 
  7405  030C                     	;# 
  7406  030C                     	;# 
  7407  030D                     	;# 
  7408  030E                     	;# 
  7409  030F                     	;# 
  7410  0310                     	;# 
  7411  0310                     	;# 
  7412  0311                     	;# 
  7413  0312                     	;# 
  7414  0313                     	;# 
  7415  0314                     	;# 
  7416  0314                     	;# 
  7417  0315                     	;# 
  7418  0316                     	;# 
  7419  0317                     	;# 
  7420  0318                     	;# 
  7421  0318                     	;# 
  7422  0319                     	;# 
  7423  031A                     	;# 
  7424  031B                     	;# 
  7425  031C                     	;# 
  7426  031C                     	;# 
  7427  031D                     	;# 
  7428  031E                     	;# 
  7429  031F                     	;# 
  7430  038C                     	;# 
  7431  038C                     	;# 
  7432  038D                     	;# 
  7433  038E                     	;# 
  7434  0390                     	;# 
  7435  0390                     	;# 
  7436  0391                     	;# 
  7437  0392                     	;# 
  7438  040C                     	;# 
  7439  040D                     	;# 
  7440  040E                     	;# 
  7441  040F                     	;# 
  7442  0410                     	;# 
  7443  0411                     	;# 
  7444  0416                     	;# 
  7445  0416                     	;# 
  7446  0417                     	;# 
  7447  0418                     	;# 
  7448  0418                     	;# 
  7449  0419                     	;# 
  7450  041A                     	;# 
  7451  041A                     	;# 
  7452  041B                     	;# 
  7453  041C                     	;# 
  7454  041C                     	;# 
  7455  041D                     	;# 
  7456  041E                     	;# 
  7457  041F                     	;# 
  7458  048C                     	;# 
  7459  048C                     	;# 
  7460  048D                     	;# 
  7461  048E                     	;# 
  7462  048F                     	;# 
  7463  048F                     	;# 
  7464  0490                     	;# 
  7465  0491                     	;# 
  7466  0492                     	;# 
  7467  0492                     	;# 
  7468  0493                     	;# 
  7469  0494                     	;# 
  7470  0495                     	;# 
  7471  0495                     	;# 
  7472  0496                     	;# 
  7473  0497                     	;# 
  7474  0498                     	;# 
  7475  0499                     	;# 
  7476  049A                     	;# 
  7477  049B                     	;# 
  7478  049C                     	;# 
  7479  049D                     	;# 
  7480  050C                     	;# 
  7481  050C                     	;# 
  7482  050D                     	;# 
  7483  050E                     	;# 
  7484  050F                     	;# 
  7485  050F                     	;# 
  7486  0510                     	;# 
  7487  0511                     	;# 
  7488  0512                     	;# 
  7489  0512                     	;# 
  7490  0513                     	;# 
  7491  0514                     	;# 
  7492  0515                     	;# 
  7493  0515                     	;# 
  7494  0516                     	;# 
  7495  0517                     	;# 
  7496  0518                     	;# 
  7497  0519                     	;# 
  7498  051A                     	;# 
  7499  051B                     	;# 
  7500  051C                     	;# 
  7501  051D                     	;# 
  7502  058C                     	;# 
  7503  058C                     	;# 
  7504  058D                     	;# 
  7505  058E                     	;# 
  7506  058F                     	;# 
  7507  058F                     	;# 
  7508  0590                     	;# 
  7509  0591                     	;# 
  7510  0592                     	;# 
  7511  0593                     	;# 
  7512  060C                     	;# 
  7513  060D                     	;# 
  7514  060E                     	;# 
  7515  060F                     	;# 
  7516  0610                     	;# 
  7517  0611                     	;# 
  7518  0612                     	;# 
  7519  0613                     	;# 
  7520  0614                     	;# 
  7521  0616                     	;# 
  7522  0617                     	;# 
  7523  0618                     	;# 
  7524  0619                     	;# 
  7525  061A                     	;# 
  7526  061B                     	;# 
  7527  061C                     	;# 
  7528  061D                     	;# 
  7529  061E                     	;# 
  7530  068C                     	;# 
  7531  068D                     	;# 
  7532  068E                     	;# 
  7533  068F                     	;# 
  7534  0690                     	;# 
  7535  0691                     	;# 
  7536  0692                     	;# 
  7537  0693                     	;# 
  7538  0694                     	;# 
  7539  070C                     	;# 
  7540  070D                     	;# 
  7541  070E                     	;# 
  7542  070F                     	;# 
  7543  0710                     	;# 
  7544  0711                     	;# 
  7545  0712                     	;# 
  7546  0713                     	;# 
  7547  0714                     	;# 
  7548  0716                     	;# 
  7549  0717                     	;# 
  7550  0718                     	;# 
  7551  0719                     	;# 
  7552  071A                     	;# 
  7553  071B                     	;# 
  7554  071C                     	;# 
  7555  071D                     	;# 
  7556  071E                     	;# 
  7557  0796                     	;# 
  7558  0797                     	;# 
  7559  0798                     	;# 
  7560  0799                     	;# 
  7561  079A                     	;# 
  7562  079B                     	;# 
  7563  080C                     	;# 
  7564  080D                     	;# 
  7565  080E                     	;# 
  7566  080F                     	;# 
  7567  0810                     	;# 
  7568  0811                     	;# 
  7569  0812                     	;# 
  7570  0813                     	;# 
  7571  0814                     	;# 
  7572  081A                     	;# 
  7573  081B                     	;# 
  7574  081C                     	;# 
  7575  081D                     	;# 
  7576  081E                     	;# 
  7577  081F                     	;# 
  7578  088C                     	;# 
  7579  088D                     	;# 
  7580  088E                     	;# 
  7581  088F                     	;# 
  7582  0890                     	;# 
  7583  0891                     	;# 
  7584  0892                     	;# 
  7585  0893                     	;# 
  7586  0895                     	;# 
  7587  0896                     	;# 
  7588  0897                     	;# 
  7589  0898                     	;# 
  7590  0899                     	;# 
  7591  089A                     	;# 
  7592  089B                     	;# 
  7593  090C                     	;# 
  7594  090E                     	;# 
  7595  090F                     	;# 
  7596  091F                     	;# 
  7597  091F                     	;# 
  7598  098F                     	;# 
  7599  098F                     	;# 
  7600  0990                     	;# 
  7601  0991                     	;# 
  7602  0992                     	;# 
  7603  0993                     	;# 
  7604  0994                     	;# 
  7605  0995                     	;# 
  7606  0996                     	;# 
  7607  0997                     	;# 
  7608  0E0F                     	;# 
  7609  0E10                     	;# 
  7610  0E11                     	;# 
  7611  0E12                     	;# 
  7612  0E13                     	;# 
  7613  0E14                     	;# 
  7614  0E15                     	;# 
  7615  0E16                     	;# 
  7616  0E17                     	;# 
  7617  0E18                     	;# 
  7618  0E19                     	;# 
  7619  0E1A                     	;# 
  7620  0E1B                     	;# 
  7621  0E1C                     	;# 
  7622  0E1D                     	;# 
  7623  0E1E                     	;# 
  7624  0E1F                     	;# 
  7625  0E20                     	;# 
  7626  0E21                     	;# 
  7627  0E22                     	;# 
  7628  0E23                     	;# 
  7629  0E24                     	;# 
  7630  0E25                     	;# 
  7631  0E26                     	;# 
  7632  0E27                     	;# 
  7633  0E28                     	;# 
  7634  0E29                     	;# 
  7635  0E2A                     	;# 
  7636  0E2B                     	;# 
  7637  0E2C                     	;# 
  7638  0E2D                     	;# 
  7639  0E2E                     	;# 
  7640  0E2F                     	;# 
  7641  0E30                     	;# 
  7642  0E31                     	;# 
  7643  0E32                     	;# 
  7644  0E33                     	;# 
  7645  0E34                     	;# 
  7646  0E35                     	;# 
  7647  0E36                     	;# 
  7648  0E37                     	;# 
  7649  0E8F                     	;# 
  7650  0E90                     	;# 
  7651  0E91                     	;# 
  7652  0E92                     	;# 
  7653  0E93                     	;# 
  7654  0E94                     	;# 
  7655  0E95                     	;# 
  7656  0E96                     	;# 
  7657  0E97                     	;# 
  7658  0E9C                     	;# 
  7659  0E9D                     	;# 
  7660  0E9E                     	;# 
  7661  0EA1                     	;# 
  7662  0EA2                     	;# 
  7663  0EA3                     	;# 
  7664  0EA4                     	;# 
  7665  0EA5                     	;# 
  7666  0EA9                     	;# 
  7667  0EAA                     	;# 
  7668  0EAB                     	;# 
  7669  0EAC                     	;# 
  7670  0EB1                     	;# 
  7671  0EB2                     	;# 
  7672  0EB3                     	;# 
  7673  0EB8                     	;# 
  7674  0EB9                     	;# 
  7675  0EBA                     	;# 
  7676  0EBB                     	;# 
  7677  0EBC                     	;# 
  7678  0EBD                     	;# 
  7679  0EBE                     	;# 
  7680  0EC3                     	;# 
  7681  0EC5                     	;# 
  7682  0EC6                     	;# 
  7683  0EC7                     	;# 
  7684  0EC8                     	;# 
  7685  0EC9                     	;# 
  7686  0ECA                     	;# 
  7687  0ECB                     	;# 
  7688  0ECC                     	;# 
  7689  0F10                     	;# 
  7690  0F11                     	;# 
  7691  0F12                     	;# 
  7692  0F13                     	;# 
  7693  0F14                     	;# 
  7694  0F15                     	;# 
  7695  0F16                     	;# 
  7696  0F17                     	;# 
  7697  0F18                     	;# 
  7698  0F19                     	;# 
  7699  0F1A                     	;# 
  7700  0F1B                     	;# 
  7701  0F1C                     	;# 
  7702  0F1D                     	;# 
  7703  0F1E                     	;# 
  7704  0F1F                     	;# 
  7705  0F20                     	;# 
  7706  0F21                     	;# 
  7707  0F22                     	;# 
  7708  0F23                     	;# 
  7709  0F24                     	;# 
  7710  0F25                     	;# 
  7711  0F26                     	;# 
  7712  0F27                     	;# 
  7713  0F28                     	;# 
  7714  0F29                     	;# 
  7715  0F2A                     	;# 
  7716  0F2B                     	;# 
  7717  0F2C                     	;# 
  7718  0F2D                     	;# 
  7719  0F2E                     	;# 
  7720  0F2F                     	;# 
  7721  0F30                     	;# 
  7722  0F31                     	;# 
  7723  0F32                     	;# 
  7724  0F38                     	;# 
  7725  0F39                     	;# 
  7726  0F3A                     	;# 
  7727  0F3B                     	;# 
  7728  0F3C                     	;# 
  7729  0F3D                     	;# 
  7730  0F3E                     	;# 
  7731  0F3F                     	;# 
  7732  0F40                     	;# 
  7733  0F41                     	;# 
  7734  0F43                     	;# 
  7735  0F44                     	;# 
  7736  0F45                     	;# 
  7737  0F46                     	;# 
  7738  0F47                     	;# 
  7739  0F48                     	;# 
  7740  0F49                     	;# 
  7741  0F4A                     	;# 
  7742  0F4B                     	;# 
  7743  0F4C                     	;# 
  7744  0F4E                     	;# 
  7745  0F4F                     	;# 
  7746  0F50                     	;# 
  7747  0F51                     	;# 
  7748  0F52                     	;# 
  7749  0F53                     	;# 
  7750  0F54                     	;# 
  7751  0F55                     	;# 
  7752  0F56                     	;# 
  7753  0F57                     	;# 
  7754  0F59                     	;# 
  7755  0F5A                     	;# 
  7756  0F5B                     	;# 
  7757  0F5C                     	;# 
  7758  0F5D                     	;# 
  7759  0F61                     	;# 
  7760  0F62                     	;# 
  7761  0F64                     	;# 
  7762  0F65                     	;# 
  7763  0F66                     	;# 
  7764  0F67                     	;# 
  7765  0F68                     	;# 
  7766  0F69                     	;# 
  7767  0F6A                     	;# 
  7768  0F6B                     	;# 
  7769  0F6C                     	;# 
  7770  0F6D                     	;# 
  7771  0FE4                     	;# 
  7772  0FE5                     	;# 
  7773  0FE6                     	;# 
  7774  0FE7                     	;# 
  7775  0FE8                     	;# 
  7776  0FE9                     	;# 
  7777  0FEA                     	;# 
  7778  0FEB                     	;# 
  7779  0FED                     	;# 
  7780  0FEE                     	;# 
  7781  0FEF                     	;# 
  7782  0000                     	;# 
  7783  0001                     	;# 
  7784  0002                     	;# 
  7785  0003                     	;# 
  7786  0004                     	;# 
  7787  0005                     	;# 
  7788  0006                     	;# 
  7789  0007                     	;# 
  7790  0008                     	;# 
  7791  0009                     	;# 
  7792  000A                     	;# 
  7793  000B                     	;# 
  7794  000C                     	;# 
  7795  000D                     	;# 
  7796  000E                     	;# 
  7797  000F                     	;# 
  7798  0010                     	;# 
  7799  0011                     	;# 
  7800  0012                     	;# 
  7801  0013                     	;# 
  7802  0014                     	;# 
  7803  0015                     	;# 
  7804  0016                     	;# 
  7805  0017                     	;# 
  7806  0018                     	;# 
  7807  0019                     	;# 
  7808  001A                     	;# 
  7809  001C                     	;# 
  7810  001C                     	;# 
  7811  001D                     	;# 
  7812  001D                     	;# 
  7813  001E                     	;# 
  7814  001F                     	;# 
  7815  008C                     	;# 
  7816  008C                     	;# 
  7817  008D                     	;# 
  7818  008E                     	;# 
  7819  008E                     	;# 
  7820  008F                     	;# 
  7821  0090                     	;# 
  7822  0090                     	;# 
  7823  0091                     	;# 
  7824  0093                     	;# 
  7825  0094                     	;# 
  7826  0095                     	;# 
  7827  0096                     	;# 
  7828  0097                     	;# 
  7829  0098                     	;# 
  7830  0099                     	;# 
  7831  009A                     	;# 
  7832  009B                     	;# 
  7833  009C                     	;# 
  7834  009D                     	;# 
  7835  009E                     	;# 
  7836  010C                     	;# 
  7837  010D                     	;# 
  7838  010E                     	;# 
  7839  010E                     	;# 
  7840  010F                     	;# 
  7841  0110                     	;# 
  7842  0110                     	;# 
  7843  0111                     	;# 
  7844  0112                     	;# 
  7845  0112                     	;# 
  7846  0113                     	;# 
  7847  0114                     	;# 
  7848  0114                     	;# 
  7849  0115                     	;# 
  7850  0116                     	;# 
  7851  0116                     	;# 
  7852  0117                     	;# 
  7853  0119                     	;# 
  7854  0119                     	;# 
  7855  0119                     	;# 
  7856  011A                     	;# 
  7857  011A                     	;# 
  7858  011A                     	;# 
  7859  011B                     	;# 
  7860  011B                     	;# 
  7861  011B                     	;# 
  7862  011B                     	;# 
  7863  011B                     	;# 
  7864  011C                     	;# 
  7865  011C                     	;# 
  7866  011C                     	;# 
  7867  011D                     	;# 
  7868  011D                     	;# 
  7869  011D                     	;# 
  7870  011E                     	;# 
  7871  011E                     	;# 
  7872  011E                     	;# 
  7873  011F                     	;# 
  7874  011F                     	;# 
  7875  011F                     	;# 
  7876  011F                     	;# 
  7877  011F                     	;# 
  7878  018C                     	;# 
  7879  018D                     	;# 
  7880  018E                     	;# 
  7881  018F                     	;# 
  7882  0190                     	;# 
  7883  0191                     	;# 
  7884  0192                     	;# 
  7885  0196                     	;# 
  7886  0197                     	;# 
  7887  0198                     	;# 
  7888  0199                     	;# 
  7889  019A                     	;# 
  7890  019B                     	;# 
  7891  019C                     	;# 
  7892  020C                     	;# 
  7893  020C                     	;# 
  7894  020D                     	;# 
  7895  020E                     	;# 
  7896  020F                     	;# 
  7897  020F                     	;# 
  7898  0210                     	;# 
  7899  0210                     	;# 
  7900  0211                     	;# 
  7901  0211                     	;# 
  7902  0212                     	;# 
  7903  0212                     	;# 
  7904  0213                     	;# 
  7905  0214                     	;# 
  7906  0215                     	;# 
  7907  0215                     	;# 
  7908  0216                     	;# 
  7909  0216                     	;# 
  7910  0217                     	;# 
  7911  0217                     	;# 
  7912  0218                     	;# 
  7913  0218                     	;# 
  7914  0219                     	;# 
  7915  021A                     	;# 
  7916  021B                     	;# 
  7917  021B                     	;# 
  7918  021C                     	;# 
  7919  021C                     	;# 
  7920  021D                     	;# 
  7921  021D                     	;# 
  7922  021E                     	;# 
  7923  021F                     	;# 
  7924  028C                     	;# 
  7925  028C                     	;# 
  7926  028D                     	;# 
  7927  028D                     	;# 
  7928  028E                     	;# 
  7929  028F                     	;# 
  7930  0290                     	;# 
  7931  0290                     	;# 
  7932  0291                     	;# 
  7933  0292                     	;# 
  7934  0292                     	;# 
  7935  0293                     	;# 
  7936  0293                     	;# 
  7937  0294                     	;# 
  7938  0295                     	;# 
  7939  0296                     	;# 
  7940  0296                     	;# 
  7941  0297                     	;# 
  7942  0298                     	;# 
  7943  0298                     	;# 
  7944  0299                     	;# 
  7945  0299                     	;# 
  7946  029A                     	;# 
  7947  029B                     	;# 
  7948  029C                     	;# 
  7949  029C                     	;# 
  7950  029D                     	;# 
  7951  030C                     	;# 
  7952  030C                     	;# 
  7953  030D                     	;# 
  7954  030E                     	;# 
  7955  030F                     	;# 
  7956  0310                     	;# 
  7957  0310                     	;# 
  7958  0311                     	;# 
  7959  0312                     	;# 
  7960  0313                     	;# 
  7961  0314                     	;# 
  7962  0314                     	;# 
  7963  0315                     	;# 
  7964  0316                     	;# 
  7965  0317                     	;# 
  7966  0318                     	;# 
  7967  0318                     	;# 
  7968  0319                     	;# 
  7969  031A                     	;# 
  7970  031B                     	;# 
  7971  031C                     	;# 
  7972  031C                     	;# 
  7973  031D                     	;# 
  7974  031E                     	;# 
  7975  031F                     	;# 
  7976  038C                     	;# 
  7977  038C                     	;# 
  7978  038D                     	;# 
  7979  038E                     	;# 
  7980  0390                     	;# 
  7981  0390                     	;# 
  7982  0391                     	;# 
  7983  0392                     	;# 
  7984  040C                     	;# 
  7985  040D                     	;# 
  7986  040E                     	;# 
  7987  040F                     	;# 
  7988  0410                     	;# 
  7989  0411                     	;# 
  7990  0416                     	;# 
  7991  0416                     	;# 
  7992  0417                     	;# 
  7993  0418                     	;# 
  7994  0418                     	;# 
  7995  0419                     	;# 
  7996  041A                     	;# 
  7997  041A                     	;# 
  7998  041B                     	;# 
  7999  041C                     	;# 
  8000  041C                     	;# 
  8001  041D                     	;# 
  8002  041E                     	;# 
  8003  041F                     	;# 
  8004  048C                     	;# 
  8005  048C                     	;# 
  8006  048D                     	;# 
  8007  048E                     	;# 
  8008  048F                     	;# 
  8009  048F                     	;# 
  8010  0490                     	;# 
  8011  0491                     	;# 
  8012  0492                     	;# 
  8013  0492                     	;# 
  8014  0493                     	;# 
  8015  0494                     	;# 
  8016  0495                     	;# 
  8017  0495                     	;# 
  8018  0496                     	;# 
  8019  0497                     	;# 
  8020  0498                     	;# 
  8021  0499                     	;# 
  8022  049A                     	;# 
  8023  049B                     	;# 
  8024  049C                     	;# 
  8025  049D                     	;# 
  8026  050C                     	;# 
  8027  050C                     	;# 
  8028  050D                     	;# 
  8029  050E                     	;# 
  8030  050F                     	;# 
  8031  050F                     	;# 
  8032  0510                     	;# 
  8033  0511                     	;# 
  8034  0512                     	;# 
  8035  0512                     	;# 
  8036  0513                     	;# 
  8037  0514                     	;# 
  8038  0515                     	;# 
  8039  0515                     	;# 
  8040  0516                     	;# 
  8041  0517                     	;# 
  8042  0518                     	;# 
  8043  0519                     	;# 
  8044  051A                     	;# 
  8045  051B                     	;# 
  8046  051C                     	;# 
  8047  051D                     	;# 
  8048  058C                     	;# 
  8049  058C                     	;# 
  8050  058D                     	;# 
  8051  058E                     	;# 
  8052  058F                     	;# 
  8053  058F                     	;# 
  8054  0590                     	;# 
  8055  0591                     	;# 
  8056  0592                     	;# 
  8057  0593                     	;# 
  8058  060C                     	;# 
  8059  060D                     	;# 
  8060  060E                     	;# 
  8061  060F                     	;# 
  8062  0610                     	;# 
  8063  0611                     	;# 
  8064  0612                     	;# 
  8065  0613                     	;# 
  8066  0614                     	;# 
  8067  0616                     	;# 
  8068  0617                     	;# 
  8069  0618                     	;# 
  8070  0619                     	;# 
  8071  061A                     	;# 
  8072  061B                     	;# 
  8073  061C                     	;# 
  8074  061D                     	;# 
  8075  061E                     	;# 
  8076  068C                     	;# 
  8077  068D                     	;# 
  8078  068E                     	;# 
  8079  068F                     	;# 
  8080  0690                     	;# 
  8081  0691                     	;# 
  8082  0692                     	;# 
  8083  0693                     	;# 
  8084  0694                     	;# 
  8085  070C                     	;# 
  8086  070D                     	;# 
  8087  070E                     	;# 
  8088  070F                     	;# 
  8089  0710                     	;# 
  8090  0711                     	;# 
  8091  0712                     	;# 
  8092  0713                     	;# 
  8093  0714                     	;# 
  8094  0716                     	;# 
  8095  0717                     	;# 
  8096  0718                     	;# 
  8097  0719                     	;# 
  8098  071A                     	;# 
  8099  071B                     	;# 
  8100  071C                     	;# 
  8101  071D                     	;# 
  8102  071E                     	;# 
  8103  0796                     	;# 
  8104  0797                     	;# 
  8105  0798                     	;# 
  8106  0799                     	;# 
  8107  079A                     	;# 
  8108  079B                     	;# 
  8109  080C                     	;# 
  8110  080D                     	;# 
  8111  080E                     	;# 
  8112  080F                     	;# 
  8113  0810                     	;# 
  8114  0811                     	;# 
  8115  0812                     	;# 
  8116  0813                     	;# 
  8117  0814                     	;# 
  8118  081A                     	;# 
  8119  081B                     	;# 
  8120  081C                     	;# 
  8121  081D                     	;# 
  8122  081E                     	;# 
  8123  081F                     	;# 
  8124  088C                     	;# 
  8125  088D                     	;# 
  8126  088E                     	;# 
  8127  088F                     	;# 
  8128  0890                     	;# 
  8129  0891                     	;# 
  8130  0892                     	;# 
  8131  0893                     	;# 
  8132  0895                     	;# 
  8133  0896                     	;# 
  8134  0897                     	;# 
  8135  0898                     	;# 
  8136  0899                     	;# 
  8137  089A                     	;# 
  8138  089B                     	;# 
  8139  090C                     	;# 
  8140  090E                     	;# 
  8141  090F                     	;# 
  8142  091F                     	;# 
  8143  091F                     	;# 
  8144  098F                     	;# 
  8145  098F                     	;# 
  8146  0990                     	;# 
  8147  0991                     	;# 
  8148  0992                     	;# 
  8149  0993                     	;# 
  8150  0994                     	;# 
  8151  0995                     	;# 
  8152  0996                     	;# 
  8153  0997                     	;# 
  8154  0E0F                     	;# 
  8155  0E10                     	;# 
  8156  0E11                     	;# 
  8157  0E12                     	;# 
  8158  0E13                     	;# 
  8159  0E14                     	;# 
  8160  0E15                     	;# 
  8161  0E16                     	;# 
  8162  0E17                     	;# 
  8163  0E18                     	;# 
  8164  0E19                     	;# 
  8165  0E1A                     	;# 
  8166  0E1B                     	;# 
  8167  0E1C                     	;# 
  8168  0E1D                     	;# 
  8169  0E1E                     	;# 
  8170  0E1F                     	;# 
  8171  0E20                     	;# 
  8172  0E21                     	;# 
  8173  0E22                     	;# 
  8174  0E23                     	;# 
  8175  0E24                     	;# 
  8176  0E25                     	;# 
  8177  0E26                     	;# 
  8178  0E27                     	;# 
  8179  0E28                     	;# 
  8180  0E29                     	;# 
  8181  0E2A                     	;# 
  8182  0E2B                     	;# 
  8183  0E2C                     	;# 
  8184  0E2D                     	;# 
  8185  0E2E                     	;# 
  8186  0E2F                     	;# 
  8187  0E30                     	;# 
  8188  0E31                     	;# 
  8189  0E32                     	;# 
  8190  0E33                     	;# 
  8191  0E34                     	;# 
  8192  0E35                     	;# 
  8193  0E36                     	;# 
  8194  0E37                     	;# 
  8195  0E8F                     	;# 
  8196  0E90                     	;# 
  8197  0E91                     	;# 
  8198  0E92                     	;# 
  8199  0E93                     	;# 
  8200  0E94                     	;# 
  8201  0E95                     	;# 
  8202  0E96                     	;# 
  8203  0E97                     	;# 
  8204  0E9C                     	;# 
  8205  0E9D                     	;# 
  8206  0E9E                     	;# 
  8207  0EA1                     	;# 
  8208  0EA2                     	;# 
  8209  0EA3                     	;# 
  8210  0EA4                     	;# 
  8211  0EA5                     	;# 
  8212  0EA9                     	;# 
  8213  0EAA                     	;# 
  8214  0EAB                     	;# 
  8215  0EAC                     	;# 
  8216  0EB1                     	;# 
  8217  0EB2                     	;# 
  8218  0EB3                     	;# 
  8219  0EB8                     	;# 
  8220  0EB9                     	;# 
  8221  0EBA                     	;# 
  8222  0EBB                     	;# 
  8223  0EBC                     	;# 
  8224  0EBD                     	;# 
  8225  0EBE                     	;# 
  8226  0EC3                     	;# 
  8227  0EC5                     	;# 
  8228  0EC6                     	;# 
  8229  0EC7                     	;# 
  8230  0EC8                     	;# 
  8231  0EC9                     	;# 
  8232  0ECA                     	;# 
  8233  0ECB                     	;# 
  8234  0ECC                     	;# 
  8235  0F10                     	;# 
  8236  0F11                     	;# 
  8237  0F12                     	;# 
  8238  0F13                     	;# 
  8239  0F14                     	;# 
  8240  0F15                     	;# 
  8241  0F16                     	;# 
  8242  0F17                     	;# 
  8243  0F18                     	;# 
  8244  0F19                     	;# 
  8245  0F1A                     	;# 
  8246  0F1B                     	;# 
  8247  0F1C                     	;# 
  8248  0F1D                     	;# 
  8249  0F1E                     	;# 
  8250  0F1F                     	;# 
  8251  0F20                     	;# 
  8252  0F21                     	;# 
  8253  0F22                     	;# 
  8254  0F23                     	;# 
  8255  0F24                     	;# 
  8256  0F25                     	;# 
  8257  0F26                     	;# 
  8258  0F27                     	;# 
  8259  0F28                     	;# 
  8260  0F29                     	;# 
  8261  0F2A                     	;# 
  8262  0F2B                     	;# 
  8263  0F2C                     	;# 
  8264  0F2D                     	;# 
  8265  0F2E                     	;# 
  8266  0F2F                     	;# 
  8267  0F30                     	;# 
  8268  0F31                     	;# 
  8269  0F32                     	;# 
  8270  0F38                     	;# 
  8271  0F39                     	;# 
  8272  0F3A                     	;# 
  8273  0F3B                     	;# 
  8274  0F3C                     	;# 
  8275  0F3D                     	;# 
  8276  0F3E                     	;# 
  8277  0F3F                     	;# 
  8278  0F40                     	;# 
  8279  0F41                     	;# 
  8280  0F43                     	;# 
  8281  0F44                     	;# 
  8282  0F45                     	;# 
  8283  0F46                     	;# 
  8284  0F47                     	;# 
  8285  0F48                     	;# 
  8286  0F49                     	;# 
  8287  0F4A                     	;# 
  8288  0F4B                     	;# 
  8289  0F4C                     	;# 
  8290  0F4E                     	;# 
  8291  0F4F                     	;# 
  8292  0F50                     	;# 
  8293  0F51                     	;# 
  8294  0F52                     	;# 
  8295  0F53                     	;# 
  8296  0F54                     	;# 
  8297  0F55                     	;# 
  8298  0F56                     	;# 
  8299  0F57                     	;# 
  8300  0F59                     	;# 
  8301  0F5A                     	;# 
  8302  0F5B                     	;# 
  8303  0F5C                     	;# 
  8304  0F5D                     	;# 
  8305  0F61                     	;# 
  8306  0F62                     	;# 
  8307  0F64                     	;# 
  8308  0F65                     	;# 
  8309  0F66                     	;# 
  8310  0F67                     	;# 
  8311  0F68                     	;# 
  8312  0F69                     	;# 
  8313  0F6A                     	;# 
  8314  0F6B                     	;# 
  8315  0F6C                     	;# 
  8316  0F6D                     	;# 
  8317  0FE4                     	;# 
  8318  0FE5                     	;# 
  8319  0FE6                     	;# 
  8320  0FE7                     	;# 
  8321  0FE8                     	;# 
  8322  0FE9                     	;# 
  8323  0FEA                     	;# 
  8324  0FEB                     	;# 
  8325  0FED                     	;# 
  8326  0FEE                     	;# 
  8327  0FEF                     	;# 
  8328  0000                     	;# 
  8329  0001                     	;# 
  8330  0002                     	;# 
  8331  0003                     	;# 
  8332  0004                     	;# 
  8333  0005                     	;# 
  8334  0006                     	;# 
  8335  0007                     	;# 
  8336  0008                     	;# 
  8337  0009                     	;# 
  8338  000A                     	;# 
  8339  000B                     	;# 
  8340  000C                     	;# 
  8341  000D                     	;# 
  8342  000E                     	;# 
  8343  000F                     	;# 
  8344  0010                     	;# 
  8345  0011                     	;# 
  8346  0012                     	;# 
  8347  0013                     	;# 
  8348  0014                     	;# 
  8349  0015                     	;# 
  8350  0016                     	;# 
  8351  0017                     	;# 
  8352  0018                     	;# 
  8353  0019                     	;# 
  8354  001A                     	;# 
  8355  001C                     	;# 
  8356  001C                     	;# 
  8357  001D                     	;# 
  8358  001D                     	;# 
  8359  001E                     	;# 
  8360  001F                     	;# 
  8361  008C                     	;# 
  8362  008C                     	;# 
  8363  008D                     	;# 
  8364  008E                     	;# 
  8365  008E                     	;# 
  8366  008F                     	;# 
  8367  0090                     	;# 
  8368  0090                     	;# 
  8369  0091                     	;# 
  8370  0093                     	;# 
  8371  0094                     	;# 
  8372  0095                     	;# 
  8373  0096                     	;# 
  8374  0097                     	;# 
  8375  0098                     	;# 
  8376  0099                     	;# 
  8377  009A                     	;# 
  8378  009B                     	;# 
  8379  009C                     	;# 
  8380  009D                     	;# 
  8381  009E                     	;# 
  8382  010C                     	;# 
  8383  010D                     	;# 
  8384  010E                     	;# 
  8385  010E                     	;# 
  8386  010F                     	;# 
  8387  0110                     	;# 
  8388  0110                     	;# 
  8389  0111                     	;# 
  8390  0112                     	;# 
  8391  0112                     	;# 
  8392  0113                     	;# 
  8393  0114                     	;# 
  8394  0114                     	;# 
  8395  0115                     	;# 
  8396  0116                     	;# 
  8397  0116                     	;# 
  8398  0117                     	;# 
  8399  0119                     	;# 
  8400  0119                     	;# 
  8401  0119                     	;# 
  8402  011A                     	;# 
  8403  011A                     	;# 
  8404  011A                     	;# 
  8405  011B                     	;# 
  8406  011B                     	;# 
  8407  011B                     	;# 
  8408  011B                     	;# 
  8409  011B                     	;# 
  8410  011C                     	;# 
  8411  011C                     	;# 
  8412  011C                     	;# 
  8413  011D                     	;# 
  8414  011D                     	;# 
  8415  011D                     	;# 
  8416  011E                     	;# 
  8417  011E                     	;# 
  8418  011E                     	;# 
  8419  011F                     	;# 
  8420  011F                     	;# 
  8421  011F                     	;# 
  8422  011F                     	;# 
  8423  011F                     	;# 
  8424  018C                     	;# 
  8425  018D                     	;# 
  8426  018E                     	;# 
  8427  018F                     	;# 
  8428  0190                     	;# 
  8429  0191                     	;# 
  8430  0192                     	;# 
  8431  0196                     	;# 
  8432  0197                     	;# 
  8433  0198                     	;# 
  8434  0199                     	;# 
  8435  019A                     	;# 
  8436  019B                     	;# 
  8437  019C                     	;# 
  8438  020C                     	;# 
  8439  020C                     	;# 
  8440  020D                     	;# 
  8441  020E                     	;# 
  8442  020F                     	;# 
  8443  020F                     	;# 
  8444  0210                     	;# 
  8445  0210                     	;# 
  8446  0211                     	;# 
  8447  0211                     	;# 
  8448  0212                     	;# 
  8449  0212                     	;# 
  8450  0213                     	;# 
  8451  0214                     	;# 
  8452  0215                     	;# 
  8453  0215                     	;# 
  8454  0216                     	;# 
  8455  0216                     	;# 
  8456  0217                     	;# 
  8457  0217                     	;# 
  8458  0218                     	;# 
  8459  0218                     	;# 
  8460  0219                     	;# 
  8461  021A                     	;# 
  8462  021B                     	;# 
  8463  021B                     	;# 
  8464  021C                     	;# 
  8465  021C                     	;# 
  8466  021D                     	;# 
  8467  021D                     	;# 
  8468  021E                     	;# 
  8469  021F                     	;# 
  8470  028C                     	;# 
  8471  028C                     	;# 
  8472  028D                     	;# 
  8473  028D                     	;# 
  8474  028E                     	;# 
  8475  028F                     	;# 
  8476  0290                     	;# 
  8477  0290                     	;# 
  8478  0291                     	;# 
  8479  0292                     	;# 
  8480  0292                     	;# 
  8481  0293                     	;# 
  8482  0293                     	;# 
  8483  0294                     	;# 
  8484  0295                     	;# 
  8485  0296                     	;# 
  8486  0296                     	;# 
  8487  0297                     	;# 
  8488  0298                     	;# 
  8489  0298                     	;# 
  8490  0299                     	;# 
  8491  0299                     	;# 
  8492  029A                     	;# 
  8493  029B                     	;# 
  8494  029C                     	;# 
  8495  029C                     	;# 
  8496  029D                     	;# 
  8497  030C                     	;# 
  8498  030C                     	;# 
  8499  030D                     	;# 
  8500  030E                     	;# 
  8501  030F                     	;# 
  8502  0310                     	;# 
  8503  0310                     	;# 
  8504  0311                     	;# 
  8505  0312                     	;# 
  8506  0313                     	;# 
  8507  0314                     	;# 
  8508  0314                     	;# 
  8509  0315                     	;# 
  8510  0316                     	;# 
  8511  0317                     	;# 
  8512  0318                     	;# 
  8513  0318                     	;# 
  8514  0319                     	;# 
  8515  031A                     	;# 
  8516  031B                     	;# 
  8517  031C                     	;# 
  8518  031C                     	;# 
  8519  031D                     	;# 
  8520  031E                     	;# 
  8521  031F                     	;# 
  8522  038C                     	;# 
  8523  038C                     	;# 
  8524  038D                     	;# 
  8525  038E                     	;# 
  8526  0390                     	;# 
  8527  0390                     	;# 
  8528  0391                     	;# 
  8529  0392                     	;# 
  8530  040C                     	;# 
  8531  040D                     	;# 
  8532  040E                     	;# 
  8533  040F                     	;# 
  8534  0410                     	;# 
  8535  0411                     	;# 
  8536  0416                     	;# 
  8537  0416                     	;# 
  8538  0417                     	;# 
  8539  0418                     	;# 
  8540  0418                     	;# 
  8541  0419                     	;# 
  8542  041A                     	;# 
  8543  041A                     	;# 
  8544  041B                     	;# 
  8545  041C                     	;# 
  8546  041C                     	;# 
  8547  041D                     	;# 
  8548  041E                     	;# 
  8549  041F                     	;# 
  8550  048C                     	;# 
  8551  048C                     	;# 
  8552  048D                     	;# 
  8553  048E                     	;# 
  8554  048F                     	;# 
  8555  048F                     	;# 
  8556  0490                     	;# 
  8557  0491                     	;# 
  8558  0492                     	;# 
  8559  0492                     	;# 
  8560  0493                     	;# 
  8561  0494                     	;# 
  8562  0495                     	;# 
  8563  0495                     	;# 
  8564  0496                     	;# 
  8565  0497                     	;# 
  8566  0498                     	;# 
  8567  0499                     	;# 
  8568  049A                     	;# 
  8569  049B                     	;# 
  8570  049C                     	;# 
  8571  049D                     	;# 
  8572  050C                     	;# 
  8573  050C                     	;# 
  8574  050D                     	;# 
  8575  050E                     	;# 
  8576  050F                     	;# 
  8577  050F                     	;# 
  8578  0510                     	;# 
  8579  0511                     	;# 
  8580  0512                     	;# 
  8581  0512                     	;# 
  8582  0513                     	;# 
  8583  0514                     	;# 
  8584  0515                     	;# 
  8585  0515                     	;# 
  8586  0516                     	;# 
  8587  0517                     	;# 
  8588  0518                     	;# 
  8589  0519                     	;# 
  8590  051A                     	;# 
  8591  051B                     	;# 
  8592  051C                     	;# 
  8593  051D                     	;# 
  8594  058C                     	;# 
  8595  058C                     	;# 
  8596  058D                     	;# 
  8597  058E                     	;# 
  8598  058F                     	;# 
  8599  058F                     	;# 
  8600  0590                     	;# 
  8601  0591                     	;# 
  8602  0592                     	;# 
  8603  0593                     	;# 
  8604  060C                     	;# 
  8605  060D                     	;# 
  8606  060E                     	;# 
  8607  060F                     	;# 
  8608  0610                     	;# 
  8609  0611                     	;# 
  8610  0612                     	;# 
  8611  0613                     	;# 
  8612  0614                     	;# 
  8613  0616                     	;# 
  8614  0617                     	;# 
  8615  0618                     	;# 
  8616  0619                     	;# 
  8617  061A                     	;# 
  8618  061B                     	;# 
  8619  061C                     	;# 
  8620  061D                     	;# 
  8621  061E                     	;# 
  8622  068C                     	;# 
  8623  068D                     	;# 
  8624  068E                     	;# 
  8625  068F                     	;# 
  8626  0690                     	;# 
  8627  0691                     	;# 
  8628  0692                     	;# 
  8629  0693                     	;# 
  8630  0694                     	;# 
  8631  070C                     	;# 
  8632  070D                     	;# 
  8633  070E                     	;# 
  8634  070F                     	;# 
  8635  0710                     	;# 
  8636  0711                     	;# 
  8637  0712                     	;# 
  8638  0713                     	;# 
  8639  0714                     	;# 
  8640  0716                     	;# 
  8641  0717                     	;# 
  8642  0718                     	;# 
  8643  0719                     	;# 
  8644  071A                     	;# 
  8645  071B                     	;# 
  8646  071C                     	;# 
  8647  071D                     	;# 
  8648  071E                     	;# 
  8649  0796                     	;# 
  8650  0797                     	;# 
  8651  0798                     	;# 
  8652  0799                     	;# 
  8653  079A                     	;# 
  8654  079B                     	;# 
  8655  080C                     	;# 
  8656  080D                     	;# 
  8657  080E                     	;# 
  8658  080F                     	;# 
  8659  0810                     	;# 
  8660  0811                     	;# 
  8661  0812                     	;# 
  8662  0813                     	;# 
  8663  0814                     	;# 
  8664  081A                     	;# 
  8665  081B                     	;# 
  8666  081C                     	;# 
  8667  081D                     	;# 
  8668  081E                     	;# 
  8669  081F                     	;# 
  8670  088C                     	;# 
  8671  088D                     	;# 
  8672  088E                     	;# 
  8673  088F                     	;# 
  8674  0890                     	;# 
  8675  0891                     	;# 
  8676  0892                     	;# 
  8677  0893                     	;# 
  8678  0895                     	;# 
  8679  0896                     	;# 
  8680  0897                     	;# 
  8681  0898                     	;# 
  8682  0899                     	;# 
  8683  089A                     	;# 
  8684  089B                     	;# 
  8685  090C                     	;# 
  8686  090E                     	;# 
  8687  090F                     	;# 
  8688  091F                     	;# 
  8689  091F                     	;# 
  8690  098F                     	;# 
  8691  098F                     	;# 
  8692  0990                     	;# 
  8693  0991                     	;# 
  8694  0992                     	;# 
  8695  0993                     	;# 
  8696  0994                     	;# 
  8697  0995                     	;# 
  8698  0996                     	;# 
  8699  0997                     	;# 
  8700  0E0F                     	;# 
  8701  0E10                     	;# 
  8702  0E11                     	;# 
  8703  0E12                     	;# 
  8704  0E13                     	;# 
  8705  0E14                     	;# 
  8706  0E15                     	;# 
  8707  0E16                     	;# 
  8708  0E17                     	;# 
  8709  0E18                     	;# 
  8710  0E19                     	;# 
  8711  0E1A                     	;# 
  8712  0E1B                     	;# 
  8713  0E1C                     	;# 
  8714  0E1D                     	;# 
  8715  0E1E                     	;# 
  8716  0E1F                     	;# 
  8717  0E20                     	;# 
  8718  0E21                     	;# 
  8719  0E22                     	;# 
  8720  0E23                     	;# 
  8721  0E24                     	;# 
  8722  0E25                     	;# 
  8723  0E26                     	;# 
  8724  0E27                     	;# 
  8725  0E28                     	;# 
  8726  0E29                     	;# 
  8727  0E2A                     	;# 
  8728  0E2B                     	;# 
  8729  0E2C                     	;# 
  8730  0E2D                     	;# 
  8731  0E2E                     	;# 
  8732  0E2F                     	;# 
  8733  0E30                     	;# 
  8734  0E31                     	;# 
  8735  0E32                     	;# 
  8736  0E33                     	;# 
  8737  0E34                     	;# 
  8738  0E35                     	;# 
  8739  0E36                     	;# 
  8740  0E37                     	;# 
  8741  0E8F                     	;# 
  8742  0E90                     	;# 
  8743  0E91                     	;# 
  8744  0E92                     	;# 
  8745  0E93                     	;# 
  8746  0E94                     	;# 
  8747  0E95                     	;# 
  8748  0E96                     	;# 
  8749  0E97                     	;# 
  8750  0E9C                     	;# 
  8751  0E9D                     	;# 
  8752  0E9E                     	;# 
  8753  0EA1                     	;# 
  8754  0EA2                     	;# 
  8755  0EA3                     	;# 
  8756  0EA4                     	;# 
  8757  0EA5                     	;# 
  8758  0EA9                     	;# 
  8759  0EAA                     	;# 
  8760  0EAB                     	;# 
  8761  0EAC                     	;# 
  8762  0EB1                     	;# 
  8763  0EB2                     	;# 
  8764  0EB3                     	;# 
  8765  0EB8                     	;# 
  8766  0EB9                     	;# 
  8767  0EBA                     	;# 
  8768  0EBB                     	;# 
  8769  0EBC                     	;# 
  8770  0EBD                     	;# 
  8771  0EBE                     	;# 
  8772  0EC3                     	;# 
  8773  0EC5                     	;# 
  8774  0EC6                     	;# 
  8775  0EC7                     	;# 
  8776  0EC8                     	;# 
  8777  0EC9                     	;# 
  8778  0ECA                     	;# 
  8779  0ECB                     	;# 
  8780  0ECC                     	;# 
  8781  0F10                     	;# 
  8782  0F11                     	;# 
  8783  0F12                     	;# 
  8784  0F13                     	;# 
  8785  0F14                     	;# 
  8786  0F15                     	;# 
  8787  0F16                     	;# 
  8788  0F17                     	;# 
  8789  0F18                     	;# 
  8790  0F19                     	;# 
  8791  0F1A                     	;# 
  8792  0F1B                     	;# 
  8793  0F1C                     	;# 
  8794  0F1D                     	;# 
  8795  0F1E                     	;# 
  8796  0F1F                     	;# 
  8797  0F20                     	;# 
  8798  0F21                     	;# 
  8799  0F22                     	;# 
  8800  0F23                     	;# 
  8801  0F24                     	;# 
  8802  0F25                     	;# 
  8803  0F26                     	;# 
  8804  0F27                     	;# 
  8805  0F28                     	;# 
  8806  0F29                     	;# 
  8807  0F2A                     	;# 
  8808  0F2B                     	;# 
  8809  0F2C                     	;# 
  8810  0F2D                     	;# 
  8811  0F2E                     	;# 
  8812  0F2F                     	;# 
  8813  0F30                     	;# 
  8814  0F31                     	;# 
  8815  0F32                     	;# 
  8816  0F38                     	;# 
  8817  0F39                     	;# 
  8818  0F3A                     	;# 
  8819  0F3B                     	;# 
  8820  0F3C                     	;# 
  8821  0F3D                     	;# 
  8822  0F3E                     	;# 
  8823  0F3F                     	;# 
  8824  0F40                     	;# 
  8825  0F41                     	;# 
  8826  0F43                     	;# 
  8827  0F44                     	;# 
  8828  0F45                     	;# 
  8829  0F46                     	;# 
  8830  0F47                     	;# 
  8831  0F48                     	;# 
  8832  0F49                     	;# 
  8833  0F4A                     	;# 
  8834  0F4B                     	;# 
  8835  0F4C                     	;# 
  8836  0F4E                     	;# 
  8837  0F4F                     	;# 
  8838  0F50                     	;# 
  8839  0F51                     	;# 
  8840  0F52                     	;# 
  8841  0F53                     	;# 
  8842  0F54                     	;# 
  8843  0F55                     	;# 
  8844  0F56                     	;# 
  8845  0F57                     	;# 
  8846  0F59                     	;# 
  8847  0F5A                     	;# 
  8848  0F5B                     	;# 
  8849  0F5C                     	;# 
  8850  0F5D                     	;# 
  8851  0F61                     	;# 
  8852  0F62                     	;# 
  8853  0F64                     	;# 
  8854  0F65                     	;# 
  8855  0F66                     	;# 
  8856  0F67                     	;# 
  8857  0F68                     	;# 
  8858  0F69                     	;# 
  8859  0F6A                     	;# 
  8860  0F6B                     	;# 
  8861  0F6C                     	;# 
  8862  0F6D                     	;# 
  8863  0FE4                     	;# 
  8864  0FE5                     	;# 
  8865  0FE6                     	;# 
  8866  0FE7                     	;# 
  8867  0FE8                     	;# 
  8868  0FE9                     	;# 
  8869  0FEA                     	;# 
  8870  0FEB                     	;# 
  8871  0FED                     	;# 
  8872  0FEE                     	;# 
  8873  0FEF                     	;# 
  8874                           
  8875                           	psect	stringtext1
  8876  06C4                     __pstringtext1:	
  8877  06C4                     _fsmStateTable:	
  8878  06C4  3418               	retlw	low _do_I2C_IDLE
  8879  06C5  340E               	retlw	high _do_I2C_IDLE
  8880  06C6  3494               	retlw	low _do_I2C_SEND_ADR_READ
  8881  06C7  340E               	retlw	high _do_I2C_SEND_ADR_READ
  8882  06C8  347C               	retlw	low _do_I2C_SEND_ADR_WRITE
  8883  06C9  340E               	retlw	high _do_I2C_SEND_ADR_WRITE
  8884  06CA  342A               	retlw	low _do_I2C_TX
  8885  06CB  3404               	retlw	high _do_I2C_TX
  8886  06CC  347E               	retlw	low _do_I2C_RX
  8887  06CD  3404               	retlw	high _do_I2C_RX
  8888  06CE  345E               	retlw	low _do_I2C_RCEN
  8889  06CF  340E               	retlw	high _do_I2C_RCEN
  8890  06D0  3497               	retlw	low _do_I2C_TX_EMPTY
  8891  06D1  3405               	retlw	high _do_I2C_TX_EMPTY
  8892  06D2  341D               	retlw	low _do_I2C_SEND_RESTART_READ
  8893  06D3  340E               	retlw	high _do_I2C_SEND_RESTART_READ
  8894  06D4  3422               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8895  06D5  340E               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8896  06D6  3427               	retlw	low _do_I2C_SEND_RESTART
  8897  06D7  340E               	retlw	high _do_I2C_SEND_RESTART
  8898  06D8  342C               	retlw	low _do_I2C_SEND_STOP
  8899  06D9  340E               	retlw	high _do_I2C_SEND_STOP
  8900  06DA  3431               	retlw	low _do_I2C_DO_ACK
  8901  06DB  340E               	retlw	high _do_I2C_DO_ACK
  8902  06DC  3436               	retlw	low _do_I2C_DO_NACK_STOP
  8903  06DD  340E               	retlw	high _do_I2C_DO_NACK_STOP
  8904  06DE  343B               	retlw	low _do_I2C_DO_NACK_RESTART
  8905  06DF  340E               	retlw	high _do_I2C_DO_NACK_RESTART
  8906  06E0  3474               	retlw	low _do_I2C_RESET
  8907  06E1  340E               	retlw	high _do_I2C_RESET
  8908  06E2  342A               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8909  06E3  3406               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8910  06E4                     __end_of_fsmStateTable:	
  8911                           
  8912                           	psect	bitnvBANK0
  8913  0300                     __pbitnvBANK0:	
  8914  0300                     _running:	
  8915  0300                     	ds	1
  8916  0013                     _TRISCbits	set	19
  8917  0018                     _LATCbits	set	24
  8918  0016                     _LATAbits	set	22
  8919  001E                     _T0CON0bits	set	30
  8920  001E                     _T0CON0	set	30
  8921  001C                     _TMR0L	set	28
  8922  001D                     _TMR0H	set	29
  8923  001F                     _T0CON1	set	31
  8924  0014                     _TRISD	set	20
  8925  0013                     _TRISC	set	19
  8926  0012                     _TRISB	set	18
  8927  0011                     _TRISA	set	17
  8928  0015                     _TRISE	set	21
  8929  0018                     _LATC	set	24
  8930  0017                     _LATB	set	23
  8931  0016                     _LATA	set	22
  8932  0019                     _LATD	set	25
  8933  001A                     _LATE	set	26
  8934  000B                     _INTCONbits	set	11
  8935  0094                     _ADCON1bits	set	148
  8936  008E                     _ADPREVL	set	142
  8937  008F                     _ADPREVH	set	143
  8938  0097                     _ADSTATbits	set	151
  8939  0090                     _ADACCL	set	144
  8940  0091                     _ADACCH	set	145
  8941  0095                     _ADCON2bits	set	149
  8942  009C                     _ADPRE	set	156
  8943  0096                     _ADCON3bits	set	150
  8944  008C                     _ADRESL	set	140
  8945  008D                     _ADRESH	set	141
  8946  0093                     _ADCON0bits	set	147
  8947  009D                     _ADACQ	set	157
  8948  0093                     _ADCON0	set	147
  8949  0098                     _ADCLK	set	152
  8950  0099                     _ADACT	set	153
  8951  009A                     _ADREF	set	154
  8952  0097                     _ADSTAT	set	151
  8953  0096                     _ADCON3	set	150
  8954  0095                     _ADCON2	set	149
  8955  0094                     _ADCON1	set	148
  8956  009B                     _ADCAP	set	155
  8957  009E                     _ADPCH	set	158
  8958  0116                     _ADERRL	set	278
  8959  0117                     _ADERRH	set	279
  8960  0114                     _ADFLTRL	set	276
  8961  0115                     _ADFLTRH	set	277
  8962  010C                     _ADCNT	set	268
  8963  010D                     _ADRPT	set	269
  8964  0113                     _ADSTPTH	set	275
  8965  0112                     _ADSTPTL	set	274
  8966  0111                     _ADUTHH	set	273
  8967  0110                     _ADUTHL	set	272
  8968  010F                     _ADLTHH	set	271
  8969  010E                     _ADLTHL	set	270
  8970  018F                     _SSP1STATbits	set	399
  8971  018E                     _SSP1MSK	set	398
  8972  018C                     _SSP1BUF	set	396
  8973  0191                     _SSP1CON2bits	set	401
  8974  018D                     _SSP1ADD	set	397
  8975  0191                     _SSP1CON2	set	401
  8976  0190                     _SSP1CON1	set	400
  8977  018F                     _SSP1STAT	set	399
  8978  0190                     _SSP1CON1bits	set	400
  8979  021F                     _CCPTMRS1bits	set	543
  8980  020F                     _T1GCONbits	set	527
  8981  020E                     _T1CONbits	set	526
  8982  020E                     _T1CON	set	526
  8983  020C                     _TMR1L	set	524
  8984  020D                     _TMR1H	set	525
  8985  0211                     _T1CLK	set	529
  8986  0210                     _T1GATE	set	528
  8987  020F                     _T1GCON	set	527
  8988  028D                     _PR2	set	653
  8989  028C                     _TMR2	set	652
  8990  028E                     _T2CONbits	set	654
  8991  0291                     _T2RSTbits	set	657
  8992  028F                     _T2HLTbits	set	655
  8993  028E                     _T2CON	set	654
  8994  028C                     _T2TMR	set	652
  8995  028D                     _T2PR	set	653
  8996  0291                     _T2RST	set	657
  8997  028F                     _T2HLT	set	655
  8998  0290                     _T2CLKCON	set	656
  8999  038C                     _PWM6DCL	set	908
  9000  038D                     _PWM6DCH	set	909
  9001  038E                     _PWM6CON	set	910
  9002  0710                     _PIR4bits	set	1808
  9003  071A                     _PIE4bits	set	1818
  9004  070F                     _PIR3bits	set	1807
  9005  0719                     _PIE3bits	set	1817
  9006  0716                     _PIE0bits	set	1814
  9007  070C                     _PIR0bits	set	1804
  9008  079B                     _PMD5	set	1947
  9009  079A                     _PMD4	set	1946
  9010  0799                     _PMD3	set	1945
  9011  0798                     _PMD2	set	1944
  9012  0797                     _PMD1	set	1943
  9013  0796                     _PMD0	set	1942
  9014  081F                     _NVMCON2	set	2079
  9015  081C                     _NVMDATL	set	2076
  9016  081D                     _NVMDATH	set	2077
  9017  081E                     _NVMCON1bits	set	2078
  9018  081B                     _NVMADRH	set	2075
  9019  081A                     _NVMADRL	set	2074
  9020  0892                     _OSCTUNE	set	2194
  9021  0893                     _OSCFRQ	set	2195
  9022  0891                     _OSCEN	set	2193
  9023  088F                     _OSCCON3	set	2191
  9024  088D                     _OSCCON1	set	2189
  9025  0EC6                     _SSP1DATPPS	set	3782
  9026  0EC5                     _SSP1CLKPPS	set	3781
  9027  0E90                     _INTPPS	set	3728
  9028  0F16                     _RA6PPS	set	3862
  9029  0F24                     _RC4PPS	set	3876
  9030  0F23                     _RC3PPS	set	3875
  9031  0F68                     _INLVLE	set	3944
  9032  0F5D                     _INLVLD	set	3933
  9033  0F52                     _INLVLC	set	3922
  9034  0F47                     _INLVLB	set	3911
  9035  0F3C                     _INLVLA	set	3900
  9036  0F67                     _SLRCONE	set	3943
  9037  0F5C                     _SLRCOND	set	3932
  9038  0F51                     _SLRCONC	set	3921
  9039  0F46                     _SLRCONB	set	3910
  9040  0F3B                     _SLRCONA	set	3899
  9041  0F5B                     _ODCOND	set	3931
  9042  0F50                     _ODCONC	set	3920
  9043  0F45                     _ODCONB	set	3909
  9044  0F3A                     _ODCONA	set	3898
  9045  0F66                     _ODCONE	set	3942
  9046  0F4F                     _WPUC	set	3919
  9047  0F39                     _WPUA	set	3897
  9048  0F44                     _WPUB	set	3908
  9049  0F65                     _WPUE	set	3941
  9050  0F5A                     _WPUD	set	3930
  9051  0F38                     _ANSELA	set	3896
  9052  0F64                     _ANSELE	set	3940
  9053  0F43                     _ANSELB	set	3907
  9054  0F4E                     _ANSELC	set	3918
  9055  0F59                     _ANSELD	set	3929
  9056  7A7C                     _WPUC4	set	31356
  9057  7A7B                     _WPUC3	set	31355
  9058                           
  9059                           ; #config settings
  9060  0000                     
  9061                           	psect	cinit
  9062  0051                     start_initialization:	
  9063  0051                     __initialization:	
  9064                           
  9065                           ; Clear objects allocated to BITCOMMON
  9066  0051  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  9067                           
  9068                           ; Clear objects allocated to BITBANK0
  9069  0052  0020               	movlb	0	; select bank0
  9070  0053  01E1               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  9071                           
  9072                           ; Clear objects allocated to BANK0
  9073  0054  3020               	movlw	low __pbssBANK0
  9074  0055  0084               	movwf	4
  9075  0056  3000               	movlw	high __pbssBANK0
  9076  0057  0085               	movwf	5
  9077  0058  3029               	movlw	41
  9078  0059  318E  2658  3180   	fcall	clear_ram0
  9079                           
  9080                           ; Clear objects allocated to BANK1
  9081  005C  30A0               	movlw	low __pbssBANK1
  9082  005D  0084               	movwf	4
  9083  005E  3000               	movlw	high __pbssBANK1
  9084  005F  0085               	movwf	5
  9085  0060  301D               	movlw	29
  9086  0061  318E  2658  3180   	fcall	clear_ram0
  9087  0064                     end_of_initialization:	
  9088                           ;End of C runtime variable initialization code
  9089                           
  9090  0064                     __end_of__initialization:	
  9091  0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9092  0065  0020               	movlb	0
  9093  0066  3180  2868         	ljmp	_main	;jump to C main() function
  9094                           
  9095                           	psect	bitbssCOMMON
  9096  03E8                     __pbitbssCOMMON:	
  9097  03E8                     _config_mode:	
  9098  03E8                     	ds	1
  9099  03E9                     _alarm:	
  9100  03E9                     	ds	1
  9101  03EA                     _s2_pressed:	
  9102  03EA                     	ds	1
  9103  03EB                     _half:	
  9104  03EB                     	ds	1
  9105                           
  9106                           	psect	bitbssBANK0
  9107  0308                     __pbitbssBANK0:	
  9108  0308                     _s1_pressed:	
  9109  0308                     	ds	1
  9110                           
  9111                           	psect	bssBANK0
  9112  0020                     __pbssBANK0:	
  9113  0020                     _ms:	
  9114  0020                     	ds	2
  9115  0022                     _TMR1_InterruptHandler:	
  9116  0022                     	ds	2
  9117  0024                     _timer1ReloadVal:	
  9118  0024                     	ds	2
  9119  0026                     _TMR0_InterruptHandler:	
  9120  0026                     	ds	2
  9121  0028                     _i2c1_driver_i2cISR:	
  9122  0028                     	ds	2
  9123  002A                     _i2c1_driver_busCollisionISR:	
  9124  002A                     	ds	2
  9125  002C                     _INT_InterruptHandler:	
  9126  002C                     	ds	2
  9127  002E                     _aux1:	
  9128  002E                     	ds	1
  9129  002F                     _aux:	
  9130  002F                     	ds	1
  9131  0030                     _tala:	
  9132  0030                     	ds	1
  9133  0031                     _alaf:	
  9134  0031                     	ds	1
  9135  0032                     _alal:	
  9136  0032                     	ds	1
  9137  0033                     _lum_bin:	
  9138  0033                     	ds	1
  9139  0034                     _alat:	
  9140  0034                     	ds	1
  9141  0035                     _temp:	
  9142  0035                     	ds	1
  9143  0036                     _pmon:	
  9144  0036                     	ds	1
  9145  0037                     _nreg:	
  9146  0037                     	ds	1
  9147  0038                     _select_mode:	
  9148  0038                     	ds	1
  9149  0039                     _delta10ms:	
  9150  0039                     	ds	1
  9151  003A                     _delta10ms_2:	
  9152  003A                     	ds	1
  9153  003B                     _last3000ms:	
  9154  003B                     	ds	1
  9155  003C                     _duty_cycle:	
  9156  003C                     	ds	1
  9157  003D                     _last1m:	
  9158  003D                     	ds	1
  9159  003E                     _last5s:	
  9160  003E                     	ds	1
  9161  003F                     _seg:	
  9162  003F                     	ds	1
  9163  0040                     _clkm:	
  9164  0040                     	ds	1
  9165  0041                     _clkh:	
  9166  0041                     	ds	1
  9167  0042                     _ring_byte:	
  9168  0042                     	ds	5
  9169  0047                     _nreg_init:	
  9170  0047                     	ds	1
  9171  0048                     _nreg_pt:	
  9172  0048                     	ds	1
  9173                           
  9174                           	psect	bssBANK1
  9175  00A0                     __pbssBANK1:	
  9176  00A0                     _i2c_status:	
  9177  00A0                     	ds	29
  9178                           
  9179                           	psect	clrtext
  9180  0E58                     clear_ram0:	
  9181                           ;	Called with FSR0 containing the base address, and
  9182                           ;	WREG with the size to clear
  9183                           
  9184  0E58  0064               	clrwdt	;clear the watchdog before getting into this loop
  9185  0E59                     clrloop0:	
  9186  0E59  0180               	clrf	0	;clear RAM location pointed to by FSR
  9187  0E5A  3101               	addfsr 0,1
  9188  0E5B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9189  0E5C  2E59               	goto	clrloop0	;have we reached the end yet?
  9190  0E5D  3400               	retlw	0	;all done for this memory range, return
  9191                           
  9192                           	psect	cstackCOMMON
  9193  0070                     __pcstackCOMMON:	
  9194  0070                     ?_i2c1_driver_open:	
  9195  0070                     ?_i2c1_driver_isNACK:	
  9196                           ; 1 bit 
  9197                           
  9198  0070                     ?_INT_CallBack:	
  9199                           ; 1 bit 
  9200                           
  9201  0070                     ?_TMR0_ISR:	
  9202                           ; 1 bytes @ 0x0
  9203                           
  9204  0070                     ?_TMR1_ISR:	
  9205                           ; 1 bytes @ 0x0
  9206                           
  9207  0070                     ?_PMD_Initialize:	
  9208                           ; 1 bytes @ 0x0
  9209                           
  9210  0070                     ?_PIN_MANAGER_Initialize:	
  9211                           ; 1 bytes @ 0x0
  9212                           
  9213  0070                     ?_OSCILLATOR_Initialize:	
  9214                           ; 1 bytes @ 0x0
  9215                           
  9216  0070                     ?_PWM6_Initialize:	
  9217                           ; 1 bytes @ 0x0
  9218                           
  9219  0070                     ?_ADCC_Initialize:	
  9220                           ; 1 bytes @ 0x0
  9221                           
  9222  0070                     ?_TMR2_Initialize:	
  9223                           ; 1 bytes @ 0x0
  9224                           
  9225  0070                     ?_TMR1_Initialize:	
  9226                           ; 1 bytes @ 0x0
  9227                           
  9228  0070                     ?_TMR0_Initialize:	
  9229                           ; 1 bytes @ 0x0
  9230                           
  9231  0070                     ?_TMR0_DefaultInterruptHandler:	
  9232                           ; 1 bytes @ 0x0
  9233                           
  9234  0070                     ??_TMR0_DefaultInterruptHandler:	
  9235                           ; 1 bytes @ 0x0
  9236                           
  9237  0070                     ?_TMR1_DefaultInterruptHandler:	
  9238                           ; 1 bytes @ 0x0
  9239                           
  9240  0070                     ??_TMR1_DefaultInterruptHandler:	
  9241                           ; 1 bytes @ 0x0
  9242                           
  9243  0070                     ?_cksum:	
  9244                           ; 1 bytes @ 0x0
  9245                           
  9246  0070                     ?_reset_recv:	
  9247                           ; 1 bytes @ 0x0
  9248                           
  9249  0070                     ?_cksum_w:	
  9250                           ; 1 bytes @ 0x0
  9251                           
  9252  0070                     ?_I2C_Initialize:	
  9253                           ; 1 bytes @ 0x0
  9254                           
  9255  0070                     ?_h_precisionclock:	
  9256                           ; 1 bytes @ 0x0
  9257                           
  9258  0070                     ?_h_clock:	
  9259                           ; 1 bytes @ 0x0
  9260                           
  9261  0070                     ?_sw1_EXT:	
  9262                           ; 1 bytes @ 0x0
  9263                           
  9264  0070                     ??_sw1_EXT:	
  9265                           ; 1 bytes @ 0x0
  9266                           
  9267  0070                     ?_tsttc:	
  9268                           ; 1 bytes @ 0x0
  9269                           
  9270  0070                     ?_update_clock:	
  9271                           ; 1 bytes @ 0x0
  9272                           
  9273  0070                     ??_update_clock:	
  9274                           ; 1 bytes @ 0x0
  9275                           
  9276  0070                     ?_setCallBack:	
  9277                           ; 1 bytes @ 0x0
  9278                           
  9279  0070                     ?_i2c_busCollisionISR:	
  9280                           ; 1 bytes @ 0x0
  9281                           
  9282  0070                     ??_i2c_busCollisionISR:	
  9283                           ; 1 bytes @ 0x0
  9284                           
  9285  0070                     ?_i2c_ISR:	
  9286                           ; 1 bytes @ 0x0
  9287                           
  9288  0070                     ?_WriteI2C:	
  9289                           ; 1 bytes @ 0x0
  9290                           
  9291  0070                     ?_ReadI2C:	
  9292                           ; 1 bytes @ 0x0
  9293                           
  9294  0070                     ?_INT_ISR:	
  9295                           ; 1 bytes @ 0x0
  9296                           
  9297  0070                     ?_INT_DefaultInterruptHandler:	
  9298                           ; 1 bytes @ 0x0
  9299                           
  9300  0070                     ??_INT_DefaultInterruptHandler:	
  9301                           ; 1 bytes @ 0x0
  9302                           
  9303  0070                     ?_EXT_INT_Initialize:	
  9304                           ; 1 bytes @ 0x0
  9305                           
  9306  0070                     ?_INTERRUPT_InterruptManager:	
  9307                           ; 1 bytes @ 0x0
  9308                           
  9309  0070                     ?_SYSTEM_Initialize:	
  9310                           ; 1 bytes @ 0x0
  9311                           
  9312  0070                     ?_mssp1_clearIRQ:	
  9313                           ; 1 bytes @ 0x0
  9314                           
  9315  0070                     ??_mssp1_clearIRQ:	
  9316                           ; 1 bytes @ 0x0
  9317                           
  9318  0070                     ?_mssp1_setIRQ:	
  9319                           ; 1 bytes @ 0x0
  9320                           
  9321  0070                     ??_mssp1_setIRQ:	
  9322                           ; 1 bytes @ 0x0
  9323                           
  9324  0070                     ?_i2c1_driver_resetBus:	
  9325                           ; 1 bytes @ 0x0
  9326                           
  9327  0070                     ??_i2c1_driver_resetBus:	
  9328                           ; 1 bytes @ 0x0
  9329                           
  9330  0070                     ?_i2c1_driver_restart:	
  9331                           ; 1 bytes @ 0x0
  9332                           
  9333  0070                     ??_i2c1_driver_restart:	
  9334                           ; 1 bytes @ 0x0
  9335                           
  9336  0070                     ?_i2c1_driver_stop:	
  9337                           ; 1 bytes @ 0x0
  9338                           
  9339  0070                     ??_i2c1_driver_stop:	
  9340                           ; 1 bytes @ 0x0
  9341                           
  9342  0070                     ??_i2c1_driver_isNACK:	
  9343                           ; 1 bytes @ 0x0
  9344                           
  9345  0070                     ?_i2c1_driver_startRX:	
  9346                           ; 1 bytes @ 0x0
  9347                           
  9348  0070                     ??_i2c1_driver_startRX:	
  9349                           ; 1 bytes @ 0x0
  9350                           
  9351  0070                     ?_i2c1_driver_getRXData:	
  9352                           ; 1 bytes @ 0x0
  9353                           
  9354  0070                     ??_i2c1_driver_getRXData:	
  9355                           ; 1 bytes @ 0x0
  9356                           
  9357  0070                     ?_i2c1_driver_TXData:	
  9358                           ; 1 bytes @ 0x0
  9359                           
  9360  0070                     ??_i2c1_driver_TXData:	
  9361                           ; 1 bytes @ 0x0
  9362                           
  9363  0070                     ?_i2c1_driver_sendACK:	
  9364                           ; 1 bytes @ 0x0
  9365                           
  9366  0070                     ??_i2c1_driver_sendACK:	
  9367                           ; 1 bytes @ 0x0
  9368                           
  9369  0070                     ?_i2c1_driver_sendNACK:	
  9370                           ; 1 bytes @ 0x0
  9371                           
  9372  0070                     ??_i2c1_driver_sendNACK:	
  9373                           ; 1 bytes @ 0x0
  9374                           
  9375  0070                     ?_i2c1_driver_clearBusCollision:	
  9376                           ; 1 bytes @ 0x0
  9377                           
  9378  0070                     ??_i2c1_driver_clearBusCollision:	
  9379                           ; 1 bytes @ 0x0
  9380                           
  9381  0070                     ?_ADCC_StartConversion:	
  9382                           ; 1 bytes @ 0x0
  9383                           
  9384  0070                     ?_ADCC_IsConversionDone:	
  9385                           ; 1 bytes @ 0x0
  9386                           
  9387  0070                     ?_TMR1_WriteTimer:	
  9388                           ; 1 bytes @ 0x0
  9389                           
  9390  0070                     ?_main:	
  9391                           ; 1 bytes @ 0x0
  9392                           
  9393  0070                     ?_i2c_setBuffer:	
  9394                           ; 1 bytes @ 0x0
  9395                           
  9396  0070                     ?_do_I2C_RESET:	
  9397                           ; 1 bytes @ 0x0
  9398                           
  9399  0070                     ??_do_I2C_RESET:	
  9400                           ; 1 bytes @ 0x0
  9401                           
  9402  0070                     ?_do_I2C_IDLE:	
  9403                           ; 1 bytes @ 0x0
  9404                           
  9405  0070                     ??_do_I2C_IDLE:	
  9406                           ; 1 bytes @ 0x0
  9407                           
  9408  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9409                           ; 1 bytes @ 0x0
  9410                           
  9411  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9412                           ; 1 bytes @ 0x0
  9413                           
  9414  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9415                           ; 1 bytes @ 0x0
  9416                           
  9417  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9418                           ; 1 bytes @ 0x0
  9419                           
  9420  0070                     ?_do_I2C_SEND_RESTART:	
  9421                           ; 1 bytes @ 0x0
  9422                           
  9423  0070                     ??_do_I2C_SEND_RESTART:	
  9424                           ; 1 bytes @ 0x0
  9425                           
  9426  0070                     ?_do_I2C_SEND_STOP:	
  9427                           ; 1 bytes @ 0x0
  9428                           
  9429  0070                     ??_do_I2C_SEND_STOP:	
  9430                           ; 1 bytes @ 0x0
  9431                           
  9432  0070                     ?_do_I2C_SEND_ADR_READ:	
  9433                           ; 1 bytes @ 0x0
  9434                           
  9435  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9436                           ; 1 bytes @ 0x0
  9437                           
  9438  0070                     ?_do_I2C_RCEN:	
  9439                           ; 1 bytes @ 0x0
  9440                           
  9441  0070                     ??_do_I2C_RCEN:	
  9442                           ; 1 bytes @ 0x0
  9443                           
  9444  0070                     ?_do_I2C_DO_ACK:	
  9445                           ; 1 bytes @ 0x0
  9446                           
  9447  0070                     ??_do_I2C_DO_ACK:	
  9448                           ; 1 bytes @ 0x0
  9449                           
  9450  0070                     ?_do_I2C_DO_NACK_STOP:	
  9451                           ; 1 bytes @ 0x0
  9452                           
  9453  0070                     ??_do_I2C_DO_NACK_STOP:	
  9454                           ; 1 bytes @ 0x0
  9455                           
  9456  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9457                           ; 1 bytes @ 0x0
  9458                           
  9459  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9460                           ; 1 bytes @ 0x0
  9461                           
  9462  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9463                           ; 1 bytes @ 0x0
  9464                           
  9465  0070                     ?_do_I2C_TX:	
  9466                           ; 1 bytes @ 0x0
  9467                           
  9468  0070                     ?_do_I2C_RX:	
  9469                           ; 1 bytes @ 0x0
  9470                           
  9471  0070                     ?_do_I2C_TX_EMPTY:	
  9472                           ; 1 bytes @ 0x0
  9473                           
  9474  0070                     ?i1_PWM6_LoadDutyValue:	
  9475                           ; 1 bytes @ 0x0
  9476                           
  9477  0070                     i2c1_driver_TXData@d:	
  9478                           ; 1 bytes @ 0x0
  9479                           
  9480  0070                     TMR1_WriteTimer@timerVal:	
  9481                           ; 1 bytes @ 0x0
  9482                           
  9483  0070                     i2c_setBuffer@bufferSize:	
  9484                           ; 2 bytes @ 0x0
  9485                           
  9486  0070                     setCallBack@cb:	
  9487                           ; 2 bytes @ 0x0
  9488                           
  9489  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9490                           ; 2 bytes @ 0x0
  9491                           
  9492                           
  9493                           ; 2 bytes @ 0x0
  9494  0070                     	ds	1
  9495  0071                     ??_h_clock:	
  9496  0071                     ??_do_I2C_SEND_ADR_READ:	
  9497                           ; 1 bytes @ 0x1
  9498                           
  9499  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9500                           ; 1 bytes @ 0x1
  9501                           
  9502                           
  9503                           ; 1 bytes @ 0x1
  9504  0071                     	ds	1
  9505  0072                     ??_TMR1_ISR:	
  9506  0072                     ??_TMR1_WriteTimer:	
  9507                           ; 1 bytes @ 0x2
  9508                           
  9509  0072                     ??_i2c_setBuffer:	
  9510                           ; 1 bytes @ 0x2
  9511                           
  9512  0072                     ??i1_PWM6_LoadDutyValue:	
  9513                           ; 1 bytes @ 0x2
  9514                           
  9515  0072                     setCallBack@p:	
  9516                           ; 1 bytes @ 0x2
  9517                           
  9518                           
  9519                           ; 1 bytes @ 0x2
  9520  0072                     	ds	1
  9521  0073                     ??_INT_CallBack:	
  9522  0073                     ??_setCallBack:	
  9523                           ; 1 bytes @ 0x3
  9524                           
  9525  0073                     ??_INT_ISR:	
  9526                           ; 1 bytes @ 0x3
  9527                           
  9528  0073                     i2c_setBuffer@buffer:	
  9529                           ; 1 bytes @ 0x3
  9530                           
  9531                           
  9532                           ; 1 bytes @ 0x3
  9533  0073                     	ds	1
  9534  0074                     ??_h_precisionclock:	
  9535  0074                     setCallBack@idx:	
  9536                           ; 1 bytes @ 0x4
  9537                           
  9538                           
  9539                           ; 1 bytes @ 0x4
  9540  0074                     	ds	1
  9541  0075                     ?_i2c_setDataCompleteCallback:	
  9542  0075                     i2c_setDataCompleteCallback@cb:	
  9543                           ; 1 bytes @ 0x5
  9544                           
  9545                           
  9546                           ; 2 bytes @ 0x5
  9547  0075                     	ds	2
  9548  0077                     ??_TMR0_ISR:	
  9549  0077                     i2c_setDataCompleteCallback@p:	
  9550                           ; 1 bytes @ 0x7
  9551                           
  9552                           
  9553                           ; 1 bytes @ 0x7
  9554  0077                     	ds	1
  9555  0078                     ??_i2c_setDataCompleteCallback:	
  9556                           
  9557                           ; 1 bytes @ 0x8
  9558  0078                     	ds	1
  9559  0079                     ?_returnStop:	
  9560  0079                     ?_returnReset:	
  9561                           ; 1 bytes @ 0x9
  9562                           
  9563  0079                     ?_i2c_restartWrite:	
  9564                           ; 1 bytes @ 0x9
  9565                           
  9566  0079                     ?_wr1RegCompleteHandler:	
  9567                           ; 1 bytes @ 0x9
  9568                           
  9569  0079                     ?_rd1RegCompleteHandler:	
  9570                           ; 1 bytes @ 0x9
  9571                           
  9572  0079                     ?_rd2RegCompleteHandler:	
  9573                           ; 1 bytes @ 0x9
  9574                           
  9575  0079                     ?_wr2RegCompleteHandler:	
  9576                           ; 1 bytes @ 0x9
  9577                           
  9578  0079                     ?_rdBlkRegCompleteHandler:	
  9579                           ; 1 bytes @ 0x9
  9580                           
  9581  0079                     i2c_restartWrite@p:	
  9582                           ; 1 bytes @ 0x9
  9583                           
  9584  0079                     returnStop@p:	
  9585                           ; 1 bytes @ 0x9
  9586                           
  9587  0079                     returnReset@p:	
  9588                           ; 1 bytes @ 0x9
  9589                           
  9590  0079                     wr1RegCompleteHandler@p:	
  9591                           ; 1 bytes @ 0x9
  9592                           
  9593  0079                     rd1RegCompleteHandler@p:	
  9594                           ; 1 bytes @ 0x9
  9595                           
  9596  0079                     rd2RegCompleteHandler@p:	
  9597                           ; 1 bytes @ 0x9
  9598                           
  9599  0079                     wr2RegCompleteHandler@p:	
  9600                           ; 1 bytes @ 0x9
  9601                           
  9602  0079                     rdBlkRegCompleteHandler@p:	
  9603                           ; 1 bytes @ 0x9
  9604                           
  9605                           
  9606                           ; 1 bytes @ 0x9
  9607  0079                     	ds	1
  9608  007A                     ??_returnStop:	
  9609  007A                     ??_returnReset:	
  9610                           ; 1 bytes @ 0xA
  9611                           
  9612  007A                     ??_i2c_restartWrite:	
  9613                           ; 1 bytes @ 0xA
  9614                           
  9615  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9616                           ; 1 bytes @ 0xA
  9617                           
  9618  007A                     ??_do_I2C_TX:	
  9619                           ; 1 bytes @ 0xA
  9620                           
  9621  007A                     ??_do_I2C_RX:	
  9622                           ; 1 bytes @ 0xA
  9623                           
  9624  007A                     ??_do_I2C_TX_EMPTY:	
  9625                           ; 1 bytes @ 0xA
  9626                           
  9627  007A                     ??_wr1RegCompleteHandler:	
  9628                           ; 1 bytes @ 0xA
  9629                           
  9630  007A                     ??_rd1RegCompleteHandler:	
  9631                           ; 1 bytes @ 0xA
  9632                           
  9633  007A                     ??_rd2RegCompleteHandler:	
  9634                           ; 1 bytes @ 0xA
  9635                           
  9636  007A                     ??_wr2RegCompleteHandler:	
  9637                           ; 1 bytes @ 0xA
  9638                           
  9639  007A                     ??_rdBlkRegCompleteHandler:	
  9640                           ; 1 bytes @ 0xA
  9641                           
  9642                           
  9643                           ; 1 bytes @ 0xA
  9644  007A                     	ds	3
  9645  007D                     ??_INTERRUPT_InterruptManager:	
  9646                           
  9647                           	psect	cstackBANK0
  9648  0049                     __pcstackBANK0:	
  9649                           ; 1 bytes @ 0xD
  9650                           
  9651  0049                     ??_i2c_ISR:	
  9652                           
  9653                           ; 1 bytes @ 0x0
  9654  0049                     	ds	3
  9655  004C                     ??_PMD_Initialize:	
  9656  004C                     ??_PIN_MANAGER_Initialize:	
  9657                           ; 1 bytes @ 0x3
  9658                           
  9659  004C                     ??_OSCILLATOR_Initialize:	
  9660                           ; 1 bytes @ 0x3
  9661                           
  9662  004C                     ??_PWM6_Initialize:	
  9663                           ; 1 bytes @ 0x3
  9664                           
  9665  004C                     ??_ADCC_Initialize:	
  9666                           ; 1 bytes @ 0x3
  9667                           
  9668  004C                     ??_TMR2_Initialize:	
  9669                           ; 1 bytes @ 0x3
  9670                           
  9671  004C                     ?_TMR0_SetInterruptHandler:	
  9672                           ; 1 bytes @ 0x3
  9673                           
  9674  004C                     ?_TMR1_SetInterruptHandler:	
  9675                           ; 1 bytes @ 0x3
  9676                           
  9677  004C                     ?_DATAEE_ReadByte:	
  9678                           ; 1 bytes @ 0x3
  9679                           
  9680  004C                     ??_I2C_Initialize:	
  9681                           ; 1 bytes @ 0x3
  9682                           
  9683  004C                     ?_LED_bin:	
  9684                           ; 1 bytes @ 0x3
  9685                           
  9686  004C                     ??_WriteI2C:	
  9687                           ; 1 bytes @ 0x3
  9688                           
  9689  004C                     ??_ReadI2C:	
  9690                           ; 1 bytes @ 0x3
  9691                           
  9692  004C                     ?_INT_SetInterruptHandler:	
  9693                           ; 1 bytes @ 0x3
  9694                           
  9695  004C                     ??_i2c1_driver_open:	
  9696                           ; 1 bytes @ 0x3
  9697                           
  9698  004C                     ??_ADCC_StartConversion:	
  9699                           ; 1 bytes @ 0x3
  9700                           
  9701  004C                     ??_ADCC_IsConversionDone:	
  9702                           ; 1 bytes @ 0x3
  9703                           
  9704  004C                     ?_PWM6_LoadDutyValue:	
  9705                           ; 1 bytes @ 0x3
  9706                           
  9707  004C                     ?___bmul:	
  9708                           ; 1 bytes @ 0x3
  9709                           
  9710  004C                     ?_ADCC_GetConversionResult:	
  9711                           ; 1 bytes @ 0x3
  9712                           
  9713  004C                     ADCC_StartConversion@channel:	
  9714                           ; 2 bytes @ 0x3
  9715                           
  9716  004C                     ___bmul@multiplicand:	
  9717                           ; 1 bytes @ 0x3
  9718                           
  9719  004C                     INT_SetInterruptHandler@InterruptHandler:	
  9720                           ; 1 bytes @ 0x3
  9721                           
  9722  004C                     TMR0_SetInterruptHandler@InterruptHandler:	
  9723                           ; 2 bytes @ 0x3
  9724                           
  9725  004C                     TMR1_SetInterruptHandler@InterruptHandler:	
  9726                           ; 2 bytes @ 0x3
  9727                           
  9728  004C                     PWM6_LoadDutyValue@dutyValue:	
  9729                           ; 2 bytes @ 0x3
  9730                           
  9731  004C                     LED_bin@value:	
  9732                           ; 2 bytes @ 0x3
  9733                           
  9734  004C                     DATAEE_ReadByte@bAdd:	
  9735                           ; 2 bytes @ 0x3
  9736                           
  9737                           
  9738                           ; 2 bytes @ 0x3
  9739  004C                     	ds	1
  9740  004D                     ??___bmul:	
  9741  004D                     WriteI2C@data_out:	
  9742                           ; 1 bytes @ 0x4
  9743                           
  9744                           
  9745                           ; 1 bytes @ 0x4
  9746  004D                     	ds	1
  9747  004E                     ??_TMR1_Initialize:	
  9748  004E                     ??_TMR0_Initialize:	
  9749                           ; 1 bytes @ 0x5
  9750                           
  9751  004E                     ??_TMR0_SetInterruptHandler:	
  9752                           ; 1 bytes @ 0x5
  9753                           
  9754  004E                     ??_TMR1_SetInterruptHandler:	
  9755                           ; 1 bytes @ 0x5
  9756                           
  9757  004E                     ??_DATAEE_ReadByte:	
  9758                           ; 1 bytes @ 0x5
  9759                           
  9760  004E                     ??_cksum:	
  9761                           ; 1 bytes @ 0x5
  9762                           
  9763  004E                     ??_tsttc:	
  9764                           ; 1 bytes @ 0x5
  9765                           
  9766  004E                     ??_LED_bin:	
  9767                           ; 1 bytes @ 0x5
  9768                           
  9769  004E                     ??_INT_SetInterruptHandler:	
  9770                           ; 1 bytes @ 0x5
  9771                           
  9772  004E                     ??_EXT_INT_Initialize:	
  9773                           ; 1 bytes @ 0x5
  9774                           
  9775  004E                     ??_SYSTEM_Initialize:	
  9776                           ; 1 bytes @ 0x5
  9777                           
  9778  004E                     ??_ADCC_GetConversionResult:	
  9779                           ; 1 bytes @ 0x5
  9780                           
  9781  004E                     ??_PWM6_LoadDutyValue:	
  9782                           ; 1 bytes @ 0x5
  9783                           
  9784  004E                     ?_ADC_read:	
  9785                           ; 1 bytes @ 0x5
  9786                           
  9787  004E                     ___bmul@product:	
  9788                           ; 2 bytes @ 0x5
  9789                           
  9790                           
  9791                           ; 1 bytes @ 0x5
  9792  004E                     	ds	1
  9793  004F                     tsttc@value:	
  9794  004F                     cksum@res:	
  9795                           ; 1 bytes @ 0x6
  9796                           
  9797  004F                     ___bmul@multiplier:	
  9798                           ; 1 bytes @ 0x6
  9799                           
  9800                           
  9801                           ; 1 bytes @ 0x6
  9802  004F                     	ds	1
  9803  0050                     ??_ADC_read:	
  9804  0050                     ?_read_ring:	
  9805                           ; 1 bytes @ 0x7
  9806                           
  9807  0050                     read_ring@nreg:	
  9808                           ; 1 bytes @ 0x7
  9809                           
  9810  0050                     cksum@i:	
  9811                           ; 1 bytes @ 0x7
  9812                           
  9813                           
  9814                           ; 2 bytes @ 0x7
  9815  0050                     	ds	1
  9816  0051                     read_ring@nreg_init:	
  9817                           
  9818                           ; 1 bytes @ 0x8
  9819  0051                     	ds	1
  9820  0052                     ?_DATAEE_WriteByte:	
  9821  0052                     read_ring@index:	
  9822                           ; 1 bytes @ 0x9
  9823                           
  9824  0052                     DATAEE_WriteByte@bAdd:	
  9825                           ; 1 bytes @ 0x9
  9826                           
  9827                           
  9828                           ; 2 bytes @ 0x9
  9829  0052                     	ds	1
  9830  0053                     read_ring@subindex:	
  9831                           
  9832                           ; 1 bytes @ 0xA
  9833  0053                     	ds	1
  9834  0054                     ??_read_ring:	
  9835  0054                     DATAEE_WriteByte@bData:	
  9836                           ; 1 bytes @ 0xB
  9837                           
  9838                           
  9839                           ; 1 bytes @ 0xB
  9840  0054                     	ds	1
  9841  0055                     ??_DATAEE_WriteByte:	
  9842  0055                     DATAEE_WriteByte@GIEBitValue:	
  9843                           ; 1 bytes @ 0xC
  9844                           
  9845                           
  9846                           ; 1 bytes @ 0xC
  9847  0055                     	ds	1
  9848  0056                     ??_reset_recv:	
  9849  0056                     ??_cksum_w:	
  9850                           ; 1 bytes @ 0xD
  9851                           
  9852  0056                     ?_push_ring:	
  9853                           ; 1 bytes @ 0xD
  9854                           
  9855  0056                     push_ring@nreg:	
  9856                           ; 1 bytes @ 0xD
  9857                           
  9858  0056                     read_ring@i:	
  9859                           ; 1 bytes @ 0xD
  9860                           
  9861  0056                     reset_recv@i:	
  9862                           ; 1 bytes @ 0xD
  9863                           
  9864                           
  9865                           ; 2 bytes @ 0xD
  9866  0056                     	ds	1
  9867  0057                     push_ring@nreg_init:	
  9868  0057                     read_ring@nreg_pt:	
  9869                           ; 1 bytes @ 0xE
  9870                           
  9871                           
  9872                           ; 1 bytes @ 0xE
  9873  0057                     	ds	1
  9874  0058                     push_ring@ring_byte:	
  9875  0058                     read_ring@absindex:	
  9876                           ; 1 bytes @ 0xF
  9877                           
  9878                           
  9879                           ; 1 bytes @ 0xF
  9880  0058                     	ds	1
  9881  0059                     ??_push_ring:	
  9882                           
  9883                           ; 1 bytes @ 0x10
  9884  0059                     	ds	2
  9885  005B                     push_ring@i:	
  9886                           
  9887                           ; 1 bytes @ 0x12
  9888  005B                     	ds	1
  9889  005C                     push_ring@nreg_pt:	
  9890                           
  9891                           ; 1 bytes @ 0x13
  9892  005C                     	ds	1
  9893  005D                     ??_main:	
  9894                           
  9895                           ; 1 bytes @ 0x14
  9896  005D                     	ds	3
  9897                           
  9898                           	psect	maintext
  9899  0068                     __pmaintext:	
  9900 ;;
  9901 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9902 ;;
  9903 ;; *************** function _main *****************
  9904 ;; Defined at:
  9905 ;;		line 64 in file "main.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : B1F/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;Total ram usage:        5 bytes
  9924 ;; Hardware stack levels required when called:    9
  9925 ;; This function calls:
  9926 ;;		_ADC_read
  9927 ;;		_DATAEE_ReadByte
  9928 ;;		_DATAEE_WriteByte
  9929 ;;		_I2C_Initialize
  9930 ;;		_INT_SetInterruptHandler
  9931 ;;		_LED_bin
  9932 ;;		_PWM6_LoadDutyValue
  9933 ;;		_SYSTEM_Initialize
  9934 ;;		_TMR0_SetInterruptHandler
  9935 ;;		_TMR1_SetInterruptHandler
  9936 ;;		_cksum
  9937 ;;		_cksum_w
  9938 ;;		_push_ring
  9939 ;;		_read_ring
  9940 ;;		_reset_recv
  9941 ;;		_tsttc
  9942 ;; This function is called by:
  9943 ;;		Startup code after reset
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           
  9948                           ;psect for function _main
  9949  0068                     _main:	
  9950  0068                     l5574:	
  9951                           ;incstack = 0
  9952                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9953                           
  9954                           
  9955                           ;main.c: 67:     running = 1;
  9956  0068  0020               	movlb	0	; select bank0
  9957  0069  1460               	bsf	_running/(0+8),_running& (0+7)
  9958                           
  9959                           ;main.c: 68:     half = 0;
  9960  006A  11FD               	bcf	_half/(0+8),_half& (0+7)	;volatile
  9961  006B                     l5576:	
  9962                           
  9963                           ;main.c: 69:     duty_cycle = 0;
  9964  006B  01BC               	clrf	_duty_cycle	;volatile
  9965                           
  9966                           ;main.c: 71:     clkh = 0; clkm = 0; seg = 0;
  9967  006C  01C1               	clrf	_clkh	;volatile
  9968  006D  01C0               	clrf	_clkm	;volatile
  9969  006E  01BF               	clrf	_seg	;volatile
  9970                           
  9971                           ;main.c: 72:     last5s = 0;
  9972  006F  01BE               	clrf	_last5s	;volatile
  9973                           
  9974                           ;main.c: 73:     last1m = 0;
  9975  0070  01BD               	clrf	_last1m	;volatile
  9976                           
  9977                           ;main.c: 74:     last3000ms = 0;
  9978  0071  01BB               	clrf	_last3000ms	;volatile
  9979                           
  9980                           ;main.c: 75:     delta10ms = 0;
  9981  0072  01B9               	clrf	_delta10ms	;volatile
  9982                           
  9983                           ;main.c: 76:     delta10ms_2 = 0;
  9984  0073  01BA               	clrf	_delta10ms_2	;volatile
  9985  0074                     l5578:	
  9986                           
  9987                           ;main.c: 78:     s1_pressed = 0;
  9988  0074  1061               	bcf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
  9989  0075                     l5580:	
  9990                           
  9991                           ;main.c: 81:     nreg = (unsigned char) (0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30);
  9992  0075  117D               	bcf	_s2_pressed/(0+8),_s2_pressed& (0+7)	;volatile
  9993  0076                     l5582:	
  9994  0076                     l781:	
  9995  0076  3096               	movlw	150
  9996  0077  00DD               	movwf	??_main
  9997  0078  085D               	movf	??_main,w
  9998  0079  00B7               	movwf	_nreg
  9999  007A                     l5586:	
 10000                           
 10001                           ;main.c: 82:     nreg_pt = 0;
 10002  007A  01C8               	clrf	_nreg_pt
 10003  007B                     l5588:	
 10004                           
 10005                           ;main.c: 83:     nreg_init = 0;
 10006  007B  01C7               	clrf	_nreg_init
 10007                           
 10008                           ;main.c: 85:     pmon = 5;
 10009  007C  3005               	movlw	5
 10010  007D  00DD               	movwf	??_main
 10011  007E  085D               	movf	??_main,w
 10012  007F  00B6               	movwf	_pmon
 10013  0080                     l5590:	
 10014                           
 10015                           ;main.c: 86:     alarm = 0;
 10016  0080  10FD               	bcf	_alarm/(0+8),_alarm& (0+7)	;volatile
 10017                           
 10018                           ;main.c: 87:     alaf = 2;
 10019  0081  3002               	movlw	2
 10020  0082  00DD               	movwf	??_main
 10021  0083  085D               	movf	??_main,w
 10022  0084  00B1               	movwf	_alaf
 10023                           
 10024                           ;main.c: 88:     tala = 3;
 10025  0085  3003               	movlw	3
 10026  0086  00DD               	movwf	??_main
 10027  0087  085D               	movf	??_main,w
 10028  0088  00B0               	movwf	_tala
 10029  0089                     l5592:	
 10030                           
 10031                           ;main.c: 89:     tala = (tala*1000 << 10);
 10032  0089  01B0               	clrf	_tala
 10033  008A                     l5594:	
 10034                           
 10035                           ;main.c: 90:     duty_cycle = 0;
 10036  008A  01BC               	clrf	_duty_cycle	;volatile
 10037  008B                     l5596:	
 10038                           
 10039                           ;main.c: 91:     temp = 0;
 10040  008B  01B5               	clrf	_temp
 10041  008C                     l5598:	
 10042                           
 10043                           ;main.c: 92:     alat = 25;
 10044  008C  3019               	movlw	25
 10045  008D  00DD               	movwf	??_main
 10046  008E  085D               	movf	??_main,w
 10047  008F  00B4               	movwf	_alat
 10048                           
 10049                           ;main.c: 93:     lum_bin = 0;
 10050  0090  01B3               	clrf	_lum_bin
 10051                           
 10052                           ;main.c: 94:     alal = (__bit) 2;
 10053  0091  01B2               	clrf	_alal
 10054  0092                     l5600:	
 10055                           
 10056                           ;main.c: 97:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB) {
 10057  0092  30F5               	movlw	245
 10058  0093  00CC               	movwf	DATAEE_ReadByte@bAdd
 10059  0094  30F0               	movlw	240
 10060  0095  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10061  0096  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10062  0099  3AAB               	xorlw	171
 10063  009A  1D03               	skipz
 10064  009B  289D               	goto	u3251
 10065  009C  289E               	goto	u3250
 10066  009D                     u3251:	
 10067  009D  28F2               	goto	l5606
 10068  009E                     u3250:	
 10069  009E                     l5602:	
 10070                           
 10071                           ;main.c: 98:         if(DATAEE_ReadByte(0xF0FF) == cksum()) {
 10072  009E  3186  26E4  3180   	fcall	_cksum
 10073  00A1  0020               	movlb	0	; select bank0
 10074  00A2  00DD               	movwf	??_main
 10075  00A3  30FF               	movlw	255
 10076  00A4  00CC               	movwf	DATAEE_ReadByte@bAdd
 10077  00A5  30F0               	movlw	240
 10078  00A6  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10079  00A7  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10080  00AA  0020               	movlb	0	; select bank0
 10081  00AB  065D               	xorwf	??_main,w
 10082  00AC  1D03               	skipz
 10083  00AD  28AF               	goto	u3261
 10084  00AE  28B0               	goto	u3260
 10085  00AF                     u3261:	
 10086  00AF  28F2               	goto	l5606
 10087  00B0                     u3260:	
 10088  00B0                     l5604:	
 10089                           
 10090                           ;main.c: 99:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10091  00B0  30F6               	movlw	246
 10092  00B1  00CC               	movwf	DATAEE_ReadByte@bAdd
 10093  00B2  30F0               	movlw	240
 10094  00B3  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10095  00B4  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10096  00B7  0020               	movlb	0	; select bank0
 10097  00B8  00DD               	movwf	??_main
 10098  00B9  085D               	movf	??_main,w
 10099  00BA  00C1               	movwf	_clkh	;volatile
 10100                           
 10101                           ;main.c: 100:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10102  00BB  30F7               	movlw	247
 10103  00BC  00CC               	movwf	DATAEE_ReadByte@bAdd
 10104  00BD  30F0               	movlw	240
 10105  00BE  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10106  00BF  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10107  00C2  0020               	movlb	0	; select bank0
 10108  00C3  00DD               	movwf	??_main
 10109  00C4  085D               	movf	??_main,w
 10110  00C5  00C0               	movwf	_clkm	;volatile
 10111                           
 10112                           ;main.c: 101:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10113  00C6  30F8               	movlw	248
 10114  00C7  00CC               	movwf	DATAEE_ReadByte@bAdd
 10115  00C8  30F0               	movlw	240
 10116  00C9  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10117  00CA  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10118  00CD  0020               	movlb	0	; select bank0
 10119  00CE  00DD               	movwf	??_main
 10120  00CF  085D               	movf	??_main,w
 10121  00D0  00B7               	movwf	_nreg
 10122                           
 10123                           ;main.c: 102:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10124  00D1  30F9               	movlw	249
 10125  00D2  00CC               	movwf	DATAEE_ReadByte@bAdd
 10126  00D3  30F0               	movlw	240
 10127  00D4  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10128  00D5  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10129  00D8  0020               	movlb	0	; select bank0
 10130  00D9  00DD               	movwf	??_main
 10131  00DA  085D               	movf	??_main,w
 10132  00DB  00C8               	movwf	_nreg_pt
 10133                           
 10134                           ;main.c: 103:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10135  00DC  30FA               	movlw	250
 10136  00DD  00CC               	movwf	DATAEE_ReadByte@bAdd
 10137  00DE  30F0               	movlw	240
 10138  00DF  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10139  00E0  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10140  00E3  0020               	movlb	0	; select bank0
 10141  00E4  00DD               	movwf	??_main
 10142  00E5  085D               	movf	??_main,w
 10143  00E6  00B6               	movwf	_pmon
 10144                           
 10145                           ;main.c: 104:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10146  00E7  30FB               	movlw	251
 10147  00E8  00CC               	movwf	DATAEE_ReadByte@bAdd
 10148  00E9  30F0               	movlw	240
 10149  00EA  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 10150  00EB  318F  270E  3180   	fcall	_DATAEE_ReadByte
 10151  00EE  0020               	movlb	0	; select bank0
 10152  00EF  00DD               	movwf	??_main
 10153  00F0  085D               	movf	??_main,w
 10154  00F1  00B0               	movwf	_tala
 10155  00F2                     l5606:	
 10156                           
 10157                           ;main.c: 108:     reset_recv();
 10158  00F2  3187  2742  3180   	fcall	_reset_recv
 10159  00F5                     l5608:	
 10160                           
 10161                           ;main.c: 111:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10162  00F5  30F5               	movlw	245
 10163  00F6  0020               	movlb	0	; select bank0
 10164  00F7  00D2               	movwf	DATAEE_WriteByte@bAdd
 10165  00F8  30F0               	movlw	240
 10166  00F9  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10167  00FA  30AB               	movlw	171
 10168  00FB  00DD               	movwf	??_main
 10169  00FC  085D               	movf	??_main,w
 10170  00FD  00D4               	movwf	DATAEE_WriteByte@bData
 10171  00FE  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10172  0101                     l5610:	
 10173                           
 10174                           ;main.c: 112:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10175  0101  30F8               	movlw	248
 10176  0102  0020               	movlb	0	; select bank0
 10177  0103  00D2               	movwf	DATAEE_WriteByte@bAdd
 10178  0104  30F0               	movlw	240
 10179  0105  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10180  0106  0837               	movf	_nreg,w
 10181  0107  00DD               	movwf	??_main
 10182  0108  085D               	movf	??_main,w
 10183  0109  00D4               	movwf	DATAEE_WriteByte@bData
 10184  010A  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10185  010D                     l5612:	
 10186                           
 10187                           ;main.c: 113:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10188  010D  30FA               	movlw	250
 10189  010E  0020               	movlb	0	; select bank0
 10190  010F  00D2               	movwf	DATAEE_WriteByte@bAdd
 10191  0110  30F0               	movlw	240
 10192  0111  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10193  0112  0836               	movf	_pmon,w
 10194  0113  00DD               	movwf	??_main
 10195  0114  085D               	movf	??_main,w
 10196  0115  00D4               	movwf	DATAEE_WriteByte@bData
 10197  0116  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10198  0119                     l5614:	
 10199                           
 10200                           ;main.c: 114:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10201  0119  30FB               	movlw	251
 10202  011A  0020               	movlb	0	; select bank0
 10203  011B  00D2               	movwf	DATAEE_WriteByte@bAdd
 10204  011C  30F0               	movlw	240
 10205  011D  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10206  011E  0830               	movf	_tala,w
 10207  011F  00DD               	movwf	??_main
 10208  0120  085D               	movf	??_main,w
 10209  0121  00D4               	movwf	DATAEE_WriteByte@bData
 10210  0122  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10211  0125                     l5616:	
 10212                           
 10213                           ;main.c: 115:     cksum_w();
 10214  0125  318F  272D  3180   	fcall	_cksum_w
 10215  0128                     l5618:	
 10216                           
 10217                           ;main.c: 118:     SYSTEM_Initialize();
 10218  0128  3187  275E  3180   	fcall	_SYSTEM_Initialize
 10219  012B                     l5620:	
 10220                           
 10221                           ;main.c: 119:     I2C_Initialize();
 10222  012B  3187  27F6  3180   	fcall	_I2C_Initialize
 10223  012E                     l5622:	
 10224                           
 10225                           ;main.c: 120:     (INTCONbits.GIE = 1);
 10226  012E  178B               	bsf	11,7	;volatile
 10227  012F                     l5624:	
 10228                           
 10229                           ;main.c: 121:     (INTCONbits.PEIE = 1);
 10230  012F  170B               	bsf	11,6	;volatile
 10231  0130                     l5626:	
 10232                           
 10233                           ;main.c: 124:     TMR0_SetInterruptHandler(h_precisionclock);
 10234  0130  30D5               	movlw	low _h_precisionclock
 10235  0131  0020               	movlb	0	; select bank0
 10236  0132  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10237  0133  3003               	movlw	high _h_precisionclock
 10238  0134  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10239  0135  318E  264C  3180   	fcall	_TMR0_SetInterruptHandler
 10240  0138                     l5628:	
 10241                           
 10242                           ;main.c: 125:     TMR1_SetInterruptHandler(h_clock);
 10243  0138  30E9               	movlw	low _h_clock
 10244  0139  0020               	movlb	0	; select bank0
 10245  013A  00CC               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10246  013B  300F               	movlw	high _h_clock
 10247  013C  00CD               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10248  013D  318E  2652  3180   	fcall	_TMR1_SetInterruptHandler
 10249  0140                     l5630:	
 10250                           
 10251                           ;main.c: 126:     INT_SetInterruptHandler(sw1_EXT);
 10252  0140  30CA               	movlw	low _sw1_EXT
 10253  0141  0020               	movlb	0	; select bank0
 10254  0142  00CC               	movwf	INT_SetInterruptHandler@InterruptHandler
 10255  0143  3005               	movlw	high _sw1_EXT
 10256  0144  00CD               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10257  0145  318E  2646  3180   	fcall	_INT_SetInterruptHandler
 10258                           
 10259                           ;main.c: 128:     while (running)
 10260  0148  2A24               	goto	l784
 10261  0149                     l5632:	
 10262                           
 10263                           ;main.c: 129:     {;main.c: 131:         if(pmon) {
 10264  0149  0836               	movf	_pmon,w
 10265  014A  1903               	btfsc	3,2
 10266  014B  294D               	goto	u3271
 10267  014C  294E               	goto	u3270
 10268  014D                     u3271:	
 10269  014D  29F7               	goto	l786
 10270  014E                     u3270:	
 10271  014E                     l5634:	
 10272                           
 10273                           ;main.c: 132:             (INTCONbits.GIE = 0);
 10274  014E  138B               	bcf	11,7	;volatile
 10275  014F                     l5636:	
 10276                           
 10277                           ;main.c: 134:             if(last5s >= pmon) {
 10278  014F  0836               	movf	_pmon,w
 10279  0150  023E               	subwf	_last5s,w	;volatile
 10280  0151  1C03               	skipc
 10281  0152  2954               	goto	u3281
 10282  0153  2955               	goto	u3280
 10283  0154                     u3281:	
 10284  0154  29F6               	goto	l787
 10285  0155                     u3280:	
 10286  0155                     l5638:	
 10287                           
 10288                           ;main.c: 135:                 last5s = 0;
 10289  0155  01BE               	clrf	_last5s	;volatile
 10290  0156                     l5640:	
 10291                           
 10292                           ;main.c: 136:                (INTCONbits.GIE = 1);
 10293  0156  178B               	bsf	11,7	;volatile
 10294  0157                     l5642:	
 10295                           
 10296                           ;main.c: 139:                 __nop();
 10297  0157  0000               	nop
 10298  0158                     l5644:	
 10299                           
 10300                           ;main.c: 140:                 temp = tsttc();
 10301  0158  3182  222B  3180   	fcall	_tsttc
 10302  015B  0020               	movlb	0	; select bank0
 10303  015C  00DD               	movwf	??_main
 10304  015D  085D               	movf	??_main,w
 10305  015E  00B5               	movwf	_temp
 10306  015F                     l5646:	
 10307                           
 10308                           ;main.c: 141:                 __nop();
 10309  015F  0000               	nop
 10310  0160                     l5648:	
 10311                           
 10312                           ;main.c: 144:                 lum_bin = (ADC_read() >> 8);
 10313  0160  3187  2794  3180   	fcall	_ADC_read
 10314  0163  0020               	movlb	0	; select bank0
 10315  0164  084F               	movf	?_ADC_read+1,w
 10316  0165  00DD               	movwf	??_main
 10317  0166  085D               	movf	??_main,w
 10318  0167  00B3               	movwf	_lum_bin
 10319  0168                     l5650:	
 10320                           
 10321                           ;main.c: 145:                 LED_bin(lum_bin);
 10322  0168  0833               	movf	_lum_bin,w
 10323  0169  00DD               	movwf	??_main
 10324  016A  01DE               	clrf	??_main+1
 10325  016B  085D               	movf	??_main,w
 10326  016C  00CC               	movwf	LED_bin@value
 10327  016D  085E               	movf	??_main+1,w
 10328  016E  00CD               	movwf	LED_bin@value+1
 10329  016F  3187  277A  3180   	fcall	_LED_bin
 10330  0172                     l5652:	
 10331                           
 10332                           ;main.c: 148:                 if(( (lum_bin > alal)) && alaf) {
 10333  0172  0020               	movlb	0	; select bank0
 10334  0173  0833               	movf	_lum_bin,w
 10335  0174  0232               	subwf	_alal,w
 10336  0175  1803               	skipnc
 10337  0176  2978               	goto	u3291
 10338  0177  2979               	goto	u3290
 10339  0178                     u3291:	
 10340  0178  297F               	goto	l788
 10341  0179                     u3290:	
 10342  0179                     l5654:	
 10343  0179  0831               	movf	_alaf,w
 10344  017A  1903               	btfsc	3,2
 10345  017B  297D               	goto	u3301
 10346  017C  297E               	goto	u3300
 10347  017D                     u3301:	
 10348  017D  297F               	goto	l788
 10349  017E                     u3300:	
 10350  017E                     l5656:	
 10351                           
 10352                           ;main.c: 150:                     alarm = 1;}
 10353  017E  14FD               	bsf	_alarm/(0+8),_alarm& (0+7)	;volatile
 10354  017F                     l788:	
 10355                           
 10356                           ;main.c: 153:                 if(alarm){
 10357  017F  1CFD               	btfss	_alarm/(0+8),_alarm& (0+7)	;volatile
 10358  0180  2982               	goto	u3311
 10359  0181  2983               	goto	u3310
 10360  0182                     u3311:	
 10361  0182  2991               	goto	l5662
 10362  0183                     u3310:	
 10363  0183                     l5658:	
 10364                           
 10365                           ;main.c: 154:                     duty_cycle++;
 10366  0183  3001               	movlw	1
 10367  0184  00DD               	movwf	??_main
 10368  0185  085D               	movf	??_main,w
 10369  0186  07BC               	addwf	_duty_cycle,f	;volatile
 10370  0187                     l5660:	
 10371                           
 10372                           ;main.c: 155:                     PWM6_LoadDutyValue(duty_cycle);
 10373  0187  083C               	movf	_duty_cycle,w	;volatile
 10374  0188  00DD               	movwf	??_main
 10375  0189  01DE               	clrf	??_main+1
 10376  018A  085D               	movf	??_main,w
 10377  018B  00CC               	movwf	PWM6_LoadDutyValue@dutyValue
 10378  018C  085E               	movf	??_main+1,w
 10379  018D  00CD               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10380  018E  3187  27AE  3180   	fcall	_PWM6_LoadDutyValue
 10381  0191                     l5662:	
 10382                           
 10383                           ;main.c: 162:                 if (temp != read_ring(nreg_pt, nreg, nreg_init, 0, 3) || l
      +                          um_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10384  0191  0020               	movlb	0	; select bank0
 10385  0192  0837               	movf	_nreg,w
 10386  0193  00DD               	movwf	??_main
 10387  0194  085D               	movf	??_main,w
 10388  0195  00D0               	movwf	read_ring@nreg
 10389  0196  0847               	movf	_nreg_init,w
 10390  0197  00DE               	movwf	??_main+1
 10391  0198  085E               	movf	??_main+1,w
 10392  0199  00D1               	movwf	read_ring@nreg_init
 10393  019A  01D2               	clrf	read_ring@index
 10394  019B  3003               	movlw	3
 10395  019C  00DF               	movwf	??_main+2
 10396  019D  085F               	movf	??_main+2,w
 10397  019E  00D3               	movwf	read_ring@subindex
 10398  019F  0848               	movf	_nreg_pt,w
 10399  01A0  3185  2558  3180   	fcall	_read_ring
 10400  01A3  0020               	movlb	0	; select bank0
 10401  01A4  0635               	xorwf	_temp,w
 10402  01A5  1D03               	skipz
 10403  01A6  29A8               	goto	u3321
 10404  01A7  29A9               	goto	u3320
 10405  01A8                     u3321:	
 10406  01A8  29C0               	goto	l792
 10407  01A9                     u3320:	
 10408  01A9                     l5664:	
 10409  01A9  0837               	movf	_nreg,w
 10410  01AA  00DD               	movwf	??_main
 10411  01AB  085D               	movf	??_main,w
 10412  01AC  00D0               	movwf	read_ring@nreg
 10413  01AD  0847               	movf	_nreg_init,w
 10414  01AE  00DE               	movwf	??_main+1
 10415  01AF  085E               	movf	??_main+1,w
 10416  01B0  00D1               	movwf	read_ring@nreg_init
 10417  01B1  01D2               	clrf	read_ring@index
 10418  01B2  3004               	movlw	4
 10419  01B3  00DF               	movwf	??_main+2
 10420  01B4  085F               	movf	??_main+2,w
 10421  01B5  00D3               	movwf	read_ring@subindex
 10422  01B6  0848               	movf	_nreg_pt,w
 10423  01B7  3185  2558  3180   	fcall	_read_ring
 10424  01BA  0020               	movlb	0	; select bank0
 10425  01BB  0633               	xorwf	_lum_bin,w
 10426  01BC  1903               	skipnz
 10427  01BD  29BF               	goto	u3331
 10428  01BE  29C0               	goto	u3330
 10429  01BF                     u3331:	
 10430  01BF  29F7               	goto	l786
 10431  01C0                     u3330:	
 10432  01C0                     l792:	
 10433                           
 10434                           ;main.c: 163:                     (INTCONbits.GIE = 0);
 10435  01C0  138B               	bcf	11,7	;volatile
 10436  01C1                     l5666:	
 10437                           
 10438                           ;main.c: 164:                     ring_byte[0] = clkh;
 10439  01C1  0841               	movf	_clkh,w	;volatile
 10440  01C2  00DD               	movwf	??_main
 10441  01C3  085D               	movf	??_main,w
 10442  01C4  00C2               	movwf	_ring_byte
 10443                           
 10444                           ;main.c: 165:                     ring_byte[1] = clkm;
 10445  01C5  0840               	movf	_clkm,w	;volatile
 10446  01C6  00DD               	movwf	??_main
 10447  01C7  085D               	movf	??_main,w
 10448  01C8  00C3               	movwf	_ring_byte+1
 10449                           
 10450                           ;main.c: 166:                     ring_byte[2] = seg;
 10451  01C9  083F               	movf	_seg,w	;volatile
 10452  01CA  00DD               	movwf	??_main
 10453  01CB  085D               	movf	??_main,w
 10454  01CC  00C4               	movwf	_ring_byte+2
 10455  01CD                     l5668:	
 10456                           
 10457                           ;main.c: 167:                     (INTCONbits.GIE = 1);
 10458  01CD  178B               	bsf	11,7	;volatile
 10459                           
 10460                           ;main.c: 168:                     ring_byte[3] = temp;
 10461  01CE  0835               	movf	_temp,w
 10462  01CF  00DD               	movwf	??_main
 10463  01D0  085D               	movf	??_main,w
 10464  01D1  00C5               	movwf	_ring_byte+3
 10465                           
 10466                           ;main.c: 169:                     ring_byte[4] = lum_bin;
 10467  01D2  0833               	movf	_lum_bin,w
 10468  01D3  00DD               	movwf	??_main
 10469  01D4  085D               	movf	??_main,w
 10470  01D5  00C6               	movwf	_ring_byte+4
 10471  01D6                     l5670:	
 10472                           
 10473                           ;main.c: 170:                     push_ring(&nreg_pt, nreg, &nreg_init, ring_byte);
 10474  01D6  0837               	movf	_nreg,w
 10475  01D7  00DD               	movwf	??_main
 10476  01D8  085D               	movf	??_main,w
 10477  01D9  00D6               	movwf	push_ring@nreg
 10478  01DA  3047               	movlw	(low (_nreg_init| 0))& (0+255)
 10479  01DB  00DE               	movwf	??_main+1
 10480  01DC  085E               	movf	??_main+1,w
 10481  01DD  00D7               	movwf	push_ring@nreg_init
 10482  01DE  3042               	movlw	(low (_ring_byte| 0))& (0+255)
 10483  01DF  00DF               	movwf	??_main+2
 10484  01E0  085F               	movf	??_main+2,w
 10485  01E1  00D8               	movwf	push_ring@ring_byte
 10486  01E2  3048               	movlw	(low (_nreg_pt| 0))& (0+255)
 10487  01E3  3185  2511  3180   	fcall	_push_ring
 10488  01E6                     l5672:	
 10489                           
 10490                           ;main.c: 173:                     DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt);
 10491  01E6  30F9               	movlw	249
 10492  01E7  0020               	movlb	0	; select bank0
 10493  01E8  00D2               	movwf	DATAEE_WriteByte@bAdd
 10494  01E9  30F0               	movlw	240
 10495  01EA  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10496  01EB  0848               	movf	_nreg_pt,w
 10497  01EC  00DD               	movwf	??_main
 10498  01ED  085D               	movf	??_main,w
 10499  01EE  00D4               	movwf	DATAEE_WriteByte@bData
 10500  01EF  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10501  01F2                     l5674:	
 10502                           
 10503                           ;main.c: 174:                     cksum_w();
 10504  01F2  318F  272D  3180   	fcall	_cksum_w
 10505  01F5  29F7               	goto	l786
 10506  01F6                     l787:	
 10507                           ;main.c: 177:             else
 10508                           
 10509                           
 10510                           ;main.c: 178:                 (INTCONbits.GIE = 1);
 10511  01F6  178B               	bsf	11,7	;volatile
 10512  01F7                     l786:	
 10513                           ;main.c: 179:         }
 10514                           
 10515                           
 10516                           ;main.c: 182:         (INTCONbits.GIE = 0);
 10517  01F7  138B               	bcf	11,7	;volatile
 10518  01F8                     l5676:	
 10519                           
 10520                           ;main.c: 183:         if (last1m >= 1) {
 10521  01F8  0020               	movlb	0	; select bank0
 10522  01F9  083D               	movf	_last1m,w	;volatile
 10523  01FA  1903               	btfsc	3,2
 10524  01FB  29FD               	goto	u3341
 10525  01FC  29FE               	goto	u3340
 10526  01FD                     u3341:	
 10527  01FD  2A23               	goto	l794
 10528  01FE                     u3340:	
 10529  01FE                     l5678:	
 10530                           
 10531                           ;main.c: 185:             last1m = 0;
 10532  01FE  01BD               	clrf	_last1m	;volatile
 10533  01FF                     l5680:	
 10534                           
 10535                           ;main.c: 186:             aux = clkh;
 10536  01FF  0841               	movf	_clkh,w	;volatile
 10537  0200  00DD               	movwf	??_main
 10538  0201  085D               	movf	??_main,w
 10539  0202  00AF               	movwf	_aux
 10540  0203                     l5682:	
 10541                           
 10542                           ;main.c: 187:             aux1 = clkm;
 10543  0203  0840               	movf	_clkm,w	;volatile
 10544  0204  00DD               	movwf	??_main
 10545  0205  085D               	movf	??_main,w
 10546  0206  00AE               	movwf	_aux1
 10547  0207                     l5684:	
 10548                           
 10549                           ;main.c: 188:             (INTCONbits.GIE = 1);
 10550  0207  178B               	bsf	11,7	;volatile
 10551  0208                     l5686:	
 10552                           
 10553                           ;main.c: 189:             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10554  0208  30F6               	movlw	246
 10555  0209  00D2               	movwf	DATAEE_WriteByte@bAdd
 10556  020A  30F0               	movlw	240
 10557  020B  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10558  020C  082F               	movf	_aux,w
 10559  020D  00DD               	movwf	??_main
 10560  020E  085D               	movf	??_main,w
 10561  020F  00D4               	movwf	DATAEE_WriteByte@bData
 10562  0210  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10563  0213                     l5688:	
 10564                           
 10565                           ;main.c: 190:             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10566  0213  30F7               	movlw	247
 10567  0214  0020               	movlb	0	; select bank0
 10568  0215  00D2               	movwf	DATAEE_WriteByte@bAdd
 10569  0216  30F0               	movlw	240
 10570  0217  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 10571  0218  082E               	movf	_aux1,w
 10572  0219  00DD               	movwf	??_main
 10573  021A  085D               	movf	??_main,w
 10574  021B  00D4               	movwf	DATAEE_WriteByte@bData
 10575  021C  3186  267C  3180   	fcall	_DATAEE_WriteByte
 10576  021F                     l5690:	
 10577                           
 10578                           ;main.c: 191:             cksum_w();
 10579  021F  318F  272D  3180   	fcall	_cksum_w
 10580                           
 10581                           ;main.c: 192:         }
 10582  0222  2A24               	goto	l784
 10583  0223                     l794:	
 10584                           ;main.c: 193:         else
 10585                           
 10586                           
 10587                           ;main.c: 194:             (INTCONbits.GIE = 1);
 10588  0223  178B               	bsf	11,7	;volatile
 10589  0224                     l784:	
 10590                           ;main.c: 195:     }
 10591                           
 10592                           
 10593                           ;main.c: 128:     while (running)
 10594  0224  0020               	movlb	0	; select bank0
 10595  0225  1860               	btfsc	_running/(0+8),_running& (0+7)
 10596  0226  2A28               	goto	u3351
 10597  0227  2A29               	goto	u3350
 10598  0228                     u3351:	
 10599  0228  2949               	goto	l5632
 10600  0229                     u3350:	
 10601  0229                     l797:	
 10602  0229  3180  284F         	ljmp	start
 10603  022B                     __end_of_main:	
 10604                           
 10605                           	psect	text1
 10606  022B                     __ptext1:	
 10607 ;; *************** function _tsttc *****************
 10608 ;; Defined at:
 10609 ;;		line 15 in file "I2C/i2c.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;		None
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;  value           1    6[BANK0 ] unsigned char 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      unsigned char 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0, pclath, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        2 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    7
 10630 ;; This function calls:
 10631 ;;		_ReadI2C
 10632 ;;		_WriteI2C
 10633 ;; This function is called by:
 10634 ;;		_main
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function _tsttc
 10640  022B                     _tsttc:	
 10641  022B                     l1342:	
 10642                           ;incstack = 0
 10643                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 10644                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 10645                           
 10646  022B                     l5406:	
 10647                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10648                           
 10649  022B  0023               	movlb	3	; select bank3
 10650  022C  0C0F               	rrf	15,w	;volatile
 10651  022D  0C89               	rrf	9,f
 10652  022E  3901               	andlw	1
 10653  022F  0020               	movlb	0	; select bank0
 10654  0230  00CE               	movwf	??_tsttc
 10655  0231  0023               	movlb	3	; select bank3
 10656  0232  0811               	movf	17,w	;volatile
 10657  0233  391F               	andlw	31
 10658  0234  0020               	movlb	0	; select bank0
 10659  0235  044E               	iorwf	??_tsttc,w
 10660  0236  1D03               	btfss	3,2
 10661  0237  2A39               	goto	u2811
 10662  0238  2A3A               	goto	u2810
 10663  0239                     u2811:	
 10664  0239  2A2B               	goto	l5406
 10665  023A                     u2810:	
 10666  023A                     l1345:	
 10667                           
 10668                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 10669  023A  0023               	movlb	3	; select bank3
 10670  023B  1411               	bsf	17,0	;volatile
 10671  023C                     l1346:	
 10672  023C  1811               	btfsc	17,0	;volatile
 10673  023D  2A3F               	goto	u2821
 10674  023E  2A40               	goto	u2820
 10675  023F                     u2821:	
 10676  023F  2A3C               	goto	l1346
 10677  0240                     u2820:	
 10678  0240                     l5408:	
 10679  0240  0023               	movlb	3	; select bank3
 10680  0241  0C0F               	rrf	15,w	;volatile
 10681  0242  0C89               	rrf	9,f
 10682  0243  3901               	andlw	1
 10683  0244  0020               	movlb	0	; select bank0
 10684  0245  00CE               	movwf	??_tsttc
 10685  0246  0023               	movlb	3	; select bank3
 10686  0247  0811               	movf	17,w	;volatile
 10687  0248  391F               	andlw	31
 10688  0249  0020               	movlb	0	; select bank0
 10689  024A  044E               	iorwf	??_tsttc,w
 10690  024B  1D03               	btfss	3,2
 10691  024C  2A4E               	goto	u2831
 10692  024D  2A4F               	goto	u2830
 10693  024E                     u2831:	
 10694  024E  2A40               	goto	l5408
 10695  024F                     u2830:	
 10696  024F                     l5410:	
 10697                           
 10698                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10699  024F  309A               	movlw	154
 10700  0250  3183  237B  3182   	fcall	_WriteI2C
 10701  0253                     l5412:	
 10702  0253  0023               	movlb	3	; select bank3
 10703  0254  0C0F               	rrf	15,w	;volatile
 10704  0255  0C89               	rrf	9,f
 10705  0256  3901               	andlw	1
 10706  0257  0020               	movlb	0	; select bank0
 10707  0258  00CE               	movwf	??_tsttc
 10708  0259  0023               	movlb	3	; select bank3
 10709  025A  0811               	movf	17,w	;volatile
 10710  025B  391F               	andlw	31
 10711  025C  0020               	movlb	0	; select bank0
 10712  025D  044E               	iorwf	??_tsttc,w
 10713  025E  1D03               	btfss	3,2
 10714  025F  2A61               	goto	u2841
 10715  0260  2A62               	goto	u2840
 10716  0261                     u2841:	
 10717  0261  2A53               	goto	l5412
 10718  0262                     u2840:	
 10719  0262                     l5414:	
 10720                           
 10721                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10722  0262  3001               	movlw	1
 10723  0263  3183  237B  3182   	fcall	_WriteI2C
 10724  0266                     l5416:	
 10725  0266  0023               	movlb	3	; select bank3
 10726  0267  0C0F               	rrf	15,w	;volatile
 10727  0268  0C89               	rrf	9,f
 10728  0269  3901               	andlw	1
 10729  026A  0020               	movlb	0	; select bank0
 10730  026B  00CE               	movwf	??_tsttc
 10731  026C  0023               	movlb	3	; select bank3
 10732  026D  0811               	movf	17,w	;volatile
 10733  026E  391F               	andlw	31
 10734  026F  0020               	movlb	0	; select bank0
 10735  0270  044E               	iorwf	??_tsttc,w
 10736  0271  1D03               	btfss	3,2
 10737  0272  2A74               	goto	u2851
 10738  0273  2A75               	goto	u2850
 10739  0274                     u2851:	
 10740  0274  2A66               	goto	l5416
 10741  0275                     u2850:	
 10742  0275                     l1357:	
 10743                           
 10744                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 10745  0275  0023               	movlb	3	; select bank3
 10746  0276  1491               	bsf	17,1	;volatile
 10747  0277                     l1358:	
 10748  0277  1891               	btfsc	17,1	;volatile
 10749  0278  2A7A               	goto	u2861
 10750  0279  2A7B               	goto	u2860
 10751  027A                     u2861:	
 10752  027A  2A77               	goto	l1358
 10753  027B                     u2860:	
 10754  027B                     l5418:	
 10755  027B  0023               	movlb	3	; select bank3
 10756  027C  0C0F               	rrf	15,w	;volatile
 10757  027D  0C89               	rrf	9,f
 10758  027E  3901               	andlw	1
 10759  027F  0020               	movlb	0	; select bank0
 10760  0280  00CE               	movwf	??_tsttc
 10761  0281  0023               	movlb	3	; select bank3
 10762  0282  0811               	movf	17,w	;volatile
 10763  0283  391F               	andlw	31
 10764  0284  0020               	movlb	0	; select bank0
 10765  0285  044E               	iorwf	??_tsttc,w
 10766  0286  1D03               	btfss	3,2
 10767  0287  2A89               	goto	u2871
 10768  0288  2A8A               	goto	u2870
 10769  0289                     u2871:	
 10770  0289  2A7B               	goto	l5418
 10771  028A                     u2870:	
 10772  028A                     l5420:	
 10773                           
 10774                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10775  028A  309B               	movlw	155
 10776  028B  3183  237B  3182   	fcall	_WriteI2C
 10777  028E                     l5422:	
 10778  028E  0023               	movlb	3	; select bank3
 10779  028F  0C0F               	rrf	15,w	;volatile
 10780  0290  0C89               	rrf	9,f
 10781  0291  3901               	andlw	1
 10782  0292  0020               	movlb	0	; select bank0
 10783  0293  00CE               	movwf	??_tsttc
 10784  0294  0023               	movlb	3	; select bank3
 10785  0295  0811               	movf	17,w	;volatile
 10786  0296  391F               	andlw	31
 10787  0297  0020               	movlb	0	; select bank0
 10788  0298  044E               	iorwf	??_tsttc,w
 10789  0299  1D03               	btfss	3,2
 10790  029A  2A9C               	goto	u2881
 10791  029B  2A9D               	goto	u2880
 10792  029C                     u2881:	
 10793  029C  2A8E               	goto	l5422
 10794  029D                     u2880:	
 10795  029D                     l5424:	
 10796                           
 10797                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 10798  029D  3187  2704  3182   	fcall	_ReadI2C
 10799  02A0  0020               	movlb	0	; select bank0
 10800  02A1  00CE               	movwf	??_tsttc
 10801  02A2  084E               	movf	??_tsttc,w
 10802  02A3  00CF               	movwf	tsttc@value
 10803  02A4                     l5426:	
 10804  02A4  0023               	movlb	3	; select bank3
 10805  02A5  0C0F               	rrf	15,w	;volatile
 10806  02A6  0C89               	rrf	9,f
 10807  02A7  3901               	andlw	1
 10808  02A8  0020               	movlb	0	; select bank0
 10809  02A9  00CE               	movwf	??_tsttc
 10810  02AA  0023               	movlb	3	; select bank3
 10811  02AB  0811               	movf	17,w	;volatile
 10812  02AC  391F               	andlw	31
 10813  02AD  0020               	movlb	0	; select bank0
 10814  02AE  044E               	iorwf	??_tsttc,w
 10815  02AF  1D03               	btfss	3,2
 10816  02B0  2AB2               	goto	u2891
 10817  02B1  2AB3               	goto	u2890
 10818  02B2                     u2891:	
 10819  02B2  2AA4               	goto	l5426
 10820  02B3                     u2890:	
 10821  02B3                     l1369:	
 10822                           
 10823                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10824  02B3  0023               	movlb	3	; select bank3
 10825  02B4  1691               	bsf	17,5	;volatile
 10826  02B5  1611               	bsf	17,4	;volatile
 10827  02B6                     l1370:	
 10828  02B6  1A11               	btfsc	17,4	;volatile
 10829  02B7  2AB9               	goto	u2901
 10830  02B8  2ABA               	goto	u2900
 10831  02B9                     u2901:	
 10832  02B9  2AB6               	goto	l1370
 10833  02BA                     u2900:	
 10834  02BA                     l5428:	
 10835  02BA  0023               	movlb	3	; select bank3
 10836  02BB  0C0F               	rrf	15,w	;volatile
 10837  02BC  0C89               	rrf	9,f
 10838  02BD  3901               	andlw	1
 10839  02BE  0020               	movlb	0	; select bank0
 10840  02BF  00CE               	movwf	??_tsttc
 10841  02C0  0023               	movlb	3	; select bank3
 10842  02C1  0811               	movf	17,w	;volatile
 10843  02C2  391F               	andlw	31
 10844  02C3  0020               	movlb	0	; select bank0
 10845  02C4  044E               	iorwf	??_tsttc,w
 10846  02C5  1D03               	btfss	3,2
 10847  02C6  2AC8               	goto	u2911
 10848  02C7  2AC9               	goto	u2910
 10849  02C8                     u2911:	
 10850  02C8  2ABA               	goto	l5428
 10851  02C9                     u2910:	
 10852  02C9                     l1375:	
 10853                           
 10854                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10855  02C9  0023               	movlb	3	; select bank3
 10856  02CA  1511               	bsf	17,2	;volatile
 10857  02CB                     l1376:	
 10858  02CB  1911               	btfsc	17,2	;volatile
 10859  02CC  2ACE               	goto	u2921
 10860  02CD  2ACF               	goto	u2920
 10861  02CE                     u2921:	
 10862  02CE  2ACB               	goto	l1376
 10863  02CF                     u2920:	
 10864  02CF                     l1378:	
 10865                           
 10866                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 10867  02CF  0020               	movlb	0	; select bank0
 10868  02D0  1F4F               	btfss	tsttc@value,6
 10869  02D1  2AD3               	goto	u2931
 10870  02D2  2AD4               	goto	u2930
 10871  02D3                     u2931:	
 10872  02D3  2A2B               	goto	l1342
 10873  02D4                     u2930:	
 10874  02D4                     l5430:	
 10875  02D4  0023               	movlb	3	; select bank3
 10876  02D5  0C0F               	rrf	15,w	;volatile
 10877  02D6  0C89               	rrf	9,f
 10878  02D7  3901               	andlw	1
 10879  02D8  0020               	movlb	0	; select bank0
 10880  02D9  00CE               	movwf	??_tsttc
 10881  02DA  0023               	movlb	3	; select bank3
 10882  02DB  0811               	movf	17,w	;volatile
 10883  02DC  391F               	andlw	31
 10884  02DD  0020               	movlb	0	; select bank0
 10885  02DE  044E               	iorwf	??_tsttc,w
 10886  02DF  1D03               	btfss	3,2
 10887  02E0  2AE2               	goto	u2941
 10888  02E1  2AE3               	goto	u2940
 10889  02E2                     u2941:	
 10890  02E2  2AD4               	goto	l5430
 10891  02E3                     u2940:	
 10892  02E3                     l1382:	
 10893                           
 10894                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 10895  02E3  0023               	movlb	3	; select bank3
 10896  02E4  1411               	bsf	17,0	;volatile
 10897  02E5                     l1383:	
 10898  02E5  1811               	btfsc	17,0	;volatile
 10899  02E6  2AE8               	goto	u2951
 10900  02E7  2AE9               	goto	u2950
 10901  02E8                     u2951:	
 10902  02E8  2AE5               	goto	l1383
 10903  02E9                     u2950:	
 10904  02E9                     l5432:	
 10905  02E9  0023               	movlb	3	; select bank3
 10906  02EA  0C0F               	rrf	15,w	;volatile
 10907  02EB  0C89               	rrf	9,f
 10908  02EC  3901               	andlw	1
 10909  02ED  0020               	movlb	0	; select bank0
 10910  02EE  00CE               	movwf	??_tsttc
 10911  02EF  0023               	movlb	3	; select bank3
 10912  02F0  0811               	movf	17,w	;volatile
 10913  02F1  391F               	andlw	31
 10914  02F2  0020               	movlb	0	; select bank0
 10915  02F3  044E               	iorwf	??_tsttc,w
 10916  02F4  1D03               	btfss	3,2
 10917  02F5  2AF7               	goto	u2961
 10918  02F6  2AF8               	goto	u2960
 10919  02F7                     u2961:	
 10920  02F7  2AE9               	goto	l5432
 10921  02F8                     u2960:	
 10922  02F8                     l5434:	
 10923                           
 10924                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10925  02F8  309A               	movlw	154
 10926  02F9  3183  237B  3182   	fcall	_WriteI2C
 10927  02FC                     l5436:	
 10928  02FC  0023               	movlb	3	; select bank3
 10929  02FD  0C0F               	rrf	15,w	;volatile
 10930  02FE  0C89               	rrf	9,f
 10931  02FF  3901               	andlw	1
 10932  0300  0020               	movlb	0	; select bank0
 10933  0301  00CE               	movwf	??_tsttc
 10934  0302  0023               	movlb	3	; select bank3
 10935  0303  0811               	movf	17,w	;volatile
 10936  0304  391F               	andlw	31
 10937  0305  0020               	movlb	0	; select bank0
 10938  0306  044E               	iorwf	??_tsttc,w
 10939  0307  1D03               	btfss	3,2
 10940  0308  2B0A               	goto	u2971
 10941  0309  2B0B               	goto	u2970
 10942  030A                     u2971:	
 10943  030A  2AFC               	goto	l5436
 10944  030B                     u2970:	
 10945  030B                     l5438:	
 10946                           
 10947                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10948  030B  3000               	movlw	0
 10949  030C  3183  237B  3182   	fcall	_WriteI2C
 10950  030F                     l5440:	
 10951  030F  0023               	movlb	3	; select bank3
 10952  0310  0C0F               	rrf	15,w	;volatile
 10953  0311  0C89               	rrf	9,f
 10954  0312  3901               	andlw	1
 10955  0313  0020               	movlb	0	; select bank0
 10956  0314  00CE               	movwf	??_tsttc
 10957  0315  0023               	movlb	3	; select bank3
 10958  0316  0811               	movf	17,w	;volatile
 10959  0317  391F               	andlw	31
 10960  0318  0020               	movlb	0	; select bank0
 10961  0319  044E               	iorwf	??_tsttc,w
 10962  031A  1D03               	btfss	3,2
 10963  031B  2B1D               	goto	u2981
 10964  031C  2B1E               	goto	u2980
 10965  031D                     u2981:	
 10966  031D  2B0F               	goto	l5440
 10967  031E                     u2980:	
 10968  031E                     l1394:	
 10969                           
 10970                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 10971  031E  0023               	movlb	3	; select bank3
 10972  031F  1491               	bsf	17,1	;volatile
 10973  0320                     l1395:	
 10974  0320  1891               	btfsc	17,1	;volatile
 10975  0321  2B23               	goto	u2991
 10976  0322  2B24               	goto	u2990
 10977  0323                     u2991:	
 10978  0323  2B20               	goto	l1395
 10979  0324                     u2990:	
 10980  0324                     l5442:	
 10981  0324  0023               	movlb	3	; select bank3
 10982  0325  0C0F               	rrf	15,w	;volatile
 10983  0326  0C89               	rrf	9,f
 10984  0327  3901               	andlw	1
 10985  0328  0020               	movlb	0	; select bank0
 10986  0329  00CE               	movwf	??_tsttc
 10987  032A  0023               	movlb	3	; select bank3
 10988  032B  0811               	movf	17,w	;volatile
 10989  032C  391F               	andlw	31
 10990  032D  0020               	movlb	0	; select bank0
 10991  032E  044E               	iorwf	??_tsttc,w
 10992  032F  1D03               	btfss	3,2
 10993  0330  2B32               	goto	u3001
 10994  0331  2B33               	goto	u3000
 10995  0332                     u3001:	
 10996  0332  2B24               	goto	l5442
 10997  0333                     u3000:	
 10998  0333                     l5444:	
 10999                           
 11000                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11001  0333  309B               	movlw	155
 11002  0334  3183  237B  3182   	fcall	_WriteI2C
 11003  0337                     l5446:	
 11004  0337  0023               	movlb	3	; select bank3
 11005  0338  0C0F               	rrf	15,w	;volatile
 11006  0339  0C89               	rrf	9,f
 11007  033A  3901               	andlw	1
 11008  033B  0020               	movlb	0	; select bank0
 11009  033C  00CE               	movwf	??_tsttc
 11010  033D  0023               	movlb	3	; select bank3
 11011  033E  0811               	movf	17,w	;volatile
 11012  033F  391F               	andlw	31
 11013  0340  0020               	movlb	0	; select bank0
 11014  0341  044E               	iorwf	??_tsttc,w
 11015  0342  1D03               	btfss	3,2
 11016  0343  2B45               	goto	u3011
 11017  0344  2B46               	goto	u3010
 11018  0345                     u3011:	
 11019  0345  2B37               	goto	l5446
 11020  0346                     u3010:	
 11021  0346                     l5448:	
 11022                           
 11023                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11024  0346  3187  2704  3182   	fcall	_ReadI2C
 11025  0349  0020               	movlb	0	; select bank0
 11026  034A  00CE               	movwf	??_tsttc
 11027  034B  084E               	movf	??_tsttc,w
 11028  034C  00CF               	movwf	tsttc@value
 11029  034D                     l5450:	
 11030  034D  0023               	movlb	3	; select bank3
 11031  034E  0C0F               	rrf	15,w	;volatile
 11032  034F  0C89               	rrf	9,f
 11033  0350  3901               	andlw	1
 11034  0351  0020               	movlb	0	; select bank0
 11035  0352  00CE               	movwf	??_tsttc
 11036  0353  0023               	movlb	3	; select bank3
 11037  0354  0811               	movf	17,w	;volatile
 11038  0355  391F               	andlw	31
 11039  0356  0020               	movlb	0	; select bank0
 11040  0357  044E               	iorwf	??_tsttc,w
 11041  0358  1D03               	btfss	3,2
 11042  0359  2B5B               	goto	u3021
 11043  035A  2B5C               	goto	u3020
 11044  035B                     u3021:	
 11045  035B  2B4D               	goto	l5450
 11046  035C                     u3020:	
 11047  035C                     l1406:	
 11048                           
 11049                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11050  035C  0023               	movlb	3	; select bank3
 11051  035D  1691               	bsf	17,5	;volatile
 11052  035E  1611               	bsf	17,4	;volatile
 11053  035F                     l1407:	
 11054  035F  1A11               	btfsc	17,4	;volatile
 11055  0360  2B62               	goto	u3031
 11056  0361  2B63               	goto	u3030
 11057  0362                     u3031:	
 11058  0362  2B5F               	goto	l1407
 11059  0363                     u3030:	
 11060  0363                     l5452:	
 11061  0363  0023               	movlb	3	; select bank3
 11062  0364  0C0F               	rrf	15,w	;volatile
 11063  0365  0C89               	rrf	9,f
 11064  0366  3901               	andlw	1
 11065  0367  0020               	movlb	0	; select bank0
 11066  0368  00CE               	movwf	??_tsttc
 11067  0369  0023               	movlb	3	; select bank3
 11068  036A  0811               	movf	17,w	;volatile
 11069  036B  391F               	andlw	31
 11070  036C  0020               	movlb	0	; select bank0
 11071  036D  044E               	iorwf	??_tsttc,w
 11072  036E  1D03               	btfss	3,2
 11073  036F  2B71               	goto	u3041
 11074  0370  2B72               	goto	u3040
 11075  0371                     u3041:	
 11076  0371  2B63               	goto	l5452
 11077  0372                     u3040:	
 11078  0372                     l1412:	
 11079                           
 11080                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11081  0372  0023               	movlb	3	; select bank3
 11082  0373  1511               	bsf	17,2	;volatile
 11083  0374                     l1413:	
 11084  0374  1911               	btfsc	17,2	;volatile
 11085  0375  2B77               	goto	u3051
 11086  0376  2B78               	goto	u3050
 11087  0377                     u3051:	
 11088  0377  2B74               	goto	l1413
 11089  0378                     u3050:	
 11090  0378                     l5454:	
 11091                           
 11092                           ;I2C/i2c.c: 42:  return value;
 11093  0378  0020               	movlb	0	; select bank0
 11094  0379  084F               	movf	tsttc@value,w
 11095  037A                     l1416:	
 11096  037A  0008               	return
 11097  037B                     __end_of_tsttc:	
 11098                           
 11099                           	psect	text2
 11100  037B                     __ptext2:	
 11101 ;; *************** function _WriteI2C *****************
 11102 ;; Defined at:
 11103 ;;		line 88 in file "I2C/i2c.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;  data_out        1    wreg     unsigned char 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  data_out        1    4[BANK0 ] unsigned char 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      char 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;Total ram usage:        2 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    6
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_tsttc
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           
 11132                           ;psect for function _WriteI2C
 11133  037B                     _WriteI2C:	
 11134                           
 11135                           ;incstack = 0
 11136                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11137                           ;WriteI2C@data_out stored from wreg
 11138  037B  0020               	movlb	0	; select bank0
 11139  037C  00CD               	movwf	WriteI2C@data_out
 11140  037D                     l5308:	
 11141                           
 11142                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11143  037D  084D               	movf	WriteI2C@data_out,w
 11144  037E  0023               	movlb	3	; select bank3
 11145  037F  008C               	movwf	12	;volatile
 11146  0380                     l5310:	
 11147                           
 11148                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11149  0380  1F90               	btfss	16,7	;volatile
 11150  0381  2B83               	goto	u2651
 11151  0382  2B84               	goto	u2650
 11152  0383                     u2651:	
 11153  0383  2B85               	goto	l5316
 11154  0384                     u2650:	
 11155  0384  2BD4               	goto	l1432
 11156  0385                     l5316:	
 11157                           
 11158                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11159  0385  300F               	movlw	15
 11160  0386  0510               	andwf	16,w	;volatile
 11161  0387  0020               	movlb	0	; select bank0
 11162  0388  00CC               	movwf	??_WriteI2C
 11163  0389  3008               	movlw	8
 11164  038A  064C               	xorwf	??_WriteI2C,w
 11165  038B  1903               	btfsc	3,2
 11166  038C  2B8E               	goto	u2661
 11167  038D  2B8F               	goto	u2660
 11168  038E                     u2661:	
 11169  038E  2BA8               	goto	l5328
 11170  038F                     u2660:	
 11171  038F                     l5318:	
 11172  038F  300F               	movlw	15
 11173  0390  0023               	movlb	3	; select bank3
 11174  0391  0510               	andwf	16,w	;volatile
 11175  0392  0020               	movlb	0	; select bank0
 11176  0393  00CC               	movwf	??_WriteI2C
 11177  0394  300B               	movlw	11
 11178  0395  064C               	xorwf	??_WriteI2C,w
 11179  0396  1903               	btfsc	3,2
 11180  0397  2B99               	goto	u2671
 11181  0398  2B9A               	goto	u2670
 11182  0399                     u2671:	
 11183  0399  2BA8               	goto	l5328
 11184  039A                     u2670:	
 11185  039A                     l5320:	
 11186                           
 11187                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11188  039A  0023               	movlb	3	; select bank3
 11189  039B  1610               	bsf	16,4	;volatile
 11190  039C                     l1435:	
 11191                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11192                           
 11193  039C  002E               	movlb	14	; select bank14
 11194  039D  1C0F               	btfss	15,0	;volatile
 11195  039E  2BA0               	goto	u2681
 11196  039F  2BA1               	goto	u2680
 11197  03A0                     u2681:	
 11198  03A0  2B9C               	goto	l1435
 11199  03A1                     u2680:	
 11200  03A1                     l1437:	
 11201                           
 11202                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11203  03A1  0023               	movlb	3	; select bank3
 11204  03A2  190F               	btfsc	15,2	;volatile
 11205  03A3  2BA5               	goto	u2691
 11206  03A4  2BA6               	goto	u2690
 11207  03A5                     u2691:	
 11208  03A5  2BD4               	goto	l1432
 11209  03A6                     u2690:	
 11210  03A6                     l5322:	
 11211  03A6  080F               	movf	15,w	;volatile
 11212  03A7  2BD4               	goto	l1432
 11213  03A8                     l5328:	
 11214  03A8  300F               	movlw	15
 11215  03A9  0023               	movlb	3	; select bank3
 11216  03AA  0510               	andwf	16,w	;volatile
 11217  03AB  0020               	movlb	0	; select bank0
 11218  03AC  00CC               	movwf	??_WriteI2C
 11219  03AD  3008               	movlw	8
 11220  03AE  064C               	xorwf	??_WriteI2C,w
 11221  03AF  1903               	btfsc	3,2
 11222  03B0  2BB2               	goto	u2701
 11223  03B1  2BB3               	goto	u2700
 11224  03B2                     u2701:	
 11225  03B2  2BBE               	goto	l1444
 11226  03B3                     u2700:	
 11227  03B3                     l5330:	
 11228  03B3  300F               	movlw	15
 11229  03B4  0023               	movlb	3	; select bank3
 11230  03B5  0510               	andwf	16,w	;volatile
 11231  03B6  0020               	movlb	0	; select bank0
 11232  03B7  00CC               	movwf	??_WriteI2C
 11233  03B8  300B               	movlw	11
 11234  03B9  064C               	xorwf	??_WriteI2C,w
 11235  03BA  1D03               	btfss	3,2
 11236  03BB  2BBD               	goto	u2711
 11237  03BC  2BBE               	goto	u2710
 11238  03BD                     u2711:	
 11239  03BD  2BD4               	goto	l1432
 11240  03BE                     u2710:	
 11241  03BE                     l1444:	
 11242  03BE  0023               	movlb	3	; select bank3
 11243  03BF  180F               	btfsc	15,0	;volatile
 11244  03C0  2BC2               	goto	u2721
 11245  03C1  2BC3               	goto	u2720
 11246  03C2                     u2721:	
 11247  03C2  2BBE               	goto	l1444
 11248  03C3                     u2720:	
 11249  03C3                     l5332:	
 11250  03C3  0023               	movlb	3	; select bank3
 11251  03C4  0C0F               	rrf	15,w	;volatile
 11252  03C5  0C89               	rrf	9,f
 11253  03C6  3901               	andlw	1
 11254  03C7  0020               	movlb	0	; select bank0
 11255  03C8  00CC               	movwf	??_WriteI2C
 11256  03C9  0023               	movlb	3	; select bank3
 11257  03CA  0811               	movf	17,w	;volatile
 11258  03CB  391F               	andlw	31
 11259  03CC  0020               	movlb	0	; select bank0
 11260  03CD  044C               	iorwf	??_WriteI2C,w
 11261  03CE  1D03               	btfss	3,2
 11262  03CF  2BD1               	goto	u2731
 11263  03D0  2BD2               	goto	u2730
 11264  03D1                     u2731:	
 11265  03D1  2BC3               	goto	l5332
 11266  03D2                     u2730:	
 11267  03D2                     l1449:	
 11268                           
 11269                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 11270  03D2  0023               	movlb	3	; select bank3
 11271  03D3  0811               	movf	17,w	;volatile
 11272  03D4                     l1432:	
 11273  03D4  0008               	return
 11274  03D5                     __end_of_WriteI2C:	
 11275                           
 11276                           	psect	text3
 11277  0704                     __ptext3:	
 11278 ;; *************** function _ReadI2C *****************
 11279 ;; Defined at:
 11280 ;;		line 73 in file "I2C/i2c.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;		None
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      unsigned char 
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, status,0
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;Total ram usage:        1 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    6
 11301 ;; This function calls:
 11302 ;;		Nothing
 11303 ;; This function is called by:
 11304 ;;		_tsttc
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308                           
 11309                           ;psect for function _ReadI2C
 11310  0704                     _ReadI2C:	
 11311  0704                     l5338:	
 11312                           ;incstack = 0
 11313                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11314                           
 11315                           
 11316                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11317  0704  300F               	movlw	15
 11318  0705  0023               	movlb	3	; select bank3
 11319  0706  0510               	andwf	16,w	;volatile
 11320  0707  0020               	movlb	0	; select bank0
 11321  0708  00CC               	movwf	??_ReadI2C
 11322  0709  3008               	movlw	8
 11323  070A  064C               	xorwf	??_ReadI2C,w
 11324  070B  1903               	btfsc	3,2
 11325  070C  2F0E               	goto	u2741
 11326  070D  2F0F               	goto	u2740
 11327  070E                     u2741:	
 11328  070E  2F1A               	goto	l1424
 11329  070F                     u2740:	
 11330  070F                     l5340:	
 11331  070F  300F               	movlw	15
 11332  0710  0023               	movlb	3	; select bank3
 11333  0711  0510               	andwf	16,w	;volatile
 11334  0712  0020               	movlb	0	; select bank0
 11335  0713  00CC               	movwf	??_ReadI2C
 11336  0714  300B               	movlw	11
 11337  0715  064C               	xorwf	??_ReadI2C,w
 11338  0716  1D03               	btfss	3,2
 11339  0717  2F19               	goto	u2751
 11340  0718  2F1A               	goto	u2750
 11341  0719                     u2751:	
 11342  0719  2F1C               	goto	l1425
 11343  071A                     u2750:	
 11344  071A                     l1424:	
 11345                           
 11346                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 11347  071A  0023               	movlb	3	; select bank3
 11348  071B  1591               	bsf	17,3	;volatile
 11349  071C                     l1425:	
 11350  071C  0023               	movlb	3	; select bank3
 11351  071D  1C0F               	btfss	15,0	;volatile
 11352  071E  2F20               	goto	u2761
 11353  071F  2F21               	goto	u2760
 11354  0720                     u2761:	
 11355  0720  2F1C               	goto	l1425
 11356  0721                     u2760:	
 11357  0721                     l5342:	
 11358                           
 11359                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 11360  0721  080C               	movf	12,w	;volatile
 11361  0722                     l1428:	
 11362  0722  0008               	return
 11363  0723                     __end_of_ReadI2C:	
 11364                           
 11365                           	psect	text4
 11366  0742                     __ptext4:	
 11367 ;; *************** function _reset_recv *****************
 11368 ;; Defined at:
 11369 ;;		line 45 in file "eeprom_rw.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;		None
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;  i               2   13[BANK0 ] unsigned int 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  1    wreg      void 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0, pclath, cstack
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;Total ram usage:        2 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; Hardware stack levels required when called:    7
 11390 ;; This function calls:
 11391 ;;		_DATAEE_WriteByte
 11392 ;; This function is called by:
 11393 ;;		_main
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           
 11398                           ;psect for function _reset_recv
 11399  0742                     _reset_recv:	
 11400  0742                     l5384:	
 11401                           ;incstack = 0
 11402                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11403                           
 11404                           
 11405                           ;eeprom_rw.c: 47:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11406  0742  30F5               	movlw	245
 11407  0743  0020               	movlb	0	; select bank0
 11408  0744  00D6               	movwf	reset_recv@i
 11409  0745  30F0               	movlw	240
 11410  0746  00D7               	movwf	reset_recv@i+1
 11411  0747                     l5388:	
 11412                           
 11413                           ;eeprom_rw.c: 48:         DATAEE_WriteByte(i, 0);
 11414  0747  0857               	movf	reset_recv@i+1,w
 11415  0748  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 11416  0749  0856               	movf	reset_recv@i,w
 11417  074A  00D2               	movwf	DATAEE_WriteByte@bAdd
 11418  074B  01D4               	clrf	DATAEE_WriteByte@bData
 11419  074C  3186  267C  3187   	fcall	_DATAEE_WriteByte
 11420  074F                     l5390:	
 11421  074F  3001               	movlw	1
 11422  0750  0020               	movlb	0	; select bank0
 11423  0751  07D6               	addwf	reset_recv@i,f
 11424  0752  3000               	movlw	0
 11425  0753  3DD7               	addwfc	reset_recv@i+1,f
 11426  0754                     l5392:	
 11427  0754  30F1               	movlw	241
 11428  0755  0257               	subwf	reset_recv@i+1,w
 11429  0756  3000               	movlw	0
 11430  0757  1903               	skipnz
 11431  0758  0256               	subwf	reset_recv@i,w
 11432  0759  1C03               	skipc
 11433  075A  2F5C               	goto	u2801
 11434  075B  2F5D               	goto	u2800
 11435  075C                     u2801:	
 11436  075C  2F47               	goto	l5388
 11437  075D                     u2800:	
 11438  075D                     l1488:	
 11439  075D  0008               	return
 11440  075E                     __end_of_reset_recv:	
 11441                           
 11442                           	psect	text5
 11443  0558                     __ptext5:	
 11444 ;; *************** function _read_ring *****************
 11445 ;; Defined at:
 11446 ;;		line 13 in file "eeprom_rw.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  nreg_pt         1    wreg     unsigned char 
 11449 ;;  nreg            1    7[BANK0 ] unsigned char 
 11450 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 11451 ;;  index           1    9[BANK0 ] unsigned char 
 11452 ;;  subindex        1   10[BANK0 ] unsigned char 
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 11455 ;;  absindex        1   15[BANK0 ] unsigned char 
 11456 ;;  i               1   13[BANK0 ] unsigned char 
 11457 ;; Return value:  Size  Location     Type
 11458 ;;                  1    wreg      unsigned char 
 11459 ;; Registers used:
 11460 ;;		wreg, status,2, status,0, pclath, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11466 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;Total ram usage:        9 bytes
 11471 ;; Hardware stack levels used:    1
 11472 ;; Hardware stack levels required when called:    7
 11473 ;; This function calls:
 11474 ;;		_DATAEE_ReadByte
 11475 ;;		___bmul
 11476 ;; This function is called by:
 11477 ;;		_main
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           
 11482                           ;psect for function _read_ring
 11483  0558                     _read_ring:	
 11484                           
 11485                           ;incstack = 0
 11486                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 11487                           ;read_ring@nreg_pt stored from wreg
 11488  0558  0020               	movlb	0	; select bank0
 11489  0559  00D7               	movwf	read_ring@nreg_pt
 11490  055A                     l5470:	
 11491  055A                     l5472:	
 11492                           
 11493                           ;eeprom_rw.c: 18:     if(index <= nreg && nreg_init) {
 11494  055A  0852               	movf	read_ring@index,w
 11495  055B  0250               	subwf	read_ring@nreg,w
 11496  055C  1C03               	skipc
 11497  055D  2D5F               	goto	u3071
 11498  055E  2D60               	goto	u3070
 11499  055F                     u3071:	
 11500  055F  2D8A               	goto	l5484
 11501  0560                     u3070:	
 11502  0560                     l5474:	
 11503  0560  0851               	movf	read_ring@nreg_init,w
 11504  0561  1903               	btfsc	3,2
 11505  0562  2D64               	goto	u3081
 11506  0563  2D65               	goto	u3080
 11507  0564                     u3081:	
 11508  0564  2D8A               	goto	l5484
 11509  0565                     u3080:	
 11510  0565                     l5476:	
 11511                           
 11512                           ;eeprom_rw.c: 19:         absindex = 5 * index + subindex;
 11513  0565  3005               	movlw	5
 11514  0566  00D4               	movwf	??_read_ring
 11515  0567  0854               	movf	??_read_ring,w
 11516  0568  00CC               	movwf	___bmul@multiplicand
 11517  0569  0852               	movf	read_ring@index,w
 11518  056A  318F  27D3  3185   	fcall	___bmul
 11519  056D  0020               	movlb	0	; select bank0
 11520  056E  0753               	addwf	read_ring@subindex,w
 11521  056F  00D5               	movwf	??_read_ring+1
 11522  0570  0855               	movf	??_read_ring+1,w
 11523  0571  00D8               	movwf	read_ring@absindex
 11524  0572                     l5478:	
 11525                           
 11526                           ;eeprom_rw.c: 20:         if(absindex <= nreg_pt)
 11527  0572  0858               	movf	read_ring@absindex,w
 11528  0573  0257               	subwf	read_ring@nreg_pt,w
 11529  0574  1C03               	skipc
 11530  0575  2D77               	goto	u3091
 11531  0576  2D78               	goto	u3090
 11532  0577                     u3091:	
 11533  0577  2D7F               	goto	l5482
 11534  0578                     u3090:	
 11535  0578                     l5480:	
 11536                           
 11537                           ;eeprom_rw.c: 21:             i = nreg_pt - 5 + absindex;
 11538  0578  0857               	movf	read_ring@nreg_pt,w
 11539  0579  0758               	addwf	read_ring@absindex,w
 11540  057A  3EFB               	addlw	251
 11541  057B  00D4               	movwf	??_read_ring
 11542  057C  0854               	movf	??_read_ring,w
 11543  057D  00D6               	movwf	read_ring@i
 11544  057E  2D8C               	goto	l5488
 11545  057F                     l5482:	
 11546                           
 11547                           ;eeprom_rw.c: 23:             i = nreg - (nreg_pt - 5 + absindex);
 11548  057F  0357               	decf	read_ring@nreg_pt,w
 11549  0580  3AFF               	xorlw	255
 11550  0581  00D4               	movwf	??_read_ring
 11551  0582  0858               	movf	read_ring@absindex,w
 11552  0583  0254               	subwf	??_read_ring,w
 11553  0584  0750               	addwf	read_ring@nreg,w
 11554  0585  3E05               	addlw	5
 11555  0586  00D5               	movwf	??_read_ring+1
 11556  0587  0855               	movf	??_read_ring+1,w
 11557  0588  00D6               	movwf	read_ring@i
 11558  0589  2D8C               	goto	l5488
 11559  058A                     l5484:	
 11560                           
 11561                           ;eeprom_rw.c: 26:         return 0;
 11562  058A  3000               	movlw	0
 11563  058B  2D96               	goto	l1475
 11564  058C                     l5488:	
 11565                           
 11566                           ;eeprom_rw.c: 28:     return DATAEE_ReadByte(0xF000 + i);
 11567  058C  0856               	movf	read_ring@i,w
 11568  058D  3E00               	addlw	0
 11569  058E  00CC               	movwf	DATAEE_ReadByte@bAdd
 11570  058F  30F0               	movlw	240
 11571  0590  1803               	skipnc
 11572  0591  30F1               	movlw	241
 11573  0592  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 11574  0593  318F  270E  3185   	fcall	_DATAEE_ReadByte
 11575  0596                     l1475:	
 11576  0596  0008               	return
 11577  0597                     __end_of_read_ring:	
 11578                           
 11579                           	psect	text6
 11580  0FD3                     __ptext6:	
 11581 ;; *************** function ___bmul *****************
 11582 ;; Defined at:
 11583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  multiplier      1    wreg     unsigned char 
 11586 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  multiplier      1    6[BANK0 ] unsigned char 
 11589 ;;  product         1    5[BANK0 ] unsigned char 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      unsigned char 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:        4 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    6
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_read_ring
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           
 11614                           ;psect for function ___bmul
 11615  0FD3                     ___bmul:	
 11616                           
 11617                           ;incstack = 0
 11618                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11619                           ;___bmul@multiplier stored from wreg
 11620  0FD3  0020               	movlb	0	; select bank0
 11621  0FD4  00CF               	movwf	___bmul@multiplier
 11622  0FD5                     l5346:	
 11623  0FD5  01CE               	clrf	___bmul@product
 11624  0FD6                     l5348:	
 11625  0FD6  1C4F               	btfss	___bmul@multiplier,0
 11626  0FD7  2FD9               	goto	u2771
 11627  0FD8  2FDA               	goto	u2770
 11628  0FD9                     u2771:	
 11629  0FD9  2FDE               	goto	l5352
 11630  0FDA                     u2770:	
 11631  0FDA                     l5350:	
 11632  0FDA  084C               	movf	___bmul@multiplicand,w
 11633  0FDB  00CD               	movwf	??___bmul
 11634  0FDC  084D               	movf	??___bmul,w
 11635  0FDD  07CE               	addwf	___bmul@product,f
 11636  0FDE                     l5352:	
 11637  0FDE  1003               	clrc
 11638  0FDF  0DCC               	rlf	___bmul@multiplicand,f
 11639  0FE0                     l5354:	
 11640  0FE0  1003               	clrc
 11641  0FE1  0CCF               	rrf	___bmul@multiplier,f
 11642  0FE2  084F               	movf	___bmul@multiplier,w
 11643  0FE3  1D03               	btfss	3,2
 11644  0FE4  2FE6               	goto	u2781
 11645  0FE5  2FE7               	goto	u2780
 11646  0FE6                     u2781:	
 11647  0FE6  2FD6               	goto	l5348
 11648  0FE7                     u2780:	
 11649  0FE7                     l5356:	
 11650  0FE7  084E               	movf	___bmul@product,w
 11651  0FE8                     l1666:	
 11652  0FE8  0008               	return
 11653  0FE9                     __end_of___bmul:	
 11654                           
 11655                           	psect	text7
 11656  0511                     __ptext7:	
 11657 ;; *************** function _push_ring *****************
 11658 ;; Defined at:
 11659 ;;		line 4 in file "eeprom_rw.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  nreg_pt         1    wreg     PTR unsigned char 
 11662 ;;		 -> nreg_pt(1), 
 11663 ;;  nreg            1   13[BANK0 ] unsigned char 
 11664 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 11665 ;;		 -> nreg_init(1), 
 11666 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 11667 ;;		 -> ring_byte(5), 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 11670 ;;		 -> nreg_pt(1), 
 11671 ;;  i               1   18[BANK0 ] unsigned char 
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  1    wreg      void 
 11674 ;; Registers used:
 11675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11681 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;Total ram usage:        7 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; Hardware stack levels required when called:    7
 11688 ;; This function calls:
 11689 ;;		_DATAEE_WriteByte
 11690 ;; This function is called by:
 11691 ;;		_main
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           
 11696                           ;psect for function _push_ring
 11697  0511                     _push_ring:	
 11698                           
 11699                           ;incstack = 0
 11700                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11701                           ;push_ring@nreg_pt stored from wreg
 11702  0511  0020               	movlb	0	; select bank0
 11703  0512  00DC               	movwf	push_ring@nreg_pt
 11704  0513                     l5492:	
 11705                           
 11706                           ;eeprom_rw.c: 4: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned cha
      +                          r* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 5: { if(!(*nreg_init)) (*nreg_init)
      +                           = 1;
 11707  0513  0857               	movf	push_ring@nreg_init,w
 11708  0514  0086               	movwf	6
 11709  0515  0187               	clrf	7
 11710  0516  0801               	movf	1,w
 11711  0517  1D03               	btfss	3,2
 11712  0518  2D1A               	goto	u3101
 11713  0519  2D1B               	goto	u3100
 11714  051A                     u3101:	
 11715  051A  2D20               	goto	l5496
 11716  051B                     u3100:	
 11717  051B                     l5494:	
 11718  051B  0857               	movf	push_ring@nreg_init,w
 11719  051C  0086               	movwf	6
 11720  051D  0187               	clrf	7
 11721  051E  0181               	clrf	1
 11722  051F  0A81               	incf	1,f
 11723  0520                     l5496:	
 11724                           
 11725                           ;eeprom_rw.c: 6:     for(unsigned char i = 0; i < 5; i++) {
 11726  0520  01DB               	clrf	push_ring@i
 11727  0521                     l5502:	
 11728                           
 11729                           ;eeprom_rw.c: 7:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 11730  0521  085C               	movf	push_ring@nreg_pt,w
 11731  0522  0086               	movwf	6
 11732  0523  0187               	clrf	7
 11733  0524  0856               	movf	push_ring@nreg,w
 11734  0525  0201               	subwf	1,w
 11735  0526  1C03               	skipc
 11736  0527  2D29               	goto	u3111
 11737  0528  2D2A               	goto	u3110
 11738  0529                     u3111:	
 11739  0529  2D2E               	goto	l5506
 11740  052A                     u3110:	
 11741  052A                     l5504:	
 11742  052A  085C               	movf	push_ring@nreg_pt,w
 11743  052B  0086               	movwf	6
 11744  052C  0187               	clrf	7
 11745  052D  0181               	clrf	1
 11746  052E                     l5506:	
 11747                           
 11748                           ;eeprom_rw.c: 8:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 11749  052E  085C               	movf	push_ring@nreg_pt,w
 11750  052F  0086               	movwf	6
 11751  0530  0187               	clrf	7
 11752  0531  0801               	movf	1,w
 11753  0532  3E00               	addlw	0
 11754  0533  00D2               	movwf	DATAEE_WriteByte@bAdd
 11755  0534  30F0               	movlw	240
 11756  0535  1803               	skipnc
 11757  0536  30F1               	movlw	241
 11758  0537  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 11759  0538  085B               	movf	push_ring@i,w
 11760  0539  0758               	addwf	push_ring@ring_byte,w
 11761  053A  00D9               	movwf	??_push_ring
 11762  053B  0859               	movf	??_push_ring,w
 11763  053C  0086               	movwf	6
 11764  053D  0187               	clrf	7
 11765  053E  0801               	movf	1,w
 11766  053F  00DA               	movwf	??_push_ring+1
 11767  0540  085A               	movf	??_push_ring+1,w
 11768  0541  00D4               	movwf	DATAEE_WriteByte@bData
 11769  0542  3186  267C  3185   	fcall	_DATAEE_WriteByte
 11770  0545                     l5508:	
 11771                           
 11772                           ;eeprom_rw.c: 9:         (*nreg_pt)++;
 11773  0545  3001               	movlw	1
 11774  0546  0020               	movlb	0	; select bank0
 11775  0547  00D9               	movwf	??_push_ring
 11776  0548  085C               	movf	push_ring@nreg_pt,w
 11777  0549  0086               	movwf	6
 11778  054A  0187               	clrf	7
 11779  054B  0859               	movf	??_push_ring,w
 11780  054C  0781               	addwf	1,f
 11781  054D                     l5510:	
 11782                           
 11783                           ;eeprom_rw.c: 10:     }
 11784  054D  3001               	movlw	1
 11785  054E  00D9               	movwf	??_push_ring
 11786  054F  0859               	movf	??_push_ring,w
 11787  0550  07DB               	addwf	push_ring@i,f
 11788  0551                     l5512:	
 11789  0551  3005               	movlw	5
 11790  0552  025B               	subwf	push_ring@i,w
 11791  0553  1C03               	skipc
 11792  0554  2D56               	goto	u3121
 11793  0555  2D57               	goto	u3120
 11794  0556                     u3121:	
 11795  0556  2D21               	goto	l5502
 11796  0557                     u3120:	
 11797  0557                     l1468:	
 11798  0557  0008               	return
 11799  0558                     __end_of_push_ring:	
 11800                           
 11801                           	psect	text8
 11802  0F2D                     __ptext8:	
 11803 ;; *************** function _cksum_w *****************
 11804 ;; Defined at:
 11805 ;;		line 31 in file "eeprom_rw.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;		None
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;		None
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0, pclath, cstack
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        1 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; Hardware stack levels required when called:    8
 11826 ;; This function calls:
 11827 ;;		_DATAEE_WriteByte
 11828 ;;		_cksum
 11829 ;; This function is called by:
 11830 ;;		_main
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           
 11835                           ;psect for function _cksum_w
 11836  0F2D                     _cksum_w:	
 11837  0F2D                     l5394:	
 11838                           ;incstack = 0
 11839                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11840                           
 11841                           
 11842                           ;eeprom_rw.c: 33:     DATAEE_WriteByte(0xF0FF, cksum());
 11843  0F2D  30FF               	movlw	255
 11844  0F2E  0020               	movlb	0	; select bank0
 11845  0F2F  00D2               	movwf	DATAEE_WriteByte@bAdd
 11846  0F30  30F0               	movlw	240
 11847  0F31  00D3               	movwf	DATAEE_WriteByte@bAdd+1
 11848  0F32  3186  26E4  318F   	fcall	_cksum
 11849  0F35  0020               	movlb	0	; select bank0
 11850  0F36  00D6               	movwf	??_cksum_w
 11851  0F37  0856               	movf	??_cksum_w,w
 11852  0F38  00D4               	movwf	DATAEE_WriteByte@bData
 11853  0F39  3186  267C  318F   	fcall	_DATAEE_WriteByte
 11854  0F3C                     l1478:	
 11855  0F3C  0008               	return
 11856  0F3D                     __end_of_cksum_w:	
 11857                           
 11858                           	psect	text9
 11859  06E4                     __ptext9:	
 11860 ;; *************** function _cksum *****************
 11861 ;; Defined at:
 11862 ;;		line 36 in file "eeprom_rw.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;		None
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  i               2    7[BANK0 ] unsigned int 
 11867 ;;  res             1    6[BANK0 ] unsigned char 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      unsigned char 
 11870 ;; Registers used:
 11871 ;;		wreg, status,2, status,0, pclath, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;Total ram usage:        4 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    7
 11884 ;; This function calls:
 11885 ;;		_DATAEE_ReadByte
 11886 ;; This function is called by:
 11887 ;;		_main
 11888 ;;		_cksum_w
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           
 11893                           ;psect for function _cksum
 11894  06E4                     _cksum:	
 11895  06E4                     l5270:	
 11896                           ;incstack = 0
 11897                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 11898                           
 11899                           
 11900                           ;eeprom_rw.c: 38:     unsigned char res = 0;
 11901  06E4  0020               	movlb	0	; select bank0
 11902  06E5  01CF               	clrf	cksum@res
 11903  06E6                     l5272:	
 11904                           
 11905                           ;eeprom_rw.c: 39:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 11906  06E6  30F5               	movlw	245
 11907  06E7  00D0               	movwf	cksum@i
 11908  06E8  30F0               	movlw	240
 11909  06E9  00D1               	movwf	cksum@i+1
 11910  06EA                     l5278:	
 11911                           
 11912                           ;eeprom_rw.c: 40:         res += DATAEE_ReadByte(i);
 11913  06EA  0851               	movf	cksum@i+1,w
 11914  06EB  00CD               	movwf	DATAEE_ReadByte@bAdd+1
 11915  06EC  0850               	movf	cksum@i,w
 11916  06ED  00CC               	movwf	DATAEE_ReadByte@bAdd
 11917  06EE  318F  270E  3186   	fcall	_DATAEE_ReadByte
 11918  06F1  0020               	movlb	0	; select bank0
 11919  06F2  00CE               	movwf	??_cksum
 11920  06F3  084E               	movf	??_cksum,w
 11921  06F4  07CF               	addwf	cksum@res,f
 11922  06F5                     l5280:	
 11923                           
 11924                           ;eeprom_rw.c: 41:     }
 11925  06F5  3001               	movlw	1
 11926  06F6  07D0               	addwf	cksum@i,f
 11927  06F7  3000               	movlw	0
 11928  06F8  3DD1               	addwfc	cksum@i+1,f
 11929  06F9                     l5282:	
 11930  06F9  30F0               	movlw	240
 11931  06FA  0251               	subwf	cksum@i+1,w
 11932  06FB  30FF               	movlw	255
 11933  06FC  1903               	skipnz
 11934  06FD  0250               	subwf	cksum@i,w
 11935  06FE  1C03               	skipc
 11936  06FF  2F01               	goto	u2631
 11937  0700  2F02               	goto	u2630
 11938  0701                     u2631:	
 11939  0701  2EEA               	goto	l5278
 11940  0702                     u2630:	
 11941  0702                     l5284:	
 11942                           
 11943                           ;eeprom_rw.c: 42:     return res;
 11944  0702  084F               	movf	cksum@res,w
 11945  0703                     l1483:	
 11946  0703  0008               	return
 11947  0704                     __end_of_cksum:	
 11948                           
 11949                           	psect	text10
 11950  0F0E                     __ptext10:	
 11951 ;; *************** function _DATAEE_ReadByte *****************
 11952 ;; Defined at:
 11953 ;;		line 202 in file "mcc_generated_files/memory.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  bAdd            2    3[BANK0 ] unsigned short 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;		None
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      unsigned char 
 11960 ;; Registers used:
 11961 ;;		wreg, status,2
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;Total ram usage:        2 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    6
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_main
 11978 ;;		_read_ring
 11979 ;;		_cksum
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           
 11984                           ;psect for function _DATAEE_ReadByte
 11985  0F0E                     _DATAEE_ReadByte:	
 11986  0F0E                     l5090:	
 11987                           ;incstack = 0
 11988                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11989                           
 11990                           
 11991                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11992  0F0E  0020               	movlb	0	; select bank0
 11993  0F0F  084D               	movf	DATAEE_ReadByte@bAdd+1,w
 11994  0F10  0030               	movlb	16	; select bank16
 11995  0F11  009B               	movwf	27	;volatile
 11996  0F12                     l5092:	
 11997                           
 11998                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11999  0F12  0020               	movlb	0	; select bank0
 12000  0F13  084C               	movf	DATAEE_ReadByte@bAdd,w
 12001  0F14  0030               	movlb	16	; select bank16
 12002  0F15  009A               	movwf	26	;volatile
 12003  0F16                     l5094:	
 12004                           
 12005                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12006  0F16  171E               	bsf	30,6	;volsfr
 12007  0F17                     l5096:	
 12008                           
 12009                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12010  0F17  141E               	bsf	30,0	;volsfr
 12011  0F18                     l5098:	
 12012                           
 12013                           ;mcc_generated_files/memory.c: 208:     __nop();
 12014  0F18  0000               	nop
 12015  0F19                     l5100:	
 12016                           
 12017                           ;mcc_generated_files/memory.c: 209:     __nop();
 12018  0F19  0000               	nop
 12019  0F1A                     l5102:	
 12020                           
 12021                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12022  0F1A  0030               	movlb	16	; select bank16
 12023  0F1B  081C               	movf	28,w	;volatile
 12024  0F1C                     l930:	
 12025  0F1C  0008               	return
 12026  0F1D                     __end_of_DATAEE_ReadByte:	
 12027                           
 12028                           	psect	text11
 12029  067C                     __ptext11:	
 12030 ;; *************** function _DATAEE_WriteByte *****************
 12031 ;; Defined at:
 12032 ;;		line 180 in file "mcc_generated_files/memory.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12035 ;;  bData           1   11[BANK0 ] unsigned char 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        4 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:    6
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_main
 12058 ;;		_push_ring
 12059 ;;		_cksum_w
 12060 ;;		_reset_recv
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           
 12065                           ;psect for function _DATAEE_WriteByte
 12066  067C                     _DATAEE_WriteByte:	
 12067  067C                     l5288:	
 12068                           ;incstack = 0
 12069                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12070                           
 12071                           
 12072                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12073  067C  3000               	movlw	0
 12074  067D  1B8B               	btfsc	11,7	;volatile
 12075  067E  3001               	movlw	1
 12076  067F  0020               	movlb	0	; select bank0
 12077  0680  00D5               	movwf	DATAEE_WriteByte@GIEBitValue
 12078                           
 12079                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12080  0681  0853               	movf	DATAEE_WriteByte@bAdd+1,w
 12081  0682  0030               	movlb	16	; select bank16
 12082  0683  009B               	movwf	27	;volatile
 12083  0684                     l5290:	
 12084                           
 12085                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12086  0684  0020               	movlb	0	; select bank0
 12087  0685  0852               	movf	DATAEE_WriteByte@bAdd,w
 12088  0686  0030               	movlb	16	; select bank16
 12089  0687  009A               	movwf	26	;volatile
 12090  0688                     l5292:	
 12091                           
 12092                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12093  0688  0020               	movlb	0	; select bank0
 12094  0689  0854               	movf	DATAEE_WriteByte@bData,w
 12095  068A  0030               	movlb	16	; select bank16
 12096  068B  009C               	movwf	28	;volatile
 12097  068C                     l5294:	
 12098                           
 12099                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12100  068C  171E               	bsf	30,6	;volsfr
 12101  068D                     l5296:	
 12102                           
 12103                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12104  068D  151E               	bsf	30,2	;volsfr
 12105  068E                     l5298:	
 12106                           
 12107                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12108  068E  138B               	bcf	11,7	;volatile
 12109  068F                     l5300:	
 12110                           
 12111                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12112  068F  3055               	movlw	85
 12113  0690  009F               	movwf	31	;volsfr
 12114  0691                     l5302:	
 12115                           
 12116                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12117  0691  30AA               	movlw	170
 12118  0692  009F               	movwf	31	;volsfr
 12119  0693                     l5304:	
 12120                           
 12121                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12122  0693  149E               	bsf	30,1	;volsfr
 12123  0694                     l924:	
 12124                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12125                           
 12126                           
 12127                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12128  0694  189E               	btfsc	30,1	;volsfr
 12129  0695  2E97               	goto	u2641
 12130  0696  2E98               	goto	u2640
 12131  0697                     u2641:	
 12132  0697  2E94               	goto	l924
 12133  0698                     u2640:	
 12134  0698                     l926:	
 12135                           
 12136                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12137  0698  111E               	bcf	30,2	;volsfr
 12138  0699                     l5306:	
 12139                           
 12140                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12141  0699  0020               	movlb	0	; select bank0
 12142  069A  0C55               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12143  069B  1C03               	skipc
 12144  069C  138B               	bcf	11,7	;volatile
 12145  069D  1803               	skipnc
 12146  069E  178B               	bsf	11,7	;volatile
 12147  069F                     l927:	
 12148  069F  0008               	return
 12149  06A0                     __end_of_DATAEE_WriteByte:	
 12150                           
 12151                           	psect	text12
 12152  075E                     __ptext12:	
 12153 ;; *************** function _SYSTEM_Initialize *****************
 12154 ;; Defined at:
 12155 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;		None
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;		None
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      void 
 12162 ;; Registers used:
 12163 ;;		wreg, status,2, status,0, pclath, cstack
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;Total ram usage:        0 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    8
 12176 ;; This function calls:
 12177 ;;		_ADCC_Initialize
 12178 ;;		_EXT_INT_Initialize
 12179 ;;		_OSCILLATOR_Initialize
 12180 ;;		_PIN_MANAGER_Initialize
 12181 ;;		_PMD_Initialize
 12182 ;;		_PWM6_Initialize
 12183 ;;		_TMR0_Initialize
 12184 ;;		_TMR1_Initialize
 12185 ;;		_TMR2_Initialize
 12186 ;; This function is called by:
 12187 ;;		_main
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           
 12192                           ;psect for function _SYSTEM_Initialize
 12193  075E                     _SYSTEM_Initialize:	
 12194  075E                     l5364:	
 12195                           ;incstack = 0
 12196                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12197                           
 12198                           
 12199                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12200  075E  318E  268C  3187   	fcall	_PMD_Initialize
 12201  0761                     l5366:	
 12202                           
 12203                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12204  0761  3184  24C8  3187   	fcall	_PIN_MANAGER_Initialize
 12205  0764                     l5368:	
 12206                           
 12207                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12208  0764  318E  26A6  3187   	fcall	_OSCILLATOR_Initialize
 12209  0767                     l5370:	
 12210                           
 12211                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 12212  0767  318E  26D5  3187   	fcall	_PWM6_Initialize
 12213  076A                     l5372:	
 12214                           
 12215                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12216  076A  318F  27BD  3187   	fcall	_ADCC_Initialize
 12217  076D                     l5374:	
 12218                           
 12219                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 12220  076D  318E  26FF  3187   	fcall	_TMR2_Initialize
 12221  0770                     l5376:	
 12222                           
 12223                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 12224  0770  3187  2723  3187   	fcall	_TMR1_Initialize
 12225  0773                     l5378:	
 12226                           
 12227                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 12228  0773  318E  26E2  3187   	fcall	_EXT_INT_Initialize
 12229  0776                     l5380:	
 12230                           
 12231                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 12232  0776  318F  2792  3187   	fcall	_TMR0_Initialize
 12233  0779                     l126:	
 12234  0779  0008               	return
 12235  077A                     __end_of_SYSTEM_Initialize:	
 12236                           
 12237                           	psect	text13
 12238  0EFF                     __ptext13:	
 12239 ;; *************** function _TMR2_Initialize *****************
 12240 ;; Defined at:
 12241 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, status,2
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;Total ram usage:        0 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    6
 12262 ;; This function calls:
 12263 ;;		Nothing
 12264 ;; This function is called by:
 12265 ;;		_SYSTEM_Initialize
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function _TMR2_Initialize
 12271  0EFF                     _TMR2_Initialize:	
 12272  0EFF                     l5204:	
 12273                           ;incstack = 0
 12274                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12275                           
 12276                           
 12277                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12278  0EFF  3001               	movlw	1
 12279  0F00  0025               	movlb	5	; select bank5
 12280  0F01  0090               	movwf	16	;volatile
 12281                           
 12282                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
 12283  0F02  3020               	movlw	32
 12284  0F03  008F               	movwf	15	;volatile
 12285  0F04                     l5206:	
 12286                           
 12287                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12288  0F04  0191               	clrf	17	;volatile
 12289  0F05                     l5208:	
 12290                           
 12291                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xF9;
 12292  0F05  30F9               	movlw	249
 12293  0F06  008D               	movwf	13	;volatile
 12294                           
 12295                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12296  0F07  018C               	clrf	12	;volatile
 12297  0F08                     l5210:	
 12298                           
 12299                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12300  0F08  002E               	movlb	14	; select bank14
 12301  0F09  1090               	bcf	16,1	;volatile
 12302  0F0A                     l5212:	
 12303                           
 12304                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 12305  0F0A  3080               	movlw	128
 12306  0F0B  0025               	movlb	5	; select bank5
 12307  0F0C  008E               	movwf	14	;volatile
 12308  0F0D                     l1169:	
 12309  0F0D  0008               	return
 12310  0F0E                     __end_of_TMR2_Initialize:	
 12311                           
 12312                           	psect	text14
 12313  0723                     __ptext14:	
 12314 ;; *************** function _TMR1_Initialize *****************
 12315 ;; Defined at:
 12316 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0, pclath, cstack
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:    7
 12337 ;; This function calls:
 12338 ;;		_TMR1_SetInterruptHandler
 12339 ;; This function is called by:
 12340 ;;		_SYSTEM_Initialize
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           
 12345                           ;psect for function _TMR1_Initialize
 12346  0723                     _TMR1_Initialize:	
 12347  0723                     l5214:	
 12348                           ;incstack = 0
 12349                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12350                           
 12351                           
 12352                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12353  0723  0024               	movlb	4	; select bank4
 12354  0724  018F               	clrf	15	;volatile
 12355                           
 12356                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12357  0725  0190               	clrf	16	;volatile
 12358  0726                     l5216:	
 12359                           
 12360                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12361  0726  3004               	movlw	4
 12362  0727  0091               	movwf	17	;volatile
 12363  0728                     l5218:	
 12364                           
 12365                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 12366  0728  30E1               	movlw	225
 12367  0729  008D               	movwf	13	;volatile
 12368  072A                     l5220:	
 12369                           
 12370                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 12371  072A  30BA               	movlw	186
 12372  072B  008C               	movwf	12	;volatile
 12373  072C                     l5222:	
 12374                           
 12375                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12376  072C  080D               	movf	13,w	;volatile
 12377  072D  0020               	movlb	0	; select bank0
 12378  072E  00A5               	movwf	_timer1ReloadVal+1	;volatile
 12379  072F  0024               	movlb	4	; select bank4
 12380  0730  080C               	movf	12,w	;volatile
 12381  0731  0020               	movlb	0	; select bank0
 12382  0732  00A4               	movwf	_timer1ReloadVal	;volatile
 12383  0733                     l5224:	
 12384                           
 12385                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 12386  0733  002E               	movlb	14	; select bank14
 12387  0734  1010               	bcf	16,0	;volatile
 12388  0735                     l5226:	
 12389                           
 12390                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12391  0735  141A               	bsf	26,0	;volatile
 12392  0736                     l5228:	
 12393                           
 12394                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12395  0736  30EC               	movlw	low _TMR1_DefaultInterruptHandler
 12396  0737  0020               	movlb	0	; select bank0
 12397  0738  00CC               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12398  0739  300D               	movlw	high _TMR1_DefaultInterruptHandler
 12399  073A  00CD               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12400  073B  318E  2652  3187   	fcall	_TMR1_SetInterruptHandler
 12401  073E                     l5230:	
 12402                           
 12403                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 12404  073E  3015               	movlw	21
 12405  073F  0024               	movlb	4	; select bank4
 12406  0740  008E               	movwf	14	;volatile
 12407  0741                     l604:	
 12408  0741  0008               	return
 12409  0742                     __end_of_TMR1_Initialize:	
 12410                           
 12411                           	psect	text15
 12412  0E52                     __ptext15:	
 12413 ;; *************** function _TMR1_SetInterruptHandler *****************
 12414 ;; Defined at:
 12415 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12418 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;		None
 12421 ;; Return value:  Size  Location     Type
 12422 ;;                  1    wreg      void 
 12423 ;; Registers used:
 12424 ;;		wreg
 12425 ;; Tracked objects:
 12426 ;;		On entry : 0/0
 12427 ;;		On exit  : 0/0
 12428 ;;		Unchanged: 0/0
 12429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;Total ram usage:        2 bytes
 12435 ;; Hardware stack levels used:    1
 12436 ;; Hardware stack levels required when called:    6
 12437 ;; This function calls:
 12438 ;;		Nothing
 12439 ;; This function is called by:
 12440 ;;		_TMR1_Initialize
 12441 ;;		_main
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           
 12446                           ;psect for function _TMR1_SetInterruptHandler
 12447  0E52                     _TMR1_SetInterruptHandler:	
 12448  0E52                     l5088:	
 12449                           ;incstack = 0
 12450                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12451                           
 12452                           
 12453                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 12454  0E52  0020               	movlb	0	; select bank0
 12455  0E53  084D               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12456  0E54  00A3               	movwf	_TMR1_InterruptHandler+1
 12457  0E55  084C               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12458  0E56  00A2               	movwf	_TMR1_InterruptHandler
 12459  0E57                     l634:	
 12460  0E57  0008               	return
 12461  0E58                     __end_of_TMR1_SetInterruptHandler:	
 12462                           
 12463                           	psect	text16
 12464  0F92                     __ptext16:	
 12465 ;; *************** function _TMR0_Initialize *****************
 12466 ;; Defined at:
 12467 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      void 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0, pclath, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;Total ram usage:        0 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    7
 12488 ;; This function calls:
 12489 ;;		_TMR0_SetInterruptHandler
 12490 ;; This function is called by:
 12491 ;;		_SYSTEM_Initialize
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           
 12496                           ;psect for function _TMR0_Initialize
 12497  0F92                     _TMR0_Initialize:	
 12498  0F92                     l5232:	
 12499                           ;incstack = 0
 12500                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12501                           
 12502                           
 12503                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x90;
 12504  0F92  3090               	movlw	144
 12505  0F93  0020               	movlb	0	; select bank0
 12506  0F94  009F               	movwf	31	;volatile
 12507                           
 12508                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x1E;
 12509  0F95  301E               	movlw	30
 12510  0F96  009D               	movwf	29	;volatile
 12511  0F97                     l5234:	
 12512                           
 12513                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12514  0F97  019C               	clrf	28	;volatile
 12515  0F98                     l5236:	
 12516                           
 12517                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12518  0F98  002E               	movlb	14	; select bank14
 12519  0F99  128C               	bcf	12,5	;volatile
 12520  0F9A                     l5238:	
 12521                           
 12522                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12523  0F9A  1696               	bsf	22,5	;volatile
 12524  0F9B                     l5240:	
 12525                           
 12526                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12527  0F9B  30EB               	movlw	low _TMR0_DefaultInterruptHandler
 12528  0F9C  0020               	movlb	0	; select bank0
 12529  0F9D  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12530  0F9E  300D               	movlw	high _TMR0_DefaultInterruptHandler
 12531  0F9F  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12532  0FA0  318E  264C  318F   	fcall	_TMR0_SetInterruptHandler
 12533  0FA3                     l5242:	
 12534                           
 12535                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12536  0FA3  3080               	movlw	128
 12537  0FA4  0020               	movlb	0	; select bank0
 12538  0FA5  009E               	movwf	30	;volatile
 12539  0FA6                     l548:	
 12540  0FA6  0008               	return
 12541  0FA7                     __end_of_TMR0_Initialize:	
 12542                           
 12543                           	psect	text17
 12544  0E4C                     __ptext17:	
 12545 ;; *************** function _TMR0_SetInterruptHandler *****************
 12546 ;; Defined at:
 12547 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12550 ;;		 -> h_precisionclock(1), TMR0_DefaultInterruptHandler(1), 
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;		None
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  1    wreg      void 
 12555 ;; Registers used:
 12556 ;;		wreg
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;Total ram usage:        2 bytes
 12567 ;; Hardware stack levels used:    1
 12568 ;; Hardware stack levels required when called:    6
 12569 ;; This function calls:
 12570 ;;		Nothing
 12571 ;; This function is called by:
 12572 ;;		_TMR0_Initialize
 12573 ;;		_main
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           
 12578                           ;psect for function _TMR0_SetInterruptHandler
 12579  0E4C                     _TMR0_SetInterruptHandler:	
 12580  0E4C                     l5086:	
 12581                           ;incstack = 0
 12582                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12583                           
 12584                           
 12585                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 12586  0E4C  0020               	movlb	0	; select bank0
 12587  0E4D  084D               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12588  0E4E  00A7               	movwf	_TMR0_InterruptHandler+1
 12589  0E4F  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12590  0E50  00A6               	movwf	_TMR0_InterruptHandler
 12591  0E51                     l570:	
 12592  0E51  0008               	return
 12593  0E52                     __end_of_TMR0_SetInterruptHandler:	
 12594                           
 12595                           	psect	text18
 12596  0ED5                     __ptext18:	
 12597 ;; *************** function _PWM6_Initialize *****************
 12598 ;; Defined at:
 12599 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;		None
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      void 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2, status,0
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    6
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		_SYSTEM_Initialize
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           
 12628                           ;psect for function _PWM6_Initialize
 12629  0ED5                     _PWM6_Initialize:	
 12630  0ED5                     l5194:	
 12631                           ;incstack = 0
 12632                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12633                           
 12634                           
 12635                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12636  0ED5  3080               	movlw	128
 12637  0ED6  0027               	movlb	7	; select bank7
 12638  0ED7  008E               	movwf	14	;volatile
 12639                           
 12640                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 12641  0ED8  303E               	movlw	62
 12642  0ED9  008D               	movwf	13	;volatile
 12643                           
 12644                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12645  0EDA  3040               	movlw	64
 12646  0EDB  008C               	movwf	12	;volatile
 12647  0EDC                     l5196:	
 12648                           
 12649                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12650  0EDC  0024               	movlb	4	; select bank4
 12651  0EDD  081F               	movf	31,w	;volatile
 12652  0EDE  39F3               	andlw	-13
 12653  0EDF  3804               	iorlw	4
 12654  0EE0  009F               	movwf	31	;volatile
 12655  0EE1                     l648:	
 12656  0EE1  0008               	return
 12657  0EE2                     __end_of_PWM6_Initialize:	
 12658                           
 12659                           	psect	text19
 12660  0E8C                     __ptext19:	
 12661 ;; *************** function _PMD_Initialize *****************
 12662 ;; Defined at:
 12663 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;		None
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1    wreg      void 
 12670 ;; Registers used:
 12671 ;;		status,2
 12672 ;; Tracked objects:
 12673 ;;		On entry : 0/0
 12674 ;;		On exit  : 0/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12681 ;;Total ram usage:        0 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    6
 12684 ;; This function calls:
 12685 ;;		Nothing
 12686 ;; This function is called by:
 12687 ;;		_SYSTEM_Initialize
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691                           
 12692                           ;psect for function _PMD_Initialize
 12693  0E8C                     _PMD_Initialize:	
 12694  0E8C                     l5130:	
 12695                           ;incstack = 0
 12696                           ; Regs used in _PMD_Initialize: [status,2]
 12697                           
 12698                           
 12699                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12700  0E8C  002F               	movlb	15	; select bank15
 12701  0E8D  0196               	clrf	22	;volatile
 12702                           
 12703                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12704  0E8E  0197               	clrf	23	;volatile
 12705                           
 12706                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12707  0E8F  0198               	clrf	24	;volatile
 12708                           
 12709                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12710  0E90  0199               	clrf	25	;volatile
 12711                           
 12712                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12713  0E91  019A               	clrf	26	;volatile
 12714                           
 12715                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12716  0E92  019B               	clrf	27	;volatile
 12717  0E93                     l132:	
 12718  0E93  0008               	return
 12719  0E94                     __end_of_PMD_Initialize:	
 12720                           
 12721                           	psect	text20
 12722  04C8                     __ptext20:	
 12723 ;; *************** function _PIN_MANAGER_Initialize *****************
 12724 ;; Defined at:
 12725 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;Total ram usage:        0 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    6
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_SYSTEM_Initialize
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _PIN_MANAGER_Initialize
 12755  04C8                     _PIN_MANAGER_Initialize:	
 12756  04C8                     l5132:	
 12757                           ;incstack = 0
 12758                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12759                           
 12760                           
 12761                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12762  04C8  0020               	movlb	0	; select bank0
 12763  04C9  019A               	clrf	26	;volatile
 12764                           
 12765                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12766  04CA  0199               	clrf	25	;volatile
 12767                           
 12768                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12769  04CB  0196               	clrf	22	;volatile
 12770                           
 12771                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12772  04CC  0197               	clrf	23	;volatile
 12773                           
 12774                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12775  04CD  0198               	clrf	24	;volatile
 12776  04CE                     l5134:	
 12777                           
 12778                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12779  04CE  3007               	movlw	7
 12780  04CF  0095               	movwf	21	;volatile
 12781  04D0                     l5136:	
 12782                           
 12783                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 12784  04D0  300F               	movlw	15
 12785  04D1  0091               	movwf	17	;volatile
 12786  04D2                     l5138:	
 12787                           
 12788                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12789  04D2  30FF               	movlw	255
 12790  04D3  0092               	movwf	18	;volatile
 12791  04D4                     l5140:	
 12792                           
 12793                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 12794  04D4  30FF               	movlw	255
 12795  04D5  0093               	movwf	19	;volatile
 12796  04D6                     l5142:	
 12797                           
 12798                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12799  04D6  30FF               	movlw	255
 12800  04D7  0094               	movwf	20	;volatile
 12801  04D8                     l5144:	
 12802                           
 12803                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 12804  04D8  30FF               	movlw	255
 12805  04D9  003E               	movlb	30	; select bank30
 12806  04DA  00D9               	movwf	89	;volatile
 12807  04DB                     l5146:	
 12808                           
 12809                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 12810  04DB  30C7               	movlw	199
 12811  04DC  00CE               	movwf	78	;volatile
 12812  04DD                     l5148:	
 12813                           
 12814                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 12815  04DD  30EF               	movlw	239
 12816  04DE  00C3               	movwf	67	;volatile
 12817  04DF                     l5150:	
 12818                           
 12819                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 12820  04DF  3007               	movlw	7
 12821  04E0  00E4               	movwf	100	;volatile
 12822  04E1                     l5152:	
 12823                           
 12824                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 12825  04E1  30FF               	movlw	255
 12826  04E2  00B8               	movwf	56	;volatile
 12827                           
 12828                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 12829  04E3  01DA               	clrf	90	;volatile
 12830                           
 12831                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 12832  04E4  01E5               	clrf	101	;volatile
 12833                           
 12834                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 12835  04E5  01C4               	clrf	68	;volatile
 12836                           
 12837                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 12838  04E6  01B9               	clrf	57	;volatile
 12839                           
 12840                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 12841  04E7  01CF               	clrf	79	;volatile
 12842                           
 12843                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 12844  04E8  01E6               	clrf	102	;volatile
 12845                           
 12846                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 12847  04E9  01BA               	clrf	58	;volatile
 12848                           
 12849                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 12850  04EA  01C5               	clrf	69	;volatile
 12851                           
 12852                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 12853  04EB  01D0               	clrf	80	;volatile
 12854                           
 12855                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 12856  04EC  01DB               	clrf	91	;volatile
 12857  04ED                     l5154:	
 12858                           
 12859                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 12860  04ED  30FF               	movlw	255
 12861  04EE  00BB               	movwf	59	;volatile
 12862  04EF                     l5156:	
 12863                           
 12864                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 12865  04EF  30FF               	movlw	255
 12866  04F0  00C6               	movwf	70	;volatile
 12867  04F1                     l5158:	
 12868                           
 12869                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 12870  04F1  30FF               	movlw	255
 12871  04F2  00D1               	movwf	81	;volatile
 12872  04F3                     l5160:	
 12873                           
 12874                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 12875  04F3  30FF               	movlw	255
 12876  04F4  00DC               	movwf	92	;volatile
 12877  04F5                     l5162:	
 12878                           
 12879                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 12880  04F5  3007               	movlw	7
 12881  04F6  00E7               	movwf	103	;volatile
 12882  04F7                     l5164:	
 12883                           
 12884                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 12885  04F7  30FF               	movlw	255
 12886  04F8  00BC               	movwf	60	;volatile
 12887  04F9                     l5166:	
 12888                           
 12889                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 12890  04F9  30FF               	movlw	255
 12891  04FA  00C7               	movwf	71	;volatile
 12892  04FB                     l5168:	
 12893                           
 12894                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 12895  04FB  30FF               	movlw	255
 12896  04FC  00D2               	movwf	82	;volatile
 12897  04FD                     l5170:	
 12898                           
 12899                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 12900  04FD  30FF               	movlw	255
 12901  04FE  00DD               	movwf	93	;volatile
 12902  04FF                     l5172:	
 12903                           
 12904                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 12905  04FF  3007               	movlw	7
 12906  0500  00E8               	movwf	104	;volatile
 12907  0501                     l5174:	
 12908                           
 12909                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 12910  0501  300C               	movlw	12
 12911  0502  003D               	movlb	29	; select bank29
 12912  0503  0090               	movwf	16	;volatile
 12913  0504                     l5176:	
 12914                           
 12915                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 12916  0504  3013               	movlw	19
 12917  0505  00C5               	movwf	69	;volatile
 12918  0506                     l5178:	
 12919                           
 12920                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 12921  0506  3014               	movlw	20
 12922  0507  003E               	movlb	30	; select bank30
 12923  0508  00A3               	movwf	35	;volatile
 12924  0509                     l5180:	
 12925                           
 12926                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 12927  0509  3015               	movlw	21
 12928  050A  00A4               	movwf	36	;volatile
 12929  050B                     l5182:	
 12930                           
 12931                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 12932  050B  300E               	movlw	14
 12933  050C  0096               	movwf	22	;volatile
 12934  050D                     l5184:	
 12935                           
 12936                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 12937  050D  3014               	movlw	20
 12938  050E  003D               	movlb	29	; select bank29
 12939  050F  00C6               	movwf	70	;volatile
 12940  0510                     l362:	
 12941  0510  0008               	return
 12942  0511                     __end_of_PIN_MANAGER_Initialize:	
 12943                           
 12944                           	psect	text21
 12945  0EA6                     __ptext21:	
 12946 ;; *************** function _OSCILLATOR_Initialize *****************
 12947 ;; Defined at:
 12948 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg, status,2
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;Total ram usage:        0 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:    6
 12969 ;; This function calls:
 12970 ;;		Nothing
 12971 ;; This function is called by:
 12972 ;;		_SYSTEM_Initialize
 12973 ;; This function uses a non-reentrant model
 12974 ;;
 12975                           
 12976                           
 12977                           ;psect for function _OSCILLATOR_Initialize
 12978  0EA6                     _OSCILLATOR_Initialize:	
 12979  0EA6                     l5186:	
 12980                           ;incstack = 0
 12981                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12982                           
 12983                           
 12984                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 12985  0EA6  3062               	movlw	98
 12986  0EA7  0031               	movlb	17	; select bank17
 12987  0EA8  008D               	movwf	13	;volatile
 12988  0EA9                     l5188:	
 12989                           
 12990                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12991  0EA9  018F               	clrf	15	;volatile
 12992  0EAA                     l5190:	
 12993                           
 12994                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12995  0EAA  0191               	clrf	17	;volatile
 12996                           
 12997                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 12998  0EAB  3002               	movlw	2
 12999  0EAC  0093               	movwf	19	;volatile
 13000  0EAD                     l5192:	
 13001                           
 13002                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 13003  0EAD  0192               	clrf	18	;volatile
 13004  0EAE                     l129:	
 13005  0EAE  0008               	return
 13006  0EAF                     __end_of_OSCILLATOR_Initialize:	
 13007                           
 13008                           	psect	text22
 13009  0EE2                     __ptext22:	
 13010 ;; *************** function _EXT_INT_Initialize *****************
 13011 ;; Defined at:
 13012 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    7
 13033 ;; This function calls:
 13034 ;;		_INT_SetInterruptHandler
 13035 ;; This function is called by:
 13036 ;;		_SYSTEM_Initialize
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           
 13041                           ;psect for function _EXT_INT_Initialize
 13042  0EE2                     _EXT_INT_Initialize:	
 13043  0EE2                     l5124:	
 13044                           ;incstack = 0
 13045                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13046                           
 13047                           
 13048                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 13049  0EE2  002E               	movlb	14	; select bank14
 13050  0EE3  100C               	bcf	12,0	;volatile
 13051                           
 13052                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 13053  0EE4  140B               	bsf	11,0	;volatile
 13054  0EE5                     l5126:	
 13055                           
 13056                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 13057  0EE5  30EA               	movlw	low _INT_DefaultInterruptHandler
 13058  0EE6  0020               	movlb	0	; select bank0
 13059  0EE7  00CC               	movwf	INT_SetInterruptHandler@InterruptHandler
 13060  0EE8  300D               	movlw	high _INT_DefaultInterruptHandler
 13061  0EE9  00CD               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 13062  0EEA  318E  2646  318E   	fcall	_INT_SetInterruptHandler
 13063  0EED                     l5128:	
 13064                           
 13065                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 13066  0EED  002E               	movlb	14	; select bank14
 13067  0EEE  1416               	bsf	22,0	;volatile
 13068  0EEF                     l26:	
 13069  0EEF  0008               	return
 13070  0EF0                     __end_of_EXT_INT_Initialize:	
 13071                           
 13072                           	psect	text23
 13073  0E46                     __ptext23:	
 13074 ;; *************** function _INT_SetInterruptHandler *****************
 13075 ;; Defined at:
 13076 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13079 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		wreg
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;Total ram usage:        2 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; Hardware stack levels required when called:    6
 13098 ;; This function calls:
 13099 ;;		Nothing
 13100 ;; This function is called by:
 13101 ;;		_EXT_INT_Initialize
 13102 ;;		_main
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function _INT_SetInterruptHandler
 13108  0E46                     _INT_SetInterruptHandler:	
 13109  0E46                     l5084:	
 13110                           ;incstack = 0
 13111                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13112                           
 13113                           
 13114                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 13115  0E46  0020               	movlb	0	; select bank0
 13116  0E47  084D               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 13117  0E48  00AD               	movwf	_INT_InterruptHandler+1
 13118  0E49  084C               	movf	INT_SetInterruptHandler@InterruptHandler,w
 13119  0E4A  00AC               	movwf	_INT_InterruptHandler
 13120  0E4B                     l20:	
 13121  0E4B  0008               	return
 13122  0E4C                     __end_of_INT_SetInterruptHandler:	
 13123                           
 13124                           	psect	text24
 13125  0FBD                     __ptext24:	
 13126 ;; *************** function _ADCC_Initialize *****************
 13127 ;; Defined at:
 13128 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;		None
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;Total ram usage:        0 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:    6
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_SYSTEM_Initialize
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           
 13157                           ;psect for function _ADCC_Initialize
 13158  0FBD                     _ADCC_Initialize:	
 13159  0FBD                     l5198:	
 13160                           ;incstack = 0
 13161                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13162                           
 13163                           
 13164                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13165  0FBD  0022               	movlb	2	; select bank2
 13166  0FBE  018E               	clrf	14	;volatile
 13167                           
 13168                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13169  0FBF  018F               	clrf	15	;volatile
 13170                           
 13171                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13172  0FC0  0190               	clrf	16	;volatile
 13173                           
 13174                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13175  0FC1  0191               	clrf	17	;volatile
 13176                           
 13177                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13178  0FC2  0192               	clrf	18	;volatile
 13179                           
 13180                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13181  0FC3  0193               	clrf	19	;volatile
 13182                           
 13183                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13184  0FC4  018D               	clrf	13	;volatile
 13185                           
 13186                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13187  0FC5  0021               	movlb	1	; select bank1
 13188  0FC6  019E               	clrf	30	;volatile
 13189                           
 13190                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13191  0FC7  019B               	clrf	27	;volatile
 13192                           
 13193                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 13194  0FC8  0194               	clrf	20	;volatile
 13195                           
 13196                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 13197  0FC9  0195               	clrf	21	;volatile
 13198                           
 13199                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 13200  0FCA  0196               	clrf	22	;volatile
 13201                           
 13202                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 13203  0FCB  0197               	clrf	23	;volatile
 13204                           
 13205                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 13206  0FCC  019A               	clrf	26	;volatile
 13207                           
 13208                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 13209  0FCD  0199               	clrf	25	;volatile
 13210                           
 13211                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 13212  0FCE  0198               	clrf	24	;volatile
 13213  0FCF                     l5200:	
 13214                           
 13215                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 13216  0FCF  3084               	movlw	132
 13217  0FD0  0093               	movwf	19	;volatile
 13218  0FD1                     l5202:	
 13219                           
 13220                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 13221  0FD1  019D               	clrf	29	;volatile
 13222  0FD2                     l444:	
 13223  0FD2  0008               	return
 13224  0FD3                     __end_of_ADCC_Initialize:	
 13225                           
 13226                           	psect	text25
 13227  07AE                     __ptext25:	
 13228 ;; *************** function _PWM6_LoadDutyValue *****************
 13229 ;; Defined at:
 13230 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;Total ram usage:        4 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:    6
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_main
 13255 ;;		_mod1_LED
 13256 ;;		_mod2_LED
 13257 ;;		_mod3_LED
 13258 ;;		_mod4_LED
 13259 ;;		_all_LED
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           
 13264                           ;psect for function _PWM6_LoadDutyValue
 13265  07AE                     _PWM6_LoadDutyValue:	
 13266  07AE                     l5382:	
 13267                           ;incstack = 0
 13268                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13269                           
 13270                           
 13271                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13272  07AE  0020               	movlb	0	; select bank0
 13273  07AF  084D               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13274  07B0  00CF               	movwf	??_PWM6_LoadDutyValue+1
 13275  07B1  084C               	movf	PWM6_LoadDutyValue@dutyValue,w
 13276  07B2  00CE               	movwf	??_PWM6_LoadDutyValue
 13277  07B3  36CF               	lsrf	??_PWM6_LoadDutyValue+1,f
 13278  07B4  0CCE               	rrf	??_PWM6_LoadDutyValue,f
 13279  07B5  36CF               	lsrf	??_PWM6_LoadDutyValue+1,f
 13280  07B6  0CCE               	rrf	??_PWM6_LoadDutyValue,f
 13281  07B7  084E               	movf	??_PWM6_LoadDutyValue,w
 13282  07B8  0027               	movlb	7	; select bank7
 13283  07B9  008D               	movwf	13	;volatile
 13284                           
 13285                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13286  07BA  0020               	movlb	0	; select bank0
 13287  07BB  084C               	movf	PWM6_LoadDutyValue@dutyValue,w
 13288  07BC  3903               	andlw	3
 13289  07BD  00CE               	movwf	??_PWM6_LoadDutyValue
 13290  07BE  3005               	movlw	5
 13291  07BF                     u2795:	
 13292  07BF  35CE               	lslf	??_PWM6_LoadDutyValue,f
 13293  07C0  3EFF               	addlw	-1
 13294  07C1  1D03               	skipz
 13295  07C2  2FBF               	goto	u2795
 13296  07C3  354E               	lslf	??_PWM6_LoadDutyValue,w
 13297  07C4  0027               	movlb	7	; select bank7
 13298  07C5  008C               	movwf	12	;volatile
 13299  07C6                     l651:	
 13300  07C6  0008               	return
 13301  07C7                     __end_of_PWM6_LoadDutyValue:	
 13302                           
 13303                           	psect	text26
 13304  077A                     __ptext26:	
 13305 ;; *************** function _LED_bin *****************
 13306 ;; Defined at:
 13307 ;;		line 296 in file "main.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  value           2    3[BANK0 ] unsigned int 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;		None
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  1    wreg      void 
 13314 ;; Registers used:
 13315 ;;		wreg, status,2, status,0
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;Total ram usage:        5 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    6
 13328 ;; This function calls:
 13329 ;;		Nothing
 13330 ;; This function is called by:
 13331 ;;		_main
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _LED_bin
 13337  077A                     _LED_bin:	
 13338  077A                     l5468:	
 13339                           ;incstack = 0
 13340                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 13341                           
 13342                           
 13343                           ;main.c: 296: void LED_bin(unsigned int value);main.c: 297: {;main.c: 299:     LATAbits.
      +                          LATA4 = (value & 1);
 13344  077A  0020               	movlb	0	; select bank0
 13345  077B  084C               	movf	LED_bin@value,w
 13346  077C  3901               	andlw	1
 13347  077D  00CE               	movwf	??_LED_bin
 13348  077E  0ECE               	swapf	??_LED_bin,f
 13349  077F  0816               	movf	22,w	;volatile
 13350  0780  064E               	xorwf	??_LED_bin,w
 13351  0781  39EF               	andlw	-17
 13352  0782  064E               	xorwf	??_LED_bin,w
 13353  0783  0096               	movwf	22	;volatile
 13354                           
 13355                           ;main.c: 300:     LATAbits.LATA5 = (value >> 1);
 13356  0784  084D               	movf	LED_bin@value+1,w
 13357  0785  00CF               	movwf	??_LED_bin+1
 13358  0786  084C               	movf	LED_bin@value,w
 13359  0787  00CE               	movwf	??_LED_bin
 13360  0788  36CF               	lsrf	??_LED_bin+1,f
 13361  0789  0CCE               	rrf	??_LED_bin,f
 13362  078A  084E               	movf	??_LED_bin,w
 13363  078B  00D0               	movwf	??_LED_bin+2
 13364  078C  0ED0               	swapf	??_LED_bin+2,f
 13365  078D  0DD0               	rlf	??_LED_bin+2,f
 13366  078E  0816               	movf	22,w	;volatile
 13367  078F  0650               	xorwf	??_LED_bin+2,w
 13368  0790  39DF               	andlw	-33
 13369  0791  0650               	xorwf	??_LED_bin+2,w
 13370  0792  0096               	movwf	22	;volatile
 13371  0793                     l846:	
 13372  0793  0008               	return
 13373  0794                     __end_of_LED_bin:	
 13374                           
 13375                           	psect	text27
 13376  07F6                     __ptext27:	
 13377 ;; *************** function _I2C_Initialize *****************
 13378 ;; Defined at:
 13379 ;;		line 5 in file "I2C/i2c.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;		None
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  1    wreg      void 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0, pclath, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;Total ram usage:        0 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:    7
 13400 ;; This function calls:
 13401 ;;		_i2c1_driver_open
 13402 ;; This function is called by:
 13403 ;;		_main
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           
 13408                           ;psect for function _I2C_Initialize
 13409  07F6                     _I2C_Initialize:	
 13410  07F6                     l5396:	
 13411                           ;incstack = 0
 13412                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13413                           
 13414                           
 13415                           ;I2C/i2c.c: 7:     i2c1_driver_open();
 13416  07F6  318E  26AF  3187   	fcall	_i2c1_driver_open
 13417  07F9                     l5398:	
 13418                           
 13419                           ;I2C/i2c.c: 8:     TRISCbits.TRISC3 = 1;
 13420  07F9  0020               	movlb	0	; select bank0
 13421  07FA  1593               	bsf	19,3	;volatile
 13422  07FB                     l5400:	
 13423                           
 13424                           ;I2C/i2c.c: 9:     TRISCbits.TRISC4 = 1;
 13425  07FB  1613               	bsf	19,4	;volatile
 13426  07FC                     l5402:	
 13427                           
 13428                           ;I2C/i2c.c: 10:     WPUC3 = 1;
 13429  07FC  003E               	movlb	30	; select bank30
 13430  07FD  15CF               	bsf	79,3	;volatile
 13431  07FE                     l5404:	
 13432                           
 13433                           ;I2C/i2c.c: 11:     WPUC4 = 1;
 13434  07FE  164F               	bsf	79,4	;volatile
 13435  07FF                     l1339:	
 13436  07FF  0008               	return
 13437  0800                     __end_of_I2C_Initialize:	
 13438                           
 13439                           	psect	text28
 13440  0EAF                     __ptext28:	
 13441 ;; *************** function _i2c1_driver_open *****************
 13442 ;; Defined at:
 13443 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 13444 ;; Parameters:    Size  Location     Type
 13445 ;;		None
 13446 ;; Auto vars:     Size  Location     Type
 13447 ;;		None
 13448 ;; Return value:  Size  Location     Type
 13449 ;;		None               void
 13450 ;; Registers used:
 13451 ;;		wreg, status,2
 13452 ;; Tracked objects:
 13453 ;;		On entry : 0/0
 13454 ;;		On exit  : 0/0
 13455 ;;		Unchanged: 0/0
 13456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;Total ram usage:        0 bytes
 13462 ;; Hardware stack levels used:    1
 13463 ;; Hardware stack levels required when called:    6
 13464 ;; This function calls:
 13465 ;;		Nothing
 13466 ;; This function is called by:
 13467 ;;		_I2C_Initialize
 13468 ;;		_i2c_open
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           
 13473                           ;psect for function _i2c1_driver_open
 13474  0EAF                     _i2c1_driver_open:	
 13475  0EAF                     l5244:	
 13476                           ;incstack = 0
 13477                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13478                           
 13479  0EAF  0023               	movlb	3	; select bank3
 13480  0EB0  1A90               	btfsc	16,5	;volatile
 13481  0EB1  2EB3               	goto	u2621
 13482  0EB2  2EB4               	goto	u2620
 13483  0EB3                     u2621:	
 13484  0EB3  2EBA               	goto	l193
 13485  0EB4                     u2620:	
 13486  0EB4                     l5246:	
 13487  0EB4  018F               	clrf	15	;volatile
 13488  0EB5                     l5248:	
 13489  0EB5  3028               	movlw	40
 13490  0EB6  0090               	movwf	16	;volatile
 13491  0EB7                     l5250:	
 13492  0EB7  0191               	clrf	17	;volatile
 13493  0EB8  3003               	movlw	3
 13494  0EB9  008D               	movwf	13	;volatile
 13495  0EBA                     l193:	
 13496  0EBA  0008               	return
 13497  0EBB                     __end_of_i2c1_driver_open:	
 13498                           
 13499                           	psect	text29
 13500  0794                     __ptext29:	
 13501 ;; *************** function _ADC_read *****************
 13502 ;; Defined at:
 13503 ;;		line 375 in file "main.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;		None
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;		None
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  2    5[BANK0 ] unsigned int 
 13510 ;; Registers used:
 13511 ;;		wreg, status,2, status,0, pclath, cstack
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13521 ;;Total ram usage:        2 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    7
 13524 ;; This function calls:
 13525 ;;		_ADCC_GetConversionResult
 13526 ;;		_ADCC_IsConversionDone
 13527 ;;		_ADCC_StartConversion
 13528 ;; This function is called by:
 13529 ;;		_main
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           
 13534                           ;psect for function _ADC_read
 13535  0794                     _ADC_read:	
 13536  0794                     l5458:	
 13537                           ;incstack = 0
 13538                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 13539                           
 13540                           
 13541                           ;main.c: 377:    ADCC_StartConversion(channel_ANA0);
 13542  0794  3000               	movlw	0
 13543  0795  318E  2684  3187   	fcall	_ADCC_StartConversion
 13544                           
 13545                           ;main.c: 378:     while(!ADCC_IsConversionDone()){
 13546  0798  2F9D               	goto	l5462
 13547  0799                     l5460:	
 13548                           
 13549                           ;main.c: 379:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13550  0799  3053               	movlw	83
 13551  079A                     u3527:	
 13552  079A  0B89               	decfsz	9,f
 13553  079B  2F9A               	goto	u3527
 13554  079C  0000               	nop
 13555  079D                     l5462:	
 13556                           
 13557                           ;main.c: 378:     while(!ADCC_IsConversionDone()){
 13558  079D  318E  2665  3187   	fcall	_ADCC_IsConversionDone
 13559  07A0  3A00               	xorlw	0
 13560  07A1  1903               	skipnz
 13561  07A2  2FA4               	goto	u3061
 13562  07A3  2FA5               	goto	u3060
 13563  07A4                     u3061:	
 13564  07A4  2F99               	goto	l5460
 13565  07A5                     u3060:	
 13566  07A5                     l5464:	
 13567                           
 13568                           ;main.c: 382:     return ADCC_GetConversionResult();
 13569  07A5  318E  269D  3187   	fcall	_ADCC_GetConversionResult
 13570  07A8  0020               	movlb	0	; select bank0
 13571  07A9  084D               	movf	?_ADCC_GetConversionResult+1,w
 13572  07AA  00CF               	movwf	?_ADC_read+1
 13573  07AB  084C               	movf	?_ADCC_GetConversionResult,w
 13574  07AC  00CE               	movwf	?_ADC_read
 13575  07AD                     l878:	
 13576  07AD  0008               	return
 13577  07AE                     __end_of_ADC_read:	
 13578                           
 13579                           	psect	text30
 13580  0E84                     __ptext30:	
 13581 ;; *************** function _ADCC_StartConversion *****************
 13582 ;; Defined at:
 13583 ;;		line 106 in file "mcc_generated_files/adcc.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  channel         1    wreg     enum E12246
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  channel         1    3[BANK0 ] enum E12246
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      void 
 13590 ;; Registers used:
 13591 ;;		wreg
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;Total ram usage:        1 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:    6
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_ADC_read
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           
 13612                           ;psect for function _ADCC_StartConversion
 13613  0E84                     _ADCC_StartConversion:	
 13614                           
 13615                           ;incstack = 0
 13616                           ; Regs used in _ADCC_StartConversion: [wreg]
 13617                           ;ADCC_StartConversion@channel stored from wreg
 13618  0E84  0020               	movlb	0	; select bank0
 13619  0E85  00CC               	movwf	ADCC_StartConversion@channel
 13620  0E86                     l5256:	
 13621                           
 13622                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 13623  0E86  084C               	movf	ADCC_StartConversion@channel,w
 13624  0E87  0021               	movlb	1	; select bank1
 13625  0E88  009E               	movwf	30	;volatile
 13626  0E89                     l5258:	
 13627                           
 13628                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 13629  0E89  1793               	bsf	19,7	;volatile
 13630  0E8A                     l5260:	
 13631                           
 13632                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 13633  0E8A  1413               	bsf	19,0	;volatile
 13634  0E8B                     l447:	
 13635  0E8B  0008               	return
 13636  0E8C                     __end_of_ADCC_StartConversion:	
 13637                           
 13638                           	psect	text31
 13639  0E65                     __ptext31:	
 13640 ;; *************** function _ADCC_IsConversionDone *****************
 13641 ;; Defined at:
 13642 ;;		line 118 in file "mcc_generated_files/adcc.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;		None
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      _Bool 
 13649 ;; Registers used:
 13650 ;;		wreg, status,0
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    6
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_ADC_read
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function _ADCC_IsConversionDone
 13672  0E65                     _ADCC_IsConversionDone:	
 13673  0E65                     l5262:	
 13674                           ;incstack = 0
 13675                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 13676                           
 13677                           
 13678                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 13679  0E65  1003               	clrc
 13680  0E66  0021               	movlb	1	; select bank1
 13681  0E67  1C13               	btfss	19,0	;volatile
 13682  0E68  1403               	setc
 13683  0E69  3000               	movlw	0
 13684  0E6A  3D09               	addwfc	9,w
 13685  0E6B                     l450:	
 13686  0E6B  0008               	return
 13687  0E6C                     __end_of_ADCC_IsConversionDone:	
 13688                           
 13689                           	psect	text32
 13690  0E9D                     __ptext32:	
 13691 ;; *************** function _ADCC_GetConversionResult *****************
 13692 ;; Defined at:
 13693 ;;		line 124 in file "mcc_generated_files/adcc.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  2    3[BANK0 ] unsigned short 
 13700 ;; Registers used:
 13701 ;;		wreg
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;Total ram usage:        2 bytes
 13712 ;; Hardware stack levels used:    1
 13713 ;; Hardware stack levels required when called:    6
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_ADC_read
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           
 13722                           ;psect for function _ADCC_GetConversionResult
 13723  0E9D                     _ADCC_GetConversionResult:	
 13724  0E9D                     l5266:	
 13725                           ;incstack = 0
 13726                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13727                           
 13728                           
 13729                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13730  0E9D  0021               	movlb	1	; select bank1
 13731  0E9E  080D               	movf	13,w	;volatile
 13732  0E9F  0020               	movlb	0	; select bank0
 13733  0EA0  00CD               	movwf	?_ADCC_GetConversionResult+1
 13734  0EA1  0021               	movlb	1	; select bank1
 13735  0EA2  080C               	movf	12,w	;volatile
 13736  0EA3  0020               	movlb	0	; select bank0
 13737  0EA4  00CC               	movwf	?_ADCC_GetConversionResult
 13738  0EA5                     l453:	
 13739  0EA5  0008               	return
 13740  0EA6                     __end_of_ADCC_GetConversionResult:	
 13741                           
 13742                           	psect	intentry
 13743  0004                     __pintentry:	
 13744 ;; *************** function _INTERRUPT_InterruptManager *****************
 13745 ;; Defined at:
 13746 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;		None
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;		None
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1    wreg      void 
 13753 ;; Registers used:
 13754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13755 ;; Tracked objects:
 13756 ;;		On entry : 0/0
 13757 ;;		On exit  : 0/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        0 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    5
 13767 ;; This function calls:
 13768 ;;		Absolute function
 13769 ;;		_INT_ISR
 13770 ;;		_TMR0_ISR
 13771 ;;		_TMR1_ISR
 13772 ;;		_i2c_ISR
 13773 ;;		_i2c_busCollisionISR
 13774 ;; This function is called by:
 13775 ;;		Interrupt level 1
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779  0004                     _INTERRUPT_InterruptManager:	
 13780                           
 13781                           ;incstack = 0
 13782  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13783                           
 13784                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13785  0005  3180               	pagesel	$
 13786  0006                     i1l5550:	
 13787                           
 13788                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 13789  0006  002E               	movlb	14	; select bank14
 13790  0007  1C16               	btfss	22,0	;volatile
 13791  0008  280A               	goto	u314_21
 13792  0009  280B               	goto	u314_20
 13793  000A                     u314_21:	
 13794  000A  2813               	goto	i1l67
 13795  000B                     u314_20:	
 13796  000B                     i1l5552:	
 13797  000B  1C0C               	btfss	12,0	;volatile
 13798  000C  280E               	goto	u315_21
 13799  000D  280F               	goto	u315_20
 13800  000E                     u315_21:	
 13801  000E  2813               	goto	i1l67
 13802  000F                     u315_20:	
 13803  000F                     i1l5554:	
 13804                           
 13805                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 13806  000F  318E  2640  3180   	fcall	_INT_ISR
 13807                           
 13808                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13809  0012  284D               	goto	i1l79
 13810  0013                     i1l67:	
 13811                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 13812                           
 13813  0013  1E96               	btfss	22,5	;volatile
 13814  0014  2816               	goto	u316_21
 13815  0015  2817               	goto	u316_20
 13816  0016                     u316_21:	
 13817  0016  281F               	goto	i1l69
 13818  0017                     u316_20:	
 13819  0017                     i1l5556:	
 13820  0017  1E8C               	btfss	12,5	;volatile
 13821  0018  281A               	goto	u317_21
 13822  0019  281B               	goto	u317_20
 13823  001A                     u317_21:	
 13824  001A  281F               	goto	i1l69
 13825  001B                     u317_20:	
 13826  001B                     i1l5558:	
 13827                           
 13828                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 13829  001B  318E  26F0  3180   	fcall	_TMR0_ISR
 13830                           
 13831                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 13832  001E  284D               	goto	i1l79
 13833  001F                     i1l69:	
 13834                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 13835                           
 13836  001F  1F0B               	btfss	11,6	;volatile
 13837  0020  2822               	goto	u318_21
 13838  0021  2823               	goto	u318_20
 13839  0022                     u318_21:	
 13840  0022  284D               	goto	i1l73
 13841  0023                     u318_20:	
 13842  0023                     i1l5560:	
 13843                           
 13844                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13845  0023  1C99               	btfss	25,1	;volatile
 13846  0024  2826               	goto	u319_21
 13847  0025  2827               	goto	u319_20
 13848  0026                     u319_21:	
 13849  0026  2832               	goto	i1l72
 13850  0027                     u319_20:	
 13851  0027                     i1l5562:	
 13852  0027  1C8F               	btfss	15,1	;volatile
 13853  0028  282A               	goto	u320_21
 13854  0029  282B               	goto	u320_20
 13855  002A                     u320_21:	
 13856  002A  2832               	goto	i1l72
 13857  002B                     u320_20:	
 13858  002B                     i1l5564:	
 13859                           
 13860                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 13861  002B  0020               	movlb	0	; select bank0
 13862  002C  082B               	movf	_i2c1_driver_busCollisionISR+1,w
 13863  002D  008A               	movwf	10
 13864  002E  082A               	movf	_i2c1_driver_busCollisionISR,w
 13865  002F  000A               	callw
 13866  0030  3180               	pagesel	$
 13867                           
 13868                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13869  0031  284D               	goto	i1l79
 13870  0032                     i1l72:	
 13871                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 13872                           
 13873  0032  1C19               	btfss	25,0	;volatile
 13874  0033  2835               	goto	u321_21
 13875  0034  2836               	goto	u321_20
 13876  0035                     u321_21:	
 13877  0035  2841               	goto	i1l74
 13878  0036                     u321_20:	
 13879  0036                     i1l5566:	
 13880  0036  1C0F               	btfss	15,0	;volatile
 13881  0037  2839               	goto	u322_21
 13882  0038  283A               	goto	u322_20
 13883  0039                     u322_21:	
 13884  0039  2841               	goto	i1l74
 13885  003A                     u322_20:	
 13886  003A                     i1l5568:	
 13887                           
 13888                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 13889  003A  0020               	movlb	0	; select bank0
 13890  003B  0829               	movf	_i2c1_driver_i2cISR+1,w
 13891  003C  008A               	movwf	10
 13892  003D  0828               	movf	_i2c1_driver_i2cISR,w
 13893  003E  000A               	callw
 13894  003F  3180               	pagesel	$
 13895                           
 13896                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13897  0040  284D               	goto	i1l79
 13898  0041                     i1l74:	
 13899                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 13900                           
 13901  0041  1C1A               	btfss	26,0	;volatile
 13902  0042  2844               	goto	u323_21
 13903  0043  2845               	goto	u323_20
 13904  0044                     u323_21:	
 13905  0044  284D               	goto	i1l73
 13906  0045                     u323_20:	
 13907  0045                     i1l5570:	
 13908  0045  1C10               	btfss	16,0	;volatile
 13909  0046  2848               	goto	u324_21
 13910  0047  2849               	goto	u324_20
 13911  0048                     u324_21:	
 13912  0048  284D               	goto	i1l73
 13913  0049                     u324_20:	
 13914  0049                     i1l5572:	
 13915                           
 13916                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 13917  0049  3187  27DF  3180   	fcall	_TMR1_ISR
 13918                           
 13919                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 13920  004C  284D               	goto	i1l79
 13921  004D                     i1l73:	
 13922  004D                     i1l79:	
 13923                           ;mcc_generated_files/interrupt_manager.c: 81:     }
 13924                           
 13925  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13926  004E  0009               	retfie
 13927  004F                     __end_of_INTERRUPT_InterruptManager:	
 13928                           
 13929                           	psect	text34
 13930  0E0F                     __ptext34:	
 13931 ;; *************** function _i2c_busCollisionISR *****************
 13932 ;; Defined at:
 13933 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;		None
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		status,2, status,0, pclath, cstack
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;Total ram usage:        0 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:    1
 13954 ;; This function calls:
 13955 ;;		_i2c1_driver_clearBusCollision
 13956 ;; This function is called by:
 13957 ;;		_i2c_open
 13958 ;;		_INTERRUPT_InterruptManager
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           
 13963                           ;psect for function _i2c_busCollisionISR
 13964  0E0F                     _i2c_busCollisionISR:	
 13965  0E0F                     i1l4664:	
 13966                           ;incstack = 0
 13967                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13968                           
 13969                           
 13970                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 13971  0E0F  318E  2604  318E   	fcall	_i2c1_driver_clearBusCollision
 13972  0E12                     i1l1131:	
 13973  0E12  0008               	return
 13974  0E13                     __end_of_i2c_busCollisionISR:	
 13975                           
 13976                           	psect	text35
 13977  0E04                     __ptext35:	
 13978 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13979 ;; Defined at:
 13980 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		None
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; This function calls:
 14001 ;;		Nothing
 14002 ;; This function is called by:
 14003 ;;		_i2c_busCollisionISR
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           
 14008                           ;psect for function _i2c1_driver_clearBusCollision
 14009  0E04                     _i2c1_driver_clearBusCollision:	
 14010  0E04                     i1l4084:	
 14011                           ;incstack = 0
 14012                           ; Regs used in _i2c1_driver_clearBusCollision: []
 14013                           
 14014                           
 14015                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 14016  0E04  002E               	movlb	14	; select bank14
 14017  0E05  108F               	bcf	15,1	;volatile
 14018  0E06                     i1l271:	
 14019  0E06  0008               	return
 14020  0E07                     __end_of_i2c1_driver_clearBusCollision:	
 14021                           
 14022                           	psect	text36
 14023  05FD                     __ptext36:	
 14024 ;; *************** function _i2c_ISR *****************
 14025 ;; Defined at:
 14026 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;		None
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;		None
 14031 ;; Return value:  Size  Location     Type
 14032 ;;                  1    wreg      void 
 14033 ;; Registers used:
 14034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14035 ;; Tracked objects:
 14036 ;;		On entry : 0/0
 14037 ;;		On exit  : 0/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14043 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14044 ;;Total ram usage:        3 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; Hardware stack levels required when called:    4
 14047 ;; This function calls:
 14048 ;;		_do_I2C_DO_ACK
 14049 ;;		_do_I2C_DO_ADDRESS_NACK
 14050 ;;		_do_I2C_DO_NACK_RESTART
 14051 ;;		_do_I2C_DO_NACK_STOP
 14052 ;;		_do_I2C_IDLE
 14053 ;;		_do_I2C_RCEN
 14054 ;;		_do_I2C_RESET
 14055 ;;		_do_I2C_RX
 14056 ;;		_do_I2C_SEND_ADR_READ
 14057 ;;		_do_I2C_SEND_ADR_WRITE
 14058 ;;		_do_I2C_SEND_RESTART
 14059 ;;		_do_I2C_SEND_RESTART_READ
 14060 ;;		_do_I2C_SEND_RESTART_WRITE
 14061 ;;		_do_I2C_SEND_STOP
 14062 ;;		_do_I2C_TX
 14063 ;;		_do_I2C_TX_EMPTY
 14064 ;;		_i2c1_driver_isNACK
 14065 ;;		_mssp1_clearIRQ
 14066 ;; This function is called by:
 14067 ;;		_i2c_open
 14068 ;;		_i2c_poller
 14069 ;;		_INTERRUPT_InterruptManager
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           
 14074                           ;psect for function _i2c_ISR
 14075  05FD                     _i2c_ISR:	
 14076  05FD                     i1l4654:	
 14077                           ;incstack = 0
 14078                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14079                           
 14080                           
 14081                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 14082  05FD  318E  2601  3185   	fcall	_mssp1_clearIRQ
 14083  0600                     i1l4656:	
 14084                           
 14085                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 14086  0600  0021               	movlb	1	; select bank1
 14087  0601  1DA0               	btfss	_i2c_status^(0+128),3
 14088  0602  2E04               	goto	u218_21
 14089  0603  2E05               	goto	u218_20
 14090  0604                     u218_21:	
 14091  0604  2E12               	goto	i1l4662
 14092  0605                     u218_20:	
 14093  0605                     i1l4658:	
 14094  0605  318E  266C  3185   	fcall	_i2c1_driver_isNACK
 14095  0608  1C03               	btfss	3,0
 14096  0609  2E0B               	goto	u219_21
 14097  060A  2E0C               	goto	u219_20
 14098  060B                     u219_21:	
 14099  060B  2E12               	goto	i1l4662
 14100  060C                     u219_20:	
 14101  060C                     i1l4660:	
 14102                           
 14103                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 14104  060C  300F               	movlw	15
 14105  060D  0020               	movlb	0	; select bank0
 14106  060E  00C9               	movwf	??_i2c_ISR
 14107  060F  0849               	movf	??_i2c_ISR,w
 14108  0610  0021               	movlb	1	; select bank1
 14109  0611  00A9               	movwf	(_i2c_status^(0+128)+9)
 14110  0612                     i1l4662:	
 14111                           
 14112                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 14113  0612  0021               	movlb	1	; select bank1
 14114  0613  0829               	movf	(_i2c_status^(0+128)+9),w
 14115  0614  0020               	movlb	0	; select bank0
 14116  0615  00C9               	movwf	??_i2c_ISR
 14117  0616  01CA               	clrf	??_i2c_ISR+1
 14118  0617  35C9               	lslf	??_i2c_ISR,f
 14119  0618  0DCA               	rlf	??_i2c_ISR+1,f
 14120  0619  30C4               	movlw	low (_fsmStateTable| (0+32768))
 14121  061A  0749               	addwf	??_i2c_ISR,w
 14122  061B  0084               	movwf	4
 14123  061C  3086               	movlw	high (_fsmStateTable| (0+32768))
 14124  061D  3D4A               	addwfc	??_i2c_ISR+1,w
 14125  061E  0085               	movwf	5
 14126  061F  3F01               	moviw [1]fsr0
 14127  0620  008A               	movwf	10
 14128  0621  3F00               	moviw [0]fsr0
 14129  0622  000A               	callw
 14130  0623  3185               	pagesel	$
 14131  0624  0020               	movlb	0	; select bank0
 14132  0625  00CB               	movwf	??_i2c_ISR+2
 14133  0626  084B               	movf	??_i2c_ISR+2,w
 14134  0627  0021               	movlb	1	; select bank1
 14135  0628  00A9               	movwf	(_i2c_status^(0+128)+9)
 14136  0629                     i1l1128:	
 14137  0629  0008               	return
 14138  062A                     __end_of_i2c_ISR:	
 14139                           
 14140                           	psect	text37
 14141  0E01                     __ptext37:	
 14142 ;; *************** function _mssp1_clearIRQ *****************
 14143 ;; Defined at:
 14144 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 14145 ;; Parameters:    Size  Location     Type
 14146 ;;		None
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;		None
 14149 ;; Return value:  Size  Location     Type
 14150 ;;                  1    wreg      void 
 14151 ;; Registers used:
 14152 ;;		None
 14153 ;; Tracked objects:
 14154 ;;		On entry : 0/0
 14155 ;;		On exit  : 0/0
 14156 ;;		Unchanged: 0/0
 14157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;Total ram usage:        0 bytes
 14163 ;; Hardware stack levels used:    1
 14164 ;; This function calls:
 14165 ;;		Nothing
 14166 ;; This function is called by:
 14167 ;;		_i2c_ISR
 14168 ;;		_i2c_open
 14169 ;;		_i2c_close
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           
 14174                           ;psect for function _mssp1_clearIRQ
 14175  0E01                     _mssp1_clearIRQ:	
 14176  0E01                     i1l4070:	
 14177                           ;incstack = 0
 14178                           ; Regs used in _mssp1_clearIRQ: []
 14179                           
 14180                           
 14181                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 14182  0E01  002E               	movlb	14	; select bank14
 14183  0E02  100F               	bcf	15,0	;volatile
 14184  0E03                     i1l175:	
 14185  0E03  0008               	return
 14186  0E04                     __end_of_mssp1_clearIRQ:	
 14187                           
 14188                           	psect	text38
 14189  047E                     __ptext38:	
 14190 ;; *************** function _do_I2C_RX *****************
 14191 ;; Defined at:
 14192 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;		None
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;		None
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      enum E12722
 14199 ;; Registers used:
 14200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;Total ram usage:        3 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; Hardware stack levels required when called:    3
 14213 ;; This function calls:
 14214 ;;		Absolute function
 14215 ;;		_do_I2C_DO_NACK_RESTART
 14216 ;;		_do_I2C_DO_NACK_STOP
 14217 ;;		_i2c1_driver_getRXData
 14218 ;;		_i2c1_driver_sendACK
 14219 ;;		_i2c_restartWrite
 14220 ;;		_rd1RegCompleteHandler
 14221 ;;		_rd2RegCompleteHandler
 14222 ;;		_rdBlkRegCompleteHandler
 14223 ;;		_returnReset
 14224 ;;		_returnStop
 14225 ;;		_wr1RegCompleteHandler
 14226 ;;		_wr2RegCompleteHandler
 14227 ;; This function is called by:
 14228 ;;		_i2c_ISR
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           
 14233                           ;psect for function _do_I2C_RX
 14234  047E                     _do_I2C_RX:	
 14235  047E                     i1l4316:	
 14236                           ;incstack = 0
 14237                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14238                           
 14239                           
 14240                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 14241  047E  318D  25FB  3184   	fcall	_i2c1_driver_getRXData
 14242  0481  00FA               	movwf	??_do_I2C_RX
 14243  0482  0021               	movlb	1	; select bank1
 14244  0483  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 14245  0484  0086               	movwf	6
 14246  0485  0187               	clrf	7
 14247  0486  087A               	movf	??_do_I2C_RX,w
 14248  0487  0081               	movwf	1
 14249  0488                     i1l4318:	
 14250  0488  3001               	movlw	1
 14251  0489  00FA               	movwf	??_do_I2C_RX
 14252  048A  087A               	movf	??_do_I2C_RX,w
 14253  048B  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 14254  048C                     i1l4320:	
 14255                           
 14256                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 14257  048C  3001               	movlw	1
 14258  048D  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14259  048E  3000               	movlw	0
 14260  048F  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14261  0490  0823               	movf	(_i2c_status^(0+128)+3),w
 14262  0491  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14263  0492  1903               	btfsc	3,2
 14264  0493  2C95               	goto	u165_21
 14265  0494  2C96               	goto	u165_20
 14266  0495                     u165_21:	
 14267  0495  2C9B               	goto	i1l1103
 14268  0496                     u165_20:	
 14269  0496                     i1l4322:	
 14270                           
 14271                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 14272  0496  318E  2607  3184   	fcall	_i2c1_driver_sendACK
 14273  0499                     i1l4324:	
 14274                           
 14275                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 14276  0499  3005               	movlw	5
 14277  049A  2CC7               	goto	i1l1104
 14278  049B                     i1l1103:	
 14279                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 14280                           
 14281                           
 14282                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 14283  049B  1520               	bsf	_i2c_status^(0+128),2
 14284                           
 14285                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14286  049C  2CA5               	goto	i1l4340
 14287  049D                     i1l4330:	
 14288                           
 14289                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 14290  049D  318E  263B  3184   	fcall	_do_I2C_DO_NACK_RESTART
 14291  04A0  2CC7               	goto	i1l1104
 14292  04A1                     i1l4334:	
 14293                           
 14294                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 14295  04A1  318E  2636  3184   	fcall	_do_I2C_DO_NACK_STOP
 14296  04A4  2CC7               	goto	i1l1104
 14297  04A5                     i1l4340:	
 14298  04A5  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14299  04A6  00FA               	movwf	??_do_I2C_RX
 14300  04A7  087A               	movf	??_do_I2C_RX,w
 14301  04A8  00F9               	movwf	rdBlkRegCompleteHandler@p
 14302  04A9  300B               	movlw	11
 14303  04AA  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14304  04AB  0086               	movwf	6
 14305  04AC  0187               	clrf	7
 14306  04AD  3F41               	moviw [1]fsr1
 14307  04AE  008A               	movwf	10
 14308  04AF  3F40               	moviw [0]fsr1
 14309  04B0  000A               	callw
 14310  04B1  3184               	pagesel	$
 14311  04B2  00FB               	movwf	??_do_I2C_RX+1
 14312  04B3  01FC               	clrf	??_do_I2C_RX+2
 14313                           
 14314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14315                           ; Switch size 1, requested type "simple"
 14316                           ; Number of cases is 1, Range of values is 0 to 0
 14317                           ; switch strategies available:
 14318                           ; Name         Instructions Cycles
 14319                           ; simple_byte            4     3 (average)
 14320                           ; direct_byte            8     6 (fixed)
 14321                           ; jumptable            260     6 (fixed)
 14322                           ;	Chosen strategy is simple_byte
 14323  04B4  087C               	movf	??_do_I2C_RX+2,w
 14324  04B5  3A00               	xorlw	0	; case 0
 14325  04B6  1903               	skipnz
 14326  04B7  2CB9               	goto	i1l5972
 14327  04B8  2CA1               	goto	i1l4334
 14328  04B9                     i1l5972:	
 14329                           
 14330                           ; Switch size 1, requested type "simple"
 14331                           ; Number of cases is 4, Range of values is 1 to 4
 14332                           ; switch strategies available:
 14333                           ; Name         Instructions Cycles
 14334                           ; simple_byte           13     7 (average)
 14335                           ; direct_byte           17     9 (fixed)
 14336                           ; jumptable            263     9 (fixed)
 14337                           ;	Chosen strategy is simple_byte
 14338  04B9  087B               	movf	??_do_I2C_RX+1,w
 14339  04BA  3A01               	xorlw	1	; case 1
 14340  04BB  1903               	skipnz
 14341  04BC  2CA1               	goto	i1l4334
 14342  04BD  3A03               	xorlw	3	; case 2
 14343  04BE  1903               	skipnz
 14344  04BF  2C9D               	goto	i1l4330
 14345  04C0  3A01               	xorlw	1	; case 3
 14346  04C1  1903               	skipnz
 14347  04C2  2C9D               	goto	i1l4330
 14348  04C3  3A07               	xorlw	7	; case 4
 14349  04C4  1903               	skipnz
 14350  04C5  2CA1               	goto	i1l4334
 14351  04C6  2CA1               	goto	i1l4334
 14352  04C7                     i1l1104:	
 14353  04C7  0008               	return
 14354  04C8                     __end_of_do_I2C_RX:	
 14355                           
 14356                           	psect	text39
 14357  042A                     __ptext39:	
 14358 ;; *************** function _do_I2C_TX *****************
 14359 ;; Defined at:
 14360 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;		None
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1    wreg      enum E12722
 14367 ;; Registers used:
 14368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14376 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;Total ram usage:        3 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:    3
 14381 ;; This function calls:
 14382 ;;		Absolute function
 14383 ;;		_do_I2C_SEND_RESTART_READ
 14384 ;;		_do_I2C_SEND_RESTART_WRITE
 14385 ;;		_do_I2C_SEND_STOP
 14386 ;;		_i2c1_driver_TXData
 14387 ;;		_i2c1_driver_isNACK
 14388 ;;		_i2c_restartWrite
 14389 ;;		_rd1RegCompleteHandler
 14390 ;;		_rd2RegCompleteHandler
 14391 ;;		_rdBlkRegCompleteHandler
 14392 ;;		_returnReset
 14393 ;;		_returnStop
 14394 ;;		_wr1RegCompleteHandler
 14395 ;;		_wr2RegCompleteHandler
 14396 ;; This function is called by:
 14397 ;;		_i2c_ISR
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           
 14402                           ;psect for function _do_I2C_TX
 14403  042A                     _do_I2C_TX:	
 14404  042A                     i1l4282:	
 14405                           ;incstack = 0
 14406                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14407                           
 14408                           
 14409                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 14410  042A  318E  266C  3184   	fcall	_i2c1_driver_isNACK
 14411  042D  1C03               	btfss	3,0
 14412  042E  2C30               	goto	u163_21
 14413  042F  2C31               	goto	u163_20
 14414  0430                     u163_21:	
 14415  0430  2C61               	goto	i1l1087
 14416  0431                     u163_20:	
 14417  0431  2C3E               	goto	i1l4300
 14418  0432                     i1l4286:	
 14419                           
 14420                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 14421  0432  318E  261D  3184   	fcall	_do_I2C_SEND_RESTART_READ
 14422  0435  2C7D               	goto	i1l1090
 14423  0436                     i1l4290:	
 14424                           
 14425                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 14426  0436  318E  2622  3184   	fcall	_do_I2C_SEND_RESTART_WRITE
 14427  0439  2C7D               	goto	i1l1090
 14428  043A                     i1l4294:	
 14429                           
 14430                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 14431  043A  318E  262C  3184   	fcall	_do_I2C_SEND_STOP
 14432  043D  2C7D               	goto	i1l1090
 14433  043E                     i1l4300:	
 14434  043E  0021               	movlb	1	; select bank1
 14435  043F  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14436  0440  00FA               	movwf	??_do_I2C_TX
 14437  0441  087A               	movf	??_do_I2C_TX,w
 14438  0442  00F9               	movwf	rdBlkRegCompleteHandler@p
 14439  0443  3011               	movlw	17
 14440  0444  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14441  0445  0086               	movwf	6
 14442  0446  0187               	clrf	7
 14443  0447  3F41               	moviw [1]fsr1
 14444  0448  008A               	movwf	10
 14445  0449  3F40               	moviw [0]fsr1
 14446  044A  000A               	callw
 14447  044B  3184               	pagesel	$
 14448  044C  00FB               	movwf	??_do_I2C_TX+1
 14449  044D  01FC               	clrf	??_do_I2C_TX+2
 14450                           
 14451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14452                           ; Switch size 1, requested type "simple"
 14453                           ; Number of cases is 1, Range of values is 0 to 0
 14454                           ; switch strategies available:
 14455                           ; Name         Instructions Cycles
 14456                           ; simple_byte            4     3 (average)
 14457                           ; direct_byte            8     6 (fixed)
 14458                           ; jumptable            260     6 (fixed)
 14459                           ;	Chosen strategy is simple_byte
 14460  044E  087C               	movf	??_do_I2C_TX+2,w
 14461  044F  3A00               	xorlw	0	; case 0
 14462  0450  1903               	skipnz
 14463  0451  2C53               	goto	i1l5974
 14464  0452  2C3A               	goto	i1l4294
 14465  0453                     i1l5974:	
 14466                           
 14467                           ; Switch size 1, requested type "simple"
 14468                           ; Number of cases is 4, Range of values is 1 to 4
 14469                           ; switch strategies available:
 14470                           ; Name         Instructions Cycles
 14471                           ; simple_byte           13     7 (average)
 14472                           ; direct_byte           17     9 (fixed)
 14473                           ; jumptable            263     9 (fixed)
 14474                           ;	Chosen strategy is simple_byte
 14475  0453  087B               	movf	??_do_I2C_TX+1,w
 14476  0454  3A01               	xorlw	1	; case 1
 14477  0455  1903               	skipnz
 14478  0456  2C3A               	goto	i1l4294
 14479  0457  3A03               	xorlw	3	; case 2
 14480  0458  1903               	skipnz
 14481  0459  2C32               	goto	i1l4286
 14482  045A  3A01               	xorlw	1	; case 3
 14483  045B  1903               	skipnz
 14484  045C  2C36               	goto	i1l4290
 14485  045D  3A07               	xorlw	7	; case 4
 14486  045E  1903               	skipnz
 14487  045F  2C3A               	goto	i1l4294
 14488  0460  2C3A               	goto	i1l4294
 14489  0461                     i1l1087:	
 14490                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 14491                           
 14492                           
 14493                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 14494  0461  0021               	movlb	1	; select bank1
 14495  0462  11A0               	bcf	_i2c_status^(0+128),3
 14496  0463                     i1l4302:	
 14497                           
 14498                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 14499  0463  3002               	movlw	2
 14500  0464  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14501  0465  0086               	movwf	6
 14502  0466  0187               	clrf	7
 14503  0467  3F40               	moviw [0]fsr1
 14504  0468  0084               	movwf	4
 14505  0469  0185               	clrf	5
 14506  046A  0A81               	incf	1,f
 14507  046B  0800               	movf	0,w
 14508  046C  318E  2613  3184   	fcall	_i2c1_driver_TXData
 14509  046F                     i1l4304:	
 14510                           
 14511                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 14512  046F  3001               	movlw	1
 14513  0470  0021               	movlb	1	; select bank1
 14514  0471  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14515  0472  3000               	movlw	0
 14516  0473  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14517  0474  0823               	movf	(_i2c_status^(0+128)+3),w
 14518  0475  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14519  0476  1D03               	btfss	3,2
 14520  0477  2C79               	goto	u164_21
 14521  0478  2C7A               	goto	u164_20
 14522  0479                     u164_21:	
 14523  0479  2C7C               	goto	i1l4308
 14524  047A                     u164_20:	
 14525  047A                     i1l4306:	
 14526  047A  3006               	movlw	6
 14527  047B  2C7D               	goto	i1l1090
 14528  047C                     i1l4308:	
 14529  047C  3003               	movlw	3
 14530  047D                     i1l1090:	
 14531  047D  0008               	return
 14532  047E                     __end_of_do_I2C_TX:	
 14533                           
 14534                           	psect	text40
 14535  062A                     __ptext40:	
 14536 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14537 ;; Defined at:
 14538 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14539 ;; Parameters:    Size  Location     Type
 14540 ;;		None
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;		None
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  1    wreg      enum E12722
 14545 ;; Registers used:
 14546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;Total ram usage:        3 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:    3
 14559 ;; This function calls:
 14560 ;;		Absolute function
 14561 ;;		_do_I2C_SEND_RESTART
 14562 ;;		_do_I2C_SEND_STOP
 14563 ;;		_i2c_restartWrite
 14564 ;;		_rd1RegCompleteHandler
 14565 ;;		_rd2RegCompleteHandler
 14566 ;;		_rdBlkRegCompleteHandler
 14567 ;;		_returnReset
 14568 ;;		_returnStop
 14569 ;;		_wr1RegCompleteHandler
 14570 ;;		_wr2RegCompleteHandler
 14571 ;; This function is called by:
 14572 ;;		_i2c_ISR
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           
 14577                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14578  062A                     _do_I2C_DO_ADDRESS_NACK:	
 14579  062A                     i1l4260:	
 14580                           ;incstack = 0
 14581                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14582                           
 14583                           
 14584                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 14585  062A  0021               	movlb	1	; select bank1
 14586  062B  11A0               	bcf	_i2c_status^(0+128),3
 14587  062C                     i1l4262:	
 14588                           
 14589                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14590  062C  3002               	movlw	2
 14591  062D  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14592  062E  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14593  062F  00AA               	movwf	(_i2c_status^(0+128)+10)
 14594                           
 14595                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14596  0630  2E39               	goto	i1l4274
 14597  0631                     i1l4264:	
 14598                           
 14599                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14600  0631  318E  2627  3186   	fcall	_do_I2C_SEND_RESTART
 14601  0634  2E55               	goto	i1l1082
 14602  0635                     i1l4268:	
 14603                           
 14604                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14605  0635  318E  262C  3186   	fcall	_do_I2C_SEND_STOP
 14606  0638  2E55               	goto	i1l1082
 14607  0639                     i1l4274:	
 14608  0639  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14609  063A  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14610  063B  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14611  063C  00F9               	movwf	rdBlkRegCompleteHandler@p
 14612  063D  300F               	movlw	15
 14613  063E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14614  063F  0086               	movwf	6
 14615  0640  0187               	clrf	7
 14616  0641  3F41               	moviw [1]fsr1
 14617  0642  008A               	movwf	10
 14618  0643  3F40               	moviw [0]fsr1
 14619  0644  000A               	callw
 14620  0645  3186               	pagesel	$
 14621  0646  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14622  0647  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14623                           
 14624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14625                           ; Switch size 1, requested type "simple"
 14626                           ; Number of cases is 1, Range of values is 0 to 0
 14627                           ; switch strategies available:
 14628                           ; Name         Instructions Cycles
 14629                           ; simple_byte            4     3 (average)
 14630                           ; direct_byte            8     6 (fixed)
 14631                           ; jumptable            260     6 (fixed)
 14632                           ;	Chosen strategy is simple_byte
 14633  0648  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14634  0649  3A00               	xorlw	0	; case 0
 14635  064A  1903               	skipnz
 14636  064B  2E4D               	goto	i1l5976
 14637  064C  2E35               	goto	i1l4268
 14638  064D                     i1l5976:	
 14639                           
 14640                           ; Switch size 1, requested type "simple"
 14641                           ; Number of cases is 2, Range of values is 2 to 3
 14642                           ; switch strategies available:
 14643                           ; Name         Instructions Cycles
 14644                           ; simple_byte            7     4 (average)
 14645                           ; direct_byte           13     9 (fixed)
 14646                           ; jumptable            263     9 (fixed)
 14647                           ;	Chosen strategy is simple_byte
 14648  064D  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14649  064E  3A02               	xorlw	2	; case 2
 14650  064F  1903               	skipnz
 14651  0650  2E31               	goto	i1l4264
 14652  0651  3A01               	xorlw	1	; case 3
 14653  0652  1903               	skipnz
 14654  0653  2E31               	goto	i1l4264
 14655  0654  2E35               	goto	i1l4268
 14656  0655                     i1l1082:	
 14657  0655  0008               	return
 14658  0656                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14659                           
 14660                           	psect	text41
 14661  0E3B                     __ptext41:	
 14662 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14663 ;; Defined at:
 14664 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;		None
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      enum E12722
 14671 ;; Registers used:
 14672 ;;		wreg, status,2, status,0, pclath, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used:    1
 14684 ;; Hardware stack levels required when called:    1
 14685 ;; This function calls:
 14686 ;;		_i2c1_driver_sendNACK
 14687 ;; This function is called by:
 14688 ;;		_do_I2C_RX
 14689 ;;		_i2c_ISR
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           
 14694                           ;psect for function _do_I2C_DO_NACK_RESTART
 14695  0E3B                     _do_I2C_DO_NACK_RESTART:	
 14696  0E3B                     i1l3890:	
 14697                           ;incstack = 0
 14698                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14699                           
 14700                           
 14701                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14702  0E3B  318E  260B  318E   	fcall	_i2c1_driver_sendNACK
 14703  0E3E                     i1l3892:	
 14704                           
 14705                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14706  0E3E  3009               	movlw	9
 14707  0E3F                     i1l1076:	
 14708  0E3F  0008               	return
 14709  0E40                     __end_of_do_I2C_DO_NACK_RESTART:	
 14710                           
 14711                           	psect	text42
 14712  0E36                     __ptext42:	
 14713 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14714 ;; Defined at:
 14715 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;		None
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;		None
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  1    wreg      enum E12722
 14722 ;; Registers used:
 14723 ;;		wreg, status,2, status,0, pclath, cstack
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/0
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;Total ram usage:        0 bytes
 14734 ;; Hardware stack levels used:    1
 14735 ;; Hardware stack levels required when called:    1
 14736 ;; This function calls:
 14737 ;;		_i2c1_driver_sendNACK
 14738 ;; This function is called by:
 14739 ;;		_do_I2C_RX
 14740 ;;		_i2c_ISR
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function _do_I2C_DO_NACK_STOP
 14746  0E36                     _do_I2C_DO_NACK_STOP:	
 14747  0E36                     i1l3884:	
 14748                           ;incstack = 0
 14749                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14750                           
 14751                           
 14752                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14753  0E36  318E  260B  318E   	fcall	_i2c1_driver_sendNACK
 14754  0E39                     i1l3886:	
 14755                           
 14756                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14757  0E39  300A               	movlw	10
 14758  0E3A                     i1l1073:	
 14759  0E3A  0008               	return
 14760  0E3B                     __end_of_do_I2C_DO_NACK_STOP:	
 14761                           
 14762                           	psect	text43
 14763  0E31                     __ptext43:	
 14764 ;; *************** function _do_I2C_DO_ACK *****************
 14765 ;; Defined at:
 14766 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;		None
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;		None
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      enum E12722
 14773 ;; Registers used:
 14774 ;;		wreg, status,2, status,0, pclath, cstack
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;Total ram usage:        0 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:    1
 14787 ;; This function calls:
 14788 ;;		_i2c1_driver_sendACK
 14789 ;; This function is called by:
 14790 ;;		_i2c_ISR
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           
 14795                           ;psect for function _do_I2C_DO_ACK
 14796  0E31                     _do_I2C_DO_ACK:	
 14797  0E31                     i1l4254:	
 14798                           ;incstack = 0
 14799                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14800                           
 14801                           
 14802                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14803  0E31  318E  2607  318E   	fcall	_i2c1_driver_sendACK
 14804  0E34                     i1l4256:	
 14805                           
 14806                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14807  0E34  3005               	movlw	5
 14808  0E35                     i1l1070:	
 14809  0E35  0008               	return
 14810  0E36                     __end_of_do_I2C_DO_ACK:	
 14811                           
 14812                           	psect	text44
 14813  0E5E                     __ptext44:	
 14814 ;; *************** function _do_I2C_RCEN *****************
 14815 ;; Defined at:
 14816 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;		None
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;		None
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      enum E12722
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0, pclath, cstack
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;Total ram usage:        0 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; Hardware stack levels required when called:    1
 14837 ;; This function calls:
 14838 ;;		_i2c1_driver_startRX
 14839 ;; This function is called by:
 14840 ;;		_i2c_ISR
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           
 14845                           ;psect for function _do_I2C_RCEN
 14846  0E5E                     _do_I2C_RCEN:	
 14847  0E5E                     i1l4246:	
 14848                           ;incstack = 0
 14849                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14850                           
 14851                           
 14852                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14853  0E5E  0021               	movlb	1	; select bank1
 14854  0E5F  11A0               	bcf	_i2c_status^(0+128),3
 14855  0E60                     i1l4248:	
 14856                           
 14857                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14858  0E60  318D  25F8  318E   	fcall	_i2c1_driver_startRX
 14859  0E63                     i1l4250:	
 14860                           
 14861                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14862  0E63  3004               	movlw	4
 14863  0E64                     i1l1067:	
 14864  0E64  0008               	return
 14865  0E65                     __end_of_do_I2C_RCEN:	
 14866                           
 14867                           	psect	text45
 14868  0E7C                     __ptext45:	
 14869 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14870 ;; Defined at:
 14871 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  1    wreg      enum E12722
 14878 ;; Registers used:
 14879 ;;		wreg, status,2, status,0, pclath, cstack
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; Hardware stack levels required when called:    1
 14892 ;; This function calls:
 14893 ;;		_i2c1_driver_TXData
 14894 ;; This function is called by:
 14895 ;;		_i2c_ISR
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           
 14900                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14901  0E7C                     _do_I2C_SEND_ADR_WRITE:	
 14902  0E7C                     i1l4238:	
 14903                           ;incstack = 0
 14904                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14905                           
 14906                           
 14907                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 14908  0E7C  0021               	movlb	1	; select bank1
 14909  0E7D  15A0               	bsf	_i2c_status^(0+128),3
 14910  0E7E                     i1l4240:	
 14911                           
 14912                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 14913  0E7E  3521               	lslf	(_i2c_status^(0+128)+1),w
 14914  0E7F  318E  2613  318E   	fcall	_i2c1_driver_TXData
 14915  0E82                     i1l4242:	
 14916                           
 14917                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 14918  0E82  3003               	movlw	3
 14919  0E83                     i1l1064:	
 14920  0E83  0008               	return
 14921  0E84                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14922                           
 14923                           	psect	text46
 14924  0E94                     __ptext46:	
 14925 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14926 ;; Defined at:
 14927 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;		None
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;		None
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  1    wreg      enum E12722
 14934 ;; Registers used:
 14935 ;;		wreg, status,2, status,0, pclath, cstack
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14945 ;;Total ram usage:        0 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:    1
 14948 ;; This function calls:
 14949 ;;		_i2c1_driver_TXData
 14950 ;; This function is called by:
 14951 ;;		_i2c_ISR
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           
 14956                           ;psect for function _do_I2C_SEND_ADR_READ
 14957  0E94                     _do_I2C_SEND_ADR_READ:	
 14958  0E94                     i1l4230:	
 14959                           ;incstack = 0
 14960                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14961                           
 14962                           
 14963                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 14964  0E94  0021               	movlb	1	; select bank1
 14965  0E95  15A0               	bsf	_i2c_status^(0+128),3
 14966  0E96                     i1l4232:	
 14967                           
 14968                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 14969  0E96  1403               	setc
 14970  0E97  0D21               	rlf	(_i2c_status^(0+128)+1),w
 14971  0E98  318E  2613  318E   	fcall	_i2c1_driver_TXData
 14972  0E9B                     i1l4234:	
 14973                           
 14974                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 14975  0E9B  3005               	movlw	5
 14976  0E9C                     i1l1061:	
 14977  0E9C  0008               	return
 14978  0E9D                     __end_of_do_I2C_SEND_ADR_READ:	
 14979                           
 14980                           	psect	text47
 14981  0E2C                     __ptext47:	
 14982 ;; *************** function _do_I2C_SEND_STOP *****************
 14983 ;; Defined at:
 14984 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 14985 ;; Parameters:    Size  Location     Type
 14986 ;;		None
 14987 ;; Auto vars:     Size  Location     Type
 14988 ;;		None
 14989 ;; Return value:  Size  Location     Type
 14990 ;;                  1    wreg      enum E12722
 14991 ;; Registers used:
 14992 ;;		wreg, status,2, status,0, pclath, cstack
 14993 ;; Tracked objects:
 14994 ;;		On entry : 0/0
 14995 ;;		On exit  : 0/0
 14996 ;;		Unchanged: 0/0
 14997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;Total ram usage:        0 bytes
 15003 ;; Hardware stack levels used:    1
 15004 ;; Hardware stack levels required when called:    1
 15005 ;; This function calls:
 15006 ;;		_i2c1_driver_stop
 15007 ;; This function is called by:
 15008 ;;		_do_I2C_DO_ADDRESS_NACK
 15009 ;;		_do_I2C_TX
 15010 ;;		_do_I2C_TX_EMPTY
 15011 ;;		_i2c_ISR
 15012 ;; This function uses a non-reentrant model
 15013 ;;
 15014                           
 15015                           
 15016                           ;psect for function _do_I2C_SEND_STOP
 15017  0E2C                     _do_I2C_SEND_STOP:	
 15018  0E2C                     i1l3878:	
 15019                           ;incstack = 0
 15020                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15021                           
 15022                           
 15023                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 15024  0E2C  318D  25F5  318E   	fcall	_i2c1_driver_stop
 15025  0E2F                     i1l3880:	
 15026                           
 15027                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 15028  0E2F  3000               	movlw	0
 15029  0E30                     i1l1058:	
 15030  0E30  0008               	return
 15031  0E31                     __end_of_do_I2C_SEND_STOP:	
 15032                           
 15033                           	psect	text48
 15034  0E27                     __ptext48:	
 15035 ;; *************** function _do_I2C_SEND_RESTART *****************
 15036 ;; Defined at:
 15037 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;		None
 15040 ;; Auto vars:     Size  Location     Type
 15041 ;;		None
 15042 ;; Return value:  Size  Location     Type
 15043 ;;                  1    wreg      enum E12722
 15044 ;; Registers used:
 15045 ;;		wreg, status,2, status,0, pclath, cstack
 15046 ;; Tracked objects:
 15047 ;;		On entry : 0/0
 15048 ;;		On exit  : 0/0
 15049 ;;		Unchanged: 0/0
 15050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;Total ram usage:        0 bytes
 15056 ;; Hardware stack levels used:    1
 15057 ;; Hardware stack levels required when called:    1
 15058 ;; This function calls:
 15059 ;;		_i2c1_driver_restart
 15060 ;; This function is called by:
 15061 ;;		_do_I2C_DO_ADDRESS_NACK
 15062 ;;		_do_I2C_TX_EMPTY
 15063 ;;		_i2c_ISR
 15064 ;; This function uses a non-reentrant model
 15065 ;;
 15066                           
 15067                           
 15068                           ;psect for function _do_I2C_SEND_RESTART
 15069  0E27                     _do_I2C_SEND_RESTART:	
 15070  0E27                     i1l3872:	
 15071                           ;incstack = 0
 15072                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15073                           
 15074                           
 15075                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 15076  0E27  318D  25F2  318E   	fcall	_i2c1_driver_restart
 15077  0E2A                     i1l3874:	
 15078                           
 15079                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 15080  0E2A  3001               	movlw	1
 15081  0E2B                     i1l1055:	
 15082  0E2B  0008               	return
 15083  0E2C                     __end_of_do_I2C_SEND_RESTART:	
 15084                           
 15085                           	psect	text49
 15086  0E22                     __ptext49:	
 15087 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15088 ;; Defined at:
 15089 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;		None
 15092 ;; Auto vars:     Size  Location     Type
 15093 ;;		None
 15094 ;; Return value:  Size  Location     Type
 15095 ;;                  1    wreg      enum E12722
 15096 ;; Registers used:
 15097 ;;		wreg, status,2, status,0, pclath, cstack
 15098 ;; Tracked objects:
 15099 ;;		On entry : 0/0
 15100 ;;		On exit  : 0/0
 15101 ;;		Unchanged: 0/0
 15102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15107 ;;Total ram usage:        0 bytes
 15108 ;; Hardware stack levels used:    1
 15109 ;; Hardware stack levels required when called:    1
 15110 ;; This function calls:
 15111 ;;		_i2c1_driver_restart
 15112 ;; This function is called by:
 15113 ;;		_do_I2C_TX
 15114 ;;		_i2c_ISR
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           
 15119                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15120  0E22                     _do_I2C_SEND_RESTART_WRITE:	
 15121  0E22                     i1l3866:	
 15122                           ;incstack = 0
 15123                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15124                           
 15125                           
 15126                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 15127  0E22  318D  25F2  318E   	fcall	_i2c1_driver_restart
 15128  0E25                     i1l3868:	
 15129                           
 15130                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 15131  0E25  3002               	movlw	2
 15132  0E26                     i1l1052:	
 15133  0E26  0008               	return
 15134  0E27                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15135                           
 15136                           	psect	text50
 15137  0E1D                     __ptext50:	
 15138 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15139 ;; Defined at:
 15140 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15141 ;; Parameters:    Size  Location     Type
 15142 ;;		None
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;		None
 15145 ;; Return value:  Size  Location     Type
 15146 ;;                  1    wreg      enum E12722
 15147 ;; Registers used:
 15148 ;;		wreg, status,2, status,0, pclath, cstack
 15149 ;; Tracked objects:
 15150 ;;		On entry : 0/0
 15151 ;;		On exit  : 0/0
 15152 ;;		Unchanged: 0/0
 15153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;Total ram usage:        0 bytes
 15159 ;; Hardware stack levels used:    1
 15160 ;; Hardware stack levels required when called:    1
 15161 ;; This function calls:
 15162 ;;		_i2c1_driver_restart
 15163 ;; This function is called by:
 15164 ;;		_do_I2C_TX
 15165 ;;		_i2c_ISR
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           
 15170                           ;psect for function _do_I2C_SEND_RESTART_READ
 15171  0E1D                     _do_I2C_SEND_RESTART_READ:	
 15172  0E1D                     i1l3860:	
 15173                           ;incstack = 0
 15174                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15175                           
 15176                           
 15177                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 15178  0E1D  318D  25F2  318E   	fcall	_i2c1_driver_restart
 15179  0E20                     i1l3862:	
 15180                           
 15181                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 15182  0E20  3001               	movlw	1
 15183  0E21                     i1l1049:	
 15184  0E21  0008               	return
 15185  0E22                     __end_of_do_I2C_SEND_RESTART_READ:	
 15186                           
 15187                           	psect	text51
 15188  0E18                     __ptext51:	
 15189 ;; *************** function _do_I2C_IDLE *****************
 15190 ;; Defined at:
 15191 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;		None
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;		None
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  1    wreg      enum E12722
 15198 ;; Registers used:
 15199 ;;		wreg, status,2
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15209 ;;Total ram usage:        0 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; This function calls:
 15212 ;;		Nothing
 15213 ;; This function is called by:
 15214 ;;		_i2c_ISR
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           
 15219                           ;psect for function _do_I2C_IDLE
 15220  0E18                     _do_I2C_IDLE:	
 15221  0E18                     i1l4222:	
 15222                           ;incstack = 0
 15223                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 15224                           
 15225                           
 15226                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 15227  0E18  0021               	movlb	1	; select bank1
 15228  0E19  1020               	bcf	_i2c_status^(0+128),0
 15229  0E1A                     i1l4224:	
 15230                           
 15231                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 15232  0E1A  01AA               	clrf	(_i2c_status^(0+128)+10)
 15233  0E1B                     i1l4226:	
 15234                           
 15235                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 15236  0E1B  300E               	movlw	14
 15237  0E1C                     i1l1046:	
 15238  0E1C  0008               	return
 15239  0E1D                     __end_of_do_I2C_IDLE:	
 15240                           
 15241                           	psect	text52
 15242  0E74                     __ptext52:	
 15243 ;; *************** function _do_I2C_RESET *****************
 15244 ;; Defined at:
 15245 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;		None
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      enum E12722
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0, pclath, cstack
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;Total ram usage:        0 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:    1
 15266 ;; This function calls:
 15267 ;;		_i2c1_driver_resetBus
 15268 ;; This function is called by:
 15269 ;;		_i2c_ISR
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           
 15274                           ;psect for function _do_I2C_RESET
 15275  0E74                     _do_I2C_RESET:	
 15276  0E74                     i1l4212:	
 15277                           ;incstack = 0
 15278                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15279                           
 15280                           
 15281                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 15282  0E74  318D  25ED  318E   	fcall	_i2c1_driver_resetBus
 15283  0E77                     i1l4214:	
 15284                           
 15285                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 15286  0E77  0021               	movlb	1	; select bank1
 15287  0E78  1020               	bcf	_i2c_status^(0+128),0
 15288  0E79                     i1l4216:	
 15289                           
 15290                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 15291  0E79  01AA               	clrf	(_i2c_status^(0+128)+10)
 15292  0E7A                     i1l4218:	
 15293                           
 15294                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 15295  0E7A  300E               	movlw	14
 15296  0E7B                     i1l1043:	
 15297  0E7B  0008               	return
 15298  0E7C                     __end_of_do_I2C_RESET:	
 15299                           
 15300                           	psect	text53
 15301  0597                     __ptext53:	
 15302 ;; *************** function _do_I2C_TX_EMPTY *****************
 15303 ;; Defined at:
 15304 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;		None
 15307 ;; Auto vars:     Size  Location     Type
 15308 ;;		None
 15309 ;; Return value:  Size  Location     Type
 15310 ;;                  1    wreg      enum E12722
 15311 ;; Registers used:
 15312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15313 ;; Tracked objects:
 15314 ;;		On entry : 0/0
 15315 ;;		On exit  : 0/0
 15316 ;;		Unchanged: 0/0
 15317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;Total ram usage:        3 bytes
 15323 ;; Hardware stack levels used:    1
 15324 ;; Hardware stack levels required when called:    3
 15325 ;; This function calls:
 15326 ;;		Absolute function
 15327 ;;		_do_I2C_SEND_RESTART
 15328 ;;		_do_I2C_SEND_STOP
 15329 ;;		_i2c_restartWrite
 15330 ;;		_mssp1_setIRQ
 15331 ;;		_rd1RegCompleteHandler
 15332 ;;		_rd2RegCompleteHandler
 15333 ;;		_rdBlkRegCompleteHandler
 15334 ;;		_returnReset
 15335 ;;		_returnStop
 15336 ;;		_wr1RegCompleteHandler
 15337 ;;		_wr2RegCompleteHandler
 15338 ;; This function is called by:
 15339 ;;		_i2c_ISR
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           
 15344                           ;psect for function _do_I2C_TX_EMPTY
 15345  0597                     _do_I2C_TX_EMPTY:	
 15346  0597                     i1l4348:	
 15347                           ;incstack = 0
 15348                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15349                           
 15350                           
 15351                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 15352  0597  0021               	movlb	1	; select bank1
 15353  0598  1520               	bsf	_i2c_status^(0+128),2
 15354                           
 15355                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15356  0599  2DA7               	goto	i1l4366
 15357  059A                     i1l4350:	
 15358                           
 15359                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 15360  059A  318E  2627  3185   	fcall	_do_I2C_SEND_RESTART
 15361  059D  2DC9               	goto	i1l1118
 15362  059E                     i1l4354:	
 15363                           
 15364                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 15365  059E  318D  25FE  3185   	fcall	_mssp1_setIRQ
 15366  05A1                     i1l4356:	
 15367                           
 15368                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 15369  05A1  3003               	movlw	3
 15370  05A2  2DC9               	goto	i1l1118
 15371  05A3                     i1l4360:	
 15372                           
 15373                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 15374  05A3  318E  262C  3185   	fcall	_do_I2C_SEND_STOP
 15375  05A6  2DC9               	goto	i1l1118
 15376  05A7                     i1l4366:	
 15377  05A7  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15378  05A8  00FA               	movwf	??_do_I2C_TX_EMPTY
 15379  05A9  087A               	movf	??_do_I2C_TX_EMPTY,w
 15380  05AA  00F9               	movwf	rdBlkRegCompleteHandler@p
 15381  05AB  300B               	movlw	11
 15382  05AC  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15383  05AD  0086               	movwf	6
 15384  05AE  0187               	clrf	7
 15385  05AF  3F41               	moviw [1]fsr1
 15386  05B0  008A               	movwf	10
 15387  05B1  3F40               	moviw [0]fsr1
 15388  05B2  000A               	callw
 15389  05B3  3185               	pagesel	$
 15390  05B4  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 15391  05B5  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 15392                           
 15393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15394                           ; Switch size 1, requested type "simple"
 15395                           ; Number of cases is 1, Range of values is 0 to 0
 15396                           ; switch strategies available:
 15397                           ; Name         Instructions Cycles
 15398                           ; simple_byte            4     3 (average)
 15399                           ; direct_byte            8     6 (fixed)
 15400                           ; jumptable            260     6 (fixed)
 15401                           ;	Chosen strategy is simple_byte
 15402  05B6  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 15403  05B7  3A00               	xorlw	0	; case 0
 15404  05B8  1903               	skipnz
 15405  05B9  2DBB               	goto	i1l5978
 15406  05BA  2DA3               	goto	i1l4360
 15407  05BB                     i1l5978:	
 15408                           
 15409                           ; Switch size 1, requested type "simple"
 15410                           ; Number of cases is 4, Range of values is 1 to 4
 15411                           ; switch strategies available:
 15412                           ; Name         Instructions Cycles
 15413                           ; simple_byte           13     7 (average)
 15414                           ; direct_byte           17     9 (fixed)
 15415                           ; jumptable            263     9 (fixed)
 15416                           ;	Chosen strategy is simple_byte
 15417  05BB  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 15418  05BC  3A01               	xorlw	1	; case 1
 15419  05BD  1903               	skipnz
 15420  05BE  2DA3               	goto	i1l4360
 15421  05BF  3A03               	xorlw	3	; case 2
 15422  05C0  1903               	skipnz
 15423  05C1  2D9A               	goto	i1l4350
 15424  05C2  3A01               	xorlw	1	; case 3
 15425  05C3  1903               	skipnz
 15426  05C4  2D9A               	goto	i1l4350
 15427  05C5  3A07               	xorlw	7	; case 4
 15428  05C6  1903               	skipnz
 15429  05C7  2D9E               	goto	i1l4354
 15430  05C8  2DA3               	goto	i1l4360
 15431  05C9                     i1l1118:	
 15432  05C9  0008               	return
 15433  05CA                     __end_of_do_I2C_TX_EMPTY:	
 15434                           
 15435                           	psect	text54
 15436  0DFE                     __ptext54:	
 15437 ;; *************** function _mssp1_setIRQ *****************
 15438 ;; Defined at:
 15439 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;		None
 15442 ;; Auto vars:     Size  Location     Type
 15443 ;;		None
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  1    wreg      void 
 15446 ;; Registers used:
 15447 ;;		None
 15448 ;; Tracked objects:
 15449 ;;		On entry : 0/0
 15450 ;;		On exit  : 0/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;Total ram usage:        0 bytes
 15458 ;; Hardware stack levels used:    1
 15459 ;; This function calls:
 15460 ;;		Nothing
 15461 ;; This function is called by:
 15462 ;;		_do_I2C_TX_EMPTY
 15463 ;; This function uses a non-reentrant model
 15464 ;;
 15465                           
 15466                           
 15467                           ;psect for function _mssp1_setIRQ
 15468  0DFE                     _mssp1_setIRQ:	
 15469  0DFE                     i1l3786:	
 15470                           ;incstack = 0
 15471                           ; Regs used in _mssp1_setIRQ: []
 15472                           
 15473                           
 15474                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 15475  0DFE  002E               	movlb	14	; select bank14
 15476  0DFF  140F               	bsf	15,0	;volatile
 15477  0E00                     i1l178:	
 15478  0E00  0008               	return
 15479  0E01                     __end_of_mssp1_setIRQ:	
 15480                           
 15481                           	psect	text55
 15482  0E6C                     __ptext55:	
 15483 ;; *************** function _i2c1_driver_isNACK *****************
 15484 ;; Defined at:
 15485 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;		None
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;		None
 15490 ;; Return value:  Size  Location     Type
 15491 ;;		None               void
 15492 ;; Registers used:
 15493 ;;		wreg, status,2, status,0
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;Total ram usage:        1 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_do_I2C_TX
 15509 ;;		_i2c_ISR
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           
 15514                           ;psect for function _i2c1_driver_isNACK
 15515  0E6C                     _i2c1_driver_isNACK:	
 15516  0E6C                     i1l3790:	
 15517                           ;incstack = 0
 15518                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15519                           
 15520                           
 15521                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 15522  0E6C  0023               	movlb	3	; select bank3
 15523  0E6D  0E11               	swapf	17,w	;volatile
 15524  0E6E  0C89               	rrf	9,f
 15525  0E6F  0C89               	rrf	9,f
 15526  0E70  3901               	andlw	1
 15527  0E71  00F0               	movwf	??_i2c1_driver_isNACK
 15528  0E72  0C70               	rrf	??_i2c1_driver_isNACK,w
 15529  0E73                     i1l213:	
 15530  0E73  0008               	return
 15531  0E74                     __end_of_i2c1_driver_isNACK:	
 15532                           
 15533                           	psect	text56
 15534  0E13                     __ptext56:	
 15535 ;; *************** function _i2c1_driver_TXData *****************
 15536 ;; Defined at:
 15537 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;  d               1    wreg     unsigned char 
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;  d               1    0[COMMON] unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		wreg
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        1 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		_do_I2C_SEND_ADR_READ
 15561 ;;		_do_I2C_SEND_ADR_WRITE
 15562 ;;		_do_I2C_TX
 15563 ;; This function uses a non-reentrant model
 15564 ;;
 15565                           
 15566                           
 15567                           ;psect for function _i2c1_driver_TXData
 15568  0E13                     _i2c1_driver_TXData:	
 15569                           
 15570                           ;incstack = 0
 15571                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15572                           ;i2c1_driver_TXData@d stored from wreg
 15573  0E13  00F0               	movwf	i2c1_driver_TXData@d
 15574  0E14                     i1l3800:	
 15575                           
 15576                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 15577  0E14  0870               	movf	i2c1_driver_TXData@d,w
 15578  0E15  0023               	movlb	3	; select bank3
 15579  0E16  008C               	movwf	12	;volatile
 15580  0E17                     i1l228:	
 15581  0E17  0008               	return
 15582  0E18                     __end_of_i2c1_driver_TXData:	
 15583                           
 15584                           	psect	text57
 15585  0DFB                     __ptext57:	
 15586 ;; *************** function _i2c1_driver_getRXData *****************
 15587 ;; Defined at:
 15588 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      unsigned char 
 15595 ;; Registers used:
 15596 ;;		wreg
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;Total ram usage:        0 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; This function calls:
 15609 ;;		Nothing
 15610 ;; This function is called by:
 15611 ;;		_do_I2C_RX
 15612 ;; This function uses a non-reentrant model
 15613 ;;
 15614                           
 15615                           
 15616                           ;psect for function _i2c1_driver_getRXData
 15617  0DFB                     _i2c1_driver_getRXData:	
 15618  0DFB                     i1l3796:	
 15619                           ;incstack = 0
 15620                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15621                           
 15622                           
 15623                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 15624  0DFB  0023               	movlb	3	; select bank3
 15625  0DFC  080C               	movf	12,w	;volatile
 15626  0DFD                     i1l219:	
 15627  0DFD  0008               	return
 15628  0DFE                     __end_of_i2c1_driver_getRXData:	
 15629                           
 15630                           	psect	text58
 15631  0E0B                     __ptext58:	
 15632 ;; *************** function _i2c1_driver_sendNACK *****************
 15633 ;; Defined at:
 15634 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;		None
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      void 
 15641 ;; Registers used:
 15642 ;;		None
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;Total ram usage:        0 bytes
 15653 ;; Hardware stack levels used:    1
 15654 ;; This function calls:
 15655 ;;		Nothing
 15656 ;; This function is called by:
 15657 ;;		_do_I2C_DO_NACK_STOP
 15658 ;;		_do_I2C_DO_NACK_RESTART
 15659 ;; This function uses a non-reentrant model
 15660 ;;
 15661                           
 15662                           
 15663                           ;psect for function _i2c1_driver_sendNACK
 15664  0E0B                     _i2c1_driver_sendNACK:	
 15665  0E0B                     i1l3766:	
 15666                           ;incstack = 0
 15667                           ; Regs used in _i2c1_driver_sendNACK: []
 15668                           
 15669                           
 15670                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 15671  0E0B  0023               	movlb	3	; select bank3
 15672  0E0C  1691               	bsf	17,5	;volatile
 15673                           
 15674                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 15675  0E0D  1611               	bsf	17,4	;volatile
 15676  0E0E                     i1l237:	
 15677  0E0E  0008               	return
 15678  0E0F                     __end_of_i2c1_driver_sendNACK:	
 15679                           
 15680                           	psect	text59
 15681  0DED                     __ptext59:	
 15682 ;; *************** function _i2c1_driver_resetBus *****************
 15683 ;; Defined at:
 15684 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;		None
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		None
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;Total ram usage:        0 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_do_I2C_RESET
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           
 15712                           ;psect for function _i2c1_driver_resetBus
 15713  0DED                     _i2c1_driver_resetBus:	
 15714  0DED                     i1l201:	
 15715                           ;incstack = 0
 15716                           ; Regs used in _i2c1_driver_resetBus: []
 15717                           
 15718  0DED  0008               	return
 15719  0DEE                     __end_of_i2c1_driver_resetBus:	
 15720                           
 15721                           	psect	text60
 15722  0DF8                     __ptext60:	
 15723 ;; *************** function _i2c1_driver_startRX *****************
 15724 ;; Defined at:
 15725 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;		None
 15728 ;; Auto vars:     Size  Location     Type
 15729 ;;		None
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  1    wreg      void 
 15732 ;; Registers used:
 15733 ;;		None
 15734 ;; Tracked objects:
 15735 ;;		On entry : 0/0
 15736 ;;		On exit  : 0/0
 15737 ;;		Unchanged: 0/0
 15738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;Total ram usage:        0 bytes
 15744 ;; Hardware stack levels used:    1
 15745 ;; This function calls:
 15746 ;;		Nothing
 15747 ;; This function is called by:
 15748 ;;		_do_I2C_RCEN
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           
 15753                           ;psect for function _i2c1_driver_startRX
 15754  0DF8                     _i2c1_driver_startRX:	
 15755  0DF8                     i1l3794:	
 15756                           ;incstack = 0
 15757                           ; Regs used in _i2c1_driver_startRX: []
 15758                           
 15759                           
 15760                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 15761  0DF8  0023               	movlb	3	; select bank3
 15762  0DF9  1591               	bsf	17,3	;volatile
 15763  0DFA                     i1l216:	
 15764  0DFA  0008               	return
 15765  0DFB                     __end_of_i2c1_driver_startRX:	
 15766                           
 15767                           	psect	text61
 15768  07C7                     __ptext61:	
 15769 ;; *************** function _rdBlkRegCompleteHandler *****************
 15770 ;; Defined at:
 15771 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;  p               1    9[COMMON] PTR void 
 15774 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15775 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      enum E358
 15780 ;; Registers used:
 15781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15787 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;Total ram usage:        1 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    2
 15794 ;; This function calls:
 15795 ;;		_i2c_setBuffer
 15796 ;;		_i2c_setDataCompleteCallback
 15797 ;; This function is called by:
 15798 ;;		_i2c_readDataBlock
 15799 ;;		_do_I2C_DO_ADDRESS_NACK
 15800 ;;		_do_I2C_TX
 15801 ;;		_do_I2C_RX
 15802 ;;		_do_I2C_TX_EMPTY
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806                           
 15807                           ;psect for function _rdBlkRegCompleteHandler
 15808  07C7                     _rdBlkRegCompleteHandler:	
 15809  07C7                     i1l3936:	
 15810                           ;incstack = 0
 15811                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15812                           
 15813                           
 15814                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 15815  07C7  0879               	movf	rdBlkRegCompleteHandler@p,w
 15816  07C8  0086               	movwf	6
 15817  07C9  0187               	clrf	7
 15818  07CA  3F40               	moviw [0]fsr1
 15819  07CB  00F0               	movwf	i2c_setBuffer@bufferSize
 15820  07CC  3F41               	moviw [1]fsr1
 15821  07CD  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15822  07CE  0879               	movf	rdBlkRegCompleteHandler@p,w
 15823  07CF  3E02               	addlw	2
 15824  07D0  0086               	movwf	6
 15825  07D1  0187               	clrf	7
 15826  07D2  0801               	movf	1,w
 15827  07D3  318F  271D  3187   	fcall	_i2c_setBuffer
 15828                           
 15829                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15830  07D6  3000               	movlw	0
 15831  07D7  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15832  07D8  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15833  07D9  01F7               	clrf	i2c_setDataCompleteCallback@p
 15834  07DA  318E  26C8  3187   	fcall	_i2c_setDataCompleteCallback
 15835  07DD                     i1l3938:	
 15836                           
 15837                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 15838  07DD  3002               	movlw	2
 15839  07DE                     i1l1288:	
 15840  07DE  0008               	return
 15841  07DF                     __end_of_rdBlkRegCompleteHandler:	
 15842                           
 15843                           	psect	text62
 15844  0F81                     __ptext62:	
 15845 ;; *************** function _rd2RegCompleteHandler *****************
 15846 ;; Defined at:
 15847 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15848 ;; Parameters:    Size  Location     Type
 15849 ;;  p               1    9[COMMON] PTR void 
 15850 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15851 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15852 ;; Auto vars:     Size  Location     Type
 15853 ;;		None
 15854 ;; Return value:  Size  Location     Type
 15855 ;;                  1    wreg      enum E358
 15856 ;; Registers used:
 15857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15858 ;; Tracked objects:
 15859 ;;		On entry : 0/0
 15860 ;;		On exit  : 0/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;Total ram usage:        1 bytes
 15868 ;; Hardware stack levels used:    1
 15869 ;; Hardware stack levels required when called:    2
 15870 ;; This function calls:
 15871 ;;		_i2c_setBuffer
 15872 ;;		_i2c_setDataCompleteCallback
 15873 ;; This function is called by:
 15874 ;;		_i2c_read2ByteRegister
 15875 ;;		_do_I2C_DO_ADDRESS_NACK
 15876 ;;		_do_I2C_TX
 15877 ;;		_do_I2C_RX
 15878 ;;		_do_I2C_TX_EMPTY
 15879 ;; This function uses a non-reentrant model
 15880 ;;
 15881                           
 15882                           
 15883                           ;psect for function _rd2RegCompleteHandler
 15884  0F81                     _rd2RegCompleteHandler:	
 15885  0F81                     i1l3920:	
 15886                           ;incstack = 0
 15887                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15888                           
 15889                           
 15890                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 15891  0F81  3002               	movlw	2
 15892  0F82  00F0               	movwf	i2c_setBuffer@bufferSize
 15893  0F83  3000               	movlw	0
 15894  0F84  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15895  0F85  0879               	movf	rd2RegCompleteHandler@p,w
 15896  0F86  318F  271D  318F   	fcall	_i2c_setBuffer
 15897  0F89                     i1l3922:	
 15898                           
 15899                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15900  0F89  3000               	movlw	0
 15901  0F8A  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15902  0F8B  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15903  0F8C  01F7               	clrf	i2c_setDataCompleteCallback@p
 15904  0F8D  318E  26C8  318F   	fcall	_i2c_setDataCompleteCallback
 15905  0F90                     i1l3924:	
 15906                           
 15907                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 15908  0F90  3002               	movlw	2
 15909  0F91                     i1l1264:	
 15910  0F91  0008               	return
 15911  0F92                     __end_of_rd2RegCompleteHandler:	
 15912                           
 15913                           	psect	text63
 15914  0F70                     __ptext63:	
 15915 ;; *************** function _rd1RegCompleteHandler *****************
 15916 ;; Defined at:
 15917 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  p               1    9[COMMON] PTR void 
 15920 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15921 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;		None
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  1    wreg      enum E358
 15926 ;; Registers used:
 15927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15933 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15937 ;;Total ram usage:        1 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; Hardware stack levels required when called:    2
 15940 ;; This function calls:
 15941 ;;		_i2c_setBuffer
 15942 ;;		_i2c_setDataCompleteCallback
 15943 ;; This function is called by:
 15944 ;;		_i2c_read1ByteRegister
 15945 ;;		_do_I2C_DO_ADDRESS_NACK
 15946 ;;		_do_I2C_TX
 15947 ;;		_do_I2C_RX
 15948 ;;		_do_I2C_TX_EMPTY
 15949 ;; This function uses a non-reentrant model
 15950 ;;
 15951                           
 15952                           
 15953                           ;psect for function _rd1RegCompleteHandler
 15954  0F70                     _rd1RegCompleteHandler:	
 15955  0F70                     i1l3912:	
 15956                           ;incstack = 0
 15957                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15958                           
 15959                           
 15960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 15961  0F70  3001               	movlw	1
 15962  0F71  00F0               	movwf	i2c_setBuffer@bufferSize
 15963  0F72  3000               	movlw	0
 15964  0F73  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15965  0F74  0879               	movf	rd1RegCompleteHandler@p,w
 15966  0F75  318F  271D  318F   	fcall	_i2c_setBuffer
 15967  0F78                     i1l3914:	
 15968                           
 15969                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15970  0F78  3000               	movlw	0
 15971  0F79  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15972  0F7A  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15973  0F7B  01F7               	clrf	i2c_setDataCompleteCallback@p
 15974  0F7C  318E  26C8  318F   	fcall	_i2c_setDataCompleteCallback
 15975  0F7F                     i1l3916:	
 15976                           
 15977                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 15978  0F7F  3002               	movlw	2
 15979  0F80                     i1l1249:	
 15980  0F80  0008               	return
 15981  0F81                     __end_of_rd1RegCompleteHandler:	
 15982                           
 15983                           	psect	text64
 15984  0F5F                     __ptext64:	
 15985 ;; *************** function _wr1RegCompleteHandler *****************
 15986 ;; Defined at:
 15987 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15988 ;; Parameters:    Size  Location     Type
 15989 ;;  p               1    9[COMMON] PTR void 
 15990 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15991 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;		None
 15994 ;; Return value:  Size  Location     Type
 15995 ;;                  1    wreg      enum E358
 15996 ;; Registers used:
 15997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15998 ;; Tracked objects:
 15999 ;;		On entry : 0/0
 16000 ;;		On exit  : 0/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;Total ram usage:        1 bytes
 16008 ;; Hardware stack levels used:    1
 16009 ;; Hardware stack levels required when called:    2
 16010 ;; This function calls:
 16011 ;;		_i2c_setBuffer
 16012 ;;		_i2c_setDataCompleteCallback
 16013 ;; This function is called by:
 16014 ;;		_i2c_write1ByteRegister
 16015 ;;		_do_I2C_DO_ADDRESS_NACK
 16016 ;;		_do_I2C_TX
 16017 ;;		_do_I2C_RX
 16018 ;;		_do_I2C_TX_EMPTY
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           
 16023                           ;psect for function _wr1RegCompleteHandler
 16024  0F5F                     _wr1RegCompleteHandler:	
 16025  0F5F                     i1l3904:	
 16026                           ;incstack = 0
 16027                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16028                           
 16029                           
 16030                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 16031  0F5F  3001               	movlw	1
 16032  0F60  00F0               	movwf	i2c_setBuffer@bufferSize
 16033  0F61  3000               	movlw	0
 16034  0F62  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16035  0F63  0879               	movf	wr1RegCompleteHandler@p,w
 16036  0F64  318F  271D  318F   	fcall	_i2c_setBuffer
 16037  0F67                     i1l3906:	
 16038                           
 16039                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16040  0F67  3000               	movlw	0
 16041  0F68  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16042  0F69  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16043  0F6A  01F7               	clrf	i2c_setDataCompleteCallback@p
 16044  0F6B  318E  26C8  318F   	fcall	_i2c_setDataCompleteCallback
 16045  0F6E                     i1l3908:	
 16046                           
 16047                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 16048  0F6E  3004               	movlw	4
 16049  0F6F                     i1l1228:	
 16050  0F6F  0008               	return
 16051  0F70                     __end_of_wr1RegCompleteHandler:	
 16052                           
 16053                           	psect	text65
 16054  0002                     __ptext65:	
 16055 ;; *************** function _returnReset *****************
 16056 ;; Defined at:
 16057 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  p               1    9[COMMON] PTR void 
 16060 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16061 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;		None
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      enum E12568
 16066 ;; Registers used:
 16067 ;;		wreg
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;Total ram usage:        1 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; This function calls:
 16080 ;;		Nothing
 16081 ;; This function is called by:
 16082 ;;		_i2c_open
 16083 ;;		_do_I2C_DO_ADDRESS_NACK
 16084 ;;		_do_I2C_TX
 16085 ;;		_do_I2C_RX
 16086 ;;		_do_I2C_TX_EMPTY
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           
 16091                           ;psect for function _returnReset
 16092  0002                     _returnReset:	
 16093  0002                     i1l3900:	
 16094                           ;incstack = 0
 16095                           ; Regs used in _returnReset: [wreg]
 16096                           
 16097                           
 16098                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 16099  0002  3005               	movlw	5
 16100  0003                     i1l1137:	
 16101  0003  0008               	return
 16102  0004                     __end_of_returnReset:	
 16103                           
 16104                           	psect	text66
 16105  0DF0                     __ptext66:	
 16106 ;; *************** function _returnStop *****************
 16107 ;; Defined at:
 16108 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  p               1    9[COMMON] PTR void 
 16111 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16112 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;		None
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      enum E12568
 16117 ;; Registers used:
 16118 ;;		wreg
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;Total ram usage:        1 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; This function calls:
 16131 ;;		Nothing
 16132 ;; This function is called by:
 16133 ;;		_setCallBack
 16134 ;;		_i2c_open
 16135 ;;		_do_I2C_DO_ADDRESS_NACK
 16136 ;;		_do_I2C_TX
 16137 ;;		_do_I2C_RX
 16138 ;;		_do_I2C_TX_EMPTY
 16139 ;; This function uses a non-reentrant model
 16140 ;;
 16141                           
 16142                           
 16143                           ;psect for function _returnStop
 16144  0DF0                     _returnStop:	
 16145  0DF0                     i1l3896:	
 16146                           ;incstack = 0
 16147                           ; Regs used in _returnStop: [wreg]
 16148                           
 16149                           
 16150                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 16151  0DF0  3001               	movlw	1
 16152  0DF1                     i1l1134:	
 16153  0DF1  0008               	return
 16154  0DF2                     __end_of_returnStop:	
 16155                           
 16156                           	psect	text67
 16157  0DEE                     __ptext67:	
 16158 ;; *************** function _i2c_restartWrite *****************
 16159 ;; Defined at:
 16160 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;  p               1    9[COMMON] PTR void 
 16163 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16164 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;		None
 16167 ;; Return value:  Size  Location     Type
 16168 ;;                  1    wreg      enum E358
 16169 ;; Registers used:
 16170 ;;		wreg
 16171 ;; Tracked objects:
 16172 ;;		On entry : 0/0
 16173 ;;		On exit  : 0/0
 16174 ;;		Unchanged: 0/0
 16175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16176 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16180 ;;Total ram usage:        1 bytes
 16181 ;; Hardware stack levels used:    1
 16182 ;; This function calls:
 16183 ;;		Nothing
 16184 ;; This function is called by:
 16185 ;;		_i2c_write1ByteRegister
 16186 ;;		_i2c_writeNBytes
 16187 ;;		_i2c_read1ByteRegister
 16188 ;;		_i2c_read2ByteRegister
 16189 ;;		_i2c_write2ByteRegister
 16190 ;;		_i2c_readDataBlock
 16191 ;;		_do_I2C_DO_ADDRESS_NACK
 16192 ;;		_do_I2C_TX
 16193 ;;		_do_I2C_RX
 16194 ;;		_do_I2C_TX_EMPTY
 16195 ;; This function uses a non-reentrant model
 16196 ;;
 16197                           
 16198                           
 16199                           ;psect for function _i2c_restartWrite
 16200  0DEE                     _i2c_restartWrite:	
 16201  0DEE                     i1l3778:	
 16202                           ;incstack = 0
 16203                           ; Regs used in _i2c_restartWrite: [wreg]
 16204                           
 16205                           
 16206                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 16207  0DEE  3003               	movlw	3
 16208  0DEF                     i1l35:	
 16209  0DEF  0008               	return
 16210  0DF0                     __end_of_i2c_restartWrite:	
 16211                           
 16212                           	psect	text68
 16213  0F4E                     __ptext68:	
 16214 ;; *************** function _wr2RegCompleteHandler *****************
 16215 ;; Defined at:
 16216 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  p               1    9[COMMON] PTR void 
 16219 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16220 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;		None
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  1    wreg      enum E358
 16225 ;; Registers used:
 16226 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16236 ;;Total ram usage:        1 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    2
 16239 ;; This function calls:
 16240 ;;		_i2c_setBuffer
 16241 ;;		_i2c_setDataCompleteCallback
 16242 ;; This function is called by:
 16243 ;;		_i2c_write2ByteRegister
 16244 ;;		_do_I2C_DO_ADDRESS_NACK
 16245 ;;		_do_I2C_TX
 16246 ;;		_do_I2C_RX
 16247 ;;		_do_I2C_TX_EMPTY
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           
 16252                           ;psect for function _wr2RegCompleteHandler
 16253  0F4E                     _wr2RegCompleteHandler:	
 16254  0F4E                     i1l3928:	
 16255                           ;incstack = 0
 16256                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16257                           
 16258                           
 16259                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 16260  0F4E  3002               	movlw	2
 16261  0F4F  00F0               	movwf	i2c_setBuffer@bufferSize
 16262  0F50  3000               	movlw	0
 16263  0F51  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16264  0F52  0879               	movf	wr2RegCompleteHandler@p,w
 16265  0F53  318F  271D  318F   	fcall	_i2c_setBuffer
 16266  0F56                     i1l3930:	
 16267                           
 16268                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 16269  0F56  3000               	movlw	0
 16270  0F57  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16271  0F58  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16272  0F59  01F7               	clrf	i2c_setDataCompleteCallback@p
 16273  0F5A  318E  26C8  318F   	fcall	_i2c_setDataCompleteCallback
 16274  0F5D                     i1l3932:	
 16275                           
 16276                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 16277  0F5D  3004               	movlw	4
 16278  0F5E                     i1l1276:	
 16279  0F5E  0008               	return
 16280  0F5F                     __end_of_wr2RegCompleteHandler:	
 16281                           
 16282                           	psect	text69
 16283  0EC8                     __ptext69:	
 16284 ;; *************** function _i2c_setDataCompleteCallback *****************
 16285 ;; Defined at:
 16286 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 16289 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16290 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16291 ;;  p               1    7[COMMON] PTR void 
 16292 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16293 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16294 ;; Auto vars:     Size  Location     Type
 16295 ;;		None
 16296 ;; Return value:  Size  Location     Type
 16297 ;;                  1    wreg      void 
 16298 ;; Registers used:
 16299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16300 ;; Tracked objects:
 16301 ;;		On entry : 0/0
 16302 ;;		On exit  : 0/0
 16303 ;;		Unchanged: 0/0
 16304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;Total ram usage:        4 bytes
 16310 ;; Hardware stack levels used:    1
 16311 ;; Hardware stack levels required when called:    1
 16312 ;; This function calls:
 16313 ;;		_setCallBack
 16314 ;; This function is called by:
 16315 ;;		_wr1RegCompleteHandler
 16316 ;;		_rd1RegCompleteHandler
 16317 ;;		_rd2RegCompleteHandler
 16318 ;;		_wr2RegCompleteHandler
 16319 ;;		_rdBlkRegCompleteHandler
 16320 ;;		_i2c_write1ByteRegister
 16321 ;;		_i2c_read1ByteRegister
 16322 ;;		_i2c_read2ByteRegister
 16323 ;;		_i2c_write2ByteRegister
 16324 ;;		_i2c_readDataBlock
 16325 ;; This function uses a non-reentrant model
 16326 ;;
 16327                           
 16328                           
 16329                           ;psect for function _i2c_setDataCompleteCallback
 16330  0EC8                     _i2c_setDataCompleteCallback:	
 16331  0EC8                     i1l3768:	
 16332                           ;incstack = 0
 16333                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16334                           
 16335                           
 16336                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 16337  0EC8  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 16338  0EC9  00F1               	movwf	setCallBack@cb+1
 16339  0ECA  0875               	movf	i2c_setDataCompleteCallback@cb,w
 16340  0ECB  00F0               	movwf	setCallBack@cb
 16341  0ECC  0877               	movf	i2c_setDataCompleteCallback@p,w
 16342  0ECD  00F8               	movwf	??_i2c_setDataCompleteCallback
 16343  0ECE  0878               	movf	??_i2c_setDataCompleteCallback,w
 16344  0ECF  00F2               	movwf	setCallBack@p
 16345  0ED0  3000               	movlw	0
 16346  0ED1  3186  2656  318E   	fcall	_setCallBack
 16347  0ED4                     i1l991:	
 16348  0ED4  0008               	return
 16349  0ED5                     __end_of_i2c_setDataCompleteCallback:	
 16350                           
 16351                           	psect	text70
 16352  0656                     __ptext70:	
 16353 ;; *************** function _setCallBack *****************
 16354 ;; Defined at:
 16355 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;  idx             1    wreg     enum E12740
 16358 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 16359 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16360 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 16361 ;;  p               1    2[COMMON] PTR void 
 16362 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16363 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  idx             1    4[COMMON] enum E12740
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;Total ram usage:        5 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; This function calls:
 16382 ;;		Nothing
 16383 ;; This function is called by:
 16384 ;;		_i2c_setDataCompleteCallback
 16385 ;;		_i2c_setWriteCollisionCallback
 16386 ;;		_i2c_setAddressNACKCallback
 16387 ;;		_i2c_setDataNACKCallback
 16388 ;;		_i2c_setTimeOutCallback
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           
 16393                           ;psect for function _setCallBack
 16394  0656                     _setCallBack:	
 16395                           
 16396                           ;incstack = 0
 16397                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16398                           ;setCallBack@idx stored from wreg
 16399  0656  00F4               	movwf	setCallBack@idx
 16400  0657                     i1l3750:	
 16401                           
 16402                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 16403  0657  0870               	movf	setCallBack@cb,w
 16404  0658  0471               	iorwf	setCallBack@cb+1,w
 16405  0659  1903               	btfsc	3,2
 16406  065A  2E5C               	goto	u135_21
 16407  065B  2E5D               	goto	u135_20
 16408  065C                     u135_21:	
 16409  065C  2E6E               	goto	i1l3754
 16410  065D                     u135_20:	
 16411  065D                     i1l3752:	
 16412                           
 16413                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 16414  065D  3574               	lslf	setCallBack@idx,w
 16415  065E  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16416  065F  0086               	movwf	6
 16417  0660  0187               	clrf	7
 16418  0661  0870               	movf	setCallBack@cb,w
 16419  0662  3FC0               	movwi [0]fsr1
 16420  0663  0871               	movf	setCallBack@cb+1,w
 16421  0664  3FC1               	movwi [1]fsr1
 16422                           
 16423                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 16424  0665  0872               	movf	setCallBack@p,w
 16425  0666  00F3               	movwf	??_setCallBack
 16426  0667  0874               	movf	setCallBack@idx,w
 16427  0668  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16428  0669  0086               	movwf	6
 16429  066A  0187               	clrf	7
 16430  066B  0873               	movf	??_setCallBack,w
 16431  066C  0081               	movwf	1
 16432                           
 16433                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 16434  066D  2E7B               	goto	i1l1142
 16435  066E                     i1l3754:	
 16436                           
 16437                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 16438  066E  3574               	lslf	setCallBack@idx,w
 16439  066F  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16440  0670  0086               	movwf	6
 16441  0671  0187               	clrf	7
 16442  0672  30F0               	movlw	low _returnStop
 16443  0673  3FC0               	movwi [0]fsr1
 16444  0674  300D               	movlw	high _returnStop
 16445  0675  3FC1               	movwi [1]fsr1
 16446                           
 16447                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 16448  0676  0874               	movf	setCallBack@idx,w
 16449  0677  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16450  0678  0086               	movwf	6
 16451  0679  0187               	clrf	7
 16452  067A  0181               	clrf	1
 16453  067B                     i1l1142:	
 16454  067B  0008               	return
 16455  067C                     __end_of_setCallBack:	
 16456                           
 16457                           	psect	text71
 16458  0F1D                     __ptext71:	
 16459 ;; *************** function _i2c_setBuffer *****************
 16460 ;; Defined at:
 16461 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  buffer          1    wreg     PTR void 
 16464 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16465 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16466 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16467 ;;  bufferSize      2    0[COMMON] unsigned int 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  buffer          1    3[COMMON] PTR void 
 16470 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16471 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16472 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      void 
 16475 ;; Registers used:
 16476 ;;		wreg
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;Total ram usage:        4 bytes
 16487 ;; Hardware stack levels used:    1
 16488 ;; This function calls:
 16489 ;;		Nothing
 16490 ;; This function is called by:
 16491 ;;		_wr1RegCompleteHandler
 16492 ;;		_rd1RegCompleteHandler
 16493 ;;		_rd2RegCompleteHandler
 16494 ;;		_wr2RegCompleteHandler
 16495 ;;		_rdBlkRegCompleteHandler
 16496 ;;		_i2c_write1ByteRegister
 16497 ;;		_i2c_writeNBytes
 16498 ;;		_i2c_read1ByteRegister
 16499 ;;		_i2c_read2ByteRegister
 16500 ;;		_i2c_write2ByteRegister
 16501 ;;		_i2c_readDataBlock
 16502 ;;		_i2c_readNBytes
 16503 ;; This function uses a non-reentrant model
 16504 ;;
 16505                           
 16506                           
 16507                           ;psect for function _i2c_setBuffer
 16508  0F1D                     _i2c_setBuffer:	
 16509                           
 16510                           ;incstack = 0
 16511                           ; Regs used in _i2c_setBuffer: [wreg]
 16512                           ;i2c_setBuffer@buffer stored from wreg
 16513  0F1D  00F3               	movwf	i2c_setBuffer@buffer
 16514  0F1E                     i1l3770:	
 16515                           
 16516                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 16517  0F1E  0021               	movlb	1	; select bank1
 16518  0F1F  1D20               	btfss	_i2c_status^(0+128),2
 16519  0F20  2F22               	goto	u138_21
 16520  0F21  2F23               	goto	u138_20
 16521  0F22                     u138_21:	
 16522  0F22  2F2C               	goto	i1l1021
 16523  0F23                     u138_20:	
 16524  0F23                     i1l3772:	
 16525                           
 16526                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 16527  0F23  0873               	movf	i2c_setBuffer@buffer,w
 16528  0F24  00F2               	movwf	??_i2c_setBuffer
 16529  0F25  0872               	movf	??_i2c_setBuffer,w
 16530  0F26  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16531                           
 16532                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 16533  0F27  0871               	movf	i2c_setBuffer@bufferSize+1,w
 16534  0F28  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16535  0F29  0870               	movf	i2c_setBuffer@bufferSize,w
 16536  0F2A  00A3               	movwf	(_i2c_status^(0+128)+3)
 16537  0F2B                     i1l3774:	
 16538                           
 16539                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 16540  0F2B  1120               	bcf	_i2c_status^(0+128),2
 16541  0F2C                     i1l1021:	
 16542  0F2C  0008               	return
 16543  0F2D                     __end_of_i2c_setBuffer:	
 16544                           
 16545                           	psect	text72
 16546  0DF5                     __ptext72:	
 16547 ;; *************** function _i2c1_driver_stop *****************
 16548 ;; Defined at:
 16549 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;		None
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;		None
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		None
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16567 ;;Total ram usage:        0 bytes
 16568 ;; Hardware stack levels used:    1
 16569 ;; This function calls:
 16570 ;;		Nothing
 16571 ;; This function is called by:
 16572 ;;		_do_I2C_SEND_STOP
 16573 ;; This function uses a non-reentrant model
 16574 ;;
 16575                           
 16576                           
 16577                           ;psect for function _i2c1_driver_stop
 16578  0DF5                     _i2c1_driver_stop:	
 16579  0DF5                     i1l3764:	
 16580                           ;incstack = 0
 16581                           ; Regs used in _i2c1_driver_stop: []
 16582                           
 16583                           
 16584                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 16585  0DF5  0023               	movlb	3	; select bank3
 16586  0DF6  1511               	bsf	17,2	;volatile
 16587  0DF7                     i1l210:	
 16588  0DF7  0008               	return
 16589  0DF8                     __end_of_i2c1_driver_stop:	
 16590                           
 16591                           	psect	text73
 16592  0DF2                     __ptext73:	
 16593 ;; *************** function _i2c1_driver_restart *****************
 16594 ;; Defined at:
 16595 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;		None
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;		None
 16600 ;; Return value:  Size  Location     Type
 16601 ;;                  1    wreg      void 
 16602 ;; Registers used:
 16603 ;;		None
 16604 ;; Tracked objects:
 16605 ;;		On entry : 0/0
 16606 ;;		On exit  : 0/0
 16607 ;;		Unchanged: 0/0
 16608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;Total ram usage:        0 bytes
 16614 ;; Hardware stack levels used:    1
 16615 ;; This function calls:
 16616 ;;		Nothing
 16617 ;; This function is called by:
 16618 ;;		_do_I2C_SEND_RESTART_READ
 16619 ;;		_do_I2C_SEND_RESTART_WRITE
 16620 ;;		_do_I2C_SEND_RESTART
 16621 ;; This function uses a non-reentrant model
 16622 ;;
 16623                           
 16624                           
 16625                           ;psect for function _i2c1_driver_restart
 16626  0DF2                     _i2c1_driver_restart:	
 16627  0DF2                     i1l3762:	
 16628                           ;incstack = 0
 16629                           ; Regs used in _i2c1_driver_restart: []
 16630                           
 16631                           
 16632                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 16633  0DF2  0023               	movlb	3	; select bank3
 16634  0DF3  1491               	bsf	17,1	;volatile
 16635  0DF4                     i1l207:	
 16636  0DF4  0008               	return
 16637  0DF5                     __end_of_i2c1_driver_restart:	
 16638                           
 16639                           	psect	text74
 16640  0E07                     __ptext74:	
 16641 ;; *************** function _i2c1_driver_sendACK *****************
 16642 ;; Defined at:
 16643 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 16644 ;; Parameters:    Size  Location     Type
 16645 ;;		None
 16646 ;; Auto vars:     Size  Location     Type
 16647 ;;		None
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  1    wreg      void 
 16650 ;; Registers used:
 16651 ;;		None
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16661 ;;Total ram usage:        0 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; This function calls:
 16664 ;;		Nothing
 16665 ;; This function is called by:
 16666 ;;		_do_I2C_DO_ACK
 16667 ;;		_do_I2C_RX
 16668 ;; This function uses a non-reentrant model
 16669 ;;
 16670                           
 16671                           
 16672                           ;psect for function _i2c1_driver_sendACK
 16673  0E07                     _i2c1_driver_sendACK:	
 16674  0E07                     i1l3802:	
 16675                           ;incstack = 0
 16676                           ; Regs used in _i2c1_driver_sendACK: []
 16677                           
 16678                           
 16679                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 16680  0E07  0023               	movlb	3	; select bank3
 16681  0E08  1291               	bcf	17,5	;volatile
 16682                           
 16683                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 16684  0E09  1611               	bsf	17,4	;volatile
 16685  0E0A                     i1l234:	
 16686  0E0A  0008               	return
 16687  0E0B                     __end_of_i2c1_driver_sendACK:	
 16688                           
 16689                           	psect	text75
 16690  07DF                     __ptext75:	
 16691 ;; *************** function _TMR1_ISR *****************
 16692 ;; Defined at:
 16693 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16694 ;; Parameters:    Size  Location     Type
 16695 ;;		None
 16696 ;; Auto vars:     Size  Location     Type
 16697 ;;		None
 16698 ;; Return value:  Size  Location     Type
 16699 ;;                  1    wreg      void 
 16700 ;; Registers used:
 16701 ;;		wreg, status,2, status,0, pclath, cstack
 16702 ;; Tracked objects:
 16703 ;;		On entry : 0/0
 16704 ;;		On exit  : 0/0
 16705 ;;		Unchanged: 0/0
 16706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16711 ;;Total ram usage:        0 bytes
 16712 ;; Hardware stack levels used:    1
 16713 ;; Hardware stack levels required when called:    2
 16714 ;; This function calls:
 16715 ;;		Absolute function
 16716 ;;		_TMR1_DefaultInterruptHandler
 16717 ;;		_TMR1_WriteTimer
 16718 ;;		_h_clock
 16719 ;; This function is called by:
 16720 ;;		_INTERRUPT_InterruptManager
 16721 ;; This function uses a non-reentrant model
 16722 ;;
 16723                           
 16724                           
 16725                           ;psect for function _TMR1_ISR
 16726  07DF                     _TMR1_ISR:	
 16727  07DF                     i1l4436:	
 16728                           ;incstack = 0
 16729                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16730                           
 16731                           
 16732                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 16733  07DF  002E               	movlb	14	; select bank14
 16734  07E0  1010               	bcf	16,0	;volatile
 16735  07E1                     i1l4438:	
 16736                           
 16737                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 16738  07E1  0020               	movlb	0	; select bank0
 16739  07E2  0825               	movf	_timer1ReloadVal+1,w	;volatile
 16740  07E3  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16741  07E4  0824               	movf	_timer1ReloadVal,w	;volatile
 16742  07E5  00F0               	movwf	TMR1_WriteTimer@timerVal
 16743  07E6  318F  273D  3187   	fcall	_TMR1_WriteTimer
 16744  07E9                     i1l4440:	
 16745                           
 16746                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 16747  07E9  0020               	movlb	0	; select bank0
 16748  07EA  0822               	movf	_TMR1_InterruptHandler,w
 16749  07EB  0423               	iorwf	_TMR1_InterruptHandler+1,w
 16750  07EC  1903               	btfsc	3,2
 16751  07ED  2FEF               	goto	u181_21
 16752  07EE  2FF0               	goto	u181_20
 16753  07EF                     u181_21:	
 16754  07EF  2FF5               	goto	i1l631
 16755  07F0                     u181_20:	
 16756  07F0                     i1l4442:	
 16757                           
 16758                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 16759  07F0  0823               	movf	_TMR1_InterruptHandler+1,w
 16760  07F1  008A               	movwf	10
 16761  07F2  0822               	movf	_TMR1_InterruptHandler,w
 16762  07F3  000A               	callw
 16763  07F4  3187               	pagesel	$
 16764  07F5                     i1l631:	
 16765  07F5  0008               	return
 16766  07F6                     __end_of_TMR1_ISR:	
 16767                           
 16768                           	psect	text76
 16769  0DEC                     __ptext76:	
 16770 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16771 ;; Defined at:
 16772 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;		None
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		None
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		_TMR1_Initialize
 16796 ;;		_TMR1_ISR
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           
 16801                           ;psect for function _TMR1_DefaultInterruptHandler
 16802  0DEC                     _TMR1_DefaultInterruptHandler:	
 16803  0DEC                     i1l637:	
 16804                           ;incstack = 0
 16805                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16806                           
 16807  0DEC  0008               	return
 16808  0DED                     __end_of_TMR1_DefaultInterruptHandler:	
 16809                           
 16810                           	psect	text77
 16811  0FE9                     __ptext77:	
 16812 ;; *************** function _h_clock *****************
 16813 ;; Defined at:
 16814 ;;		line 203 in file "main.c"
 16815 ;; Parameters:    Size  Location     Type
 16816 ;;		None
 16817 ;; Auto vars:     Size  Location     Type
 16818 ;;		None
 16819 ;; Return value:  Size  Location     Type
 16820 ;;                  1    wreg      void 
 16821 ;; Registers used:
 16822 ;;		wreg, status,2, status,0, pclath, cstack
 16823 ;; Tracked objects:
 16824 ;;		On entry : 0/0
 16825 ;;		On exit  : 0/0
 16826 ;;		Unchanged: 0/0
 16827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16832 ;;Total ram usage:        0 bytes
 16833 ;; Hardware stack levels used:    1
 16834 ;; Hardware stack levels required when called:    1
 16835 ;; This function calls:
 16836 ;;		_update_clock
 16837 ;; This function is called by:
 16838 ;;		_main
 16839 ;;		_TMR1_ISR
 16840 ;; This function uses a non-reentrant model
 16841 ;;
 16842                           
 16843                           
 16844                           ;psect for function _h_clock
 16845  0FE9                     _h_clock:	
 16846  0FE9                     i1l800:	
 16847                           ;incstack = 0
 16848                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 16849                           ;main.c: 205:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 16850                           
 16851  0FE9                     i1l4156:	
 16852  0FE9  1003               	clrc
 16853  0FEA  0020               	movlb	0	; select bank0
 16854  0FEB  1F96               	btfss	22,7	;volatile
 16855  0FEC  1403               	setc
 16856  0FED  1803               	btfsc	3,0
 16857  0FEE  2FF0               	goto	u151_21
 16858  0FEF  2FF3               	goto	u151_20
 16859  0FF0                     u151_21:	
 16860  0FF0  0020               	movlb	0	; select bank0
 16861  0FF1  1796               	bsf	22,7	;volatile
 16862  0FF2  2FF5               	goto	u152_24
 16863  0FF3                     u151_20:	
 16864  0FF3  0020               	movlb	0	; select bank0
 16865  0FF4  1396               	bcf	22,7	;volatile
 16866  0FF5                     u152_24:	
 16867  0FF5                     i1l4158:	
 16868                           
 16869                           ;main.c: 206:     if(!half) {
 16870  0FF5  19FD               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 16871  0FF6  2FF8               	goto	u153_21
 16872  0FF7  2FF9               	goto	u153_20
 16873  0FF8                     u153_21:	
 16874  0FF8  2FFE               	goto	i1l802
 16875  0FF9                     u153_20:	
 16876  0FF9                     i1l4160:	
 16877                           
 16878                           ;main.c: 207:         update_clock();
 16879  0FF9  3186  26A0  318F   	fcall	_update_clock
 16880  0FFC                     i1l4162:	
 16881                           
 16882                           ;main.c: 208:         half = 1;
 16883  0FFC  15FD               	bsf	_half/(0+8),_half& (0+7)	;volatile
 16884                           
 16885                           ;main.c: 209:     }
 16886  0FFD  2FFF               	goto	i1l804
 16887  0FFE                     i1l802:	
 16888                           ;main.c: 210:     else {
 16889                           
 16890                           
 16891                           ;main.c: 211:         half = 0;
 16892  0FFE  11FD               	bcf	_half/(0+8),_half& (0+7)	;volatile
 16893  0FFF                     i1l804:	
 16894  0FFF  0008               	return
 16895  1000                     __end_of_h_clock:	
 16896                           
 16897                           	psect	text78
 16898  06A0                     __ptext78:	
 16899 ;; *************** function _update_clock *****************
 16900 ;; Defined at:
 16901 ;;		line 356 in file "main.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;		None
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;		None
 16906 ;; Return value:  Size  Location     Type
 16907 ;;                  1    wreg      void 
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0
 16910 ;; Tracked objects:
 16911 ;;		On entry : 0/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;Total ram usage:        1 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; This function calls:
 16922 ;;		Nothing
 16923 ;; This function is called by:
 16924 ;;		_h_clock
 16925 ;; This function uses a non-reentrant model
 16926 ;;
 16927                           
 16928                           
 16929                           ;psect for function _update_clock
 16930  06A0                     _update_clock:	
 16931  06A0                     i1l3824:	
 16932                           ;incstack = 0
 16933                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 16934                           
 16935                           
 16936                           ;main.c: 357:     seg++;
 16937  06A0  3001               	movlw	1
 16938  06A1  00F0               	movwf	??_update_clock
 16939  06A2  0870               	movf	??_update_clock,w
 16940  06A3  0020               	movlb	0	; select bank0
 16941  06A4  07BF               	addwf	_seg,f	;volatile
 16942                           
 16943                           ;main.c: 358:     last5s++;
 16944  06A5  3001               	movlw	1
 16945  06A6  00F0               	movwf	??_update_clock
 16946  06A7  0870               	movf	??_update_clock,w
 16947  06A8  07BE               	addwf	_last5s,f	;volatile
 16948  06A9                     i1l3826:	
 16949                           
 16950                           ;main.c: 359:     if(seg >= 60) {
 16951  06A9  303C               	movlw	60
 16952  06AA  023F               	subwf	_seg,w	;volatile
 16953  06AB  1C03               	skipc
 16954  06AC  2EAE               	goto	u139_21
 16955  06AD  2EAF               	goto	u139_20
 16956  06AE                     u139_21:	
 16957  06AE  2EC3               	goto	i1l872
 16958  06AF                     u139_20:	
 16959  06AF                     i1l3828:	
 16960                           
 16961                           ;main.c: 360:         clkm++;
 16962  06AF  3001               	movlw	1
 16963  06B0  00F0               	movwf	??_update_clock
 16964  06B1  0870               	movf	??_update_clock,w
 16965  06B2  07C0               	addwf	_clkm,f	;volatile
 16966                           
 16967                           ;main.c: 361:         last1m++;
 16968  06B3  3001               	movlw	1
 16969  06B4  00F0               	movwf	??_update_clock
 16970  06B5  0870               	movf	??_update_clock,w
 16971  06B6  07BD               	addwf	_last1m,f	;volatile
 16972  06B7                     i1l3830:	
 16973                           
 16974                           ;main.c: 362:         seg = 0;
 16975  06B7  01BF               	clrf	_seg	;volatile
 16976  06B8                     i1l3832:	
 16977                           
 16978                           ;main.c: 363:         if(clkm >= 60) {
 16979  06B8  303C               	movlw	60
 16980  06B9  0240               	subwf	_clkm,w	;volatile
 16981  06BA  1C03               	skipc
 16982  06BB  2EBD               	goto	u140_21
 16983  06BC  2EBE               	goto	u140_20
 16984  06BD                     u140_21:	
 16985  06BD  2EC3               	goto	i1l872
 16986  06BE                     u140_20:	
 16987  06BE                     i1l3834:	
 16988                           
 16989                           ;main.c: 364:             clkh++;
 16990  06BE  3001               	movlw	1
 16991  06BF  00F0               	movwf	??_update_clock
 16992  06C0  0870               	movf	??_update_clock,w
 16993  06C1  07C1               	addwf	_clkh,f	;volatile
 16994  06C2                     i1l3836:	
 16995                           
 16996                           ;main.c: 365:             clkm = 0;
 16997  06C2  01C0               	clrf	_clkm	;volatile
 16998  06C3                     i1l872:	
 16999  06C3  0008               	return
 17000  06C4                     __end_of_update_clock:	
 17001                           
 17002                           	psect	text79
 17003  0F3D                     __ptext79:	
 17004 ;; *************** function _TMR1_WriteTimer *****************
 17005 ;; Defined at:
 17006 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;  timerVal        2    0[COMMON] unsigned short 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;		None
 17011 ;; Return value:  Size  Location     Type
 17012 ;;                  1    wreg      void 
 17013 ;; Registers used:
 17014 ;;		wreg, status,2
 17015 ;; Tracked objects:
 17016 ;;		On entry : 0/0
 17017 ;;		On exit  : 0/0
 17018 ;;		Unchanged: 0/0
 17019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17024 ;;Total ram usage:        2 bytes
 17025 ;; Hardware stack levels used:    1
 17026 ;; This function calls:
 17027 ;;		Nothing
 17028 ;; This function is called by:
 17029 ;;		_TMR1_ISR
 17030 ;;		_TMR1_Reload
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           
 17035                           ;psect for function _TMR1_WriteTimer
 17036  0F3D                     _TMR1_WriteTimer:	
 17037  0F3D                     i1l4104:	
 17038                           ;incstack = 0
 17039                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17040                           
 17041                           
 17042                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 17043  0F3D  0024               	movlb	4	; select bank4
 17044  0F3E  1D0E               	btfss	14,2	;volatile
 17045  0F3F  2F41               	goto	u148_21
 17046  0F40  2F42               	goto	u148_20
 17047  0F41                     u148_21:	
 17048  0F41  2F49               	goto	i1l4114
 17049  0F42                     u148_20:	
 17050  0F42                     i1l4106:	
 17051                           
 17052                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 17053  0F42  100E               	bcf	14,0	;volatile
 17054  0F43                     i1l4108:	
 17055                           
 17056                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 17057  0F43  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17058  0F44  008D               	movwf	13	;volatile
 17059  0F45                     i1l4110:	
 17060                           
 17061                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 17062  0F45  0870               	movf	TMR1_WriteTimer@timerVal,w
 17063  0F46  008C               	movwf	12	;volatile
 17064  0F47                     i1l4112:	
 17065                           
 17066                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 17067  0F47  140E               	bsf	14,0	;volatile
 17068                           
 17069                           ;mcc_generated_files/tmr1.c: 140:     }
 17070  0F48  2F4D               	goto	i1l618
 17071  0F49                     i1l4114:	
 17072                           
 17073                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 17074  0F49  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17075  0F4A  008D               	movwf	13	;volatile
 17076  0F4B                     i1l4116:	
 17077                           
 17078                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 17079  0F4B  0870               	movf	TMR1_WriteTimer@timerVal,w
 17080  0F4C  008C               	movwf	12	;volatile
 17081  0F4D                     i1l618:	
 17082  0F4D  0008               	return
 17083  0F4E                     __end_of_TMR1_WriteTimer:	
 17084                           
 17085                           	psect	text80
 17086  0EF0                     __ptext80:	
 17087 ;; *************** function _TMR0_ISR *****************
 17088 ;; Defined at:
 17089 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;		None
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;		None
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  1    wreg      void 
 17096 ;; Registers used:
 17097 ;;		wreg, status,2, status,0, pclath, cstack
 17098 ;; Tracked objects:
 17099 ;;		On entry : 0/0
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;Total ram usage:        0 bytes
 17108 ;; Hardware stack levels used:    1
 17109 ;; Hardware stack levels required when called:    2
 17110 ;; This function calls:
 17111 ;;		Absolute function
 17112 ;;		_TMR0_DefaultInterruptHandler
 17113 ;;		_h_precisionclock
 17114 ;; This function is called by:
 17115 ;;		_INTERRUPT_InterruptManager
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           
 17120                           ;psect for function _TMR0_ISR
 17121  0EF0                     _TMR0_ISR:	
 17122  0EF0                     i1l4430:	
 17123                           ;incstack = 0
 17124                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17125                           
 17126                           
 17127                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17128  0EF0  002E               	movlb	14	; select bank14
 17129  0EF1  128C               	bcf	12,5	;volatile
 17130  0EF2                     i1l4432:	
 17131                           
 17132                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17133  0EF2  0020               	movlb	0	; select bank0
 17134  0EF3  0826               	movf	_TMR0_InterruptHandler,w
 17135  0EF4  0427               	iorwf	_TMR0_InterruptHandler+1,w
 17136  0EF5  1903               	btfsc	3,2
 17137  0EF6  2EF8               	goto	u180_21
 17138  0EF7  2EF9               	goto	u180_20
 17139  0EF8                     u180_21:	
 17140  0EF8  2EFE               	goto	i1l567
 17141  0EF9                     u180_20:	
 17142  0EF9                     i1l4434:	
 17143                           
 17144                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17145  0EF9  0827               	movf	_TMR0_InterruptHandler+1,w
 17146  0EFA  008A               	movwf	10
 17147  0EFB  0826               	movf	_TMR0_InterruptHandler,w
 17148  0EFC  000A               	callw
 17149  0EFD  318E               	pagesel	$
 17150  0EFE                     i1l567:	
 17151  0EFE  0008               	return
 17152  0EFF                     __end_of_TMR0_ISR:	
 17153                           
 17154                           	psect	text81
 17155  0DEB                     __ptext81:	
 17156 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17157 ;; Defined at:
 17158 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17159 ;; Parameters:    Size  Location     Type
 17160 ;;		None
 17161 ;; Auto vars:     Size  Location     Type
 17162 ;;		None
 17163 ;; Return value:  Size  Location     Type
 17164 ;;                  1    wreg      void 
 17165 ;; Registers used:
 17166 ;;		None
 17167 ;; Tracked objects:
 17168 ;;		On entry : 0/0
 17169 ;;		On exit  : 0/0
 17170 ;;		Unchanged: 0/0
 17171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;Total ram usage:        0 bytes
 17177 ;; Hardware stack levels used:    1
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		_TMR0_Initialize
 17182 ;;		_TMR0_ISR
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           
 17187                           ;psect for function _TMR0_DefaultInterruptHandler
 17188  0DEB                     _TMR0_DefaultInterruptHandler:	
 17189  0DEB                     i1l573:	
 17190                           ;incstack = 0
 17191                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17192                           
 17193  0DEB  0008               	return
 17194  0DEC                     __end_of_TMR0_DefaultInterruptHandler:	
 17195                           
 17196                           	psect	text82
 17197  03D5                     __ptext82:	
 17198 ;; *************** function _h_precisionclock *****************
 17199 ;; Defined at:
 17200 ;;		line 215 in file "main.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;		None
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      void 
 17207 ;; Registers used:
 17208 ;;		wreg, status,2, status,0, pclath, cstack
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17218 ;;Total ram usage:        3 bytes
 17219 ;; Hardware stack levels used:    1
 17220 ;; Hardware stack levels required when called:    1
 17221 ;; This function calls:
 17222 ;;		i1_PWM6_LoadDutyValue
 17223 ;; This function is called by:
 17224 ;;		_main
 17225 ;;		_TMR0_ISR
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           
 17230                           ;psect for function _h_precisionclock
 17231  03D5                     _h_precisionclock:	
 17232  03D5                     i1l4164:	
 17233                           ;incstack = 0
 17234                           ; Regs used in _h_precisionclock: [wreg+status,2+status,0+pclath+cstack]
 17235                           
 17236                           
 17237                           ;main.c: 217:     if(alarm) {
 17238  03D5  1CFD               	btfss	_alarm/(0+8),_alarm& (0+7)	;volatile
 17239  03D6  2BD8               	goto	u154_21
 17240  03D7  2BD9               	goto	u154_20
 17241  03D8                     u154_21:	
 17242  03D8  2BE9               	goto	i1l4172
 17243  03D9                     u154_20:	
 17244  03D9                     i1l4166:	
 17245                           
 17246                           ;main.c: 218:         if(last3000ms <= tala) {
 17247  03D9  0020               	movlb	0	; select bank0
 17248  03DA  083B               	movf	_last3000ms,w	;volatile
 17249  03DB  0230               	subwf	_tala,w
 17250  03DC  1C03               	skipc
 17251  03DD  2BDF               	goto	u155_21
 17252  03DE  2BE0               	goto	u155_20
 17253  03DF                     u155_21:	
 17254  03DF  2BE1               	goto	i1l4170
 17255  03E0                     u155_20:	
 17256  03E0  2BEC               	goto	i1l4174
 17257  03E1                     i1l4170:	
 17258                           
 17259                           ;main.c: 223:             PWM6_LoadDutyValue(1023);
 17260  03E1  30FF               	movlw	255
 17261  03E2  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17262  03E3  3003               	movlw	3
 17263  03E4  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17264  03E5  318F  27A7  3183   	fcall	i1_PWM6_LoadDutyValue
 17265  03E8  2BEC               	goto	i1l4174
 17266  03E9                     i1l4172:	
 17267                           
 17268                           ;main.c: 228:         duty_cycle = 0;
 17269  03E9  0020               	movlb	0	; select bank0
 17270  03EA  01BC               	clrf	_duty_cycle	;volatile
 17271                           
 17272                           ;main.c: 229:         last3000ms = 0;
 17273  03EB  01BB               	clrf	_last3000ms	;volatile
 17274  03EC                     i1l4174:	
 17275                           
 17276                           ;main.c: 233:     if(LATCbits.LATC5) {
 17277  03EC  0020               	movlb	0	; select bank0
 17278  03ED  1E98               	btfss	24,5	;volatile
 17279  03EE  2BF0               	goto	u156_21
 17280  03EF  2BF1               	goto	u156_20
 17281  03F0                     u156_21:	
 17282  03F0  2C21               	goto	i1l4188
 17283  03F1                     u156_20:	
 17284  03F1                     i1l4176:	
 17285                           
 17286                           ;main.c: 234:         if (!delta10ms_2) {
 17287  03F1  083A               	movf	_delta10ms_2,w	;volatile
 17288  03F2  1D03               	btfss	3,2
 17289  03F3  2BF5               	goto	u157_21
 17290  03F4  2BF6               	goto	u157_20
 17291  03F5                     u157_21:	
 17292  03F5  2BFC               	goto	i1l4182
 17293  03F6                     u157_20:	
 17294  03F6                     i1l4178:	
 17295                           
 17296                           ;main.c: 235:             delta10ms_2 = ms;
 17297  03F6  0820               	movf	_ms,w	;volatile
 17298  03F7  00F4               	movwf	??_h_precisionclock
 17299  03F8  0874               	movf	??_h_precisionclock,w
 17300  03F9  00BA               	movwf	_delta10ms_2	;volatile
 17301  03FA                     i1l4180:	
 17302                           
 17303                           ;main.c: 236:             s2_pressed = 1;
 17304  03FA  157D               	bsf	_s2_pressed/(0+8),_s2_pressed& (0+7)	;volatile
 17305                           
 17306                           ;main.c: 237:         } else if ((delta10ms_2 - ms >= 10) || (delta10ms_2 - ms <= -10)) 
      +                          {
 17307  03FB  2C21               	goto	i1l4188
 17308  03FC                     i1l4182:	
 17309  03FC  083A               	movf	_delta10ms_2,w	;volatile
 17310  03FD  00F4               	movwf	??_h_precisionclock
 17311  03FE  0820               	movf	_ms,w	;volatile
 17312  03FF  0274               	subwf	??_h_precisionclock,w
 17313  0400  00F5               	movwf	??_h_precisionclock+1
 17314  0401  0921               	comf	_ms+1,w	;volatile
 17315  0402  1803               	skipnc
 17316  0403  0A89               	incf	9,f
 17317  0404  00F6               	movwf	??_h_precisionclock+2
 17318  0405  3000               	movlw	0
 17319  0406  0276               	subwf	??_h_precisionclock+2,w
 17320  0407  300A               	movlw	10
 17321  0408  1903               	skipnz
 17322  0409  0275               	subwf	??_h_precisionclock+1,w
 17323  040A  1803               	skipnc
 17324  040B  2C0D               	goto	u158_21
 17325  040C  2C0E               	goto	u158_20
 17326  040D                     u158_21:	
 17327  040D  2C20               	goto	i1l4186
 17328  040E                     u158_20:	
 17329  040E                     i1l4184:	
 17330  040E  083A               	movf	_delta10ms_2,w	;volatile
 17331  040F  00F4               	movwf	??_h_precisionclock
 17332  0410  0820               	movf	_ms,w	;volatile
 17333  0411  0274               	subwf	??_h_precisionclock,w
 17334  0412  00F5               	movwf	??_h_precisionclock+1
 17335  0413  0921               	comf	_ms+1,w	;volatile
 17336  0414  1803               	skipnc
 17337  0415  0A89               	incf	9,f
 17338  0416  00F6               	movwf	??_h_precisionclock+2
 17339  0417  30FF               	movlw	255
 17340  0418  0276               	subwf	??_h_precisionclock+2,w
 17341  0419  30F7               	movlw	247
 17342  041A  1903               	skipnz
 17343  041B  0275               	subwf	??_h_precisionclock+1,w
 17344  041C  1803               	skipnc
 17345  041D  2C1F               	goto	u159_21
 17346  041E  2C20               	goto	u159_20
 17347  041F                     u159_21:	
 17348  041F  2C21               	goto	i1l4188
 17349  0420                     u159_20:	
 17350  0420                     i1l4186:	
 17351                           
 17352                           ;main.c: 238:             delta10ms_2 = 0;
 17353  0420  01BA               	clrf	_delta10ms_2	;volatile
 17354  0421                     i1l4188:	
 17355                           
 17356                           ;main.c: 242:     ms++;
 17357  0421  3001               	movlw	1
 17358  0422  07A0               	addwf	_ms,f	;volatile
 17359  0423  3000               	movlw	0
 17360  0424  3DA1               	addwfc	_ms+1,f	;volatile
 17361  0425                     i1l4190:	
 17362                           
 17363                           ;main.c: 243:     last3000ms++;
 17364  0425  3001               	movlw	1
 17365  0426  00F4               	movwf	??_h_precisionclock
 17366  0427  0874               	movf	??_h_precisionclock,w
 17367  0428  07BB               	addwf	_last3000ms,f	;volatile
 17368  0429                     i1l817:	
 17369  0429  0008               	return
 17370  042A                     __end_of_h_precisionclock:	
 17371                           
 17372                           	psect	text83
 17373  0FA7                     __ptext83:	
 17374 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17375 ;; Defined at:
 17376 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;  dutyValue       2    0[COMMON] unsigned short 
 17379 ;; Auto vars:     Size  Location     Type
 17380 ;;		None
 17381 ;; Return value:  Size  Location     Type
 17382 ;;                  1    wreg      void 
 17383 ;; Registers used:
 17384 ;;		wreg, status,2, status,0
 17385 ;; Tracked objects:
 17386 ;;		On entry : 0/0
 17387 ;;		On exit  : 0/0
 17388 ;;		Unchanged: 0/0
 17389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17394 ;;Total ram usage:        4 bytes
 17395 ;; Hardware stack levels used:    1
 17396 ;; This function calls:
 17397 ;;		Nothing
 17398 ;; This function is called by:
 17399 ;;		_h_precisionclock
 17400 ;; This function uses a non-reentrant model
 17401 ;;
 17402                           
 17403                           
 17404                           ;psect for function i1_PWM6_LoadDutyValue
 17405  0FA7                     i1_PWM6_LoadDutyValue:	
 17406  0FA7                     i1l3942:	
 17407                           ;incstack = 0
 17408                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17409                           
 17410                           
 17411                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17412  0FA7  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17413  0FA8  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17414  0FA9  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17415  0FAA  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17416  0FAB  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17417  0FAC  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17418  0FAD  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17419  0FAE  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17420  0FAF  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17421  0FB0  0027               	movlb	7	; select bank7
 17422  0FB1  008D               	movwf	13	;volatile
 17423                           
 17424                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 17425  0FB2  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17426  0FB3  3903               	andlw	3
 17427  0FB4  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17428  0FB5  3005               	movlw	5
 17429  0FB6                     u145_25:	
 17430  0FB6  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 17431  0FB7  3EFF               	addlw	-1
 17432  0FB8  1D03               	skipz
 17433  0FB9  2FB6               	goto	u145_25
 17434  0FBA  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 17435  0FBB  008C               	movwf	12	;volatile
 17436  0FBC                     i1l651:	
 17437  0FBC  0008               	return
 17438  0FBD                     __end_ofi1_PWM6_LoadDutyValue:	
 17439                           
 17440                           	psect	text84
 17441  0E40                     __ptext84:	
 17442 ;; *************** function _INT_ISR *****************
 17443 ;; Defined at:
 17444 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17445 ;; Parameters:    Size  Location     Type
 17446 ;;		None
 17447 ;; Auto vars:     Size  Location     Type
 17448 ;;		None
 17449 ;; Return value:  Size  Location     Type
 17450 ;;                  1    wreg      void 
 17451 ;; Registers used:
 17452 ;;		wreg, status,2, status,0, pclath, cstack
 17453 ;; Tracked objects:
 17454 ;;		On entry : 0/0
 17455 ;;		On exit  : 0/0
 17456 ;;		Unchanged: 0/0
 17457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;Total ram usage:        0 bytes
 17463 ;; Hardware stack levels used:    1
 17464 ;; Hardware stack levels required when called:    2
 17465 ;; This function calls:
 17466 ;;		_INT_CallBack
 17467 ;; This function is called by:
 17468 ;;		_INTERRUPT_InterruptManager
 17469 ;; This function uses a non-reentrant model
 17470 ;;
 17471                           
 17472                           
 17473                           ;psect for function _INT_ISR
 17474  0E40                     _INT_ISR:	
 17475  0E40                     i1l5360:	
 17476                           ;incstack = 0
 17477                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 17478                           
 17479                           
 17480                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 17481  0E40  002E               	movlb	14	; select bank14
 17482  0E41  100C               	bcf	12,0	;volatile
 17483  0E42                     i1l5362:	
 17484                           
 17485                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 17486  0E42  318E  26BB  318E   	fcall	_INT_CallBack
 17487  0E45                     i1l13:	
 17488  0E45  0008               	return
 17489  0E46                     __end_of_INT_ISR:	
 17490                           
 17491                           	psect	text85
 17492  0EBB                     __ptext85:	
 17493 ;; *************** function _INT_CallBack *****************
 17494 ;; Defined at:
 17495 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17496 ;; Parameters:    Size  Location     Type
 17497 ;;		None
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;		None
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      void 
 17502 ;; Registers used:
 17503 ;;		wreg, status,2, status,0, pclath, cstack
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;Total ram usage:        0 bytes
 17514 ;; Hardware stack levels used:    1
 17515 ;; Hardware stack levels required when called:    1
 17516 ;; This function calls:
 17517 ;;		Absolute function
 17518 ;;		_INT_DefaultInterruptHandler
 17519 ;;		_sw1_EXT
 17520 ;; This function is called by:
 17521 ;;		_INT_ISR
 17522 ;; This function uses a non-reentrant model
 17523 ;;
 17524                           
 17525                           
 17526                           ;psect for function _INT_CallBack
 17527  0EBB                     _INT_CallBack:	
 17528  0EBB                     i1l5120:	
 17529                           ;incstack = 0
 17530                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17531                           
 17532                           
 17533                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 17534  0EBB  0020               	movlb	0	; select bank0
 17535  0EBC  082C               	movf	_INT_InterruptHandler,w
 17536  0EBD  042D               	iorwf	_INT_InterruptHandler+1,w
 17537  0EBE  1903               	btfsc	3,2
 17538  0EBF  2EC1               	goto	u261_21
 17539  0EC0  2EC2               	goto	u261_20
 17540  0EC1                     u261_21:	
 17541  0EC1  2EC7               	goto	i1l17
 17542  0EC2                     u261_20:	
 17543  0EC2                     i1l5122:	
 17544                           
 17545                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 17546  0EC2  082D               	movf	_INT_InterruptHandler+1,w
 17547  0EC3  008A               	movwf	10
 17548  0EC4  082C               	movf	_INT_InterruptHandler,w
 17549  0EC5  000A               	callw
 17550  0EC6  318E               	pagesel	$
 17551  0EC7                     i1l17:	
 17552  0EC7  0008               	return
 17553  0EC8                     __end_of_INT_CallBack:	
 17554                           
 17555                           	psect	text86
 17556  0DEA                     __ptext86:	
 17557 ;; *************** function _INT_DefaultInterruptHandler *****************
 17558 ;; Defined at:
 17559 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;		None
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;		None
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  1    wreg      void 
 17566 ;; Registers used:
 17567 ;;		None
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17577 ;;Total ram usage:        0 bytes
 17578 ;; Hardware stack levels used:    1
 17579 ;; This function calls:
 17580 ;;		Nothing
 17581 ;; This function is called by:
 17582 ;;		_EXT_INT_Initialize
 17583 ;;		_INT_CallBack
 17584 ;; This function uses a non-reentrant model
 17585 ;;
 17586                           
 17587                           
 17588                           ;psect for function _INT_DefaultInterruptHandler
 17589  0DEA                     _INT_DefaultInterruptHandler:	
 17590  0DEA                     i1l23:	
 17591                           ;incstack = 0
 17592                           ; Regs used in _INT_DefaultInterruptHandler: []
 17593                           
 17594  0DEA  0008               	return
 17595  0DEB                     __end_of_INT_DefaultInterruptHandler:	
 17596                           
 17597                           	psect	text87
 17598  05CA                     __ptext87:	
 17599 ;; *************** function _sw1_EXT *****************
 17600 ;; Defined at:
 17601 ;;		line 246 in file "main.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;		None
 17604 ;; Auto vars:     Size  Location     Type
 17605 ;;		None
 17606 ;; Return value:  Size  Location     Type
 17607 ;;                  1    wreg      void 
 17608 ;; Registers used:
 17609 ;;		wreg, status,2, status,0
 17610 ;; Tracked objects:
 17611 ;;		On entry : 0/0
 17612 ;;		On exit  : 0/0
 17613 ;;		Unchanged: 0/0
 17614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17617 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17619 ;;Total ram usage:        3 bytes
 17620 ;; Hardware stack levels used:    1
 17621 ;; This function calls:
 17622 ;;		Nothing
 17623 ;; This function is called by:
 17624 ;;		_main
 17625 ;;		_INT_CallBack
 17626 ;; This function uses a non-reentrant model
 17627 ;;
 17628                           
 17629                           
 17630                           ;psect for function _sw1_EXT
 17631  05CA                     _sw1_EXT:	
 17632  05CA                     i1l5106:	
 17633                           ;incstack = 0
 17634                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0]
 17635                           
 17636                           
 17637                           ;main.c: 248:     if(!delta10ms) {
 17638  05CA  0020               	movlb	0	; select bank0
 17639  05CB  0839               	movf	_delta10ms,w	;volatile
 17640  05CC  1D03               	btfss	3,2
 17641  05CD  2DCF               	goto	u258_21
 17642  05CE  2DD0               	goto	u258_20
 17643  05CF                     u258_21:	
 17644  05CF  2DD7               	goto	i1l5114
 17645  05D0                     u258_20:	
 17646  05D0                     i1l5108:	
 17647                           
 17648                           ;main.c: 249:         delta10ms = ms;
 17649  05D0  0820               	movf	_ms,w	;volatile
 17650  05D1  00F0               	movwf	??_sw1_EXT
 17651  05D2  0870               	movf	??_sw1_EXT,w
 17652  05D3  00B9               	movwf	_delta10ms	;volatile
 17653  05D4                     i1l5110:	
 17654                           
 17655                           ;main.c: 250:         s1_pressed = 1;
 17656  05D4  1461               	bsf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 17657  05D5                     i1l5112:	
 17658                           
 17659                           ;main.c: 252:         alarm = 0;
 17660  05D5  10FD               	bcf	_alarm/(0+8),_alarm& (0+7)	;volatile
 17661                           
 17662                           ;main.c: 253:     }
 17663  05D6  2DFC               	goto	i1l825
 17664  05D7                     i1l5114:	
 17665  05D7  0839               	movf	_delta10ms,w	;volatile
 17666  05D8  00F0               	movwf	??_sw1_EXT
 17667  05D9  0820               	movf	_ms,w	;volatile
 17668  05DA  0270               	subwf	??_sw1_EXT,w
 17669  05DB  00F1               	movwf	??_sw1_EXT+1
 17670  05DC  0921               	comf	_ms+1,w	;volatile
 17671  05DD  1803               	skipnc
 17672  05DE  0A89               	incf	9,f
 17673  05DF  00F2               	movwf	??_sw1_EXT+2
 17674  05E0  3000               	movlw	0
 17675  05E1  0272               	subwf	??_sw1_EXT+2,w
 17676  05E2  300A               	movlw	10
 17677  05E3  1903               	skipnz
 17678  05E4  0271               	subwf	??_sw1_EXT+1,w
 17679  05E5  1803               	skipnc
 17680  05E6  2DE8               	goto	u259_21
 17681  05E7  2DE9               	goto	u259_20
 17682  05E8                     u259_21:	
 17683  05E8  2DFB               	goto	i1l5118
 17684  05E9                     u259_20:	
 17685  05E9                     i1l5116:	
 17686  05E9  0839               	movf	_delta10ms,w	;volatile
 17687  05EA  00F0               	movwf	??_sw1_EXT
 17688  05EB  0820               	movf	_ms,w	;volatile
 17689  05EC  0270               	subwf	??_sw1_EXT,w
 17690  05ED  00F1               	movwf	??_sw1_EXT+1
 17691  05EE  0921               	comf	_ms+1,w	;volatile
 17692  05EF  1803               	skipnc
 17693  05F0  0A89               	incf	9,f
 17694  05F1  00F2               	movwf	??_sw1_EXT+2
 17695  05F2  30FF               	movlw	255
 17696  05F3  0272               	subwf	??_sw1_EXT+2,w
 17697  05F4  30F7               	movlw	247
 17698  05F5  1903               	skipnz
 17699  05F6  0271               	subwf	??_sw1_EXT+1,w
 17700  05F7  1803               	skipnc
 17701  05F8  2DFA               	goto	u260_21
 17702  05F9  2DFB               	goto	u260_20
 17703  05FA                     u260_21:	
 17704  05FA  2DFC               	goto	i1l825
 17705  05FB                     u260_20:	
 17706  05FB                     i1l5118:	
 17707                           
 17708                           ;main.c: 255:         delta10ms = 0;
 17709  05FB  01B9               	clrf	_delta10ms	;volatile
 17710  05FC                     i1l825:	
 17711  05FC  0008               	return
 17712  05FD                     __end_of_sw1_EXT:	
 17713  007E                     btemp	set	126	;btemp
 17714  007E                     int$flags	set	126
 17715  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         70
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      68
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3472$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3478	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3477	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3472	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1657$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK0[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S2168$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S1657$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1657$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    S1657$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_precisionclock(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_precisionclock(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock
    _TMR0_ISR->_h_precisionclock
    _h_precisionclock->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT

Critical Paths under _main in BANK0

    _main->_push_ring
    _tsttc->_WriteI2C
    _reset_recv->_DATAEE_WriteByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   16273
                                             20 BANK0      5     5      0
                           _ADC_read
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                     _I2C_Initialize
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                              _cksum
                            _cksum_w
                          _push_ring
                          _read_ring
                         _reset_recv
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_recv                                           2     2      0    2026
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2323
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2580
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    3025
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (2) _cksum                                                4     4      0    1098
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     962
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    1927
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     747
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   78352
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (5) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (9) _setCallBack                                          5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (8) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (6) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (7) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      70
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                   _h_precisionclock *
 ---------------------------------------------------------------------------------
 (6) _h_precisionclock                                     3     3      0      70
                                              4 COMMON     3     3      0
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (7) _sw1_EXT                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _I2C_Initialize
     _i2c1_driver_open
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _cksum
     _DATAEE_ReadByte
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _reset_recv
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _h_precisionclock *
       i1_PWM6_LoadDutyValue
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       2       4        2.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 02 20:16:10 2019

                            _update_clock 06A0                              returnReset@p 0079  
                          ___bmul@product 004E                               __CFG_CP$OFF 0000  
                                      l20 0E4B                                        l26 0EEF  
                    __size_of_do_I2C_IDLE 0005                                        _ms 0020  
                     _do_I2C_SEND_RESTART 0E27                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l132 0E93                                       l126 0779  
                                     l129 0EAE                                       l193 0EBA  
                                     l450 0E6B                                       l362 0510  
                                     l444 0FD2                                       l604 0741  
                                     l453 0EA5                                       l447 0E8B  
                                     l570 0E51                                       l634 0E57  
                                     l651 07C6                                       l548 0FA6  
                                     l648 0EE1                                       l930 0F1C  
                                     l924 0694                                       l781 0076  
                                     l846 0793                                       l926 0698  
                                     l927 069F                                       l792 01C0  
                                     l784 0224                                       l794 0223  
                                     l786 01F7                                       l787 01F6  
                                     l788 017F                                       l797 0229  
                                     l878 07AD                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                           _timer1ReloadVal 0024  
                                     _aux 002F                                       _seg 003F  
                __end_of_h_precisionclock 042A             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0EFF  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 0794                   ??_rd2RegCompleteHandler 007A  
                                    l1412 0372                                      l1413 0374  
                                    l1406 035C                                      l1342 022B  
                                    l1407 035F                                      l1424 071A  
                                    l1432 03D4                                      l1416 037A  
                                    l1169 0F0D                                      l1425 071C  
                                    l1345 023A                                      l1370 02B6  
                                    l1346 023C                                      l1339 07FF  
                                    l1435 039C                                      l1428 0722  
                                    l1444 03BE                                      l1437 03A1  
                                    l1357 0275                                      l1382 02E3  
                                    l1358 0277                                      l1383 02E5  
                                    l1375 02C9                                      l1376 02CB  
                                    l1449 03D2                                      l1369 02B3  
                                    l1394 031E                                      l1378 02CF  
                                    l1483 0703                                      l1475 0596  
                                    l1395 0320                                      l5100 0F19  
                                    l1468 0557                                      l5102 0F1A  
                                    l1478 0F3C                                      l5200 0FCF  
                                    l1488 075D                                      l5202 0FD1  
                                    l5130 0E8C                                      l5210 0F08  
                                    l1666 0FE8                                      l5124 0EE2  
                                    l5140 04D4                                      l5132 04C8  
                                    l5220 072A                                      l5212 0F0A  
                                    l5204 0EFF                                      l5300 068F  
                                    l5126 0EE5                                      l5150 04DF  
                                    l5142 04D6                                      l5134 04CE  
                                    l5230 073E                                      l5222 072C  
                                    l5214 0723                                      l5206 0F04  
                                    l5302 0691                                      l5310 0380  
                    _ADCC_StartConversion 0E84                                      l5400 07FB  
                                    l5128 0EED                                      l5160 04F3  
                                    l5152 04E1                                      l5144 04D8  
                                    l5136 04D0                                      l5240 0F9B  
                                    l5232 0F92                                      l5224 0733  
                                    l5216 0726                                      l5208 0F05  
                                    l5304 0693                                      l5320 039A  
                                    l5250 0EB7                                      l5402 07FC  
                                    l5170 04FD                                      l5162 04F5  
                                    l5154 04ED                                      l5146 04DB  
                                    l5138 04D2                                      l5242 0FA3  
                                    l5234 0F97                                      l5226 0735  
                                    l5218 0728                                      l5306 0699  
                                    l5090 0F0E                                      l5330 03B3  
                                    l5322 03A6                                      l5410 024F  
                                    l5260 0E8A                                      l5244 0EAF  
                                    l5404 07FE                                      l5084 0E46  
                                    l5180 0509                                      l5172 04FF  
                                    l5164 04F7                                      l5156 04EF  
                                    l5148 04DD                                      l5236 0F98  
                                    l5228 0736                                      l5092 0F12  
                                    l5340 070F                                      l5332 03C3  
                                    l5316 0385                                      l5308 037D  
                                    l5420 028A                                      l5412 0253  
                                    l5262 0E65                                      l5246 0EB4  
                                    l5190 0EAA                                      l5182 050B  
                                    l5174 0501                                      l5166 04F9  
                                    l5158 04F1                                      l5086 0E4C  
                                    l5238 0F9A                                      l5094 0F16  
                                    l5270 06E4                                      l5510 054D  
                                    l5502 0521                                      l5350 0FDA  
                                    l5342 0721                                      l5318 038F  
                                    l5430 02D4                                      l5422 028E  
                                    l5414 0262                                      l5406 022B  
                                    l5256 0E86                                      l5248 0EB5  
                                    l5192 0EAD                                      l5184 050D  
                                    l5176 0504                                      l5168 04FB  
                                    l5088 0E52                                      l5096 0F17  
                                    l5280 06F5                                      l5272 06E6  
                                    l5512 0551                                      l5504 052A  
                                    l5352 0FDE                                      l5328 03A8  
                                    l5440 030F                                      l5432 02E9  
                                    l5424 029D                                      l5416 0266  
                                    l5408 0240                                      l5600 0092  
                                    l5266 0E9D                                      l5258 0E89  
                                    l5186 0EA6                                      l5178 0506  
                                    l5194 0ED5                                      l5370 0767  
                                    l5290 0684                                      l5098 0F18  
                                    l5282 06F9                                      l5506 052E  
                                    l5354 0FE0                                      l5346 0FD5  
                                    l5338 0704                                      l5450 034D  
                                    l5442 0324                                      l5434 02F8  
                                    l5426 02A4                                      l5418 027B  
                                    l5610 0101                                      l5602 009E  
                                    l5460 0799                                      l5188 0EA9  
                                    l5196 0EDC                                      l5380 0776  
                                    l5372 076A                                      l5364 075E  
                                    l5292 0688                                      l5284 0702  
                                    l5508 0545                                      l5356 0FE7  
                                    l5348 0FD6                                      l5452 0363  
                                    l5444 0333                                      l5436 02FC  
                                    l5428 02BA                                      l5620 012B  
                                    l5612 010D                                      l5604 00B0  
                                    l5462 079D                                      l5382 07AE  
                                    l5198 0FBD                                      l5374 076D  
                                    l5366 0761                                      l5294 068C  
                                    l5278 06EA                                      l5470 055A  
                                    l5390 074F                                      l5454 0378  
                                    l5446 0337                                      l5438 030B  
                                    l5630 0140                                      l5622 012E  
                                    l5614 0119                                      l5606 00F2  
                                    l5464 07A5                                      l5376 0770  
                                    l5368 0764                                      l5296 068D  
                                    l5288 067C                                      l5480 0578  
                                    l5472 055A                                      l5392 0754  
                                    l5384 0742                                      l5448 0346  
                                    l5640 0156                                      l5632 0149  
                                    l5624 012F                                      l5616 0125  
                                    l5608 00F5                                      l5458 0794  
                                    l5378 0773                                      l5298 068E  
                                    l5394 0F2D                                      l5482 057F  
                                    l5474 0560                                      l5650 0168  
                                    l5642 0157                                      l5634 014E  
                                    l5626 0130                                      l5618 0128  
                                    l5396 07F6                                      l5468 077A  
                                    l5492 0513                                      l5476 0565  
                                    l5484 058A                                      l5388 0747  
                                    l5660 0187                                      l5652 0172  
                                    l5644 0158                                      l5636 014F  
                                    l5628 0138                                      l5580 0075  
                                    l5398 07F9                                      l5494 051B  
                                    l5478 0572                                      l5670 01D6  
                                    l5662 0191                                      l5654 0179  
                                    l5646 015F                                      l5638 0155  
                                    l5590 0080                                      l5582 0076  
                                    l5574 0068                                      l5496 0520  
                                    l5488 058C                                      l5680 01FF  
                                    l5672 01E6                                      l5664 01A9  
                                    l5656 017E                                      l5648 0160  
                                    l5592 0089                                      l5576 006B  
                                    l5690 021F                                      l5682 0203  
                                    l5674 01F2                                      l5666 01C1  
                                    l5658 0183                                      l5594 008A  
                                    l5586 007A                                      l5578 0074  
                                    l5684 0207                                      l5676 01F8  
                                    l5668 01CD                                      l5596 008B  
                                    l5588 007B                                      l5686 0208  
                                    l5678 01FE                                      l5598 008C  
                                    l5688 0213                                      u3000 0333  
                                    u3001 0332                                      u3010 0346  
                                    u3011 0345                                      u3100 051B  
                                    u3020 035C                                      u3101 051A  
                                    u3021 035B                                      _LATA 0016  
                                    u3110 052A                                      u3030 0363  
                                    _LATB 0017                           __end_of_INT_ISR 0E46  
                                    u3111 0529                                      u3031 0362  
                                    _LATC 0018                                      u3120 0557  
                                    u3040 0372                                      _LATD 0019  
                                    u3121 0556                                      u3041 0371  
                                    _LATE 001A                                      u3050 0378  
                                    u3051 0377                                      u3060 07A5  
                                    u3300 017E                                      u3061 07A4  
                                    u3301 017D                                      u3070 0560  
                                    u3310 0183                                      u3071 055F  
                                    u3311 0182                                      u3080 0565  
                                    u3320 01A9                                      u3081 0564  
                                    u3321 01A8                                      u3090 0578  
                                    u3330 01C0                                      u3250 009E  
                                    _T2PR 028D                                      u3091 0577  
                                    u3331 01BF                                      u3251 009D  
                                    u2620 0EB4                                      u2700 03B3  
                                    u3340 01FE                                      u3260 00B0  
                                    u2621 0EB3                                      u2701 03B2  
                                    u3341 01FD                                      u3261 00AF  
                                    u2630 0702                                      u2710 03BE  
                                    u3350 0229                                      u3270 014E  
                                    u2631 0701                                      u2711 03BD  
                                    u3351 0228                                      u3271 014D  
                                    u2640 0698                                      u2800 075D  
                                    u2720 03C3                                      u3280 0155  
                                    u2641 0697                                      u2801 075C  
                                    u2721 03C2                                      u3281 0154  
                                    u2730 03D2                                      u2650 0384  
                                    u2810 023A                                      u3290 0179  
                                    u2731 03D1                                      u2651 0383  
                                    u2811 0239                                      u3291 0178  
                                    u2740 070F                                      u2660 038F  
                                    u2900 02BA                                      u2820 0240  
                                    u2741 070E                                      u2661 038E  
                                    u2901 02B9                                      u2821 023F  
                                    u2750 071A                                      u2670 039A  
                                    u2910 02C9                                      u2830 024F  
                                    u3527 079A                                      u2751 0719  
                                    u2671 0399                                      u2911 02C8  
                                    u2831 024E                                      u2760 0721  
                                    u2680 03A1                                      u2920 02CF  
                                    u2840 0262                                      u2761 0720  
                                    u2681 03A0                                      u2921 02CE  
                                    u2841 0261                                      u2770 0FDA  
                                    u2690 03A6                                      u2930 02D4  
                                    u2850 0275                                      u2771 0FD9  
                                    u2691 03A5                                      u2931 02D3  
                                    u2851 0274                                      u2780 0FE7  
                                    u2940 02E3                                      u2860 027B  
                                    _PMD0 0796                                      i1l13 0E45  
                                    u2781 0FE6                                      u2941 02E2  
                                    u2861 027A                                      _PMD1 0797  
                                    u2950 02E9                                      u2870 028A  
                                    _PMD2 0798                                      i1l23 0DEA  
                                    u2951 02E8                                      u2871 0289  
                                    _PMD3 0799                                      u2960 02F8  
                                    u2880 029D                                      _PMD4 079A  
                                    i1l17 0EC7                                      u2961 02F7  
                                    u2881 029C                                      _PMD5 079B  
                                    u2970 030B                                      u2890 02B3  
                                    i1l35 0DEF                                      u2795 07BF  
                                    u2971 030A                                      u2891 02B2  
                                    u2980 031E                                      u2981 031D  
                                    u2990 0324                                      u2991 0323  
                                    i1l72 0032                                      i1l73 004D  
                                    i1l74 0041                                      i1l67 0013  
                                    i1l69 001F                                      i1l79 004D  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0031  
                                    _alal 0032                                      _alat 0034  
                                    _aux1 002E                                      _half 03EB  
                                    _clkh 0041                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 0040                                      _main 0068  
                                    _tala 0030                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0037  
                                    _temp 0035                                      _pmon 0036  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0DEB               _INT_DefaultInterruptHandler 0DEA  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 004F                          __end_of_ADC_read 07AE  
         __end_of_INT_SetInterruptHandler 0E4C                             _i2c_setBuffer 0F1D  
              ??_TMR1_SetInterruptHandler 004E                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 004F                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 062A                           __end_of_ReadI2C 0723  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0FA7  
                            _do_I2C_RESET 0E74            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0EAF  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0EBB  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0DF8  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0E18  
                          __CFG_DEBUG$OFF 0000                                     i1l201 0DED  
                                   i1l210 0DF7                                     _T2TMR 028C  
                                   i1l213 0E73                                     i1l207 0DF4  
                                   i1l216 0DFA                                     i1l234 0E0A  
                                   _T2RST 0291                                     i1l219 0DFD  
                                   i1l228 0E17                                     i1l237 0E0E  
                                   i1l175 0E03                                     i1l271 0E06  
                                   i1l178 0E00                                     i1l631 07F5  
                                   i1l800 0FE9                                     i1l618 0F4D  
                                   i1l802 0FFE                                     i1l651 0FBC  
                                   i1l804 0FFF                                     i1l573 0DEB  
                                   i1l637 0DEC                                     i1l567 0EFE  
                                   i1l825 05FC                                     i1l817 0429  
                                   i1l872 06C3                                     i1l991 0ED4  
                                   _OSCEN 0891                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0006                           __end_of_h_clock 1000  
                         _PWM6_Initialize 0ED5                 ?_TMR0_SetInterruptHandler 004C  
                 ??_ADCC_IsConversionDone 004C                          __end_of_TMR0_ISR 0EFF  
                        __end_of_TMR1_ISR 07F6                           __end_of_sw1_EXT 05FD  
                         __end_of_cksum_w 0F3D                           _DATAEE_ReadByte 0F0E  
                                   _alarm 03E9                __end_of_i2c1_driver_isNACK 0E74  
                                   _cksum 06E4                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                     ??_do_I2C_SEND_RESTART 0070  
                                   _tsttc 022B                   __end_of_TMR1_Initialize 0742  
                          __pbitbssCOMMON 03E8                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0F3D                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 06C4  
                         __initialization 0051                                _i2c_status 00A0  
                            __end_of_main 022B                   __end_of_TMR2_Initialize 0F0E  
             ?_INTERRUPT_InterruptManager 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0E31                                    ??_main 005D  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
                               ??_LED_bin 004E                        ??_i2c_restartWrite 007A  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0073  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 03D5  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1021 0F2C  
                                  i1l1103 049B                                    i1l1104 04C7  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1043 0E7B  
                                  i1l1131 0E12                                    _RC4PPS 0F24  
                                  i1l1052 0E26                                    i1l1061 0E9C  
                                  i1l1142 067B                                    i1l1134 0DF1  
                                  i1l1118 05C9                                    i1l1046 0E1C  
                                  i1l1070 0E35                                    i1l1055 0E2B  
                                  i1l1064 0E83                                    i1l1128 0629  
                                  i1l1137 0003                                    i1l1049 0E21  
                                  i1l1073 0E3A                                    i1l1058 0E30  
                                  i1l1082 0655                                    i1l1090 047D  
                                  i1l1067 0E64                                    i1l1228 0F6F  
                                  i1l1076 0E3F                                    i1l1087 0461  
                                  i1l1264 0F91                                    i1l1249 0F80  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l1276 0F5E  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l4110 0F45                                    i1l4112 0F47  
                                  i1l4104 0F3D                                    i1l1288 07DE  
                                  i1l4106 0F42                                    i1l4114 0F49  
                                  i1l4116 0F4B                                    i1l4108 0F43  
                                  i1l4212 0E74                                    i1l4300 043E  
                                  i1l5110 05D4                                    i1l4214 0E77  
                                  i1l4222 0E18                                    i1l4230 0E94  
                                  i1l4302 0463                                    i1l4070 0E01  
                                  i1l5112 05D5                                    i1l5120 0EBB  
                                  i1l4160 0FF9                                    i1l4216 0E79  
                                  i1l4224 0E1A                                    i1l4232 0E96  
                                  i1l4240 0E7E                                    i1l4304 046F  
                                  i1l4320 048C                                    i1l5114 05D7  
                                  i1l5106 05CA                                    i1l5122 0EC2  
                                  i1l4170 03E1                                    i1l4162 0FFC  
                                  i1l4218 0E7A                                    i1l4226 0E1B  
                                  i1l4234 0E9B                                    i1l4242 0E82  
                                  i1l4250 0E63                                    i1l4306 047A  
                                  i1l4330 049D                                    i1l4322 0496  
                                  i1l5116 05E9                                    i1l5108 05D0  
                                  i1l4180 03FA                                    i1l4172 03E9  
                                  i1l4164 03D5                                    i1l4156 0FE9  
                                  i1l4260 062A                                    i1l4308 047C  
                                  i1l4340 04A5                                    i1l4324 0499  
                                  i1l4316 047E                                    i1l4084 0E04  
                                  i1l5118 05FB                                    i1l4190 0425  
                                  i1l4182 03FC                                    i1l4174 03EC  
                                  i1l4166 03D9                                    i1l4430 0EF0  
                                  i1l4158 0FF5                                    i1l4350 059A  
                                  i1l4238 0E7C                                    i1l4246 0E5E  
                                  i1l4254 0E31                                    i1l4262 062C  
                                  i1l4334 04A1                                    i1l4318 0488  
                                  i1l4184 040E                                    i1l4176 03F1  
                                  i1l4432 0EF2                                    i1l4440 07E9  
                                  i1l3800 0E14                                    i1l4360 05A3  
                                  i1l4248 0E60                                    i1l4256 0E34  
                                  i1l4264 0631                                    i1l4186 0420  
                                  i1l4178 03F6                                    i1l4434 0EF9  
                                  i1l4442 07F0                                    i1l3802 0E07  
                                  i1l4354 059E                                    i1l4274 0639  
                                  i1l4290 0436                                    i1l4282 042A  
                                  i1l4188 0421                                    i1l4436 07DF  
                                  i1l3900 0002                                    i1l4356 05A1  
                                  i1l4348 0597                                    i1l4268 0635  
                                  i1l3830 06B7                                    i1l4438 07E1  
                                  i1l3750 0657                                    i1l4366 05A7  
                                  i1l4294 043A                                    i1l4286 0432  
                                  i1l5360 0E40                                    u140_20 06BE  
                                  i1l3832 06B8                                    i1l3824 06A0  
                                  i1l3752 065D                                    i1l3904 0F5F  
                                  i1l3912 0F70                                    i1l3920 0F81  
                                  u140_21 06BD                                    i1l5362 0E42  
                                  i1l3834 06BE                                    i1l3826 06A9  
                                  i1l3762 0DF2                                    i1l3770 0F1E  
                                  i1l3754 066E                                    i1l3930 0F56  
                                  i1l3906 0F67                                    i1l3914 0F78  
                                  i1l3922 0F89                                    i1l3836 06C2  
                                  i1l3828 06AF                                    i1l3764 0DF5  
                                  i1l3772 0F23                                    i1l3932 0F5D  
                                  i1l3908 0F6E                                    i1l3916 0F7F  
                                  i1l3924 0F90                                    i1l3860 0E1D  
                                  i1l4660 060C                                    i1l3942 0FA7  
                                  i1l3774 0F2B                                    i1l3766 0E0B  
                                  i1l3790 0E6C                                    i1l3862 0E20  
                                  i1l4662 0612                                    i1l4654 05FD  
                                  i1l5550 0006                                    i1l3768 0EC8  
                                  i1l3928 0F4E                                    i1l3936 07C7  
                                  i1l3872 0E27                                    i1l3880 0E2F  
                                  i1l4656 0600                                    i1l4664 0E0F  
                                  i1l5560 0023                                    i1l5552 000B  
                                  i1l3778 0DEE                                    i1l3938 07DD  
                                  i1l3794 0DF8                                    i1l3786 0DFE  
                                  i1l3866 0E22                                    i1l3874 0E2A  
                                  i1l3890 0E3B                                    i1l4658 0605  
                                  i1l5570 0045                                    i1l5562 0027  
                                  i1l5554 000F                                    i1l3796 0DFB  
                                  i1l3868 0E25                                    i1l3884 0E36  
                                  i1l3892 0E3E                                    i1l5572 0049  
                                  i1l5564 002B                                    i1l5556 0017  
                                  i1l3878 0E2C                                    i1l3886 0E39  
                                  i1l5566 0036                                    i1l5558 001B  
                                  i1l3896 0DF0                                    i1l5568 003A  
                                  u151_20 0FF3                                    u135_20 065D  
                                  u151_21 0FF0                                    u135_21 065C  
                                  i1l5972 04B9                                    i1l5974 0453  
                                  i1l5976 064D                                    u320_20 002B  
                                  u320_21 002A                                    _INLVLA 0F3C  
                                  i1l5978 05BB                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    u152_24 0FF5  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u153_20 0FF9                                    u321_20 0036  
                                  u153_21 0FF8                                    u321_21 0035  
                                  u145_25 0FB6                                    u154_20 03D9  
                                  u138_20 0F23                                    u218_20 0605  
                                  u322_20 003A                                    u314_20 000B  
                                  u154_21 03D8                                    u138_21 0F22  
                                  u218_21 0604                                    u322_21 0039  
                                  u314_21 000A                                    u155_20 03E0  
                                  u139_20 06AF                                    u163_20 0431  
                                  u219_20 060C                                    u323_20 0045  
                                  u315_20 000F                                    u155_21 03DF  
                                  u139_21 06AE                                    u163_21 0430  
                                  u219_21 060B                                    u323_21 0044  
                                  u315_21 000E                                    u260_20 05FB  
                                  u156_20 03F1                                    u180_20 0EF9  
                                  u148_20 0F42                                    u164_20 047A  
                                  u324_20 0049                                    u316_20 0017  
                                  u260_21 05FA                                    u156_21 03F0  
                                  u180_21 0EF8                                    u148_21 0F41  
                                  u164_21 0479                                    u324_21 0048  
                                  u316_21 0016                                    u261_20 0EC2  
                                  u157_20 03F6                                    u181_20 07F0  
                                  u165_20 0496                                    u317_20 001B  
                                  u261_21 0EC1                                    u157_21 03F5  
                                  u181_21 07EF                                    u165_21 0495  
                                  u317_21 001A                                    u158_20 040E  
                                  u318_20 0023                                    u158_21 040D  
                                  u318_21 0022                                    u159_20 0420  
                                  u319_20 0027                                    u159_21 041F  
                                  u319_21 0026                                    _INTPPS 0E90  
                                  u258_20 05D0                                    u258_21 05CF  
                                  u259_20 05E9                                    u259_21 05E8  
                                  _OSCFRQ 0893                    ??_do_I2C_SEND_ADR_READ 0071  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0049  
                               ??_ReadI2C 004C                ??_ADCC_GetConversionResult 004E  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0FBD  
                   _i2c1_driver_getRXData 0DFB      __end_of_TMR1_DefaultInterruptHandler 0DED  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0DEC  
                            _CCPTMRS1bits 021F                                    ___bmul 0FD3  
             __end_of_do_I2C_DO_NACK_STOP 0E3B       __end_of_i2c_setDataCompleteCallback 0ED5  
             _i2c_setDataCompleteCallback 0EC8     __end_of_i2c1_driver_clearBusCollision 0E07  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 0E04  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 003D                                    _last5s 003E  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0EE2  
                          ?_do_I2C_DO_ACK 0070                                 ??_h_clock 0071  
                 __size_of_I2C_Initialize 000A                                    cksum@i 0050  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0F1D  
                               ??_sw1_EXT 0070                                 ??_cksum_w 0056  
                         _ADCC_Initialize 0FBD                                _s1_pressed 0308  
             __end_of_i2c1_driver_sendACK 0E0B                            _PMD_Initialize 0E8C  
          __end_of_do_I2C_DO_ADDRESS_NACK 0656                                _s2_pressed 03EA  
             __end_of_i2c1_driver_restart 0DF5                              ?_returnReset 0079  
                               ?_ADC_read 004E                    ??_ADCC_StartConversion 004C  
             __end_of_i2c1_driver_startRX 0DFB          __size_of_INT_SetInterruptHandler 0006  
TMR1_SetInterruptHandler@InterruptHandler 004C  TMR0_SetInterruptHandler@InterruptHandler 004C  
 INT_SetInterruptHandler@InterruptHandler 004C                   __end_of_TMR1_WriteTimer 0F4E  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 075E  
                 __end_of__initialization 0064                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0E2C                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 004C  
                 _rdBlkRegCompleteHandler 07C7                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 004E                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 0704                          _DATAEE_WriteByte 067C  
                            __pbitnvBANK0 0300                             __end_of_tsttc 037B  
                        ?_TMR2_Initialize 0070                              LED_bin@value 004C  
                          ??_INT_CallBack 0073                    __end_of_PMD_Initialize 0E94  
             __size_of_EXT_INT_Initialize 000E                         ?_h_precisionclock 0070  
                              ??_ADC_read 0050               ADCC_StartConversion@channel 004C  
                          setCallBack@idx 0074                                   ??_cksum 004E  
                      ??_h_precisionclock 0074                    _do_I2C_DO_NACK_RESTART 0E3B  
               __end_of_SYSTEM_Initialize 077A                                   ??_tsttc 004E  
                          _mssp1_clearIRQ 0E01                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
           __end_of_rd2RegCompleteHandler 0F92                        read_ring@nreg_init 0051  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0F5F  
                   _rd1RegCompleteHandler 0F70                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 003F                     _wr1RegCompleteHandler 0F5F  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 0068  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 004C  
        __end_of_TMR0_SetInterruptHandler 0E52                                ??_TMR0_ISR 0077  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                 __end_of_ADCC_Initialize 0FD3                __end_of_PWM6_LoadDutyValue 07C7  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                                _last3000ms 003B  
                        ?_DATAEE_ReadByte 004C                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 04C8                         __end_of_do_I2C_TX 047E  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LED_bin 077A                        ??_i2c1_driver_open 004C  
                                 _INT_ISR 0E40                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0FA7  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0E04                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007             __end_of_ADCC_IsConversionDone 0E6C  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0E13                      DATAEE_WriteByte@bAdd 0052  
                      _i2c1_driver_i2cISR 0028                                   _i2c_ISR 05FD  
               ??_rdBlkRegCompleteHandler 007A                                   _ReadI2C 0704  
                      _i2c1_driver_isNACK 0E6C                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                       ??_do_I2C_TX_EMPTY 007A                       ?_i2c1_driver_isNACK 0070  
                              ??_WriteI2C 004C                            _I2C_Initialize 07F6  
                                 _h_clock 0FE9                                   __ptext1 022B  
                                 __ptext2 037B                                   __ptext3 0704  
                                 __ptext4 0742                                   __ptext5 0558  
                                 __ptext6 0FD3                                   __ptext7 0511  
                                 __ptext8 0F2D                                   __ptext9 06E4  
                     __end_of_do_I2C_IDLE 0E1D                       __end_of_do_I2C_RCEN 0E65  
                                 _sw1_EXT 05CA            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0F2D                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0EA6                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0E2C                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 003C                               reset_recv@i 0056  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0597  
                ??_PIN_MANAGER_Initialize 004C                 ?_TMR1_SetInterruptHandler 004C  
                               _T2HLTbits 028F                                   _nreg_pt 0048  
                 _INT_SetInterruptHandler 0E46                                   _lum_bin 0033  
                         ?_mssp1_clearIRQ 0070                  _do_I2C_SEND_RESTART_READ 0E1D  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0E59  
                                 _running 0300                      __size_of_returnReset 0002  
                    end_of_initialization 0064                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
            __end_of_i2c1_driver_sendNACK 0E0F                    ?_rd1RegCompleteHandler 0079  
                    __end_of_INT_CallBack 0EC8                    ?_wr1RegCompleteHandler 0079  
            __end_of_i2c1_driver_resetBus 0DEE                                _reset_recv 0742  
                           push_ring@nreg 0056                 _do_I2C_SEND_RESTART_WRITE 0E22  
                  __end_of_I2C_Initialize 0800                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 0558                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0DF0                  _TMR0_SetInterruptHandler 0E4C  
         __end_of_rdBlkRegCompleteHandler 07DF                  __end_of_do_I2C_SEND_STOP 0E31  
                    __CFG_WDTCCS$HFINTOSC 0000                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                               returnStop@p 0079  
                        __CFG_FEXTOSC$OFF 0000                         __size_of_ADC_read 001A  
                __end_of_DATAEE_WriteByte 06A0              i2c_setDataCompleteCallback@p 0077  
           __size_of_do_I2C_SEND_ADR_READ 0009                             ?_update_clock 0070  
                             _do_I2C_IDLE 0E18                               _do_I2C_RCEN 0E5E  
                         ?_I2C_Initialize 0070                            __end_of___bmul 0FE9  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                  ?_OSCILLATOR_Initialize 0070                             __pbitbssBANK0 0308  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 004E  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 004C  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 0051                       _i2c_busCollisionISR 0E0F  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                        WriteI2C@data_out 004D             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 004C  
                   __end_of_i2c_setBuffer 0F2D              ?_INT_DefaultInterruptHandler 0070  
               __size_of_h_precisionclock 0055                      ?_i2c_busCollisionISR 0070  
                          ??_update_clock 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0E01  
                __size_of_TMR1_Initialize 001F                                  ??___bmul 004D  
                        ??_PMD_Initialize 004C                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                __end_of_EXT_INT_Initialize 0EF0  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0E40  
                              read_ring@i 0056                      _i2c1_driver_sendNACK 0E0B  
                       read_ring@absindex 0058                         __size_of_WriteI2C 005A  
                                ?_LED_bin 004C                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0DED                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0049                        _PWM6_LoadDutyValue 07AE  
                __size_of_TMR2_Initialize 000F                               _delta10ms_2 003A  
                               _do_I2C_RX 047E                                 _do_I2C_TX 042A  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
           __end_of_do_I2C_SEND_ADR_WRITE 0E84                       ?_PWM6_LoadDutyValue 004C  
                        _i2c_restartWrite 0DEE                 __size_of_i2c1_driver_open 000C  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0597                                  ?_ReadI2C 0070  
                   _TMR0_InterruptHandler 0026                             ??_setCallBack 0073  
                               _delta10ms 0039                     _rd2RegCompleteHandler 0F81  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 06E4  
                  _PIN_MANAGER_Initialize 04C8                     _wr2RegCompleteHandler 0F4E  
           ??_INT_DefaultInterruptHandler 0070          __end_of_TMR1_SetInterruptHandler 0E58  
                       read_ring@subindex 0053                            ??_do_I2C_RESET 0070  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 002A  
                   __end_of_do_I2C_DO_ACK 0E36                      ??_PWM6_LoadDutyValue 004E  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0EBB                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0794                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                                 _read_ring 0558  
                          __size_of_tsttc 0150                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 0E65                         ??_TMR0_Initialize 004E  
                                _LATAbits 0016                                  _LATCbits 0018  
                     __size_of_returnStop 0002                                 clear_ram0 0E58  
                                _PIE0bits 0716                                 _nreg_init 0047  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 004B  
              ??_TMR0_SetInterruptHandler 004E                                  _PIR0bits 070C  
                             _config_mode 03E8                                  _PIR3bits 070F  
                               _ring_byte 0042                                  _PIR4bits 0710  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0EF0                                  _TMR1_ISR 07DF  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 067C                          push_ring@nreg_pt 005C  
                       ??_TMR1_Initialize 004E                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 0511  
                       ?_do_I2C_SEND_STOP 0070      __size_of_INT_DefaultInterruptHandler 0001  
                           ??_returnReset 007A                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 0054                      __end_of_update_clock 06C4  
       __end_of_do_I2C_SEND_RESTART_WRITE 0E27                          __size_of_INT_ISR 0006  
                 __end_of_do_I2C_TX_EMPTY 05CA                                ?_read_ring 0050  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0052  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 004C  
                  ?_rd2RegCompleteHandler 0079                        ??_DATAEE_WriteByte 0055  
                     _do_I2C_DO_NACK_STOP 0E36                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                          _h_precisionclock 03D5  
                        ??_I2C_Initialize 004C                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 0EA6  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 005B                   ??_OSCILLATOR_Initialize 004C  
                     _i2c1_driver_sendACK 0E07           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                                  _WriteI2C 037B  
                     _i2c1_driver_restart 0DF2                  _TMR1_SetInterruptHandler 0E52  
                        __size_of_h_clock 0017                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0DF8              __end_of_do_I2C_SEND_ADR_READ 0E9D  
                              ?_push_ring 0056                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 0022                          __size_of_sw1_EXT 0033  
                        __size_of_cksum_w 0010                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 0057  
                            _mssp1_setIRQ 0DFE                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                                  __ptext10 0F0E  
                                __ptext11 067C                                  __ptext20 04C8  
                                __ptext12 075E                                  __ptext21 0EA6  
                                __ptext13 0EFF                                _T1GCONbits 020F  
                                __ptext30 0E84                                  __ptext22 0EE2  
                                __ptext14 0723                                  __ptext31 0E65  
                                __ptext23 0E46                                  __ptext15 0E52  
                                __ptext40 062A                                  __ptext32 0E9D  
                                __ptext24 0FBD                                  __ptext16 0F92  
                                __ptext41 0E3B                                  __ptext25 07AE  
                                __ptext17 0E4C                                  __ptext50 0E1D  
                                __ptext42 0E36                                  __ptext34 0E0F  
                                __ptext26 077A                                  __ptext18 0ED5  
                                __ptext51 0E18                                  __ptext43 0E31  
                                __ptext35 0E04                                  __ptext27 07F6  
                                __ptext19 0E8C                                  __ptext60 0DF8  
                                __ptext52 0E74                                  __ptext44 0E5E  
                                __ptext36 05FD                                  __ptext28 0EAF  
                                __ptext61 07C7                                  __ptext53 0597  
                                __ptext45 0E7C                                  __ptext37 0E01  
                                __ptext29 0794                                  __ptext70 0656  
                                __ptext62 0F81                                  __ptext54 0DFE  
                                __ptext46 0E94                                  __ptext38 047E  
                                __ptext71 0F1D                                  __ptext63 0F70  
                                __ptext55 0E6C                                  __ptext47 0E2C  
                                __ptext39 042A                                  __ptext80 0EF0  
                                __ptext72 0DF5                                  __ptext64 0F5F  
                                __ptext56 0E13                                  __ptext48 0E27  
                                __ptext81 0DEB                                  __ptext73 0DF2  
                                __ptext65 0002                                  __ptext57 0DFB  
                                __ptext49 0E22                                  __ptext82 03D5  
                                __ptext74 0E07                                  __ptext66 0DF0  
                                __ptext58 0E0B                                  __ptext83 0FA7  
                                __ptext75 07DF                                  __ptext67 0DEE  
                                __ptext59 0DED                                  __ptext84 0E40  
                                __ptext76 0DEC                                  __ptext68 0F4E  
                                __ptext85 0EBB                                  __ptext77 0FE9  
                                __ptext69 0EC8                                  __ptext86 0DEA  
                                __ptext78 06A0                                  __ptext87 05CA  
                                __ptext79 0F3D                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0E7C  
             DATAEE_WriteByte@GIEBitValue 0055                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                          _i2c1_driver_open 0EAF  
                       ??_PWM6_Initialize 004C                          _i2c1_driver_stop 0DF5  
                           __size_of_main 01C3                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 0DFE  
    __end_of_TMR0_DefaultInterruptHandler 0DEC     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0DEB                         ??_DATAEE_ReadByte 004E  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0656  
                            ??_reset_recv 0056                                tsttc@value 004F  
            __end_of_ADCC_StartConversion 0E8C                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 004F                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 004F          __end_of_do_I2C_SEND_RESTART_READ 0E22  
                            ??_returnStop 007A                  __end_of_i2c_restartWrite 0DF0  
                   ??_do_I2C_DO_NACK_STOP 0070                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 002C                        __end_of_reset_recv 075E  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 0EE2  
                        ?_do_I2C_TX_EMPTY 0070                               _select_mode 0038  
                             ??_read_ring 0054                    _do_I2C_DO_ADDRESS_NACK 062A  
                                intlevel1 0000                     ??_i2c1_driver_restart 0070  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0DF2             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 004C  
                _ADCC_GetConversionResult 0E9D                             __pstringtext1 06C4  
                   __size_of_update_clock 0024                      ??_EXT_INT_Initialize 004E  
                          read_ring@index 0052                               ??_push_ring 0059  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0F92                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 004C  
                           read_ring@nreg 0050            __end_of_PIN_MANAGER_Initialize 0511  
                       ??_ADCC_Initialize 004C               __end_of_i2c_busCollisionISR 0E13  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0F81  
                      push_ring@nreg_init 0057            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0F70                     _do_I2C_SEND_ADR_WRITE 0E7C  
                      push_ring@ring_byte 0058                      _do_I2C_SEND_ADR_READ 0E94  
                         _TMR1_Initialize 0723  
