

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 20:45:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	dabs	1,0x7E,2
   124  0000                     
   125                           ; Version 2.10
   126                           ; Generated 31/07/2019 GMT
   127                           ; 
   128                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC16F18875 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001C                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  008C                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0110                     	;# 
   219  0110                     	;# 
   220  0111                     	;# 
   221  0112                     	;# 
   222  0112                     	;# 
   223  0113                     	;# 
   224  0114                     	;# 
   225  0114                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0119                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  011A                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011C                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011E                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  018F                     	;# 
   259  0190                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0196                     	;# 
   263  0197                     	;# 
   264  0198                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  020C                     	;# 
   270  020C                     	;# 
   271  020D                     	;# 
   272  020E                     	;# 
   273  020F                     	;# 
   274  020F                     	;# 
   275  0210                     	;# 
   276  0210                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0218                     	;# 
   290  0218                     	;# 
   291  0219                     	;# 
   292  021A                     	;# 
   293  021B                     	;# 
   294  021B                     	;# 
   295  021C                     	;# 
   296  021C                     	;# 
   297  021D                     	;# 
   298  021D                     	;# 
   299  021E                     	;# 
   300  021F                     	;# 
   301  028C                     	;# 
   302  028C                     	;# 
   303  028D                     	;# 
   304  028D                     	;# 
   305  028E                     	;# 
   306  028F                     	;# 
   307  0290                     	;# 
   308  0290                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0292                     	;# 
   312  0293                     	;# 
   313  0293                     	;# 
   314  0294                     	;# 
   315  0295                     	;# 
   316  0296                     	;# 
   317  0296                     	;# 
   318  0297                     	;# 
   319  0298                     	;# 
   320  0298                     	;# 
   321  0299                     	;# 
   322  0299                     	;# 
   323  029A                     	;# 
   324  029B                     	;# 
   325  029C                     	;# 
   326  029C                     	;# 
   327  029D                     	;# 
   328  030C                     	;# 
   329  030C                     	;# 
   330  030D                     	;# 
   331  030E                     	;# 
   332  030F                     	;# 
   333  0310                     	;# 
   334  0310                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0314                     	;# 
   339  0314                     	;# 
   340  0315                     	;# 
   341  0316                     	;# 
   342  0317                     	;# 
   343  0318                     	;# 
   344  0318                     	;# 
   345  0319                     	;# 
   346  031A                     	;# 
   347  031B                     	;# 
   348  031C                     	;# 
   349  031C                     	;# 
   350  031D                     	;# 
   351  031E                     	;# 
   352  031F                     	;# 
   353  038C                     	;# 
   354  038C                     	;# 
   355  038D                     	;# 
   356  038E                     	;# 
   357  0390                     	;# 
   358  0390                     	;# 
   359  0391                     	;# 
   360  0392                     	;# 
   361  040C                     	;# 
   362  040D                     	;# 
   363  040E                     	;# 
   364  040F                     	;# 
   365  0410                     	;# 
   366  0411                     	;# 
   367  0416                     	;# 
   368  0416                     	;# 
   369  0417                     	;# 
   370  0418                     	;# 
   371  0418                     	;# 
   372  0419                     	;# 
   373  041A                     	;# 
   374  041A                     	;# 
   375  041B                     	;# 
   376  041C                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  041F                     	;# 
   381  048C                     	;# 
   382  048C                     	;# 
   383  048D                     	;# 
   384  048E                     	;# 
   385  048F                     	;# 
   386  048F                     	;# 
   387  0490                     	;# 
   388  0491                     	;# 
   389  0492                     	;# 
   390  0492                     	;# 
   391  0493                     	;# 
   392  0494                     	;# 
   393  0495                     	;# 
   394  0495                     	;# 
   395  0496                     	;# 
   396  0497                     	;# 
   397  0498                     	;# 
   398  0499                     	;# 
   399  049A                     	;# 
   400  049B                     	;# 
   401  049C                     	;# 
   402  049D                     	;# 
   403  050C                     	;# 
   404  050C                     	;# 
   405  050D                     	;# 
   406  050E                     	;# 
   407  050F                     	;# 
   408  050F                     	;# 
   409  0510                     	;# 
   410  0511                     	;# 
   411  0512                     	;# 
   412  0512                     	;# 
   413  0513                     	;# 
   414  0514                     	;# 
   415  0515                     	;# 
   416  0515                     	;# 
   417  0516                     	;# 
   418  0517                     	;# 
   419  0518                     	;# 
   420  0519                     	;# 
   421  051A                     	;# 
   422  051B                     	;# 
   423  051C                     	;# 
   424  051D                     	;# 
   425  058C                     	;# 
   426  058C                     	;# 
   427  058D                     	;# 
   428  058E                     	;# 
   429  058F                     	;# 
   430  058F                     	;# 
   431  0590                     	;# 
   432  0591                     	;# 
   433  0592                     	;# 
   434  0593                     	;# 
   435  060C                     	;# 
   436  060D                     	;# 
   437  060E                     	;# 
   438  060F                     	;# 
   439  0610                     	;# 
   440  0611                     	;# 
   441  0612                     	;# 
   442  0613                     	;# 
   443  0614                     	;# 
   444  0616                     	;# 
   445  0617                     	;# 
   446  0618                     	;# 
   447  0619                     	;# 
   448  061A                     	;# 
   449  061B                     	;# 
   450  061C                     	;# 
   451  061D                     	;# 
   452  061E                     	;# 
   453  068C                     	;# 
   454  068D                     	;# 
   455  068E                     	;# 
   456  068F                     	;# 
   457  0690                     	;# 
   458  0691                     	;# 
   459  0692                     	;# 
   460  0693                     	;# 
   461  0694                     	;# 
   462  070C                     	;# 
   463  070D                     	;# 
   464  070E                     	;# 
   465  070F                     	;# 
   466  0710                     	;# 
   467  0711                     	;# 
   468  0712                     	;# 
   469  0713                     	;# 
   470  0714                     	;# 
   471  0716                     	;# 
   472  0717                     	;# 
   473  0718                     	;# 
   474  0719                     	;# 
   475  071A                     	;# 
   476  071B                     	;# 
   477  071C                     	;# 
   478  071D                     	;# 
   479  071E                     	;# 
   480  0796                     	;# 
   481  0797                     	;# 
   482  0798                     	;# 
   483  0799                     	;# 
   484  079A                     	;# 
   485  079B                     	;# 
   486  080C                     	;# 
   487  080D                     	;# 
   488  080E                     	;# 
   489  080F                     	;# 
   490  0810                     	;# 
   491  0811                     	;# 
   492  0812                     	;# 
   493  0813                     	;# 
   494  0814                     	;# 
   495  081A                     	;# 
   496  081B                     	;# 
   497  081C                     	;# 
   498  081D                     	;# 
   499  081E                     	;# 
   500  081F                     	;# 
   501  088C                     	;# 
   502  088D                     	;# 
   503  088E                     	;# 
   504  088F                     	;# 
   505  0890                     	;# 
   506  0891                     	;# 
   507  0892                     	;# 
   508  0893                     	;# 
   509  0895                     	;# 
   510  0896                     	;# 
   511  0897                     	;# 
   512  0898                     	;# 
   513  0899                     	;# 
   514  089A                     	;# 
   515  089B                     	;# 
   516  090C                     	;# 
   517  090E                     	;# 
   518  090F                     	;# 
   519  091F                     	;# 
   520  091F                     	;# 
   521  098F                     	;# 
   522  098F                     	;# 
   523  0990                     	;# 
   524  0991                     	;# 
   525  0992                     	;# 
   526  0993                     	;# 
   527  0994                     	;# 
   528  0995                     	;# 
   529  0996                     	;# 
   530  0997                     	;# 
   531  0E0F                     	;# 
   532  0E10                     	;# 
   533  0E11                     	;# 
   534  0E12                     	;# 
   535  0E13                     	;# 
   536  0E14                     	;# 
   537  0E15                     	;# 
   538  0E16                     	;# 
   539  0E17                     	;# 
   540  0E18                     	;# 
   541  0E19                     	;# 
   542  0E1A                     	;# 
   543  0E1B                     	;# 
   544  0E1C                     	;# 
   545  0E1D                     	;# 
   546  0E1E                     	;# 
   547  0E1F                     	;# 
   548  0E20                     	;# 
   549  0E21                     	;# 
   550  0E22                     	;# 
   551  0E23                     	;# 
   552  0E24                     	;# 
   553  0E25                     	;# 
   554  0E26                     	;# 
   555  0E27                     	;# 
   556  0E28                     	;# 
   557  0E29                     	;# 
   558  0E2A                     	;# 
   559  0E2B                     	;# 
   560  0E2C                     	;# 
   561  0E2D                     	;# 
   562  0E2E                     	;# 
   563  0E2F                     	;# 
   564  0E30                     	;# 
   565  0E31                     	;# 
   566  0E32                     	;# 
   567  0E33                     	;# 
   568  0E34                     	;# 
   569  0E35                     	;# 
   570  0E36                     	;# 
   571  0E37                     	;# 
   572  0E8F                     	;# 
   573  0E90                     	;# 
   574  0E91                     	;# 
   575  0E92                     	;# 
   576  0E93                     	;# 
   577  0E94                     	;# 
   578  0E95                     	;# 
   579  0E96                     	;# 
   580  0E97                     	;# 
   581  0E9C                     	;# 
   582  0E9D                     	;# 
   583  0E9E                     	;# 
   584  0EA1                     	;# 
   585  0EA2                     	;# 
   586  0EA3                     	;# 
   587  0EA4                     	;# 
   588  0EA5                     	;# 
   589  0EA9                     	;# 
   590  0EAA                     	;# 
   591  0EAB                     	;# 
   592  0EAC                     	;# 
   593  0EB1                     	;# 
   594  0EB2                     	;# 
   595  0EB3                     	;# 
   596  0EB8                     	;# 
   597  0EB9                     	;# 
   598  0EBA                     	;# 
   599  0EBB                     	;# 
   600  0EBC                     	;# 
   601  0EBD                     	;# 
   602  0EBE                     	;# 
   603  0EC3                     	;# 
   604  0EC5                     	;# 
   605  0EC6                     	;# 
   606  0EC7                     	;# 
   607  0EC8                     	;# 
   608  0EC9                     	;# 
   609  0ECA                     	;# 
   610  0ECB                     	;# 
   611  0ECC                     	;# 
   612  0F10                     	;# 
   613  0F11                     	;# 
   614  0F12                     	;# 
   615  0F13                     	;# 
   616  0F14                     	;# 
   617  0F15                     	;# 
   618  0F16                     	;# 
   619  0F17                     	;# 
   620  0F18                     	;# 
   621  0F19                     	;# 
   622  0F1A                     	;# 
   623  0F1B                     	;# 
   624  0F1C                     	;# 
   625  0F1D                     	;# 
   626  0F1E                     	;# 
   627  0F1F                     	;# 
   628  0F20                     	;# 
   629  0F21                     	;# 
   630  0F22                     	;# 
   631  0F23                     	;# 
   632  0F24                     	;# 
   633  0F25                     	;# 
   634  0F26                     	;# 
   635  0F27                     	;# 
   636  0F28                     	;# 
   637  0F29                     	;# 
   638  0F2A                     	;# 
   639  0F2B                     	;# 
   640  0F2C                     	;# 
   641  0F2D                     	;# 
   642  0F2E                     	;# 
   643  0F2F                     	;# 
   644  0F30                     	;# 
   645  0F31                     	;# 
   646  0F32                     	;# 
   647  0F38                     	;# 
   648  0F39                     	;# 
   649  0F3A                     	;# 
   650  0F3B                     	;# 
   651  0F3C                     	;# 
   652  0F3D                     	;# 
   653  0F3E                     	;# 
   654  0F3F                     	;# 
   655  0F40                     	;# 
   656  0F41                     	;# 
   657  0F43                     	;# 
   658  0F44                     	;# 
   659  0F45                     	;# 
   660  0F46                     	;# 
   661  0F47                     	;# 
   662  0F48                     	;# 
   663  0F49                     	;# 
   664  0F4A                     	;# 
   665  0F4B                     	;# 
   666  0F4C                     	;# 
   667  0F4E                     	;# 
   668  0F4F                     	;# 
   669  0F50                     	;# 
   670  0F51                     	;# 
   671  0F52                     	;# 
   672  0F53                     	;# 
   673  0F54                     	;# 
   674  0F55                     	;# 
   675  0F56                     	;# 
   676  0F57                     	;# 
   677  0F59                     	;# 
   678  0F5A                     	;# 
   679  0F5B                     	;# 
   680  0F5C                     	;# 
   681  0F5D                     	;# 
   682  0F61                     	;# 
   683  0F62                     	;# 
   684  0F64                     	;# 
   685  0F65                     	;# 
   686  0F66                     	;# 
   687  0F67                     	;# 
   688  0F68                     	;# 
   689  0F69                     	;# 
   690  0F6A                     	;# 
   691  0F6B                     	;# 
   692  0F6C                     	;# 
   693  0F6D                     	;# 
   694  0FE4                     	;# 
   695  0FE5                     	;# 
   696  0FE6                     	;# 
   697  0FE7                     	;# 
   698  0FE8                     	;# 
   699  0FE9                     	;# 
   700  0FEA                     	;# 
   701  0FEB                     	;# 
   702  0FED                     	;# 
   703  0FEE                     	;# 
   704  0FEF                     	;# 
   705  0000                     	;# 
   706  0001                     	;# 
   707  0002                     	;# 
   708  0003                     	;# 
   709  0004                     	;# 
   710  0005                     	;# 
   711  0006                     	;# 
   712  0007                     	;# 
   713  0008                     	;# 
   714  0009                     	;# 
   715  000A                     	;# 
   716  000B                     	;# 
   717  000C                     	;# 
   718  000D                     	;# 
   719  000E                     	;# 
   720  000F                     	;# 
   721  0010                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0014                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001C                     	;# 
   733  001C                     	;# 
   734  001D                     	;# 
   735  001D                     	;# 
   736  001E                     	;# 
   737  001F                     	;# 
   738  008C                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  008E                     	;# 
   742  008E                     	;# 
   743  008F                     	;# 
   744  0090                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0093                     	;# 
   748  0094                     	;# 
   749  0095                     	;# 
   750  0096                     	;# 
   751  0097                     	;# 
   752  0098                     	;# 
   753  0099                     	;# 
   754  009A                     	;# 
   755  009B                     	;# 
   756  009C                     	;# 
   757  009D                     	;# 
   758  009E                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010E                     	;# 
   763  010F                     	;# 
   764  0110                     	;# 
   765  0110                     	;# 
   766  0111                     	;# 
   767  0112                     	;# 
   768  0112                     	;# 
   769  0113                     	;# 
   770  0114                     	;# 
   771  0114                     	;# 
   772  0115                     	;# 
   773  0116                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  0119                     	;# 
   777  0119                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011A                     	;# 
   781  011A                     	;# 
   782  011B                     	;# 
   783  011B                     	;# 
   784  011B                     	;# 
   785  011B                     	;# 
   786  011B                     	;# 
   787  011C                     	;# 
   788  011C                     	;# 
   789  011C                     	;# 
   790  011D                     	;# 
   791  011D                     	;# 
   792  011D                     	;# 
   793  011E                     	;# 
   794  011E                     	;# 
   795  011E                     	;# 
   796  011F                     	;# 
   797  011F                     	;# 
   798  011F                     	;# 
   799  011F                     	;# 
   800  011F                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  018E                     	;# 
   804  018F                     	;# 
   805  0190                     	;# 
   806  0191                     	;# 
   807  0192                     	;# 
   808  0196                     	;# 
   809  0197                     	;# 
   810  0198                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019C                     	;# 
   815  020C                     	;# 
   816  020C                     	;# 
   817  020D                     	;# 
   818  020E                     	;# 
   819  020F                     	;# 
   820  020F                     	;# 
   821  0210                     	;# 
   822  0210                     	;# 
   823  0211                     	;# 
   824  0211                     	;# 
   825  0212                     	;# 
   826  0212                     	;# 
   827  0213                     	;# 
   828  0214                     	;# 
   829  0215                     	;# 
   830  0215                     	;# 
   831  0216                     	;# 
   832  0216                     	;# 
   833  0217                     	;# 
   834  0217                     	;# 
   835  0218                     	;# 
   836  0218                     	;# 
   837  0219                     	;# 
   838  021A                     	;# 
   839  021B                     	;# 
   840  021B                     	;# 
   841  021C                     	;# 
   842  021C                     	;# 
   843  021D                     	;# 
   844  021D                     	;# 
   845  021E                     	;# 
   846  021F                     	;# 
   847  028C                     	;# 
   848  028C                     	;# 
   849  028D                     	;# 
   850  028D                     	;# 
   851  028E                     	;# 
   852  028F                     	;# 
   853  0290                     	;# 
   854  0290                     	;# 
   855  0291                     	;# 
   856  0292                     	;# 
   857  0292                     	;# 
   858  0293                     	;# 
   859  0293                     	;# 
   860  0294                     	;# 
   861  0295                     	;# 
   862  0296                     	;# 
   863  0296                     	;# 
   864  0297                     	;# 
   865  0298                     	;# 
   866  0298                     	;# 
   867  0299                     	;# 
   868  0299                     	;# 
   869  029A                     	;# 
   870  029B                     	;# 
   871  029C                     	;# 
   872  029C                     	;# 
   873  029D                     	;# 
   874  030C                     	;# 
   875  030C                     	;# 
   876  030D                     	;# 
   877  030E                     	;# 
   878  030F                     	;# 
   879  0310                     	;# 
   880  0310                     	;# 
   881  0311                     	;# 
   882  0312                     	;# 
   883  0313                     	;# 
   884  0314                     	;# 
   885  0314                     	;# 
   886  0315                     	;# 
   887  0316                     	;# 
   888  0317                     	;# 
   889  0318                     	;# 
   890  0318                     	;# 
   891  0319                     	;# 
   892  031A                     	;# 
   893  031B                     	;# 
   894  031C                     	;# 
   895  031C                     	;# 
   896  031D                     	;# 
   897  031E                     	;# 
   898  031F                     	;# 
   899  038C                     	;# 
   900  038C                     	;# 
   901  038D                     	;# 
   902  038E                     	;# 
   903  0390                     	;# 
   904  0390                     	;# 
   905  0391                     	;# 
   906  0392                     	;# 
   907  040C                     	;# 
   908  040D                     	;# 
   909  040E                     	;# 
   910  040F                     	;# 
   911  0410                     	;# 
   912  0411                     	;# 
   913  0416                     	;# 
   914  0416                     	;# 
   915  0417                     	;# 
   916  0418                     	;# 
   917  0418                     	;# 
   918  0419                     	;# 
   919  041A                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041C                     	;# 
   924  041D                     	;# 
   925  041E                     	;# 
   926  041F                     	;# 
   927  048C                     	;# 
   928  048C                     	;# 
   929  048D                     	;# 
   930  048E                     	;# 
   931  048F                     	;# 
   932  048F                     	;# 
   933  0490                     	;# 
   934  0491                     	;# 
   935  0492                     	;# 
   936  0492                     	;# 
   937  0493                     	;# 
   938  0494                     	;# 
   939  0495                     	;# 
   940  0495                     	;# 
   941  0496                     	;# 
   942  0497                     	;# 
   943  0498                     	;# 
   944  0499                     	;# 
   945  049A                     	;# 
   946  049B                     	;# 
   947  049C                     	;# 
   948  049D                     	;# 
   949  050C                     	;# 
   950  050C                     	;# 
   951  050D                     	;# 
   952  050E                     	;# 
   953  050F                     	;# 
   954  050F                     	;# 
   955  0510                     	;# 
   956  0511                     	;# 
   957  0512                     	;# 
   958  0512                     	;# 
   959  0513                     	;# 
   960  0514                     	;# 
   961  0515                     	;# 
   962  0515                     	;# 
   963  0516                     	;# 
   964  0517                     	;# 
   965  0518                     	;# 
   966  0519                     	;# 
   967  051A                     	;# 
   968  051B                     	;# 
   969  051C                     	;# 
   970  051D                     	;# 
   971  058C                     	;# 
   972  058C                     	;# 
   973  058D                     	;# 
   974  058E                     	;# 
   975  058F                     	;# 
   976  058F                     	;# 
   977  0590                     	;# 
   978  0591                     	;# 
   979  0592                     	;# 
   980  0593                     	;# 
   981  060C                     	;# 
   982  060D                     	;# 
   983  060E                     	;# 
   984  060F                     	;# 
   985  0610                     	;# 
   986  0611                     	;# 
   987  0612                     	;# 
   988  0613                     	;# 
   989  0614                     	;# 
   990  0616                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  061A                     	;# 
   995  061B                     	;# 
   996  061C                     	;# 
   997  061D                     	;# 
   998  061E                     	;# 
   999  068C                     	;# 
  1000  068D                     	;# 
  1001  068E                     	;# 
  1002  068F                     	;# 
  1003  0690                     	;# 
  1004  0691                     	;# 
  1005  0692                     	;# 
  1006  0693                     	;# 
  1007  0694                     	;# 
  1008  070C                     	;# 
  1009  070D                     	;# 
  1010  070E                     	;# 
  1011  070F                     	;# 
  1012  0710                     	;# 
  1013  0711                     	;# 
  1014  0712                     	;# 
  1015  0713                     	;# 
  1016  0714                     	;# 
  1017  0716                     	;# 
  1018  0717                     	;# 
  1019  0718                     	;# 
  1020  0719                     	;# 
  1021  071A                     	;# 
  1022  071B                     	;# 
  1023  071C                     	;# 
  1024  071D                     	;# 
  1025  071E                     	;# 
  1026  0796                     	;# 
  1027  0797                     	;# 
  1028  0798                     	;# 
  1029  0799                     	;# 
  1030  079A                     	;# 
  1031  079B                     	;# 
  1032  080C                     	;# 
  1033  080D                     	;# 
  1034  080E                     	;# 
  1035  080F                     	;# 
  1036  0810                     	;# 
  1037  0811                     	;# 
  1038  0812                     	;# 
  1039  0813                     	;# 
  1040  0814                     	;# 
  1041  081A                     	;# 
  1042  081B                     	;# 
  1043  081C                     	;# 
  1044  081D                     	;# 
  1045  081E                     	;# 
  1046  081F                     	;# 
  1047  088C                     	;# 
  1048  088D                     	;# 
  1049  088E                     	;# 
  1050  088F                     	;# 
  1051  0890                     	;# 
  1052  0891                     	;# 
  1053  0892                     	;# 
  1054  0893                     	;# 
  1055  0895                     	;# 
  1056  0896                     	;# 
  1057  0897                     	;# 
  1058  0898                     	;# 
  1059  0899                     	;# 
  1060  089A                     	;# 
  1061  089B                     	;# 
  1062  090C                     	;# 
  1063  090E                     	;# 
  1064  090F                     	;# 
  1065  091F                     	;# 
  1066  091F                     	;# 
  1067  098F                     	;# 
  1068  098F                     	;# 
  1069  0990                     	;# 
  1070  0991                     	;# 
  1071  0992                     	;# 
  1072  0993                     	;# 
  1073  0994                     	;# 
  1074  0995                     	;# 
  1075  0996                     	;# 
  1076  0997                     	;# 
  1077  0E0F                     	;# 
  1078  0E10                     	;# 
  1079  0E11                     	;# 
  1080  0E12                     	;# 
  1081  0E13                     	;# 
  1082  0E14                     	;# 
  1083  0E15                     	;# 
  1084  0E16                     	;# 
  1085  0E17                     	;# 
  1086  0E18                     	;# 
  1087  0E19                     	;# 
  1088  0E1A                     	;# 
  1089  0E1B                     	;# 
  1090  0E1C                     	;# 
  1091  0E1D                     	;# 
  1092  0E1E                     	;# 
  1093  0E1F                     	;# 
  1094  0E20                     	;# 
  1095  0E21                     	;# 
  1096  0E22                     	;# 
  1097  0E23                     	;# 
  1098  0E24                     	;# 
  1099  0E25                     	;# 
  1100  0E26                     	;# 
  1101  0E27                     	;# 
  1102  0E28                     	;# 
  1103  0E29                     	;# 
  1104  0E2A                     	;# 
  1105  0E2B                     	;# 
  1106  0E2C                     	;# 
  1107  0E2D                     	;# 
  1108  0E2E                     	;# 
  1109  0E2F                     	;# 
  1110  0E30                     	;# 
  1111  0E31                     	;# 
  1112  0E32                     	;# 
  1113  0E33                     	;# 
  1114  0E34                     	;# 
  1115  0E35                     	;# 
  1116  0E36                     	;# 
  1117  0E37                     	;# 
  1118  0E8F                     	;# 
  1119  0E90                     	;# 
  1120  0E91                     	;# 
  1121  0E92                     	;# 
  1122  0E93                     	;# 
  1123  0E94                     	;# 
  1124  0E95                     	;# 
  1125  0E96                     	;# 
  1126  0E97                     	;# 
  1127  0E9C                     	;# 
  1128  0E9D                     	;# 
  1129  0E9E                     	;# 
  1130  0EA1                     	;# 
  1131  0EA2                     	;# 
  1132  0EA3                     	;# 
  1133  0EA4                     	;# 
  1134  0EA5                     	;# 
  1135  0EA9                     	;# 
  1136  0EAA                     	;# 
  1137  0EAB                     	;# 
  1138  0EAC                     	;# 
  1139  0EB1                     	;# 
  1140  0EB2                     	;# 
  1141  0EB3                     	;# 
  1142  0EB8                     	;# 
  1143  0EB9                     	;# 
  1144  0EBA                     	;# 
  1145  0EBB                     	;# 
  1146  0EBC                     	;# 
  1147  0EBD                     	;# 
  1148  0EBE                     	;# 
  1149  0EC3                     	;# 
  1150  0EC5                     	;# 
  1151  0EC6                     	;# 
  1152  0EC7                     	;# 
  1153  0EC8                     	;# 
  1154  0EC9                     	;# 
  1155  0ECA                     	;# 
  1156  0ECB                     	;# 
  1157  0ECC                     	;# 
  1158  0F10                     	;# 
  1159  0F11                     	;# 
  1160  0F12                     	;# 
  1161  0F13                     	;# 
  1162  0F14                     	;# 
  1163  0F15                     	;# 
  1164  0F16                     	;# 
  1165  0F17                     	;# 
  1166  0F18                     	;# 
  1167  0F19                     	;# 
  1168  0F1A                     	;# 
  1169  0F1B                     	;# 
  1170  0F1C                     	;# 
  1171  0F1D                     	;# 
  1172  0F1E                     	;# 
  1173  0F1F                     	;# 
  1174  0F20                     	;# 
  1175  0F21                     	;# 
  1176  0F22                     	;# 
  1177  0F23                     	;# 
  1178  0F24                     	;# 
  1179  0F25                     	;# 
  1180  0F26                     	;# 
  1181  0F27                     	;# 
  1182  0F28                     	;# 
  1183  0F29                     	;# 
  1184  0F2A                     	;# 
  1185  0F2B                     	;# 
  1186  0F2C                     	;# 
  1187  0F2D                     	;# 
  1188  0F2E                     	;# 
  1189  0F2F                     	;# 
  1190  0F30                     	;# 
  1191  0F31                     	;# 
  1192  0F32                     	;# 
  1193  0F38                     	;# 
  1194  0F39                     	;# 
  1195  0F3A                     	;# 
  1196  0F3B                     	;# 
  1197  0F3C                     	;# 
  1198  0F3D                     	;# 
  1199  0F3E                     	;# 
  1200  0F3F                     	;# 
  1201  0F40                     	;# 
  1202  0F41                     	;# 
  1203  0F43                     	;# 
  1204  0F44                     	;# 
  1205  0F45                     	;# 
  1206  0F46                     	;# 
  1207  0F47                     	;# 
  1208  0F48                     	;# 
  1209  0F49                     	;# 
  1210  0F4A                     	;# 
  1211  0F4B                     	;# 
  1212  0F4C                     	;# 
  1213  0F4E                     	;# 
  1214  0F4F                     	;# 
  1215  0F50                     	;# 
  1216  0F51                     	;# 
  1217  0F52                     	;# 
  1218  0F53                     	;# 
  1219  0F54                     	;# 
  1220  0F55                     	;# 
  1221  0F56                     	;# 
  1222  0F57                     	;# 
  1223  0F59                     	;# 
  1224  0F5A                     	;# 
  1225  0F5B                     	;# 
  1226  0F5C                     	;# 
  1227  0F5D                     	;# 
  1228  0F61                     	;# 
  1229  0F62                     	;# 
  1230  0F64                     	;# 
  1231  0F65                     	;# 
  1232  0F66                     	;# 
  1233  0F67                     	;# 
  1234  0F68                     	;# 
  1235  0F69                     	;# 
  1236  0F6A                     	;# 
  1237  0F6B                     	;# 
  1238  0F6C                     	;# 
  1239  0F6D                     	;# 
  1240  0FE4                     	;# 
  1241  0FE5                     	;# 
  1242  0FE6                     	;# 
  1243  0FE7                     	;# 
  1244  0FE8                     	;# 
  1245  0FE9                     	;# 
  1246  0FEA                     	;# 
  1247  0FEB                     	;# 
  1248  0FED                     	;# 
  1249  0FEE                     	;# 
  1250  0FEF                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0008                     	;# 
  1260  0009                     	;# 
  1261  000A                     	;# 
  1262  000B                     	;# 
  1263  000C                     	;# 
  1264  000D                     	;# 
  1265  000E                     	;# 
  1266  000F                     	;# 
  1267  0010                     	;# 
  1268  0011                     	;# 
  1269  0012                     	;# 
  1270  0013                     	;# 
  1271  0014                     	;# 
  1272  0015                     	;# 
  1273  0016                     	;# 
  1274  0017                     	;# 
  1275  0018                     	;# 
  1276  0019                     	;# 
  1277  001A                     	;# 
  1278  001C                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001D                     	;# 
  1282  001E                     	;# 
  1283  001F                     	;# 
  1284  008C                     	;# 
  1285  008C                     	;# 
  1286  008D                     	;# 
  1287  008E                     	;# 
  1288  008E                     	;# 
  1289  008F                     	;# 
  1290  0090                     	;# 
  1291  0090                     	;# 
  1292  0091                     	;# 
  1293  0093                     	;# 
  1294  0094                     	;# 
  1295  0095                     	;# 
  1296  0096                     	;# 
  1297  0097                     	;# 
  1298  0098                     	;# 
  1299  0099                     	;# 
  1300  009A                     	;# 
  1301  009B                     	;# 
  1302  009C                     	;# 
  1303  009D                     	;# 
  1304  009E                     	;# 
  1305  010C                     	;# 
  1306  010D                     	;# 
  1307  010E                     	;# 
  1308  010E                     	;# 
  1309  010F                     	;# 
  1310  0110                     	;# 
  1311  0110                     	;# 
  1312  0111                     	;# 
  1313  0112                     	;# 
  1314  0112                     	;# 
  1315  0113                     	;# 
  1316  0114                     	;# 
  1317  0114                     	;# 
  1318  0115                     	;# 
  1319  0116                     	;# 
  1320  0116                     	;# 
  1321  0117                     	;# 
  1322  0119                     	;# 
  1323  0119                     	;# 
  1324  0119                     	;# 
  1325  011A                     	;# 
  1326  011A                     	;# 
  1327  011A                     	;# 
  1328  011B                     	;# 
  1329  011B                     	;# 
  1330  011B                     	;# 
  1331  011B                     	;# 
  1332  011B                     	;# 
  1333  011C                     	;# 
  1334  011C                     	;# 
  1335  011C                     	;# 
  1336  011D                     	;# 
  1337  011D                     	;# 
  1338  011D                     	;# 
  1339  011E                     	;# 
  1340  011E                     	;# 
  1341  011E                     	;# 
  1342  011F                     	;# 
  1343  011F                     	;# 
  1344  011F                     	;# 
  1345  011F                     	;# 
  1346  011F                     	;# 
  1347  018C                     	;# 
  1348  018D                     	;# 
  1349  018E                     	;# 
  1350  018F                     	;# 
  1351  0190                     	;# 
  1352  0191                     	;# 
  1353  0192                     	;# 
  1354  0196                     	;# 
  1355  0197                     	;# 
  1356  0198                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019B                     	;# 
  1360  019C                     	;# 
  1361  020C                     	;# 
  1362  020C                     	;# 
  1363  020D                     	;# 
  1364  020E                     	;# 
  1365  020F                     	;# 
  1366  020F                     	;# 
  1367  0210                     	;# 
  1368  0210                     	;# 
  1369  0211                     	;# 
  1370  0211                     	;# 
  1371  0212                     	;# 
  1372  0212                     	;# 
  1373  0213                     	;# 
  1374  0214                     	;# 
  1375  0215                     	;# 
  1376  0215                     	;# 
  1377  0216                     	;# 
  1378  0216                     	;# 
  1379  0217                     	;# 
  1380  0217                     	;# 
  1381  0218                     	;# 
  1382  0218                     	;# 
  1383  0219                     	;# 
  1384  021A                     	;# 
  1385  021B                     	;# 
  1386  021B                     	;# 
  1387  021C                     	;# 
  1388  021C                     	;# 
  1389  021D                     	;# 
  1390  021D                     	;# 
  1391  021E                     	;# 
  1392  021F                     	;# 
  1393  028C                     	;# 
  1394  028C                     	;# 
  1395  028D                     	;# 
  1396  028D                     	;# 
  1397  028E                     	;# 
  1398  028F                     	;# 
  1399  0290                     	;# 
  1400  0290                     	;# 
  1401  0291                     	;# 
  1402  0292                     	;# 
  1403  0292                     	;# 
  1404  0293                     	;# 
  1405  0293                     	;# 
  1406  0294                     	;# 
  1407  0295                     	;# 
  1408  0296                     	;# 
  1409  0296                     	;# 
  1410  0297                     	;# 
  1411  0298                     	;# 
  1412  0298                     	;# 
  1413  0299                     	;# 
  1414  0299                     	;# 
  1415  029A                     	;# 
  1416  029B                     	;# 
  1417  029C                     	;# 
  1418  029C                     	;# 
  1419  029D                     	;# 
  1420  030C                     	;# 
  1421  030C                     	;# 
  1422  030D                     	;# 
  1423  030E                     	;# 
  1424  030F                     	;# 
  1425  0310                     	;# 
  1426  0310                     	;# 
  1427  0311                     	;# 
  1428  0312                     	;# 
  1429  0313                     	;# 
  1430  0314                     	;# 
  1431  0314                     	;# 
  1432  0315                     	;# 
  1433  0316                     	;# 
  1434  0317                     	;# 
  1435  0318                     	;# 
  1436  0318                     	;# 
  1437  0319                     	;# 
  1438  031A                     	;# 
  1439  031B                     	;# 
  1440  031C                     	;# 
  1441  031C                     	;# 
  1442  031D                     	;# 
  1443  031E                     	;# 
  1444  031F                     	;# 
  1445  038C                     	;# 
  1446  038C                     	;# 
  1447  038D                     	;# 
  1448  038E                     	;# 
  1449  0390                     	;# 
  1450  0390                     	;# 
  1451  0391                     	;# 
  1452  0392                     	;# 
  1453  040C                     	;# 
  1454  040D                     	;# 
  1455  040E                     	;# 
  1456  040F                     	;# 
  1457  0410                     	;# 
  1458  0411                     	;# 
  1459  0416                     	;# 
  1460  0416                     	;# 
  1461  0417                     	;# 
  1462  0418                     	;# 
  1463  0418                     	;# 
  1464  0419                     	;# 
  1465  041A                     	;# 
  1466  041A                     	;# 
  1467  041B                     	;# 
  1468  041C                     	;# 
  1469  041C                     	;# 
  1470  041D                     	;# 
  1471  041E                     	;# 
  1472  041F                     	;# 
  1473  048C                     	;# 
  1474  048C                     	;# 
  1475  048D                     	;# 
  1476  048E                     	;# 
  1477  048F                     	;# 
  1478  048F                     	;# 
  1479  0490                     	;# 
  1480  0491                     	;# 
  1481  0492                     	;# 
  1482  0492                     	;# 
  1483  0493                     	;# 
  1484  0494                     	;# 
  1485  0495                     	;# 
  1486  0495                     	;# 
  1487  0496                     	;# 
  1488  0497                     	;# 
  1489  0498                     	;# 
  1490  0499                     	;# 
  1491  049A                     	;# 
  1492  049B                     	;# 
  1493  049C                     	;# 
  1494  049D                     	;# 
  1495  050C                     	;# 
  1496  050C                     	;# 
  1497  050D                     	;# 
  1498  050E                     	;# 
  1499  050F                     	;# 
  1500  050F                     	;# 
  1501  0510                     	;# 
  1502  0511                     	;# 
  1503  0512                     	;# 
  1504  0512                     	;# 
  1505  0513                     	;# 
  1506  0514                     	;# 
  1507  0515                     	;# 
  1508  0515                     	;# 
  1509  0516                     	;# 
  1510  0517                     	;# 
  1511  0518                     	;# 
  1512  0519                     	;# 
  1513  051A                     	;# 
  1514  051B                     	;# 
  1515  051C                     	;# 
  1516  051D                     	;# 
  1517  058C                     	;# 
  1518  058C                     	;# 
  1519  058D                     	;# 
  1520  058E                     	;# 
  1521  058F                     	;# 
  1522  058F                     	;# 
  1523  0590                     	;# 
  1524  0591                     	;# 
  1525  0592                     	;# 
  1526  0593                     	;# 
  1527  060C                     	;# 
  1528  060D                     	;# 
  1529  060E                     	;# 
  1530  060F                     	;# 
  1531  0610                     	;# 
  1532  0611                     	;# 
  1533  0612                     	;# 
  1534  0613                     	;# 
  1535  0614                     	;# 
  1536  0616                     	;# 
  1537  0617                     	;# 
  1538  0618                     	;# 
  1539  0619                     	;# 
  1540  061A                     	;# 
  1541  061B                     	;# 
  1542  061C                     	;# 
  1543  061D                     	;# 
  1544  061E                     	;# 
  1545  068C                     	;# 
  1546  068D                     	;# 
  1547  068E                     	;# 
  1548  068F                     	;# 
  1549  0690                     	;# 
  1550  0691                     	;# 
  1551  0692                     	;# 
  1552  0693                     	;# 
  1553  0694                     	;# 
  1554  070C                     	;# 
  1555  070D                     	;# 
  1556  070E                     	;# 
  1557  070F                     	;# 
  1558  0710                     	;# 
  1559  0711                     	;# 
  1560  0712                     	;# 
  1561  0713                     	;# 
  1562  0714                     	;# 
  1563  0716                     	;# 
  1564  0717                     	;# 
  1565  0718                     	;# 
  1566  0719                     	;# 
  1567  071A                     	;# 
  1568  071B                     	;# 
  1569  071C                     	;# 
  1570  071D                     	;# 
  1571  071E                     	;# 
  1572  0796                     	;# 
  1573  0797                     	;# 
  1574  0798                     	;# 
  1575  0799                     	;# 
  1576  079A                     	;# 
  1577  079B                     	;# 
  1578  080C                     	;# 
  1579  080D                     	;# 
  1580  080E                     	;# 
  1581  080F                     	;# 
  1582  0810                     	;# 
  1583  0811                     	;# 
  1584  0812                     	;# 
  1585  0813                     	;# 
  1586  0814                     	;# 
  1587  081A                     	;# 
  1588  081B                     	;# 
  1589  081C                     	;# 
  1590  081D                     	;# 
  1591  081E                     	;# 
  1592  081F                     	;# 
  1593  088C                     	;# 
  1594  088D                     	;# 
  1595  088E                     	;# 
  1596  088F                     	;# 
  1597  0890                     	;# 
  1598  0891                     	;# 
  1599  0892                     	;# 
  1600  0893                     	;# 
  1601  0895                     	;# 
  1602  0896                     	;# 
  1603  0897                     	;# 
  1604  0898                     	;# 
  1605  0899                     	;# 
  1606  089A                     	;# 
  1607  089B                     	;# 
  1608  090C                     	;# 
  1609  090E                     	;# 
  1610  090F                     	;# 
  1611  091F                     	;# 
  1612  091F                     	;# 
  1613  098F                     	;# 
  1614  098F                     	;# 
  1615  0990                     	;# 
  1616  0991                     	;# 
  1617  0992                     	;# 
  1618  0993                     	;# 
  1619  0994                     	;# 
  1620  0995                     	;# 
  1621  0996                     	;# 
  1622  0997                     	;# 
  1623  0E0F                     	;# 
  1624  0E10                     	;# 
  1625  0E11                     	;# 
  1626  0E12                     	;# 
  1627  0E13                     	;# 
  1628  0E14                     	;# 
  1629  0E15                     	;# 
  1630  0E16                     	;# 
  1631  0E17                     	;# 
  1632  0E18                     	;# 
  1633  0E19                     	;# 
  1634  0E1A                     	;# 
  1635  0E1B                     	;# 
  1636  0E1C                     	;# 
  1637  0E1D                     	;# 
  1638  0E1E                     	;# 
  1639  0E1F                     	;# 
  1640  0E20                     	;# 
  1641  0E21                     	;# 
  1642  0E22                     	;# 
  1643  0E23                     	;# 
  1644  0E24                     	;# 
  1645  0E25                     	;# 
  1646  0E26                     	;# 
  1647  0E27                     	;# 
  1648  0E28                     	;# 
  1649  0E29                     	;# 
  1650  0E2A                     	;# 
  1651  0E2B                     	;# 
  1652  0E2C                     	;# 
  1653  0E2D                     	;# 
  1654  0E2E                     	;# 
  1655  0E2F                     	;# 
  1656  0E30                     	;# 
  1657  0E31                     	;# 
  1658  0E32                     	;# 
  1659  0E33                     	;# 
  1660  0E34                     	;# 
  1661  0E35                     	;# 
  1662  0E36                     	;# 
  1663  0E37                     	;# 
  1664  0E8F                     	;# 
  1665  0E90                     	;# 
  1666  0E91                     	;# 
  1667  0E92                     	;# 
  1668  0E93                     	;# 
  1669  0E94                     	;# 
  1670  0E95                     	;# 
  1671  0E96                     	;# 
  1672  0E97                     	;# 
  1673  0E9C                     	;# 
  1674  0E9D                     	;# 
  1675  0E9E                     	;# 
  1676  0EA1                     	;# 
  1677  0EA2                     	;# 
  1678  0EA3                     	;# 
  1679  0EA4                     	;# 
  1680  0EA5                     	;# 
  1681  0EA9                     	;# 
  1682  0EAA                     	;# 
  1683  0EAB                     	;# 
  1684  0EAC                     	;# 
  1685  0EB1                     	;# 
  1686  0EB2                     	;# 
  1687  0EB3                     	;# 
  1688  0EB8                     	;# 
  1689  0EB9                     	;# 
  1690  0EBA                     	;# 
  1691  0EBB                     	;# 
  1692  0EBC                     	;# 
  1693  0EBD                     	;# 
  1694  0EBE                     	;# 
  1695  0EC3                     	;# 
  1696  0EC5                     	;# 
  1697  0EC6                     	;# 
  1698  0EC7                     	;# 
  1699  0EC8                     	;# 
  1700  0EC9                     	;# 
  1701  0ECA                     	;# 
  1702  0ECB                     	;# 
  1703  0ECC                     	;# 
  1704  0F10                     	;# 
  1705  0F11                     	;# 
  1706  0F12                     	;# 
  1707  0F13                     	;# 
  1708  0F14                     	;# 
  1709  0F15                     	;# 
  1710  0F16                     	;# 
  1711  0F17                     	;# 
  1712  0F18                     	;# 
  1713  0F19                     	;# 
  1714  0F1A                     	;# 
  1715  0F1B                     	;# 
  1716  0F1C                     	;# 
  1717  0F1D                     	;# 
  1718  0F1E                     	;# 
  1719  0F1F                     	;# 
  1720  0F20                     	;# 
  1721  0F21                     	;# 
  1722  0F22                     	;# 
  1723  0F23                     	;# 
  1724  0F24                     	;# 
  1725  0F25                     	;# 
  1726  0F26                     	;# 
  1727  0F27                     	;# 
  1728  0F28                     	;# 
  1729  0F29                     	;# 
  1730  0F2A                     	;# 
  1731  0F2B                     	;# 
  1732  0F2C                     	;# 
  1733  0F2D                     	;# 
  1734  0F2E                     	;# 
  1735  0F2F                     	;# 
  1736  0F30                     	;# 
  1737  0F31                     	;# 
  1738  0F32                     	;# 
  1739  0F38                     	;# 
  1740  0F39                     	;# 
  1741  0F3A                     	;# 
  1742  0F3B                     	;# 
  1743  0F3C                     	;# 
  1744  0F3D                     	;# 
  1745  0F3E                     	;# 
  1746  0F3F                     	;# 
  1747  0F40                     	;# 
  1748  0F41                     	;# 
  1749  0F43                     	;# 
  1750  0F44                     	;# 
  1751  0F45                     	;# 
  1752  0F46                     	;# 
  1753  0F47                     	;# 
  1754  0F48                     	;# 
  1755  0F49                     	;# 
  1756  0F4A                     	;# 
  1757  0F4B                     	;# 
  1758  0F4C                     	;# 
  1759  0F4E                     	;# 
  1760  0F4F                     	;# 
  1761  0F50                     	;# 
  1762  0F51                     	;# 
  1763  0F52                     	;# 
  1764  0F53                     	;# 
  1765  0F54                     	;# 
  1766  0F55                     	;# 
  1767  0F56                     	;# 
  1768  0F57                     	;# 
  1769  0F59                     	;# 
  1770  0F5A                     	;# 
  1771  0F5B                     	;# 
  1772  0F5C                     	;# 
  1773  0F5D                     	;# 
  1774  0F61                     	;# 
  1775  0F62                     	;# 
  1776  0F64                     	;# 
  1777  0F65                     	;# 
  1778  0F66                     	;# 
  1779  0F67                     	;# 
  1780  0F68                     	;# 
  1781  0F69                     	;# 
  1782  0F6A                     	;# 
  1783  0F6B                     	;# 
  1784  0F6C                     	;# 
  1785  0F6D                     	;# 
  1786  0FE4                     	;# 
  1787  0FE5                     	;# 
  1788  0FE6                     	;# 
  1789  0FE7                     	;# 
  1790  0FE8                     	;# 
  1791  0FE9                     	;# 
  1792  0FEA                     	;# 
  1793  0FEB                     	;# 
  1794  0FED                     	;# 
  1795  0FEE                     	;# 
  1796  0FEF                     	;# 
  1797  0000                     	;# 
  1798  0001                     	;# 
  1799  0002                     	;# 
  1800  0003                     	;# 
  1801  0004                     	;# 
  1802  0005                     	;# 
  1803  0006                     	;# 
  1804  0007                     	;# 
  1805  0008                     	;# 
  1806  0009                     	;# 
  1807  000A                     	;# 
  1808  000B                     	;# 
  1809  000C                     	;# 
  1810  000D                     	;# 
  1811  000E                     	;# 
  1812  000F                     	;# 
  1813  0010                     	;# 
  1814  0011                     	;# 
  1815  0012                     	;# 
  1816  0013                     	;# 
  1817  0014                     	;# 
  1818  0015                     	;# 
  1819  0016                     	;# 
  1820  0017                     	;# 
  1821  0018                     	;# 
  1822  0019                     	;# 
  1823  001A                     	;# 
  1824  001C                     	;# 
  1825  001C                     	;# 
  1826  001D                     	;# 
  1827  001D                     	;# 
  1828  001E                     	;# 
  1829  001F                     	;# 
  1830  008C                     	;# 
  1831  008C                     	;# 
  1832  008D                     	;# 
  1833  008E                     	;# 
  1834  008E                     	;# 
  1835  008F                     	;# 
  1836  0090                     	;# 
  1837  0090                     	;# 
  1838  0091                     	;# 
  1839  0093                     	;# 
  1840  0094                     	;# 
  1841  0095                     	;# 
  1842  0096                     	;# 
  1843  0097                     	;# 
  1844  0098                     	;# 
  1845  0099                     	;# 
  1846  009A                     	;# 
  1847  009B                     	;# 
  1848  009C                     	;# 
  1849  009D                     	;# 
  1850  009E                     	;# 
  1851  010C                     	;# 
  1852  010D                     	;# 
  1853  010E                     	;# 
  1854  010E                     	;# 
  1855  010F                     	;# 
  1856  0110                     	;# 
  1857  0110                     	;# 
  1858  0111                     	;# 
  1859  0112                     	;# 
  1860  0112                     	;# 
  1861  0113                     	;# 
  1862  0114                     	;# 
  1863  0114                     	;# 
  1864  0115                     	;# 
  1865  0116                     	;# 
  1866  0116                     	;# 
  1867  0117                     	;# 
  1868  0119                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011C                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011D                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011E                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  018F                     	;# 
  1897  0190                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  0196                     	;# 
  1901  0197                     	;# 
  1902  0198                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019B                     	;# 
  1906  019C                     	;# 
  1907  020C                     	;# 
  1908  020C                     	;# 
  1909  020D                     	;# 
  1910  020E                     	;# 
  1911  020F                     	;# 
  1912  020F                     	;# 
  1913  0210                     	;# 
  1914  0210                     	;# 
  1915  0211                     	;# 
  1916  0211                     	;# 
  1917  0212                     	;# 
  1918  0212                     	;# 
  1919  0213                     	;# 
  1920  0214                     	;# 
  1921  0215                     	;# 
  1922  0215                     	;# 
  1923  0216                     	;# 
  1924  0216                     	;# 
  1925  0217                     	;# 
  1926  0217                     	;# 
  1927  0218                     	;# 
  1928  0218                     	;# 
  1929  0219                     	;# 
  1930  021A                     	;# 
  1931  021B                     	;# 
  1932  021B                     	;# 
  1933  021C                     	;# 
  1934  021C                     	;# 
  1935  021D                     	;# 
  1936  021D                     	;# 
  1937  021E                     	;# 
  1938  021F                     	;# 
  1939  028C                     	;# 
  1940  028C                     	;# 
  1941  028D                     	;# 
  1942  028D                     	;# 
  1943  028E                     	;# 
  1944  028F                     	;# 
  1945  0290                     	;# 
  1946  0290                     	;# 
  1947  0291                     	;# 
  1948  0292                     	;# 
  1949  0292                     	;# 
  1950  0293                     	;# 
  1951  0293                     	;# 
  1952  0294                     	;# 
  1953  0295                     	;# 
  1954  0296                     	;# 
  1955  0296                     	;# 
  1956  0297                     	;# 
  1957  0298                     	;# 
  1958  0298                     	;# 
  1959  0299                     	;# 
  1960  0299                     	;# 
  1961  029A                     	;# 
  1962  029B                     	;# 
  1963  029C                     	;# 
  1964  029C                     	;# 
  1965  029D                     	;# 
  1966  030C                     	;# 
  1967  030C                     	;# 
  1968  030D                     	;# 
  1969  030E                     	;# 
  1970  030F                     	;# 
  1971  0310                     	;# 
  1972  0310                     	;# 
  1973  0311                     	;# 
  1974  0312                     	;# 
  1975  0313                     	;# 
  1976  0314                     	;# 
  1977  0314                     	;# 
  1978  0315                     	;# 
  1979  0316                     	;# 
  1980  0317                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  031B                     	;# 
  1986  031C                     	;# 
  1987  031C                     	;# 
  1988  031D                     	;# 
  1989  031E                     	;# 
  1990  031F                     	;# 
  1991  038C                     	;# 
  1992  038C                     	;# 
  1993  038D                     	;# 
  1994  038E                     	;# 
  1995  0390                     	;# 
  1996  0390                     	;# 
  1997  0391                     	;# 
  1998  0392                     	;# 
  1999  040C                     	;# 
  2000  040D                     	;# 
  2001  040E                     	;# 
  2002  040F                     	;# 
  2003  0410                     	;# 
  2004  0411                     	;# 
  2005  0416                     	;# 
  2006  0416                     	;# 
  2007  0417                     	;# 
  2008  0418                     	;# 
  2009  0418                     	;# 
  2010  0419                     	;# 
  2011  041A                     	;# 
  2012  041A                     	;# 
  2013  041B                     	;# 
  2014  041C                     	;# 
  2015  041C                     	;# 
  2016  041D                     	;# 
  2017  041E                     	;# 
  2018  041F                     	;# 
  2019  048C                     	;# 
  2020  048C                     	;# 
  2021  048D                     	;# 
  2022  048E                     	;# 
  2023  048F                     	;# 
  2024  048F                     	;# 
  2025  0490                     	;# 
  2026  0491                     	;# 
  2027  0492                     	;# 
  2028  0492                     	;# 
  2029  0493                     	;# 
  2030  0494                     	;# 
  2031  0495                     	;# 
  2032  0495                     	;# 
  2033  0496                     	;# 
  2034  0497                     	;# 
  2035  0498                     	;# 
  2036  0499                     	;# 
  2037  049A                     	;# 
  2038  049B                     	;# 
  2039  049C                     	;# 
  2040  049D                     	;# 
  2041  050C                     	;# 
  2042  050C                     	;# 
  2043  050D                     	;# 
  2044  050E                     	;# 
  2045  050F                     	;# 
  2046  050F                     	;# 
  2047  0510                     	;# 
  2048  0511                     	;# 
  2049  0512                     	;# 
  2050  0512                     	;# 
  2051  0513                     	;# 
  2052  0514                     	;# 
  2053  0515                     	;# 
  2054  0515                     	;# 
  2055  0516                     	;# 
  2056  0517                     	;# 
  2057  0518                     	;# 
  2058  0519                     	;# 
  2059  051A                     	;# 
  2060  051B                     	;# 
  2061  051C                     	;# 
  2062  051D                     	;# 
  2063  058C                     	;# 
  2064  058C                     	;# 
  2065  058D                     	;# 
  2066  058E                     	;# 
  2067  058F                     	;# 
  2068  058F                     	;# 
  2069  0590                     	;# 
  2070  0591                     	;# 
  2071  0592                     	;# 
  2072  0593                     	;# 
  2073  060C                     	;# 
  2074  060D                     	;# 
  2075  060E                     	;# 
  2076  060F                     	;# 
  2077  0610                     	;# 
  2078  0611                     	;# 
  2079  0612                     	;# 
  2080  0613                     	;# 
  2081  0614                     	;# 
  2082  0616                     	;# 
  2083  0617                     	;# 
  2084  0618                     	;# 
  2085  0619                     	;# 
  2086  061A                     	;# 
  2087  061B                     	;# 
  2088  061C                     	;# 
  2089  061D                     	;# 
  2090  061E                     	;# 
  2091  068C                     	;# 
  2092  068D                     	;# 
  2093  068E                     	;# 
  2094  068F                     	;# 
  2095  0690                     	;# 
  2096  0691                     	;# 
  2097  0692                     	;# 
  2098  0693                     	;# 
  2099  0694                     	;# 
  2100  070C                     	;# 
  2101  070D                     	;# 
  2102  070E                     	;# 
  2103  070F                     	;# 
  2104  0710                     	;# 
  2105  0711                     	;# 
  2106  0712                     	;# 
  2107  0713                     	;# 
  2108  0714                     	;# 
  2109  0716                     	;# 
  2110  0717                     	;# 
  2111  0718                     	;# 
  2112  0719                     	;# 
  2113  071A                     	;# 
  2114  071B                     	;# 
  2115  071C                     	;# 
  2116  071D                     	;# 
  2117  071E                     	;# 
  2118  0796                     	;# 
  2119  0797                     	;# 
  2120  0798                     	;# 
  2121  0799                     	;# 
  2122  079A                     	;# 
  2123  079B                     	;# 
  2124  080C                     	;# 
  2125  080D                     	;# 
  2126  080E                     	;# 
  2127  080F                     	;# 
  2128  0810                     	;# 
  2129  0811                     	;# 
  2130  0812                     	;# 
  2131  0813                     	;# 
  2132  0814                     	;# 
  2133  081A                     	;# 
  2134  081B                     	;# 
  2135  081C                     	;# 
  2136  081D                     	;# 
  2137  081E                     	;# 
  2138  081F                     	;# 
  2139  088C                     	;# 
  2140  088D                     	;# 
  2141  088E                     	;# 
  2142  088F                     	;# 
  2143  0890                     	;# 
  2144  0891                     	;# 
  2145  0892                     	;# 
  2146  0893                     	;# 
  2147  0895                     	;# 
  2148  0896                     	;# 
  2149  0897                     	;# 
  2150  0898                     	;# 
  2151  0899                     	;# 
  2152  089A                     	;# 
  2153  089B                     	;# 
  2154  090C                     	;# 
  2155  090E                     	;# 
  2156  090F                     	;# 
  2157  091F                     	;# 
  2158  091F                     	;# 
  2159  098F                     	;# 
  2160  098F                     	;# 
  2161  0990                     	;# 
  2162  0991                     	;# 
  2163  0992                     	;# 
  2164  0993                     	;# 
  2165  0994                     	;# 
  2166  0995                     	;# 
  2167  0996                     	;# 
  2168  0997                     	;# 
  2169  0E0F                     	;# 
  2170  0E10                     	;# 
  2171  0E11                     	;# 
  2172  0E12                     	;# 
  2173  0E13                     	;# 
  2174  0E14                     	;# 
  2175  0E15                     	;# 
  2176  0E16                     	;# 
  2177  0E17                     	;# 
  2178  0E18                     	;# 
  2179  0E19                     	;# 
  2180  0E1A                     	;# 
  2181  0E1B                     	;# 
  2182  0E1C                     	;# 
  2183  0E1D                     	;# 
  2184  0E1E                     	;# 
  2185  0E1F                     	;# 
  2186  0E20                     	;# 
  2187  0E21                     	;# 
  2188  0E22                     	;# 
  2189  0E23                     	;# 
  2190  0E24                     	;# 
  2191  0E25                     	;# 
  2192  0E26                     	;# 
  2193  0E27                     	;# 
  2194  0E28                     	;# 
  2195  0E29                     	;# 
  2196  0E2A                     	;# 
  2197  0E2B                     	;# 
  2198  0E2C                     	;# 
  2199  0E2D                     	;# 
  2200  0E2E                     	;# 
  2201  0E2F                     	;# 
  2202  0E30                     	;# 
  2203  0E31                     	;# 
  2204  0E32                     	;# 
  2205  0E33                     	;# 
  2206  0E34                     	;# 
  2207  0E35                     	;# 
  2208  0E36                     	;# 
  2209  0E37                     	;# 
  2210  0E8F                     	;# 
  2211  0E90                     	;# 
  2212  0E91                     	;# 
  2213  0E92                     	;# 
  2214  0E93                     	;# 
  2215  0E94                     	;# 
  2216  0E95                     	;# 
  2217  0E96                     	;# 
  2218  0E97                     	;# 
  2219  0E9C                     	;# 
  2220  0E9D                     	;# 
  2221  0E9E                     	;# 
  2222  0EA1                     	;# 
  2223  0EA2                     	;# 
  2224  0EA3                     	;# 
  2225  0EA4                     	;# 
  2226  0EA5                     	;# 
  2227  0EA9                     	;# 
  2228  0EAA                     	;# 
  2229  0EAB                     	;# 
  2230  0EAC                     	;# 
  2231  0EB1                     	;# 
  2232  0EB2                     	;# 
  2233  0EB3                     	;# 
  2234  0EB8                     	;# 
  2235  0EB9                     	;# 
  2236  0EBA                     	;# 
  2237  0EBB                     	;# 
  2238  0EBC                     	;# 
  2239  0EBD                     	;# 
  2240  0EBE                     	;# 
  2241  0EC3                     	;# 
  2242  0EC5                     	;# 
  2243  0EC6                     	;# 
  2244  0EC7                     	;# 
  2245  0EC8                     	;# 
  2246  0EC9                     	;# 
  2247  0ECA                     	;# 
  2248  0ECB                     	;# 
  2249  0ECC                     	;# 
  2250  0F10                     	;# 
  2251  0F11                     	;# 
  2252  0F12                     	;# 
  2253  0F13                     	;# 
  2254  0F14                     	;# 
  2255  0F15                     	;# 
  2256  0F16                     	;# 
  2257  0F17                     	;# 
  2258  0F18                     	;# 
  2259  0F19                     	;# 
  2260  0F1A                     	;# 
  2261  0F1B                     	;# 
  2262  0F1C                     	;# 
  2263  0F1D                     	;# 
  2264  0F1E                     	;# 
  2265  0F1F                     	;# 
  2266  0F20                     	;# 
  2267  0F21                     	;# 
  2268  0F22                     	;# 
  2269  0F23                     	;# 
  2270  0F24                     	;# 
  2271  0F25                     	;# 
  2272  0F26                     	;# 
  2273  0F27                     	;# 
  2274  0F28                     	;# 
  2275  0F29                     	;# 
  2276  0F2A                     	;# 
  2277  0F2B                     	;# 
  2278  0F2C                     	;# 
  2279  0F2D                     	;# 
  2280  0F2E                     	;# 
  2281  0F2F                     	;# 
  2282  0F30                     	;# 
  2283  0F31                     	;# 
  2284  0F32                     	;# 
  2285  0F38                     	;# 
  2286  0F39                     	;# 
  2287  0F3A                     	;# 
  2288  0F3B                     	;# 
  2289  0F3C                     	;# 
  2290  0F3D                     	;# 
  2291  0F3E                     	;# 
  2292  0F3F                     	;# 
  2293  0F40                     	;# 
  2294  0F41                     	;# 
  2295  0F43                     	;# 
  2296  0F44                     	;# 
  2297  0F45                     	;# 
  2298  0F46                     	;# 
  2299  0F47                     	;# 
  2300  0F48                     	;# 
  2301  0F49                     	;# 
  2302  0F4A                     	;# 
  2303  0F4B                     	;# 
  2304  0F4C                     	;# 
  2305  0F4E                     	;# 
  2306  0F4F                     	;# 
  2307  0F50                     	;# 
  2308  0F51                     	;# 
  2309  0F52                     	;# 
  2310  0F53                     	;# 
  2311  0F54                     	;# 
  2312  0F55                     	;# 
  2313  0F56                     	;# 
  2314  0F57                     	;# 
  2315  0F59                     	;# 
  2316  0F5A                     	;# 
  2317  0F5B                     	;# 
  2318  0F5C                     	;# 
  2319  0F5D                     	;# 
  2320  0F61                     	;# 
  2321  0F62                     	;# 
  2322  0F64                     	;# 
  2323  0F65                     	;# 
  2324  0F66                     	;# 
  2325  0F67                     	;# 
  2326  0F68                     	;# 
  2327  0F69                     	;# 
  2328  0F6A                     	;# 
  2329  0F6B                     	;# 
  2330  0F6C                     	;# 
  2331  0F6D                     	;# 
  2332  0FE4                     	;# 
  2333  0FE5                     	;# 
  2334  0FE6                     	;# 
  2335  0FE7                     	;# 
  2336  0FE8                     	;# 
  2337  0FE9                     	;# 
  2338  0FEA                     	;# 
  2339  0FEB                     	;# 
  2340  0FED                     	;# 
  2341  0FEE                     	;# 
  2342  0FEF                     	;# 
  2343  0000                     	;# 
  2344  0001                     	;# 
  2345  0002                     	;# 
  2346  0003                     	;# 
  2347  0004                     	;# 
  2348  0005                     	;# 
  2349  0006                     	;# 
  2350  0007                     	;# 
  2351  0008                     	;# 
  2352  0009                     	;# 
  2353  000A                     	;# 
  2354  000B                     	;# 
  2355  000C                     	;# 
  2356  000D                     	;# 
  2357  000E                     	;# 
  2358  000F                     	;# 
  2359  0010                     	;# 
  2360  0011                     	;# 
  2361  0012                     	;# 
  2362  0013                     	;# 
  2363  0014                     	;# 
  2364  0015                     	;# 
  2365  0016                     	;# 
  2366  0017                     	;# 
  2367  0018                     	;# 
  2368  0019                     	;# 
  2369  001A                     	;# 
  2370  001C                     	;# 
  2371  001C                     	;# 
  2372  001D                     	;# 
  2373  001D                     	;# 
  2374  001E                     	;# 
  2375  001F                     	;# 
  2376  008C                     	;# 
  2377  008C                     	;# 
  2378  008D                     	;# 
  2379  008E                     	;# 
  2380  008E                     	;# 
  2381  008F                     	;# 
  2382  0090                     	;# 
  2383  0090                     	;# 
  2384  0091                     	;# 
  2385  0093                     	;# 
  2386  0094                     	;# 
  2387  0095                     	;# 
  2388  0096                     	;# 
  2389  0097                     	;# 
  2390  0098                     	;# 
  2391  0099                     	;# 
  2392  009A                     	;# 
  2393  009B                     	;# 
  2394  009C                     	;# 
  2395  009D                     	;# 
  2396  009E                     	;# 
  2397  010C                     	;# 
  2398  010D                     	;# 
  2399  010E                     	;# 
  2400  010E                     	;# 
  2401  010F                     	;# 
  2402  0110                     	;# 
  2403  0110                     	;# 
  2404  0111                     	;# 
  2405  0112                     	;# 
  2406  0112                     	;# 
  2407  0113                     	;# 
  2408  0114                     	;# 
  2409  0114                     	;# 
  2410  0115                     	;# 
  2411  0116                     	;# 
  2412  0116                     	;# 
  2413  0117                     	;# 
  2414  0119                     	;# 
  2415  0119                     	;# 
  2416  0119                     	;# 
  2417  011A                     	;# 
  2418  011A                     	;# 
  2419  011A                     	;# 
  2420  011B                     	;# 
  2421  011B                     	;# 
  2422  011B                     	;# 
  2423  011B                     	;# 
  2424  011B                     	;# 
  2425  011C                     	;# 
  2426  011C                     	;# 
  2427  011C                     	;# 
  2428  011D                     	;# 
  2429  011D                     	;# 
  2430  011D                     	;# 
  2431  011E                     	;# 
  2432  011E                     	;# 
  2433  011E                     	;# 
  2434  011F                     	;# 
  2435  011F                     	;# 
  2436  011F                     	;# 
  2437  011F                     	;# 
  2438  011F                     	;# 
  2439  018C                     	;# 
  2440  018D                     	;# 
  2441  018E                     	;# 
  2442  018F                     	;# 
  2443  0190                     	;# 
  2444  0191                     	;# 
  2445  0192                     	;# 
  2446  0196                     	;# 
  2447  0197                     	;# 
  2448  0198                     	;# 
  2449  0199                     	;# 
  2450  019A                     	;# 
  2451  019B                     	;# 
  2452  019C                     	;# 
  2453  020C                     	;# 
  2454  020C                     	;# 
  2455  020D                     	;# 
  2456  020E                     	;# 
  2457  020F                     	;# 
  2458  020F                     	;# 
  2459  0210                     	;# 
  2460  0210                     	;# 
  2461  0211                     	;# 
  2462  0211                     	;# 
  2463  0212                     	;# 
  2464  0212                     	;# 
  2465  0213                     	;# 
  2466  0214                     	;# 
  2467  0215                     	;# 
  2468  0215                     	;# 
  2469  0216                     	;# 
  2470  0216                     	;# 
  2471  0217                     	;# 
  2472  0217                     	;# 
  2473  0218                     	;# 
  2474  0218                     	;# 
  2475  0219                     	;# 
  2476  021A                     	;# 
  2477  021B                     	;# 
  2478  021B                     	;# 
  2479  021C                     	;# 
  2480  021C                     	;# 
  2481  021D                     	;# 
  2482  021D                     	;# 
  2483  021E                     	;# 
  2484  021F                     	;# 
  2485  028C                     	;# 
  2486  028C                     	;# 
  2487  028D                     	;# 
  2488  028D                     	;# 
  2489  028E                     	;# 
  2490  028F                     	;# 
  2491  0290                     	;# 
  2492  0290                     	;# 
  2493  0291                     	;# 
  2494  0292                     	;# 
  2495  0292                     	;# 
  2496  0293                     	;# 
  2497  0293                     	;# 
  2498  0294                     	;# 
  2499  0295                     	;# 
  2500  0296                     	;# 
  2501  0296                     	;# 
  2502  0297                     	;# 
  2503  0298                     	;# 
  2504  0298                     	;# 
  2505  0299                     	;# 
  2506  0299                     	;# 
  2507  029A                     	;# 
  2508  029B                     	;# 
  2509  029C                     	;# 
  2510  029C                     	;# 
  2511  029D                     	;# 
  2512  030C                     	;# 
  2513  030C                     	;# 
  2514  030D                     	;# 
  2515  030E                     	;# 
  2516  030F                     	;# 
  2517  0310                     	;# 
  2518  0310                     	;# 
  2519  0311                     	;# 
  2520  0312                     	;# 
  2521  0313                     	;# 
  2522  0314                     	;# 
  2523  0314                     	;# 
  2524  0315                     	;# 
  2525  0316                     	;# 
  2526  0317                     	;# 
  2527  0318                     	;# 
  2528  0318                     	;# 
  2529  0319                     	;# 
  2530  031A                     	;# 
  2531  031B                     	;# 
  2532  031C                     	;# 
  2533  031C                     	;# 
  2534  031D                     	;# 
  2535  031E                     	;# 
  2536  031F                     	;# 
  2537  038C                     	;# 
  2538  038C                     	;# 
  2539  038D                     	;# 
  2540  038E                     	;# 
  2541  0390                     	;# 
  2542  0390                     	;# 
  2543  0391                     	;# 
  2544  0392                     	;# 
  2545  040C                     	;# 
  2546  040D                     	;# 
  2547  040E                     	;# 
  2548  040F                     	;# 
  2549  0410                     	;# 
  2550  0411                     	;# 
  2551  0416                     	;# 
  2552  0416                     	;# 
  2553  0417                     	;# 
  2554  0418                     	;# 
  2555  0418                     	;# 
  2556  0419                     	;# 
  2557  041A                     	;# 
  2558  041A                     	;# 
  2559  041B                     	;# 
  2560  041C                     	;# 
  2561  041C                     	;# 
  2562  041D                     	;# 
  2563  041E                     	;# 
  2564  041F                     	;# 
  2565  048C                     	;# 
  2566  048C                     	;# 
  2567  048D                     	;# 
  2568  048E                     	;# 
  2569  048F                     	;# 
  2570  048F                     	;# 
  2571  0490                     	;# 
  2572  0491                     	;# 
  2573  0492                     	;# 
  2574  0492                     	;# 
  2575  0493                     	;# 
  2576  0494                     	;# 
  2577  0495                     	;# 
  2578  0495                     	;# 
  2579  0496                     	;# 
  2580  0497                     	;# 
  2581  0498                     	;# 
  2582  0499                     	;# 
  2583  049A                     	;# 
  2584  049B                     	;# 
  2585  049C                     	;# 
  2586  049D                     	;# 
  2587  050C                     	;# 
  2588  050C                     	;# 
  2589  050D                     	;# 
  2590  050E                     	;# 
  2591  050F                     	;# 
  2592  050F                     	;# 
  2593  0510                     	;# 
  2594  0511                     	;# 
  2595  0512                     	;# 
  2596  0512                     	;# 
  2597  0513                     	;# 
  2598  0514                     	;# 
  2599  0515                     	;# 
  2600  0515                     	;# 
  2601  0516                     	;# 
  2602  0517                     	;# 
  2603  0518                     	;# 
  2604  0519                     	;# 
  2605  051A                     	;# 
  2606  051B                     	;# 
  2607  051C                     	;# 
  2608  051D                     	;# 
  2609  058C                     	;# 
  2610  058C                     	;# 
  2611  058D                     	;# 
  2612  058E                     	;# 
  2613  058F                     	;# 
  2614  058F                     	;# 
  2615  0590                     	;# 
  2616  0591                     	;# 
  2617  0592                     	;# 
  2618  0593                     	;# 
  2619  060C                     	;# 
  2620  060D                     	;# 
  2621  060E                     	;# 
  2622  060F                     	;# 
  2623  0610                     	;# 
  2624  0611                     	;# 
  2625  0612                     	;# 
  2626  0613                     	;# 
  2627  0614                     	;# 
  2628  0616                     	;# 
  2629  0617                     	;# 
  2630  0618                     	;# 
  2631  0619                     	;# 
  2632  061A                     	;# 
  2633  061B                     	;# 
  2634  061C                     	;# 
  2635  061D                     	;# 
  2636  061E                     	;# 
  2637  068C                     	;# 
  2638  068D                     	;# 
  2639  068E                     	;# 
  2640  068F                     	;# 
  2641  0690                     	;# 
  2642  0691                     	;# 
  2643  0692                     	;# 
  2644  0693                     	;# 
  2645  0694                     	;# 
  2646  070C                     	;# 
  2647  070D                     	;# 
  2648  070E                     	;# 
  2649  070F                     	;# 
  2650  0710                     	;# 
  2651  0711                     	;# 
  2652  0712                     	;# 
  2653  0713                     	;# 
  2654  0714                     	;# 
  2655  0716                     	;# 
  2656  0717                     	;# 
  2657  0718                     	;# 
  2658  0719                     	;# 
  2659  071A                     	;# 
  2660  071B                     	;# 
  2661  071C                     	;# 
  2662  071D                     	;# 
  2663  071E                     	;# 
  2664  0796                     	;# 
  2665  0797                     	;# 
  2666  0798                     	;# 
  2667  0799                     	;# 
  2668  079A                     	;# 
  2669  079B                     	;# 
  2670  080C                     	;# 
  2671  080D                     	;# 
  2672  080E                     	;# 
  2673  080F                     	;# 
  2674  0810                     	;# 
  2675  0811                     	;# 
  2676  0812                     	;# 
  2677  0813                     	;# 
  2678  0814                     	;# 
  2679  081A                     	;# 
  2680  081B                     	;# 
  2681  081C                     	;# 
  2682  081D                     	;# 
  2683  081E                     	;# 
  2684  081F                     	;# 
  2685  088C                     	;# 
  2686  088D                     	;# 
  2687  088E                     	;# 
  2688  088F                     	;# 
  2689  0890                     	;# 
  2690  0891                     	;# 
  2691  0892                     	;# 
  2692  0893                     	;# 
  2693  0895                     	;# 
  2694  0896                     	;# 
  2695  0897                     	;# 
  2696  0898                     	;# 
  2697  0899                     	;# 
  2698  089A                     	;# 
  2699  089B                     	;# 
  2700  090C                     	;# 
  2701  090E                     	;# 
  2702  090F                     	;# 
  2703  091F                     	;# 
  2704  091F                     	;# 
  2705  098F                     	;# 
  2706  098F                     	;# 
  2707  0990                     	;# 
  2708  0991                     	;# 
  2709  0992                     	;# 
  2710  0993                     	;# 
  2711  0994                     	;# 
  2712  0995                     	;# 
  2713  0996                     	;# 
  2714  0997                     	;# 
  2715  0E0F                     	;# 
  2716  0E10                     	;# 
  2717  0E11                     	;# 
  2718  0E12                     	;# 
  2719  0E13                     	;# 
  2720  0E14                     	;# 
  2721  0E15                     	;# 
  2722  0E16                     	;# 
  2723  0E17                     	;# 
  2724  0E18                     	;# 
  2725  0E19                     	;# 
  2726  0E1A                     	;# 
  2727  0E1B                     	;# 
  2728  0E1C                     	;# 
  2729  0E1D                     	;# 
  2730  0E1E                     	;# 
  2731  0E1F                     	;# 
  2732  0E20                     	;# 
  2733  0E21                     	;# 
  2734  0E22                     	;# 
  2735  0E23                     	;# 
  2736  0E24                     	;# 
  2737  0E25                     	;# 
  2738  0E26                     	;# 
  2739  0E27                     	;# 
  2740  0E28                     	;# 
  2741  0E29                     	;# 
  2742  0E2A                     	;# 
  2743  0E2B                     	;# 
  2744  0E2C                     	;# 
  2745  0E2D                     	;# 
  2746  0E2E                     	;# 
  2747  0E2F                     	;# 
  2748  0E30                     	;# 
  2749  0E31                     	;# 
  2750  0E32                     	;# 
  2751  0E33                     	;# 
  2752  0E34                     	;# 
  2753  0E35                     	;# 
  2754  0E36                     	;# 
  2755  0E37                     	;# 
  2756  0E8F                     	;# 
  2757  0E90                     	;# 
  2758  0E91                     	;# 
  2759  0E92                     	;# 
  2760  0E93                     	;# 
  2761  0E94                     	;# 
  2762  0E95                     	;# 
  2763  0E96                     	;# 
  2764  0E97                     	;# 
  2765  0E9C                     	;# 
  2766  0E9D                     	;# 
  2767  0E9E                     	;# 
  2768  0EA1                     	;# 
  2769  0EA2                     	;# 
  2770  0EA3                     	;# 
  2771  0EA4                     	;# 
  2772  0EA5                     	;# 
  2773  0EA9                     	;# 
  2774  0EAA                     	;# 
  2775  0EAB                     	;# 
  2776  0EAC                     	;# 
  2777  0EB1                     	;# 
  2778  0EB2                     	;# 
  2779  0EB3                     	;# 
  2780  0EB8                     	;# 
  2781  0EB9                     	;# 
  2782  0EBA                     	;# 
  2783  0EBB                     	;# 
  2784  0EBC                     	;# 
  2785  0EBD                     	;# 
  2786  0EBE                     	;# 
  2787  0EC3                     	;# 
  2788  0EC5                     	;# 
  2789  0EC6                     	;# 
  2790  0EC7                     	;# 
  2791  0EC8                     	;# 
  2792  0EC9                     	;# 
  2793  0ECA                     	;# 
  2794  0ECB                     	;# 
  2795  0ECC                     	;# 
  2796  0F10                     	;# 
  2797  0F11                     	;# 
  2798  0F12                     	;# 
  2799  0F13                     	;# 
  2800  0F14                     	;# 
  2801  0F15                     	;# 
  2802  0F16                     	;# 
  2803  0F17                     	;# 
  2804  0F18                     	;# 
  2805  0F19                     	;# 
  2806  0F1A                     	;# 
  2807  0F1B                     	;# 
  2808  0F1C                     	;# 
  2809  0F1D                     	;# 
  2810  0F1E                     	;# 
  2811  0F1F                     	;# 
  2812  0F20                     	;# 
  2813  0F21                     	;# 
  2814  0F22                     	;# 
  2815  0F23                     	;# 
  2816  0F24                     	;# 
  2817  0F25                     	;# 
  2818  0F26                     	;# 
  2819  0F27                     	;# 
  2820  0F28                     	;# 
  2821  0F29                     	;# 
  2822  0F2A                     	;# 
  2823  0F2B                     	;# 
  2824  0F2C                     	;# 
  2825  0F2D                     	;# 
  2826  0F2E                     	;# 
  2827  0F2F                     	;# 
  2828  0F30                     	;# 
  2829  0F31                     	;# 
  2830  0F32                     	;# 
  2831  0F38                     	;# 
  2832  0F39                     	;# 
  2833  0F3A                     	;# 
  2834  0F3B                     	;# 
  2835  0F3C                     	;# 
  2836  0F3D                     	;# 
  2837  0F3E                     	;# 
  2838  0F3F                     	;# 
  2839  0F40                     	;# 
  2840  0F41                     	;# 
  2841  0F43                     	;# 
  2842  0F44                     	;# 
  2843  0F45                     	;# 
  2844  0F46                     	;# 
  2845  0F47                     	;# 
  2846  0F48                     	;# 
  2847  0F49                     	;# 
  2848  0F4A                     	;# 
  2849  0F4B                     	;# 
  2850  0F4C                     	;# 
  2851  0F4E                     	;# 
  2852  0F4F                     	;# 
  2853  0F50                     	;# 
  2854  0F51                     	;# 
  2855  0F52                     	;# 
  2856  0F53                     	;# 
  2857  0F54                     	;# 
  2858  0F55                     	;# 
  2859  0F56                     	;# 
  2860  0F57                     	;# 
  2861  0F59                     	;# 
  2862  0F5A                     	;# 
  2863  0F5B                     	;# 
  2864  0F5C                     	;# 
  2865  0F5D                     	;# 
  2866  0F61                     	;# 
  2867  0F62                     	;# 
  2868  0F64                     	;# 
  2869  0F65                     	;# 
  2870  0F66                     	;# 
  2871  0F67                     	;# 
  2872  0F68                     	;# 
  2873  0F69                     	;# 
  2874  0F6A                     	;# 
  2875  0F6B                     	;# 
  2876  0F6C                     	;# 
  2877  0F6D                     	;# 
  2878  0FE4                     	;# 
  2879  0FE5                     	;# 
  2880  0FE6                     	;# 
  2881  0FE7                     	;# 
  2882  0FE8                     	;# 
  2883  0FE9                     	;# 
  2884  0FEA                     	;# 
  2885  0FEB                     	;# 
  2886  0FED                     	;# 
  2887  0FEE                     	;# 
  2888  0FEF                     	;# 
  2889  0000                     	;# 
  2890  0001                     	;# 
  2891  0002                     	;# 
  2892  0003                     	;# 
  2893  0004                     	;# 
  2894  0005                     	;# 
  2895  0006                     	;# 
  2896  0007                     	;# 
  2897  0008                     	;# 
  2898  0009                     	;# 
  2899  000A                     	;# 
  2900  000B                     	;# 
  2901  000C                     	;# 
  2902  000D                     	;# 
  2903  000E                     	;# 
  2904  000F                     	;# 
  2905  0010                     	;# 
  2906  0011                     	;# 
  2907  0012                     	;# 
  2908  0013                     	;# 
  2909  0014                     	;# 
  2910  0015                     	;# 
  2911  0016                     	;# 
  2912  0017                     	;# 
  2913  0018                     	;# 
  2914  0019                     	;# 
  2915  001A                     	;# 
  2916  001C                     	;# 
  2917  001C                     	;# 
  2918  001D                     	;# 
  2919  001D                     	;# 
  2920  001E                     	;# 
  2921  001F                     	;# 
  2922  008C                     	;# 
  2923  008C                     	;# 
  2924  008D                     	;# 
  2925  008E                     	;# 
  2926  008E                     	;# 
  2927  008F                     	;# 
  2928  0090                     	;# 
  2929  0090                     	;# 
  2930  0091                     	;# 
  2931  0093                     	;# 
  2932  0094                     	;# 
  2933  0095                     	;# 
  2934  0096                     	;# 
  2935  0097                     	;# 
  2936  0098                     	;# 
  2937  0099                     	;# 
  2938  009A                     	;# 
  2939  009B                     	;# 
  2940  009C                     	;# 
  2941  009D                     	;# 
  2942  009E                     	;# 
  2943  010C                     	;# 
  2944  010D                     	;# 
  2945  010E                     	;# 
  2946  010E                     	;# 
  2947  010F                     	;# 
  2948  0110                     	;# 
  2949  0110                     	;# 
  2950  0111                     	;# 
  2951  0112                     	;# 
  2952  0112                     	;# 
  2953  0113                     	;# 
  2954  0114                     	;# 
  2955  0114                     	;# 
  2956  0115                     	;# 
  2957  0116                     	;# 
  2958  0116                     	;# 
  2959  0117                     	;# 
  2960  0119                     	;# 
  2961  0119                     	;# 
  2962  0119                     	;# 
  2963  011A                     	;# 
  2964  011A                     	;# 
  2965  011A                     	;# 
  2966  011B                     	;# 
  2967  011B                     	;# 
  2968  011B                     	;# 
  2969  011B                     	;# 
  2970  011B                     	;# 
  2971  011C                     	;# 
  2972  011C                     	;# 
  2973  011C                     	;# 
  2974  011D                     	;# 
  2975  011D                     	;# 
  2976  011D                     	;# 
  2977  011E                     	;# 
  2978  011E                     	;# 
  2979  011E                     	;# 
  2980  011F                     	;# 
  2981  011F                     	;# 
  2982  011F                     	;# 
  2983  011F                     	;# 
  2984  011F                     	;# 
  2985  018C                     	;# 
  2986  018D                     	;# 
  2987  018E                     	;# 
  2988  018F                     	;# 
  2989  0190                     	;# 
  2990  0191                     	;# 
  2991  0192                     	;# 
  2992  0196                     	;# 
  2993  0197                     	;# 
  2994  0198                     	;# 
  2995  0199                     	;# 
  2996  019A                     	;# 
  2997  019B                     	;# 
  2998  019C                     	;# 
  2999  020C                     	;# 
  3000  020C                     	;# 
  3001  020D                     	;# 
  3002  020E                     	;# 
  3003  020F                     	;# 
  3004  020F                     	;# 
  3005  0210                     	;# 
  3006  0210                     	;# 
  3007  0211                     	;# 
  3008  0211                     	;# 
  3009  0212                     	;# 
  3010  0212                     	;# 
  3011  0213                     	;# 
  3012  0214                     	;# 
  3013  0215                     	;# 
  3014  0215                     	;# 
  3015  0216                     	;# 
  3016  0216                     	;# 
  3017  0217                     	;# 
  3018  0217                     	;# 
  3019  0218                     	;# 
  3020  0218                     	;# 
  3021  0219                     	;# 
  3022  021A                     	;# 
  3023  021B                     	;# 
  3024  021B                     	;# 
  3025  021C                     	;# 
  3026  021C                     	;# 
  3027  021D                     	;# 
  3028  021D                     	;# 
  3029  021E                     	;# 
  3030  021F                     	;# 
  3031  028C                     	;# 
  3032  028C                     	;# 
  3033  028D                     	;# 
  3034  028D                     	;# 
  3035  028E                     	;# 
  3036  028F                     	;# 
  3037  0290                     	;# 
  3038  0290                     	;# 
  3039  0291                     	;# 
  3040  0292                     	;# 
  3041  0292                     	;# 
  3042  0293                     	;# 
  3043  0293                     	;# 
  3044  0294                     	;# 
  3045  0295                     	;# 
  3046  0296                     	;# 
  3047  0296                     	;# 
  3048  0297                     	;# 
  3049  0298                     	;# 
  3050  0298                     	;# 
  3051  0299                     	;# 
  3052  0299                     	;# 
  3053  029A                     	;# 
  3054  029B                     	;# 
  3055  029C                     	;# 
  3056  029C                     	;# 
  3057  029D                     	;# 
  3058  030C                     	;# 
  3059  030C                     	;# 
  3060  030D                     	;# 
  3061  030E                     	;# 
  3062  030F                     	;# 
  3063  0310                     	;# 
  3064  0310                     	;# 
  3065  0311                     	;# 
  3066  0312                     	;# 
  3067  0313                     	;# 
  3068  0314                     	;# 
  3069  0314                     	;# 
  3070  0315                     	;# 
  3071  0316                     	;# 
  3072  0317                     	;# 
  3073  0318                     	;# 
  3074  0318                     	;# 
  3075  0319                     	;# 
  3076  031A                     	;# 
  3077  031B                     	;# 
  3078  031C                     	;# 
  3079  031C                     	;# 
  3080  031D                     	;# 
  3081  031E                     	;# 
  3082  031F                     	;# 
  3083  038C                     	;# 
  3084  038C                     	;# 
  3085  038D                     	;# 
  3086  038E                     	;# 
  3087  0390                     	;# 
  3088  0390                     	;# 
  3089  0391                     	;# 
  3090  0392                     	;# 
  3091  040C                     	;# 
  3092  040D                     	;# 
  3093  040E                     	;# 
  3094  040F                     	;# 
  3095  0410                     	;# 
  3096  0411                     	;# 
  3097  0416                     	;# 
  3098  0416                     	;# 
  3099  0417                     	;# 
  3100  0418                     	;# 
  3101  0418                     	;# 
  3102  0419                     	;# 
  3103  041A                     	;# 
  3104  041A                     	;# 
  3105  041B                     	;# 
  3106  041C                     	;# 
  3107  041C                     	;# 
  3108  041D                     	;# 
  3109  041E                     	;# 
  3110  041F                     	;# 
  3111  048C                     	;# 
  3112  048C                     	;# 
  3113  048D                     	;# 
  3114  048E                     	;# 
  3115  048F                     	;# 
  3116  048F                     	;# 
  3117  0490                     	;# 
  3118  0491                     	;# 
  3119  0492                     	;# 
  3120  0492                     	;# 
  3121  0493                     	;# 
  3122  0494                     	;# 
  3123  0495                     	;# 
  3124  0495                     	;# 
  3125  0496                     	;# 
  3126  0497                     	;# 
  3127  0498                     	;# 
  3128  0499                     	;# 
  3129  049A                     	;# 
  3130  049B                     	;# 
  3131  049C                     	;# 
  3132  049D                     	;# 
  3133  050C                     	;# 
  3134  050C                     	;# 
  3135  050D                     	;# 
  3136  050E                     	;# 
  3137  050F                     	;# 
  3138  050F                     	;# 
  3139  0510                     	;# 
  3140  0511                     	;# 
  3141  0512                     	;# 
  3142  0512                     	;# 
  3143  0513                     	;# 
  3144  0514                     	;# 
  3145  0515                     	;# 
  3146  0515                     	;# 
  3147  0516                     	;# 
  3148  0517                     	;# 
  3149  0518                     	;# 
  3150  0519                     	;# 
  3151  051A                     	;# 
  3152  051B                     	;# 
  3153  051C                     	;# 
  3154  051D                     	;# 
  3155  058C                     	;# 
  3156  058C                     	;# 
  3157  058D                     	;# 
  3158  058E                     	;# 
  3159  058F                     	;# 
  3160  058F                     	;# 
  3161  0590                     	;# 
  3162  0591                     	;# 
  3163  0592                     	;# 
  3164  0593                     	;# 
  3165  060C                     	;# 
  3166  060D                     	;# 
  3167  060E                     	;# 
  3168  060F                     	;# 
  3169  0610                     	;# 
  3170  0611                     	;# 
  3171  0612                     	;# 
  3172  0613                     	;# 
  3173  0614                     	;# 
  3174  0616                     	;# 
  3175  0617                     	;# 
  3176  0618                     	;# 
  3177  0619                     	;# 
  3178  061A                     	;# 
  3179  061B                     	;# 
  3180  061C                     	;# 
  3181  061D                     	;# 
  3182  061E                     	;# 
  3183  068C                     	;# 
  3184  068D                     	;# 
  3185  068E                     	;# 
  3186  068F                     	;# 
  3187  0690                     	;# 
  3188  0691                     	;# 
  3189  0692                     	;# 
  3190  0693                     	;# 
  3191  0694                     	;# 
  3192  070C                     	;# 
  3193  070D                     	;# 
  3194  070E                     	;# 
  3195  070F                     	;# 
  3196  0710                     	;# 
  3197  0711                     	;# 
  3198  0712                     	;# 
  3199  0713                     	;# 
  3200  0714                     	;# 
  3201  0716                     	;# 
  3202  0717                     	;# 
  3203  0718                     	;# 
  3204  0719                     	;# 
  3205  071A                     	;# 
  3206  071B                     	;# 
  3207  071C                     	;# 
  3208  071D                     	;# 
  3209  071E                     	;# 
  3210  0796                     	;# 
  3211  0797                     	;# 
  3212  0798                     	;# 
  3213  0799                     	;# 
  3214  079A                     	;# 
  3215  079B                     	;# 
  3216  080C                     	;# 
  3217  080D                     	;# 
  3218  080E                     	;# 
  3219  080F                     	;# 
  3220  0810                     	;# 
  3221  0811                     	;# 
  3222  0812                     	;# 
  3223  0813                     	;# 
  3224  0814                     	;# 
  3225  081A                     	;# 
  3226  081B                     	;# 
  3227  081C                     	;# 
  3228  081D                     	;# 
  3229  081E                     	;# 
  3230  081F                     	;# 
  3231  088C                     	;# 
  3232  088D                     	;# 
  3233  088E                     	;# 
  3234  088F                     	;# 
  3235  0890                     	;# 
  3236  0891                     	;# 
  3237  0892                     	;# 
  3238  0893                     	;# 
  3239  0895                     	;# 
  3240  0896                     	;# 
  3241  0897                     	;# 
  3242  0898                     	;# 
  3243  0899                     	;# 
  3244  089A                     	;# 
  3245  089B                     	;# 
  3246  090C                     	;# 
  3247  090E                     	;# 
  3248  090F                     	;# 
  3249  091F                     	;# 
  3250  091F                     	;# 
  3251  098F                     	;# 
  3252  098F                     	;# 
  3253  0990                     	;# 
  3254  0991                     	;# 
  3255  0992                     	;# 
  3256  0993                     	;# 
  3257  0994                     	;# 
  3258  0995                     	;# 
  3259  0996                     	;# 
  3260  0997                     	;# 
  3261  0E0F                     	;# 
  3262  0E10                     	;# 
  3263  0E11                     	;# 
  3264  0E12                     	;# 
  3265  0E13                     	;# 
  3266  0E14                     	;# 
  3267  0E15                     	;# 
  3268  0E16                     	;# 
  3269  0E17                     	;# 
  3270  0E18                     	;# 
  3271  0E19                     	;# 
  3272  0E1A                     	;# 
  3273  0E1B                     	;# 
  3274  0E1C                     	;# 
  3275  0E1D                     	;# 
  3276  0E1E                     	;# 
  3277  0E1F                     	;# 
  3278  0E20                     	;# 
  3279  0E21                     	;# 
  3280  0E22                     	;# 
  3281  0E23                     	;# 
  3282  0E24                     	;# 
  3283  0E25                     	;# 
  3284  0E26                     	;# 
  3285  0E27                     	;# 
  3286  0E28                     	;# 
  3287  0E29                     	;# 
  3288  0E2A                     	;# 
  3289  0E2B                     	;# 
  3290  0E2C                     	;# 
  3291  0E2D                     	;# 
  3292  0E2E                     	;# 
  3293  0E2F                     	;# 
  3294  0E30                     	;# 
  3295  0E31                     	;# 
  3296  0E32                     	;# 
  3297  0E33                     	;# 
  3298  0E34                     	;# 
  3299  0E35                     	;# 
  3300  0E36                     	;# 
  3301  0E37                     	;# 
  3302  0E8F                     	;# 
  3303  0E90                     	;# 
  3304  0E91                     	;# 
  3305  0E92                     	;# 
  3306  0E93                     	;# 
  3307  0E94                     	;# 
  3308  0E95                     	;# 
  3309  0E96                     	;# 
  3310  0E97                     	;# 
  3311  0E9C                     	;# 
  3312  0E9D                     	;# 
  3313  0E9E                     	;# 
  3314  0EA1                     	;# 
  3315  0EA2                     	;# 
  3316  0EA3                     	;# 
  3317  0EA4                     	;# 
  3318  0EA5                     	;# 
  3319  0EA9                     	;# 
  3320  0EAA                     	;# 
  3321  0EAB                     	;# 
  3322  0EAC                     	;# 
  3323  0EB1                     	;# 
  3324  0EB2                     	;# 
  3325  0EB3                     	;# 
  3326  0EB8                     	;# 
  3327  0EB9                     	;# 
  3328  0EBA                     	;# 
  3329  0EBB                     	;# 
  3330  0EBC                     	;# 
  3331  0EBD                     	;# 
  3332  0EBE                     	;# 
  3333  0EC3                     	;# 
  3334  0EC5                     	;# 
  3335  0EC6                     	;# 
  3336  0EC7                     	;# 
  3337  0EC8                     	;# 
  3338  0EC9                     	;# 
  3339  0ECA                     	;# 
  3340  0ECB                     	;# 
  3341  0ECC                     	;# 
  3342  0F10                     	;# 
  3343  0F11                     	;# 
  3344  0F12                     	;# 
  3345  0F13                     	;# 
  3346  0F14                     	;# 
  3347  0F15                     	;# 
  3348  0F16                     	;# 
  3349  0F17                     	;# 
  3350  0F18                     	;# 
  3351  0F19                     	;# 
  3352  0F1A                     	;# 
  3353  0F1B                     	;# 
  3354  0F1C                     	;# 
  3355  0F1D                     	;# 
  3356  0F1E                     	;# 
  3357  0F1F                     	;# 
  3358  0F20                     	;# 
  3359  0F21                     	;# 
  3360  0F22                     	;# 
  3361  0F23                     	;# 
  3362  0F24                     	;# 
  3363  0F25                     	;# 
  3364  0F26                     	;# 
  3365  0F27                     	;# 
  3366  0F28                     	;# 
  3367  0F29                     	;# 
  3368  0F2A                     	;# 
  3369  0F2B                     	;# 
  3370  0F2C                     	;# 
  3371  0F2D                     	;# 
  3372  0F2E                     	;# 
  3373  0F2F                     	;# 
  3374  0F30                     	;# 
  3375  0F31                     	;# 
  3376  0F32                     	;# 
  3377  0F38                     	;# 
  3378  0F39                     	;# 
  3379  0F3A                     	;# 
  3380  0F3B                     	;# 
  3381  0F3C                     	;# 
  3382  0F3D                     	;# 
  3383  0F3E                     	;# 
  3384  0F3F                     	;# 
  3385  0F40                     	;# 
  3386  0F41                     	;# 
  3387  0F43                     	;# 
  3388  0F44                     	;# 
  3389  0F45                     	;# 
  3390  0F46                     	;# 
  3391  0F47                     	;# 
  3392  0F48                     	;# 
  3393  0F49                     	;# 
  3394  0F4A                     	;# 
  3395  0F4B                     	;# 
  3396  0F4C                     	;# 
  3397  0F4E                     	;# 
  3398  0F4F                     	;# 
  3399  0F50                     	;# 
  3400  0F51                     	;# 
  3401  0F52                     	;# 
  3402  0F53                     	;# 
  3403  0F54                     	;# 
  3404  0F55                     	;# 
  3405  0F56                     	;# 
  3406  0F57                     	;# 
  3407  0F59                     	;# 
  3408  0F5A                     	;# 
  3409  0F5B                     	;# 
  3410  0F5C                     	;# 
  3411  0F5D                     	;# 
  3412  0F61                     	;# 
  3413  0F62                     	;# 
  3414  0F64                     	;# 
  3415  0F65                     	;# 
  3416  0F66                     	;# 
  3417  0F67                     	;# 
  3418  0F68                     	;# 
  3419  0F69                     	;# 
  3420  0F6A                     	;# 
  3421  0F6B                     	;# 
  3422  0F6C                     	;# 
  3423  0F6D                     	;# 
  3424  0FE4                     	;# 
  3425  0FE5                     	;# 
  3426  0FE6                     	;# 
  3427  0FE7                     	;# 
  3428  0FE8                     	;# 
  3429  0FE9                     	;# 
  3430  0FEA                     	;# 
  3431  0FEB                     	;# 
  3432  0FED                     	;# 
  3433  0FEE                     	;# 
  3434  0FEF                     	;# 
  3435  0000                     	;# 
  3436  0001                     	;# 
  3437  0002                     	;# 
  3438  0003                     	;# 
  3439  0004                     	;# 
  3440  0005                     	;# 
  3441  0006                     	;# 
  3442  0007                     	;# 
  3443  0008                     	;# 
  3444  0009                     	;# 
  3445  000A                     	;# 
  3446  000B                     	;# 
  3447  000C                     	;# 
  3448  000D                     	;# 
  3449  000E                     	;# 
  3450  000F                     	;# 
  3451  0010                     	;# 
  3452  0011                     	;# 
  3453  0012                     	;# 
  3454  0013                     	;# 
  3455  0014                     	;# 
  3456  0015                     	;# 
  3457  0016                     	;# 
  3458  0017                     	;# 
  3459  0018                     	;# 
  3460  0019                     	;# 
  3461  001A                     	;# 
  3462  001C                     	;# 
  3463  001C                     	;# 
  3464  001D                     	;# 
  3465  001D                     	;# 
  3466  001E                     	;# 
  3467  001F                     	;# 
  3468  008C                     	;# 
  3469  008C                     	;# 
  3470  008D                     	;# 
  3471  008E                     	;# 
  3472  008E                     	;# 
  3473  008F                     	;# 
  3474  0090                     	;# 
  3475  0090                     	;# 
  3476  0091                     	;# 
  3477  0093                     	;# 
  3478  0094                     	;# 
  3479  0095                     	;# 
  3480  0096                     	;# 
  3481  0097                     	;# 
  3482  0098                     	;# 
  3483  0099                     	;# 
  3484  009A                     	;# 
  3485  009B                     	;# 
  3486  009C                     	;# 
  3487  009D                     	;# 
  3488  009E                     	;# 
  3489  010C                     	;# 
  3490  010D                     	;# 
  3491  010E                     	;# 
  3492  010E                     	;# 
  3493  010F                     	;# 
  3494  0110                     	;# 
  3495  0110                     	;# 
  3496  0111                     	;# 
  3497  0112                     	;# 
  3498  0112                     	;# 
  3499  0113                     	;# 
  3500  0114                     	;# 
  3501  0114                     	;# 
  3502  0115                     	;# 
  3503  0116                     	;# 
  3504  0116                     	;# 
  3505  0117                     	;# 
  3506  0119                     	;# 
  3507  0119                     	;# 
  3508  0119                     	;# 
  3509  011A                     	;# 
  3510  011A                     	;# 
  3511  011A                     	;# 
  3512  011B                     	;# 
  3513  011B                     	;# 
  3514  011B                     	;# 
  3515  011B                     	;# 
  3516  011B                     	;# 
  3517  011C                     	;# 
  3518  011C                     	;# 
  3519  011C                     	;# 
  3520  011D                     	;# 
  3521  011D                     	;# 
  3522  011D                     	;# 
  3523  011E                     	;# 
  3524  011E                     	;# 
  3525  011E                     	;# 
  3526  011F                     	;# 
  3527  011F                     	;# 
  3528  011F                     	;# 
  3529  011F                     	;# 
  3530  011F                     	;# 
  3531  018C                     	;# 
  3532  018D                     	;# 
  3533  018E                     	;# 
  3534  018F                     	;# 
  3535  0190                     	;# 
  3536  0191                     	;# 
  3537  0192                     	;# 
  3538  0196                     	;# 
  3539  0197                     	;# 
  3540  0198                     	;# 
  3541  0199                     	;# 
  3542  019A                     	;# 
  3543  019B                     	;# 
  3544  019C                     	;# 
  3545  020C                     	;# 
  3546  020C                     	;# 
  3547  020D                     	;# 
  3548  020E                     	;# 
  3549  020F                     	;# 
  3550  020F                     	;# 
  3551  0210                     	;# 
  3552  0210                     	;# 
  3553  0211                     	;# 
  3554  0211                     	;# 
  3555  0212                     	;# 
  3556  0212                     	;# 
  3557  0213                     	;# 
  3558  0214                     	;# 
  3559  0215                     	;# 
  3560  0215                     	;# 
  3561  0216                     	;# 
  3562  0216                     	;# 
  3563  0217                     	;# 
  3564  0217                     	;# 
  3565  0218                     	;# 
  3566  0218                     	;# 
  3567  0219                     	;# 
  3568  021A                     	;# 
  3569  021B                     	;# 
  3570  021B                     	;# 
  3571  021C                     	;# 
  3572  021C                     	;# 
  3573  021D                     	;# 
  3574  021D                     	;# 
  3575  021E                     	;# 
  3576  021F                     	;# 
  3577  028C                     	;# 
  3578  028C                     	;# 
  3579  028D                     	;# 
  3580  028D                     	;# 
  3581  028E                     	;# 
  3582  028F                     	;# 
  3583  0290                     	;# 
  3584  0290                     	;# 
  3585  0291                     	;# 
  3586  0292                     	;# 
  3587  0292                     	;# 
  3588  0293                     	;# 
  3589  0293                     	;# 
  3590  0294                     	;# 
  3591  0295                     	;# 
  3592  0296                     	;# 
  3593  0296                     	;# 
  3594  0297                     	;# 
  3595  0298                     	;# 
  3596  0298                     	;# 
  3597  0299                     	;# 
  3598  0299                     	;# 
  3599  029A                     	;# 
  3600  029B                     	;# 
  3601  029C                     	;# 
  3602  029C                     	;# 
  3603  029D                     	;# 
  3604  030C                     	;# 
  3605  030C                     	;# 
  3606  030D                     	;# 
  3607  030E                     	;# 
  3608  030F                     	;# 
  3609  0310                     	;# 
  3610  0310                     	;# 
  3611  0311                     	;# 
  3612  0312                     	;# 
  3613  0313                     	;# 
  3614  0314                     	;# 
  3615  0314                     	;# 
  3616  0315                     	;# 
  3617  0316                     	;# 
  3618  0317                     	;# 
  3619  0318                     	;# 
  3620  0318                     	;# 
  3621  0319                     	;# 
  3622  031A                     	;# 
  3623  031B                     	;# 
  3624  031C                     	;# 
  3625  031C                     	;# 
  3626  031D                     	;# 
  3627  031E                     	;# 
  3628  031F                     	;# 
  3629  038C                     	;# 
  3630  038C                     	;# 
  3631  038D                     	;# 
  3632  038E                     	;# 
  3633  0390                     	;# 
  3634  0390                     	;# 
  3635  0391                     	;# 
  3636  0392                     	;# 
  3637  040C                     	;# 
  3638  040D                     	;# 
  3639  040E                     	;# 
  3640  040F                     	;# 
  3641  0410                     	;# 
  3642  0411                     	;# 
  3643  0416                     	;# 
  3644  0416                     	;# 
  3645  0417                     	;# 
  3646  0418                     	;# 
  3647  0418                     	;# 
  3648  0419                     	;# 
  3649  041A                     	;# 
  3650  041A                     	;# 
  3651  041B                     	;# 
  3652  041C                     	;# 
  3653  041C                     	;# 
  3654  041D                     	;# 
  3655  041E                     	;# 
  3656  041F                     	;# 
  3657  048C                     	;# 
  3658  048C                     	;# 
  3659  048D                     	;# 
  3660  048E                     	;# 
  3661  048F                     	;# 
  3662  048F                     	;# 
  3663  0490                     	;# 
  3664  0491                     	;# 
  3665  0492                     	;# 
  3666  0492                     	;# 
  3667  0493                     	;# 
  3668  0494                     	;# 
  3669  0495                     	;# 
  3670  0495                     	;# 
  3671  0496                     	;# 
  3672  0497                     	;# 
  3673  0498                     	;# 
  3674  0499                     	;# 
  3675  049A                     	;# 
  3676  049B                     	;# 
  3677  049C                     	;# 
  3678  049D                     	;# 
  3679  050C                     	;# 
  3680  050C                     	;# 
  3681  050D                     	;# 
  3682  050E                     	;# 
  3683  050F                     	;# 
  3684  050F                     	;# 
  3685  0510                     	;# 
  3686  0511                     	;# 
  3687  0512                     	;# 
  3688  0512                     	;# 
  3689  0513                     	;# 
  3690  0514                     	;# 
  3691  0515                     	;# 
  3692  0515                     	;# 
  3693  0516                     	;# 
  3694  0517                     	;# 
  3695  0518                     	;# 
  3696  0519                     	;# 
  3697  051A                     	;# 
  3698  051B                     	;# 
  3699  051C                     	;# 
  3700  051D                     	;# 
  3701  058C                     	;# 
  3702  058C                     	;# 
  3703  058D                     	;# 
  3704  058E                     	;# 
  3705  058F                     	;# 
  3706  058F                     	;# 
  3707  0590                     	;# 
  3708  0591                     	;# 
  3709  0592                     	;# 
  3710  0593                     	;# 
  3711  060C                     	;# 
  3712  060D                     	;# 
  3713  060E                     	;# 
  3714  060F                     	;# 
  3715  0610                     	;# 
  3716  0611                     	;# 
  3717  0612                     	;# 
  3718  0613                     	;# 
  3719  0614                     	;# 
  3720  0616                     	;# 
  3721  0617                     	;# 
  3722  0618                     	;# 
  3723  0619                     	;# 
  3724  061A                     	;# 
  3725  061B                     	;# 
  3726  061C                     	;# 
  3727  061D                     	;# 
  3728  061E                     	;# 
  3729  068C                     	;# 
  3730  068D                     	;# 
  3731  068E                     	;# 
  3732  068F                     	;# 
  3733  0690                     	;# 
  3734  0691                     	;# 
  3735  0692                     	;# 
  3736  0693                     	;# 
  3737  0694                     	;# 
  3738  070C                     	;# 
  3739  070D                     	;# 
  3740  070E                     	;# 
  3741  070F                     	;# 
  3742  0710                     	;# 
  3743  0711                     	;# 
  3744  0712                     	;# 
  3745  0713                     	;# 
  3746  0714                     	;# 
  3747  0716                     	;# 
  3748  0717                     	;# 
  3749  0718                     	;# 
  3750  0719                     	;# 
  3751  071A                     	;# 
  3752  071B                     	;# 
  3753  071C                     	;# 
  3754  071D                     	;# 
  3755  071E                     	;# 
  3756  0796                     	;# 
  3757  0797                     	;# 
  3758  0798                     	;# 
  3759  0799                     	;# 
  3760  079A                     	;# 
  3761  079B                     	;# 
  3762  080C                     	;# 
  3763  080D                     	;# 
  3764  080E                     	;# 
  3765  080F                     	;# 
  3766  0810                     	;# 
  3767  0811                     	;# 
  3768  0812                     	;# 
  3769  0813                     	;# 
  3770  0814                     	;# 
  3771  081A                     	;# 
  3772  081B                     	;# 
  3773  081C                     	;# 
  3774  081D                     	;# 
  3775  081E                     	;# 
  3776  081F                     	;# 
  3777  088C                     	;# 
  3778  088D                     	;# 
  3779  088E                     	;# 
  3780  088F                     	;# 
  3781  0890                     	;# 
  3782  0891                     	;# 
  3783  0892                     	;# 
  3784  0893                     	;# 
  3785  0895                     	;# 
  3786  0896                     	;# 
  3787  0897                     	;# 
  3788  0898                     	;# 
  3789  0899                     	;# 
  3790  089A                     	;# 
  3791  089B                     	;# 
  3792  090C                     	;# 
  3793  090E                     	;# 
  3794  090F                     	;# 
  3795  091F                     	;# 
  3796  091F                     	;# 
  3797  098F                     	;# 
  3798  098F                     	;# 
  3799  0990                     	;# 
  3800  0991                     	;# 
  3801  0992                     	;# 
  3802  0993                     	;# 
  3803  0994                     	;# 
  3804  0995                     	;# 
  3805  0996                     	;# 
  3806  0997                     	;# 
  3807  0E0F                     	;# 
  3808  0E10                     	;# 
  3809  0E11                     	;# 
  3810  0E12                     	;# 
  3811  0E13                     	;# 
  3812  0E14                     	;# 
  3813  0E15                     	;# 
  3814  0E16                     	;# 
  3815  0E17                     	;# 
  3816  0E18                     	;# 
  3817  0E19                     	;# 
  3818  0E1A                     	;# 
  3819  0E1B                     	;# 
  3820  0E1C                     	;# 
  3821  0E1D                     	;# 
  3822  0E1E                     	;# 
  3823  0E1F                     	;# 
  3824  0E20                     	;# 
  3825  0E21                     	;# 
  3826  0E22                     	;# 
  3827  0E23                     	;# 
  3828  0E24                     	;# 
  3829  0E25                     	;# 
  3830  0E26                     	;# 
  3831  0E27                     	;# 
  3832  0E28                     	;# 
  3833  0E29                     	;# 
  3834  0E2A                     	;# 
  3835  0E2B                     	;# 
  3836  0E2C                     	;# 
  3837  0E2D                     	;# 
  3838  0E2E                     	;# 
  3839  0E2F                     	;# 
  3840  0E30                     	;# 
  3841  0E31                     	;# 
  3842  0E32                     	;# 
  3843  0E33                     	;# 
  3844  0E34                     	;# 
  3845  0E35                     	;# 
  3846  0E36                     	;# 
  3847  0E37                     	;# 
  3848  0E8F                     	;# 
  3849  0E90                     	;# 
  3850  0E91                     	;# 
  3851  0E92                     	;# 
  3852  0E93                     	;# 
  3853  0E94                     	;# 
  3854  0E95                     	;# 
  3855  0E96                     	;# 
  3856  0E97                     	;# 
  3857  0E9C                     	;# 
  3858  0E9D                     	;# 
  3859  0E9E                     	;# 
  3860  0EA1                     	;# 
  3861  0EA2                     	;# 
  3862  0EA3                     	;# 
  3863  0EA4                     	;# 
  3864  0EA5                     	;# 
  3865  0EA9                     	;# 
  3866  0EAA                     	;# 
  3867  0EAB                     	;# 
  3868  0EAC                     	;# 
  3869  0EB1                     	;# 
  3870  0EB2                     	;# 
  3871  0EB3                     	;# 
  3872  0EB8                     	;# 
  3873  0EB9                     	;# 
  3874  0EBA                     	;# 
  3875  0EBB                     	;# 
  3876  0EBC                     	;# 
  3877  0EBD                     	;# 
  3878  0EBE                     	;# 
  3879  0EC3                     	;# 
  3880  0EC5                     	;# 
  3881  0EC6                     	;# 
  3882  0EC7                     	;# 
  3883  0EC8                     	;# 
  3884  0EC9                     	;# 
  3885  0ECA                     	;# 
  3886  0ECB                     	;# 
  3887  0ECC                     	;# 
  3888  0F10                     	;# 
  3889  0F11                     	;# 
  3890  0F12                     	;# 
  3891  0F13                     	;# 
  3892  0F14                     	;# 
  3893  0F15                     	;# 
  3894  0F16                     	;# 
  3895  0F17                     	;# 
  3896  0F18                     	;# 
  3897  0F19                     	;# 
  3898  0F1A                     	;# 
  3899  0F1B                     	;# 
  3900  0F1C                     	;# 
  3901  0F1D                     	;# 
  3902  0F1E                     	;# 
  3903  0F1F                     	;# 
  3904  0F20                     	;# 
  3905  0F21                     	;# 
  3906  0F22                     	;# 
  3907  0F23                     	;# 
  3908  0F24                     	;# 
  3909  0F25                     	;# 
  3910  0F26                     	;# 
  3911  0F27                     	;# 
  3912  0F28                     	;# 
  3913  0F29                     	;# 
  3914  0F2A                     	;# 
  3915  0F2B                     	;# 
  3916  0F2C                     	;# 
  3917  0F2D                     	;# 
  3918  0F2E                     	;# 
  3919  0F2F                     	;# 
  3920  0F30                     	;# 
  3921  0F31                     	;# 
  3922  0F32                     	;# 
  3923  0F38                     	;# 
  3924  0F39                     	;# 
  3925  0F3A                     	;# 
  3926  0F3B                     	;# 
  3927  0F3C                     	;# 
  3928  0F3D                     	;# 
  3929  0F3E                     	;# 
  3930  0F3F                     	;# 
  3931  0F40                     	;# 
  3932  0F41                     	;# 
  3933  0F43                     	;# 
  3934  0F44                     	;# 
  3935  0F45                     	;# 
  3936  0F46                     	;# 
  3937  0F47                     	;# 
  3938  0F48                     	;# 
  3939  0F49                     	;# 
  3940  0F4A                     	;# 
  3941  0F4B                     	;# 
  3942  0F4C                     	;# 
  3943  0F4E                     	;# 
  3944  0F4F                     	;# 
  3945  0F50                     	;# 
  3946  0F51                     	;# 
  3947  0F52                     	;# 
  3948  0F53                     	;# 
  3949  0F54                     	;# 
  3950  0F55                     	;# 
  3951  0F56                     	;# 
  3952  0F57                     	;# 
  3953  0F59                     	;# 
  3954  0F5A                     	;# 
  3955  0F5B                     	;# 
  3956  0F5C                     	;# 
  3957  0F5D                     	;# 
  3958  0F61                     	;# 
  3959  0F62                     	;# 
  3960  0F64                     	;# 
  3961  0F65                     	;# 
  3962  0F66                     	;# 
  3963  0F67                     	;# 
  3964  0F68                     	;# 
  3965  0F69                     	;# 
  3966  0F6A                     	;# 
  3967  0F6B                     	;# 
  3968  0F6C                     	;# 
  3969  0F6D                     	;# 
  3970  0FE4                     	;# 
  3971  0FE5                     	;# 
  3972  0FE6                     	;# 
  3973  0FE7                     	;# 
  3974  0FE8                     	;# 
  3975  0FE9                     	;# 
  3976  0FEA                     	;# 
  3977  0FEB                     	;# 
  3978  0FED                     	;# 
  3979  0FEE                     	;# 
  3980  0FEF                     	;# 
  3981  0000                     	;# 
  3982  0001                     	;# 
  3983  0002                     	;# 
  3984  0003                     	;# 
  3985  0004                     	;# 
  3986  0005                     	;# 
  3987  0006                     	;# 
  3988  0007                     	;# 
  3989  0008                     	;# 
  3990  0009                     	;# 
  3991  000A                     	;# 
  3992  000B                     	;# 
  3993  000C                     	;# 
  3994  000D                     	;# 
  3995  000E                     	;# 
  3996  000F                     	;# 
  3997  0010                     	;# 
  3998  0011                     	;# 
  3999  0012                     	;# 
  4000  0013                     	;# 
  4001  0014                     	;# 
  4002  0015                     	;# 
  4003  0016                     	;# 
  4004  0017                     	;# 
  4005  0018                     	;# 
  4006  0019                     	;# 
  4007  001A                     	;# 
  4008  001C                     	;# 
  4009  001C                     	;# 
  4010  001D                     	;# 
  4011  001D                     	;# 
  4012  001E                     	;# 
  4013  001F                     	;# 
  4014  008C                     	;# 
  4015  008C                     	;# 
  4016  008D                     	;# 
  4017  008E                     	;# 
  4018  008E                     	;# 
  4019  008F                     	;# 
  4020  0090                     	;# 
  4021  0090                     	;# 
  4022  0091                     	;# 
  4023  0093                     	;# 
  4024  0094                     	;# 
  4025  0095                     	;# 
  4026  0096                     	;# 
  4027  0097                     	;# 
  4028  0098                     	;# 
  4029  0099                     	;# 
  4030  009A                     	;# 
  4031  009B                     	;# 
  4032  009C                     	;# 
  4033  009D                     	;# 
  4034  009E                     	;# 
  4035  010C                     	;# 
  4036  010D                     	;# 
  4037  010E                     	;# 
  4038  010E                     	;# 
  4039  010F                     	;# 
  4040  0110                     	;# 
  4041  0110                     	;# 
  4042  0111                     	;# 
  4043  0112                     	;# 
  4044  0112                     	;# 
  4045  0113                     	;# 
  4046  0114                     	;# 
  4047  0114                     	;# 
  4048  0115                     	;# 
  4049  0116                     	;# 
  4050  0116                     	;# 
  4051  0117                     	;# 
  4052  0119                     	;# 
  4053  0119                     	;# 
  4054  0119                     	;# 
  4055  011A                     	;# 
  4056  011A                     	;# 
  4057  011A                     	;# 
  4058  011B                     	;# 
  4059  011B                     	;# 
  4060  011B                     	;# 
  4061  011B                     	;# 
  4062  011B                     	;# 
  4063  011C                     	;# 
  4064  011C                     	;# 
  4065  011C                     	;# 
  4066  011D                     	;# 
  4067  011D                     	;# 
  4068  011D                     	;# 
  4069  011E                     	;# 
  4070  011E                     	;# 
  4071  011E                     	;# 
  4072  011F                     	;# 
  4073  011F                     	;# 
  4074  011F                     	;# 
  4075  011F                     	;# 
  4076  011F                     	;# 
  4077  018C                     	;# 
  4078  018D                     	;# 
  4079  018E                     	;# 
  4080  018F                     	;# 
  4081  0190                     	;# 
  4082  0191                     	;# 
  4083  0192                     	;# 
  4084  0196                     	;# 
  4085  0197                     	;# 
  4086  0198                     	;# 
  4087  0199                     	;# 
  4088  019A                     	;# 
  4089  019B                     	;# 
  4090  019C                     	;# 
  4091  020C                     	;# 
  4092  020C                     	;# 
  4093  020D                     	;# 
  4094  020E                     	;# 
  4095  020F                     	;# 
  4096  020F                     	;# 
  4097  0210                     	;# 
  4098  0210                     	;# 
  4099  0211                     	;# 
  4100  0211                     	;# 
  4101  0212                     	;# 
  4102  0212                     	;# 
  4103  0213                     	;# 
  4104  0214                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0216                     	;# 
  4108  0216                     	;# 
  4109  0217                     	;# 
  4110  0217                     	;# 
  4111  0218                     	;# 
  4112  0218                     	;# 
  4113  0219                     	;# 
  4114  021A                     	;# 
  4115  021B                     	;# 
  4116  021B                     	;# 
  4117  021C                     	;# 
  4118  021C                     	;# 
  4119  021D                     	;# 
  4120  021D                     	;# 
  4121  021E                     	;# 
  4122  021F                     	;# 
  4123  028C                     	;# 
  4124  028C                     	;# 
  4125  028D                     	;# 
  4126  028D                     	;# 
  4127  028E                     	;# 
  4128  028F                     	;# 
  4129  0290                     	;# 
  4130  0290                     	;# 
  4131  0291                     	;# 
  4132  0292                     	;# 
  4133  0292                     	;# 
  4134  0293                     	;# 
  4135  0293                     	;# 
  4136  0294                     	;# 
  4137  0295                     	;# 
  4138  0296                     	;# 
  4139  0296                     	;# 
  4140  0297                     	;# 
  4141  0298                     	;# 
  4142  0298                     	;# 
  4143  0299                     	;# 
  4144  0299                     	;# 
  4145  029A                     	;# 
  4146  029B                     	;# 
  4147  029C                     	;# 
  4148  029C                     	;# 
  4149  029D                     	;# 
  4150  030C                     	;# 
  4151  030C                     	;# 
  4152  030D                     	;# 
  4153  030E                     	;# 
  4154  030F                     	;# 
  4155  0310                     	;# 
  4156  0310                     	;# 
  4157  0311                     	;# 
  4158  0312                     	;# 
  4159  0313                     	;# 
  4160  0314                     	;# 
  4161  0314                     	;# 
  4162  0315                     	;# 
  4163  0316                     	;# 
  4164  0317                     	;# 
  4165  0318                     	;# 
  4166  0318                     	;# 
  4167  0319                     	;# 
  4168  031A                     	;# 
  4169  031B                     	;# 
  4170  031C                     	;# 
  4171  031C                     	;# 
  4172  031D                     	;# 
  4173  031E                     	;# 
  4174  031F                     	;# 
  4175  038C                     	;# 
  4176  038C                     	;# 
  4177  038D                     	;# 
  4178  038E                     	;# 
  4179  0390                     	;# 
  4180  0390                     	;# 
  4181  0391                     	;# 
  4182  0392                     	;# 
  4183  040C                     	;# 
  4184  040D                     	;# 
  4185  040E                     	;# 
  4186  040F                     	;# 
  4187  0410                     	;# 
  4188  0411                     	;# 
  4189  0416                     	;# 
  4190  0416                     	;# 
  4191  0417                     	;# 
  4192  0418                     	;# 
  4193  0418                     	;# 
  4194  0419                     	;# 
  4195  041A                     	;# 
  4196  041A                     	;# 
  4197  041B                     	;# 
  4198  041C                     	;# 
  4199  041C                     	;# 
  4200  041D                     	;# 
  4201  041E                     	;# 
  4202  041F                     	;# 
  4203  048C                     	;# 
  4204  048C                     	;# 
  4205  048D                     	;# 
  4206  048E                     	;# 
  4207  048F                     	;# 
  4208  048F                     	;# 
  4209  0490                     	;# 
  4210  0491                     	;# 
  4211  0492                     	;# 
  4212  0492                     	;# 
  4213  0493                     	;# 
  4214  0494                     	;# 
  4215  0495                     	;# 
  4216  0495                     	;# 
  4217  0496                     	;# 
  4218  0497                     	;# 
  4219  0498                     	;# 
  4220  0499                     	;# 
  4221  049A                     	;# 
  4222  049B                     	;# 
  4223  049C                     	;# 
  4224  049D                     	;# 
  4225  050C                     	;# 
  4226  050C                     	;# 
  4227  050D                     	;# 
  4228  050E                     	;# 
  4229  050F                     	;# 
  4230  050F                     	;# 
  4231  0510                     	;# 
  4232  0511                     	;# 
  4233  0512                     	;# 
  4234  0512                     	;# 
  4235  0513                     	;# 
  4236  0514                     	;# 
  4237  0515                     	;# 
  4238  0515                     	;# 
  4239  0516                     	;# 
  4240  0517                     	;# 
  4241  0518                     	;# 
  4242  0519                     	;# 
  4243  051A                     	;# 
  4244  051B                     	;# 
  4245  051C                     	;# 
  4246  051D                     	;# 
  4247  058C                     	;# 
  4248  058C                     	;# 
  4249  058D                     	;# 
  4250  058E                     	;# 
  4251  058F                     	;# 
  4252  058F                     	;# 
  4253  0590                     	;# 
  4254  0591                     	;# 
  4255  0592                     	;# 
  4256  0593                     	;# 
  4257  060C                     	;# 
  4258  060D                     	;# 
  4259  060E                     	;# 
  4260  060F                     	;# 
  4261  0610                     	;# 
  4262  0611                     	;# 
  4263  0612                     	;# 
  4264  0613                     	;# 
  4265  0614                     	;# 
  4266  0616                     	;# 
  4267  0617                     	;# 
  4268  0618                     	;# 
  4269  0619                     	;# 
  4270  061A                     	;# 
  4271  061B                     	;# 
  4272  061C                     	;# 
  4273  061D                     	;# 
  4274  061E                     	;# 
  4275  068C                     	;# 
  4276  068D                     	;# 
  4277  068E                     	;# 
  4278  068F                     	;# 
  4279  0690                     	;# 
  4280  0691                     	;# 
  4281  0692                     	;# 
  4282  0693                     	;# 
  4283  0694                     	;# 
  4284  070C                     	;# 
  4285  070D                     	;# 
  4286  070E                     	;# 
  4287  070F                     	;# 
  4288  0710                     	;# 
  4289  0711                     	;# 
  4290  0712                     	;# 
  4291  0713                     	;# 
  4292  0714                     	;# 
  4293  0716                     	;# 
  4294  0717                     	;# 
  4295  0718                     	;# 
  4296  0719                     	;# 
  4297  071A                     	;# 
  4298  071B                     	;# 
  4299  071C                     	;# 
  4300  071D                     	;# 
  4301  071E                     	;# 
  4302  0796                     	;# 
  4303  0797                     	;# 
  4304  0798                     	;# 
  4305  0799                     	;# 
  4306  079A                     	;# 
  4307  079B                     	;# 
  4308  080C                     	;# 
  4309  080D                     	;# 
  4310  080E                     	;# 
  4311  080F                     	;# 
  4312  0810                     	;# 
  4313  0811                     	;# 
  4314  0812                     	;# 
  4315  0813                     	;# 
  4316  0814                     	;# 
  4317  081A                     	;# 
  4318  081B                     	;# 
  4319  081C                     	;# 
  4320  081D                     	;# 
  4321  081E                     	;# 
  4322  081F                     	;# 
  4323  088C                     	;# 
  4324  088D                     	;# 
  4325  088E                     	;# 
  4326  088F                     	;# 
  4327  0890                     	;# 
  4328  0891                     	;# 
  4329  0892                     	;# 
  4330  0893                     	;# 
  4331  0895                     	;# 
  4332  0896                     	;# 
  4333  0897                     	;# 
  4334  0898                     	;# 
  4335  0899                     	;# 
  4336  089A                     	;# 
  4337  089B                     	;# 
  4338  090C                     	;# 
  4339  090E                     	;# 
  4340  090F                     	;# 
  4341  091F                     	;# 
  4342  091F                     	;# 
  4343  098F                     	;# 
  4344  098F                     	;# 
  4345  0990                     	;# 
  4346  0991                     	;# 
  4347  0992                     	;# 
  4348  0993                     	;# 
  4349  0994                     	;# 
  4350  0995                     	;# 
  4351  0996                     	;# 
  4352  0997                     	;# 
  4353  0E0F                     	;# 
  4354  0E10                     	;# 
  4355  0E11                     	;# 
  4356  0E12                     	;# 
  4357  0E13                     	;# 
  4358  0E14                     	;# 
  4359  0E15                     	;# 
  4360  0E16                     	;# 
  4361  0E17                     	;# 
  4362  0E18                     	;# 
  4363  0E19                     	;# 
  4364  0E1A                     	;# 
  4365  0E1B                     	;# 
  4366  0E1C                     	;# 
  4367  0E1D                     	;# 
  4368  0E1E                     	;# 
  4369  0E1F                     	;# 
  4370  0E20                     	;# 
  4371  0E21                     	;# 
  4372  0E22                     	;# 
  4373  0E23                     	;# 
  4374  0E24                     	;# 
  4375  0E25                     	;# 
  4376  0E26                     	;# 
  4377  0E27                     	;# 
  4378  0E28                     	;# 
  4379  0E29                     	;# 
  4380  0E2A                     	;# 
  4381  0E2B                     	;# 
  4382  0E2C                     	;# 
  4383  0E2D                     	;# 
  4384  0E2E                     	;# 
  4385  0E2F                     	;# 
  4386  0E30                     	;# 
  4387  0E31                     	;# 
  4388  0E32                     	;# 
  4389  0E33                     	;# 
  4390  0E34                     	;# 
  4391  0E35                     	;# 
  4392  0E36                     	;# 
  4393  0E37                     	;# 
  4394  0E8F                     	;# 
  4395  0E90                     	;# 
  4396  0E91                     	;# 
  4397  0E92                     	;# 
  4398  0E93                     	;# 
  4399  0E94                     	;# 
  4400  0E95                     	;# 
  4401  0E96                     	;# 
  4402  0E97                     	;# 
  4403  0E9C                     	;# 
  4404  0E9D                     	;# 
  4405  0E9E                     	;# 
  4406  0EA1                     	;# 
  4407  0EA2                     	;# 
  4408  0EA3                     	;# 
  4409  0EA4                     	;# 
  4410  0EA5                     	;# 
  4411  0EA9                     	;# 
  4412  0EAA                     	;# 
  4413  0EAB                     	;# 
  4414  0EAC                     	;# 
  4415  0EB1                     	;# 
  4416  0EB2                     	;# 
  4417  0EB3                     	;# 
  4418  0EB8                     	;# 
  4419  0EB9                     	;# 
  4420  0EBA                     	;# 
  4421  0EBB                     	;# 
  4422  0EBC                     	;# 
  4423  0EBD                     	;# 
  4424  0EBE                     	;# 
  4425  0EC3                     	;# 
  4426  0EC5                     	;# 
  4427  0EC6                     	;# 
  4428  0EC7                     	;# 
  4429  0EC8                     	;# 
  4430  0EC9                     	;# 
  4431  0ECA                     	;# 
  4432  0ECB                     	;# 
  4433  0ECC                     	;# 
  4434  0F10                     	;# 
  4435  0F11                     	;# 
  4436  0F12                     	;# 
  4437  0F13                     	;# 
  4438  0F14                     	;# 
  4439  0F15                     	;# 
  4440  0F16                     	;# 
  4441  0F17                     	;# 
  4442  0F18                     	;# 
  4443  0F19                     	;# 
  4444  0F1A                     	;# 
  4445  0F1B                     	;# 
  4446  0F1C                     	;# 
  4447  0F1D                     	;# 
  4448  0F1E                     	;# 
  4449  0F1F                     	;# 
  4450  0F20                     	;# 
  4451  0F21                     	;# 
  4452  0F22                     	;# 
  4453  0F23                     	;# 
  4454  0F24                     	;# 
  4455  0F25                     	;# 
  4456  0F26                     	;# 
  4457  0F27                     	;# 
  4458  0F28                     	;# 
  4459  0F29                     	;# 
  4460  0F2A                     	;# 
  4461  0F2B                     	;# 
  4462  0F2C                     	;# 
  4463  0F2D                     	;# 
  4464  0F2E                     	;# 
  4465  0F2F                     	;# 
  4466  0F30                     	;# 
  4467  0F31                     	;# 
  4468  0F32                     	;# 
  4469  0F38                     	;# 
  4470  0F39                     	;# 
  4471  0F3A                     	;# 
  4472  0F3B                     	;# 
  4473  0F3C                     	;# 
  4474  0F3D                     	;# 
  4475  0F3E                     	;# 
  4476  0F3F                     	;# 
  4477  0F40                     	;# 
  4478  0F41                     	;# 
  4479  0F43                     	;# 
  4480  0F44                     	;# 
  4481  0F45                     	;# 
  4482  0F46                     	;# 
  4483  0F47                     	;# 
  4484  0F48                     	;# 
  4485  0F49                     	;# 
  4486  0F4A                     	;# 
  4487  0F4B                     	;# 
  4488  0F4C                     	;# 
  4489  0F4E                     	;# 
  4490  0F4F                     	;# 
  4491  0F50                     	;# 
  4492  0F51                     	;# 
  4493  0F52                     	;# 
  4494  0F53                     	;# 
  4495  0F54                     	;# 
  4496  0F55                     	;# 
  4497  0F56                     	;# 
  4498  0F57                     	;# 
  4499  0F59                     	;# 
  4500  0F5A                     	;# 
  4501  0F5B                     	;# 
  4502  0F5C                     	;# 
  4503  0F5D                     	;# 
  4504  0F61                     	;# 
  4505  0F62                     	;# 
  4506  0F64                     	;# 
  4507  0F65                     	;# 
  4508  0F66                     	;# 
  4509  0F67                     	;# 
  4510  0F68                     	;# 
  4511  0F69                     	;# 
  4512  0F6A                     	;# 
  4513  0F6B                     	;# 
  4514  0F6C                     	;# 
  4515  0F6D                     	;# 
  4516  0FE4                     	;# 
  4517  0FE5                     	;# 
  4518  0FE6                     	;# 
  4519  0FE7                     	;# 
  4520  0FE8                     	;# 
  4521  0FE9                     	;# 
  4522  0FEA                     	;# 
  4523  0FEB                     	;# 
  4524  0FED                     	;# 
  4525  0FEE                     	;# 
  4526  0FEF                     	;# 
  4527  0000                     	;# 
  4528  0001                     	;# 
  4529  0002                     	;# 
  4530  0003                     	;# 
  4531  0004                     	;# 
  4532  0005                     	;# 
  4533  0006                     	;# 
  4534  0007                     	;# 
  4535  0008                     	;# 
  4536  0009                     	;# 
  4537  000A                     	;# 
  4538  000B                     	;# 
  4539  000C                     	;# 
  4540  000D                     	;# 
  4541  000E                     	;# 
  4542  000F                     	;# 
  4543  0010                     	;# 
  4544  0011                     	;# 
  4545  0012                     	;# 
  4546  0013                     	;# 
  4547  0014                     	;# 
  4548  0015                     	;# 
  4549  0016                     	;# 
  4550  0017                     	;# 
  4551  0018                     	;# 
  4552  0019                     	;# 
  4553  001A                     	;# 
  4554  001C                     	;# 
  4555  001C                     	;# 
  4556  001D                     	;# 
  4557  001D                     	;# 
  4558  001E                     	;# 
  4559  001F                     	;# 
  4560  008C                     	;# 
  4561  008C                     	;# 
  4562  008D                     	;# 
  4563  008E                     	;# 
  4564  008E                     	;# 
  4565  008F                     	;# 
  4566  0090                     	;# 
  4567  0090                     	;# 
  4568  0091                     	;# 
  4569  0093                     	;# 
  4570  0094                     	;# 
  4571  0095                     	;# 
  4572  0096                     	;# 
  4573  0097                     	;# 
  4574  0098                     	;# 
  4575  0099                     	;# 
  4576  009A                     	;# 
  4577  009B                     	;# 
  4578  009C                     	;# 
  4579  009D                     	;# 
  4580  009E                     	;# 
  4581  010C                     	;# 
  4582  010D                     	;# 
  4583  010E                     	;# 
  4584  010E                     	;# 
  4585  010F                     	;# 
  4586  0110                     	;# 
  4587  0110                     	;# 
  4588  0111                     	;# 
  4589  0112                     	;# 
  4590  0112                     	;# 
  4591  0113                     	;# 
  4592  0114                     	;# 
  4593  0114                     	;# 
  4594  0115                     	;# 
  4595  0116                     	;# 
  4596  0116                     	;# 
  4597  0117                     	;# 
  4598  0119                     	;# 
  4599  0119                     	;# 
  4600  0119                     	;# 
  4601  011A                     	;# 
  4602  011A                     	;# 
  4603  011A                     	;# 
  4604  011B                     	;# 
  4605  011B                     	;# 
  4606  011B                     	;# 
  4607  011B                     	;# 
  4608  011B                     	;# 
  4609  011C                     	;# 
  4610  011C                     	;# 
  4611  011C                     	;# 
  4612  011D                     	;# 
  4613  011D                     	;# 
  4614  011D                     	;# 
  4615  011E                     	;# 
  4616  011E                     	;# 
  4617  011E                     	;# 
  4618  011F                     	;# 
  4619  011F                     	;# 
  4620  011F                     	;# 
  4621  011F                     	;# 
  4622  011F                     	;# 
  4623  018C                     	;# 
  4624  018D                     	;# 
  4625  018E                     	;# 
  4626  018F                     	;# 
  4627  0190                     	;# 
  4628  0191                     	;# 
  4629  0192                     	;# 
  4630  0196                     	;# 
  4631  0197                     	;# 
  4632  0198                     	;# 
  4633  0199                     	;# 
  4634  019A                     	;# 
  4635  019B                     	;# 
  4636  019C                     	;# 
  4637  020C                     	;# 
  4638  020C                     	;# 
  4639  020D                     	;# 
  4640  020E                     	;# 
  4641  020F                     	;# 
  4642  020F                     	;# 
  4643  0210                     	;# 
  4644  0210                     	;# 
  4645  0211                     	;# 
  4646  0211                     	;# 
  4647  0212                     	;# 
  4648  0212                     	;# 
  4649  0213                     	;# 
  4650  0214                     	;# 
  4651  0215                     	;# 
  4652  0215                     	;# 
  4653  0216                     	;# 
  4654  0216                     	;# 
  4655  0217                     	;# 
  4656  0217                     	;# 
  4657  0218                     	;# 
  4658  0218                     	;# 
  4659  0219                     	;# 
  4660  021A                     	;# 
  4661  021B                     	;# 
  4662  021B                     	;# 
  4663  021C                     	;# 
  4664  021C                     	;# 
  4665  021D                     	;# 
  4666  021D                     	;# 
  4667  021E                     	;# 
  4668  021F                     	;# 
  4669  028C                     	;# 
  4670  028C                     	;# 
  4671  028D                     	;# 
  4672  028D                     	;# 
  4673  028E                     	;# 
  4674  028F                     	;# 
  4675  0290                     	;# 
  4676  0290                     	;# 
  4677  0291                     	;# 
  4678  0292                     	;# 
  4679  0292                     	;# 
  4680  0293                     	;# 
  4681  0293                     	;# 
  4682  0294                     	;# 
  4683  0295                     	;# 
  4684  0296                     	;# 
  4685  0296                     	;# 
  4686  0297                     	;# 
  4687  0298                     	;# 
  4688  0298                     	;# 
  4689  0299                     	;# 
  4690  0299                     	;# 
  4691  029A                     	;# 
  4692  029B                     	;# 
  4693  029C                     	;# 
  4694  029C                     	;# 
  4695  029D                     	;# 
  4696  030C                     	;# 
  4697  030C                     	;# 
  4698  030D                     	;# 
  4699  030E                     	;# 
  4700  030F                     	;# 
  4701  0310                     	;# 
  4702  0310                     	;# 
  4703  0311                     	;# 
  4704  0312                     	;# 
  4705  0313                     	;# 
  4706  0314                     	;# 
  4707  0314                     	;# 
  4708  0315                     	;# 
  4709  0316                     	;# 
  4710  0317                     	;# 
  4711  0318                     	;# 
  4712  0318                     	;# 
  4713  0319                     	;# 
  4714  031A                     	;# 
  4715  031B                     	;# 
  4716  031C                     	;# 
  4717  031C                     	;# 
  4718  031D                     	;# 
  4719  031E                     	;# 
  4720  031F                     	;# 
  4721  038C                     	;# 
  4722  038C                     	;# 
  4723  038D                     	;# 
  4724  038E                     	;# 
  4725  0390                     	;# 
  4726  0390                     	;# 
  4727  0391                     	;# 
  4728  0392                     	;# 
  4729  040C                     	;# 
  4730  040D                     	;# 
  4731  040E                     	;# 
  4732  040F                     	;# 
  4733  0410                     	;# 
  4734  0411                     	;# 
  4735  0416                     	;# 
  4736  0416                     	;# 
  4737  0417                     	;# 
  4738  0418                     	;# 
  4739  0418                     	;# 
  4740  0419                     	;# 
  4741  041A                     	;# 
  4742  041A                     	;# 
  4743  041B                     	;# 
  4744  041C                     	;# 
  4745  041C                     	;# 
  4746  041D                     	;# 
  4747  041E                     	;# 
  4748  041F                     	;# 
  4749  048C                     	;# 
  4750  048C                     	;# 
  4751  048D                     	;# 
  4752  048E                     	;# 
  4753  048F                     	;# 
  4754  048F                     	;# 
  4755  0490                     	;# 
  4756  0491                     	;# 
  4757  0492                     	;# 
  4758  0492                     	;# 
  4759  0493                     	;# 
  4760  0494                     	;# 
  4761  0495                     	;# 
  4762  0495                     	;# 
  4763  0496                     	;# 
  4764  0497                     	;# 
  4765  0498                     	;# 
  4766  0499                     	;# 
  4767  049A                     	;# 
  4768  049B                     	;# 
  4769  049C                     	;# 
  4770  049D                     	;# 
  4771  050C                     	;# 
  4772  050C                     	;# 
  4773  050D                     	;# 
  4774  050E                     	;# 
  4775  050F                     	;# 
  4776  050F                     	;# 
  4777  0510                     	;# 
  4778  0511                     	;# 
  4779  0512                     	;# 
  4780  0512                     	;# 
  4781  0513                     	;# 
  4782  0514                     	;# 
  4783  0515                     	;# 
  4784  0515                     	;# 
  4785  0516                     	;# 
  4786  0517                     	;# 
  4787  0518                     	;# 
  4788  0519                     	;# 
  4789  051A                     	;# 
  4790  051B                     	;# 
  4791  051C                     	;# 
  4792  051D                     	;# 
  4793  058C                     	;# 
  4794  058C                     	;# 
  4795  058D                     	;# 
  4796  058E                     	;# 
  4797  058F                     	;# 
  4798  058F                     	;# 
  4799  0590                     	;# 
  4800  0591                     	;# 
  4801  0592                     	;# 
  4802  0593                     	;# 
  4803  060C                     	;# 
  4804  060D                     	;# 
  4805  060E                     	;# 
  4806  060F                     	;# 
  4807  0610                     	;# 
  4808  0611                     	;# 
  4809  0612                     	;# 
  4810  0613                     	;# 
  4811  0614                     	;# 
  4812  0616                     	;# 
  4813  0617                     	;# 
  4814  0618                     	;# 
  4815  0619                     	;# 
  4816  061A                     	;# 
  4817  061B                     	;# 
  4818  061C                     	;# 
  4819  061D                     	;# 
  4820  061E                     	;# 
  4821  068C                     	;# 
  4822  068D                     	;# 
  4823  068E                     	;# 
  4824  068F                     	;# 
  4825  0690                     	;# 
  4826  0691                     	;# 
  4827  0692                     	;# 
  4828  0693                     	;# 
  4829  0694                     	;# 
  4830  070C                     	;# 
  4831  070D                     	;# 
  4832  070E                     	;# 
  4833  070F                     	;# 
  4834  0710                     	;# 
  4835  0711                     	;# 
  4836  0712                     	;# 
  4837  0713                     	;# 
  4838  0714                     	;# 
  4839  0716                     	;# 
  4840  0717                     	;# 
  4841  0718                     	;# 
  4842  0719                     	;# 
  4843  071A                     	;# 
  4844  071B                     	;# 
  4845  071C                     	;# 
  4846  071D                     	;# 
  4847  071E                     	;# 
  4848  0796                     	;# 
  4849  0797                     	;# 
  4850  0798                     	;# 
  4851  0799                     	;# 
  4852  079A                     	;# 
  4853  079B                     	;# 
  4854  080C                     	;# 
  4855  080D                     	;# 
  4856  080E                     	;# 
  4857  080F                     	;# 
  4858  0810                     	;# 
  4859  0811                     	;# 
  4860  0812                     	;# 
  4861  0813                     	;# 
  4862  0814                     	;# 
  4863  081A                     	;# 
  4864  081B                     	;# 
  4865  081C                     	;# 
  4866  081D                     	;# 
  4867  081E                     	;# 
  4868  081F                     	;# 
  4869  088C                     	;# 
  4870  088D                     	;# 
  4871  088E                     	;# 
  4872  088F                     	;# 
  4873  0890                     	;# 
  4874  0891                     	;# 
  4875  0892                     	;# 
  4876  0893                     	;# 
  4877  0895                     	;# 
  4878  0896                     	;# 
  4879  0897                     	;# 
  4880  0898                     	;# 
  4881  0899                     	;# 
  4882  089A                     	;# 
  4883  089B                     	;# 
  4884  090C                     	;# 
  4885  090E                     	;# 
  4886  090F                     	;# 
  4887  091F                     	;# 
  4888  091F                     	;# 
  4889  098F                     	;# 
  4890  098F                     	;# 
  4891  0990                     	;# 
  4892  0991                     	;# 
  4893  0992                     	;# 
  4894  0993                     	;# 
  4895  0994                     	;# 
  4896  0995                     	;# 
  4897  0996                     	;# 
  4898  0997                     	;# 
  4899  0E0F                     	;# 
  4900  0E10                     	;# 
  4901  0E11                     	;# 
  4902  0E12                     	;# 
  4903  0E13                     	;# 
  4904  0E14                     	;# 
  4905  0E15                     	;# 
  4906  0E16                     	;# 
  4907  0E17                     	;# 
  4908  0E18                     	;# 
  4909  0E19                     	;# 
  4910  0E1A                     	;# 
  4911  0E1B                     	;# 
  4912  0E1C                     	;# 
  4913  0E1D                     	;# 
  4914  0E1E                     	;# 
  4915  0E1F                     	;# 
  4916  0E20                     	;# 
  4917  0E21                     	;# 
  4918  0E22                     	;# 
  4919  0E23                     	;# 
  4920  0E24                     	;# 
  4921  0E25                     	;# 
  4922  0E26                     	;# 
  4923  0E27                     	;# 
  4924  0E28                     	;# 
  4925  0E29                     	;# 
  4926  0E2A                     	;# 
  4927  0E2B                     	;# 
  4928  0E2C                     	;# 
  4929  0E2D                     	;# 
  4930  0E2E                     	;# 
  4931  0E2F                     	;# 
  4932  0E30                     	;# 
  4933  0E31                     	;# 
  4934  0E32                     	;# 
  4935  0E33                     	;# 
  4936  0E34                     	;# 
  4937  0E35                     	;# 
  4938  0E36                     	;# 
  4939  0E37                     	;# 
  4940  0E8F                     	;# 
  4941  0E90                     	;# 
  4942  0E91                     	;# 
  4943  0E92                     	;# 
  4944  0E93                     	;# 
  4945  0E94                     	;# 
  4946  0E95                     	;# 
  4947  0E96                     	;# 
  4948  0E97                     	;# 
  4949  0E9C                     	;# 
  4950  0E9D                     	;# 
  4951  0E9E                     	;# 
  4952  0EA1                     	;# 
  4953  0EA2                     	;# 
  4954  0EA3                     	;# 
  4955  0EA4                     	;# 
  4956  0EA5                     	;# 
  4957  0EA9                     	;# 
  4958  0EAA                     	;# 
  4959  0EAB                     	;# 
  4960  0EAC                     	;# 
  4961  0EB1                     	;# 
  4962  0EB2                     	;# 
  4963  0EB3                     	;# 
  4964  0EB8                     	;# 
  4965  0EB9                     	;# 
  4966  0EBA                     	;# 
  4967  0EBB                     	;# 
  4968  0EBC                     	;# 
  4969  0EBD                     	;# 
  4970  0EBE                     	;# 
  4971  0EC3                     	;# 
  4972  0EC5                     	;# 
  4973  0EC6                     	;# 
  4974  0EC7                     	;# 
  4975  0EC8                     	;# 
  4976  0EC9                     	;# 
  4977  0ECA                     	;# 
  4978  0ECB                     	;# 
  4979  0ECC                     	;# 
  4980  0F10                     	;# 
  4981  0F11                     	;# 
  4982  0F12                     	;# 
  4983  0F13                     	;# 
  4984  0F14                     	;# 
  4985  0F15                     	;# 
  4986  0F16                     	;# 
  4987  0F17                     	;# 
  4988  0F18                     	;# 
  4989  0F19                     	;# 
  4990  0F1A                     	;# 
  4991  0F1B                     	;# 
  4992  0F1C                     	;# 
  4993  0F1D                     	;# 
  4994  0F1E                     	;# 
  4995  0F1F                     	;# 
  4996  0F20                     	;# 
  4997  0F21                     	;# 
  4998  0F22                     	;# 
  4999  0F23                     	;# 
  5000  0F24                     	;# 
  5001  0F25                     	;# 
  5002  0F26                     	;# 
  5003  0F27                     	;# 
  5004  0F28                     	;# 
  5005  0F29                     	;# 
  5006  0F2A                     	;# 
  5007  0F2B                     	;# 
  5008  0F2C                     	;# 
  5009  0F2D                     	;# 
  5010  0F2E                     	;# 
  5011  0F2F                     	;# 
  5012  0F30                     	;# 
  5013  0F31                     	;# 
  5014  0F32                     	;# 
  5015  0F38                     	;# 
  5016  0F39                     	;# 
  5017  0F3A                     	;# 
  5018  0F3B                     	;# 
  5019  0F3C                     	;# 
  5020  0F3D                     	;# 
  5021  0F3E                     	;# 
  5022  0F3F                     	;# 
  5023  0F40                     	;# 
  5024  0F41                     	;# 
  5025  0F43                     	;# 
  5026  0F44                     	;# 
  5027  0F45                     	;# 
  5028  0F46                     	;# 
  5029  0F47                     	;# 
  5030  0F48                     	;# 
  5031  0F49                     	;# 
  5032  0F4A                     	;# 
  5033  0F4B                     	;# 
  5034  0F4C                     	;# 
  5035  0F4E                     	;# 
  5036  0F4F                     	;# 
  5037  0F50                     	;# 
  5038  0F51                     	;# 
  5039  0F52                     	;# 
  5040  0F53                     	;# 
  5041  0F54                     	;# 
  5042  0F55                     	;# 
  5043  0F56                     	;# 
  5044  0F57                     	;# 
  5045  0F59                     	;# 
  5046  0F5A                     	;# 
  5047  0F5B                     	;# 
  5048  0F5C                     	;# 
  5049  0F5D                     	;# 
  5050  0F61                     	;# 
  5051  0F62                     	;# 
  5052  0F64                     	;# 
  5053  0F65                     	;# 
  5054  0F66                     	;# 
  5055  0F67                     	;# 
  5056  0F68                     	;# 
  5057  0F69                     	;# 
  5058  0F6A                     	;# 
  5059  0F6B                     	;# 
  5060  0F6C                     	;# 
  5061  0F6D                     	;# 
  5062  0FE4                     	;# 
  5063  0FE5                     	;# 
  5064  0FE6                     	;# 
  5065  0FE7                     	;# 
  5066  0FE8                     	;# 
  5067  0FE9                     	;# 
  5068  0FEA                     	;# 
  5069  0FEB                     	;# 
  5070  0FED                     	;# 
  5071  0FEE                     	;# 
  5072  0FEF                     	;# 
  5073  0000                     	;# 
  5074  0001                     	;# 
  5075  0002                     	;# 
  5076  0003                     	;# 
  5077  0004                     	;# 
  5078  0005                     	;# 
  5079  0006                     	;# 
  5080  0007                     	;# 
  5081  0008                     	;# 
  5082  0009                     	;# 
  5083  000A                     	;# 
  5084  000B                     	;# 
  5085  000C                     	;# 
  5086  000D                     	;# 
  5087  000E                     	;# 
  5088  000F                     	;# 
  5089  0010                     	;# 
  5090  0011                     	;# 
  5091  0012                     	;# 
  5092  0013                     	;# 
  5093  0014                     	;# 
  5094  0015                     	;# 
  5095  0016                     	;# 
  5096  0017                     	;# 
  5097  0018                     	;# 
  5098  0019                     	;# 
  5099  001A                     	;# 
  5100  001C                     	;# 
  5101  001C                     	;# 
  5102  001D                     	;# 
  5103  001D                     	;# 
  5104  001E                     	;# 
  5105  001F                     	;# 
  5106  008C                     	;# 
  5107  008C                     	;# 
  5108  008D                     	;# 
  5109  008E                     	;# 
  5110  008E                     	;# 
  5111  008F                     	;# 
  5112  0090                     	;# 
  5113  0090                     	;# 
  5114  0091                     	;# 
  5115  0093                     	;# 
  5116  0094                     	;# 
  5117  0095                     	;# 
  5118  0096                     	;# 
  5119  0097                     	;# 
  5120  0098                     	;# 
  5121  0099                     	;# 
  5122  009A                     	;# 
  5123  009B                     	;# 
  5124  009C                     	;# 
  5125  009D                     	;# 
  5126  009E                     	;# 
  5127  010C                     	;# 
  5128  010D                     	;# 
  5129  010E                     	;# 
  5130  010E                     	;# 
  5131  010F                     	;# 
  5132  0110                     	;# 
  5133  0110                     	;# 
  5134  0111                     	;# 
  5135  0112                     	;# 
  5136  0112                     	;# 
  5137  0113                     	;# 
  5138  0114                     	;# 
  5139  0114                     	;# 
  5140  0115                     	;# 
  5141  0116                     	;# 
  5142  0116                     	;# 
  5143  0117                     	;# 
  5144  0119                     	;# 
  5145  0119                     	;# 
  5146  0119                     	;# 
  5147  011A                     	;# 
  5148  011A                     	;# 
  5149  011A                     	;# 
  5150  011B                     	;# 
  5151  011B                     	;# 
  5152  011B                     	;# 
  5153  011B                     	;# 
  5154  011B                     	;# 
  5155  011C                     	;# 
  5156  011C                     	;# 
  5157  011C                     	;# 
  5158  011D                     	;# 
  5159  011D                     	;# 
  5160  011D                     	;# 
  5161  011E                     	;# 
  5162  011E                     	;# 
  5163  011E                     	;# 
  5164  011F                     	;# 
  5165  011F                     	;# 
  5166  011F                     	;# 
  5167  011F                     	;# 
  5168  011F                     	;# 
  5169  018C                     	;# 
  5170  018D                     	;# 
  5171  018E                     	;# 
  5172  018F                     	;# 
  5173  0190                     	;# 
  5174  0191                     	;# 
  5175  0192                     	;# 
  5176  0196                     	;# 
  5177  0197                     	;# 
  5178  0198                     	;# 
  5179  0199                     	;# 
  5180  019A                     	;# 
  5181  019B                     	;# 
  5182  019C                     	;# 
  5183  020C                     	;# 
  5184  020C                     	;# 
  5185  020D                     	;# 
  5186  020E                     	;# 
  5187  020F                     	;# 
  5188  020F                     	;# 
  5189  0210                     	;# 
  5190  0210                     	;# 
  5191  0211                     	;# 
  5192  0211                     	;# 
  5193  0212                     	;# 
  5194  0212                     	;# 
  5195  0213                     	;# 
  5196  0214                     	;# 
  5197  0215                     	;# 
  5198  0215                     	;# 
  5199  0216                     	;# 
  5200  0216                     	;# 
  5201  0217                     	;# 
  5202  0217                     	;# 
  5203  0218                     	;# 
  5204  0218                     	;# 
  5205  0219                     	;# 
  5206  021A                     	;# 
  5207  021B                     	;# 
  5208  021B                     	;# 
  5209  021C                     	;# 
  5210  021C                     	;# 
  5211  021D                     	;# 
  5212  021D                     	;# 
  5213  021E                     	;# 
  5214  021F                     	;# 
  5215  028C                     	;# 
  5216  028C                     	;# 
  5217  028D                     	;# 
  5218  028D                     	;# 
  5219  028E                     	;# 
  5220  028F                     	;# 
  5221  0290                     	;# 
  5222  0290                     	;# 
  5223  0291                     	;# 
  5224  0292                     	;# 
  5225  0292                     	;# 
  5226  0293                     	;# 
  5227  0293                     	;# 
  5228  0294                     	;# 
  5229  0295                     	;# 
  5230  0296                     	;# 
  5231  0296                     	;# 
  5232  0297                     	;# 
  5233  0298                     	;# 
  5234  0298                     	;# 
  5235  0299                     	;# 
  5236  0299                     	;# 
  5237  029A                     	;# 
  5238  029B                     	;# 
  5239  029C                     	;# 
  5240  029C                     	;# 
  5241  029D                     	;# 
  5242  030C                     	;# 
  5243  030C                     	;# 
  5244  030D                     	;# 
  5245  030E                     	;# 
  5246  030F                     	;# 
  5247  0310                     	;# 
  5248  0310                     	;# 
  5249  0311                     	;# 
  5250  0312                     	;# 
  5251  0313                     	;# 
  5252  0314                     	;# 
  5253  0314                     	;# 
  5254  0315                     	;# 
  5255  0316                     	;# 
  5256  0317                     	;# 
  5257  0318                     	;# 
  5258  0318                     	;# 
  5259  0319                     	;# 
  5260  031A                     	;# 
  5261  031B                     	;# 
  5262  031C                     	;# 
  5263  031C                     	;# 
  5264  031D                     	;# 
  5265  031E                     	;# 
  5266  031F                     	;# 
  5267  038C                     	;# 
  5268  038C                     	;# 
  5269  038D                     	;# 
  5270  038E                     	;# 
  5271  0390                     	;# 
  5272  0390                     	;# 
  5273  0391                     	;# 
  5274  0392                     	;# 
  5275  040C                     	;# 
  5276  040D                     	;# 
  5277  040E                     	;# 
  5278  040F                     	;# 
  5279  0410                     	;# 
  5280  0411                     	;# 
  5281  0416                     	;# 
  5282  0416                     	;# 
  5283  0417                     	;# 
  5284  0418                     	;# 
  5285  0418                     	;# 
  5286  0419                     	;# 
  5287  041A                     	;# 
  5288  041A                     	;# 
  5289  041B                     	;# 
  5290  041C                     	;# 
  5291  041C                     	;# 
  5292  041D                     	;# 
  5293  041E                     	;# 
  5294  041F                     	;# 
  5295  048C                     	;# 
  5296  048C                     	;# 
  5297  048D                     	;# 
  5298  048E                     	;# 
  5299  048F                     	;# 
  5300  048F                     	;# 
  5301  0490                     	;# 
  5302  0491                     	;# 
  5303  0492                     	;# 
  5304  0492                     	;# 
  5305  0493                     	;# 
  5306  0494                     	;# 
  5307  0495                     	;# 
  5308  0495                     	;# 
  5309  0496                     	;# 
  5310  0497                     	;# 
  5311  0498                     	;# 
  5312  0499                     	;# 
  5313  049A                     	;# 
  5314  049B                     	;# 
  5315  049C                     	;# 
  5316  049D                     	;# 
  5317  050C                     	;# 
  5318  050C                     	;# 
  5319  050D                     	;# 
  5320  050E                     	;# 
  5321  050F                     	;# 
  5322  050F                     	;# 
  5323  0510                     	;# 
  5324  0511                     	;# 
  5325  0512                     	;# 
  5326  0512                     	;# 
  5327  0513                     	;# 
  5328  0514                     	;# 
  5329  0515                     	;# 
  5330  0515                     	;# 
  5331  0516                     	;# 
  5332  0517                     	;# 
  5333  0518                     	;# 
  5334  0519                     	;# 
  5335  051A                     	;# 
  5336  051B                     	;# 
  5337  051C                     	;# 
  5338  051D                     	;# 
  5339  058C                     	;# 
  5340  058C                     	;# 
  5341  058D                     	;# 
  5342  058E                     	;# 
  5343  058F                     	;# 
  5344  058F                     	;# 
  5345  0590                     	;# 
  5346  0591                     	;# 
  5347  0592                     	;# 
  5348  0593                     	;# 
  5349  060C                     	;# 
  5350  060D                     	;# 
  5351  060E                     	;# 
  5352  060F                     	;# 
  5353  0610                     	;# 
  5354  0611                     	;# 
  5355  0612                     	;# 
  5356  0613                     	;# 
  5357  0614                     	;# 
  5358  0616                     	;# 
  5359  0617                     	;# 
  5360  0618                     	;# 
  5361  0619                     	;# 
  5362  061A                     	;# 
  5363  061B                     	;# 
  5364  061C                     	;# 
  5365  061D                     	;# 
  5366  061E                     	;# 
  5367  068C                     	;# 
  5368  068D                     	;# 
  5369  068E                     	;# 
  5370  068F                     	;# 
  5371  0690                     	;# 
  5372  0691                     	;# 
  5373  0692                     	;# 
  5374  0693                     	;# 
  5375  0694                     	;# 
  5376  070C                     	;# 
  5377  070D                     	;# 
  5378  070E                     	;# 
  5379  070F                     	;# 
  5380  0710                     	;# 
  5381  0711                     	;# 
  5382  0712                     	;# 
  5383  0713                     	;# 
  5384  0714                     	;# 
  5385  0716                     	;# 
  5386  0717                     	;# 
  5387  0718                     	;# 
  5388  0719                     	;# 
  5389  071A                     	;# 
  5390  071B                     	;# 
  5391  071C                     	;# 
  5392  071D                     	;# 
  5393  071E                     	;# 
  5394  0796                     	;# 
  5395  0797                     	;# 
  5396  0798                     	;# 
  5397  0799                     	;# 
  5398  079A                     	;# 
  5399  079B                     	;# 
  5400  080C                     	;# 
  5401  080D                     	;# 
  5402  080E                     	;# 
  5403  080F                     	;# 
  5404  0810                     	;# 
  5405  0811                     	;# 
  5406  0812                     	;# 
  5407  0813                     	;# 
  5408  0814                     	;# 
  5409  081A                     	;# 
  5410  081B                     	;# 
  5411  081C                     	;# 
  5412  081D                     	;# 
  5413  081E                     	;# 
  5414  081F                     	;# 
  5415  088C                     	;# 
  5416  088D                     	;# 
  5417  088E                     	;# 
  5418  088F                     	;# 
  5419  0890                     	;# 
  5420  0891                     	;# 
  5421  0892                     	;# 
  5422  0893                     	;# 
  5423  0895                     	;# 
  5424  0896                     	;# 
  5425  0897                     	;# 
  5426  0898                     	;# 
  5427  0899                     	;# 
  5428  089A                     	;# 
  5429  089B                     	;# 
  5430  090C                     	;# 
  5431  090E                     	;# 
  5432  090F                     	;# 
  5433  091F                     	;# 
  5434  091F                     	;# 
  5435  098F                     	;# 
  5436  098F                     	;# 
  5437  0990                     	;# 
  5438  0991                     	;# 
  5439  0992                     	;# 
  5440  0993                     	;# 
  5441  0994                     	;# 
  5442  0995                     	;# 
  5443  0996                     	;# 
  5444  0997                     	;# 
  5445  0E0F                     	;# 
  5446  0E10                     	;# 
  5447  0E11                     	;# 
  5448  0E12                     	;# 
  5449  0E13                     	;# 
  5450  0E14                     	;# 
  5451  0E15                     	;# 
  5452  0E16                     	;# 
  5453  0E17                     	;# 
  5454  0E18                     	;# 
  5455  0E19                     	;# 
  5456  0E1A                     	;# 
  5457  0E1B                     	;# 
  5458  0E1C                     	;# 
  5459  0E1D                     	;# 
  5460  0E1E                     	;# 
  5461  0E1F                     	;# 
  5462  0E20                     	;# 
  5463  0E21                     	;# 
  5464  0E22                     	;# 
  5465  0E23                     	;# 
  5466  0E24                     	;# 
  5467  0E25                     	;# 
  5468  0E26                     	;# 
  5469  0E27                     	;# 
  5470  0E28                     	;# 
  5471  0E29                     	;# 
  5472  0E2A                     	;# 
  5473  0E2B                     	;# 
  5474  0E2C                     	;# 
  5475  0E2D                     	;# 
  5476  0E2E                     	;# 
  5477  0E2F                     	;# 
  5478  0E30                     	;# 
  5479  0E31                     	;# 
  5480  0E32                     	;# 
  5481  0E33                     	;# 
  5482  0E34                     	;# 
  5483  0E35                     	;# 
  5484  0E36                     	;# 
  5485  0E37                     	;# 
  5486  0E8F                     	;# 
  5487  0E90                     	;# 
  5488  0E91                     	;# 
  5489  0E92                     	;# 
  5490  0E93                     	;# 
  5491  0E94                     	;# 
  5492  0E95                     	;# 
  5493  0E96                     	;# 
  5494  0E97                     	;# 
  5495  0E9C                     	;# 
  5496  0E9D                     	;# 
  5497  0E9E                     	;# 
  5498  0EA1                     	;# 
  5499  0EA2                     	;# 
  5500  0EA3                     	;# 
  5501  0EA4                     	;# 
  5502  0EA5                     	;# 
  5503  0EA9                     	;# 
  5504  0EAA                     	;# 
  5505  0EAB                     	;# 
  5506  0EAC                     	;# 
  5507  0EB1                     	;# 
  5508  0EB2                     	;# 
  5509  0EB3                     	;# 
  5510  0EB8                     	;# 
  5511  0EB9                     	;# 
  5512  0EBA                     	;# 
  5513  0EBB                     	;# 
  5514  0EBC                     	;# 
  5515  0EBD                     	;# 
  5516  0EBE                     	;# 
  5517  0EC3                     	;# 
  5518  0EC5                     	;# 
  5519  0EC6                     	;# 
  5520  0EC7                     	;# 
  5521  0EC8                     	;# 
  5522  0EC9                     	;# 
  5523  0ECA                     	;# 
  5524  0ECB                     	;# 
  5525  0ECC                     	;# 
  5526  0F10                     	;# 
  5527  0F11                     	;# 
  5528  0F12                     	;# 
  5529  0F13                     	;# 
  5530  0F14                     	;# 
  5531  0F15                     	;# 
  5532  0F16                     	;# 
  5533  0F17                     	;# 
  5534  0F18                     	;# 
  5535  0F19                     	;# 
  5536  0F1A                     	;# 
  5537  0F1B                     	;# 
  5538  0F1C                     	;# 
  5539  0F1D                     	;# 
  5540  0F1E                     	;# 
  5541  0F1F                     	;# 
  5542  0F20                     	;# 
  5543  0F21                     	;# 
  5544  0F22                     	;# 
  5545  0F23                     	;# 
  5546  0F24                     	;# 
  5547  0F25                     	;# 
  5548  0F26                     	;# 
  5549  0F27                     	;# 
  5550  0F28                     	;# 
  5551  0F29                     	;# 
  5552  0F2A                     	;# 
  5553  0F2B                     	;# 
  5554  0F2C                     	;# 
  5555  0F2D                     	;# 
  5556  0F2E                     	;# 
  5557  0F2F                     	;# 
  5558  0F30                     	;# 
  5559  0F31                     	;# 
  5560  0F32                     	;# 
  5561  0F38                     	;# 
  5562  0F39                     	;# 
  5563  0F3A                     	;# 
  5564  0F3B                     	;# 
  5565  0F3C                     	;# 
  5566  0F3D                     	;# 
  5567  0F3E                     	;# 
  5568  0F3F                     	;# 
  5569  0F40                     	;# 
  5570  0F41                     	;# 
  5571  0F43                     	;# 
  5572  0F44                     	;# 
  5573  0F45                     	;# 
  5574  0F46                     	;# 
  5575  0F47                     	;# 
  5576  0F48                     	;# 
  5577  0F49                     	;# 
  5578  0F4A                     	;# 
  5579  0F4B                     	;# 
  5580  0F4C                     	;# 
  5581  0F4E                     	;# 
  5582  0F4F                     	;# 
  5583  0F50                     	;# 
  5584  0F51                     	;# 
  5585  0F52                     	;# 
  5586  0F53                     	;# 
  5587  0F54                     	;# 
  5588  0F55                     	;# 
  5589  0F56                     	;# 
  5590  0F57                     	;# 
  5591  0F59                     	;# 
  5592  0F5A                     	;# 
  5593  0F5B                     	;# 
  5594  0F5C                     	;# 
  5595  0F5D                     	;# 
  5596  0F61                     	;# 
  5597  0F62                     	;# 
  5598  0F64                     	;# 
  5599  0F65                     	;# 
  5600  0F66                     	;# 
  5601  0F67                     	;# 
  5602  0F68                     	;# 
  5603  0F69                     	;# 
  5604  0F6A                     	;# 
  5605  0F6B                     	;# 
  5606  0F6C                     	;# 
  5607  0F6D                     	;# 
  5608  0FE4                     	;# 
  5609  0FE5                     	;# 
  5610  0FE6                     	;# 
  5611  0FE7                     	;# 
  5612  0FE8                     	;# 
  5613  0FE9                     	;# 
  5614  0FEA                     	;# 
  5615  0FEB                     	;# 
  5616  0FED                     	;# 
  5617  0FEE                     	;# 
  5618  0FEF                     	;# 
  5619  0000                     	;# 
  5620  0001                     	;# 
  5621  0002                     	;# 
  5622  0003                     	;# 
  5623  0004                     	;# 
  5624  0005                     	;# 
  5625  0006                     	;# 
  5626  0007                     	;# 
  5627  0008                     	;# 
  5628  0009                     	;# 
  5629  000A                     	;# 
  5630  000B                     	;# 
  5631  000C                     	;# 
  5632  000D                     	;# 
  5633  000E                     	;# 
  5634  000F                     	;# 
  5635  0010                     	;# 
  5636  0011                     	;# 
  5637  0012                     	;# 
  5638  0013                     	;# 
  5639  0014                     	;# 
  5640  0015                     	;# 
  5641  0016                     	;# 
  5642  0017                     	;# 
  5643  0018                     	;# 
  5644  0019                     	;# 
  5645  001A                     	;# 
  5646  001C                     	;# 
  5647  001C                     	;# 
  5648  001D                     	;# 
  5649  001D                     	;# 
  5650  001E                     	;# 
  5651  001F                     	;# 
  5652  008C                     	;# 
  5653  008C                     	;# 
  5654  008D                     	;# 
  5655  008E                     	;# 
  5656  008E                     	;# 
  5657  008F                     	;# 
  5658  0090                     	;# 
  5659  0090                     	;# 
  5660  0091                     	;# 
  5661  0093                     	;# 
  5662  0094                     	;# 
  5663  0095                     	;# 
  5664  0096                     	;# 
  5665  0097                     	;# 
  5666  0098                     	;# 
  5667  0099                     	;# 
  5668  009A                     	;# 
  5669  009B                     	;# 
  5670  009C                     	;# 
  5671  009D                     	;# 
  5672  009E                     	;# 
  5673  010C                     	;# 
  5674  010D                     	;# 
  5675  010E                     	;# 
  5676  010E                     	;# 
  5677  010F                     	;# 
  5678  0110                     	;# 
  5679  0110                     	;# 
  5680  0111                     	;# 
  5681  0112                     	;# 
  5682  0112                     	;# 
  5683  0113                     	;# 
  5684  0114                     	;# 
  5685  0114                     	;# 
  5686  0115                     	;# 
  5687  0116                     	;# 
  5688  0116                     	;# 
  5689  0117                     	;# 
  5690  0119                     	;# 
  5691  0119                     	;# 
  5692  0119                     	;# 
  5693  011A                     	;# 
  5694  011A                     	;# 
  5695  011A                     	;# 
  5696  011B                     	;# 
  5697  011B                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011C                     	;# 
  5702  011C                     	;# 
  5703  011C                     	;# 
  5704  011D                     	;# 
  5705  011D                     	;# 
  5706  011D                     	;# 
  5707  011E                     	;# 
  5708  011E                     	;# 
  5709  011E                     	;# 
  5710  011F                     	;# 
  5711  011F                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  018C                     	;# 
  5716  018D                     	;# 
  5717  018E                     	;# 
  5718  018F                     	;# 
  5719  0190                     	;# 
  5720  0191                     	;# 
  5721  0192                     	;# 
  5722  0196                     	;# 
  5723  0197                     	;# 
  5724  0198                     	;# 
  5725  0199                     	;# 
  5726  019A                     	;# 
  5727  019B                     	;# 
  5728  019C                     	;# 
  5729  020C                     	;# 
  5730  020C                     	;# 
  5731  020D                     	;# 
  5732  020E                     	;# 
  5733  020F                     	;# 
  5734  020F                     	;# 
  5735  0210                     	;# 
  5736  0210                     	;# 
  5737  0211                     	;# 
  5738  0211                     	;# 
  5739  0212                     	;# 
  5740  0212                     	;# 
  5741  0213                     	;# 
  5742  0214                     	;# 
  5743  0215                     	;# 
  5744  0215                     	;# 
  5745  0216                     	;# 
  5746  0216                     	;# 
  5747  0217                     	;# 
  5748  0217                     	;# 
  5749  0218                     	;# 
  5750  0218                     	;# 
  5751  0219                     	;# 
  5752  021A                     	;# 
  5753  021B                     	;# 
  5754  021B                     	;# 
  5755  021C                     	;# 
  5756  021C                     	;# 
  5757  021D                     	;# 
  5758  021D                     	;# 
  5759  021E                     	;# 
  5760  021F                     	;# 
  5761  028C                     	;# 
  5762  028C                     	;# 
  5763  028D                     	;# 
  5764  028D                     	;# 
  5765  028E                     	;# 
  5766  028F                     	;# 
  5767  0290                     	;# 
  5768  0290                     	;# 
  5769  0291                     	;# 
  5770  0292                     	;# 
  5771  0292                     	;# 
  5772  0293                     	;# 
  5773  0293                     	;# 
  5774  0294                     	;# 
  5775  0295                     	;# 
  5776  0296                     	;# 
  5777  0296                     	;# 
  5778  0297                     	;# 
  5779  0298                     	;# 
  5780  0298                     	;# 
  5781  0299                     	;# 
  5782  0299                     	;# 
  5783  029A                     	;# 
  5784  029B                     	;# 
  5785  029C                     	;# 
  5786  029C                     	;# 
  5787  029D                     	;# 
  5788  030C                     	;# 
  5789  030C                     	;# 
  5790  030D                     	;# 
  5791  030E                     	;# 
  5792  030F                     	;# 
  5793  0310                     	;# 
  5794  0310                     	;# 
  5795  0311                     	;# 
  5796  0312                     	;# 
  5797  0313                     	;# 
  5798  0314                     	;# 
  5799  0314                     	;# 
  5800  0315                     	;# 
  5801  0316                     	;# 
  5802  0317                     	;# 
  5803  0318                     	;# 
  5804  0318                     	;# 
  5805  0319                     	;# 
  5806  031A                     	;# 
  5807  031B                     	;# 
  5808  031C                     	;# 
  5809  031C                     	;# 
  5810  031D                     	;# 
  5811  031E                     	;# 
  5812  031F                     	;# 
  5813  038C                     	;# 
  5814  038C                     	;# 
  5815  038D                     	;# 
  5816  038E                     	;# 
  5817  0390                     	;# 
  5818  0390                     	;# 
  5819  0391                     	;# 
  5820  0392                     	;# 
  5821  040C                     	;# 
  5822  040D                     	;# 
  5823  040E                     	;# 
  5824  040F                     	;# 
  5825  0410                     	;# 
  5826  0411                     	;# 
  5827  0416                     	;# 
  5828  0416                     	;# 
  5829  0417                     	;# 
  5830  0418                     	;# 
  5831  0418                     	;# 
  5832  0419                     	;# 
  5833  041A                     	;# 
  5834  041A                     	;# 
  5835  041B                     	;# 
  5836  041C                     	;# 
  5837  041C                     	;# 
  5838  041D                     	;# 
  5839  041E                     	;# 
  5840  041F                     	;# 
  5841  048C                     	;# 
  5842  048C                     	;# 
  5843  048D                     	;# 
  5844  048E                     	;# 
  5845  048F                     	;# 
  5846  048F                     	;# 
  5847  0490                     	;# 
  5848  0491                     	;# 
  5849  0492                     	;# 
  5850  0492                     	;# 
  5851  0493                     	;# 
  5852  0494                     	;# 
  5853  0495                     	;# 
  5854  0495                     	;# 
  5855  0496                     	;# 
  5856  0497                     	;# 
  5857  0498                     	;# 
  5858  0499                     	;# 
  5859  049A                     	;# 
  5860  049B                     	;# 
  5861  049C                     	;# 
  5862  049D                     	;# 
  5863  050C                     	;# 
  5864  050C                     	;# 
  5865  050D                     	;# 
  5866  050E                     	;# 
  5867  050F                     	;# 
  5868  050F                     	;# 
  5869  0510                     	;# 
  5870  0511                     	;# 
  5871  0512                     	;# 
  5872  0512                     	;# 
  5873  0513                     	;# 
  5874  0514                     	;# 
  5875  0515                     	;# 
  5876  0515                     	;# 
  5877  0516                     	;# 
  5878  0517                     	;# 
  5879  0518                     	;# 
  5880  0519                     	;# 
  5881  051A                     	;# 
  5882  051B                     	;# 
  5883  051C                     	;# 
  5884  051D                     	;# 
  5885  058C                     	;# 
  5886  058C                     	;# 
  5887  058D                     	;# 
  5888  058E                     	;# 
  5889  058F                     	;# 
  5890  058F                     	;# 
  5891  0590                     	;# 
  5892  0591                     	;# 
  5893  0592                     	;# 
  5894  0593                     	;# 
  5895  060C                     	;# 
  5896  060D                     	;# 
  5897  060E                     	;# 
  5898  060F                     	;# 
  5899  0610                     	;# 
  5900  0611                     	;# 
  5901  0612                     	;# 
  5902  0613                     	;# 
  5903  0614                     	;# 
  5904  0616                     	;# 
  5905  0617                     	;# 
  5906  0618                     	;# 
  5907  0619                     	;# 
  5908  061A                     	;# 
  5909  061B                     	;# 
  5910  061C                     	;# 
  5911  061D                     	;# 
  5912  061E                     	;# 
  5913  068C                     	;# 
  5914  068D                     	;# 
  5915  068E                     	;# 
  5916  068F                     	;# 
  5917  0690                     	;# 
  5918  0691                     	;# 
  5919  0692                     	;# 
  5920  0693                     	;# 
  5921  0694                     	;# 
  5922  070C                     	;# 
  5923  070D                     	;# 
  5924  070E                     	;# 
  5925  070F                     	;# 
  5926  0710                     	;# 
  5927  0711                     	;# 
  5928  0712                     	;# 
  5929  0713                     	;# 
  5930  0714                     	;# 
  5931  0716                     	;# 
  5932  0717                     	;# 
  5933  0718                     	;# 
  5934  0719                     	;# 
  5935  071A                     	;# 
  5936  071B                     	;# 
  5937  071C                     	;# 
  5938  071D                     	;# 
  5939  071E                     	;# 
  5940  0796                     	;# 
  5941  0797                     	;# 
  5942  0798                     	;# 
  5943  0799                     	;# 
  5944  079A                     	;# 
  5945  079B                     	;# 
  5946  080C                     	;# 
  5947  080D                     	;# 
  5948  080E                     	;# 
  5949  080F                     	;# 
  5950  0810                     	;# 
  5951  0811                     	;# 
  5952  0812                     	;# 
  5953  0813                     	;# 
  5954  0814                     	;# 
  5955  081A                     	;# 
  5956  081B                     	;# 
  5957  081C                     	;# 
  5958  081D                     	;# 
  5959  081E                     	;# 
  5960  081F                     	;# 
  5961  088C                     	;# 
  5962  088D                     	;# 
  5963  088E                     	;# 
  5964  088F                     	;# 
  5965  0890                     	;# 
  5966  0891                     	;# 
  5967  0892                     	;# 
  5968  0893                     	;# 
  5969  0895                     	;# 
  5970  0896                     	;# 
  5971  0897                     	;# 
  5972  0898                     	;# 
  5973  0899                     	;# 
  5974  089A                     	;# 
  5975  089B                     	;# 
  5976  090C                     	;# 
  5977  090E                     	;# 
  5978  090F                     	;# 
  5979  091F                     	;# 
  5980  091F                     	;# 
  5981  098F                     	;# 
  5982  098F                     	;# 
  5983  0990                     	;# 
  5984  0991                     	;# 
  5985  0992                     	;# 
  5986  0993                     	;# 
  5987  0994                     	;# 
  5988  0995                     	;# 
  5989  0996                     	;# 
  5990  0997                     	;# 
  5991  0E0F                     	;# 
  5992  0E10                     	;# 
  5993  0E11                     	;# 
  5994  0E12                     	;# 
  5995  0E13                     	;# 
  5996  0E14                     	;# 
  5997  0E15                     	;# 
  5998  0E16                     	;# 
  5999  0E17                     	;# 
  6000  0E18                     	;# 
  6001  0E19                     	;# 
  6002  0E1A                     	;# 
  6003  0E1B                     	;# 
  6004  0E1C                     	;# 
  6005  0E1D                     	;# 
  6006  0E1E                     	;# 
  6007  0E1F                     	;# 
  6008  0E20                     	;# 
  6009  0E21                     	;# 
  6010  0E22                     	;# 
  6011  0E23                     	;# 
  6012  0E24                     	;# 
  6013  0E25                     	;# 
  6014  0E26                     	;# 
  6015  0E27                     	;# 
  6016  0E28                     	;# 
  6017  0E29                     	;# 
  6018  0E2A                     	;# 
  6019  0E2B                     	;# 
  6020  0E2C                     	;# 
  6021  0E2D                     	;# 
  6022  0E2E                     	;# 
  6023  0E2F                     	;# 
  6024  0E30                     	;# 
  6025  0E31                     	;# 
  6026  0E32                     	;# 
  6027  0E33                     	;# 
  6028  0E34                     	;# 
  6029  0E35                     	;# 
  6030  0E36                     	;# 
  6031  0E37                     	;# 
  6032  0E8F                     	;# 
  6033  0E90                     	;# 
  6034  0E91                     	;# 
  6035  0E92                     	;# 
  6036  0E93                     	;# 
  6037  0E94                     	;# 
  6038  0E95                     	;# 
  6039  0E96                     	;# 
  6040  0E97                     	;# 
  6041  0E9C                     	;# 
  6042  0E9D                     	;# 
  6043  0E9E                     	;# 
  6044  0EA1                     	;# 
  6045  0EA2                     	;# 
  6046  0EA3                     	;# 
  6047  0EA4                     	;# 
  6048  0EA5                     	;# 
  6049  0EA9                     	;# 
  6050  0EAA                     	;# 
  6051  0EAB                     	;# 
  6052  0EAC                     	;# 
  6053  0EB1                     	;# 
  6054  0EB2                     	;# 
  6055  0EB3                     	;# 
  6056  0EB8                     	;# 
  6057  0EB9                     	;# 
  6058  0EBA                     	;# 
  6059  0EBB                     	;# 
  6060  0EBC                     	;# 
  6061  0EBD                     	;# 
  6062  0EBE                     	;# 
  6063  0EC3                     	;# 
  6064  0EC5                     	;# 
  6065  0EC6                     	;# 
  6066  0EC7                     	;# 
  6067  0EC8                     	;# 
  6068  0EC9                     	;# 
  6069  0ECA                     	;# 
  6070  0ECB                     	;# 
  6071  0ECC                     	;# 
  6072  0F10                     	;# 
  6073  0F11                     	;# 
  6074  0F12                     	;# 
  6075  0F13                     	;# 
  6076  0F14                     	;# 
  6077  0F15                     	;# 
  6078  0F16                     	;# 
  6079  0F17                     	;# 
  6080  0F18                     	;# 
  6081  0F19                     	;# 
  6082  0F1A                     	;# 
  6083  0F1B                     	;# 
  6084  0F1C                     	;# 
  6085  0F1D                     	;# 
  6086  0F1E                     	;# 
  6087  0F1F                     	;# 
  6088  0F20                     	;# 
  6089  0F21                     	;# 
  6090  0F22                     	;# 
  6091  0F23                     	;# 
  6092  0F24                     	;# 
  6093  0F25                     	;# 
  6094  0F26                     	;# 
  6095  0F27                     	;# 
  6096  0F28                     	;# 
  6097  0F29                     	;# 
  6098  0F2A                     	;# 
  6099  0F2B                     	;# 
  6100  0F2C                     	;# 
  6101  0F2D                     	;# 
  6102  0F2E                     	;# 
  6103  0F2F                     	;# 
  6104  0F30                     	;# 
  6105  0F31                     	;# 
  6106  0F32                     	;# 
  6107  0F38                     	;# 
  6108  0F39                     	;# 
  6109  0F3A                     	;# 
  6110  0F3B                     	;# 
  6111  0F3C                     	;# 
  6112  0F3D                     	;# 
  6113  0F3E                     	;# 
  6114  0F3F                     	;# 
  6115  0F40                     	;# 
  6116  0F41                     	;# 
  6117  0F43                     	;# 
  6118  0F44                     	;# 
  6119  0F45                     	;# 
  6120  0F46                     	;# 
  6121  0F47                     	;# 
  6122  0F48                     	;# 
  6123  0F49                     	;# 
  6124  0F4A                     	;# 
  6125  0F4B                     	;# 
  6126  0F4C                     	;# 
  6127  0F4E                     	;# 
  6128  0F4F                     	;# 
  6129  0F50                     	;# 
  6130  0F51                     	;# 
  6131  0F52                     	;# 
  6132  0F53                     	;# 
  6133  0F54                     	;# 
  6134  0F55                     	;# 
  6135  0F56                     	;# 
  6136  0F57                     	;# 
  6137  0F59                     	;# 
  6138  0F5A                     	;# 
  6139  0F5B                     	;# 
  6140  0F5C                     	;# 
  6141  0F5D                     	;# 
  6142  0F61                     	;# 
  6143  0F62                     	;# 
  6144  0F64                     	;# 
  6145  0F65                     	;# 
  6146  0F66                     	;# 
  6147  0F67                     	;# 
  6148  0F68                     	;# 
  6149  0F69                     	;# 
  6150  0F6A                     	;# 
  6151  0F6B                     	;# 
  6152  0F6C                     	;# 
  6153  0F6D                     	;# 
  6154  0FE4                     	;# 
  6155  0FE5                     	;# 
  6156  0FE6                     	;# 
  6157  0FE7                     	;# 
  6158  0FE8                     	;# 
  6159  0FE9                     	;# 
  6160  0FEA                     	;# 
  6161  0FEB                     	;# 
  6162  0FED                     	;# 
  6163  0FEE                     	;# 
  6164  0FEF                     	;# 
  6165  0000                     	;# 
  6166  0001                     	;# 
  6167  0002                     	;# 
  6168  0003                     	;# 
  6169  0004                     	;# 
  6170  0005                     	;# 
  6171  0006                     	;# 
  6172  0007                     	;# 
  6173  0008                     	;# 
  6174  0009                     	;# 
  6175  000A                     	;# 
  6176  000B                     	;# 
  6177  000C                     	;# 
  6178  000D                     	;# 
  6179  000E                     	;# 
  6180  000F                     	;# 
  6181  0010                     	;# 
  6182  0011                     	;# 
  6183  0012                     	;# 
  6184  0013                     	;# 
  6185  0014                     	;# 
  6186  0015                     	;# 
  6187  0016                     	;# 
  6188  0017                     	;# 
  6189  0018                     	;# 
  6190  0019                     	;# 
  6191  001A                     	;# 
  6192  001C                     	;# 
  6193  001C                     	;# 
  6194  001D                     	;# 
  6195  001D                     	;# 
  6196  001E                     	;# 
  6197  001F                     	;# 
  6198  008C                     	;# 
  6199  008C                     	;# 
  6200  008D                     	;# 
  6201  008E                     	;# 
  6202  008E                     	;# 
  6203  008F                     	;# 
  6204  0090                     	;# 
  6205  0090                     	;# 
  6206  0091                     	;# 
  6207  0093                     	;# 
  6208  0094                     	;# 
  6209  0095                     	;# 
  6210  0096                     	;# 
  6211  0097                     	;# 
  6212  0098                     	;# 
  6213  0099                     	;# 
  6214  009A                     	;# 
  6215  009B                     	;# 
  6216  009C                     	;# 
  6217  009D                     	;# 
  6218  009E                     	;# 
  6219  010C                     	;# 
  6220  010D                     	;# 
  6221  010E                     	;# 
  6222  010E                     	;# 
  6223  010F                     	;# 
  6224  0110                     	;# 
  6225  0110                     	;# 
  6226  0111                     	;# 
  6227  0112                     	;# 
  6228  0112                     	;# 
  6229  0113                     	;# 
  6230  0114                     	;# 
  6231  0114                     	;# 
  6232  0115                     	;# 
  6233  0116                     	;# 
  6234  0116                     	;# 
  6235  0117                     	;# 
  6236  0119                     	;# 
  6237  0119                     	;# 
  6238  0119                     	;# 
  6239  011A                     	;# 
  6240  011A                     	;# 
  6241  011A                     	;# 
  6242  011B                     	;# 
  6243  011B                     	;# 
  6244  011B                     	;# 
  6245  011B                     	;# 
  6246  011B                     	;# 
  6247  011C                     	;# 
  6248  011C                     	;# 
  6249  011C                     	;# 
  6250  011D                     	;# 
  6251  011D                     	;# 
  6252  011D                     	;# 
  6253  011E                     	;# 
  6254  011E                     	;# 
  6255  011E                     	;# 
  6256  011F                     	;# 
  6257  011F                     	;# 
  6258  011F                     	;# 
  6259  011F                     	;# 
  6260  011F                     	;# 
  6261  018C                     	;# 
  6262  018D                     	;# 
  6263  018E                     	;# 
  6264  018F                     	;# 
  6265  0190                     	;# 
  6266  0191                     	;# 
  6267  0192                     	;# 
  6268  0196                     	;# 
  6269  0197                     	;# 
  6270  0198                     	;# 
  6271  0199                     	;# 
  6272  019A                     	;# 
  6273  019B                     	;# 
  6274  019C                     	;# 
  6275  020C                     	;# 
  6276  020C                     	;# 
  6277  020D                     	;# 
  6278  020E                     	;# 
  6279  020F                     	;# 
  6280  020F                     	;# 
  6281  0210                     	;# 
  6282  0210                     	;# 
  6283  0211                     	;# 
  6284  0211                     	;# 
  6285  0212                     	;# 
  6286  0212                     	;# 
  6287  0213                     	;# 
  6288  0214                     	;# 
  6289  0215                     	;# 
  6290  0215                     	;# 
  6291  0216                     	;# 
  6292  0216                     	;# 
  6293  0217                     	;# 
  6294  0217                     	;# 
  6295  0218                     	;# 
  6296  0218                     	;# 
  6297  0219                     	;# 
  6298  021A                     	;# 
  6299  021B                     	;# 
  6300  021B                     	;# 
  6301  021C                     	;# 
  6302  021C                     	;# 
  6303  021D                     	;# 
  6304  021D                     	;# 
  6305  021E                     	;# 
  6306  021F                     	;# 
  6307  028C                     	;# 
  6308  028C                     	;# 
  6309  028D                     	;# 
  6310  028D                     	;# 
  6311  028E                     	;# 
  6312  028F                     	;# 
  6313  0290                     	;# 
  6314  0290                     	;# 
  6315  0291                     	;# 
  6316  0292                     	;# 
  6317  0292                     	;# 
  6318  0293                     	;# 
  6319  0293                     	;# 
  6320  0294                     	;# 
  6321  0295                     	;# 
  6322  0296                     	;# 
  6323  0296                     	;# 
  6324  0297                     	;# 
  6325  0298                     	;# 
  6326  0298                     	;# 
  6327  0299                     	;# 
  6328  0299                     	;# 
  6329  029A                     	;# 
  6330  029B                     	;# 
  6331  029C                     	;# 
  6332  029C                     	;# 
  6333  029D                     	;# 
  6334  030C                     	;# 
  6335  030C                     	;# 
  6336  030D                     	;# 
  6337  030E                     	;# 
  6338  030F                     	;# 
  6339  0310                     	;# 
  6340  0310                     	;# 
  6341  0311                     	;# 
  6342  0312                     	;# 
  6343  0313                     	;# 
  6344  0314                     	;# 
  6345  0314                     	;# 
  6346  0315                     	;# 
  6347  0316                     	;# 
  6348  0317                     	;# 
  6349  0318                     	;# 
  6350  0318                     	;# 
  6351  0319                     	;# 
  6352  031A                     	;# 
  6353  031B                     	;# 
  6354  031C                     	;# 
  6355  031C                     	;# 
  6356  031D                     	;# 
  6357  031E                     	;# 
  6358  031F                     	;# 
  6359  038C                     	;# 
  6360  038C                     	;# 
  6361  038D                     	;# 
  6362  038E                     	;# 
  6363  0390                     	;# 
  6364  0390                     	;# 
  6365  0391                     	;# 
  6366  0392                     	;# 
  6367  040C                     	;# 
  6368  040D                     	;# 
  6369  040E                     	;# 
  6370  040F                     	;# 
  6371  0410                     	;# 
  6372  0411                     	;# 
  6373  0416                     	;# 
  6374  0416                     	;# 
  6375  0417                     	;# 
  6376  0418                     	;# 
  6377  0418                     	;# 
  6378  0419                     	;# 
  6379  041A                     	;# 
  6380  041A                     	;# 
  6381  041B                     	;# 
  6382  041C                     	;# 
  6383  041C                     	;# 
  6384  041D                     	;# 
  6385  041E                     	;# 
  6386  041F                     	;# 
  6387  048C                     	;# 
  6388  048C                     	;# 
  6389  048D                     	;# 
  6390  048E                     	;# 
  6391  048F                     	;# 
  6392  048F                     	;# 
  6393  0490                     	;# 
  6394  0491                     	;# 
  6395  0492                     	;# 
  6396  0492                     	;# 
  6397  0493                     	;# 
  6398  0494                     	;# 
  6399  0495                     	;# 
  6400  0495                     	;# 
  6401  0496                     	;# 
  6402  0497                     	;# 
  6403  0498                     	;# 
  6404  0499                     	;# 
  6405  049A                     	;# 
  6406  049B                     	;# 
  6407  049C                     	;# 
  6408  049D                     	;# 
  6409  050C                     	;# 
  6410  050C                     	;# 
  6411  050D                     	;# 
  6412  050E                     	;# 
  6413  050F                     	;# 
  6414  050F                     	;# 
  6415  0510                     	;# 
  6416  0511                     	;# 
  6417  0512                     	;# 
  6418  0512                     	;# 
  6419  0513                     	;# 
  6420  0514                     	;# 
  6421  0515                     	;# 
  6422  0515                     	;# 
  6423  0516                     	;# 
  6424  0517                     	;# 
  6425  0518                     	;# 
  6426  0519                     	;# 
  6427  051A                     	;# 
  6428  051B                     	;# 
  6429  051C                     	;# 
  6430  051D                     	;# 
  6431  058C                     	;# 
  6432  058C                     	;# 
  6433  058D                     	;# 
  6434  058E                     	;# 
  6435  058F                     	;# 
  6436  058F                     	;# 
  6437  0590                     	;# 
  6438  0591                     	;# 
  6439  0592                     	;# 
  6440  0593                     	;# 
  6441  060C                     	;# 
  6442  060D                     	;# 
  6443  060E                     	;# 
  6444  060F                     	;# 
  6445  0610                     	;# 
  6446  0611                     	;# 
  6447  0612                     	;# 
  6448  0613                     	;# 
  6449  0614                     	;# 
  6450  0616                     	;# 
  6451  0617                     	;# 
  6452  0618                     	;# 
  6453  0619                     	;# 
  6454  061A                     	;# 
  6455  061B                     	;# 
  6456  061C                     	;# 
  6457  061D                     	;# 
  6458  061E                     	;# 
  6459  068C                     	;# 
  6460  068D                     	;# 
  6461  068E                     	;# 
  6462  068F                     	;# 
  6463  0690                     	;# 
  6464  0691                     	;# 
  6465  0692                     	;# 
  6466  0693                     	;# 
  6467  0694                     	;# 
  6468  070C                     	;# 
  6469  070D                     	;# 
  6470  070E                     	;# 
  6471  070F                     	;# 
  6472  0710                     	;# 
  6473  0711                     	;# 
  6474  0712                     	;# 
  6475  0713                     	;# 
  6476  0714                     	;# 
  6477  0716                     	;# 
  6478  0717                     	;# 
  6479  0718                     	;# 
  6480  0719                     	;# 
  6481  071A                     	;# 
  6482  071B                     	;# 
  6483  071C                     	;# 
  6484  071D                     	;# 
  6485  071E                     	;# 
  6486  0796                     	;# 
  6487  0797                     	;# 
  6488  0798                     	;# 
  6489  0799                     	;# 
  6490  079A                     	;# 
  6491  079B                     	;# 
  6492  080C                     	;# 
  6493  080D                     	;# 
  6494  080E                     	;# 
  6495  080F                     	;# 
  6496  0810                     	;# 
  6497  0811                     	;# 
  6498  0812                     	;# 
  6499  0813                     	;# 
  6500  0814                     	;# 
  6501  081A                     	;# 
  6502  081B                     	;# 
  6503  081C                     	;# 
  6504  081D                     	;# 
  6505  081E                     	;# 
  6506  081F                     	;# 
  6507  088C                     	;# 
  6508  088D                     	;# 
  6509  088E                     	;# 
  6510  088F                     	;# 
  6511  0890                     	;# 
  6512  0891                     	;# 
  6513  0892                     	;# 
  6514  0893                     	;# 
  6515  0895                     	;# 
  6516  0896                     	;# 
  6517  0897                     	;# 
  6518  0898                     	;# 
  6519  0899                     	;# 
  6520  089A                     	;# 
  6521  089B                     	;# 
  6522  090C                     	;# 
  6523  090E                     	;# 
  6524  090F                     	;# 
  6525  091F                     	;# 
  6526  091F                     	;# 
  6527  098F                     	;# 
  6528  098F                     	;# 
  6529  0990                     	;# 
  6530  0991                     	;# 
  6531  0992                     	;# 
  6532  0993                     	;# 
  6533  0994                     	;# 
  6534  0995                     	;# 
  6535  0996                     	;# 
  6536  0997                     	;# 
  6537  0E0F                     	;# 
  6538  0E10                     	;# 
  6539  0E11                     	;# 
  6540  0E12                     	;# 
  6541  0E13                     	;# 
  6542  0E14                     	;# 
  6543  0E15                     	;# 
  6544  0E16                     	;# 
  6545  0E17                     	;# 
  6546  0E18                     	;# 
  6547  0E19                     	;# 
  6548  0E1A                     	;# 
  6549  0E1B                     	;# 
  6550  0E1C                     	;# 
  6551  0E1D                     	;# 
  6552  0E1E                     	;# 
  6553  0E1F                     	;# 
  6554  0E20                     	;# 
  6555  0E21                     	;# 
  6556  0E22                     	;# 
  6557  0E23                     	;# 
  6558  0E24                     	;# 
  6559  0E25                     	;# 
  6560  0E26                     	;# 
  6561  0E27                     	;# 
  6562  0E28                     	;# 
  6563  0E29                     	;# 
  6564  0E2A                     	;# 
  6565  0E2B                     	;# 
  6566  0E2C                     	;# 
  6567  0E2D                     	;# 
  6568  0E2E                     	;# 
  6569  0E2F                     	;# 
  6570  0E30                     	;# 
  6571  0E31                     	;# 
  6572  0E32                     	;# 
  6573  0E33                     	;# 
  6574  0E34                     	;# 
  6575  0E35                     	;# 
  6576  0E36                     	;# 
  6577  0E37                     	;# 
  6578  0E8F                     	;# 
  6579  0E90                     	;# 
  6580  0E91                     	;# 
  6581  0E92                     	;# 
  6582  0E93                     	;# 
  6583  0E94                     	;# 
  6584  0E95                     	;# 
  6585  0E96                     	;# 
  6586  0E97                     	;# 
  6587  0E9C                     	;# 
  6588  0E9D                     	;# 
  6589  0E9E                     	;# 
  6590  0EA1                     	;# 
  6591  0EA2                     	;# 
  6592  0EA3                     	;# 
  6593  0EA4                     	;# 
  6594  0EA5                     	;# 
  6595  0EA9                     	;# 
  6596  0EAA                     	;# 
  6597  0EAB                     	;# 
  6598  0EAC                     	;# 
  6599  0EB1                     	;# 
  6600  0EB2                     	;# 
  6601  0EB3                     	;# 
  6602  0EB8                     	;# 
  6603  0EB9                     	;# 
  6604  0EBA                     	;# 
  6605  0EBB                     	;# 
  6606  0EBC                     	;# 
  6607  0EBD                     	;# 
  6608  0EBE                     	;# 
  6609  0EC3                     	;# 
  6610  0EC5                     	;# 
  6611  0EC6                     	;# 
  6612  0EC7                     	;# 
  6613  0EC8                     	;# 
  6614  0EC9                     	;# 
  6615  0ECA                     	;# 
  6616  0ECB                     	;# 
  6617  0ECC                     	;# 
  6618  0F10                     	;# 
  6619  0F11                     	;# 
  6620  0F12                     	;# 
  6621  0F13                     	;# 
  6622  0F14                     	;# 
  6623  0F15                     	;# 
  6624  0F16                     	;# 
  6625  0F17                     	;# 
  6626  0F18                     	;# 
  6627  0F19                     	;# 
  6628  0F1A                     	;# 
  6629  0F1B                     	;# 
  6630  0F1C                     	;# 
  6631  0F1D                     	;# 
  6632  0F1E                     	;# 
  6633  0F1F                     	;# 
  6634  0F20                     	;# 
  6635  0F21                     	;# 
  6636  0F22                     	;# 
  6637  0F23                     	;# 
  6638  0F24                     	;# 
  6639  0F25                     	;# 
  6640  0F26                     	;# 
  6641  0F27                     	;# 
  6642  0F28                     	;# 
  6643  0F29                     	;# 
  6644  0F2A                     	;# 
  6645  0F2B                     	;# 
  6646  0F2C                     	;# 
  6647  0F2D                     	;# 
  6648  0F2E                     	;# 
  6649  0F2F                     	;# 
  6650  0F30                     	;# 
  6651  0F31                     	;# 
  6652  0F32                     	;# 
  6653  0F38                     	;# 
  6654  0F39                     	;# 
  6655  0F3A                     	;# 
  6656  0F3B                     	;# 
  6657  0F3C                     	;# 
  6658  0F3D                     	;# 
  6659  0F3E                     	;# 
  6660  0F3F                     	;# 
  6661  0F40                     	;# 
  6662  0F41                     	;# 
  6663  0F43                     	;# 
  6664  0F44                     	;# 
  6665  0F45                     	;# 
  6666  0F46                     	;# 
  6667  0F47                     	;# 
  6668  0F48                     	;# 
  6669  0F49                     	;# 
  6670  0F4A                     	;# 
  6671  0F4B                     	;# 
  6672  0F4C                     	;# 
  6673  0F4E                     	;# 
  6674  0F4F                     	;# 
  6675  0F50                     	;# 
  6676  0F51                     	;# 
  6677  0F52                     	;# 
  6678  0F53                     	;# 
  6679  0F54                     	;# 
  6680  0F55                     	;# 
  6681  0F56                     	;# 
  6682  0F57                     	;# 
  6683  0F59                     	;# 
  6684  0F5A                     	;# 
  6685  0F5B                     	;# 
  6686  0F5C                     	;# 
  6687  0F5D                     	;# 
  6688  0F61                     	;# 
  6689  0F62                     	;# 
  6690  0F64                     	;# 
  6691  0F65                     	;# 
  6692  0F66                     	;# 
  6693  0F67                     	;# 
  6694  0F68                     	;# 
  6695  0F69                     	;# 
  6696  0F6A                     	;# 
  6697  0F6B                     	;# 
  6698  0F6C                     	;# 
  6699  0F6D                     	;# 
  6700  0FE4                     	;# 
  6701  0FE5                     	;# 
  6702  0FE6                     	;# 
  6703  0FE7                     	;# 
  6704  0FE8                     	;# 
  6705  0FE9                     	;# 
  6706  0FEA                     	;# 
  6707  0FEB                     	;# 
  6708  0FED                     	;# 
  6709  0FEE                     	;# 
  6710  0FEF                     	;# 
  6711  0000                     	;# 
  6712  0001                     	;# 
  6713  0002                     	;# 
  6714  0003                     	;# 
  6715  0004                     	;# 
  6716  0005                     	;# 
  6717  0006                     	;# 
  6718  0007                     	;# 
  6719  0008                     	;# 
  6720  0009                     	;# 
  6721  000A                     	;# 
  6722  000B                     	;# 
  6723  000C                     	;# 
  6724  000D                     	;# 
  6725  000E                     	;# 
  6726  000F                     	;# 
  6727  0010                     	;# 
  6728  0011                     	;# 
  6729  0012                     	;# 
  6730  0013                     	;# 
  6731  0014                     	;# 
  6732  0015                     	;# 
  6733  0016                     	;# 
  6734  0017                     	;# 
  6735  0018                     	;# 
  6736  0019                     	;# 
  6737  001A                     	;# 
  6738  001C                     	;# 
  6739  001C                     	;# 
  6740  001D                     	;# 
  6741  001D                     	;# 
  6742  001E                     	;# 
  6743  001F                     	;# 
  6744  008C                     	;# 
  6745  008C                     	;# 
  6746  008D                     	;# 
  6747  008E                     	;# 
  6748  008E                     	;# 
  6749  008F                     	;# 
  6750  0090                     	;# 
  6751  0090                     	;# 
  6752  0091                     	;# 
  6753  0093                     	;# 
  6754  0094                     	;# 
  6755  0095                     	;# 
  6756  0096                     	;# 
  6757  0097                     	;# 
  6758  0098                     	;# 
  6759  0099                     	;# 
  6760  009A                     	;# 
  6761  009B                     	;# 
  6762  009C                     	;# 
  6763  009D                     	;# 
  6764  009E                     	;# 
  6765  010C                     	;# 
  6766  010D                     	;# 
  6767  010E                     	;# 
  6768  010E                     	;# 
  6769  010F                     	;# 
  6770  0110                     	;# 
  6771  0110                     	;# 
  6772  0111                     	;# 
  6773  0112                     	;# 
  6774  0112                     	;# 
  6775  0113                     	;# 
  6776  0114                     	;# 
  6777  0114                     	;# 
  6778  0115                     	;# 
  6779  0116                     	;# 
  6780  0116                     	;# 
  6781  0117                     	;# 
  6782  0119                     	;# 
  6783  0119                     	;# 
  6784  0119                     	;# 
  6785  011A                     	;# 
  6786  011A                     	;# 
  6787  011A                     	;# 
  6788  011B                     	;# 
  6789  011B                     	;# 
  6790  011B                     	;# 
  6791  011B                     	;# 
  6792  011B                     	;# 
  6793  011C                     	;# 
  6794  011C                     	;# 
  6795  011C                     	;# 
  6796  011D                     	;# 
  6797  011D                     	;# 
  6798  011D                     	;# 
  6799  011E                     	;# 
  6800  011E                     	;# 
  6801  011E                     	;# 
  6802  011F                     	;# 
  6803  011F                     	;# 
  6804  011F                     	;# 
  6805  011F                     	;# 
  6806  011F                     	;# 
  6807  018C                     	;# 
  6808  018D                     	;# 
  6809  018E                     	;# 
  6810  018F                     	;# 
  6811  0190                     	;# 
  6812  0191                     	;# 
  6813  0192                     	;# 
  6814  0196                     	;# 
  6815  0197                     	;# 
  6816  0198                     	;# 
  6817  0199                     	;# 
  6818  019A                     	;# 
  6819  019B                     	;# 
  6820  019C                     	;# 
  6821  020C                     	;# 
  6822  020C                     	;# 
  6823  020D                     	;# 
  6824  020E                     	;# 
  6825  020F                     	;# 
  6826  020F                     	;# 
  6827  0210                     	;# 
  6828  0210                     	;# 
  6829  0211                     	;# 
  6830  0211                     	;# 
  6831  0212                     	;# 
  6832  0212                     	;# 
  6833  0213                     	;# 
  6834  0214                     	;# 
  6835  0215                     	;# 
  6836  0215                     	;# 
  6837  0216                     	;# 
  6838  0216                     	;# 
  6839  0217                     	;# 
  6840  0217                     	;# 
  6841  0218                     	;# 
  6842  0218                     	;# 
  6843  0219                     	;# 
  6844  021A                     	;# 
  6845  021B                     	;# 
  6846  021B                     	;# 
  6847  021C                     	;# 
  6848  021C                     	;# 
  6849  021D                     	;# 
  6850  021D                     	;# 
  6851  021E                     	;# 
  6852  021F                     	;# 
  6853  028C                     	;# 
  6854  028C                     	;# 
  6855  028D                     	;# 
  6856  028D                     	;# 
  6857  028E                     	;# 
  6858  028F                     	;# 
  6859  0290                     	;# 
  6860  0290                     	;# 
  6861  0291                     	;# 
  6862  0292                     	;# 
  6863  0292                     	;# 
  6864  0293                     	;# 
  6865  0293                     	;# 
  6866  0294                     	;# 
  6867  0295                     	;# 
  6868  0296                     	;# 
  6869  0296                     	;# 
  6870  0297                     	;# 
  6871  0298                     	;# 
  6872  0298                     	;# 
  6873  0299                     	;# 
  6874  0299                     	;# 
  6875  029A                     	;# 
  6876  029B                     	;# 
  6877  029C                     	;# 
  6878  029C                     	;# 
  6879  029D                     	;# 
  6880  030C                     	;# 
  6881  030C                     	;# 
  6882  030D                     	;# 
  6883  030E                     	;# 
  6884  030F                     	;# 
  6885  0310                     	;# 
  6886  0310                     	;# 
  6887  0311                     	;# 
  6888  0312                     	;# 
  6889  0313                     	;# 
  6890  0314                     	;# 
  6891  0314                     	;# 
  6892  0315                     	;# 
  6893  0316                     	;# 
  6894  0317                     	;# 
  6895  0318                     	;# 
  6896  0318                     	;# 
  6897  0319                     	;# 
  6898  031A                     	;# 
  6899  031B                     	;# 
  6900  031C                     	;# 
  6901  031C                     	;# 
  6902  031D                     	;# 
  6903  031E                     	;# 
  6904  031F                     	;# 
  6905  038C                     	;# 
  6906  038C                     	;# 
  6907  038D                     	;# 
  6908  038E                     	;# 
  6909  0390                     	;# 
  6910  0390                     	;# 
  6911  0391                     	;# 
  6912  0392                     	;# 
  6913  040C                     	;# 
  6914  040D                     	;# 
  6915  040E                     	;# 
  6916  040F                     	;# 
  6917  0410                     	;# 
  6918  0411                     	;# 
  6919  0416                     	;# 
  6920  0416                     	;# 
  6921  0417                     	;# 
  6922  0418                     	;# 
  6923  0418                     	;# 
  6924  0419                     	;# 
  6925  041A                     	;# 
  6926  041A                     	;# 
  6927  041B                     	;# 
  6928  041C                     	;# 
  6929  041C                     	;# 
  6930  041D                     	;# 
  6931  041E                     	;# 
  6932  041F                     	;# 
  6933  048C                     	;# 
  6934  048C                     	;# 
  6935  048D                     	;# 
  6936  048E                     	;# 
  6937  048F                     	;# 
  6938  048F                     	;# 
  6939  0490                     	;# 
  6940  0491                     	;# 
  6941  0492                     	;# 
  6942  0492                     	;# 
  6943  0493                     	;# 
  6944  0494                     	;# 
  6945  0495                     	;# 
  6946  0495                     	;# 
  6947  0496                     	;# 
  6948  0497                     	;# 
  6949  0498                     	;# 
  6950  0499                     	;# 
  6951  049A                     	;# 
  6952  049B                     	;# 
  6953  049C                     	;# 
  6954  049D                     	;# 
  6955  050C                     	;# 
  6956  050C                     	;# 
  6957  050D                     	;# 
  6958  050E                     	;# 
  6959  050F                     	;# 
  6960  050F                     	;# 
  6961  0510                     	;# 
  6962  0511                     	;# 
  6963  0512                     	;# 
  6964  0512                     	;# 
  6965  0513                     	;# 
  6966  0514                     	;# 
  6967  0515                     	;# 
  6968  0515                     	;# 
  6969  0516                     	;# 
  6970  0517                     	;# 
  6971  0518                     	;# 
  6972  0519                     	;# 
  6973  051A                     	;# 
  6974  051B                     	;# 
  6975  051C                     	;# 
  6976  051D                     	;# 
  6977  058C                     	;# 
  6978  058C                     	;# 
  6979  058D                     	;# 
  6980  058E                     	;# 
  6981  058F                     	;# 
  6982  058F                     	;# 
  6983  0590                     	;# 
  6984  0591                     	;# 
  6985  0592                     	;# 
  6986  0593                     	;# 
  6987  060C                     	;# 
  6988  060D                     	;# 
  6989  060E                     	;# 
  6990  060F                     	;# 
  6991  0610                     	;# 
  6992  0611                     	;# 
  6993  0612                     	;# 
  6994  0613                     	;# 
  6995  0614                     	;# 
  6996  0616                     	;# 
  6997  0617                     	;# 
  6998  0618                     	;# 
  6999  0619                     	;# 
  7000  061A                     	;# 
  7001  061B                     	;# 
  7002  061C                     	;# 
  7003  061D                     	;# 
  7004  061E                     	;# 
  7005  068C                     	;# 
  7006  068D                     	;# 
  7007  068E                     	;# 
  7008  068F                     	;# 
  7009  0690                     	;# 
  7010  0691                     	;# 
  7011  0692                     	;# 
  7012  0693                     	;# 
  7013  0694                     	;# 
  7014  070C                     	;# 
  7015  070D                     	;# 
  7016  070E                     	;# 
  7017  070F                     	;# 
  7018  0710                     	;# 
  7019  0711                     	;# 
  7020  0712                     	;# 
  7021  0713                     	;# 
  7022  0714                     	;# 
  7023  0716                     	;# 
  7024  0717                     	;# 
  7025  0718                     	;# 
  7026  0719                     	;# 
  7027  071A                     	;# 
  7028  071B                     	;# 
  7029  071C                     	;# 
  7030  071D                     	;# 
  7031  071E                     	;# 
  7032  0796                     	;# 
  7033  0797                     	;# 
  7034  0798                     	;# 
  7035  0799                     	;# 
  7036  079A                     	;# 
  7037  079B                     	;# 
  7038  080C                     	;# 
  7039  080D                     	;# 
  7040  080E                     	;# 
  7041  080F                     	;# 
  7042  0810                     	;# 
  7043  0811                     	;# 
  7044  0812                     	;# 
  7045  0813                     	;# 
  7046  0814                     	;# 
  7047  081A                     	;# 
  7048  081B                     	;# 
  7049  081C                     	;# 
  7050  081D                     	;# 
  7051  081E                     	;# 
  7052  081F                     	;# 
  7053  088C                     	;# 
  7054  088D                     	;# 
  7055  088E                     	;# 
  7056  088F                     	;# 
  7057  0890                     	;# 
  7058  0891                     	;# 
  7059  0892                     	;# 
  7060  0893                     	;# 
  7061  0895                     	;# 
  7062  0896                     	;# 
  7063  0897                     	;# 
  7064  0898                     	;# 
  7065  0899                     	;# 
  7066  089A                     	;# 
  7067  089B                     	;# 
  7068  090C                     	;# 
  7069  090E                     	;# 
  7070  090F                     	;# 
  7071  091F                     	;# 
  7072  091F                     	;# 
  7073  098F                     	;# 
  7074  098F                     	;# 
  7075  0990                     	;# 
  7076  0991                     	;# 
  7077  0992                     	;# 
  7078  0993                     	;# 
  7079  0994                     	;# 
  7080  0995                     	;# 
  7081  0996                     	;# 
  7082  0997                     	;# 
  7083  0E0F                     	;# 
  7084  0E10                     	;# 
  7085  0E11                     	;# 
  7086  0E12                     	;# 
  7087  0E13                     	;# 
  7088  0E14                     	;# 
  7089  0E15                     	;# 
  7090  0E16                     	;# 
  7091  0E17                     	;# 
  7092  0E18                     	;# 
  7093  0E19                     	;# 
  7094  0E1A                     	;# 
  7095  0E1B                     	;# 
  7096  0E1C                     	;# 
  7097  0E1D                     	;# 
  7098  0E1E                     	;# 
  7099  0E1F                     	;# 
  7100  0E20                     	;# 
  7101  0E21                     	;# 
  7102  0E22                     	;# 
  7103  0E23                     	;# 
  7104  0E24                     	;# 
  7105  0E25                     	;# 
  7106  0E26                     	;# 
  7107  0E27                     	;# 
  7108  0E28                     	;# 
  7109  0E29                     	;# 
  7110  0E2A                     	;# 
  7111  0E2B                     	;# 
  7112  0E2C                     	;# 
  7113  0E2D                     	;# 
  7114  0E2E                     	;# 
  7115  0E2F                     	;# 
  7116  0E30                     	;# 
  7117  0E31                     	;# 
  7118  0E32                     	;# 
  7119  0E33                     	;# 
  7120  0E34                     	;# 
  7121  0E35                     	;# 
  7122  0E36                     	;# 
  7123  0E37                     	;# 
  7124  0E8F                     	;# 
  7125  0E90                     	;# 
  7126  0E91                     	;# 
  7127  0E92                     	;# 
  7128  0E93                     	;# 
  7129  0E94                     	;# 
  7130  0E95                     	;# 
  7131  0E96                     	;# 
  7132  0E97                     	;# 
  7133  0E9C                     	;# 
  7134  0E9D                     	;# 
  7135  0E9E                     	;# 
  7136  0EA1                     	;# 
  7137  0EA2                     	;# 
  7138  0EA3                     	;# 
  7139  0EA4                     	;# 
  7140  0EA5                     	;# 
  7141  0EA9                     	;# 
  7142  0EAA                     	;# 
  7143  0EAB                     	;# 
  7144  0EAC                     	;# 
  7145  0EB1                     	;# 
  7146  0EB2                     	;# 
  7147  0EB3                     	;# 
  7148  0EB8                     	;# 
  7149  0EB9                     	;# 
  7150  0EBA                     	;# 
  7151  0EBB                     	;# 
  7152  0EBC                     	;# 
  7153  0EBD                     	;# 
  7154  0EBE                     	;# 
  7155  0EC3                     	;# 
  7156  0EC5                     	;# 
  7157  0EC6                     	;# 
  7158  0EC7                     	;# 
  7159  0EC8                     	;# 
  7160  0EC9                     	;# 
  7161  0ECA                     	;# 
  7162  0ECB                     	;# 
  7163  0ECC                     	;# 
  7164  0F10                     	;# 
  7165  0F11                     	;# 
  7166  0F12                     	;# 
  7167  0F13                     	;# 
  7168  0F14                     	;# 
  7169  0F15                     	;# 
  7170  0F16                     	;# 
  7171  0F17                     	;# 
  7172  0F18                     	;# 
  7173  0F19                     	;# 
  7174  0F1A                     	;# 
  7175  0F1B                     	;# 
  7176  0F1C                     	;# 
  7177  0F1D                     	;# 
  7178  0F1E                     	;# 
  7179  0F1F                     	;# 
  7180  0F20                     	;# 
  7181  0F21                     	;# 
  7182  0F22                     	;# 
  7183  0F23                     	;# 
  7184  0F24                     	;# 
  7185  0F25                     	;# 
  7186  0F26                     	;# 
  7187  0F27                     	;# 
  7188  0F28                     	;# 
  7189  0F29                     	;# 
  7190  0F2A                     	;# 
  7191  0F2B                     	;# 
  7192  0F2C                     	;# 
  7193  0F2D                     	;# 
  7194  0F2E                     	;# 
  7195  0F2F                     	;# 
  7196  0F30                     	;# 
  7197  0F31                     	;# 
  7198  0F32                     	;# 
  7199  0F38                     	;# 
  7200  0F39                     	;# 
  7201  0F3A                     	;# 
  7202  0F3B                     	;# 
  7203  0F3C                     	;# 
  7204  0F3D                     	;# 
  7205  0F3E                     	;# 
  7206  0F3F                     	;# 
  7207  0F40                     	;# 
  7208  0F41                     	;# 
  7209  0F43                     	;# 
  7210  0F44                     	;# 
  7211  0F45                     	;# 
  7212  0F46                     	;# 
  7213  0F47                     	;# 
  7214  0F48                     	;# 
  7215  0F49                     	;# 
  7216  0F4A                     	;# 
  7217  0F4B                     	;# 
  7218  0F4C                     	;# 
  7219  0F4E                     	;# 
  7220  0F4F                     	;# 
  7221  0F50                     	;# 
  7222  0F51                     	;# 
  7223  0F52                     	;# 
  7224  0F53                     	;# 
  7225  0F54                     	;# 
  7226  0F55                     	;# 
  7227  0F56                     	;# 
  7228  0F57                     	;# 
  7229  0F59                     	;# 
  7230  0F5A                     	;# 
  7231  0F5B                     	;# 
  7232  0F5C                     	;# 
  7233  0F5D                     	;# 
  7234  0F61                     	;# 
  7235  0F62                     	;# 
  7236  0F64                     	;# 
  7237  0F65                     	;# 
  7238  0F66                     	;# 
  7239  0F67                     	;# 
  7240  0F68                     	;# 
  7241  0F69                     	;# 
  7242  0F6A                     	;# 
  7243  0F6B                     	;# 
  7244  0F6C                     	;# 
  7245  0F6D                     	;# 
  7246  0FE4                     	;# 
  7247  0FE5                     	;# 
  7248  0FE6                     	;# 
  7249  0FE7                     	;# 
  7250  0FE8                     	;# 
  7251  0FE9                     	;# 
  7252  0FEA                     	;# 
  7253  0FEB                     	;# 
  7254  0FED                     	;# 
  7255  0FEE                     	;# 
  7256  0FEF                     	;# 
  7257  0000                     	;# 
  7258  0001                     	;# 
  7259  0002                     	;# 
  7260  0003                     	;# 
  7261  0004                     	;# 
  7262  0005                     	;# 
  7263  0006                     	;# 
  7264  0007                     	;# 
  7265  0008                     	;# 
  7266  0009                     	;# 
  7267  000A                     	;# 
  7268  000B                     	;# 
  7269  000C                     	;# 
  7270  000D                     	;# 
  7271  000E                     	;# 
  7272  000F                     	;# 
  7273  0010                     	;# 
  7274  0011                     	;# 
  7275  0012                     	;# 
  7276  0013                     	;# 
  7277  0014                     	;# 
  7278  0015                     	;# 
  7279  0016                     	;# 
  7280  0017                     	;# 
  7281  0018                     	;# 
  7282  0019                     	;# 
  7283  001A                     	;# 
  7284  001C                     	;# 
  7285  001C                     	;# 
  7286  001D                     	;# 
  7287  001D                     	;# 
  7288  001E                     	;# 
  7289  001F                     	;# 
  7290  008C                     	;# 
  7291  008C                     	;# 
  7292  008D                     	;# 
  7293  008E                     	;# 
  7294  008E                     	;# 
  7295  008F                     	;# 
  7296  0090                     	;# 
  7297  0090                     	;# 
  7298  0091                     	;# 
  7299  0093                     	;# 
  7300  0094                     	;# 
  7301  0095                     	;# 
  7302  0096                     	;# 
  7303  0097                     	;# 
  7304  0098                     	;# 
  7305  0099                     	;# 
  7306  009A                     	;# 
  7307  009B                     	;# 
  7308  009C                     	;# 
  7309  009D                     	;# 
  7310  009E                     	;# 
  7311  010C                     	;# 
  7312  010D                     	;# 
  7313  010E                     	;# 
  7314  010E                     	;# 
  7315  010F                     	;# 
  7316  0110                     	;# 
  7317  0110                     	;# 
  7318  0111                     	;# 
  7319  0112                     	;# 
  7320  0112                     	;# 
  7321  0113                     	;# 
  7322  0114                     	;# 
  7323  0114                     	;# 
  7324  0115                     	;# 
  7325  0116                     	;# 
  7326  0116                     	;# 
  7327  0117                     	;# 
  7328  0119                     	;# 
  7329  0119                     	;# 
  7330  0119                     	;# 
  7331  011A                     	;# 
  7332  011A                     	;# 
  7333  011A                     	;# 
  7334  011B                     	;# 
  7335  011B                     	;# 
  7336  011B                     	;# 
  7337  011B                     	;# 
  7338  011B                     	;# 
  7339  011C                     	;# 
  7340  011C                     	;# 
  7341  011C                     	;# 
  7342  011D                     	;# 
  7343  011D                     	;# 
  7344  011D                     	;# 
  7345  011E                     	;# 
  7346  011E                     	;# 
  7347  011E                     	;# 
  7348  011F                     	;# 
  7349  011F                     	;# 
  7350  011F                     	;# 
  7351  011F                     	;# 
  7352  011F                     	;# 
  7353  018C                     	;# 
  7354  018D                     	;# 
  7355  018E                     	;# 
  7356  018F                     	;# 
  7357  0190                     	;# 
  7358  0191                     	;# 
  7359  0192                     	;# 
  7360  0196                     	;# 
  7361  0197                     	;# 
  7362  0198                     	;# 
  7363  0199                     	;# 
  7364  019A                     	;# 
  7365  019B                     	;# 
  7366  019C                     	;# 
  7367  020C                     	;# 
  7368  020C                     	;# 
  7369  020D                     	;# 
  7370  020E                     	;# 
  7371  020F                     	;# 
  7372  020F                     	;# 
  7373  0210                     	;# 
  7374  0210                     	;# 
  7375  0211                     	;# 
  7376  0211                     	;# 
  7377  0212                     	;# 
  7378  0212                     	;# 
  7379  0213                     	;# 
  7380  0214                     	;# 
  7381  0215                     	;# 
  7382  0215                     	;# 
  7383  0216                     	;# 
  7384  0216                     	;# 
  7385  0217                     	;# 
  7386  0217                     	;# 
  7387  0218                     	;# 
  7388  0218                     	;# 
  7389  0219                     	;# 
  7390  021A                     	;# 
  7391  021B                     	;# 
  7392  021B                     	;# 
  7393  021C                     	;# 
  7394  021C                     	;# 
  7395  021D                     	;# 
  7396  021D                     	;# 
  7397  021E                     	;# 
  7398  021F                     	;# 
  7399  028C                     	;# 
  7400  028C                     	;# 
  7401  028D                     	;# 
  7402  028D                     	;# 
  7403  028E                     	;# 
  7404  028F                     	;# 
  7405  0290                     	;# 
  7406  0290                     	;# 
  7407  0291                     	;# 
  7408  0292                     	;# 
  7409  0292                     	;# 
  7410  0293                     	;# 
  7411  0293                     	;# 
  7412  0294                     	;# 
  7413  0295                     	;# 
  7414  0296                     	;# 
  7415  0296                     	;# 
  7416  0297                     	;# 
  7417  0298                     	;# 
  7418  0298                     	;# 
  7419  0299                     	;# 
  7420  0299                     	;# 
  7421  029A                     	;# 
  7422  029B                     	;# 
  7423  029C                     	;# 
  7424  029C                     	;# 
  7425  029D                     	;# 
  7426  030C                     	;# 
  7427  030C                     	;# 
  7428  030D                     	;# 
  7429  030E                     	;# 
  7430  030F                     	;# 
  7431  0310                     	;# 
  7432  0310                     	;# 
  7433  0311                     	;# 
  7434  0312                     	;# 
  7435  0313                     	;# 
  7436  0314                     	;# 
  7437  0314                     	;# 
  7438  0315                     	;# 
  7439  0316                     	;# 
  7440  0317                     	;# 
  7441  0318                     	;# 
  7442  0318                     	;# 
  7443  0319                     	;# 
  7444  031A                     	;# 
  7445  031B                     	;# 
  7446  031C                     	;# 
  7447  031C                     	;# 
  7448  031D                     	;# 
  7449  031E                     	;# 
  7450  031F                     	;# 
  7451  038C                     	;# 
  7452  038C                     	;# 
  7453  038D                     	;# 
  7454  038E                     	;# 
  7455  0390                     	;# 
  7456  0390                     	;# 
  7457  0391                     	;# 
  7458  0392                     	;# 
  7459  040C                     	;# 
  7460  040D                     	;# 
  7461  040E                     	;# 
  7462  040F                     	;# 
  7463  0410                     	;# 
  7464  0411                     	;# 
  7465  0416                     	;# 
  7466  0416                     	;# 
  7467  0417                     	;# 
  7468  0418                     	;# 
  7469  0418                     	;# 
  7470  0419                     	;# 
  7471  041A                     	;# 
  7472  041A                     	;# 
  7473  041B                     	;# 
  7474  041C                     	;# 
  7475  041C                     	;# 
  7476  041D                     	;# 
  7477  041E                     	;# 
  7478  041F                     	;# 
  7479  048C                     	;# 
  7480  048C                     	;# 
  7481  048D                     	;# 
  7482  048E                     	;# 
  7483  048F                     	;# 
  7484  048F                     	;# 
  7485  0490                     	;# 
  7486  0491                     	;# 
  7487  0492                     	;# 
  7488  0492                     	;# 
  7489  0493                     	;# 
  7490  0494                     	;# 
  7491  0495                     	;# 
  7492  0495                     	;# 
  7493  0496                     	;# 
  7494  0497                     	;# 
  7495  0498                     	;# 
  7496  0499                     	;# 
  7497  049A                     	;# 
  7498  049B                     	;# 
  7499  049C                     	;# 
  7500  049D                     	;# 
  7501  050C                     	;# 
  7502  050C                     	;# 
  7503  050D                     	;# 
  7504  050E                     	;# 
  7505  050F                     	;# 
  7506  050F                     	;# 
  7507  0510                     	;# 
  7508  0511                     	;# 
  7509  0512                     	;# 
  7510  0512                     	;# 
  7511  0513                     	;# 
  7512  0514                     	;# 
  7513  0515                     	;# 
  7514  0515                     	;# 
  7515  0516                     	;# 
  7516  0517                     	;# 
  7517  0518                     	;# 
  7518  0519                     	;# 
  7519  051A                     	;# 
  7520  051B                     	;# 
  7521  051C                     	;# 
  7522  051D                     	;# 
  7523  058C                     	;# 
  7524  058C                     	;# 
  7525  058D                     	;# 
  7526  058E                     	;# 
  7527  058F                     	;# 
  7528  058F                     	;# 
  7529  0590                     	;# 
  7530  0591                     	;# 
  7531  0592                     	;# 
  7532  0593                     	;# 
  7533  060C                     	;# 
  7534  060D                     	;# 
  7535  060E                     	;# 
  7536  060F                     	;# 
  7537  0610                     	;# 
  7538  0611                     	;# 
  7539  0612                     	;# 
  7540  0613                     	;# 
  7541  0614                     	;# 
  7542  0616                     	;# 
  7543  0617                     	;# 
  7544  0618                     	;# 
  7545  0619                     	;# 
  7546  061A                     	;# 
  7547  061B                     	;# 
  7548  061C                     	;# 
  7549  061D                     	;# 
  7550  061E                     	;# 
  7551  068C                     	;# 
  7552  068D                     	;# 
  7553  068E                     	;# 
  7554  068F                     	;# 
  7555  0690                     	;# 
  7556  0691                     	;# 
  7557  0692                     	;# 
  7558  0693                     	;# 
  7559  0694                     	;# 
  7560  070C                     	;# 
  7561  070D                     	;# 
  7562  070E                     	;# 
  7563  070F                     	;# 
  7564  0710                     	;# 
  7565  0711                     	;# 
  7566  0712                     	;# 
  7567  0713                     	;# 
  7568  0714                     	;# 
  7569  0716                     	;# 
  7570  0717                     	;# 
  7571  0718                     	;# 
  7572  0719                     	;# 
  7573  071A                     	;# 
  7574  071B                     	;# 
  7575  071C                     	;# 
  7576  071D                     	;# 
  7577  071E                     	;# 
  7578  0796                     	;# 
  7579  0797                     	;# 
  7580  0798                     	;# 
  7581  0799                     	;# 
  7582  079A                     	;# 
  7583  079B                     	;# 
  7584  080C                     	;# 
  7585  080D                     	;# 
  7586  080E                     	;# 
  7587  080F                     	;# 
  7588  0810                     	;# 
  7589  0811                     	;# 
  7590  0812                     	;# 
  7591  0813                     	;# 
  7592  0814                     	;# 
  7593  081A                     	;# 
  7594  081B                     	;# 
  7595  081C                     	;# 
  7596  081D                     	;# 
  7597  081E                     	;# 
  7598  081F                     	;# 
  7599  088C                     	;# 
  7600  088D                     	;# 
  7601  088E                     	;# 
  7602  088F                     	;# 
  7603  0890                     	;# 
  7604  0891                     	;# 
  7605  0892                     	;# 
  7606  0893                     	;# 
  7607  0895                     	;# 
  7608  0896                     	;# 
  7609  0897                     	;# 
  7610  0898                     	;# 
  7611  0899                     	;# 
  7612  089A                     	;# 
  7613  089B                     	;# 
  7614  090C                     	;# 
  7615  090E                     	;# 
  7616  090F                     	;# 
  7617  091F                     	;# 
  7618  091F                     	;# 
  7619  098F                     	;# 
  7620  098F                     	;# 
  7621  0990                     	;# 
  7622  0991                     	;# 
  7623  0992                     	;# 
  7624  0993                     	;# 
  7625  0994                     	;# 
  7626  0995                     	;# 
  7627  0996                     	;# 
  7628  0997                     	;# 
  7629  0E0F                     	;# 
  7630  0E10                     	;# 
  7631  0E11                     	;# 
  7632  0E12                     	;# 
  7633  0E13                     	;# 
  7634  0E14                     	;# 
  7635  0E15                     	;# 
  7636  0E16                     	;# 
  7637  0E17                     	;# 
  7638  0E18                     	;# 
  7639  0E19                     	;# 
  7640  0E1A                     	;# 
  7641  0E1B                     	;# 
  7642  0E1C                     	;# 
  7643  0E1D                     	;# 
  7644  0E1E                     	;# 
  7645  0E1F                     	;# 
  7646  0E20                     	;# 
  7647  0E21                     	;# 
  7648  0E22                     	;# 
  7649  0E23                     	;# 
  7650  0E24                     	;# 
  7651  0E25                     	;# 
  7652  0E26                     	;# 
  7653  0E27                     	;# 
  7654  0E28                     	;# 
  7655  0E29                     	;# 
  7656  0E2A                     	;# 
  7657  0E2B                     	;# 
  7658  0E2C                     	;# 
  7659  0E2D                     	;# 
  7660  0E2E                     	;# 
  7661  0E2F                     	;# 
  7662  0E30                     	;# 
  7663  0E31                     	;# 
  7664  0E32                     	;# 
  7665  0E33                     	;# 
  7666  0E34                     	;# 
  7667  0E35                     	;# 
  7668  0E36                     	;# 
  7669  0E37                     	;# 
  7670  0E8F                     	;# 
  7671  0E90                     	;# 
  7672  0E91                     	;# 
  7673  0E92                     	;# 
  7674  0E93                     	;# 
  7675  0E94                     	;# 
  7676  0E95                     	;# 
  7677  0E96                     	;# 
  7678  0E97                     	;# 
  7679  0E9C                     	;# 
  7680  0E9D                     	;# 
  7681  0E9E                     	;# 
  7682  0EA1                     	;# 
  7683  0EA2                     	;# 
  7684  0EA3                     	;# 
  7685  0EA4                     	;# 
  7686  0EA5                     	;# 
  7687  0EA9                     	;# 
  7688  0EAA                     	;# 
  7689  0EAB                     	;# 
  7690  0EAC                     	;# 
  7691  0EB1                     	;# 
  7692  0EB2                     	;# 
  7693  0EB3                     	;# 
  7694  0EB8                     	;# 
  7695  0EB9                     	;# 
  7696  0EBA                     	;# 
  7697  0EBB                     	;# 
  7698  0EBC                     	;# 
  7699  0EBD                     	;# 
  7700  0EBE                     	;# 
  7701  0EC3                     	;# 
  7702  0EC5                     	;# 
  7703  0EC6                     	;# 
  7704  0EC7                     	;# 
  7705  0EC8                     	;# 
  7706  0EC9                     	;# 
  7707  0ECA                     	;# 
  7708  0ECB                     	;# 
  7709  0ECC                     	;# 
  7710  0F10                     	;# 
  7711  0F11                     	;# 
  7712  0F12                     	;# 
  7713  0F13                     	;# 
  7714  0F14                     	;# 
  7715  0F15                     	;# 
  7716  0F16                     	;# 
  7717  0F17                     	;# 
  7718  0F18                     	;# 
  7719  0F19                     	;# 
  7720  0F1A                     	;# 
  7721  0F1B                     	;# 
  7722  0F1C                     	;# 
  7723  0F1D                     	;# 
  7724  0F1E                     	;# 
  7725  0F1F                     	;# 
  7726  0F20                     	;# 
  7727  0F21                     	;# 
  7728  0F22                     	;# 
  7729  0F23                     	;# 
  7730  0F24                     	;# 
  7731  0F25                     	;# 
  7732  0F26                     	;# 
  7733  0F27                     	;# 
  7734  0F28                     	;# 
  7735  0F29                     	;# 
  7736  0F2A                     	;# 
  7737  0F2B                     	;# 
  7738  0F2C                     	;# 
  7739  0F2D                     	;# 
  7740  0F2E                     	;# 
  7741  0F2F                     	;# 
  7742  0F30                     	;# 
  7743  0F31                     	;# 
  7744  0F32                     	;# 
  7745  0F38                     	;# 
  7746  0F39                     	;# 
  7747  0F3A                     	;# 
  7748  0F3B                     	;# 
  7749  0F3C                     	;# 
  7750  0F3D                     	;# 
  7751  0F3E                     	;# 
  7752  0F3F                     	;# 
  7753  0F40                     	;# 
  7754  0F41                     	;# 
  7755  0F43                     	;# 
  7756  0F44                     	;# 
  7757  0F45                     	;# 
  7758  0F46                     	;# 
  7759  0F47                     	;# 
  7760  0F48                     	;# 
  7761  0F49                     	;# 
  7762  0F4A                     	;# 
  7763  0F4B                     	;# 
  7764  0F4C                     	;# 
  7765  0F4E                     	;# 
  7766  0F4F                     	;# 
  7767  0F50                     	;# 
  7768  0F51                     	;# 
  7769  0F52                     	;# 
  7770  0F53                     	;# 
  7771  0F54                     	;# 
  7772  0F55                     	;# 
  7773  0F56                     	;# 
  7774  0F57                     	;# 
  7775  0F59                     	;# 
  7776  0F5A                     	;# 
  7777  0F5B                     	;# 
  7778  0F5C                     	;# 
  7779  0F5D                     	;# 
  7780  0F61                     	;# 
  7781  0F62                     	;# 
  7782  0F64                     	;# 
  7783  0F65                     	;# 
  7784  0F66                     	;# 
  7785  0F67                     	;# 
  7786  0F68                     	;# 
  7787  0F69                     	;# 
  7788  0F6A                     	;# 
  7789  0F6B                     	;# 
  7790  0F6C                     	;# 
  7791  0F6D                     	;# 
  7792  0FE4                     	;# 
  7793  0FE5                     	;# 
  7794  0FE6                     	;# 
  7795  0FE7                     	;# 
  7796  0FE8                     	;# 
  7797  0FE9                     	;# 
  7798  0FEA                     	;# 
  7799  0FEB                     	;# 
  7800  0FED                     	;# 
  7801  0FEE                     	;# 
  7802  0FEF                     	;# 
  7803  0000                     	;# 
  7804  0001                     	;# 
  7805  0002                     	;# 
  7806  0003                     	;# 
  7807  0004                     	;# 
  7808  0005                     	;# 
  7809  0006                     	;# 
  7810  0007                     	;# 
  7811  0008                     	;# 
  7812  0009                     	;# 
  7813  000A                     	;# 
  7814  000B                     	;# 
  7815  000C                     	;# 
  7816  000D                     	;# 
  7817  000E                     	;# 
  7818  000F                     	;# 
  7819  0010                     	;# 
  7820  0011                     	;# 
  7821  0012                     	;# 
  7822  0013                     	;# 
  7823  0014                     	;# 
  7824  0015                     	;# 
  7825  0016                     	;# 
  7826  0017                     	;# 
  7827  0018                     	;# 
  7828  0019                     	;# 
  7829  001A                     	;# 
  7830  001C                     	;# 
  7831  001C                     	;# 
  7832  001D                     	;# 
  7833  001D                     	;# 
  7834  001E                     	;# 
  7835  001F                     	;# 
  7836  008C                     	;# 
  7837  008C                     	;# 
  7838  008D                     	;# 
  7839  008E                     	;# 
  7840  008E                     	;# 
  7841  008F                     	;# 
  7842  0090                     	;# 
  7843  0090                     	;# 
  7844  0091                     	;# 
  7845  0093                     	;# 
  7846  0094                     	;# 
  7847  0095                     	;# 
  7848  0096                     	;# 
  7849  0097                     	;# 
  7850  0098                     	;# 
  7851  0099                     	;# 
  7852  009A                     	;# 
  7853  009B                     	;# 
  7854  009C                     	;# 
  7855  009D                     	;# 
  7856  009E                     	;# 
  7857  010C                     	;# 
  7858  010D                     	;# 
  7859  010E                     	;# 
  7860  010E                     	;# 
  7861  010F                     	;# 
  7862  0110                     	;# 
  7863  0110                     	;# 
  7864  0111                     	;# 
  7865  0112                     	;# 
  7866  0112                     	;# 
  7867  0113                     	;# 
  7868  0114                     	;# 
  7869  0114                     	;# 
  7870  0115                     	;# 
  7871  0116                     	;# 
  7872  0116                     	;# 
  7873  0117                     	;# 
  7874  0119                     	;# 
  7875  0119                     	;# 
  7876  0119                     	;# 
  7877  011A                     	;# 
  7878  011A                     	;# 
  7879  011A                     	;# 
  7880  011B                     	;# 
  7881  011B                     	;# 
  7882  011B                     	;# 
  7883  011B                     	;# 
  7884  011B                     	;# 
  7885  011C                     	;# 
  7886  011C                     	;# 
  7887  011C                     	;# 
  7888  011D                     	;# 
  7889  011D                     	;# 
  7890  011D                     	;# 
  7891  011E                     	;# 
  7892  011E                     	;# 
  7893  011E                     	;# 
  7894  011F                     	;# 
  7895  011F                     	;# 
  7896  011F                     	;# 
  7897  011F                     	;# 
  7898  011F                     	;# 
  7899  018C                     	;# 
  7900  018D                     	;# 
  7901  018E                     	;# 
  7902  018F                     	;# 
  7903  0190                     	;# 
  7904  0191                     	;# 
  7905  0192                     	;# 
  7906  0196                     	;# 
  7907  0197                     	;# 
  7908  0198                     	;# 
  7909  0199                     	;# 
  7910  019A                     	;# 
  7911  019B                     	;# 
  7912  019C                     	;# 
  7913  020C                     	;# 
  7914  020C                     	;# 
  7915  020D                     	;# 
  7916  020E                     	;# 
  7917  020F                     	;# 
  7918  020F                     	;# 
  7919  0210                     	;# 
  7920  0210                     	;# 
  7921  0211                     	;# 
  7922  0211                     	;# 
  7923  0212                     	;# 
  7924  0212                     	;# 
  7925  0213                     	;# 
  7926  0214                     	;# 
  7927  0215                     	;# 
  7928  0215                     	;# 
  7929  0216                     	;# 
  7930  0216                     	;# 
  7931  0217                     	;# 
  7932  0217                     	;# 
  7933  0218                     	;# 
  7934  0218                     	;# 
  7935  0219                     	;# 
  7936  021A                     	;# 
  7937  021B                     	;# 
  7938  021B                     	;# 
  7939  021C                     	;# 
  7940  021C                     	;# 
  7941  021D                     	;# 
  7942  021D                     	;# 
  7943  021E                     	;# 
  7944  021F                     	;# 
  7945  028C                     	;# 
  7946  028C                     	;# 
  7947  028D                     	;# 
  7948  028D                     	;# 
  7949  028E                     	;# 
  7950  028F                     	;# 
  7951  0290                     	;# 
  7952  0290                     	;# 
  7953  0291                     	;# 
  7954  0292                     	;# 
  7955  0292                     	;# 
  7956  0293                     	;# 
  7957  0293                     	;# 
  7958  0294                     	;# 
  7959  0295                     	;# 
  7960  0296                     	;# 
  7961  0296                     	;# 
  7962  0297                     	;# 
  7963  0298                     	;# 
  7964  0298                     	;# 
  7965  0299                     	;# 
  7966  0299                     	;# 
  7967  029A                     	;# 
  7968  029B                     	;# 
  7969  029C                     	;# 
  7970  029C                     	;# 
  7971  029D                     	;# 
  7972  030C                     	;# 
  7973  030C                     	;# 
  7974  030D                     	;# 
  7975  030E                     	;# 
  7976  030F                     	;# 
  7977  0310                     	;# 
  7978  0310                     	;# 
  7979  0311                     	;# 
  7980  0312                     	;# 
  7981  0313                     	;# 
  7982  0314                     	;# 
  7983  0314                     	;# 
  7984  0315                     	;# 
  7985  0316                     	;# 
  7986  0317                     	;# 
  7987  0318                     	;# 
  7988  0318                     	;# 
  7989  0319                     	;# 
  7990  031A                     	;# 
  7991  031B                     	;# 
  7992  031C                     	;# 
  7993  031C                     	;# 
  7994  031D                     	;# 
  7995  031E                     	;# 
  7996  031F                     	;# 
  7997  038C                     	;# 
  7998  038C                     	;# 
  7999  038D                     	;# 
  8000  038E                     	;# 
  8001  0390                     	;# 
  8002  0390                     	;# 
  8003  0391                     	;# 
  8004  0392                     	;# 
  8005  040C                     	;# 
  8006  040D                     	;# 
  8007  040E                     	;# 
  8008  040F                     	;# 
  8009  0410                     	;# 
  8010  0411                     	;# 
  8011  0416                     	;# 
  8012  0416                     	;# 
  8013  0417                     	;# 
  8014  0418                     	;# 
  8015  0418                     	;# 
  8016  0419                     	;# 
  8017  041A                     	;# 
  8018  041A                     	;# 
  8019  041B                     	;# 
  8020  041C                     	;# 
  8021  041C                     	;# 
  8022  041D                     	;# 
  8023  041E                     	;# 
  8024  041F                     	;# 
  8025  048C                     	;# 
  8026  048C                     	;# 
  8027  048D                     	;# 
  8028  048E                     	;# 
  8029  048F                     	;# 
  8030  048F                     	;# 
  8031  0490                     	;# 
  8032  0491                     	;# 
  8033  0492                     	;# 
  8034  0492                     	;# 
  8035  0493                     	;# 
  8036  0494                     	;# 
  8037  0495                     	;# 
  8038  0495                     	;# 
  8039  0496                     	;# 
  8040  0497                     	;# 
  8041  0498                     	;# 
  8042  0499                     	;# 
  8043  049A                     	;# 
  8044  049B                     	;# 
  8045  049C                     	;# 
  8046  049D                     	;# 
  8047  050C                     	;# 
  8048  050C                     	;# 
  8049  050D                     	;# 
  8050  050E                     	;# 
  8051  050F                     	;# 
  8052  050F                     	;# 
  8053  0510                     	;# 
  8054  0511                     	;# 
  8055  0512                     	;# 
  8056  0512                     	;# 
  8057  0513                     	;# 
  8058  0514                     	;# 
  8059  0515                     	;# 
  8060  0515                     	;# 
  8061  0516                     	;# 
  8062  0517                     	;# 
  8063  0518                     	;# 
  8064  0519                     	;# 
  8065  051A                     	;# 
  8066  051B                     	;# 
  8067  051C                     	;# 
  8068  051D                     	;# 
  8069  058C                     	;# 
  8070  058C                     	;# 
  8071  058D                     	;# 
  8072  058E                     	;# 
  8073  058F                     	;# 
  8074  058F                     	;# 
  8075  0590                     	;# 
  8076  0591                     	;# 
  8077  0592                     	;# 
  8078  0593                     	;# 
  8079  060C                     	;# 
  8080  060D                     	;# 
  8081  060E                     	;# 
  8082  060F                     	;# 
  8083  0610                     	;# 
  8084  0611                     	;# 
  8085  0612                     	;# 
  8086  0613                     	;# 
  8087  0614                     	;# 
  8088  0616                     	;# 
  8089  0617                     	;# 
  8090  0618                     	;# 
  8091  0619                     	;# 
  8092  061A                     	;# 
  8093  061B                     	;# 
  8094  061C                     	;# 
  8095  061D                     	;# 
  8096  061E                     	;# 
  8097  068C                     	;# 
  8098  068D                     	;# 
  8099  068E                     	;# 
  8100  068F                     	;# 
  8101  0690                     	;# 
  8102  0691                     	;# 
  8103  0692                     	;# 
  8104  0693                     	;# 
  8105  0694                     	;# 
  8106  070C                     	;# 
  8107  070D                     	;# 
  8108  070E                     	;# 
  8109  070F                     	;# 
  8110  0710                     	;# 
  8111  0711                     	;# 
  8112  0712                     	;# 
  8113  0713                     	;# 
  8114  0714                     	;# 
  8115  0716                     	;# 
  8116  0717                     	;# 
  8117  0718                     	;# 
  8118  0719                     	;# 
  8119  071A                     	;# 
  8120  071B                     	;# 
  8121  071C                     	;# 
  8122  071D                     	;# 
  8123  071E                     	;# 
  8124  0796                     	;# 
  8125  0797                     	;# 
  8126  0798                     	;# 
  8127  0799                     	;# 
  8128  079A                     	;# 
  8129  079B                     	;# 
  8130  080C                     	;# 
  8131  080D                     	;# 
  8132  080E                     	;# 
  8133  080F                     	;# 
  8134  0810                     	;# 
  8135  0811                     	;# 
  8136  0812                     	;# 
  8137  0813                     	;# 
  8138  0814                     	;# 
  8139  081A                     	;# 
  8140  081B                     	;# 
  8141  081C                     	;# 
  8142  081D                     	;# 
  8143  081E                     	;# 
  8144  081F                     	;# 
  8145  088C                     	;# 
  8146  088D                     	;# 
  8147  088E                     	;# 
  8148  088F                     	;# 
  8149  0890                     	;# 
  8150  0891                     	;# 
  8151  0892                     	;# 
  8152  0893                     	;# 
  8153  0895                     	;# 
  8154  0896                     	;# 
  8155  0897                     	;# 
  8156  0898                     	;# 
  8157  0899                     	;# 
  8158  089A                     	;# 
  8159  089B                     	;# 
  8160  090C                     	;# 
  8161  090E                     	;# 
  8162  090F                     	;# 
  8163  091F                     	;# 
  8164  091F                     	;# 
  8165  098F                     	;# 
  8166  098F                     	;# 
  8167  0990                     	;# 
  8168  0991                     	;# 
  8169  0992                     	;# 
  8170  0993                     	;# 
  8171  0994                     	;# 
  8172  0995                     	;# 
  8173  0996                     	;# 
  8174  0997                     	;# 
  8175  0E0F                     	;# 
  8176  0E10                     	;# 
  8177  0E11                     	;# 
  8178  0E12                     	;# 
  8179  0E13                     	;# 
  8180  0E14                     	;# 
  8181  0E15                     	;# 
  8182  0E16                     	;# 
  8183  0E17                     	;# 
  8184  0E18                     	;# 
  8185  0E19                     	;# 
  8186  0E1A                     	;# 
  8187  0E1B                     	;# 
  8188  0E1C                     	;# 
  8189  0E1D                     	;# 
  8190  0E1E                     	;# 
  8191  0E1F                     	;# 
  8192  0E20                     	;# 
  8193  0E21                     	;# 
  8194  0E22                     	;# 
  8195  0E23                     	;# 
  8196  0E24                     	;# 
  8197  0E25                     	;# 
  8198  0E26                     	;# 
  8199  0E27                     	;# 
  8200  0E28                     	;# 
  8201  0E29                     	;# 
  8202  0E2A                     	;# 
  8203  0E2B                     	;# 
  8204  0E2C                     	;# 
  8205  0E2D                     	;# 
  8206  0E2E                     	;# 
  8207  0E2F                     	;# 
  8208  0E30                     	;# 
  8209  0E31                     	;# 
  8210  0E32                     	;# 
  8211  0E33                     	;# 
  8212  0E34                     	;# 
  8213  0E35                     	;# 
  8214  0E36                     	;# 
  8215  0E37                     	;# 
  8216  0E8F                     	;# 
  8217  0E90                     	;# 
  8218  0E91                     	;# 
  8219  0E92                     	;# 
  8220  0E93                     	;# 
  8221  0E94                     	;# 
  8222  0E95                     	;# 
  8223  0E96                     	;# 
  8224  0E97                     	;# 
  8225  0E9C                     	;# 
  8226  0E9D                     	;# 
  8227  0E9E                     	;# 
  8228  0EA1                     	;# 
  8229  0EA2                     	;# 
  8230  0EA3                     	;# 
  8231  0EA4                     	;# 
  8232  0EA5                     	;# 
  8233  0EA9                     	;# 
  8234  0EAA                     	;# 
  8235  0EAB                     	;# 
  8236  0EAC                     	;# 
  8237  0EB1                     	;# 
  8238  0EB2                     	;# 
  8239  0EB3                     	;# 
  8240  0EB8                     	;# 
  8241  0EB9                     	;# 
  8242  0EBA                     	;# 
  8243  0EBB                     	;# 
  8244  0EBC                     	;# 
  8245  0EBD                     	;# 
  8246  0EBE                     	;# 
  8247  0EC3                     	;# 
  8248  0EC5                     	;# 
  8249  0EC6                     	;# 
  8250  0EC7                     	;# 
  8251  0EC8                     	;# 
  8252  0EC9                     	;# 
  8253  0ECA                     	;# 
  8254  0ECB                     	;# 
  8255  0ECC                     	;# 
  8256  0F10                     	;# 
  8257  0F11                     	;# 
  8258  0F12                     	;# 
  8259  0F13                     	;# 
  8260  0F14                     	;# 
  8261  0F15                     	;# 
  8262  0F16                     	;# 
  8263  0F17                     	;# 
  8264  0F18                     	;# 
  8265  0F19                     	;# 
  8266  0F1A                     	;# 
  8267  0F1B                     	;# 
  8268  0F1C                     	;# 
  8269  0F1D                     	;# 
  8270  0F1E                     	;# 
  8271  0F1F                     	;# 
  8272  0F20                     	;# 
  8273  0F21                     	;# 
  8274  0F22                     	;# 
  8275  0F23                     	;# 
  8276  0F24                     	;# 
  8277  0F25                     	;# 
  8278  0F26                     	;# 
  8279  0F27                     	;# 
  8280  0F28                     	;# 
  8281  0F29                     	;# 
  8282  0F2A                     	;# 
  8283  0F2B                     	;# 
  8284  0F2C                     	;# 
  8285  0F2D                     	;# 
  8286  0F2E                     	;# 
  8287  0F2F                     	;# 
  8288  0F30                     	;# 
  8289  0F31                     	;# 
  8290  0F32                     	;# 
  8291  0F38                     	;# 
  8292  0F39                     	;# 
  8293  0F3A                     	;# 
  8294  0F3B                     	;# 
  8295  0F3C                     	;# 
  8296  0F3D                     	;# 
  8297  0F3E                     	;# 
  8298  0F3F                     	;# 
  8299  0F40                     	;# 
  8300  0F41                     	;# 
  8301  0F43                     	;# 
  8302  0F44                     	;# 
  8303  0F45                     	;# 
  8304  0F46                     	;# 
  8305  0F47                     	;# 
  8306  0F48                     	;# 
  8307  0F49                     	;# 
  8308  0F4A                     	;# 
  8309  0F4B                     	;# 
  8310  0F4C                     	;# 
  8311  0F4E                     	;# 
  8312  0F4F                     	;# 
  8313  0F50                     	;# 
  8314  0F51                     	;# 
  8315  0F52                     	;# 
  8316  0F53                     	;# 
  8317  0F54                     	;# 
  8318  0F55                     	;# 
  8319  0F56                     	;# 
  8320  0F57                     	;# 
  8321  0F59                     	;# 
  8322  0F5A                     	;# 
  8323  0F5B                     	;# 
  8324  0F5C                     	;# 
  8325  0F5D                     	;# 
  8326  0F61                     	;# 
  8327  0F62                     	;# 
  8328  0F64                     	;# 
  8329  0F65                     	;# 
  8330  0F66                     	;# 
  8331  0F67                     	;# 
  8332  0F68                     	;# 
  8333  0F69                     	;# 
  8334  0F6A                     	;# 
  8335  0F6B                     	;# 
  8336  0F6C                     	;# 
  8337  0F6D                     	;# 
  8338  0FE4                     	;# 
  8339  0FE5                     	;# 
  8340  0FE6                     	;# 
  8341  0FE7                     	;# 
  8342  0FE8                     	;# 
  8343  0FE9                     	;# 
  8344  0FEA                     	;# 
  8345  0FEB                     	;# 
  8346  0FED                     	;# 
  8347  0FEE                     	;# 
  8348  0FEF                     	;# 
  8349  0000                     	;# 
  8350  0001                     	;# 
  8351  0002                     	;# 
  8352  0003                     	;# 
  8353  0004                     	;# 
  8354  0005                     	;# 
  8355  0006                     	;# 
  8356  0007                     	;# 
  8357  0008                     	;# 
  8358  0009                     	;# 
  8359  000A                     	;# 
  8360  000B                     	;# 
  8361  000C                     	;# 
  8362  000D                     	;# 
  8363  000E                     	;# 
  8364  000F                     	;# 
  8365  0010                     	;# 
  8366  0011                     	;# 
  8367  0012                     	;# 
  8368  0013                     	;# 
  8369  0014                     	;# 
  8370  0015                     	;# 
  8371  0016                     	;# 
  8372  0017                     	;# 
  8373  0018                     	;# 
  8374  0019                     	;# 
  8375  001A                     	;# 
  8376  001C                     	;# 
  8377  001C                     	;# 
  8378  001D                     	;# 
  8379  001D                     	;# 
  8380  001E                     	;# 
  8381  001F                     	;# 
  8382  008C                     	;# 
  8383  008C                     	;# 
  8384  008D                     	;# 
  8385  008E                     	;# 
  8386  008E                     	;# 
  8387  008F                     	;# 
  8388  0090                     	;# 
  8389  0090                     	;# 
  8390  0091                     	;# 
  8391  0093                     	;# 
  8392  0094                     	;# 
  8393  0095                     	;# 
  8394  0096                     	;# 
  8395  0097                     	;# 
  8396  0098                     	;# 
  8397  0099                     	;# 
  8398  009A                     	;# 
  8399  009B                     	;# 
  8400  009C                     	;# 
  8401  009D                     	;# 
  8402  009E                     	;# 
  8403  010C                     	;# 
  8404  010D                     	;# 
  8405  010E                     	;# 
  8406  010E                     	;# 
  8407  010F                     	;# 
  8408  0110                     	;# 
  8409  0110                     	;# 
  8410  0111                     	;# 
  8411  0112                     	;# 
  8412  0112                     	;# 
  8413  0113                     	;# 
  8414  0114                     	;# 
  8415  0114                     	;# 
  8416  0115                     	;# 
  8417  0116                     	;# 
  8418  0116                     	;# 
  8419  0117                     	;# 
  8420  0119                     	;# 
  8421  0119                     	;# 
  8422  0119                     	;# 
  8423  011A                     	;# 
  8424  011A                     	;# 
  8425  011A                     	;# 
  8426  011B                     	;# 
  8427  011B                     	;# 
  8428  011B                     	;# 
  8429  011B                     	;# 
  8430  011B                     	;# 
  8431  011C                     	;# 
  8432  011C                     	;# 
  8433  011C                     	;# 
  8434  011D                     	;# 
  8435  011D                     	;# 
  8436  011D                     	;# 
  8437  011E                     	;# 
  8438  011E                     	;# 
  8439  011E                     	;# 
  8440  011F                     	;# 
  8441  011F                     	;# 
  8442  011F                     	;# 
  8443  011F                     	;# 
  8444  011F                     	;# 
  8445  018C                     	;# 
  8446  018D                     	;# 
  8447  018E                     	;# 
  8448  018F                     	;# 
  8449  0190                     	;# 
  8450  0191                     	;# 
  8451  0192                     	;# 
  8452  0196                     	;# 
  8453  0197                     	;# 
  8454  0198                     	;# 
  8455  0199                     	;# 
  8456  019A                     	;# 
  8457  019B                     	;# 
  8458  019C                     	;# 
  8459  020C                     	;# 
  8460  020C                     	;# 
  8461  020D                     	;# 
  8462  020E                     	;# 
  8463  020F                     	;# 
  8464  020F                     	;# 
  8465  0210                     	;# 
  8466  0210                     	;# 
  8467  0211                     	;# 
  8468  0211                     	;# 
  8469  0212                     	;# 
  8470  0212                     	;# 
  8471  0213                     	;# 
  8472  0214                     	;# 
  8473  0215                     	;# 
  8474  0215                     	;# 
  8475  0216                     	;# 
  8476  0216                     	;# 
  8477  0217                     	;# 
  8478  0217                     	;# 
  8479  0218                     	;# 
  8480  0218                     	;# 
  8481  0219                     	;# 
  8482  021A                     	;# 
  8483  021B                     	;# 
  8484  021B                     	;# 
  8485  021C                     	;# 
  8486  021C                     	;# 
  8487  021D                     	;# 
  8488  021D                     	;# 
  8489  021E                     	;# 
  8490  021F                     	;# 
  8491  028C                     	;# 
  8492  028C                     	;# 
  8493  028D                     	;# 
  8494  028D                     	;# 
  8495  028E                     	;# 
  8496  028F                     	;# 
  8497  0290                     	;# 
  8498  0290                     	;# 
  8499  0291                     	;# 
  8500  0292                     	;# 
  8501  0292                     	;# 
  8502  0293                     	;# 
  8503  0293                     	;# 
  8504  0294                     	;# 
  8505  0295                     	;# 
  8506  0296                     	;# 
  8507  0296                     	;# 
  8508  0297                     	;# 
  8509  0298                     	;# 
  8510  0298                     	;# 
  8511  0299                     	;# 
  8512  0299                     	;# 
  8513  029A                     	;# 
  8514  029B                     	;# 
  8515  029C                     	;# 
  8516  029C                     	;# 
  8517  029D                     	;# 
  8518  030C                     	;# 
  8519  030C                     	;# 
  8520  030D                     	;# 
  8521  030E                     	;# 
  8522  030F                     	;# 
  8523  0310                     	;# 
  8524  0310                     	;# 
  8525  0311                     	;# 
  8526  0312                     	;# 
  8527  0313                     	;# 
  8528  0314                     	;# 
  8529  0314                     	;# 
  8530  0315                     	;# 
  8531  0316                     	;# 
  8532  0317                     	;# 
  8533  0318                     	;# 
  8534  0318                     	;# 
  8535  0319                     	;# 
  8536  031A                     	;# 
  8537  031B                     	;# 
  8538  031C                     	;# 
  8539  031C                     	;# 
  8540  031D                     	;# 
  8541  031E                     	;# 
  8542  031F                     	;# 
  8543  038C                     	;# 
  8544  038C                     	;# 
  8545  038D                     	;# 
  8546  038E                     	;# 
  8547  0390                     	;# 
  8548  0390                     	;# 
  8549  0391                     	;# 
  8550  0392                     	;# 
  8551  040C                     	;# 
  8552  040D                     	;# 
  8553  040E                     	;# 
  8554  040F                     	;# 
  8555  0410                     	;# 
  8556  0411                     	;# 
  8557  0416                     	;# 
  8558  0416                     	;# 
  8559  0417                     	;# 
  8560  0418                     	;# 
  8561  0418                     	;# 
  8562  0419                     	;# 
  8563  041A                     	;# 
  8564  041A                     	;# 
  8565  041B                     	;# 
  8566  041C                     	;# 
  8567  041C                     	;# 
  8568  041D                     	;# 
  8569  041E                     	;# 
  8570  041F                     	;# 
  8571  048C                     	;# 
  8572  048C                     	;# 
  8573  048D                     	;# 
  8574  048E                     	;# 
  8575  048F                     	;# 
  8576  048F                     	;# 
  8577  0490                     	;# 
  8578  0491                     	;# 
  8579  0492                     	;# 
  8580  0492                     	;# 
  8581  0493                     	;# 
  8582  0494                     	;# 
  8583  0495                     	;# 
  8584  0495                     	;# 
  8585  0496                     	;# 
  8586  0497                     	;# 
  8587  0498                     	;# 
  8588  0499                     	;# 
  8589  049A                     	;# 
  8590  049B                     	;# 
  8591  049C                     	;# 
  8592  049D                     	;# 
  8593  050C                     	;# 
  8594  050C                     	;# 
  8595  050D                     	;# 
  8596  050E                     	;# 
  8597  050F                     	;# 
  8598  050F                     	;# 
  8599  0510                     	;# 
  8600  0511                     	;# 
  8601  0512                     	;# 
  8602  0512                     	;# 
  8603  0513                     	;# 
  8604  0514                     	;# 
  8605  0515                     	;# 
  8606  0515                     	;# 
  8607  0516                     	;# 
  8608  0517                     	;# 
  8609  0518                     	;# 
  8610  0519                     	;# 
  8611  051A                     	;# 
  8612  051B                     	;# 
  8613  051C                     	;# 
  8614  051D                     	;# 
  8615  058C                     	;# 
  8616  058C                     	;# 
  8617  058D                     	;# 
  8618  058E                     	;# 
  8619  058F                     	;# 
  8620  058F                     	;# 
  8621  0590                     	;# 
  8622  0591                     	;# 
  8623  0592                     	;# 
  8624  0593                     	;# 
  8625  060C                     	;# 
  8626  060D                     	;# 
  8627  060E                     	;# 
  8628  060F                     	;# 
  8629  0610                     	;# 
  8630  0611                     	;# 
  8631  0612                     	;# 
  8632  0613                     	;# 
  8633  0614                     	;# 
  8634  0616                     	;# 
  8635  0617                     	;# 
  8636  0618                     	;# 
  8637  0619                     	;# 
  8638  061A                     	;# 
  8639  061B                     	;# 
  8640  061C                     	;# 
  8641  061D                     	;# 
  8642  061E                     	;# 
  8643  068C                     	;# 
  8644  068D                     	;# 
  8645  068E                     	;# 
  8646  068F                     	;# 
  8647  0690                     	;# 
  8648  0691                     	;# 
  8649  0692                     	;# 
  8650  0693                     	;# 
  8651  0694                     	;# 
  8652  070C                     	;# 
  8653  070D                     	;# 
  8654  070E                     	;# 
  8655  070F                     	;# 
  8656  0710                     	;# 
  8657  0711                     	;# 
  8658  0712                     	;# 
  8659  0713                     	;# 
  8660  0714                     	;# 
  8661  0716                     	;# 
  8662  0717                     	;# 
  8663  0718                     	;# 
  8664  0719                     	;# 
  8665  071A                     	;# 
  8666  071B                     	;# 
  8667  071C                     	;# 
  8668  071D                     	;# 
  8669  071E                     	;# 
  8670  0796                     	;# 
  8671  0797                     	;# 
  8672  0798                     	;# 
  8673  0799                     	;# 
  8674  079A                     	;# 
  8675  079B                     	;# 
  8676  080C                     	;# 
  8677  080D                     	;# 
  8678  080E                     	;# 
  8679  080F                     	;# 
  8680  0810                     	;# 
  8681  0811                     	;# 
  8682  0812                     	;# 
  8683  0813                     	;# 
  8684  0814                     	;# 
  8685  081A                     	;# 
  8686  081B                     	;# 
  8687  081C                     	;# 
  8688  081D                     	;# 
  8689  081E                     	;# 
  8690  081F                     	;# 
  8691  088C                     	;# 
  8692  088D                     	;# 
  8693  088E                     	;# 
  8694  088F                     	;# 
  8695  0890                     	;# 
  8696  0891                     	;# 
  8697  0892                     	;# 
  8698  0893                     	;# 
  8699  0895                     	;# 
  8700  0896                     	;# 
  8701  0897                     	;# 
  8702  0898                     	;# 
  8703  0899                     	;# 
  8704  089A                     	;# 
  8705  089B                     	;# 
  8706  090C                     	;# 
  8707  090E                     	;# 
  8708  090F                     	;# 
  8709  091F                     	;# 
  8710  091F                     	;# 
  8711  098F                     	;# 
  8712  098F                     	;# 
  8713  0990                     	;# 
  8714  0991                     	;# 
  8715  0992                     	;# 
  8716  0993                     	;# 
  8717  0994                     	;# 
  8718  0995                     	;# 
  8719  0996                     	;# 
  8720  0997                     	;# 
  8721  0E0F                     	;# 
  8722  0E10                     	;# 
  8723  0E11                     	;# 
  8724  0E12                     	;# 
  8725  0E13                     	;# 
  8726  0E14                     	;# 
  8727  0E15                     	;# 
  8728  0E16                     	;# 
  8729  0E17                     	;# 
  8730  0E18                     	;# 
  8731  0E19                     	;# 
  8732  0E1A                     	;# 
  8733  0E1B                     	;# 
  8734  0E1C                     	;# 
  8735  0E1D                     	;# 
  8736  0E1E                     	;# 
  8737  0E1F                     	;# 
  8738  0E20                     	;# 
  8739  0E21                     	;# 
  8740  0E22                     	;# 
  8741  0E23                     	;# 
  8742  0E24                     	;# 
  8743  0E25                     	;# 
  8744  0E26                     	;# 
  8745  0E27                     	;# 
  8746  0E28                     	;# 
  8747  0E29                     	;# 
  8748  0E2A                     	;# 
  8749  0E2B                     	;# 
  8750  0E2C                     	;# 
  8751  0E2D                     	;# 
  8752  0E2E                     	;# 
  8753  0E2F                     	;# 
  8754  0E30                     	;# 
  8755  0E31                     	;# 
  8756  0E32                     	;# 
  8757  0E33                     	;# 
  8758  0E34                     	;# 
  8759  0E35                     	;# 
  8760  0E36                     	;# 
  8761  0E37                     	;# 
  8762  0E8F                     	;# 
  8763  0E90                     	;# 
  8764  0E91                     	;# 
  8765  0E92                     	;# 
  8766  0E93                     	;# 
  8767  0E94                     	;# 
  8768  0E95                     	;# 
  8769  0E96                     	;# 
  8770  0E97                     	;# 
  8771  0E9C                     	;# 
  8772  0E9D                     	;# 
  8773  0E9E                     	;# 
  8774  0EA1                     	;# 
  8775  0EA2                     	;# 
  8776  0EA3                     	;# 
  8777  0EA4                     	;# 
  8778  0EA5                     	;# 
  8779  0EA9                     	;# 
  8780  0EAA                     	;# 
  8781  0EAB                     	;# 
  8782  0EAC                     	;# 
  8783  0EB1                     	;# 
  8784  0EB2                     	;# 
  8785  0EB3                     	;# 
  8786  0EB8                     	;# 
  8787  0EB9                     	;# 
  8788  0EBA                     	;# 
  8789  0EBB                     	;# 
  8790  0EBC                     	;# 
  8791  0EBD                     	;# 
  8792  0EBE                     	;# 
  8793  0EC3                     	;# 
  8794  0EC5                     	;# 
  8795  0EC6                     	;# 
  8796  0EC7                     	;# 
  8797  0EC8                     	;# 
  8798  0EC9                     	;# 
  8799  0ECA                     	;# 
  8800  0ECB                     	;# 
  8801  0ECC                     	;# 
  8802  0F10                     	;# 
  8803  0F11                     	;# 
  8804  0F12                     	;# 
  8805  0F13                     	;# 
  8806  0F14                     	;# 
  8807  0F15                     	;# 
  8808  0F16                     	;# 
  8809  0F17                     	;# 
  8810  0F18                     	;# 
  8811  0F19                     	;# 
  8812  0F1A                     	;# 
  8813  0F1B                     	;# 
  8814  0F1C                     	;# 
  8815  0F1D                     	;# 
  8816  0F1E                     	;# 
  8817  0F1F                     	;# 
  8818  0F20                     	;# 
  8819  0F21                     	;# 
  8820  0F22                     	;# 
  8821  0F23                     	;# 
  8822  0F24                     	;# 
  8823  0F25                     	;# 
  8824  0F26                     	;# 
  8825  0F27                     	;# 
  8826  0F28                     	;# 
  8827  0F29                     	;# 
  8828  0F2A                     	;# 
  8829  0F2B                     	;# 
  8830  0F2C                     	;# 
  8831  0F2D                     	;# 
  8832  0F2E                     	;# 
  8833  0F2F                     	;# 
  8834  0F30                     	;# 
  8835  0F31                     	;# 
  8836  0F32                     	;# 
  8837  0F38                     	;# 
  8838  0F39                     	;# 
  8839  0F3A                     	;# 
  8840  0F3B                     	;# 
  8841  0F3C                     	;# 
  8842  0F3D                     	;# 
  8843  0F3E                     	;# 
  8844  0F3F                     	;# 
  8845  0F40                     	;# 
  8846  0F41                     	;# 
  8847  0F43                     	;# 
  8848  0F44                     	;# 
  8849  0F45                     	;# 
  8850  0F46                     	;# 
  8851  0F47                     	;# 
  8852  0F48                     	;# 
  8853  0F49                     	;# 
  8854  0F4A                     	;# 
  8855  0F4B                     	;# 
  8856  0F4C                     	;# 
  8857  0F4E                     	;# 
  8858  0F4F                     	;# 
  8859  0F50                     	;# 
  8860  0F51                     	;# 
  8861  0F52                     	;# 
  8862  0F53                     	;# 
  8863  0F54                     	;# 
  8864  0F55                     	;# 
  8865  0F56                     	;# 
  8866  0F57                     	;# 
  8867  0F59                     	;# 
  8868  0F5A                     	;# 
  8869  0F5B                     	;# 
  8870  0F5C                     	;# 
  8871  0F5D                     	;# 
  8872  0F61                     	;# 
  8873  0F62                     	;# 
  8874  0F64                     	;# 
  8875  0F65                     	;# 
  8876  0F66                     	;# 
  8877  0F67                     	;# 
  8878  0F68                     	;# 
  8879  0F69                     	;# 
  8880  0F6A                     	;# 
  8881  0F6B                     	;# 
  8882  0F6C                     	;# 
  8883  0F6D                     	;# 
  8884  0FE4                     	;# 
  8885  0FE5                     	;# 
  8886  0FE6                     	;# 
  8887  0FE7                     	;# 
  8888  0FE8                     	;# 
  8889  0FE9                     	;# 
  8890  0FEA                     	;# 
  8891  0FEB                     	;# 
  8892  0FED                     	;# 
  8893  0FEE                     	;# 
  8894  0FEF                     	;# 
  8895                           
  8896                           	psect	idataBANK0
  8897  0B2A                     __pidataBANK0:	
  8898                           
  8899                           ;initializer for _mode_field_subfield
  8900  0B2A  34FF               	retlw	255
  8901  0B2B  34FF               	retlw	255
  8902  0B2C  34FF               	retlw	255
  8903  0B2D  34FF               	retlw	255
  8904                           
  8905                           ;initializer for _tala
  8906  0B2E  3403               	retlw	3
  8907                           
  8908                           ;initializer for _pmon
  8909  0B2F  3405               	retlw	5
  8910                           
  8911                           ;initializer for _nreg
  8912  0B30  341E               	retlw	30
  8913                           
  8914                           	psect	stringtext1
  8915  1000                     __pstringtext1:	
  8916  1000                     _fsmStateTable:	
  8917  1000  34D6               	retlw	low _do_I2C_IDLE
  8918  1001  340A               	retlw	high _do_I2C_IDLE
  8919  1002  3459               	retlw	low _do_I2C_SEND_ADR_READ
  8920  1003  340B               	retlw	high _do_I2C_SEND_ADR_READ
  8921  1004  3441               	retlw	low _do_I2C_SEND_ADR_WRITE
  8922  1005  340B               	retlw	high _do_I2C_SEND_ADR_WRITE
  8923  1006  3474               	retlw	low _do_I2C_TX
  8924  1007  3406               	retlw	high _do_I2C_TX
  8925  1008  3415               	retlw	low _do_I2C_RX
  8926  1009  3407               	retlw	high _do_I2C_RX
  8927  100A  341C               	retlw	low _do_I2C_RCEN
  8928  100B  340B               	retlw	high _do_I2C_RCEN
  8929  100C  341A               	retlw	low _do_I2C_TX_EMPTY
  8930  100D  340F               	retlw	high _do_I2C_TX_EMPTY
  8931  100E  34DB               	retlw	low _do_I2C_SEND_RESTART_READ
  8932  100F  340A               	retlw	high _do_I2C_SEND_RESTART_READ
  8933  1010  34E0               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8934  1011  340A               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8935  1012  34E5               	retlw	low _do_I2C_SEND_RESTART
  8936  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  8937  1014  34EA               	retlw	low _do_I2C_SEND_STOP
  8938  1015  340A               	retlw	high _do_I2C_SEND_STOP
  8939  1016  34EF               	retlw	low _do_I2C_DO_ACK
  8940  1017  340A               	retlw	high _do_I2C_DO_ACK
  8941  1018  34F4               	retlw	low _do_I2C_DO_NACK_STOP
  8942  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  8943  101A  34F9               	retlw	low _do_I2C_DO_NACK_RESTART
  8944  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  8945  101C  3439               	retlw	low _do_I2C_RESET
  8946  101D  340B               	retlw	high _do_I2C_RESET
  8947  101E  3493               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8948  101F  340E               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8949  1020                     __end_of_fsmStateTable:	
  8950                           
  8951                           	psect	nvBANK0
  8952  0064                     __pnvBANK0:	
  8953  0064                     _TMR1_InterruptHandler:	
  8954  0064                     	ds	2
  8955  0066                     _timer1ReloadVal:	
  8956  0066                     	ds	2
  8957  0068                     _INT_InterruptHandler:	
  8958  0068                     	ds	2
  8959                           
  8960                           	psect	nvBANK1
  8961  00C8                     __pnvBANK1:	
  8962  00C8                     _TMR0_InterruptHandler:	
  8963  00C8                     	ds	2
  8964  00CA                     _TMR2_InterruptHandler:	
  8965  00CA                     	ds	2
  8966  001E                     _T0CON0bits	set	30
  8967  001E                     _T0CON0	set	30
  8968  001C                     _TMR0L	set	28
  8969  001D                     _TMR0H	set	29
  8970  001F                     _T0CON1	set	31
  8971  000E                     _PORTCbits	set	14
  8972  0013                     _TRISCbits	set	19
  8973  000D                     _PORTBbits	set	13
  8974  0016                     _LATAbits	set	22
  8975  0014                     _TRISD	set	20
  8976  0013                     _TRISC	set	19
  8977  0012                     _TRISB	set	18
  8978  0011                     _TRISA	set	17
  8979  0015                     _TRISE	set	21
  8980  0018                     _LATC	set	24
  8981  0017                     _LATB	set	23
  8982  0016                     _LATA	set	22
  8983  0019                     _LATD	set	25
  8984  001A                     _LATE	set	26
  8985  000B                     _INTCONbits	set	11
  8986  0094                     _ADCON1bits	set	148
  8987  008E                     _ADPREVL	set	142
  8988  008F                     _ADPREVH	set	143
  8989  0097                     _ADSTATbits	set	151
  8990  0090                     _ADACCL	set	144
  8991  0091                     _ADACCH	set	145
  8992  0095                     _ADCON2bits	set	149
  8993  009C                     _ADPRE	set	156
  8994  0096                     _ADCON3bits	set	150
  8995  008C                     _ADRESL	set	140
  8996  008D                     _ADRESH	set	141
  8997  0093                     _ADCON0bits	set	147
  8998  009D                     _ADACQ	set	157
  8999  0093                     _ADCON0	set	147
  9000  0098                     _ADCLK	set	152
  9001  0099                     _ADACT	set	153
  9002  009A                     _ADREF	set	154
  9003  0097                     _ADSTAT	set	151
  9004  0096                     _ADCON3	set	150
  9005  0095                     _ADCON2	set	149
  9006  0094                     _ADCON1	set	148
  9007  009B                     _ADCAP	set	155
  9008  009E                     _ADPCH	set	158
  9009  0116                     _ADERRL	set	278
  9010  0117                     _ADERRH	set	279
  9011  0114                     _ADFLTRL	set	276
  9012  0115                     _ADFLTRH	set	277
  9013  010C                     _ADCNT	set	268
  9014  010D                     _ADRPT	set	269
  9015  0113                     _ADSTPTH	set	275
  9016  0112                     _ADSTPTL	set	274
  9017  0111                     _ADUTHH	set	273
  9018  0110                     _ADUTHL	set	272
  9019  010F                     _ADLTHH	set	271
  9020  010E                     _ADLTHL	set	270
  9021  018F                     _SSP1STATbits	set	399
  9022  018E                     _SSP1MSK	set	398
  9023  018C                     _SSP1BUF	set	396
  9024  0191                     _SSP1CON2bits	set	401
  9025  018D                     _SSP1ADD	set	397
  9026  0191                     _SSP1CON2	set	401
  9027  0190                     _SSP1CON1	set	400
  9028  018F                     _SSP1STAT	set	399
  9029  0190                     _SSP1CON1bits	set	400
  9030  021F                     _CCPTMRS1bits	set	543
  9031  020F                     _T1GCONbits	set	527
  9032  020E                     _T1CONbits	set	526
  9033  020E                     _T1CON	set	526
  9034  020C                     _TMR1L	set	524
  9035  020D                     _TMR1H	set	525
  9036  0211                     _T1CLK	set	529
  9037  0210                     _T1GATE	set	528
  9038  020F                     _T1GCON	set	527
  9039  028D                     _PR2	set	653
  9040  028C                     _TMR2	set	652
  9041  028E                     _T2CONbits	set	654
  9042  0291                     _T2RSTbits	set	657
  9043  028F                     _T2HLTbits	set	655
  9044  028E                     _T2CON	set	654
  9045  028C                     _T2TMR	set	652
  9046  028D                     _T2PR	set	653
  9047  0291                     _T2RST	set	657
  9048  028F                     _T2HLT	set	655
  9049  0290                     _T2CLKCON	set	656
  9050  038C                     _PWM6DCL	set	908
  9051  038D                     _PWM6DCH	set	909
  9052  038E                     _PWM6CON	set	910
  9053  070F                     _PIR3bits	set	1807
  9054  0719                     _PIE3bits	set	1817
  9055  0710                     _PIR4bits	set	1808
  9056  071A                     _PIE4bits	set	1818
  9057  0716                     _PIE0bits	set	1814
  9058  070C                     _PIR0bits	set	1804
  9059  079B                     _PMD5	set	1947
  9060  079A                     _PMD4	set	1946
  9061  0799                     _PMD3	set	1945
  9062  0798                     _PMD2	set	1944
  9063  0797                     _PMD1	set	1943
  9064  0796                     _PMD0	set	1942
  9065  081F                     _NVMCON2	set	2079
  9066  081C                     _NVMDATL	set	2076
  9067  081D                     _NVMDATH	set	2077
  9068  081E                     _NVMCON1bits	set	2078
  9069  081B                     _NVMADRH	set	2075
  9070  081A                     _NVMADRL	set	2074
  9071  0892                     _OSCTUNE	set	2194
  9072  0893                     _OSCFRQ	set	2195
  9073  0891                     _OSCEN	set	2193
  9074  088F                     _OSCCON3	set	2191
  9075  088D                     _OSCCON1	set	2189
  9076  0EC6                     _SSP1DATPPS	set	3782
  9077  0EC5                     _SSP1CLKPPS	set	3781
  9078  0E90                     _INTPPS	set	3728
  9079  0F44                     _WPUBbits	set	3908
  9080  0F16                     _RA6PPS	set	3862
  9081  0F24                     _RC4PPS	set	3876
  9082  0F23                     _RC3PPS	set	3875
  9083  0F68                     _INLVLE	set	3944
  9084  0F5D                     _INLVLD	set	3933
  9085  0F52                     _INLVLC	set	3922
  9086  0F47                     _INLVLB	set	3911
  9087  0F3C                     _INLVLA	set	3900
  9088  0F67                     _SLRCONE	set	3943
  9089  0F5C                     _SLRCOND	set	3932
  9090  0F51                     _SLRCONC	set	3921
  9091  0F46                     _SLRCONB	set	3910
  9092  0F3B                     _SLRCONA	set	3899
  9093  0F5B                     _ODCOND	set	3931
  9094  0F50                     _ODCONC	set	3920
  9095  0F45                     _ODCONB	set	3909
  9096  0F3A                     _ODCONA	set	3898
  9097  0F66                     _ODCONE	set	3942
  9098  0F4F                     _WPUC	set	3919
  9099  0F39                     _WPUA	set	3897
  9100  0F44                     _WPUB	set	3908
  9101  0F65                     _WPUE	set	3941
  9102  0F5A                     _WPUD	set	3930
  9103  0F38                     _ANSELA	set	3896
  9104  0F64                     _ANSELE	set	3940
  9105  0F43                     _ANSELB	set	3907
  9106  0F4E                     _ANSELC	set	3918
  9107  0F59                     _ANSELD	set	3929
  9108  7A7C                     _WPUC4	set	31356
  9109  7A7B                     _WPUC3	set	31355
  9110                           
  9111                           ; #config settings
  9112  0000                     
  9113                           	psect	cinit
  9114  005D                     start_initialization:	
  9115  005D                     __initialization:	
  9116                           
  9117                           ; Initialize objects allocated to BANK0
  9118  005D  302A               	movlw	low __pidataBANK0
  9119  005E  0084               	movwf	4
  9120  005F  308B               	movlw	(high __pidataBANK0)| (0+128)
  9121  0060  0085               	movwf	5
  9122  0061  305D               	movlw	low __pdataBANK0
  9123  0062  0086               	movwf	6
  9124  0063  3000               	movlw	high __pdataBANK0
  9125  0064  0087               	movwf	7
  9126  0065  3007               	movlw	7
  9127  0066  318B  2316  3180   	fcall	init_ram
  9128                           
  9129                           ; Clear objects allocated to COMMON
  9130  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9131                           
  9132                           ; Clear objects allocated to BANK0
  9133  006A  3020               	movlw	low __pbssBANK0
  9134  006B  0084               	movwf	4
  9135  006C  3000               	movlw	high __pbssBANK0
  9136  006D  0085               	movwf	5
  9137  006E  3024               	movlw	36
  9138  006F  318B  2310  3180   	fcall	clear_ram0
  9139                           
  9140                           ; Clear objects allocated to BANK1
  9141  0072  30A0               	movlw	low __pbssBANK1
  9142  0073  0084               	movwf	4
  9143  0074  3000               	movlw	high __pbssBANK1
  9144  0075  0085               	movwf	5
  9145  0076  3022               	movlw	34
  9146  0077  318B  2310  3180   	fcall	clear_ram0
  9147  007A                     end_of_initialization:	
  9148                           ;End of C runtime variable initialization code
  9149                           
  9150  007A                     __end_of__initialization:	
  9151  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9152  007B  0020               	movlb	0
  9153  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9154                           
  9155                           	psect	bssCOMMON
  9156  007D                     __pbssCOMMON:	
  9157  007D                     _clkms:	
  9158  007D                     	ds	1
  9159                           
  9160                           	psect	bssBANK0
  9161  0020                     __pbssBANK0:	
  9162  0020                     _lum_threshold:	
  9163  0020                     	ds	2
  9164  0022                     _lum_bin:	
  9165  0022                     	ds	2
  9166  0024                     _duty_cycle:	
  9167  0024                     	ds	2
  9168  0026                     _convertedValue:	
  9169  0026                     	ds	2
  9170  0028                     _min_units:	
  9171  0028                     	ds	2
  9172  002A                     _min_tens:	
  9173  002A                     	ds	2
  9174  002C                     _hours_units:	
  9175  002C                     	ds	2
  9176  002E                     _hours_tens:	
  9177  002E                     	ds	2
  9178  0030                     _value:	
  9179  0030                     	ds	2
  9180  0032                     _i2c1_driver_i2cISR:	
  9181  0032                     	ds	2
  9182  0034                     _i2c1_driver_busCollisionISR:	
  9183  0034                     	ds	2
  9184  0036                     _alaf:	
  9185  0036                     	ds	1
  9186  0037                     _temp:	
  9187  0037                     	ds	1
  9188  0038                     _alarm:	
  9189  0038                     	ds	1
  9190  0039                     _config_mode:	
  9191  0039                     	ds	1
  9192  003A                     _set_mode:	
  9193  003A                     	ds	1
  9194  003B                     _last1m:	
  9195  003B                     	ds	1
  9196  003C                     _last5s:	
  9197  003C                     	ds	1
  9198  003D                     _last_ms2:	
  9199  003D                     	ds	1
  9200  003E                     _last_ms:	
  9201  003E                     	ds	1
  9202  003F                     _seg:	
  9203  003F                     	ds	1
  9204  0040                     _clkm:	
  9205  0040                     	ds	1
  9206  0041                     _clkh:	
  9207  0041                     	ds	1
  9208  0042                     _nreg_pt:	
  9209  0042                     	ds	1
  9210  0043                     _nreg_init:	
  9211  0043                     	ds	1
  9212                           
  9213                           	psect	dataBANK0
  9214  005D                     __pdataBANK0:	
  9215  005D                     _mode_field_subfield:	
  9216  005D                     	ds	4
  9217  0061                     _tala:	
  9218  0061                     	ds	1
  9219  0062                     _pmon:	
  9220  0062                     	ds	1
  9221  0063                     _nreg:	
  9222  0063                     	ds	1
  9223                           
  9224                           	psect	bssBANK1
  9225  00A0                     __pbssBANK1:	
  9226  00A0                     _i2c_status:	
  9227  00A0                     	ds	29
  9228  00BD                     _ring_byte:	
  9229  00BD                     	ds	5
  9230                           
  9231                           	psect	inittext
  9232  0B16                     init_ram:	
  9233  0B16  00FE               	movwf	btemp
  9234  0B17                     initloop:	
  9235  0B17  0012               	moviw fsr0++
  9236  0B18  001E               	movwi fsr1++
  9237  0B19  0BFE               	decfsz	btemp,f
  9238  0B1A  2B17               	goto	initloop
  9239  0B1B  3400               	retlw	0
  9240                           
  9241                           	psect	clrtext
  9242  0B10                     clear_ram0:	
  9243                           ;	Called with FSR0 containing the base address, and
  9244                           ;	WREG with the size to clear
  9245                           
  9246  0B10  0064               	clrwdt	;clear the watchdog before getting into this loop
  9247  0B11                     clrloop0:	
  9248  0B11  0180               	clrf	0	;clear RAM location pointed to by FSR
  9249  0B12  3101               	addfsr 0,1
  9250  0B13  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9251  0B14  2B11               	goto	clrloop0	;have we reached the end yet?
  9252  0B15  3400               	retlw	0	;all done for this memory range, return
  9253                           
  9254                           	psect	cstackBANK1
  9255  00C2                     __pcstackBANK1:	
  9256  00C2                     main@aux:	
  9257                           
  9258                           ; 1 bytes @ 0x0
  9259  00C2                     	ds	1
  9260  00C3                     main@aux1:	
  9261                           
  9262                           ; 1 bytes @ 0x1
  9263  00C3                     	ds	3
  9264  00C6                     main@t5s:	
  9265                           
  9266                           ; 1 bytes @ 0x4
  9267  00C6                     	ds	1
  9268  00C7                     _main$2341:	
  9269                           
  9270                           ; 1 bytes @ 0x5
  9271  00C7                     	ds	1
  9272                           
  9273                           	psect	cstackCOMMON
  9274  0070                     __pcstackCOMMON:	
  9275  0070                     ?_i2c1_driver_open:	
  9276  0070                     ?_i2c1_driver_isNACK:	
  9277                           ; 1 bit 
  9278                           
  9279  0070                     ?_setCallBack:	
  9280                           ; 1 bit 
  9281                           
  9282  0070                     ?_mssp1_clearIRQ:	
  9283                           ; 1 bytes @ 0x0
  9284                           
  9285  0070                     ??_mssp1_clearIRQ:	
  9286                           ; 1 bytes @ 0x0
  9287                           
  9288  0070                     ?_i2c_busCollisionISR:	
  9289                           ; 1 bytes @ 0x0
  9290                           
  9291  0070                     ??_i2c_busCollisionISR:	
  9292                           ; 1 bytes @ 0x0
  9293                           
  9294  0070                     ?_i2c_ISR:	
  9295                           ; 1 bytes @ 0x0
  9296                           
  9297  0070                     ?_i2c1_driver_resetBus:	
  9298                           ; 1 bytes @ 0x0
  9299                           
  9300  0070                     ??_i2c1_driver_resetBus:	
  9301                           ; 1 bytes @ 0x0
  9302                           
  9303  0070                     ?_i2c1_driver_restart:	
  9304                           ; 1 bytes @ 0x0
  9305                           
  9306  0070                     ??_i2c1_driver_restart:	
  9307                           ; 1 bytes @ 0x0
  9308                           
  9309  0070                     ?_i2c1_driver_stop:	
  9310                           ; 1 bytes @ 0x0
  9311                           
  9312  0070                     ??_i2c1_driver_stop:	
  9313                           ; 1 bytes @ 0x0
  9314                           
  9315  0070                     ?_i2c1_driver_TXData:	
  9316                           ; 1 bytes @ 0x0
  9317                           
  9318  0070                     ??_i2c1_driver_TXData:	
  9319                           ; 1 bytes @ 0x0
  9320                           
  9321  0070                     ?_i2c1_driver_startRX:	
  9322                           ; 1 bytes @ 0x0
  9323                           
  9324  0070                     ??_i2c1_driver_startRX:	
  9325                           ; 1 bytes @ 0x0
  9326                           
  9327  0070                     ?_i2c1_driver_sendACK:	
  9328                           ; 1 bytes @ 0x0
  9329                           
  9330  0070                     ??_i2c1_driver_sendACK:	
  9331                           ; 1 bytes @ 0x0
  9332                           
  9333  0070                     ?_i2c1_driver_sendNACK:	
  9334                           ; 1 bytes @ 0x0
  9335                           
  9336  0070                     ??_i2c1_driver_sendNACK:	
  9337                           ; 1 bytes @ 0x0
  9338                           
  9339  0070                     ??_i2c1_driver_isNACK:	
  9340                           ; 1 bytes @ 0x0
  9341                           
  9342  0070                     ?_i2c1_driver_getRXData:	
  9343                           ; 1 bytes @ 0x0
  9344                           
  9345  0070                     ??_i2c1_driver_getRXData:	
  9346                           ; 1 bytes @ 0x0
  9347                           
  9348  0070                     ?_mssp1_setIRQ:	
  9349                           ; 1 bytes @ 0x0
  9350                           
  9351  0070                     ??_mssp1_setIRQ:	
  9352                           ; 1 bytes @ 0x0
  9353                           
  9354  0070                     ?_i2c1_driver_clearBusCollision:	
  9355                           ; 1 bytes @ 0x0
  9356                           
  9357  0070                     ??_i2c1_driver_clearBusCollision:	
  9358                           ; 1 bytes @ 0x0
  9359                           
  9360  0070                     ?_INT_CallBack:	
  9361                           ; 1 bytes @ 0x0
  9362                           
  9363  0070                     ?_TMR0_ISR:	
  9364                           ; 1 bytes @ 0x0
  9365                           
  9366  0070                     ?_TMR1_ISR:	
  9367                           ; 1 bytes @ 0x0
  9368                           
  9369  0070                     ?_TMR2_ISR:	
  9370                           ; 1 bytes @ 0x0
  9371                           
  9372  0070                     ?_PMD_Initialize:	
  9373                           ; 1 bytes @ 0x0
  9374                           
  9375  0070                     ?_PIN_MANAGER_Initialize:	
  9376                           ; 1 bytes @ 0x0
  9377                           
  9378  0070                     ?_OSCILLATOR_Initialize:	
  9379                           ; 1 bytes @ 0x0
  9380                           
  9381  0070                     ?_PWM6_Initialize:	
  9382                           ; 1 bytes @ 0x0
  9383                           
  9384  0070                     ?_ADCC_Initialize:	
  9385                           ; 1 bytes @ 0x0
  9386                           
  9387  0070                     ?_TMR2_Initialize:	
  9388                           ; 1 bytes @ 0x0
  9389                           
  9390  0070                     ?_TMR1_Initialize:	
  9391                           ; 1 bytes @ 0x0
  9392                           
  9393  0070                     ?_TMR0_Initialize:	
  9394                           ; 1 bytes @ 0x0
  9395                           
  9396  0070                     ?_TMR1_DefaultInterruptHandler:	
  9397                           ; 1 bytes @ 0x0
  9398                           
  9399  0070                     ??_TMR1_DefaultInterruptHandler:	
  9400                           ; 1 bytes @ 0x0
  9401                           
  9402  0070                     ?_TMR2_DefaultInterruptHandler:	
  9403                           ; 1 bytes @ 0x0
  9404                           
  9405  0070                     ??_TMR2_DefaultInterruptHandler:	
  9406                           ; 1 bytes @ 0x0
  9407                           
  9408  0070                     ?_checkDebounceSW1:	
  9409                           ; 1 bytes @ 0x0
  9410                           
  9411  0070                     ?_TMR0_StopTimer:	
  9412                           ; 1 bytes @ 0x0
  9413                           
  9414  0070                     ??_TMR0_StopTimer:	
  9415                           ; 1 bytes @ 0x0
  9416                           
  9417  0070                     ?_handler_clock_hms:	
  9418                           ; 1 bytes @ 0x0
  9419                           
  9420  0070                     ??_handler_clock_hms:	
  9421                           ; 1 bytes @ 0x0
  9422                           
  9423  0070                     ?_handler_clock_ms:	
  9424                           ; 1 bytes @ 0x0
  9425                           
  9426  0070                     ??_handler_clock_ms:	
  9427                           ; 1 bytes @ 0x0
  9428                           
  9429  0070                     ?_recoverData:	
  9430                           ; 1 bytes @ 0x0
  9431                           
  9432  0070                     ?_tsttc:	
  9433                           ; 1 bytes @ 0x0
  9434                           
  9435  0070                     ?_cksum_w:	
  9436                           ; 1 bytes @ 0x0
  9437                           
  9438  0070                     ?_TMR0_StartTimer:	
  9439                           ; 1 bytes @ 0x0
  9440                           
  9441  0070                     ?_config_routine:	
  9442                           ; 1 bytes @ 0x0
  9443                           
  9444  0070                     ?_all_LED:	
  9445                           ; 1 bytes @ 0x0
  9446                           
  9447  0070                     ?_mod1_LED:	
  9448                           ; 1 bytes @ 0x0
  9449                           
  9450  0070                     ?_mod2_LED:	
  9451                           ; 1 bytes @ 0x0
  9452                           
  9453  0070                     ?_mod3_LED:	
  9454                           ; 1 bytes @ 0x0
  9455                           
  9456  0070                     ?_mod4_LED:	
  9457                           ; 1 bytes @ 0x0
  9458                           
  9459  0070                     ?_checkDebounceSW2:	
  9460                           ; 1 bytes @ 0x0
  9461                           
  9462  0070                     ?_mode_select_LED:	
  9463                           ; 1 bytes @ 0x0
  9464                           
  9465  0070                     ?_clock_subfields:	
  9466                           ; 1 bytes @ 0x0
  9467                           
  9468  0070                     ?_cksum:	
  9469                           ; 1 bytes @ 0x0
  9470                           
  9471  0070                     ?_reset_recv:	
  9472                           ; 1 bytes @ 0x0
  9473                           
  9474  0070                     ?_WriteI2C:	
  9475                           ; 1 bytes @ 0x0
  9476                           
  9477  0070                     ?_ReadI2C:	
  9478                           ; 1 bytes @ 0x0
  9479                           
  9480  0070                     ?_TMR0_DefaultInterruptHandler:	
  9481                           ; 1 bytes @ 0x0
  9482                           
  9483  0070                     ??_TMR0_DefaultInterruptHandler:	
  9484                           ; 1 bytes @ 0x0
  9485                           
  9486  0070                     ?_i2c_setBuffer:	
  9487                           ; 1 bytes @ 0x0
  9488                           
  9489  0070                     ?_do_I2C_RESET:	
  9490                           ; 1 bytes @ 0x0
  9491                           
  9492  0070                     ??_do_I2C_RESET:	
  9493                           ; 1 bytes @ 0x0
  9494                           
  9495  0070                     ?_do_I2C_IDLE:	
  9496                           ; 1 bytes @ 0x0
  9497                           
  9498  0070                     ??_do_I2C_IDLE:	
  9499                           ; 1 bytes @ 0x0
  9500                           
  9501  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9502                           ; 1 bytes @ 0x0
  9503                           
  9504  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9505                           ; 1 bytes @ 0x0
  9506                           
  9507  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9508                           ; 1 bytes @ 0x0
  9509                           
  9510  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9511                           ; 1 bytes @ 0x0
  9512                           
  9513  0070                     ?_do_I2C_SEND_RESTART:	
  9514                           ; 1 bytes @ 0x0
  9515                           
  9516  0070                     ??_do_I2C_SEND_RESTART:	
  9517                           ; 1 bytes @ 0x0
  9518                           
  9519  0070                     ?_do_I2C_SEND_STOP:	
  9520                           ; 1 bytes @ 0x0
  9521                           
  9522  0070                     ??_do_I2C_SEND_STOP:	
  9523                           ; 1 bytes @ 0x0
  9524                           
  9525  0070                     ?_do_I2C_SEND_ADR_READ:	
  9526                           ; 1 bytes @ 0x0
  9527                           
  9528  0070                     ??_do_I2C_SEND_ADR_READ:	
  9529                           ; 1 bytes @ 0x0
  9530                           
  9531  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9532                           ; 1 bytes @ 0x0
  9533                           
  9534  0070                     ?_do_I2C_RCEN:	
  9535                           ; 1 bytes @ 0x0
  9536                           
  9537  0070                     ??_do_I2C_RCEN:	
  9538                           ; 1 bytes @ 0x0
  9539                           
  9540  0070                     ?_do_I2C_DO_ACK:	
  9541                           ; 1 bytes @ 0x0
  9542                           
  9543  0070                     ??_do_I2C_DO_ACK:	
  9544                           ; 1 bytes @ 0x0
  9545                           
  9546  0070                     ?_do_I2C_DO_NACK_STOP:	
  9547                           ; 1 bytes @ 0x0
  9548                           
  9549  0070                     ??_do_I2C_DO_NACK_STOP:	
  9550                           ; 1 bytes @ 0x0
  9551                           
  9552  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9553                           ; 1 bytes @ 0x0
  9554                           
  9555  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9556                           ; 1 bytes @ 0x0
  9557                           
  9558  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9559                           ; 1 bytes @ 0x0
  9560                           
  9561  0070                     ?_do_I2C_TX:	
  9562                           ; 1 bytes @ 0x0
  9563                           
  9564  0070                     ?_do_I2C_RX:	
  9565                           ; 1 bytes @ 0x0
  9566                           
  9567  0070                     ?_do_I2C_TX_EMPTY:	
  9568                           ; 1 bytes @ 0x0
  9569                           
  9570  0070                     ?_INT_ISR:	
  9571                           ; 1 bytes @ 0x0
  9572                           
  9573  0070                     ?_INT_DefaultInterruptHandler:	
  9574                           ; 1 bytes @ 0x0
  9575                           
  9576  0070                     ??_INT_DefaultInterruptHandler:	
  9577                           ; 1 bytes @ 0x0
  9578                           
  9579  0070                     ?_EXT_INT_Initialize:	
  9580                           ; 1 bytes @ 0x0
  9581                           
  9582  0070                     ?_INTERRUPT_InterruptManager:	
  9583                           ; 1 bytes @ 0x0
  9584                           
  9585  0070                     ?_SYSTEM_Initialize:	
  9586                           ; 1 bytes @ 0x0
  9587                           
  9588  0070                     ?_ADCC_StartConversion:	
  9589                           ; 1 bytes @ 0x0
  9590                           
  9591  0070                     ?_ADCC_IsConversionDone:	
  9592                           ; 1 bytes @ 0x0
  9593                           
  9594  0070                     ?_TMR1_WriteTimer:	
  9595                           ; 1 bytes @ 0x0
  9596                           
  9597  0070                     ?_sw1_EXT:	
  9598                           ; 1 bytes @ 0x0
  9599                           
  9600  0070                     ?_ISR_3s:	
  9601                           ; 1 bytes @ 0x0
  9602                           
  9603  0070                     ?_main:	
  9604                           ; 1 bytes @ 0x0
  9605                           
  9606  0070                     ?_increment_subfield:	
  9607                           ; 1 bytes @ 0x0
  9608                           
  9609  0070                     ?i1_PWM6_LoadDutyValue:	
  9610                           ; 1 bytes @ 0x0
  9611                           
  9612  0070                     ?i1_checkDebounceSW1:	
  9613                           ; 1 bytes @ 0x0
  9614                           
  9615  0070                     ??i1_checkDebounceSW1:	
  9616                           ; 1 bytes @ 0x0
  9617                           
  9618  0070                     i2c1_driver_TXData@d:	
  9619                           ; 1 bytes @ 0x0
  9620                           
  9621  0070                     i2c_setBuffer@bufferSize:	
  9622                           ; 1 bytes @ 0x0
  9623                           
  9624  0070                     setCallBack@cb:	
  9625                           ; 2 bytes @ 0x0
  9626                           
  9627  0070                     TMR1_WriteTimer@timerVal:	
  9628                           ; 2 bytes @ 0x0
  9629                           
  9630  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9631                           ; 2 bytes @ 0x0
  9632                           
  9633                           
  9634                           ; 2 bytes @ 0x0
  9635  0070                     	ds	1
  9636  0071                     ??_TMR2_ISR:	
  9637  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9638                           ; 1 bytes @ 0x1
  9639                           
  9640                           
  9641                           ; 1 bytes @ 0x1
  9642  0071                     	ds	1
  9643  0072                     ??_TMR1_ISR:	
  9644  0072                     ??_i2c_setBuffer:	
  9645                           ; 1 bytes @ 0x2
  9646                           
  9647  0072                     ??_TMR1_WriteTimer:	
  9648                           ; 1 bytes @ 0x2
  9649                           
  9650  0072                     ??i1_PWM6_LoadDutyValue:	
  9651                           ; 1 bytes @ 0x2
  9652                           
  9653  0072                     setCallBack@p:	
  9654                           ; 1 bytes @ 0x2
  9655                           
  9656                           
  9657                           ; 1 bytes @ 0x2
  9658  0072                     	ds	1
  9659  0073                     ??_setCallBack:	
  9660  0073                     i2c_setBuffer@buffer:	
  9661                           ; 1 bytes @ 0x3
  9662                           
  9663                           
  9664                           ; 1 bytes @ 0x3
  9665  0073                     	ds	1
  9666  0074                     ??_ISR_3s:	
  9667  0074                     setCallBack@idx:	
  9668                           ; 1 bytes @ 0x4
  9669                           
  9670                           
  9671                           ; 1 bytes @ 0x4
  9672  0074                     	ds	1
  9673  0075                     ??_TMR0_ISR:	
  9674  0075                     ?_i2c_setDataCompleteCallback:	
  9675                           ; 1 bytes @ 0x5
  9676                           
  9677  0075                     i2c_setDataCompleteCallback@cb:	
  9678                           ; 1 bytes @ 0x5
  9679                           
  9680                           
  9681                           ; 2 bytes @ 0x5
  9682  0075                     	ds	2
  9683  0077                     ??_sw1_EXT:	
  9684  0077                     i2c_setDataCompleteCallback@p:	
  9685                           ; 1 bytes @ 0x7
  9686                           
  9687                           
  9688                           ; 1 bytes @ 0x7
  9689  0077                     	ds	1
  9690  0078                     ??_INT_CallBack:	
  9691  0078                     ??_i2c_setDataCompleteCallback:	
  9692                           ; 1 bytes @ 0x8
  9693                           
  9694  0078                     ??_INT_ISR:	
  9695                           ; 1 bytes @ 0x8
  9696                           
  9697                           
  9698                           ; 1 bytes @ 0x8
  9699  0078                     	ds	1
  9700  0079                     ?_returnStop:	
  9701  0079                     ?_returnReset:	
  9702                           ; 1 bytes @ 0x9
  9703                           
  9704  0079                     ?_i2c_restartWrite:	
  9705                           ; 1 bytes @ 0x9
  9706                           
  9707  0079                     ?_wr1RegCompleteHandler:	
  9708                           ; 1 bytes @ 0x9
  9709                           
  9710  0079                     ?_rd1RegCompleteHandler:	
  9711                           ; 1 bytes @ 0x9
  9712                           
  9713  0079                     ?_rd2RegCompleteHandler:	
  9714                           ; 1 bytes @ 0x9
  9715                           
  9716  0079                     ?_wr2RegCompleteHandler:	
  9717                           ; 1 bytes @ 0x9
  9718                           
  9719  0079                     ?_rdBlkRegCompleteHandler:	
  9720                           ; 1 bytes @ 0x9
  9721                           
  9722  0079                     i2c_restartWrite@p:	
  9723                           ; 1 bytes @ 0x9
  9724                           
  9725  0079                     returnStop@p:	
  9726                           ; 1 bytes @ 0x9
  9727                           
  9728  0079                     returnReset@p:	
  9729                           ; 1 bytes @ 0x9
  9730                           
  9731  0079                     wr1RegCompleteHandler@p:	
  9732                           ; 1 bytes @ 0x9
  9733                           
  9734  0079                     rd1RegCompleteHandler@p:	
  9735                           ; 1 bytes @ 0x9
  9736                           
  9737  0079                     rd2RegCompleteHandler@p:	
  9738                           ; 1 bytes @ 0x9
  9739                           
  9740  0079                     wr2RegCompleteHandler@p:	
  9741                           ; 1 bytes @ 0x9
  9742                           
  9743  0079                     rdBlkRegCompleteHandler@p:	
  9744                           ; 1 bytes @ 0x9
  9745                           
  9746                           
  9747                           ; 1 bytes @ 0x9
  9748  0079                     	ds	1
  9749  007A                     ??_returnStop:	
  9750  007A                     ??_returnReset:	
  9751                           ; 1 bytes @ 0xA
  9752                           
  9753  007A                     ??_i2c_restartWrite:	
  9754                           ; 1 bytes @ 0xA
  9755                           
  9756  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9757                           ; 1 bytes @ 0xA
  9758                           
  9759  007A                     ??_do_I2C_TX:	
  9760                           ; 1 bytes @ 0xA
  9761                           
  9762  007A                     ??_do_I2C_RX:	
  9763                           ; 1 bytes @ 0xA
  9764                           
  9765  007A                     ??_do_I2C_TX_EMPTY:	
  9766                           ; 1 bytes @ 0xA
  9767                           
  9768  007A                     ??_wr1RegCompleteHandler:	
  9769                           ; 1 bytes @ 0xA
  9770                           
  9771  007A                     ??_rd1RegCompleteHandler:	
  9772                           ; 1 bytes @ 0xA
  9773                           
  9774  007A                     ??_rd2RegCompleteHandler:	
  9775                           ; 1 bytes @ 0xA
  9776                           
  9777  007A                     ??_wr2RegCompleteHandler:	
  9778                           ; 1 bytes @ 0xA
  9779                           
  9780  007A                     ??_rdBlkRegCompleteHandler:	
  9781                           ; 1 bytes @ 0xA
  9782                           
  9783                           
  9784                           ; 1 bytes @ 0xA
  9785  007A                     	ds	3
  9786  007D                     ??_INTERRUPT_InterruptManager:	
  9787                           
  9788                           	psect	cstackBANK0
  9789  0044                     __pcstackBANK0:	
  9790                           ; 1 bytes @ 0xD
  9791                           
  9792  0044                     ??_i2c_ISR:	
  9793                           
  9794                           ; 1 bytes @ 0x0
  9795  0044                     	ds	3
  9796  0047                     ??_i2c1_driver_open:	
  9797  0047                     ??_PMD_Initialize:	
  9798                           ; 1 bytes @ 0x3
  9799                           
  9800  0047                     ??_PIN_MANAGER_Initialize:	
  9801                           ; 1 bytes @ 0x3
  9802                           
  9803  0047                     ??_OSCILLATOR_Initialize:	
  9804                           ; 1 bytes @ 0x3
  9805                           
  9806  0047                     ??_PWM6_Initialize:	
  9807                           ; 1 bytes @ 0x3
  9808                           
  9809  0047                     ??_ADCC_Initialize:	
  9810                           ; 1 bytes @ 0x3
  9811                           
  9812  0047                     ?_TMR1_SetInterruptHandler:	
  9813                           ; 1 bytes @ 0x3
  9814                           
  9815  0047                     ?_TMR2_SetInterruptHandler:	
  9816                           ; 1 bytes @ 0x3
  9817                           
  9818  0047                     ??_checkDebounceSW1:	
  9819                           ; 1 bytes @ 0x3
  9820                           
  9821  0047                     ?_TMR0_SetInterruptHandler:	
  9822                           ; 1 bytes @ 0x3
  9823                           
  9824  0047                     ?_LED_bin:	
  9825                           ; 1 bytes @ 0x3
  9826                           
  9827  0047                     ??_TMR0_StartTimer:	
  9828                           ; 1 bytes @ 0x3
  9829                           
  9830  0047                     ??_checkDebounceSW2:	
  9831                           ; 1 bytes @ 0x3
  9832                           
  9833  0047                     ??_WriteI2C:	
  9834                           ; 1 bytes @ 0x3
  9835                           
  9836  0047                     ??_ReadI2C:	
  9837                           ; 1 bytes @ 0x3
  9838                           
  9839  0047                     ?_INT_SetInterruptHandler:	
  9840                           ; 1 bytes @ 0x3
  9841                           
  9842  0047                     ??_ADCC_StartConversion:	
  9843                           ; 1 bytes @ 0x3
  9844                           
  9845  0047                     ??_ADCC_IsConversionDone:	
  9846                           ; 1 bytes @ 0x3
  9847                           
  9848  0047                     ?_PWM6_LoadDutyValue:	
  9849                           ; 1 bytes @ 0x3
  9850                           
  9851  0047                     ?_DATAEE_ReadByte:	
  9852                           ; 1 bytes @ 0x3
  9853                           
  9854  0047                     ?___bmul:	
  9855                           ; 1 bytes @ 0x3
  9856                           
  9857  0047                     ?_ADCC_GetConversionResult:	
  9858                           ; 1 bytes @ 0x3
  9859                           
  9860  0047                     ADCC_StartConversion@channel:	
  9861                           ; 2 bytes @ 0x3
  9862                           
  9863  0047                     ___bmul@multiplicand:	
  9864                           ; 1 bytes @ 0x3
  9865                           
  9866  0047                     INT_SetInterruptHandler@InterruptHandler:	
  9867                           ; 1 bytes @ 0x3
  9868                           
  9869  0047                     TMR1_SetInterruptHandler@InterruptHandler:	
  9870                           ; 2 bytes @ 0x3
  9871                           
  9872  0047                     PWM6_LoadDutyValue@dutyValue:	
  9873                           ; 2 bytes @ 0x3
  9874                           
  9875  0047                     DATAEE_ReadByte@bAdd:	
  9876                           ; 2 bytes @ 0x3
  9877                           
  9878  0047                     TMR2_SetInterruptHandler@InterruptHandler:	
  9879                           ; 2 bytes @ 0x3
  9880                           
  9881  0047                     LED_bin@value:	
  9882                           ; 2 bytes @ 0x3
  9883                           
  9884  0047                     TMR0_SetInterruptHandler@InterruptHandler:	
  9885                           ; 2 bytes @ 0x3
  9886                           
  9887                           
  9888                           ; 2 bytes @ 0x3
  9889  0047                     	ds	1
  9890  0048                     ??___bmul:	
  9891  0048                     WriteI2C@data_out:	
  9892                           ; 1 bytes @ 0x4
  9893                           
  9894                           
  9895                           ; 1 bytes @ 0x4
  9896  0048                     	ds	1
  9897  0049                     ??_TMR2_Initialize:	
  9898  0049                     ??_TMR1_Initialize:	
  9899                           ; 1 bytes @ 0x5
  9900                           
  9901  0049                     ??_TMR0_Initialize:	
  9902                           ; 1 bytes @ 0x5
  9903                           
  9904  0049                     ??_TMR1_SetInterruptHandler:	
  9905                           ; 1 bytes @ 0x5
  9906                           
  9907  0049                     ??_TMR2_SetInterruptHandler:	
  9908                           ; 1 bytes @ 0x5
  9909                           
  9910  0049                     ??_TMR0_SetInterruptHandler:	
  9911                           ; 1 bytes @ 0x5
  9912                           
  9913  0049                     ??_LED_bin:	
  9914                           ; 1 bytes @ 0x5
  9915                           
  9916  0049                     ??_tsttc:	
  9917                           ; 1 bytes @ 0x5
  9918                           
  9919  0049                     ??_cksum:	
  9920                           ; 1 bytes @ 0x5
  9921                           
  9922  0049                     ??_INT_SetInterruptHandler:	
  9923                           ; 1 bytes @ 0x5
  9924                           
  9925  0049                     ??_EXT_INT_Initialize:	
  9926                           ; 1 bytes @ 0x5
  9927                           
  9928  0049                     ??_SYSTEM_Initialize:	
  9929                           ; 1 bytes @ 0x5
  9930                           
  9931  0049                     ??_ADCC_GetConversionResult:	
  9932                           ; 1 bytes @ 0x5
  9933                           
  9934  0049                     ??_PWM6_LoadDutyValue:	
  9935                           ; 1 bytes @ 0x5
  9936                           
  9937  0049                     ??_DATAEE_ReadByte:	
  9938                           ; 1 bytes @ 0x5
  9939                           
  9940  0049                     ?_ADC_read:	
  9941                           ; 1 bytes @ 0x5
  9942                           
  9943  0049                     ___bmul@product:	
  9944                           ; 2 bytes @ 0x5
  9945                           
  9946                           
  9947                           ; 1 bytes @ 0x5
  9948  0049                     	ds	1
  9949  004A                     tsttc@value:	
  9950  004A                     cksum@res:	
  9951                           ; 1 bytes @ 0x6
  9952                           
  9953  004A                     ___bmul@multiplier:	
  9954                           ; 1 bytes @ 0x6
  9955                           
  9956                           
  9957                           ; 1 bytes @ 0x6
  9958  004A                     	ds	1
  9959  004B                     ??_ADC_read:	
  9960  004B                     ?_read_ring:	
  9961                           ; 1 bytes @ 0x7
  9962                           
  9963  004B                     ??_all_LED:	
  9964                           ; 1 bytes @ 0x7
  9965                           
  9966  004B                     ??_mod1_LED:	
  9967                           ; 1 bytes @ 0x7
  9968                           
  9969  004B                     ??_mod2_LED:	
  9970                           ; 1 bytes @ 0x7
  9971                           
  9972  004B                     ??_mod3_LED:	
  9973                           ; 1 bytes @ 0x7
  9974                           
  9975  004B                     ??_mod4_LED:	
  9976                           ; 1 bytes @ 0x7
  9977                           
  9978  004B                     ??_mode_select_LED:	
  9979                           ; 1 bytes @ 0x7
  9980                           
  9981  004B                     read_ring@nreg:	
  9982                           ; 1 bytes @ 0x7
  9983                           
  9984  004B                     cksum@i:	
  9985                           ; 1 bytes @ 0x7
  9986                           
  9987                           
  9988                           ; 2 bytes @ 0x7
  9989  004B                     	ds	1
  9990  004C                     read_ring@nreg_init:	
  9991                           
  9992                           ; 1 bytes @ 0x8
  9993  004C                     	ds	1
  9994  004D                     ?_DATAEE_WriteByte:	
  9995  004D                     read_ring@index:	
  9996                           ; 1 bytes @ 0x9
  9997                           
  9998  004D                     DATAEE_WriteByte@bAdd:	
  9999                           ; 1 bytes @ 0x9
 10000                           
 10001                           
 10002                           ; 2 bytes @ 0x9
 10003  004D                     	ds	1
 10004  004E                     ??_increment_subfield:	
 10005  004E                     read_ring@subindex:	
 10006                           ; 1 bytes @ 0xA
 10007                           
 10008  004E                     increment_subfield@plus:	
 10009                           ; 1 bytes @ 0xA
 10010                           
 10011                           
 10012                           ; 2 bytes @ 0xA
 10013  004E                     	ds	1
 10014  004F                     ??_read_ring:	
 10015  004F                     DATAEE_WriteByte@bData:	
 10016                           ; 1 bytes @ 0xB
 10017                           
 10018                           
 10019                           ; 1 bytes @ 0xB
 10020  004F                     	ds	1
 10021  0050                     ??_DATAEE_WriteByte:	
 10022  0050                     DATAEE_WriteByte@GIEBitValue:	
 10023                           ; 1 bytes @ 0xC
 10024                           
 10025  0050                     increment_subfield@exit:	
 10026                           ; 1 bytes @ 0xC
 10027                           
 10028                           
 10029                           ; 2 bytes @ 0xC
 10030  0050                     	ds	1
 10031  0051                     ?_push_ring:	
 10032  0051                     ??_cksum_w:	
 10033                           ; 1 bytes @ 0xD
 10034                           
 10035  0051                     ??_reset_recv:	
 10036                           ; 1 bytes @ 0xD
 10037                           
 10038  0051                     push_ring@nreg:	
 10039                           ; 1 bytes @ 0xD
 10040                           
 10041  0051                     read_ring@i:	
 10042                           ; 1 bytes @ 0xD
 10043                           
 10044  0051                     reset_recv@i:	
 10045                           ; 1 bytes @ 0xD
 10046                           
 10047                           
 10048                           ; 2 bytes @ 0xD
 10049  0051                     	ds	1
 10050  0052                     ??_clock_subfields:	
 10051  0052                     push_ring@nreg_init:	
 10052                           ; 1 bytes @ 0xE
 10053                           
 10054  0052                     read_ring@nreg_pt:	
 10055                           ; 1 bytes @ 0xE
 10056                           
 10057                           
 10058                           ; 1 bytes @ 0xE
 10059  0052                     	ds	1
 10060  0053                     ??_recoverData:	
 10061  0053                     push_ring@ring_byte:	
 10062                           ; 1 bytes @ 0xF
 10063                           
 10064  0053                     read_ring@absindex:	
 10065                           ; 1 bytes @ 0xF
 10066                           
 10067  0053                     clock_subfields@subfield:	
 10068                           ; 1 bytes @ 0xF
 10069                           
 10070                           
 10071                           ; 2 bytes @ 0xF
 10072  0053                     	ds	1
 10073  0054                     ??_push_ring:	
 10074                           
 10075                           ; 1 bytes @ 0x10
 10076  0054                     	ds	1
 10077  0055                     ??_config_routine:	
 10078                           
 10079                           ; 1 bytes @ 0x11
 10080  0055                     	ds	1
 10081  0056                     push_ring@i:	
 10082  0056                     config_routine@select_mode:	
 10083                           ; 1 bytes @ 0x12
 10084                           
 10085                           
 10086                           ; 2 bytes @ 0x12
 10087  0056                     	ds	1
 10088  0057                     push_ring@nreg_pt:	
 10089                           
 10090                           ; 1 bytes @ 0x13
 10091  0057                     	ds	1
 10092  0058                     ??_main:	
 10093                           
 10094                           ; 1 bytes @ 0x14
 10095  0058                     	ds	5
 10096                           
 10097                           	psect	maintext
 10098  007E                     __pmaintext:	
 10099 ;;
 10100 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10101 ;;
 10102 ;; *************** function _main *****************
 10103 ;; Defined at:
 10104 ;;		line 144 in file "main.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  t5s             1    4[BANK1 ] unsigned char 
 10109 ;;  aux1            1    1[BANK1 ] unsigned char 
 10110 ;;  aux             1    0[BANK1 ] unsigned char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10115 ;; Tracked objects:
 10116 ;;		On entry : B1F/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Totals:         0       5       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;Total ram usage:       11 bytes
 10125 ;; Hardware stack levels required when called:   10
 10126 ;; This function calls:
 10127 ;;		_ADC_read
 10128 ;;		_DATAEE_WriteByte
 10129 ;;		_INT_SetInterruptHandler
 10130 ;;		_LED_bin
 10131 ;;		_PWM6_LoadDutyValue
 10132 ;;		_SYSTEM_Initialize
 10133 ;;		_TMR0_SetInterruptHandler
 10134 ;;		_TMR0_StartTimer
 10135 ;;		_TMR1_SetInterruptHandler
 10136 ;;		_TMR2_SetInterruptHandler
 10137 ;;		_cksum_w
 10138 ;;		_config_routine
 10139 ;;		_i2c1_driver_open
 10140 ;;		_push_ring
 10141 ;;		_read_ring
 10142 ;;		_recoverData
 10143 ;;		_tsttc
 10144 ;; This function is called by:
 10145 ;;		Startup code after reset
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           
 10150                           ;psect for function _main
 10151  007E                     _main:	
 10152  007E                     l6599:	
 10153                           ;incstack = 0
 10154                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10155                           
 10156                           
 10157                           ;main.c: 146:     SYSTEM_Initialize();
 10158  007E  318D  2593  3180   	fcall	_SYSTEM_Initialize
 10159                           
 10160                           ;main.c: 148:     TMR0_SetInterruptHandler(ISR_3s);
 10161  0081  302D               	movlw	low _ISR_3s
 10162  0082  0020               	movlb	0	; select bank0
 10163  0083  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10164  0084  300D               	movlw	high _ISR_3s
 10165  0085  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10166  0086  318B  2374  3180   	fcall	_TMR0_SetInterruptHandler
 10167                           
 10168                           ;main.c: 149:     TMR1_SetInterruptHandler(handler_clock_hms);
 10169  0089  304D               	movlw	low _handler_clock_hms
 10170  008A  0020               	movlb	0	; select bank0
 10171  008B  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10172  008C  300F               	movlw	high _handler_clock_hms
 10173  008D  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10174  008E  318B  230A  3180   	fcall	_TMR1_SetInterruptHandler
 10175                           
 10176                           ;main.c: 150:     INT_SetInterruptHandler(sw1_EXT);
 10177  0091  30EC               	movlw	low _sw1_EXT
 10178  0092  0020               	movlb	0	; select bank0
 10179  0093  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 10180  0094  300E               	movlw	high _sw1_EXT
 10181  0095  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10182  0096  318B  2304  3180   	fcall	_INT_SetInterruptHandler
 10183                           
 10184                           ;main.c: 151:     TMR2_SetInterruptHandler(handler_clock_ms);
 10185  0099  30B1               	movlw	low _handler_clock_ms
 10186  009A  0020               	movlb	0	; select bank0
 10187  009B  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10188  009C  300B               	movlw	high _handler_clock_ms
 10189  009D  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10190  009E  318B  237D  3180   	fcall	_TMR2_SetInterruptHandler
 10191  00A1                     l6601:	
 10192  00A1                     l6603:	
 10193  00A1                     l1224:	
 10194  00A1  3096               	movlw	150
 10195  00A2  0020               	movlb	0	; select bank0
 10196  00A3  00D8               	movwf	??_main
 10197  00A4  0858               	movf	??_main,w
 10198  00A5  00E3               	movwf	_nreg
 10199  00A6                     l6607:	
 10200                           
 10201                           ;main.c: 159:     nreg_pt = 0;
 10202  00A6  01C2               	clrf	_nreg_pt
 10203  00A7                     l6609:	
 10204                           
 10205                           ;main.c: 160:     nreg_init = 0;
 10206  00A7  01C3               	clrf	_nreg_init
 10207  00A8                     l6611:	
 10208                           
 10209                           ;main.c: 161:     alaf = 0;
 10210  00A8  01B6               	clrf	_alaf
 10211  00A9                     l6613:	
 10212                           
 10213                           ;main.c: 162:     temp = 0;
 10214  00A9  01B7               	clrf	_temp
 10215  00AA                     l6615:	
 10216                           
 10217                           ;main.c: 163:     lum_bin = 0;
 10218  00AA  01A2               	clrf	_lum_bin
 10219  00AB  01A3               	clrf	_lum_bin+1
 10220  00AC                     l6617:	
 10221                           
 10222                           ;main.c: 164:     lum_threshold = 0;
 10223  00AC  01A0               	clrf	_lum_threshold
 10224  00AD  01A1               	clrf	_lum_threshold+1
 10225  00AE                     l6619:	
 10226                           
 10227                           ;main.c: 165:     duty_cycle = 0;
 10228  00AE  01A4               	clrf	_duty_cycle
 10229  00AF  01A5               	clrf	_duty_cycle+1
 10230  00B0                     l6621:	
 10231                           
 10232                           ;main.c: 166:     set_mode= 0;
 10233  00B0  01BA               	clrf	_set_mode	;volatile
 10234  00B1                     l6623:	
 10235                           
 10236                           ;main.c: 168:     i2c1_driver_open();
 10237  00B1  318B  23BD  3180   	fcall	_i2c1_driver_open
 10238  00B4                     l6625:	
 10239                           
 10240                           ;main.c: 169:     TRISCbits.TRISC3 = 1;
 10241  00B4  0020               	movlb	0	; select bank0
 10242  00B5  1593               	bsf	19,3	;volatile
 10243  00B6                     l6627:	
 10244                           
 10245                           ;main.c: 170:     TRISCbits.TRISC4 = 1;
 10246  00B6  1613               	bsf	19,4	;volatile
 10247  00B7                     l6629:	
 10248                           
 10249                           ;main.c: 171:     WPUC3 = 1;
 10250  00B7  003E               	movlb	30	; select bank30
 10251  00B8  15CF               	bsf	79,3	;volatile
 10252  00B9                     l6631:	
 10253                           
 10254                           ;main.c: 172:     WPUC4 = 1;
 10255  00B9  164F               	bsf	79,4	;volatile
 10256  00BA                     l6633:	
 10257                           
 10258                           ;main.c: 174:     recoverData();
 10259  00BA  3183  2383  3180   	fcall	_recoverData
 10260  00BD                     l6635:	
 10261                           
 10262                           ;main.c: 176:     PWM6_LoadDutyValue(0);
 10263  00BD  3000               	movlw	0
 10264  00BE  0020               	movlb	0	; select bank0
 10265  00BF  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10266  00C0  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10267  00C1  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10268  00C4                     l6637:	
 10269                           
 10270                           ;main.c: 177:     alarm = 0 ;
 10271  00C4  0020               	movlb	0	; select bank0
 10272  00C5  01B8               	clrf	_alarm	;volatile
 10273  00C6                     l6639:	
 10274  00C6  003E               	movlb	30	; select bank30
 10275  00C7  1644               	bsf	68,4	;volatile
 10276  00C8                     l6641:	
 10277                           
 10278                           ;main.c: 181:     (INTCONbits.GIE = 1);
 10279  00C8  178B               	bsf	11,7	;volatile
 10280  00C9                     l6643:	
 10281                           
 10282                           ;main.c: 184:     (INTCONbits.PEIE = 1);
 10283  00C9  170B               	bsf	11,6	;volatile
 10284  00CA                     l1227:	
 10285                           ;main.c: 187:     while (1)
 10286                           
 10287  00CA  0063               	sleep	;# 
 10288  00CB                     l6645:	
 10289                           
 10290                           ;main.c: 191:             __nop();
 10291  00CB  0000               	nop
 10292  00CC                     l6647:	
 10293                           
 10294                           ;main.c: 193:              PIE4bits.TMR1IE = 0;
 10295  00CC  002E               	movlb	14	; select bank14
 10296  00CD  101A               	bcf	26,0	;volatile
 10297  00CE                     l6649:	
 10298                           
 10299                           ;main.c: 194:              t5s = last5s;
 10300  00CE  0020               	movlb	0	; select bank0
 10301  00CF  083C               	movf	_last5s,w	;volatile
 10302  00D0  00D8               	movwf	??_main
 10303  00D1  0858               	movf	??_main,w
 10304  00D2  0021               	movlb	1	; select bank1
 10305  00D3  00C6               	movwf	main@t5s^(0+128)
 10306  00D4                     l6651:	
 10307                           
 10308                           ;main.c: 195:              PIE4bits.TMR1IE = 1;
 10309  00D4  002E               	movlb	14	; select bank14
 10310  00D5  141A               	bsf	26,0	;volatile
 10311  00D6                     l6653:	
 10312                           
 10313                           ;main.c: 197:              if(t5s >= pmon){
 10314  00D6  0020               	movlb	0	; select bank0
 10315  00D7  0862               	movf	_pmon,w
 10316  00D8  0021               	movlb	1	; select bank1
 10317  00D9  0246               	subwf	main@t5s^(0+128),w
 10318  00DA  1C03               	skipc
 10319  00DB  28DD               	goto	u4151
 10320  00DC  28DE               	goto	u4150
 10321  00DD                     u4151:	
 10322  00DD  28CA               	goto	l1227
 10323  00DE                     u4150:	
 10324  00DE                     l6655:	
 10325                           
 10326                           ;main.c: 198:                     PIE4bits.TMR1IE = 0;
 10327  00DE  002E               	movlb	14	; select bank14
 10328  00DF  101A               	bcf	26,0	;volatile
 10329  00E0                     l6657:	
 10330                           
 10331                           ;main.c: 199:                     last5s =0;
 10332  00E0  0020               	movlb	0	; select bank0
 10333  00E1  01BC               	clrf	_last5s	;volatile
 10334  00E2                     l6659:	
 10335                           
 10336                           ;main.c: 200:                     PIE4bits.TMR1IE = 1;
 10337  00E2  002E               	movlb	14	; select bank14
 10338  00E3  141A               	bsf	26,0	;volatile
 10339  00E4                     l6661:	
 10340                           
 10341                           ;main.c: 203:                          if(!config_mode){
 10342  00E4  0020               	movlb	0	; select bank0
 10343  00E5  0839               	movf	_config_mode,w	;volatile
 10344  00E6  1D03               	btfss	3,2
 10345  00E7  28E9               	goto	u4161
 10346  00E8  28EA               	goto	u4160
 10347  00E9                     u4161:	
 10348  00E9  29DC               	goto	l6721
 10349  00EA                     u4160:	
 10350  00EA                     l6663:	
 10351                           
 10352                           ;main.c: 205:                              convertedValue = ADC_read();
 10353  00EA  318D  255F  3180   	fcall	_ADC_read
 10354  00ED  0020               	movlb	0	; select bank0
 10355  00EE  084A               	movf	?_ADC_read+1,w
 10356  00EF  00A7               	movwf	_convertedValue+1
 10357  00F0  0849               	movf	?_ADC_read,w
 10358  00F1  00A6               	movwf	_convertedValue
 10359  00F2                     l6665:	
 10360                           
 10361                           ;main.c: 207:                              lum_bin = (convertedValue >> 8);
 10362  00F2  0827               	movf	_convertedValue+1,w
 10363  00F3  00D9               	movwf	??_main+1
 10364  00F4  0826               	movf	_convertedValue,w
 10365  00F5  00D8               	movwf	??_main
 10366  00F6  0859               	movf	??_main+1,w
 10367  00F7  00D8               	movwf	??_main
 10368  00F8  01D9               	clrf	??_main+1
 10369  00F9  0858               	movf	??_main,w
 10370  00FA  00A2               	movwf	_lum_bin
 10371  00FB  0859               	movf	??_main+1,w
 10372  00FC  00A3               	movwf	_lum_bin+1
 10373  00FD                     l6667:	
 10374                           
 10375                           ;main.c: 209:                              LED_bin(lum_bin);
 10376  00FD  0823               	movf	_lum_bin+1,w
 10377  00FE  00C8               	movwf	LED_bin@value+1
 10378  00FF  0822               	movf	_lum_bin,w
 10379  0100  00C7               	movwf	LED_bin@value
 10380  0101  318D  2579  3180   	fcall	_LED_bin
 10381  0104                     l6669:	
 10382                           
 10383                           ;main.c: 214:                              __nop();
 10384  0104  0000               	nop
 10385  0105                     l6671:	
 10386                           
 10387                           ;main.c: 215:                              temp = tsttc();
 10388  0105  3182  2233  3180   	fcall	_tsttc
 10389  0108  0020               	movlb	0	; select bank0
 10390  0109  00D8               	movwf	??_main
 10391  010A  0858               	movf	??_main,w
 10392  010B  00B7               	movwf	_temp
 10393  010C                     l6673:	
 10394                           
 10395                           ;main.c: 216:                              __nop();
 10396  010C  0000               	nop
 10397  010D                     l6675:	
 10398                           
 10399                           ;main.c: 219:                              lum_threshold = (lum_bin > 2 || temp > 100 ) 
      +                          & alaf;
 10400  010D  0021               	movlb	1	; select bank1
 10401  010E  01C7               	clrf	_main$2341^(0+128)
 10402  010F  0AC7               	incf	_main$2341^(0+128),f
 10403  0110                     l6677:	
 10404  0110  3000               	movlw	0
 10405  0111  0020               	movlb	0	; select bank0
 10406  0112  0223               	subwf	_lum_bin+1,w
 10407  0113  3003               	movlw	3
 10408  0114  1903               	skipnz
 10409  0115  0222               	subwf	_lum_bin,w
 10410  0116  1803               	skipnc
 10411  0117  2919               	goto	u4171
 10412  0118  291A               	goto	u4170
 10413  0119                     u4171:	
 10414  0119  2922               	goto	l6683
 10415  011A                     u4170:	
 10416  011A                     l6679:	
 10417  011A  3065               	movlw	101
 10418  011B  0237               	subwf	_temp,w
 10419  011C  1803               	skipnc
 10420  011D  291F               	goto	u4181
 10421  011E  2920               	goto	u4180
 10422  011F                     u4181:	
 10423  011F  2922               	goto	l6683
 10424  0120                     u4180:	
 10425  0120                     l6681:	
 10426  0120  0021               	movlb	1	; select bank1
 10427  0121  01C7               	clrf	_main$2341^(0+128)
 10428  0122                     l6683:	
 10429  0122  0021               	movlb	1	; select bank1
 10430  0123  0847               	movf	_main$2341^(0+128),w
 10431  0124  0020               	movlb	0	; select bank0
 10432  0125  0536               	andwf	_alaf,w
 10433  0126  00D8               	movwf	??_main
 10434  0127  01D9               	clrf	??_main+1
 10435  0128  0858               	movf	??_main,w
 10436  0129  00A0               	movwf	_lum_threshold
 10437  012A  0859               	movf	??_main+1,w
 10438  012B  00A1               	movwf	_lum_threshold+1
 10439  012C                     l6685:	
 10440                           
 10441                           ;main.c: 221:                            if (temp != read_ring(nreg_pt, nreg, nreg_init,
      +                           0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10442  012C  0863               	movf	_nreg,w
 10443  012D  00D8               	movwf	??_main
 10444  012E  0858               	movf	??_main,w
 10445  012F  00CB               	movwf	read_ring@nreg
 10446  0130  0843               	movf	_nreg_init,w
 10447  0131  00D9               	movwf	??_main+1
 10448  0132  0859               	movf	??_main+1,w
 10449  0133  00CC               	movwf	read_ring@nreg_init
 10450  0134  01CD               	clrf	read_ring@index
 10451  0135  3003               	movlw	3
 10452  0136  00DA               	movwf	??_main+2
 10453  0137  085A               	movf	??_main+2,w
 10454  0138  00CE               	movwf	read_ring@subindex
 10455  0139  0842               	movf	_nreg_pt,w
 10456  013A  318F  2781  3180   	fcall	_read_ring
 10457  013D  0020               	movlb	0	; select bank0
 10458  013E  0637               	xorwf	_temp,w
 10459  013F  1D03               	skipz
 10460  0140  2942               	goto	u4191
 10461  0141  2943               	goto	u4190
 10462  0142                     u4191:	
 10463  0142  2961               	goto	l1235
 10464  0143                     u4190:	
 10465  0143                     l6687:	
 10466  0143  0863               	movf	_nreg,w
 10467  0144  00D8               	movwf	??_main
 10468  0145  0858               	movf	??_main,w
 10469  0146  00CB               	movwf	read_ring@nreg
 10470  0147  0843               	movf	_nreg_init,w
 10471  0148  00D9               	movwf	??_main+1
 10472  0149  0859               	movf	??_main+1,w
 10473  014A  00CC               	movwf	read_ring@nreg_init
 10474  014B  01CD               	clrf	read_ring@index
 10475  014C  3004               	movlw	4
 10476  014D  00DA               	movwf	??_main+2
 10477  014E  085A               	movf	??_main+2,w
 10478  014F  00CE               	movwf	read_ring@subindex
 10479  0150  0842               	movf	_nreg_pt,w
 10480  0151  318F  2781  3180   	fcall	_read_ring
 10481  0154  0020               	movlb	0	; select bank0
 10482  0155  00DB               	movwf	??_main+3
 10483  0156  01DC               	clrf	??_main+4
 10484  0157  0823               	movf	_lum_bin+1,w
 10485  0158  065C               	xorwf	??_main+4,w
 10486  0159  1D03               	skipz
 10487  015A  295D               	goto	u4205
 10488  015B  0822               	movf	_lum_bin,w
 10489  015C  065B               	xorwf	??_main+3,w
 10490  015D                     u4205:	
 10491  015D  1903               	skipnz
 10492  015E  2960               	goto	u4201
 10493  015F  2961               	goto	u4200
 10494  0160                     u4201:	
 10495  0160  29A3               	goto	l6699
 10496  0161                     u4200:	
 10497  0161                     l1235:	
 10498                           
 10499                           ;main.c: 223:                                  PIE4bits.TMR1IE = 0;
 10500  0161  002E               	movlb	14	; select bank14
 10501  0162  101A               	bcf	26,0	;volatile
 10502  0163                     l6689:	
 10503                           
 10504                           ;main.c: 224:                                  ring_byte[0] = clkh;
 10505  0163  0020               	movlb	0	; select bank0
 10506  0164  0841               	movf	_clkh,w	;volatile
 10507  0165  00D8               	movwf	??_main
 10508  0166  0858               	movf	??_main,w
 10509  0167  0021               	movlb	1	; select bank1
 10510  0168  00BD               	movwf	_ring_byte^(0+128)
 10511                           
 10512                           ;main.c: 225:                                  ring_byte[1] = clkm;
 10513  0169  0020               	movlb	0	; select bank0
 10514  016A  0840               	movf	_clkm,w	;volatile
 10515  016B  00D8               	movwf	??_main
 10516  016C  0858               	movf	??_main,w
 10517  016D  0021               	movlb	1	; select bank1
 10518  016E  00BE               	movwf	(_ring_byte^(0+128)+1)
 10519                           
 10520                           ;main.c: 226:                                  ring_byte[2] = seg;
 10521  016F  0020               	movlb	0	; select bank0
 10522  0170  083F               	movf	_seg,w	;volatile
 10523  0171  00D8               	movwf	??_main
 10524  0172  0858               	movf	??_main,w
 10525  0173  0021               	movlb	1	; select bank1
 10526  0174  00BF               	movwf	(_ring_byte^(0+128)+2)
 10527  0175                     l6691:	
 10528                           
 10529                           ;main.c: 227:                                   PIE4bits.TMR1IE = 1;
 10530  0175  002E               	movlb	14	; select bank14
 10531  0176  141A               	bsf	26,0	;volatile
 10532                           
 10533                           ;main.c: 228:                                  ring_byte[3] = temp;
 10534  0177  0020               	movlb	0	; select bank0
 10535  0178  0837               	movf	_temp,w
 10536  0179  00D8               	movwf	??_main
 10537  017A  0858               	movf	??_main,w
 10538  017B  0021               	movlb	1	; select bank1
 10539  017C  00C0               	movwf	(_ring_byte^(0+128)+3)
 10540                           
 10541                           ;main.c: 229:                                  ring_byte[4] = lum_bin;
 10542  017D  0020               	movlb	0	; select bank0
 10543  017E  0822               	movf	_lum_bin,w
 10544  017F  00D8               	movwf	??_main
 10545  0180  0858               	movf	??_main,w
 10546  0181  0021               	movlb	1	; select bank1
 10547  0182  00C1               	movwf	(_ring_byte^(0+128)+4)
 10548  0183                     l6693:	
 10549                           
 10550                           ;main.c: 230:                                  push_ring(&nreg_pt, nreg, &nreg_init, rin
      +                          g_byte);
 10551  0183  0020               	movlb	0	; select bank0
 10552  0184  0863               	movf	_nreg,w
 10553  0185  00D8               	movwf	??_main
 10554  0186  0858               	movf	??_main,w
 10555  0187  00D1               	movwf	push_ring@nreg
 10556  0188  3043               	movlw	(low (_nreg_init| 0))& (0+255)
 10557  0189  00D9               	movwf	??_main+1
 10558  018A  0859               	movf	??_main+1,w
 10559  018B  00D2               	movwf	push_ring@nreg_init
 10560  018C  30BD               	movlw	(low (_ring_byte| 0))& (0+255)
 10561  018D  00DA               	movwf	??_main+2
 10562  018E  085A               	movf	??_main+2,w
 10563  018F  00D3               	movwf	push_ring@ring_byte
 10564  0190  3042               	movlw	(low (_nreg_pt| 0))& (0+255)
 10565  0191  3187  27A8  3180   	fcall	_push_ring
 10566  0194                     l6695:	
 10567                           
 10568                           ;main.c: 232:                                  DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt
      +                          );
 10569  0194  30F9               	movlw	249
 10570  0195  0020               	movlb	0	; select bank0
 10571  0196  00CD               	movwf	DATAEE_WriteByte@bAdd
 10572  0197  30F0               	movlw	240
 10573  0198  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10574  0199  0842               	movf	_nreg_pt,w
 10575  019A  00D8               	movwf	??_main
 10576  019B  0858               	movf	??_main,w
 10577  019C  00CF               	movwf	DATAEE_WriteByte@bData
 10578  019D  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10579  01A0                     l6697:	
 10580                           
 10581                           ;main.c: 233:                                  cksum_w();
 10582  01A0  318C  243B  3180   	fcall	_cksum_w
 10583  01A3                     l6699:	
 10584                           
 10585                           ;main.c: 238:                              if(lum_threshold){
 10586  01A3  0020               	movlb	0	; select bank0
 10587  01A4  0820               	movf	_lum_threshold,w
 10588  01A5  0421               	iorwf	_lum_threshold+1,w
 10589  01A6  1903               	btfsc	3,2
 10590  01A7  29A9               	goto	u4211
 10591  01A8  29AA               	goto	u4210
 10592  01A9                     u4211:	
 10593  01A9  29CC               	goto	l6715
 10594  01AA                     u4210:	
 10595  01AA                     l6701:	
 10596                           
 10597                           ;main.c: 239:                                  if(alarm == 2){
 10598  01AA  3002               	movlw	2
 10599  01AB  0638               	xorwf	_alarm,w	;volatile
 10600  01AC  1D03               	btfss	3,2
 10601  01AD  29AF               	goto	u4221
 10602  01AE  29B0               	goto	u4220
 10603  01AF                     u4221:	
 10604  01AF  29BC               	goto	l6707
 10605  01B0                     u4220:	
 10606  01B0                     l6703:	
 10607                           
 10608                           ;main.c: 240:                                      duty_cycle +=1 ;
 10609  01B0  3001               	movlw	1
 10610  01B1  07A4               	addwf	_duty_cycle,f
 10611  01B2  3000               	movlw	0
 10612  01B3  3DA5               	addwfc	_duty_cycle+1,f
 10613  01B4                     l6705:	
 10614                           
 10615                           ;main.c: 241:                                      PWM6_LoadDutyValue(duty_cycle);
 10616  01B4  0825               	movf	_duty_cycle+1,w
 10617  01B5  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10618  01B6  0824               	movf	_duty_cycle,w
 10619  01B7  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10620  01B8  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10621                           
 10622                           ;main.c: 242:                                  }
 10623  01BB  29E8               	goto	l6729
 10624  01BC                     l6707:	
 10625  01BC  0838               	movf	_alarm,w	;volatile
 10626  01BD  1D03               	btfss	3,2
 10627  01BE  29C0               	goto	u4231
 10628  01BF  29C1               	goto	u4230
 10629  01C0                     u4231:	
 10630  01C0  29DB               	goto	l1240
 10631  01C1                     u4230:	
 10632  01C1                     l6709:	
 10633                           
 10634                           ;main.c: 244:                                      PIE0bits.TMR0IE = 1;
 10635  01C1  002E               	movlb	14	; select bank14
 10636  01C2  1696               	bsf	22,5	;volatile
 10637  01C3                     l6711:	
 10638                           
 10639                           ;main.c: 245:                                      TMR0_StartTimer();
 10640  01C3  318A  22C2  3180   	fcall	_TMR0_StartTimer
 10641  01C6                     l6713:	
 10642                           
 10643                           ;main.c: 246:                                      alarm = 2 ;
 10644  01C6  3002               	movlw	2
 10645  01C7  0020               	movlb	0	; select bank0
 10646  01C8  00D8               	movwf	??_main
 10647  01C9  0858               	movf	??_main,w
 10648  01CA  00B8               	movwf	_alarm	;volatile
 10649  01CB  29E8               	goto	l6729
 10650  01CC                     l6715:	
 10651                           
 10652                           ;main.c: 250:                                  if(alarm == 2){
 10653  01CC  3002               	movlw	2
 10654  01CD  0638               	xorwf	_alarm,w	;volatile
 10655  01CE  1D03               	btfss	3,2
 10656  01CF  29D1               	goto	u4241
 10657  01D0  29D2               	goto	u4240
 10658  01D1                     u4241:	
 10659  01D1  29E8               	goto	l6729
 10660  01D2                     u4240:	
 10661  01D2                     l6717:	
 10662                           
 10663                           ;main.c: 251:                                      PWM6_LoadDutyValue(0);
 10664  01D2  3000               	movlw	0
 10665  01D3  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10666  01D4  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10667  01D5  318D  2546  3180   	fcall	_PWM6_LoadDutyValue
 10668  01D8                     l6719:	
 10669                           
 10670                           ;main.c: 252:                                      alarm = 0 ;
 10671  01D8  0020               	movlb	0	; select bank0
 10672  01D9  01B8               	clrf	_alarm	;volatile
 10673  01DA  29E8               	goto	l6729
 10674  01DB                     l1240:	
 10675                           ;main.c: 254:                              }
 10676                           
 10677                           
 10678                           ;main.c: 256:                           }
 10679  01DB  29E8               	goto	l6729
 10680  01DC                     l6721:	
 10681  01DC  0339               	decf	_config_mode,w	;volatile
 10682  01DD  1D03               	btfss	3,2
 10683  01DE  29E0               	goto	u4251
 10684  01DF  29E1               	goto	u4250
 10685  01E0                     u4251:	
 10686  01E0  29E8               	goto	l6729
 10687  01E1                     u4250:	
 10688  01E1                     l6723:	
 10689                           
 10690                           ;main.c: 260:                            (PIE0bits.INTE = 0);
 10691  01E1  002E               	movlb	14	; select bank14
 10692  01E2  1016               	bcf	22,0	;volatile
 10693  01E3                     l6725:	
 10694                           
 10695                           ;main.c: 261:                            config_routine();
 10696  01E3  3184  241B  3180   	fcall	_config_routine
 10697  01E6                     l6727:	
 10698                           
 10699                           ;main.c: 262:                            (PIE0bits.INTE = 1);
 10700  01E6  002E               	movlb	14	; select bank14
 10701  01E7  1416               	bsf	22,0	;volatile
 10702  01E8                     l6729:	
 10703                           
 10704                           ;main.c: 265:                      _delay((unsigned long)((10)*(1000000/4000.0)));
 10705  01E8  3004               	movlw	4
 10706  01E9  0020               	movlb	0	; select bank0
 10707  01EA  00D8               	movwf	??_main
 10708  01EB  303D               	movlw	61
 10709  01EC                     u4307:	
 10710  01EC  0B89               	decfsz	9,f
 10711  01ED  29EC               	goto	u4307
 10712  01EE  0BD8               	decfsz	??_main,f
 10713  01EF  29EC               	goto	u4307
 10714  01F0  3200               	nop2
 10715  01F1                     l6731:	
 10716                           
 10717                           ;main.c: 267:                     }while(alarm == 2);
 10718  01F1  3002               	movlw	2
 10719  01F2  0020               	movlb	0	; select bank0
 10720  01F3  0638               	xorwf	_alarm,w	;volatile
 10721  01F4  1903               	btfsc	3,2
 10722  01F5  29F7               	goto	u4261
 10723  01F6  29F8               	goto	u4260
 10724  01F7                     u4261:	
 10725  01F7  28E4               	goto	l6661
 10726  01F8                     u4260:	
 10727  01F8                     l1244:	
 10728                           
 10729                           ;main.c: 269:                         PIE4bits.TMR1IE = 0;
 10730  01F8  002E               	movlb	14	; select bank14
 10731  01F9  101A               	bcf	26,0	;volatile
 10732  01FA                     l6733:	
 10733                           
 10734                           ;main.c: 270:                         if (last1m >= 1) {
 10735  01FA  0020               	movlb	0	; select bank0
 10736  01FB  083B               	movf	_last1m,w	;volatile
 10737  01FC  1903               	btfsc	3,2
 10738  01FD  29FF               	goto	u4271
 10739  01FE  2A00               	goto	u4270
 10740  01FF                     u4271:	
 10741  01FF  2A2E               	goto	l1245
 10742  0200                     u4270:	
 10743  0200                     l6735:	
 10744                           
 10745                           ;main.c: 272:                             last1m = 0;
 10746  0200  01BB               	clrf	_last1m	;volatile
 10747  0201                     l6737:	
 10748                           
 10749                           ;main.c: 273:                             aux = clkh;
 10750  0201  0841               	movf	_clkh,w	;volatile
 10751  0202  00D8               	movwf	??_main
 10752  0203  0858               	movf	??_main,w
 10753  0204  0021               	movlb	1	; select bank1
 10754  0205  00C2               	movwf	main@aux^(0+128)
 10755  0206                     l6739:	
 10756                           
 10757                           ;main.c: 274:                             aux1 = clkm;
 10758  0206  0020               	movlb	0	; select bank0
 10759  0207  0840               	movf	_clkm,w	;volatile
 10760  0208  00D8               	movwf	??_main
 10761  0209  0858               	movf	??_main,w
 10762  020A  0021               	movlb	1	; select bank1
 10763  020B  00C3               	movwf	main@aux1^(0+128)
 10764  020C                     l6741:	
 10765                           
 10766                           ;main.c: 275:                             PIE4bits.TMR1IE = 1;
 10767  020C  002E               	movlb	14	; select bank14
 10768  020D  141A               	bsf	26,0	;volatile
 10769  020E                     l6743:	
 10770                           
 10771                           ;main.c: 276:                             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10772  020E  30F6               	movlw	246
 10773  020F  0020               	movlb	0	; select bank0
 10774  0210  00CD               	movwf	DATAEE_WriteByte@bAdd
 10775  0211  30F0               	movlw	240
 10776  0212  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10777  0213  0021               	movlb	1	; select bank1
 10778  0214  0842               	movf	main@aux^(0+128),w
 10779  0215  0020               	movlb	0	; select bank0
 10780  0216  00D8               	movwf	??_main
 10781  0217  0858               	movf	??_main,w
 10782  0218  00CF               	movwf	DATAEE_WriteByte@bData
 10783  0219  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10784  021C                     l6745:	
 10785                           
 10786                           ;main.c: 277:                             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10787  021C  30F7               	movlw	247
 10788  021D  0020               	movlb	0	; select bank0
 10789  021E  00CD               	movwf	DATAEE_WriteByte@bAdd
 10790  021F  30F0               	movlw	240
 10791  0220  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10792  0221  0021               	movlb	1	; select bank1
 10793  0222  0843               	movf	main@aux1^(0+128),w
 10794  0223  0020               	movlb	0	; select bank0
 10795  0224  00D8               	movwf	??_main
 10796  0225  0858               	movf	??_main,w
 10797  0226  00CF               	movwf	DATAEE_WriteByte@bData
 10798  0227  318E  2649  3180   	fcall	_DATAEE_WriteByte
 10799  022A                     l6747:	
 10800                           
 10801                           ;main.c: 278:                             cksum_w();
 10802  022A  318C  243B  3180   	fcall	_cksum_w
 10803                           
 10804                           ;main.c: 280:                         }else{
 10805  022D  28CA               	goto	l1227
 10806  022E                     l1245:	
 10807                           
 10808                           ;main.c: 281:                           PIE4bits.TMR1IE = 1;}
 10809  022E  002E               	movlb	14	; select bank14
 10810  022F  141A               	bsf	26,0	;volatile
 10811  0230  28CA               	goto	l1227
 10812  0231  3180  285B         	ljmp	start
 10813  0233                     __end_of_main:	
 10814                           
 10815                           	psect	text1
 10816  0233                     __ptext1:	
 10817 ;; *************** function _tsttc *****************
 10818 ;; Defined at:
 10819 ;;		line 15 in file "I2C/i2c.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;		None
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  value           1    6[BANK0 ] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      unsigned char 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0, pclath, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;Total ram usage:        2 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:    7
 10840 ;; This function calls:
 10841 ;;		_ReadI2C
 10842 ;;		_WriteI2C
 10843 ;; This function is called by:
 10844 ;;		_main
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           
 10849                           ;psect for function _tsttc
 10850  0233                     _tsttc:	
 10851  0233                     l1420:	
 10852                           ;incstack = 0
 10853                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 10854                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 10855                           
 10856  0233                     l6341:	
 10857                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10858                           
 10859  0233  0023               	movlb	3	; select bank3
 10860  0234  0C0F               	rrf	15,w	;volatile
 10861  0235  0C89               	rrf	9,f
 10862  0236  3901               	andlw	1
 10863  0237  0020               	movlb	0	; select bank0
 10864  0238  00C9               	movwf	??_tsttc
 10865  0239  0023               	movlb	3	; select bank3
 10866  023A  0811               	movf	17,w	;volatile
 10867  023B  391F               	andlw	31
 10868  023C  0020               	movlb	0	; select bank0
 10869  023D  0449               	iorwf	??_tsttc,w
 10870  023E  1D03               	btfss	3,2
 10871  023F  2A41               	goto	u3601
 10872  0240  2A42               	goto	u3600
 10873  0241                     u3601:	
 10874  0241  2A33               	goto	l6341
 10875  0242                     u3600:	
 10876  0242                     l1423:	
 10877                           
 10878                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 10879  0242  0023               	movlb	3	; select bank3
 10880  0243  1411               	bsf	17,0	;volatile
 10881  0244                     l1424:	
 10882  0244  1811               	btfsc	17,0	;volatile
 10883  0245  2A47               	goto	u3611
 10884  0246  2A48               	goto	u3610
 10885  0247                     u3611:	
 10886  0247  2A44               	goto	l1424
 10887  0248                     u3610:	
 10888  0248                     l6343:	
 10889  0248  0023               	movlb	3	; select bank3
 10890  0249  0C0F               	rrf	15,w	;volatile
 10891  024A  0C89               	rrf	9,f
 10892  024B  3901               	andlw	1
 10893  024C  0020               	movlb	0	; select bank0
 10894  024D  00C9               	movwf	??_tsttc
 10895  024E  0023               	movlb	3	; select bank3
 10896  024F  0811               	movf	17,w	;volatile
 10897  0250  391F               	andlw	31
 10898  0251  0020               	movlb	0	; select bank0
 10899  0252  0449               	iorwf	??_tsttc,w
 10900  0253  1D03               	btfss	3,2
 10901  0254  2A56               	goto	u3621
 10902  0255  2A57               	goto	u3620
 10903  0256                     u3621:	
 10904  0256  2A48               	goto	l6343
 10905  0257                     u3620:	
 10906  0257                     l6345:	
 10907                           
 10908                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10909  0257  309A               	movlw	154
 10910  0258  3185  2566  3182   	fcall	_WriteI2C
 10911  025B                     l6347:	
 10912  025B  0023               	movlb	3	; select bank3
 10913  025C  0C0F               	rrf	15,w	;volatile
 10914  025D  0C89               	rrf	9,f
 10915  025E  3901               	andlw	1
 10916  025F  0020               	movlb	0	; select bank0
 10917  0260  00C9               	movwf	??_tsttc
 10918  0261  0023               	movlb	3	; select bank3
 10919  0262  0811               	movf	17,w	;volatile
 10920  0263  391F               	andlw	31
 10921  0264  0020               	movlb	0	; select bank0
 10922  0265  0449               	iorwf	??_tsttc,w
 10923  0266  1D03               	btfss	3,2
 10924  0267  2A69               	goto	u3631
 10925  0268  2A6A               	goto	u3630
 10926  0269                     u3631:	
 10927  0269  2A5B               	goto	l6347
 10928  026A                     u3630:	
 10929  026A                     l6349:	
 10930                           
 10931                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10932  026A  3001               	movlw	1
 10933  026B  3185  2566  3182   	fcall	_WriteI2C
 10934  026E                     l6351:	
 10935  026E  0023               	movlb	3	; select bank3
 10936  026F  0C0F               	rrf	15,w	;volatile
 10937  0270  0C89               	rrf	9,f
 10938  0271  3901               	andlw	1
 10939  0272  0020               	movlb	0	; select bank0
 10940  0273  00C9               	movwf	??_tsttc
 10941  0274  0023               	movlb	3	; select bank3
 10942  0275  0811               	movf	17,w	;volatile
 10943  0276  391F               	andlw	31
 10944  0277  0020               	movlb	0	; select bank0
 10945  0278  0449               	iorwf	??_tsttc,w
 10946  0279  1D03               	btfss	3,2
 10947  027A  2A7C               	goto	u3641
 10948  027B  2A7D               	goto	u3640
 10949  027C                     u3641:	
 10950  027C  2A6E               	goto	l6351
 10951  027D                     u3640:	
 10952  027D                     l1435:	
 10953                           
 10954                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 10955  027D  0023               	movlb	3	; select bank3
 10956  027E  1491               	bsf	17,1	;volatile
 10957  027F                     l1436:	
 10958  027F  1891               	btfsc	17,1	;volatile
 10959  0280  2A82               	goto	u3651
 10960  0281  2A83               	goto	u3650
 10961  0282                     u3651:	
 10962  0282  2A7F               	goto	l1436
 10963  0283                     u3650:	
 10964  0283                     l6353:	
 10965  0283  0023               	movlb	3	; select bank3
 10966  0284  0C0F               	rrf	15,w	;volatile
 10967  0285  0C89               	rrf	9,f
 10968  0286  3901               	andlw	1
 10969  0287  0020               	movlb	0	; select bank0
 10970  0288  00C9               	movwf	??_tsttc
 10971  0289  0023               	movlb	3	; select bank3
 10972  028A  0811               	movf	17,w	;volatile
 10973  028B  391F               	andlw	31
 10974  028C  0020               	movlb	0	; select bank0
 10975  028D  0449               	iorwf	??_tsttc,w
 10976  028E  1D03               	btfss	3,2
 10977  028F  2A91               	goto	u3661
 10978  0290  2A92               	goto	u3660
 10979  0291                     u3661:	
 10980  0291  2A83               	goto	l6353
 10981  0292                     u3660:	
 10982  0292                     l6355:	
 10983                           
 10984                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 10985  0292  309B               	movlw	155
 10986  0293  3185  2566  3182   	fcall	_WriteI2C
 10987  0296                     l6357:	
 10988  0296  0023               	movlb	3	; select bank3
 10989  0297  0C0F               	rrf	15,w	;volatile
 10990  0298  0C89               	rrf	9,f
 10991  0299  3901               	andlw	1
 10992  029A  0020               	movlb	0	; select bank0
 10993  029B  00C9               	movwf	??_tsttc
 10994  029C  0023               	movlb	3	; select bank3
 10995  029D  0811               	movf	17,w	;volatile
 10996  029E  391F               	andlw	31
 10997  029F  0020               	movlb	0	; select bank0
 10998  02A0  0449               	iorwf	??_tsttc,w
 10999  02A1  1D03               	btfss	3,2
 11000  02A2  2AA4               	goto	u3671
 11001  02A3  2AA5               	goto	u3670
 11002  02A4                     u3671:	
 11003  02A4  2A96               	goto	l6357
 11004  02A5                     u3670:	
 11005  02A5                     l6359:	
 11006                           
 11007                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11008  02A5  318D  25EA  3182   	fcall	_ReadI2C
 11009  02A8  0020               	movlb	0	; select bank0
 11010  02A9  00C9               	movwf	??_tsttc
 11011  02AA  0849               	movf	??_tsttc,w
 11012  02AB  00CA               	movwf	tsttc@value
 11013  02AC                     l6361:	
 11014  02AC  0023               	movlb	3	; select bank3
 11015  02AD  0C0F               	rrf	15,w	;volatile
 11016  02AE  0C89               	rrf	9,f
 11017  02AF  3901               	andlw	1
 11018  02B0  0020               	movlb	0	; select bank0
 11019  02B1  00C9               	movwf	??_tsttc
 11020  02B2  0023               	movlb	3	; select bank3
 11021  02B3  0811               	movf	17,w	;volatile
 11022  02B4  391F               	andlw	31
 11023  02B5  0020               	movlb	0	; select bank0
 11024  02B6  0449               	iorwf	??_tsttc,w
 11025  02B7  1D03               	btfss	3,2
 11026  02B8  2ABA               	goto	u3681
 11027  02B9  2ABB               	goto	u3680
 11028  02BA                     u3681:	
 11029  02BA  2AAC               	goto	l6361
 11030  02BB                     u3680:	
 11031  02BB                     l1447:	
 11032                           
 11033                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11034  02BB  0023               	movlb	3	; select bank3
 11035  02BC  1691               	bsf	17,5	;volatile
 11036  02BD  1611               	bsf	17,4	;volatile
 11037  02BE                     l1448:	
 11038  02BE  1A11               	btfsc	17,4	;volatile
 11039  02BF  2AC1               	goto	u3691
 11040  02C0  2AC2               	goto	u3690
 11041  02C1                     u3691:	
 11042  02C1  2ABE               	goto	l1448
 11043  02C2                     u3690:	
 11044  02C2                     l6363:	
 11045  02C2  0023               	movlb	3	; select bank3
 11046  02C3  0C0F               	rrf	15,w	;volatile
 11047  02C4  0C89               	rrf	9,f
 11048  02C5  3901               	andlw	1
 11049  02C6  0020               	movlb	0	; select bank0
 11050  02C7  00C9               	movwf	??_tsttc
 11051  02C8  0023               	movlb	3	; select bank3
 11052  02C9  0811               	movf	17,w	;volatile
 11053  02CA  391F               	andlw	31
 11054  02CB  0020               	movlb	0	; select bank0
 11055  02CC  0449               	iorwf	??_tsttc,w
 11056  02CD  1D03               	btfss	3,2
 11057  02CE  2AD0               	goto	u3701
 11058  02CF  2AD1               	goto	u3700
 11059  02D0                     u3701:	
 11060  02D0  2AC2               	goto	l6363
 11061  02D1                     u3700:	
 11062  02D1                     l1453:	
 11063                           
 11064                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11065  02D1  0023               	movlb	3	; select bank3
 11066  02D2  1511               	bsf	17,2	;volatile
 11067  02D3                     l1454:	
 11068  02D3  1911               	btfsc	17,2	;volatile
 11069  02D4  2AD6               	goto	u3711
 11070  02D5  2AD7               	goto	u3710
 11071  02D6                     u3711:	
 11072  02D6  2AD3               	goto	l1454
 11073  02D7                     u3710:	
 11074  02D7                     l1456:	
 11075                           
 11076                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11077  02D7  0020               	movlb	0	; select bank0
 11078  02D8  1F4A               	btfss	tsttc@value,6
 11079  02D9  2ADB               	goto	u3721
 11080  02DA  2ADC               	goto	u3720
 11081  02DB                     u3721:	
 11082  02DB  2A33               	goto	l1420
 11083  02DC                     u3720:	
 11084  02DC                     l6365:	
 11085  02DC  0023               	movlb	3	; select bank3
 11086  02DD  0C0F               	rrf	15,w	;volatile
 11087  02DE  0C89               	rrf	9,f
 11088  02DF  3901               	andlw	1
 11089  02E0  0020               	movlb	0	; select bank0
 11090  02E1  00C9               	movwf	??_tsttc
 11091  02E2  0023               	movlb	3	; select bank3
 11092  02E3  0811               	movf	17,w	;volatile
 11093  02E4  391F               	andlw	31
 11094  02E5  0020               	movlb	0	; select bank0
 11095  02E6  0449               	iorwf	??_tsttc,w
 11096  02E7  1D03               	btfss	3,2
 11097  02E8  2AEA               	goto	u3731
 11098  02E9  2AEB               	goto	u3730
 11099  02EA                     u3731:	
 11100  02EA  2ADC               	goto	l6365
 11101  02EB                     u3730:	
 11102  02EB                     l1460:	
 11103                           
 11104                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11105  02EB  0023               	movlb	3	; select bank3
 11106  02EC  1411               	bsf	17,0	;volatile
 11107  02ED                     l1461:	
 11108  02ED  1811               	btfsc	17,0	;volatile
 11109  02EE  2AF0               	goto	u3741
 11110  02EF  2AF1               	goto	u3740
 11111  02F0                     u3741:	
 11112  02F0  2AED               	goto	l1461
 11113  02F1                     u3740:	
 11114  02F1                     l6367:	
 11115  02F1  0023               	movlb	3	; select bank3
 11116  02F2  0C0F               	rrf	15,w	;volatile
 11117  02F3  0C89               	rrf	9,f
 11118  02F4  3901               	andlw	1
 11119  02F5  0020               	movlb	0	; select bank0
 11120  02F6  00C9               	movwf	??_tsttc
 11121  02F7  0023               	movlb	3	; select bank3
 11122  02F8  0811               	movf	17,w	;volatile
 11123  02F9  391F               	andlw	31
 11124  02FA  0020               	movlb	0	; select bank0
 11125  02FB  0449               	iorwf	??_tsttc,w
 11126  02FC  1D03               	btfss	3,2
 11127  02FD  2AFF               	goto	u3751
 11128  02FE  2B00               	goto	u3750
 11129  02FF                     u3751:	
 11130  02FF  2AF1               	goto	l6367
 11131  0300                     u3750:	
 11132  0300                     l6369:	
 11133                           
 11134                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11135  0300  309A               	movlw	154
 11136  0301  3185  2566  3182   	fcall	_WriteI2C
 11137  0304                     l6371:	
 11138  0304  0023               	movlb	3	; select bank3
 11139  0305  0C0F               	rrf	15,w	;volatile
 11140  0306  0C89               	rrf	9,f
 11141  0307  3901               	andlw	1
 11142  0308  0020               	movlb	0	; select bank0
 11143  0309  00C9               	movwf	??_tsttc
 11144  030A  0023               	movlb	3	; select bank3
 11145  030B  0811               	movf	17,w	;volatile
 11146  030C  391F               	andlw	31
 11147  030D  0020               	movlb	0	; select bank0
 11148  030E  0449               	iorwf	??_tsttc,w
 11149  030F  1D03               	btfss	3,2
 11150  0310  2B12               	goto	u3761
 11151  0311  2B13               	goto	u3760
 11152  0312                     u3761:	
 11153  0312  2B04               	goto	l6371
 11154  0313                     u3760:	
 11155  0313                     l6373:	
 11156                           
 11157                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11158  0313  3000               	movlw	0
 11159  0314  3185  2566  3182   	fcall	_WriteI2C
 11160  0317                     l6375:	
 11161  0317  0023               	movlb	3	; select bank3
 11162  0318  0C0F               	rrf	15,w	;volatile
 11163  0319  0C89               	rrf	9,f
 11164  031A  3901               	andlw	1
 11165  031B  0020               	movlb	0	; select bank0
 11166  031C  00C9               	movwf	??_tsttc
 11167  031D  0023               	movlb	3	; select bank3
 11168  031E  0811               	movf	17,w	;volatile
 11169  031F  391F               	andlw	31
 11170  0320  0020               	movlb	0	; select bank0
 11171  0321  0449               	iorwf	??_tsttc,w
 11172  0322  1D03               	btfss	3,2
 11173  0323  2B25               	goto	u3771
 11174  0324  2B26               	goto	u3770
 11175  0325                     u3771:	
 11176  0325  2B17               	goto	l6375
 11177  0326                     u3770:	
 11178  0326                     l1472:	
 11179                           
 11180                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11181  0326  0023               	movlb	3	; select bank3
 11182  0327  1491               	bsf	17,1	;volatile
 11183  0328                     l1473:	
 11184  0328  1891               	btfsc	17,1	;volatile
 11185  0329  2B2B               	goto	u3781
 11186  032A  2B2C               	goto	u3780
 11187  032B                     u3781:	
 11188  032B  2B28               	goto	l1473
 11189  032C                     u3780:	
 11190  032C                     l6377:	
 11191  032C  0023               	movlb	3	; select bank3
 11192  032D  0C0F               	rrf	15,w	;volatile
 11193  032E  0C89               	rrf	9,f
 11194  032F  3901               	andlw	1
 11195  0330  0020               	movlb	0	; select bank0
 11196  0331  00C9               	movwf	??_tsttc
 11197  0332  0023               	movlb	3	; select bank3
 11198  0333  0811               	movf	17,w	;volatile
 11199  0334  391F               	andlw	31
 11200  0335  0020               	movlb	0	; select bank0
 11201  0336  0449               	iorwf	??_tsttc,w
 11202  0337  1D03               	btfss	3,2
 11203  0338  2B3A               	goto	u3791
 11204  0339  2B3B               	goto	u3790
 11205  033A                     u3791:	
 11206  033A  2B2C               	goto	l6377
 11207  033B                     u3790:	
 11208  033B                     l6379:	
 11209                           
 11210                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11211  033B  309B               	movlw	155
 11212  033C  3185  2566  3182   	fcall	_WriteI2C
 11213  033F                     l6381:	
 11214  033F  0023               	movlb	3	; select bank3
 11215  0340  0C0F               	rrf	15,w	;volatile
 11216  0341  0C89               	rrf	9,f
 11217  0342  3901               	andlw	1
 11218  0343  0020               	movlb	0	; select bank0
 11219  0344  00C9               	movwf	??_tsttc
 11220  0345  0023               	movlb	3	; select bank3
 11221  0346  0811               	movf	17,w	;volatile
 11222  0347  391F               	andlw	31
 11223  0348  0020               	movlb	0	; select bank0
 11224  0349  0449               	iorwf	??_tsttc,w
 11225  034A  1D03               	btfss	3,2
 11226  034B  2B4D               	goto	u3801
 11227  034C  2B4E               	goto	u3800
 11228  034D                     u3801:	
 11229  034D  2B3F               	goto	l6381
 11230  034E                     u3800:	
 11231  034E                     l6383:	
 11232                           
 11233                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11234  034E  318D  25EA  3182   	fcall	_ReadI2C
 11235  0351  0020               	movlb	0	; select bank0
 11236  0352  00C9               	movwf	??_tsttc
 11237  0353  0849               	movf	??_tsttc,w
 11238  0354  00CA               	movwf	tsttc@value
 11239  0355                     l6385:	
 11240  0355  0023               	movlb	3	; select bank3
 11241  0356  0C0F               	rrf	15,w	;volatile
 11242  0357  0C89               	rrf	9,f
 11243  0358  3901               	andlw	1
 11244  0359  0020               	movlb	0	; select bank0
 11245  035A  00C9               	movwf	??_tsttc
 11246  035B  0023               	movlb	3	; select bank3
 11247  035C  0811               	movf	17,w	;volatile
 11248  035D  391F               	andlw	31
 11249  035E  0020               	movlb	0	; select bank0
 11250  035F  0449               	iorwf	??_tsttc,w
 11251  0360  1D03               	btfss	3,2
 11252  0361  2B63               	goto	u3811
 11253  0362  2B64               	goto	u3810
 11254  0363                     u3811:	
 11255  0363  2B55               	goto	l6385
 11256  0364                     u3810:	
 11257  0364                     l1484:	
 11258                           
 11259                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11260  0364  0023               	movlb	3	; select bank3
 11261  0365  1691               	bsf	17,5	;volatile
 11262  0366  1611               	bsf	17,4	;volatile
 11263  0367                     l1485:	
 11264  0367  1A11               	btfsc	17,4	;volatile
 11265  0368  2B6A               	goto	u3821
 11266  0369  2B6B               	goto	u3820
 11267  036A                     u3821:	
 11268  036A  2B67               	goto	l1485
 11269  036B                     u3820:	
 11270  036B                     l6387:	
 11271  036B  0023               	movlb	3	; select bank3
 11272  036C  0C0F               	rrf	15,w	;volatile
 11273  036D  0C89               	rrf	9,f
 11274  036E  3901               	andlw	1
 11275  036F  0020               	movlb	0	; select bank0
 11276  0370  00C9               	movwf	??_tsttc
 11277  0371  0023               	movlb	3	; select bank3
 11278  0372  0811               	movf	17,w	;volatile
 11279  0373  391F               	andlw	31
 11280  0374  0020               	movlb	0	; select bank0
 11281  0375  0449               	iorwf	??_tsttc,w
 11282  0376  1D03               	btfss	3,2
 11283  0377  2B79               	goto	u3831
 11284  0378  2B7A               	goto	u3830
 11285  0379                     u3831:	
 11286  0379  2B6B               	goto	l6387
 11287  037A                     u3830:	
 11288  037A                     l1490:	
 11289                           
 11290                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11291  037A  0023               	movlb	3	; select bank3
 11292  037B  1511               	bsf	17,2	;volatile
 11293  037C                     l1491:	
 11294  037C  1911               	btfsc	17,2	;volatile
 11295  037D  2B7F               	goto	u3841
 11296  037E  2B80               	goto	u3840
 11297  037F                     u3841:	
 11298  037F  2B7C               	goto	l1491
 11299  0380                     u3840:	
 11300  0380                     l6389:	
 11301                           
 11302                           ;I2C/i2c.c: 42:  return value;
 11303  0380  0020               	movlb	0	; select bank0
 11304  0381  084A               	movf	tsttc@value,w
 11305  0382                     l1494:	
 11306  0382  0008               	return
 11307  0383                     __end_of_tsttc:	
 11308                           
 11309                           	psect	text2
 11310  0566                     __ptext2:	
 11311 ;; *************** function _WriteI2C *****************
 11312 ;; Defined at:
 11313 ;;		line 88 in file "I2C/i2c.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  data_out        1    wreg     unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  data_out        1    4[BANK0 ] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      char 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;Total ram usage:        2 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    6
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		_tsttc
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           
 11342                           ;psect for function _WriteI2C
 11343  0566                     _WriteI2C:	
 11344                           
 11345                           ;incstack = 0
 11346                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11347                           ;WriteI2C@data_out stored from wreg
 11348  0566  0020               	movlb	0	; select bank0
 11349  0567  00C8               	movwf	WriteI2C@data_out
 11350  0568                     l6193:	
 11351                           
 11352                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11353  0568  0848               	movf	WriteI2C@data_out,w
 11354  0569  0023               	movlb	3	; select bank3
 11355  056A  008C               	movwf	12	;volatile
 11356  056B                     l6195:	
 11357                           
 11358                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11359  056B  1F90               	btfss	16,7	;volatile
 11360  056C  2D6E               	goto	u3411
 11361  056D  2D6F               	goto	u3410
 11362  056E                     u3411:	
 11363  056E  2D70               	goto	l6201
 11364  056F                     u3410:	
 11365  056F  2DBF               	goto	l1510
 11366  0570                     l6201:	
 11367                           
 11368                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11369  0570  300F               	movlw	15
 11370  0571  0510               	andwf	16,w	;volatile
 11371  0572  0020               	movlb	0	; select bank0
 11372  0573  00C7               	movwf	??_WriteI2C
 11373  0574  3008               	movlw	8
 11374  0575  0647               	xorwf	??_WriteI2C,w
 11375  0576  1903               	btfsc	3,2
 11376  0577  2D79               	goto	u3421
 11377  0578  2D7A               	goto	u3420
 11378  0579                     u3421:	
 11379  0579  2D93               	goto	l6213
 11380  057A                     u3420:	
 11381  057A                     l6203:	
 11382  057A  300F               	movlw	15
 11383  057B  0023               	movlb	3	; select bank3
 11384  057C  0510               	andwf	16,w	;volatile
 11385  057D  0020               	movlb	0	; select bank0
 11386  057E  00C7               	movwf	??_WriteI2C
 11387  057F  300B               	movlw	11
 11388  0580  0647               	xorwf	??_WriteI2C,w
 11389  0581  1903               	btfsc	3,2
 11390  0582  2D84               	goto	u3431
 11391  0583  2D85               	goto	u3430
 11392  0584                     u3431:	
 11393  0584  2D93               	goto	l6213
 11394  0585                     u3430:	
 11395  0585                     l6205:	
 11396                           
 11397                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11398  0585  0023               	movlb	3	; select bank3
 11399  0586  1610               	bsf	16,4	;volatile
 11400  0587                     l1513:	
 11401                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11402                           
 11403  0587  002E               	movlb	14	; select bank14
 11404  0588  1C0F               	btfss	15,0	;volatile
 11405  0589  2D8B               	goto	u3441
 11406  058A  2D8C               	goto	u3440
 11407  058B                     u3441:	
 11408  058B  2D87               	goto	l1513
 11409  058C                     u3440:	
 11410  058C                     l1515:	
 11411                           
 11412                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11413  058C  0023               	movlb	3	; select bank3
 11414  058D  190F               	btfsc	15,2	;volatile
 11415  058E  2D90               	goto	u3451
 11416  058F  2D91               	goto	u3450
 11417  0590                     u3451:	
 11418  0590  2DBF               	goto	l1510
 11419  0591                     u3450:	
 11420  0591                     l6207:	
 11421  0591  080F               	movf	15,w	;volatile
 11422  0592  2DBF               	goto	l1510
 11423  0593                     l6213:	
 11424  0593  300F               	movlw	15
 11425  0594  0023               	movlb	3	; select bank3
 11426  0595  0510               	andwf	16,w	;volatile
 11427  0596  0020               	movlb	0	; select bank0
 11428  0597  00C7               	movwf	??_WriteI2C
 11429  0598  3008               	movlw	8
 11430  0599  0647               	xorwf	??_WriteI2C,w
 11431  059A  1903               	btfsc	3,2
 11432  059B  2D9D               	goto	u3461
 11433  059C  2D9E               	goto	u3460
 11434  059D                     u3461:	
 11435  059D  2DA9               	goto	l1522
 11436  059E                     u3460:	
 11437  059E                     l6215:	
 11438  059E  300F               	movlw	15
 11439  059F  0023               	movlb	3	; select bank3
 11440  05A0  0510               	andwf	16,w	;volatile
 11441  05A1  0020               	movlb	0	; select bank0
 11442  05A2  00C7               	movwf	??_WriteI2C
 11443  05A3  300B               	movlw	11
 11444  05A4  0647               	xorwf	??_WriteI2C,w
 11445  05A5  1D03               	btfss	3,2
 11446  05A6  2DA8               	goto	u3471
 11447  05A7  2DA9               	goto	u3470
 11448  05A8                     u3471:	
 11449  05A8  2DBF               	goto	l1510
 11450  05A9                     u3470:	
 11451  05A9                     l1522:	
 11452  05A9  0023               	movlb	3	; select bank3
 11453  05AA  180F               	btfsc	15,0	;volatile
 11454  05AB  2DAD               	goto	u3481
 11455  05AC  2DAE               	goto	u3480
 11456  05AD                     u3481:	
 11457  05AD  2DA9               	goto	l1522
 11458  05AE                     u3480:	
 11459  05AE                     l6217:	
 11460  05AE  0023               	movlb	3	; select bank3
 11461  05AF  0C0F               	rrf	15,w	;volatile
 11462  05B0  0C89               	rrf	9,f
 11463  05B1  3901               	andlw	1
 11464  05B2  0020               	movlb	0	; select bank0
 11465  05B3  00C7               	movwf	??_WriteI2C
 11466  05B4  0023               	movlb	3	; select bank3
 11467  05B5  0811               	movf	17,w	;volatile
 11468  05B6  391F               	andlw	31
 11469  05B7  0020               	movlb	0	; select bank0
 11470  05B8  0447               	iorwf	??_WriteI2C,w
 11471  05B9  1D03               	btfss	3,2
 11472  05BA  2DBC               	goto	u3491
 11473  05BB  2DBD               	goto	u3490
 11474  05BC                     u3491:	
 11475  05BC  2DAE               	goto	l6217
 11476  05BD                     u3490:	
 11477  05BD                     l1527:	
 11478                           
 11479                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 11480  05BD  0023               	movlb	3	; select bank3
 11481  05BE  0811               	movf	17,w	;volatile
 11482  05BF                     l1510:	
 11483  05BF  0008               	return
 11484  05C0                     __end_of_WriteI2C:	
 11485                           
 11486                           	psect	text3
 11487  0DEA                     __ptext3:	
 11488 ;; *************** function _ReadI2C *****************
 11489 ;; Defined at:
 11490 ;;		line 73 in file "I2C/i2c.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      unsigned char 
 11497 ;; Registers used:
 11498 ;;		wreg, status,2, status,0
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;Total ram usage:        1 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:    6
 11511 ;; This function calls:
 11512 ;;		Nothing
 11513 ;; This function is called by:
 11514 ;;		_tsttc
 11515 ;; This function uses a non-reentrant model
 11516 ;;
 11517                           
 11518                           
 11519                           ;psect for function _ReadI2C
 11520  0DEA                     _ReadI2C:	
 11521  0DEA                     l6223:	
 11522                           ;incstack = 0
 11523                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11524                           
 11525                           
 11526                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11527  0DEA  300F               	movlw	15
 11528  0DEB  0023               	movlb	3	; select bank3
 11529  0DEC  0510               	andwf	16,w	;volatile
 11530  0DED  0020               	movlb	0	; select bank0
 11531  0DEE  00C7               	movwf	??_ReadI2C
 11532  0DEF  3008               	movlw	8
 11533  0DF0  0647               	xorwf	??_ReadI2C,w
 11534  0DF1  1903               	btfsc	3,2
 11535  0DF2  2DF4               	goto	u3501
 11536  0DF3  2DF5               	goto	u3500
 11537  0DF4                     u3501:	
 11538  0DF4  2E00               	goto	l1502
 11539  0DF5                     u3500:	
 11540  0DF5                     l6225:	
 11541  0DF5  300F               	movlw	15
 11542  0DF6  0023               	movlb	3	; select bank3
 11543  0DF7  0510               	andwf	16,w	;volatile
 11544  0DF8  0020               	movlb	0	; select bank0
 11545  0DF9  00C7               	movwf	??_ReadI2C
 11546  0DFA  300B               	movlw	11
 11547  0DFB  0647               	xorwf	??_ReadI2C,w
 11548  0DFC  1D03               	btfss	3,2
 11549  0DFD  2DFF               	goto	u3511
 11550  0DFE  2E00               	goto	u3510
 11551  0DFF                     u3511:	
 11552  0DFF  2E02               	goto	l1503
 11553  0E00                     u3510:	
 11554  0E00                     l1502:	
 11555                           
 11556                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 11557  0E00  0023               	movlb	3	; select bank3
 11558  0E01  1591               	bsf	17,3	;volatile
 11559  0E02                     l1503:	
 11560  0E02  0023               	movlb	3	; select bank3
 11561  0E03  1C0F               	btfss	15,0	;volatile
 11562  0E04  2E06               	goto	u3521
 11563  0E05  2E07               	goto	u3520
 11564  0E06                     u3521:	
 11565  0E06  2E02               	goto	l1503
 11566  0E07                     u3520:	
 11567  0E07                     l6227:	
 11568                           
 11569                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 11570  0E07  080C               	movf	12,w	;volatile
 11571  0E08                     l1506:	
 11572  0E08  0008               	return
 11573  0E09                     __end_of_ReadI2C:	
 11574                           
 11575                           	psect	text4
 11576  0383                     __ptext4:	
 11577 ;; *************** function _recoverData *****************
 11578 ;; Defined at:
 11579 ;;		line 11 in file "eeprom_rw.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;		None
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;		None
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      void 
 11586 ;; Registers used:
 11587 ;;		wreg, status,2, status,0, pclath, cstack
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;Total ram usage:        1 bytes
 11598 ;; Hardware stack levels used:    1
 11599 ;; Hardware stack levels required when called:    9
 11600 ;; This function calls:
 11601 ;;		_DATAEE_ReadByte
 11602 ;;		_DATAEE_WriteByte
 11603 ;;		_cksum
 11604 ;;		_cksum_w
 11605 ;;		_reset_recv
 11606 ;; This function is called by:
 11607 ;;		_main
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           
 11612                           ;psect for function _recoverData
 11613  0383                     _recoverData:	
 11614  0383                     l6311:	
 11615                           ;incstack = 0
 11616                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11617                           
 11618                           
 11619                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11620  0383  30F5               	movlw	245
 11621  0384  0020               	movlb	0	; select bank0
 11622  0385  00C7               	movwf	DATAEE_ReadByte@bAdd
 11623  0386  30F0               	movlw	240
 11624  0387  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11625  0388  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11626  038B  3AAB               	xorlw	171
 11627  038C  1D03               	skipz
 11628  038D  2B8F               	goto	u3571
 11629  038E  2B90               	goto	u3570
 11630  038F                     u3571:	
 11631  038F  2BE4               	goto	l6317
 11632  0390                     u3570:	
 11633  0390                     l6313:	
 11634                           
 11635                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11636  0390  318E  2629  3183   	fcall	_cksum
 11637  0393  0020               	movlb	0	; select bank0
 11638  0394  00D3               	movwf	??_recoverData
 11639  0395  30FF               	movlw	255
 11640  0396  00C7               	movwf	DATAEE_ReadByte@bAdd
 11641  0397  30F0               	movlw	240
 11642  0398  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11643  0399  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11644  039C  0020               	movlb	0	; select bank0
 11645  039D  0653               	xorwf	??_recoverData,w
 11646  039E  1D03               	skipz
 11647  039F  2BA1               	goto	u3581
 11648  03A0  2BA2               	goto	u3580
 11649  03A1                     u3581:	
 11650  03A1  2BE4               	goto	l6317
 11651  03A2                     u3580:	
 11652  03A2                     l6315:	
 11653                           
 11654                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11655  03A2  30F6               	movlw	246
 11656  03A3  00C7               	movwf	DATAEE_ReadByte@bAdd
 11657  03A4  30F0               	movlw	240
 11658  03A5  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11659  03A6  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11660  03A9  0020               	movlb	0	; select bank0
 11661  03AA  00D3               	movwf	??_recoverData
 11662  03AB  0853               	movf	??_recoverData,w
 11663  03AC  00C1               	movwf	_clkh	;volatile
 11664                           
 11665                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11666  03AD  30F7               	movlw	247
 11667  03AE  00C7               	movwf	DATAEE_ReadByte@bAdd
 11668  03AF  30F0               	movlw	240
 11669  03B0  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11670  03B1  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11671  03B4  0020               	movlb	0	; select bank0
 11672  03B5  00D3               	movwf	??_recoverData
 11673  03B6  0853               	movf	??_recoverData,w
 11674  03B7  00C0               	movwf	_clkm	;volatile
 11675                           
 11676                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11677  03B8  30F8               	movlw	248
 11678  03B9  00C7               	movwf	DATAEE_ReadByte@bAdd
 11679  03BA  30F0               	movlw	240
 11680  03BB  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11681  03BC  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11682  03BF  0020               	movlb	0	; select bank0
 11683  03C0  00D3               	movwf	??_recoverData
 11684  03C1  0853               	movf	??_recoverData,w
 11685  03C2  00E3               	movwf	_nreg
 11686                           
 11687                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11688  03C3  30F9               	movlw	249
 11689  03C4  00C7               	movwf	DATAEE_ReadByte@bAdd
 11690  03C5  30F0               	movlw	240
 11691  03C6  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11692  03C7  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11693  03CA  0020               	movlb	0	; select bank0
 11694  03CB  00D3               	movwf	??_recoverData
 11695  03CC  0853               	movf	??_recoverData,w
 11696  03CD  00C2               	movwf	_nreg_pt
 11697                           
 11698                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11699  03CE  30FA               	movlw	250
 11700  03CF  00C7               	movwf	DATAEE_ReadByte@bAdd
 11701  03D0  30F0               	movlw	240
 11702  03D1  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11703  03D2  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11704  03D5  0020               	movlb	0	; select bank0
 11705  03D6  00D3               	movwf	??_recoverData
 11706  03D7  0853               	movf	??_recoverData,w
 11707  03D8  00E2               	movwf	_pmon
 11708                           
 11709                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11710  03D9  30FB               	movlw	251
 11711  03DA  00C7               	movwf	DATAEE_ReadByte@bAdd
 11712  03DB  30F0               	movlw	240
 11713  03DC  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11714  03DD  318C  241C  3183   	fcall	_DATAEE_ReadByte
 11715  03E0  0020               	movlb	0	; select bank0
 11716  03E1  00D3               	movwf	??_recoverData
 11717  03E2  0853               	movf	??_recoverData,w
 11718  03E3  00E1               	movwf	_tala
 11719  03E4                     l6317:	
 11720                           
 11721                           ;eeprom_rw.c: 24:     reset_recv();
 11722  03E4  318D  25AF  3183   	fcall	_reset_recv
 11723  03E7                     l6319:	
 11724                           
 11725                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11726  03E7  30F5               	movlw	245
 11727  03E8  0020               	movlb	0	; select bank0
 11728  03E9  00CD               	movwf	DATAEE_WriteByte@bAdd
 11729  03EA  30F0               	movlw	240
 11730  03EB  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11731  03EC  30AB               	movlw	171
 11732  03ED  00D3               	movwf	??_recoverData
 11733  03EE  0853               	movf	??_recoverData,w
 11734  03EF  00CF               	movwf	DATAEE_WriteByte@bData
 11735  03F0  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11736  03F3                     l6321:	
 11737                           
 11738                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11739  03F3  30F8               	movlw	248
 11740  03F4  0020               	movlb	0	; select bank0
 11741  03F5  00CD               	movwf	DATAEE_WriteByte@bAdd
 11742  03F6  30F0               	movlw	240
 11743  03F7  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11744  03F8  0863               	movf	_nreg,w
 11745  03F9  00D3               	movwf	??_recoverData
 11746  03FA  0853               	movf	??_recoverData,w
 11747  03FB  00CF               	movwf	DATAEE_WriteByte@bData
 11748  03FC  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11749  03FF                     l6323:	
 11750                           
 11751                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11752  03FF  30FA               	movlw	250
 11753  0400  0020               	movlb	0	; select bank0
 11754  0401  00CD               	movwf	DATAEE_WriteByte@bAdd
 11755  0402  30F0               	movlw	240
 11756  0403  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11757  0404  0862               	movf	_pmon,w
 11758  0405  00D3               	movwf	??_recoverData
 11759  0406  0853               	movf	??_recoverData,w
 11760  0407  00CF               	movwf	DATAEE_WriteByte@bData
 11761  0408  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11762  040B                     l6325:	
 11763                           
 11764                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11765  040B  30FB               	movlw	251
 11766  040C  0020               	movlb	0	; select bank0
 11767  040D  00CD               	movwf	DATAEE_WriteByte@bAdd
 11768  040E  30F0               	movlw	240
 11769  040F  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11770  0410  0861               	movf	_tala,w
 11771  0411  00D3               	movwf	??_recoverData
 11772  0412  0853               	movf	??_recoverData,w
 11773  0413  00CF               	movwf	DATAEE_WriteByte@bData
 11774  0414  318E  2649  3183   	fcall	_DATAEE_WriteByte
 11775  0417                     l6327:	
 11776                           
 11777                           ;eeprom_rw.c: 31:     cksum_w();
 11778  0417  318C  243B  3183   	fcall	_cksum_w
 11779  041A                     l1560:	
 11780  041A  0008               	return
 11781  041B                     __end_of_recoverData:	
 11782                           
 11783                           	psect	text5
 11784  0DAF                     __ptext5:	
 11785 ;; *************** function _reset_recv *****************
 11786 ;; Defined at:
 11787 ;;		line 75 in file "eeprom_rw.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  i               2   13[BANK0 ] unsigned int 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, status,2, status,0, pclath, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;Total ram usage:        2 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:    7
 11808 ;; This function calls:
 11809 ;;		_DATAEE_WriteByte
 11810 ;; This function is called by:
 11811 ;;		_recoverData
 11812 ;;		_recover
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _reset_recv
 11818  0DAF                     _reset_recv:	
 11819  0DAF                     l6183:	
 11820                           ;incstack = 0
 11821                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11822                           
 11823                           
 11824                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11825  0DAF  30F5               	movlw	245
 11826  0DB0  0020               	movlb	0	; select bank0
 11827  0DB1  00D1               	movwf	reset_recv@i
 11828  0DB2  30F0               	movlw	240
 11829  0DB3  00D2               	movwf	reset_recv@i+1
 11830  0DB4                     l6187:	
 11831                           
 11832                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11833  0DB4  0852               	movf	reset_recv@i+1,w
 11834  0DB5  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11835  0DB6  0851               	movf	reset_recv@i,w
 11836  0DB7  00CD               	movwf	DATAEE_WriteByte@bAdd
 11837  0DB8  01CF               	clrf	DATAEE_WriteByte@bData
 11838  0DB9  318E  2649  318D   	fcall	_DATAEE_WriteByte
 11839  0DBC                     l6189:	
 11840  0DBC  3001               	movlw	1
 11841  0DBD  0020               	movlb	0	; select bank0
 11842  0DBE  07D1               	addwf	reset_recv@i,f
 11843  0DBF  3000               	movlw	0
 11844  0DC0  3DD2               	addwfc	reset_recv@i+1,f
 11845  0DC1                     l6191:	
 11846  0DC1  30F1               	movlw	241
 11847  0DC2  0252               	subwf	reset_recv@i+1,w
 11848  0DC3  3000               	movlw	0
 11849  0DC4  1903               	skipnz
 11850  0DC5  0251               	subwf	reset_recv@i,w
 11851  0DC6  1C03               	skipc
 11852  0DC7  2DC9               	goto	u3401
 11853  0DC8  2DCA               	goto	u3400
 11854  0DC9                     u3401:	
 11855  0DC9  2DB4               	goto	l6187
 11856  0DCA                     u3400:	
 11857  0DCA                     l1587:	
 11858  0DCA  0008               	return
 11859  0DCB                     __end_of_reset_recv:	
 11860                           
 11861                           	psect	text6
 11862  0C3B                     __ptext6:	
 11863 ;; *************** function _cksum_w *****************
 11864 ;; Defined at:
 11865 ;;		line 61 in file "eeprom_rw.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;		None
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  1    wreg      void 
 11872 ;; Registers used:
 11873 ;;		wreg, status,2, status,0, pclath, cstack
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;Total ram usage:        1 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    8
 11886 ;; This function calls:
 11887 ;;		_DATAEE_WriteByte
 11888 ;;		_cksum
 11889 ;; This function is called by:
 11890 ;;		_main
 11891 ;;		_recoverData
 11892 ;;		_recover
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           
 11897                           ;psect for function _cksum_w
 11898  0C3B                     _cksum_w:	
 11899  0C3B                     l6109:	
 11900                           ;incstack = 0
 11901                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11902                           
 11903                           
 11904                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 11905  0C3B  30FF               	movlw	255
 11906  0C3C  0020               	movlb	0	; select bank0
 11907  0C3D  00CD               	movwf	DATAEE_WriteByte@bAdd
 11908  0C3E  30F0               	movlw	240
 11909  0C3F  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11910  0C40  318E  2629  318C   	fcall	_cksum
 11911  0C43  0020               	movlb	0	; select bank0
 11912  0C44  00D1               	movwf	??_cksum_w
 11913  0C45  0851               	movf	??_cksum_w,w
 11914  0C46  00CF               	movwf	DATAEE_WriteByte@bData
 11915  0C47  318E  2649  318C   	fcall	_DATAEE_WriteByte
 11916  0C4A                     l1577:	
 11917  0C4A  0008               	return
 11918  0C4B                     __end_of_cksum_w:	
 11919                           
 11920                           	psect	text7
 11921  0E29                     __ptext7:	
 11922 ;; *************** function _cksum *****************
 11923 ;; Defined at:
 11924 ;;		line 66 in file "eeprom_rw.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;		None
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;  i               2    7[BANK0 ] unsigned int 
 11929 ;;  res             1    6[BANK0 ] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      unsigned char 
 11932 ;; Registers used:
 11933 ;;		wreg, status,2, status,0, pclath, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        4 bytes
 11944 ;; Hardware stack levels used:    1
 11945 ;; Hardware stack levels required when called:    7
 11946 ;; This function calls:
 11947 ;;		_DATAEE_ReadByte
 11948 ;; This function is called by:
 11949 ;;		_recoverData
 11950 ;;		_cksum_w
 11951 ;;		_recover
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           
 11956                           ;psect for function _cksum
 11957  0E29                     _cksum:	
 11958  0E29                     l5953:	
 11959                           ;incstack = 0
 11960                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 11961                           
 11962                           
 11963                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 11964  0E29  0020               	movlb	0	; select bank0
 11965  0E2A  01CA               	clrf	cksum@res
 11966  0E2B                     l5955:	
 11967                           
 11968                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 11969  0E2B  30F5               	movlw	245
 11970  0E2C  00CB               	movwf	cksum@i
 11971  0E2D  30F0               	movlw	240
 11972  0E2E  00CC               	movwf	cksum@i+1
 11973  0E2F                     l5961:	
 11974                           
 11975                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 11976  0E2F  084C               	movf	cksum@i+1,w
 11977  0E30  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11978  0E31  084B               	movf	cksum@i,w
 11979  0E32  00C7               	movwf	DATAEE_ReadByte@bAdd
 11980  0E33  318C  241C  318E   	fcall	_DATAEE_ReadByte
 11981  0E36  0020               	movlb	0	; select bank0
 11982  0E37  00C9               	movwf	??_cksum
 11983  0E38  0849               	movf	??_cksum,w
 11984  0E39  07CA               	addwf	cksum@res,f
 11985  0E3A                     l5963:	
 11986                           
 11987                           ;eeprom_rw.c: 71:     }
 11988  0E3A  3001               	movlw	1
 11989  0E3B  07CB               	addwf	cksum@i,f
 11990  0E3C  3000               	movlw	0
 11991  0E3D  3DCC               	addwfc	cksum@i+1,f
 11992  0E3E                     l5965:	
 11993  0E3E  30F0               	movlw	240
 11994  0E3F  024C               	subwf	cksum@i+1,w
 11995  0E40  30FF               	movlw	255
 11996  0E41  1903               	skipnz
 11997  0E42  024B               	subwf	cksum@i,w
 11998  0E43  1C03               	skipc
 11999  0E44  2E46               	goto	u3341
 12000  0E45  2E47               	goto	u3340
 12001  0E46                     u3341:	
 12002  0E46  2E2F               	goto	l5961
 12003  0E47                     u3340:	
 12004  0E47                     l5967:	
 12005                           
 12006                           ;eeprom_rw.c: 72:     return res;
 12007  0E47  084A               	movf	cksum@res,w
 12008  0E48                     l1582:	
 12009  0E48  0008               	return
 12010  0E49                     __end_of_cksum:	
 12011                           
 12012                           	psect	text8
 12013  0F81                     __ptext8:	
 12014 ;; *************** function _read_ring *****************
 12015 ;; Defined at:
 12016 ;;		line 43 in file "eeprom_rw.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  nreg_pt         1    wreg     unsigned char 
 12019 ;;  nreg            1    7[BANK0 ] unsigned char 
 12020 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12021 ;;  index           1    9[BANK0 ] unsigned char 
 12022 ;;  subindex        1   10[BANK0 ] unsigned char 
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12025 ;;  absindex        1   15[BANK0 ] unsigned char 
 12026 ;;  i               1   13[BANK0 ] unsigned char 
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  1    wreg      unsigned char 
 12029 ;; Registers used:
 12030 ;;		wreg, status,2, status,0, pclath, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;Total ram usage:        9 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    7
 12043 ;; This function calls:
 12044 ;;		_DATAEE_ReadByte
 12045 ;;		___bmul
 12046 ;; This function is called by:
 12047 ;;		_main
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _read_ring
 12053  0F81                     _read_ring:	
 12054                           
 12055                           ;incstack = 0
 12056                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12057                           ;read_ring@nreg_pt stored from wreg
 12058  0F81  0020               	movlb	0	; select bank0
 12059  0F82  00D2               	movwf	read_ring@nreg_pt
 12060  0F83                     l6393:	
 12061  0F83                     l6395:	
 12062                           
 12063                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12064  0F83  084D               	movf	read_ring@index,w
 12065  0F84  024B               	subwf	read_ring@nreg,w
 12066  0F85  1C03               	skipc
 12067  0F86  2F88               	goto	u3851
 12068  0F87  2F89               	goto	u3850
 12069  0F88                     u3851:	
 12070  0F88  2FB3               	goto	l6407
 12071  0F89                     u3850:	
 12072  0F89                     l6397:	
 12073  0F89  084C               	movf	read_ring@nreg_init,w
 12074  0F8A  1903               	btfsc	3,2
 12075  0F8B  2F8D               	goto	u3861
 12076  0F8C  2F8E               	goto	u3860
 12077  0F8D                     u3861:	
 12078  0F8D  2FB3               	goto	l6407
 12079  0F8E                     u3860:	
 12080  0F8E                     l6399:	
 12081                           
 12082                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12083  0F8E  3005               	movlw	5
 12084  0F8F  00CF               	movwf	??_read_ring
 12085  0F90  084F               	movf	??_read_ring,w
 12086  0F91  00C7               	movwf	___bmul@multiplicand
 12087  0F92  084D               	movf	read_ring@index,w
 12088  0F93  318C  24D0  318F   	fcall	___bmul
 12089  0F96  0020               	movlb	0	; select bank0
 12090  0F97  074E               	addwf	read_ring@subindex,w
 12091  0F98  00D0               	movwf	??_read_ring+1
 12092  0F99  0850               	movf	??_read_ring+1,w
 12093  0F9A  00D3               	movwf	read_ring@absindex
 12094  0F9B                     l6401:	
 12095                           
 12096                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12097  0F9B  0853               	movf	read_ring@absindex,w
 12098  0F9C  0252               	subwf	read_ring@nreg_pt,w
 12099  0F9D  1C03               	skipc
 12100  0F9E  2FA0               	goto	u3871
 12101  0F9F  2FA1               	goto	u3870
 12102  0FA0                     u3871:	
 12103  0FA0  2FA8               	goto	l6405
 12104  0FA1                     u3870:	
 12105  0FA1                     l6403:	
 12106                           
 12107                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12108  0FA1  0852               	movf	read_ring@nreg_pt,w
 12109  0FA2  0753               	addwf	read_ring@absindex,w
 12110  0FA3  3EFB               	addlw	251
 12111  0FA4  00CF               	movwf	??_read_ring
 12112  0FA5  084F               	movf	??_read_ring,w
 12113  0FA6  00D1               	movwf	read_ring@i
 12114  0FA7  2FB5               	goto	l6411
 12115  0FA8                     l6405:	
 12116                           
 12117                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12118  0FA8  0352               	decf	read_ring@nreg_pt,w
 12119  0FA9  3AFF               	xorlw	255
 12120  0FAA  00CF               	movwf	??_read_ring
 12121  0FAB  0853               	movf	read_ring@absindex,w
 12122  0FAC  024F               	subwf	??_read_ring,w
 12123  0FAD  074B               	addwf	read_ring@nreg,w
 12124  0FAE  3E05               	addlw	5
 12125  0FAF  00D0               	movwf	??_read_ring+1
 12126  0FB0  0850               	movf	??_read_ring+1,w
 12127  0FB1  00D1               	movwf	read_ring@i
 12128  0FB2  2FB5               	goto	l6411
 12129  0FB3                     l6407:	
 12130                           
 12131                           ;eeprom_rw.c: 56:         return 0;
 12132  0FB3  3000               	movlw	0
 12133  0FB4  2FBF               	goto	l1574
 12134  0FB5                     l6411:	
 12135                           
 12136                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12137  0FB5  0851               	movf	read_ring@i,w
 12138  0FB6  3E00               	addlw	0
 12139  0FB7  00C7               	movwf	DATAEE_ReadByte@bAdd
 12140  0FB8  30F0               	movlw	240
 12141  0FB9  1803               	skipnc
 12142  0FBA  30F1               	movlw	241
 12143  0FBB  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 12144  0FBC  318C  241C  318F   	fcall	_DATAEE_ReadByte
 12145  0FBF                     l1574:	
 12146  0FBF  0008               	return
 12147  0FC0                     __end_of_read_ring:	
 12148                           
 12149                           	psect	text9
 12150  0CD0                     __ptext9:	
 12151 ;; *************** function ___bmul *****************
 12152 ;; Defined at:
 12153 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  multiplier      1    wreg     unsigned char 
 12156 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12159 ;;  product         1    5[BANK0 ] unsigned char 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      unsigned char 
 12162 ;; Registers used:
 12163 ;;		wreg, status,2, status,0
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12169 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;Total ram usage:        4 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    6
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_read_ring
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function ___bmul
 12185  0CD0                     ___bmul:	
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12189                           ;___bmul@multiplier stored from wreg
 12190  0CD0  0020               	movlb	0	; select bank0
 12191  0CD1  00CA               	movwf	___bmul@multiplier
 12192  0CD2                     l6231:	
 12193  0CD2  01C9               	clrf	___bmul@product
 12194  0CD3                     l6233:	
 12195  0CD3  1C4A               	btfss	___bmul@multiplier,0
 12196  0CD4  2CD6               	goto	u3531
 12197  0CD5  2CD7               	goto	u3530
 12198  0CD6                     u3531:	
 12199  0CD6  2CDB               	goto	l6237
 12200  0CD7                     u3530:	
 12201  0CD7                     l6235:	
 12202  0CD7  0847               	movf	___bmul@multiplicand,w
 12203  0CD8  00C8               	movwf	??___bmul
 12204  0CD9  0848               	movf	??___bmul,w
 12205  0CDA  07C9               	addwf	___bmul@product,f
 12206  0CDB                     l6237:	
 12207  0CDB  1003               	clrc
 12208  0CDC  0DC7               	rlf	___bmul@multiplicand,f
 12209  0CDD                     l6239:	
 12210  0CDD  1003               	clrc
 12211  0CDE  0CCA               	rrf	___bmul@multiplier,f
 12212  0CDF  084A               	movf	___bmul@multiplier,w
 12213  0CE0  1D03               	btfss	3,2
 12214  0CE1  2CE3               	goto	u3541
 12215  0CE2  2CE4               	goto	u3540
 12216  0CE3                     u3541:	
 12217  0CE3  2CD3               	goto	l6233
 12218  0CE4                     u3540:	
 12219  0CE4                     l6241:	
 12220  0CE4  0849               	movf	___bmul@product,w
 12221  0CE5                     l1813:	
 12222  0CE5  0008               	return
 12223  0CE6                     __end_of___bmul:	
 12224                           
 12225                           	psect	text10
 12226  0C1C                     __ptext10:	
 12227 ;; *************** function _DATAEE_ReadByte *****************
 12228 ;; Defined at:
 12229 ;;		line 202 in file "mcc_generated_files/memory.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      unsigned char 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;Total ram usage:        2 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    6
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_recoverData
 12254 ;;		_read_ring
 12255 ;;		_cksum
 12256 ;;		_recover
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           
 12261                           ;psect for function _DATAEE_ReadByte
 12262  0C1C                     _DATAEE_ReadByte:	
 12263  0C1C                     l5821:	
 12264                           ;incstack = 0
 12265                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12266                           
 12267                           
 12268                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12269  0C1C  0020               	movlb	0	; select bank0
 12270  0C1D  0848               	movf	DATAEE_ReadByte@bAdd+1,w
 12271  0C1E  0030               	movlb	16	; select bank16
 12272  0C1F  009B               	movwf	27	;volatile
 12273  0C20                     l5823:	
 12274                           
 12275                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12276  0C20  0020               	movlb	0	; select bank0
 12277  0C21  0847               	movf	DATAEE_ReadByte@bAdd,w
 12278  0C22  0030               	movlb	16	; select bank16
 12279  0C23  009A               	movwf	26	;volatile
 12280  0C24                     l5825:	
 12281                           
 12282                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12283  0C24  171E               	bsf	30,6	;volsfr
 12284  0C25                     l5827:	
 12285                           
 12286                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12287  0C25  141E               	bsf	30,0	;volsfr
 12288  0C26                     l5829:	
 12289                           
 12290                           ;mcc_generated_files/memory.c: 208:     __nop();
 12291  0C26  0000               	nop
 12292  0C27                     l5831:	
 12293                           
 12294                           ;mcc_generated_files/memory.c: 209:     __nop();
 12295  0C27  0000               	nop
 12296  0C28                     l5833:	
 12297                           
 12298                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12299  0C28  0030               	movlb	16	; select bank16
 12300  0C29  081C               	movf	28,w	;volatile
 12301  0C2A                     l963:	
 12302  0C2A  0008               	return
 12303  0C2B                     __end_of_DATAEE_ReadByte:	
 12304                           
 12305                           	psect	text11
 12306  07A8                     __ptext11:	
 12307 ;; *************** function _push_ring *****************
 12308 ;; Defined at:
 12309 ;;		line 34 in file "eeprom_rw.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12312 ;;		 -> nreg_pt(1), 
 12313 ;;  nreg            1   13[BANK0 ] unsigned char 
 12314 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12315 ;;		 -> nreg_init(1), 
 12316 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12317 ;;		 -> ring_byte(5), 
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12320 ;;		 -> nreg_pt(1), 
 12321 ;;  i               1   18[BANK0 ] unsigned char 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12331 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;Total ram usage:        7 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    7
 12338 ;; This function calls:
 12339 ;;		_DATAEE_WriteByte
 12340 ;; This function is called by:
 12341 ;;		_main
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           
 12346                           ;psect for function _push_ring
 12347  07A8                     _push_ring:	
 12348                           
 12349                           ;incstack = 0
 12350                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12351                           ;push_ring@nreg_pt stored from wreg
 12352  07A8  0020               	movlb	0	; select bank0
 12353  07A9  00D7               	movwf	push_ring@nreg_pt
 12354  07AA                     l6415:	
 12355                           
 12356                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12357  07AA  0852               	movf	push_ring@nreg_init,w
 12358  07AB  0086               	movwf	6
 12359  07AC  0187               	clrf	7
 12360  07AD  0801               	movf	1,w
 12361  07AE  1D03               	btfss	3,2
 12362  07AF  2FB1               	goto	u3881
 12363  07B0  2FB2               	goto	u3880
 12364  07B1                     u3881:	
 12365  07B1  2FB7               	goto	l6419
 12366  07B2                     u3880:	
 12367  07B2                     l6417:	
 12368  07B2  0852               	movf	push_ring@nreg_init,w
 12369  07B3  0086               	movwf	6
 12370  07B4  0187               	clrf	7
 12371  07B5  0181               	clrf	1
 12372  07B6  0A81               	incf	1,f
 12373  07B7                     l6419:	
 12374                           
 12375                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12376  07B7  01D6               	clrf	push_ring@i
 12377  07B8                     l6425:	
 12378                           
 12379                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12380  07B8  0857               	movf	push_ring@nreg_pt,w
 12381  07B9  0086               	movwf	6
 12382  07BA  0187               	clrf	7
 12383  07BB  0851               	movf	push_ring@nreg,w
 12384  07BC  0201               	subwf	1,w
 12385  07BD  1C03               	skipc
 12386  07BE  2FC0               	goto	u3891
 12387  07BF  2FC1               	goto	u3890
 12388  07C0                     u3891:	
 12389  07C0  2FC5               	goto	l6429
 12390  07C1                     u3890:	
 12391  07C1                     l6427:	
 12392  07C1  0857               	movf	push_ring@nreg_pt,w
 12393  07C2  0086               	movwf	6
 12394  07C3  0187               	clrf	7
 12395  07C4  0181               	clrf	1
 12396  07C5                     l6429:	
 12397                           
 12398                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12399  07C5  0857               	movf	push_ring@nreg_pt,w
 12400  07C6  0086               	movwf	6
 12401  07C7  0187               	clrf	7
 12402  07C8  0801               	movf	1,w
 12403  07C9  3E00               	addlw	0
 12404  07CA  00CD               	movwf	DATAEE_WriteByte@bAdd
 12405  07CB  30F0               	movlw	240
 12406  07CC  1803               	skipnc
 12407  07CD  30F1               	movlw	241
 12408  07CE  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 12409  07CF  0856               	movf	push_ring@i,w
 12410  07D0  0753               	addwf	push_ring@ring_byte,w
 12411  07D1  00D4               	movwf	??_push_ring
 12412  07D2  0854               	movf	??_push_ring,w
 12413  07D3  0086               	movwf	6
 12414  07D4  0187               	clrf	7
 12415  07D5  0801               	movf	1,w
 12416  07D6  00D5               	movwf	??_push_ring+1
 12417  07D7  0855               	movf	??_push_ring+1,w
 12418  07D8  00CF               	movwf	DATAEE_WriteByte@bData
 12419  07D9  318E  2649  3187   	fcall	_DATAEE_WriteByte
 12420  07DC                     l6431:	
 12421                           
 12422                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12423  07DC  3001               	movlw	1
 12424  07DD  0020               	movlb	0	; select bank0
 12425  07DE  00D4               	movwf	??_push_ring
 12426  07DF  0857               	movf	push_ring@nreg_pt,w
 12427  07E0  0086               	movwf	6
 12428  07E1  0187               	clrf	7
 12429  07E2  0854               	movf	??_push_ring,w
 12430  07E3  0781               	addwf	1,f
 12431  07E4                     l6433:	
 12432                           
 12433                           ;eeprom_rw.c: 40:     }
 12434  07E4  3001               	movlw	1
 12435  07E5  00D4               	movwf	??_push_ring
 12436  07E6  0854               	movf	??_push_ring,w
 12437  07E7  07D6               	addwf	push_ring@i,f
 12438  07E8                     l6435:	
 12439  07E8  3005               	movlw	5
 12440  07E9  0256               	subwf	push_ring@i,w
 12441  07EA  1C03               	skipc
 12442  07EB  2FED               	goto	u3901
 12443  07EC  2FEE               	goto	u3900
 12444  07ED                     u3901:	
 12445  07ED  2FB8               	goto	l6425
 12446  07EE                     u3900:	
 12447  07EE                     l1567:	
 12448  07EE  0008               	return
 12449  07EF                     __end_of_push_ring:	
 12450                           
 12451                           	psect	text12
 12452  0E49                     __ptext12:	
 12453 ;; *************** function _DATAEE_WriteByte *****************
 12454 ;; Defined at:
 12455 ;;		line 180 in file "mcc_generated_files/memory.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12458 ;;  bData           1   11[BANK0 ] unsigned char 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        4 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    6
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_main
 12481 ;;		_recoverData
 12482 ;;		_push_ring
 12483 ;;		_cksum_w
 12484 ;;		_reset_recv
 12485 ;;		_recover
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489                           
 12490                           ;psect for function _DATAEE_WriteByte
 12491  0E49                     _DATAEE_WriteByte:	
 12492  0E49                     l5887:	
 12493                           ;incstack = 0
 12494                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12495                           
 12496                           
 12497                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12498  0E49  3000               	movlw	0
 12499  0E4A  1B8B               	btfsc	11,7	;volatile
 12500  0E4B  3001               	movlw	1
 12501  0E4C  0020               	movlb	0	; select bank0
 12502  0E4D  00D0               	movwf	DATAEE_WriteByte@GIEBitValue
 12503                           
 12504                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12505  0E4E  084E               	movf	DATAEE_WriteByte@bAdd+1,w
 12506  0E4F  0030               	movlb	16	; select bank16
 12507  0E50  009B               	movwf	27	;volatile
 12508  0E51                     l5889:	
 12509                           
 12510                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12511  0E51  0020               	movlb	0	; select bank0
 12512  0E52  084D               	movf	DATAEE_WriteByte@bAdd,w
 12513  0E53  0030               	movlb	16	; select bank16
 12514  0E54  009A               	movwf	26	;volatile
 12515  0E55                     l5891:	
 12516                           
 12517                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12518  0E55  0020               	movlb	0	; select bank0
 12519  0E56  084F               	movf	DATAEE_WriteByte@bData,w
 12520  0E57  0030               	movlb	16	; select bank16
 12521  0E58  009C               	movwf	28	;volatile
 12522  0E59                     l5893:	
 12523                           
 12524                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12525  0E59  171E               	bsf	30,6	;volsfr
 12526  0E5A                     l5895:	
 12527                           
 12528                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12529  0E5A  151E               	bsf	30,2	;volsfr
 12530  0E5B                     l5897:	
 12531                           
 12532                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12533  0E5B  138B               	bcf	11,7	;volatile
 12534  0E5C                     l5899:	
 12535                           
 12536                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12537  0E5C  3055               	movlw	85
 12538  0E5D  009F               	movwf	31	;volsfr
 12539  0E5E                     l5901:	
 12540                           
 12541                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12542  0E5E  30AA               	movlw	170
 12543  0E5F  009F               	movwf	31	;volsfr
 12544  0E60                     l5903:	
 12545                           
 12546                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12547  0E60  149E               	bsf	30,1	;volsfr
 12548  0E61                     l957:	
 12549                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12550                           
 12551                           
 12552                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12553  0E61  189E               	btfsc	30,1	;volsfr
 12554  0E62  2E64               	goto	u3281
 12555  0E63  2E65               	goto	u3280
 12556  0E64                     u3281:	
 12557  0E64  2E61               	goto	l957
 12558  0E65                     u3280:	
 12559  0E65                     l959:	
 12560                           
 12561                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12562  0E65  111E               	bcf	30,2	;volsfr
 12563  0E66                     l5905:	
 12564                           
 12565                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12566  0E66  0020               	movlb	0	; select bank0
 12567  0E67  0C50               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12568  0E68  1C03               	skipc
 12569  0E69  138B               	bcf	11,7	;volatile
 12570  0E6A  1803               	skipnc
 12571  0E6B  178B               	bsf	11,7	;volatile
 12572  0E6C                     l960:	
 12573  0E6C  0008               	return
 12574  0E6D                     __end_of_DATAEE_WriteByte:	
 12575                           
 12576                           	psect	text13
 12577  0BBD                     __ptext13:	
 12578 ;; *************** function _i2c1_driver_open *****************
 12579 ;; Defined at:
 12580 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;		None
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;		None
 12585 ;; Return value:  Size  Location     Type
 12586 ;;		None               void
 12587 ;; Registers used:
 12588 ;;		wreg, status,2
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;Total ram usage:        0 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:    6
 12601 ;; This function calls:
 12602 ;;		Nothing
 12603 ;; This function is called by:
 12604 ;;		_main
 12605 ;;		_i2c_open
 12606 ;;		_I2C_Initialize
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           
 12610                           
 12611                           ;psect for function _i2c1_driver_open
 12612  0BBD                     _i2c1_driver_open:	
 12613  0BBD                     l6281:	
 12614                           ;incstack = 0
 12615                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12616                           
 12617  0BBD  0023               	movlb	3	; select bank3
 12618  0BBE  1A90               	btfsc	16,5	;volatile
 12619  0BBF  2BC1               	goto	u3561
 12620  0BC0  2BC2               	goto	u3560
 12621  0BC1                     u3561:	
 12622  0BC1  2BC8               	goto	l594
 12623  0BC2                     u3560:	
 12624  0BC2                     l6283:	
 12625  0BC2  018F               	clrf	15	;volatile
 12626  0BC3                     l6285:	
 12627  0BC3  3028               	movlw	40
 12628  0BC4  0090               	movwf	16	;volatile
 12629  0BC5                     l6287:	
 12630  0BC5  0191               	clrf	17	;volatile
 12631  0BC6  3003               	movlw	3
 12632  0BC7  008D               	movwf	13	;volatile
 12633  0BC8                     l594:	
 12634  0BC8  0008               	return
 12635  0BC9                     __end_of_i2c1_driver_open:	
 12636                           
 12637                           	psect	text14
 12638  041B                     __ptext14:	
 12639 ;; *************** function _config_routine *****************
 12640 ;; Defined at:
 12641 ;;		line 292 in file "main.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;		None
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;  select_mode     2   18[BANK0 ] unsigned int 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  1    wreg      void 
 12648 ;; Registers used:
 12649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;Total ram usage:        3 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    9
 12662 ;; This function calls:
 12663 ;;		_all_LED
 12664 ;;		_checkDebounceSW1
 12665 ;;		_checkDebounceSW2
 12666 ;;		_clock_subfields
 12667 ;;		_mod1_LED
 12668 ;;		_mod2_LED
 12669 ;;		_mod3_LED
 12670 ;;		_mod4_LED
 12671 ;;		_mode_select_LED
 12672 ;; This function is called by:
 12673 ;;		_main
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           
 12678                           ;psect for function _config_routine
 12679  041B                     _config_routine:	
 12680  041B                     l6439:	
 12681                           ;incstack = 0
 12682                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12683                           
 12684                           
 12685                           ;main.c: 294:     unsigned int select_mode =0;
 12686  041B  0020               	movlb	0	; select bank0
 12687  041C  01D6               	clrf	config_routine@select_mode
 12688  041D  01D7               	clrf	config_routine@select_mode+1
 12689  041E                     l6441:	
 12690                           
 12691                           ;main.c: 295:       last_ms = clkms;
 12692  041E  087D               	movf	_clkms,w	;volatile
 12693  041F  00D5               	movwf	??_config_routine
 12694  0420  0855               	movf	??_config_routine,w
 12695  0421  00BE               	movwf	_last_ms
 12696  0422                     l6443:	
 12697                           
 12698                           ;main.c: 296:       last_ms2 = clkms;
 12699  0422  087D               	movf	_clkms,w	;volatile
 12700  0423  00D5               	movwf	??_config_routine
 12701  0424  0855               	movf	??_config_routine,w
 12702  0425  00BD               	movwf	_last_ms2
 12703  0426                     l6445:	
 12704                           
 12705                           ;main.c: 300:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 12706  0426  0A5D               	incf	_mode_field_subfield,w
 12707  0427  1D03               	skipz
 12708  0428  2C2D               	goto	u3911
 12709  0429  0A5E               	incf	_mode_field_subfield+1,w
 12710  042A  1D03               	btfss	3,2
 12711  042B  2C2D               	goto	u3911
 12712  042C  2C2E               	goto	u3910
 12713  042D                     u3911:	
 12714  042D  2C37               	goto	l6451
 12715  042E                     u3910:	
 12716  042E                     l6447:	
 12717  042E  0856               	movf	config_routine@select_mode,w
 12718  042F  0457               	iorwf	config_routine@select_mode+1,w
 12719  0430  1D03               	btfss	3,2
 12720  0431  2C33               	goto	u3921
 12721  0432  2C34               	goto	u3920
 12722  0433                     u3921:	
 12723  0433  2C37               	goto	l6451
 12724  0434                     u3920:	
 12725  0434                     l6449:	
 12726                           
 12727                           ;main.c: 301:                         all_LED();}
 12728  0434  3185  250B  3184   	fcall	_all_LED
 12729  0437                     l6451:	
 12730                           
 12731                           ;main.c: 303:                 if(!PORTBbits.RB4){
 12732  0437  0020               	movlb	0	; select bank0
 12733  0438  1A0D               	btfsc	13,4	;volatile
 12734  0439  2C3B               	goto	u3931
 12735  043A  2C3C               	goto	u3930
 12736  043B                     u3931:	
 12737  043B  2C77               	goto	l6473
 12738  043C                     u3930:	
 12739  043C                     l6453:	
 12740                           
 12741                           ;main.c: 304:                     if(checkDebounceSW1()){
 12742  043C  3185  25C0  3184   	fcall	_checkDebounceSW1
 12743  043F  3A00               	xorlw	0
 12744  0440  1903               	skipnz
 12745  0441  2C43               	goto	u3941
 12746  0442  2C44               	goto	u3940
 12747  0443                     u3941:	
 12748  0443  2C72               	goto	l6471
 12749  0444                     u3940:	
 12750  0444                     l6455:	
 12751                           
 12752                           ;main.c: 306:                             select_mode +=1;
 12753  0444  3001               	movlw	1
 12754  0445  0020               	movlb	0	; select bank0
 12755  0446  07D6               	addwf	config_routine@select_mode,f
 12756  0447  3000               	movlw	0
 12757  0448  3DD7               	addwfc	config_routine@select_mode+1,f
 12758                           
 12759                           ;main.c: 308:                         switch(select_mode){
 12760  0449  2C5F               	goto	l6469
 12761  044A                     l6457:	
 12762  044A  318B  2390  3184   	fcall	_mod1_LED
 12763  044D  2C72               	goto	l6471
 12764  044E                     l6459:	
 12765  044E  318B  2386  3184   	fcall	_mod2_LED
 12766  0451  2C72               	goto	l6471
 12767  0452                     l6461:	
 12768  0452  318B  239B  3184   	fcall	_mod3_LED
 12769  0455  2C72               	goto	l6471
 12770  0456                     l6463:	
 12771  0456  318B  23A6  3184   	fcall	_mod4_LED
 12772  0459  2C72               	goto	l6471
 12773  045A                     l6465:	
 12774  045A  01D6               	clrf	config_routine@select_mode
 12775  045B  01D7               	clrf	config_routine@select_mode+1
 12776  045C  01B9               	clrf	_config_mode	;volatile
 12777  045D  01B8               	clrf	_alarm	;volatile
 12778                           
 12779                           ;main.c: 314:                             break;
 12780  045E  2C72               	goto	l6471
 12781  045F                     l6469:	
 12782                           
 12783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12784                           ; Switch size 1, requested type "simple"
 12785                           ; Number of cases is 1, Range of values is 0 to 0
 12786                           ; switch strategies available:
 12787                           ; Name         Instructions Cycles
 12788                           ; simple_byte            4     3 (average)
 12789                           ; direct_byte            8     6 (fixed)
 12790                           ; jumptable            260     6 (fixed)
 12791                           ;	Chosen strategy is simple_byte
 12792  045F  0857               	movf	config_routine@select_mode+1,w
 12793  0460  3A00               	xorlw	0	; case 0
 12794  0461  1903               	skipnz
 12795  0462  2C64               	goto	l6927
 12796  0463  2C5A               	goto	l6465
 12797  0464                     l6927:	
 12798                           
 12799                           ; Switch size 1, requested type "simple"
 12800                           ; Number of cases is 4, Range of values is 1 to 4
 12801                           ; switch strategies available:
 12802                           ; Name         Instructions Cycles
 12803                           ; simple_byte           13     7 (average)
 12804                           ; direct_byte           17     9 (fixed)
 12805                           ; jumptable            263     9 (fixed)
 12806                           ;	Chosen strategy is simple_byte
 12807  0464  0856               	movf	config_routine@select_mode,w
 12808  0465  3A01               	xorlw	1	; case 1
 12809  0466  1903               	skipnz
 12810  0467  2C4A               	goto	l6457
 12811  0468  3A03               	xorlw	3	; case 2
 12812  0469  1903               	skipnz
 12813  046A  2C4E               	goto	l6459
 12814  046B  3A01               	xorlw	1	; case 3
 12815  046C  1903               	skipnz
 12816  046D  2C52               	goto	l6461
 12817  046E  3A07               	xorlw	7	; case 4
 12818  046F  1903               	skipnz
 12819  0470  2C56               	goto	l6463
 12820  0471  2C5A               	goto	l6465
 12821  0472                     l6471:	
 12822                           
 12823                           ;main.c: 319:                         last_ms = clkms;
 12824  0472  087D               	movf	_clkms,w	;volatile
 12825  0473  0020               	movlb	0	; select bank0
 12826  0474  00D5               	movwf	??_config_routine
 12827  0475  0855               	movf	??_config_routine,w
 12828  0476  00BE               	movwf	_last_ms
 12829  0477                     l6473:	
 12830                           
 12831                           ;main.c: 323:                 if(!PORTCbits.RC5){
 12832  0477  1A8E               	btfsc	14,5	;volatile
 12833  0478  2C7A               	goto	u3951
 12834  0479  2C7B               	goto	u3950
 12835  047A                     u3951:	
 12836  047A  2C95               	goto	l6485
 12837  047B                     u3950:	
 12838  047B                     l6475:	
 12839                           
 12840                           ;main.c: 324:                     if(checkDebounceSW2()){
 12841  047B  3186  26C8  3184   	fcall	_checkDebounceSW2
 12842  047E  3A00               	xorlw	0
 12843  047F  1903               	skipnz
 12844  0480  2C82               	goto	u3961
 12845  0481  2C83               	goto	u3960
 12846  0482                     u3961:	
 12847  0482  2C95               	goto	l6485
 12848  0483                     u3960:	
 12849  0483                     l6477:	
 12850                           
 12851                           ;main.c: 325:                         mode_field_subfield[0] = select_mode;
 12852  0483  0020               	movlb	0	; select bank0
 12853  0484  0857               	movf	config_routine@select_mode+1,w
 12854  0485  00DE               	movwf	_mode_field_subfield+1
 12855  0486  0856               	movf	config_routine@select_mode,w
 12856  0487  00DD               	movwf	_mode_field_subfield
 12857  0488                     l6479:	
 12858                           
 12859                           ;main.c: 326:                         mode_select_LED();
 12860  0488  318E  2609  3184   	fcall	_mode_select_LED
 12861  048B                     l6481:	
 12862                           
 12863                           ;main.c: 328:                         if(select_mode== 1){
 12864  048B  0020               	movlb	0	; select bank0
 12865  048C  0356               	decf	config_routine@select_mode,w
 12866  048D  0457               	iorwf	config_routine@select_mode+1,w
 12867  048E  1D03               	btfss	3,2
 12868  048F  2C91               	goto	u3971
 12869  0490  2C92               	goto	u3970
 12870  0491                     u3971:	
 12871  0491  2C95               	goto	l6485
 12872  0492                     u3970:	
 12873  0492                     l6483:	
 12874                           
 12875                           ;main.c: 329:                             clock_subfields();
 12876  0492  3184  24A8  3184   	fcall	_clock_subfields
 12877  0495                     l6485:	
 12878                           
 12879                           ;main.c: 335:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 12880  0495  30A6               	movlw	166
 12881  0496                     u4317:	
 12882  0496  0B89               	decfsz	9,f
 12883  0497  2C96               	goto	u4317
 12884  0498  3200               	nop2
 12885  0499                     l6487:	
 12886                           
 12887                           ;main.c: 337:             }while(config_mode == 1);
 12888  0499  0020               	movlb	0	; select bank0
 12889  049A  0339               	decf	_config_mode,w	;volatile
 12890  049B  1903               	btfsc	3,2
 12891  049C  2C9E               	goto	u3981
 12892  049D  2C9F               	goto	u3980
 12893  049E                     u3981:	
 12894  049E  2C26               	goto	l6445
 12895  049F                     u3980:	
 12896  049F                     l6489:	
 12897                           
 12898                           ;main.c: 339:     mode_field_subfield[0] = -1;
 12899  049F  30FF               	movlw	255
 12900  04A0  00DD               	movwf	_mode_field_subfield
 12901  04A1  30FF               	movlw	255
 12902  04A2  00DE               	movwf	_mode_field_subfield+1
 12903                           
 12904                           ;main.c: 340:     mode_field_subfield[1] = -1;
 12905  04A3  30FF               	movlw	255
 12906  04A4  00DF               	movwf	_mode_field_subfield+2
 12907  04A5  30FF               	movlw	255
 12908  04A6  00E0               	movwf	_mode_field_subfield+3
 12909  04A7                     l1267:	
 12910  04A7  0008               	return
 12911  04A8                     __end_of_config_routine:	
 12912                           
 12913                           	psect	text15
 12914  0E09                     __ptext15:	
 12915 ;; *************** function _mode_select_LED *****************
 12916 ;; Defined at:
 12917 ;;		line 569 in file "main.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;		None
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1    wreg      void 
 12924 ;; Registers used:
 12925 ;;		wreg, status,2, status,0, pclath, cstack
 12926 ;; Tracked objects:
 12927 ;;		On entry : 0/0
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;Total ram usage:        1 bytes
 12936 ;; Hardware stack levels used:    1
 12937 ;; Hardware stack levels required when called:    7
 12938 ;; This function calls:
 12939 ;;		_PWM6_LoadDutyValue
 12940 ;; This function is called by:
 12941 ;;		_config_routine
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           
 12946                           ;psect for function _mode_select_LED
 12947  0E09                     _mode_select_LED:	
 12948  0E09                     l6135:	
 12949                           ;incstack = 0
 12950                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 12951                           
 12952                           
 12953                           ;main.c: 572:             PWM6_LoadDutyValue(1023);
 12954  0E09  30FF               	movlw	255
 12955  0E0A  0020               	movlb	0	; select bank0
 12956  0E0B  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12957  0E0C  3003               	movlw	3
 12958  0E0D  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12959  0E0E  318D  2546  318E   	fcall	_PWM6_LoadDutyValue
 12960  0E11                     l6137:	
 12961  0E11  0020               	movlb	0	; select bank0
 12962  0E12  1616               	bsf	22,4	;volatile
 12963  0E13                     l6139:	
 12964                           
 12965                           ;main.c: 574:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12966  0E13  30A3               	movlw	163
 12967  0E14  0020               	movlb	0	; select bank0
 12968  0E15  00CB               	movwf	??_mode_select_LED
 12969  0E16  3055               	movlw	85
 12970  0E17                     u4327:	
 12971  0E17  0B89               	decfsz	9,f
 12972  0E18  2E17               	goto	u4327
 12973  0E19  0BCB               	decfsz	??_mode_select_LED,f
 12974  0E1A  2E17               	goto	u4327
 12975  0E1B                     l6141:	
 12976  0E1B  0020               	movlb	0	; select bank0
 12977  0E1C  1696               	bsf	22,5	;volatile
 12978  0E1D                     l6143:	
 12979                           
 12980                           ;main.c: 576:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12981  0E1D  30A3               	movlw	163
 12982  0E1E  0020               	movlb	0	; select bank0
 12983  0E1F  00CB               	movwf	??_mode_select_LED
 12984  0E20  3055               	movlw	85
 12985  0E21                     u4337:	
 12986  0E21  0B89               	decfsz	9,f
 12987  0E22  2E21               	goto	u4337
 12988  0E23  0BCB               	decfsz	??_mode_select_LED,f
 12989  0E24  2E21               	goto	u4337
 12990  0E25                     l6145:	
 12991  0E25  0020               	movlb	0	; select bank0
 12992  0E26  1216               	bcf	22,4	;volatile
 12993  0E27                     l6147:	
 12994  0E27  1296               	bcf	22,5	;volatile
 12995  0E28                     l1375:	
 12996  0E28  0008               	return
 12997  0E29                     __end_of_mode_select_LED:	
 12998                           
 12999                           	psect	text16
 13000  04A8                     __ptext16:	
 13001 ;; *************** function _clock_subfields *****************
 13002 ;; Defined at:
 13003 ;;		line 367 in file "main.c"
 13004 ;; Parameters:    Size  Location     Type
 13005 ;;		None
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  subfield        2   15[BANK0 ] unsigned int 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  1    wreg      void 
 13010 ;; Registers used:
 13011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;Total ram usage:        3 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    8
 13024 ;; This function calls:
 13025 ;;		_checkDebounceSW1
 13026 ;;		_checkDebounceSW2
 13027 ;;		_increment_subfield
 13028 ;;		_mod1_LED
 13029 ;;		_mod2_LED
 13030 ;;		_mod3_LED
 13031 ;;		_mod4_LED
 13032 ;; This function is called by:
 13033 ;;		_config_routine
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           
 13038                           ;psect for function _clock_subfields
 13039  04A8                     _clock_subfields:	
 13040  04A8                     l6149:	
 13041                           ;incstack = 0
 13042                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13043                           
 13044                           
 13045                           ;main.c: 369:     unsigned int subfield = 1;
 13046  04A8  3001               	movlw	1
 13047  04A9  0020               	movlb	0	; select bank0
 13048  04AA  00D3               	movwf	clock_subfields@subfield
 13049  04AB  3000               	movlw	0
 13050  04AC  00D4               	movwf	clock_subfields@subfield+1
 13051  04AD                     l6151:	
 13052                           
 13053                           ;main.c: 373:                 if(!PORTBbits.RB4){
 13054  04AD  1A0D               	btfsc	13,4	;volatile
 13055  04AE  2CB0               	goto	u3351
 13056  04AF  2CB1               	goto	u3350
 13057  04B0                     u3351:	
 13058  04B0  2CD4               	goto	l6167
 13059  04B1                     u3350:	
 13060  04B1                     l6153:	
 13061                           
 13062                           ;main.c: 374:                     if(checkDebounceSW1()){
 13063  04B1  3185  25C0  3184   	fcall	_checkDebounceSW1
 13064  04B4  3A00               	xorlw	0
 13065  04B5  1903               	skipnz
 13066  04B6  2CB8               	goto	u3361
 13067  04B7  2CB9               	goto	u3360
 13068  04B8                     u3361:	
 13069  04B8  2CBE               	goto	l1282
 13070  04B9                     u3360:	
 13071  04B9                     l6155:	
 13072                           
 13073                           ;main.c: 375:                             subfield +=1;
 13074  04B9  3001               	movlw	1
 13075  04BA  0020               	movlb	0	; select bank0
 13076  04BB  07D3               	addwf	clock_subfields@subfield,f
 13077  04BC  3000               	movlw	0
 13078  04BD  3DD4               	addwfc	clock_subfields@subfield+1,f
 13079  04BE                     l1282:	
 13080                           ;main.c: 376:                         }
 13081                           
 13082                           
 13083                           ;main.c: 377:                         last_ms = clkms;
 13084  04BE  087D               	movf	_clkms,w	;volatile
 13085  04BF  0020               	movlb	0	; select bank0
 13086  04C0  00D2               	movwf	??_clock_subfields
 13087  04C1  0852               	movf	??_clock_subfields,w
 13088  04C2  00BE               	movwf	_last_ms
 13089  04C3  2CD4               	goto	l6167
 13090  04C4                     l6157:	
 13091  04C4  318B  2390  3184   	fcall	_mod1_LED
 13092  04C7  2CE7               	goto	l1285
 13093  04C8                     l6159:	
 13094  04C8  318B  2386  3184   	fcall	_mod2_LED
 13095  04CB  2CE7               	goto	l1285
 13096  04CC                     l6161:	
 13097  04CC  318B  239B  3184   	fcall	_mod3_LED
 13098  04CF  2CE7               	goto	l1285
 13099  04D0                     l6163:	
 13100  04D0  318B  23A6  3184   	fcall	_mod4_LED
 13101  04D3  2CE7               	goto	l1285
 13102  04D4                     l6167:	
 13103                           
 13104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13105                           ; Switch size 1, requested type "simple"
 13106                           ; Number of cases is 1, Range of values is 0 to 0
 13107                           ; switch strategies available:
 13108                           ; Name         Instructions Cycles
 13109                           ; simple_byte            4     3 (average)
 13110                           ; direct_byte            8     6 (fixed)
 13111                           ; jumptable            260     6 (fixed)
 13112                           ;	Chosen strategy is simple_byte
 13113  04D4  0854               	movf	clock_subfields@subfield+1,w
 13114  04D5  3A00               	xorlw	0	; case 0
 13115  04D6  1903               	skipnz
 13116  04D7  2CD9               	goto	l6929
 13117  04D8  2CE7               	goto	l1285
 13118  04D9                     l6929:	
 13119                           
 13120                           ; Switch size 1, requested type "simple"
 13121                           ; Number of cases is 4, Range of values is 1 to 4
 13122                           ; switch strategies available:
 13123                           ; Name         Instructions Cycles
 13124                           ; simple_byte           13     7 (average)
 13125                           ; direct_byte           17     9 (fixed)
 13126                           ; jumptable            263     9 (fixed)
 13127                           ;	Chosen strategy is simple_byte
 13128  04D9  0853               	movf	clock_subfields@subfield,w
 13129  04DA  3A01               	xorlw	1	; case 1
 13130  04DB  1903               	skipnz
 13131  04DC  2CC4               	goto	l6157
 13132  04DD  3A03               	xorlw	3	; case 2
 13133  04DE  1903               	skipnz
 13134  04DF  2CC8               	goto	l6159
 13135  04E0  3A01               	xorlw	1	; case 3
 13136  04E1  1903               	skipnz
 13137  04E2  2CCC               	goto	l6161
 13138  04E3  3A07               	xorlw	7	; case 4
 13139  04E4  1903               	skipnz
 13140  04E5  2CD0               	goto	l6163
 13141  04E6  2CE7               	goto	l1285
 13142  04E7                     l1285:	
 13143                           
 13144                           ;main.c: 391:                 if(!PORTCbits.RC5){
 13145  04E7  0020               	movlb	0	; select bank0
 13146  04E8  1A8E               	btfsc	14,5	;volatile
 13147  04E9  2CEB               	goto	u3371
 13148  04EA  2CEC               	goto	u3370
 13149  04EB                     u3371:	
 13150  04EB  2CFC               	goto	l6175
 13151  04EC                     u3370:	
 13152  04EC                     l6169:	
 13153                           
 13154                           ;main.c: 392:                     if(checkDebounceSW2()){
 13155  04EC  3186  26C8  3184   	fcall	_checkDebounceSW2
 13156  04EF  3A00               	xorlw	0
 13157  04F0  1903               	skipnz
 13158  04F1  2CF3               	goto	u3381
 13159  04F2  2CF4               	goto	u3380
 13160  04F3                     u3381:	
 13161  04F3  2CFC               	goto	l6175
 13162  04F4                     u3380:	
 13163  04F4                     l6171:	
 13164                           
 13165                           ;main.c: 394:                         mode_field_subfield[1] = subfield;
 13166  04F4  0020               	movlb	0	; select bank0
 13167  04F5  0854               	movf	clock_subfields@subfield+1,w
 13168  04F6  00E0               	movwf	_mode_field_subfield+3
 13169  04F7  0853               	movf	clock_subfields@subfield,w
 13170  04F8  00DF               	movwf	_mode_field_subfield+2
 13171  04F9                     l6173:	
 13172                           
 13173                           ;main.c: 395:                         increment_subfield();
 13174  04F9  318F  27C0  3184   	fcall	_increment_subfield
 13175  04FC                     l6175:	
 13176                           
 13177                           ;main.c: 399:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 13178  04FC  30A6               	movlw	166
 13179  04FD                     u4347:	
 13180  04FD  0B89               	decfsz	9,f
 13181  04FE  2CFD               	goto	u4347
 13182  04FF  3200               	nop2
 13183  0500                     l6177:	
 13184                           
 13185                           ;main.c: 401:             }while(subfield <= 4 );
 13186  0500  3000               	movlw	0
 13187  0501  0020               	movlb	0	; select bank0
 13188  0502  0254               	subwf	clock_subfields@subfield+1,w
 13189  0503  3005               	movlw	5
 13190  0504  1903               	skipnz
 13191  0505  0253               	subwf	clock_subfields@subfield,w
 13192  0506  1C03               	skipc
 13193  0507  2D09               	goto	u3391
 13194  0508  2D0A               	goto	u3390
 13195  0509                     u3391:	
 13196  0509  2CAD               	goto	l6151
 13197  050A                     u3390:	
 13198  050A                     l1293:	
 13199  050A  0008               	return
 13200  050B                     __end_of_clock_subfields:	
 13201                           
 13202                           	psect	text17
 13203  0BA6                     __ptext17:	
 13204 ;; *************** function _mod4_LED *****************
 13205 ;; Defined at:
 13206 ;;		line 520 in file "main.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      void 
 13213 ;; Registers used:
 13214 ;;		wreg, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:    7
 13227 ;; This function calls:
 13228 ;;		_PWM6_LoadDutyValue
 13229 ;; This function is called by:
 13230 ;;		_config_routine
 13231 ;;		_clock_subfields
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function _mod4_LED
 13237  0BA6                     _mod4_LED:	
 13238  0BA6                     l5927:	
 13239                           ;incstack = 0
 13240                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13241                           
 13242                           
 13243                           ;main.c: 521:     LATA = 0;
 13244  0BA6  0020               	movlb	0	; select bank0
 13245  0BA7  0196               	clrf	22	;volatile
 13246  0BA8                     l5929:	
 13247                           
 13248                           ;main.c: 522:     PWM6_LoadDutyValue(0);
 13249  0BA8  3000               	movlw	0
 13250  0BA9  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13251  0BAA  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13252  0BAB  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13253  0BAE                     l5931:	
 13254  0BAE  0020               	movlb	0	; select bank0
 13255  0BAF  1616               	bsf	22,4	;volatile
 13256  0BB0                     l1350:	
 13257  0BB0  0008               	return
 13258  0BB1                     __end_of_mod4_LED:	
 13259                           
 13260                           	psect	text18
 13261  0B9B                     __ptext18:	
 13262 ;; *************** function _mod3_LED *****************
 13263 ;; Defined at:
 13264 ;;		line 513 in file "main.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg, status,2, status,0, pclath, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    7
 13285 ;; This function calls:
 13286 ;;		_PWM6_LoadDutyValue
 13287 ;; This function is called by:
 13288 ;;		_config_routine
 13289 ;;		_clock_subfields
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           
 13294                           ;psect for function _mod3_LED
 13295  0B9B                     _mod3_LED:	
 13296  0B9B                     l5921:	
 13297                           ;incstack = 0
 13298                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13299                           
 13300                           
 13301                           ;main.c: 514:     LATA = 0;
 13302  0B9B  0020               	movlb	0	; select bank0
 13303  0B9C  0196               	clrf	22	;volatile
 13304  0B9D                     l5923:	
 13305                           
 13306                           ;main.c: 515:     PWM6_LoadDutyValue(0);
 13307  0B9D  3000               	movlw	0
 13308  0B9E  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13309  0B9F  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13310  0BA0  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13311  0BA3                     l5925:	
 13312  0BA3  0020               	movlb	0	; select bank0
 13313  0BA4  1696               	bsf	22,5	;volatile
 13314  0BA5                     l1345:	
 13315  0BA5  0008               	return
 13316  0BA6                     __end_of_mod3_LED:	
 13317                           
 13318                           	psect	text19
 13319  0B86                     __ptext19:	
 13320 ;; *************** function _mod2_LED *****************
 13321 ;; Defined at:
 13322 ;;		line 508 in file "main.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;		None
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;		None
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      void 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0, pclath, cstack
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;Total ram usage:        0 bytes
 13341 ;; Hardware stack levels used:    1
 13342 ;; Hardware stack levels required when called:    7
 13343 ;; This function calls:
 13344 ;;		_PWM6_LoadDutyValue
 13345 ;; This function is called by:
 13346 ;;		_config_routine
 13347 ;;		_clock_subfields
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           
 13352                           ;psect for function _mod2_LED
 13353  0B86                     _mod2_LED:	
 13354  0B86                     l5917:	
 13355                           ;incstack = 0
 13356                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13357                           
 13358                           
 13359                           ;main.c: 509:     LATA = 0;
 13360  0B86  0020               	movlb	0	; select bank0
 13361  0B87  0196               	clrf	22	;volatile
 13362  0B88                     l5919:	
 13363                           
 13364                           ;main.c: 510:     PWM6_LoadDutyValue(1023);
 13365  0B88  30FF               	movlw	255
 13366  0B89  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13367  0B8A  3003               	movlw	3
 13368  0B8B  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13369  0B8C  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13370  0B8F                     l1340:	
 13371  0B8F  0008               	return
 13372  0B90                     __end_of_mod2_LED:	
 13373                           
 13374                           	psect	text20
 13375  0B90                     __ptext20:	
 13376 ;; *************** function _mod1_LED *****************
 13377 ;; Defined at:
 13378 ;;		line 501 in file "main.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;		None
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;		None
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, status,2, status,0, pclath, cstack
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;Total ram usage:        0 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    7
 13399 ;; This function calls:
 13400 ;;		_PWM6_LoadDutyValue
 13401 ;; This function is called by:
 13402 ;;		_config_routine
 13403 ;;		_clock_subfields
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           
 13408                           ;psect for function _mod1_LED
 13409  0B90                     _mod1_LED:	
 13410  0B90                     l5911:	
 13411                           ;incstack = 0
 13412                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13413                           
 13414                           
 13415                           ;main.c: 502:     LATA = 0;
 13416  0B90  0020               	movlb	0	; select bank0
 13417  0B91  0196               	clrf	22	;volatile
 13418  0B92                     l5913:	
 13419                           
 13420                           ;main.c: 503:     PWM6_LoadDutyValue(0);
 13421  0B92  3000               	movlw	0
 13422  0B93  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13423  0B94  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13424  0B95  318D  2546  318B   	fcall	_PWM6_LoadDutyValue
 13425  0B98                     l5915:	
 13426  0B98  0020               	movlb	0	; select bank0
 13427  0B99  1796               	bsf	22,7	;volatile
 13428  0B9A                     l1337:	
 13429  0B9A  0008               	return
 13430  0B9B                     __end_of_mod1_LED:	
 13431                           
 13432                           	psect	text21
 13433  0FC0                     __ptext21:	
 13434 ;; *************** function _increment_subfield *****************
 13435 ;; Defined at:
 13436 ;;		line 343 in file "main.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;		None
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  exit            2   12[BANK0 ] int 
 13441 ;;  plus            2   10[BANK0 ] int 
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		wreg, status,2, status,0, pclath, cstack
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;Total ram usage:        4 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:    7
 13458 ;; This function calls:
 13459 ;;		_PWM6_LoadDutyValue
 13460 ;;		_checkDebounceSW1
 13461 ;;		_checkDebounceSW2
 13462 ;; This function is called by:
 13463 ;;		_clock_subfields
 13464 ;; This function uses a non-reentrant model
 13465 ;;
 13466                           
 13467                           
 13468                           ;psect for function _increment_subfield
 13469  0FC0                     _increment_subfield:	
 13470  0FC0                     l5933:	
 13471                           ;incstack = 0
 13472                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 13473                           
 13474                           
 13475                           ;main.c: 345:     int plus = 10;
 13476  0FC0  300A               	movlw	10
 13477  0FC1  0020               	movlb	0	; select bank0
 13478  0FC2  00CE               	movwf	increment_subfield@plus
 13479  0FC3  3000               	movlw	0
 13480  0FC4  00CF               	movwf	increment_subfield@plus+1
 13481  0FC5                     l5935:	
 13482                           
 13483                           ;main.c: 346:     int exit = 0;
 13484  0FC5  01D0               	clrf	increment_subfield@exit
 13485  0FC6  01D1               	clrf	increment_subfield@exit+1
 13486  0FC7                     l5937:	
 13487                           
 13488                           ;main.c: 348:     PWM6_LoadDutyValue(0);
 13489  0FC7  3000               	movlw	0
 13490  0FC8  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13491  0FC9  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13492  0FCA  318D  2546  318F   	fcall	_PWM6_LoadDutyValue
 13493                           
 13494                           ;main.c: 350:            while(exit == 0) {
 13495  0FCD  2FF8               	goto	l5951
 13496  0FCE                     l1271:	
 13497                           
 13498                           ;main.c: 352:                if(!PORTCbits.RC5){
 13499  0FCE  1A8E               	btfsc	14,5	;volatile
 13500  0FCF  2FD1               	goto	u3291
 13501  0FD0  2FD2               	goto	u3290
 13502  0FD1                     u3291:	
 13503  0FD1  2FE6               	goto	l5945
 13504  0FD2                     u3290:	
 13505  0FD2                     l5939:	
 13506                           
 13507                           ;main.c: 353:                     if(checkDebounceSW2()){
 13508  0FD2  3186  26C8  318F   	fcall	_checkDebounceSW2
 13509  0FD5  3A00               	xorlw	0
 13510  0FD6  1903               	skipnz
 13511  0FD7  2FD9               	goto	u3301
 13512  0FD8  2FDA               	goto	u3300
 13513  0FD9                     u3301:	
 13514  0FD9  2FE6               	goto	l5945
 13515  0FDA                     u3300:	
 13516  0FDA                     l5941:	
 13517                           
 13518                           ;main.c: 354:                          plus += 100;
 13519  0FDA  3064               	movlw	100
 13520  0FDB  0020               	movlb	0	; select bank0
 13521  0FDC  07CE               	addwf	increment_subfield@plus,f
 13522  0FDD  3000               	movlw	0
 13523  0FDE  3DCF               	addwfc	increment_subfield@plus+1,f
 13524  0FDF                     l5943:	
 13525                           
 13526                           ;main.c: 355:                          PWM6_LoadDutyValue(plus);
 13527  0FDF  084F               	movf	increment_subfield@plus+1,w
 13528  0FE0  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13529  0FE1  084E               	movf	increment_subfield@plus,w
 13530  0FE2  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13531  0FE3  318D  2546  318F   	fcall	_PWM6_LoadDutyValue
 13532  0FE6                     l5945:	
 13533                           
 13534                           ;main.c: 358:                if(!PORTBbits.RB4){
 13535  0FE6  0020               	movlb	0	; select bank0
 13536  0FE7  1A0D               	btfsc	13,4	;volatile
 13537  0FE8  2FEA               	goto	u3311
 13538  0FE9  2FEB               	goto	u3310
 13539  0FEA                     u3311:	
 13540  0FEA  2FF8               	goto	l5951
 13541  0FEB                     u3310:	
 13542  0FEB                     l5947:	
 13543                           
 13544                           ;main.c: 359:                     if(checkDebounceSW1()){
 13545  0FEB  3185  25C0  318F   	fcall	_checkDebounceSW1
 13546  0FEE  3A00               	xorlw	0
 13547  0FEF  1903               	skipnz
 13548  0FF0  2FF2               	goto	u3321
 13549  0FF1  2FF3               	goto	u3320
 13550  0FF2                     u3321:	
 13551  0FF2  2FF8               	goto	l5951
 13552  0FF3                     u3320:	
 13553  0FF3                     l5949:	
 13554                           
 13555                           ;main.c: 360:                         exit = 1;
 13556  0FF3  3001               	movlw	1
 13557  0FF4  0020               	movlb	0	; select bank0
 13558  0FF5  00D0               	movwf	increment_subfield@exit
 13559  0FF6  3000               	movlw	0
 13560  0FF7  00D1               	movwf	increment_subfield@exit+1
 13561  0FF8                     l5951:	
 13562                           
 13563                           ;main.c: 350:            while(exit == 0) {
 13564  0FF8  0020               	movlb	0	; select bank0
 13565  0FF9  0850               	movf	increment_subfield@exit,w
 13566  0FFA  0451               	iorwf	increment_subfield@exit+1,w
 13567  0FFB  1903               	btfsc	3,2
 13568  0FFC  2FFE               	goto	u3331
 13569  0FFD  2FFF               	goto	u3330
 13570  0FFE                     u3331:	
 13571  0FFE  2FCE               	goto	l1271
 13572  0FFF                     u3330:	
 13573  0FFF                     l1277:	
 13574  0FFF  0008               	return
 13575  1000                     __end_of_increment_subfield:	
 13576                           
 13577                           	psect	text22
 13578  06C8                     __ptext22:	
 13579 ;; *************** function _checkDebounceSW2 *****************
 13580 ;; Defined at:
 13581 ;;		line 549 in file "main.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;		None
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;		None
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      unsigned char 
 13588 ;; Registers used:
 13589 ;;		wreg, status,2, status,0
 13590 ;; Tracked objects:
 13591 ;;		On entry : 0/0
 13592 ;;		On exit  : 0/0
 13593 ;;		Unchanged: 0/0
 13594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;Total ram usage:        7 bytes
 13600 ;; Hardware stack levels used:    1
 13601 ;; Hardware stack levels required when called:    6
 13602 ;; This function calls:
 13603 ;;		Nothing
 13604 ;; This function is called by:
 13605 ;;		_config_routine
 13606 ;;		_increment_subfield
 13607 ;;		_clock_subfields
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           
 13612                           ;psect for function _checkDebounceSW2
 13613  06C8                     _checkDebounceSW2:	
 13614  06C8                     l5863:	
 13615                           ;incstack = 0
 13616                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 13617                           
 13618                           
 13619                           ;main.c: 552:     if(clkms - last_ms2 < 0){
 13620  06C8  087D               	movf	_clkms,w	;volatile
 13621  06C9  0020               	movlb	0	; select bank0
 13622  06CA  00C7               	movwf	??_checkDebounceSW2
 13623  06CB  01C8               	clrf	??_checkDebounceSW2+1
 13624  06CC  0848               	movf	??_checkDebounceSW2+1,w
 13625  06CD  00CA               	movwf	??_checkDebounceSW2+3
 13626  06CE  083D               	movf	_last_ms2,w
 13627  06CF  0247               	subwf	??_checkDebounceSW2,w
 13628  06D0  00C9               	movwf	??_checkDebounceSW2+2
 13629  06D1  1C03               	skipc
 13630  06D2  03CA               	decf	??_checkDebounceSW2+3,f
 13631  06D3  1FCA               	btfss	??_checkDebounceSW2+3,7
 13632  06D4  2ED6               	goto	u3251
 13633  06D5  2ED7               	goto	u3250
 13634  06D6                     u3251:	
 13635  06D6  2EFB               	goto	l5871
 13636  06D7                     u3250:	
 13637  06D7                     l5865:	
 13638                           
 13639                           ;main.c: 554:         if ((200 - last_ms2)+ clkms > 2 ){
 13640  06D7  087D               	movf	_clkms,w	;volatile
 13641  06D8  00C7               	movwf	??_checkDebounceSW2
 13642  06D9  01C8               	clrf	??_checkDebounceSW2+1
 13643  06DA  0848               	movf	??_checkDebounceSW2+1,w
 13644  06DB  00CA               	movwf	??_checkDebounceSW2+3
 13645  06DC  083D               	movf	_last_ms2,w
 13646  06DD  0247               	subwf	??_checkDebounceSW2,w
 13647  06DE  00C9               	movwf	??_checkDebounceSW2+2
 13648  06DF  1C03               	skipc
 13649  06E0  03CA               	decf	??_checkDebounceSW2+3,f
 13650  06E1  0849               	movf	??_checkDebounceSW2+2,w
 13651  06E2  3EC8               	addlw	200
 13652  06E3  00CB               	movwf	??_checkDebounceSW2+4
 13653  06E4  3000               	movlw	0
 13654  06E5  3D4A               	addwfc	??_checkDebounceSW2+3,w
 13655  06E6  00CC               	movwf	??_checkDebounceSW2+5
 13656  06E7  084C               	movf	??_checkDebounceSW2+5,w
 13657  06E8  3A80               	xorlw	128
 13658  06E9  00CD               	movwf	??_checkDebounceSW2+6
 13659  06EA  3080               	movlw	128
 13660  06EB  024D               	subwf	??_checkDebounceSW2+6,w
 13661  06EC  1D03               	skipz
 13662  06ED  2EF0               	goto	u3265
 13663  06EE  3003               	movlw	3
 13664  06EF  024B               	subwf	??_checkDebounceSW2+4,w
 13665  06F0                     u3265:	
 13666  06F0  1C03               	skipc
 13667  06F1  2EF3               	goto	u3261
 13668  06F2  2EF4               	goto	u3260
 13669  06F3                     u3261:	
 13670  06F3  2EFB               	goto	l5871
 13671  06F4                     u3260:	
 13672  06F4                     l5867:	
 13673                           
 13674                           ;main.c: 555:             last_ms2 = clkms;
 13675  06F4  087D               	movf	_clkms,w	;volatile
 13676  06F5  0020               	movlb	0	; select bank0
 13677  06F6  00C7               	movwf	??_checkDebounceSW2
 13678  06F7  0847               	movf	??_checkDebounceSW2,w
 13679  06F8  00BD               	movwf	_last_ms2
 13680                           
 13681                           ;main.c: 556:             return 1;
 13682  06F9  3001               	movlw	1
 13683  06FA  2F14               	goto	l1362
 13684  06FB                     l5871:	
 13685                           
 13686                           ;main.c: 560:     if(clkms - last_ms2 < 2){
 13687  06FB  087D               	movf	_clkms,w	;volatile
 13688  06FC  0020               	movlb	0	; select bank0
 13689  06FD  00C7               	movwf	??_checkDebounceSW2
 13690  06FE  01C8               	clrf	??_checkDebounceSW2+1
 13691  06FF  0848               	movf	??_checkDebounceSW2+1,w
 13692  0700  00CA               	movwf	??_checkDebounceSW2+3
 13693  0701  083D               	movf	_last_ms2,w
 13694  0702  0247               	subwf	??_checkDebounceSW2,w
 13695  0703  00C9               	movwf	??_checkDebounceSW2+2
 13696  0704  1C03               	skipc
 13697  0705  03CA               	decf	??_checkDebounceSW2+3,f
 13698  0706  084A               	movf	??_checkDebounceSW2+3,w
 13699  0707  3A80               	xorlw	128
 13700  0708  00CB               	movwf	??_checkDebounceSW2+4
 13701  0709  3080               	movlw	128
 13702  070A  024B               	subwf	??_checkDebounceSW2+4,w
 13703  070B  1D03               	skipz
 13704  070C  2F0F               	goto	u3275
 13705  070D  3002               	movlw	2
 13706  070E  0249               	subwf	??_checkDebounceSW2+2,w
 13707  070F                     u3275:	
 13708  070F  1803               	skipnc
 13709  0710  2F12               	goto	u3271
 13710  0711  2F13               	goto	u3270
 13711  0712                     u3271:	
 13712  0712  2EF4               	goto	l5867
 13713  0713                     u3270:	
 13714  0713                     l5873:	
 13715                           
 13716                           ;main.c: 561:         return 0;
 13717  0713  3000               	movlw	0
 13718  0714                     l1362:	
 13719  0714  0008               	return
 13720  0715                     __end_of_checkDebounceSW2:	
 13721                           
 13722                           	psect	text23
 13723  05C0                     __ptext23:	
 13724 ;; *************** function _checkDebounceSW1 *****************
 13725 ;; Defined at:
 13726 ;;		line 526 in file "main.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      unsigned char 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;Total ram usage:        7 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:    6
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_config_routine
 13751 ;;		_increment_subfield
 13752 ;;		_clock_subfields
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           
 13757                           ;psect for function _checkDebounceSW1
 13758  05C0                     _checkDebounceSW1:	
 13759  05C0                     l5837:	
 13760                           ;incstack = 0
 13761                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 13762                           
 13763                           
 13764                           ;main.c: 527:    PIE4bits.TMR1IE = 0;
 13765  05C0  002E               	movlb	14	; select bank14
 13766  05C1  101A               	bcf	26,0	;volatile
 13767  05C2                     l5839:	
 13768                           
 13769                           ;main.c: 529:     if(clkms - last_ms < 0){
 13770  05C2  087D               	movf	_clkms,w	;volatile
 13771  05C3  0020               	movlb	0	; select bank0
 13772  05C4  00C7               	movwf	??_checkDebounceSW1
 13773  05C5  01C8               	clrf	??_checkDebounceSW1+1
 13774  05C6  0848               	movf	??_checkDebounceSW1+1,w
 13775  05C7  00CA               	movwf	??_checkDebounceSW1+3
 13776  05C8  083E               	movf	_last_ms,w
 13777  05C9  0247               	subwf	??_checkDebounceSW1,w
 13778  05CA  00C9               	movwf	??_checkDebounceSW1+2
 13779  05CB  1C03               	skipc
 13780  05CC  03CA               	decf	??_checkDebounceSW1+3,f
 13781  05CD  1FCA               	btfss	??_checkDebounceSW1+3,7
 13782  05CE  2DD0               	goto	u3221
 13783  05CF  2DD1               	goto	u3220
 13784  05D0                     u3221:	
 13785  05D0  2DF7               	goto	l5849
 13786  05D1                     u3220:	
 13787  05D1                     l5841:	
 13788                           
 13789                           ;main.c: 531:         if ((200 - last_ms)+ clkms > 2 ){
 13790  05D1  087D               	movf	_clkms,w	;volatile
 13791  05D2  00C7               	movwf	??_checkDebounceSW1
 13792  05D3  01C8               	clrf	??_checkDebounceSW1+1
 13793  05D4  0848               	movf	??_checkDebounceSW1+1,w
 13794  05D5  00CA               	movwf	??_checkDebounceSW1+3
 13795  05D6  083E               	movf	_last_ms,w
 13796  05D7  0247               	subwf	??_checkDebounceSW1,w
 13797  05D8  00C9               	movwf	??_checkDebounceSW1+2
 13798  05D9  1C03               	skipc
 13799  05DA  03CA               	decf	??_checkDebounceSW1+3,f
 13800  05DB  0849               	movf	??_checkDebounceSW1+2,w
 13801  05DC  3EC8               	addlw	200
 13802  05DD  00CB               	movwf	??_checkDebounceSW1+4
 13803  05DE  3000               	movlw	0
 13804  05DF  3D4A               	addwfc	??_checkDebounceSW1+3,w
 13805  05E0  00CC               	movwf	??_checkDebounceSW1+5
 13806  05E1  084C               	movf	??_checkDebounceSW1+5,w
 13807  05E2  3A80               	xorlw	128
 13808  05E3  00CD               	movwf	??_checkDebounceSW1+6
 13809  05E4  3080               	movlw	128
 13810  05E5  024D               	subwf	??_checkDebounceSW1+6,w
 13811  05E6  1D03               	skipz
 13812  05E7  2DEA               	goto	u3235
 13813  05E8  3003               	movlw	3
 13814  05E9  024B               	subwf	??_checkDebounceSW1+4,w
 13815  05EA                     u3235:	
 13816  05EA  1C03               	skipc
 13817  05EB  2DED               	goto	u3231
 13818  05EC  2DEE               	goto	u3230
 13819  05ED                     u3231:	
 13820  05ED  2DF7               	goto	l5849
 13821  05EE                     u3230:	
 13822  05EE                     l5843:	
 13823                           
 13824                           ;main.c: 532:             last_ms = clkms;
 13825  05EE  087D               	movf	_clkms,w	;volatile
 13826  05EF  0020               	movlb	0	; select bank0
 13827  05F0  00C7               	movwf	??_checkDebounceSW1
 13828  05F1  0847               	movf	??_checkDebounceSW1,w
 13829  05F2  00BE               	movwf	_last_ms
 13830  05F3                     l5845:	
 13831                           
 13832                           ;main.c: 533:             PIE4bits.TMR1IE = 1;
 13833  05F3  002E               	movlb	14	; select bank14
 13834  05F4  141A               	bsf	26,0	;volatile
 13835                           
 13836                           ;main.c: 534:             return 1;
 13837  05F5  3001               	movlw	1
 13838  05F6  2E19               	goto	l1355
 13839  05F7                     l5849:	
 13840                           
 13841                           ;main.c: 538:     if(clkms - last_ms < 2){
 13842  05F7  087D               	movf	_clkms,w	;volatile
 13843  05F8  0020               	movlb	0	; select bank0
 13844  05F9  00C7               	movwf	??_checkDebounceSW1
 13845  05FA  01C8               	clrf	??_checkDebounceSW1+1
 13846  05FB  0848               	movf	??_checkDebounceSW1+1,w
 13847  05FC  00CA               	movwf	??_checkDebounceSW1+3
 13848  05FD  083E               	movf	_last_ms,w
 13849  05FE  0247               	subwf	??_checkDebounceSW1,w
 13850  05FF  00C9               	movwf	??_checkDebounceSW1+2
 13851  0600  1C03               	skipc
 13852  0601  03CA               	decf	??_checkDebounceSW1+3,f
 13853  0602  084A               	movf	??_checkDebounceSW1+3,w
 13854  0603  3A80               	xorlw	128
 13855  0604  00CB               	movwf	??_checkDebounceSW1+4
 13856  0605  3080               	movlw	128
 13857  0606  024B               	subwf	??_checkDebounceSW1+4,w
 13858  0607  1D03               	skipz
 13859  0608  2E0B               	goto	u3245
 13860  0609  3002               	movlw	2
 13861  060A  0249               	subwf	??_checkDebounceSW1+2,w
 13862  060B                     u3245:	
 13863  060B  1803               	skipnc
 13864  060C  2E0E               	goto	u3241
 13865  060D  2E0F               	goto	u3240
 13866  060E                     u3241:	
 13867  060E  2E11               	goto	l5857
 13868  060F                     u3240:	
 13869  060F                     l5851:	
 13870                           
 13871                           ;main.c: 539:         return 0;
 13872  060F  3000               	movlw	0
 13873  0610  2E19               	goto	l1355
 13874  0611                     l5857:	
 13875                           
 13876                           ;main.c: 542:         last_ms = clkms;
 13877  0611  087D               	movf	_clkms,w	;volatile
 13878  0612  0020               	movlb	0	; select bank0
 13879  0613  00C7               	movwf	??_checkDebounceSW1
 13880  0614  0847               	movf	??_checkDebounceSW1,w
 13881  0615  00BE               	movwf	_last_ms
 13882  0616                     l5859:	
 13883                           
 13884                           ;main.c: 543:         PIE4bits.TMR1IE = 1;
 13885  0616  002E               	movlb	14	; select bank14
 13886  0617  141A               	bsf	26,0	;volatile
 13887                           
 13888                           ;main.c: 544:         return 1;
 13889  0618  3001               	movlw	1
 13890  0619                     l1355:	
 13891  0619  0008               	return
 13892  061A                     __end_of_checkDebounceSW1:	
 13893                           
 13894                           	psect	text24
 13895  050B                     __ptext24:	
 13896 ;; *************** function _all_LED *****************
 13897 ;; Defined at:
 13898 ;;		line 416 in file "main.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0, pclath, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        1 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    7
 13919 ;; This function calls:
 13920 ;;		_PWM6_LoadDutyValue
 13921 ;; This function is called by:
 13922 ;;		_config_routine
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function _all_LED
 13928  050B                     _all_LED:	
 13929  050B                     l1296:	
 13930                           ;incstack = 0
 13931                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 13932                           ;main.c: 418:        do { LATAbits.LATA7 = 1; } while(0);
 13933                           
 13934  050B  0020               	movlb	0	; select bank0
 13935  050C  1796               	bsf	22,7	;volatile
 13936  050D                     l6111:	
 13937                           
 13938                           ;main.c: 419:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13939  050D  3021               	movlw	33
 13940  050E  0020               	movlb	0	; select bank0
 13941  050F  00CB               	movwf	??_all_LED
 13942  0510  3076               	movlw	118
 13943  0511                     u4357:	
 13944  0511  0B89               	decfsz	9,f
 13945  0512  2D11               	goto	u4357
 13946  0513  0BCB               	decfsz	??_all_LED,f
 13947  0514  2D11               	goto	u4357
 13948  0515  0000               	nop
 13949  0516                     l6113:	
 13950  0516  0020               	movlb	0	; select bank0
 13951  0517  1396               	bcf	22,7	;volatile
 13952  0518                     l1299:	
 13953                           
 13954                           ;main.c: 421:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13955  0518  3021               	movlw	33
 13956  0519  0020               	movlb	0	; select bank0
 13957  051A  00CB               	movwf	??_all_LED
 13958  051B  3076               	movlw	118
 13959  051C                     u4367:	
 13960  051C  0B89               	decfsz	9,f
 13961  051D  2D1C               	goto	u4367
 13962  051E  0BCB               	decfsz	??_all_LED,f
 13963  051F  2D1C               	goto	u4367
 13964  0520  0000               	nop
 13965  0521                     l6115:	
 13966                           
 13967                           ;main.c: 423:        PWM6_LoadDutyValue(1023);
 13968  0521  30FF               	movlw	255
 13969  0522  0020               	movlb	0	; select bank0
 13970  0523  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13971  0524  3003               	movlw	3
 13972  0525  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13973  0526  318D  2546  3185   	fcall	_PWM6_LoadDutyValue
 13974  0529                     l6117:	
 13975                           
 13976                           ;main.c: 424:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13977  0529  3021               	movlw	33
 13978  052A  0020               	movlb	0	; select bank0
 13979  052B  00CB               	movwf	??_all_LED
 13980  052C  3076               	movlw	118
 13981  052D                     u4377:	
 13982  052D  0B89               	decfsz	9,f
 13983  052E  2D2D               	goto	u4377
 13984  052F  0BCB               	decfsz	??_all_LED,f
 13985  0530  2D2D               	goto	u4377
 13986  0531  0000               	nop
 13987                           
 13988                           ;main.c: 426:         PWM6_LoadDutyValue(0);
 13989  0532  3000               	movlw	0
 13990  0533  0020               	movlb	0	; select bank0
 13991  0534  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13992  0535  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13993  0536  318D  2546  3185   	fcall	_PWM6_LoadDutyValue
 13994  0539                     l6119:	
 13995                           
 13996                           ;main.c: 427:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13997  0539  3021               	movlw	33
 13998  053A  0020               	movlb	0	; select bank0
 13999  053B  00CB               	movwf	??_all_LED
 14000  053C  3076               	movlw	118
 14001  053D                     u4387:	
 14002  053D  0B89               	decfsz	9,f
 14003  053E  2D3D               	goto	u4387
 14004  053F  0BCB               	decfsz	??_all_LED,f
 14005  0540  2D3D               	goto	u4387
 14006  0541  0000               	nop
 14007  0542                     l6121:	
 14008  0542  0020               	movlb	0	; select bank0
 14009  0543  1696               	bsf	22,5	;volatile
 14010  0544                     l6123:	
 14011                           
 14012                           ;main.c: 429:          _delay((unsigned long)((100)*(1000000/4000.0)));
 14013  0544  3021               	movlw	33
 14014  0545  0020               	movlb	0	; select bank0
 14015  0546  00CB               	movwf	??_all_LED
 14016  0547  3076               	movlw	118
 14017  0548                     u4397:	
 14018  0548  0B89               	decfsz	9,f
 14019  0549  2D48               	goto	u4397
 14020  054A  0BCB               	decfsz	??_all_LED,f
 14021  054B  2D48               	goto	u4397
 14022  054C  0000               	nop
 14023  054D                     l6125:	
 14024  054D  0020               	movlb	0	; select bank0
 14025  054E  1296               	bcf	22,5	;volatile
 14026  054F                     l6127:	
 14027                           
 14028                           ;main.c: 431:        _delay((unsigned long)((100)*(1000000/4000.0)));
 14029  054F  3021               	movlw	33
 14030  0550  0020               	movlb	0	; select bank0
 14031  0551  00CB               	movwf	??_all_LED
 14032  0552  3076               	movlw	118
 14033  0553                     u4407:	
 14034  0553  0B89               	decfsz	9,f
 14035  0554  2D53               	goto	u4407
 14036  0555  0BCB               	decfsz	??_all_LED,f
 14037  0556  2D53               	goto	u4407
 14038  0557  0000               	nop
 14039  0558                     l6129:	
 14040  0558  0020               	movlb	0	; select bank0
 14041  0559  1616               	bsf	22,4	;volatile
 14042  055A                     l6131:	
 14043                           
 14044                           ;main.c: 433:         _delay((unsigned long)((100)*(1000000/4000.0)));
 14045  055A  3021               	movlw	33
 14046  055B  0020               	movlb	0	; select bank0
 14047  055C  00CB               	movwf	??_all_LED
 14048  055D  3076               	movlw	118
 14049  055E                     u4417:	
 14050  055E  0B89               	decfsz	9,f
 14051  055F  2D5E               	goto	u4417
 14052  0560  0BCB               	decfsz	??_all_LED,f
 14053  0561  2D5E               	goto	u4417
 14054  0562  0000               	nop
 14055  0563                     l6133:	
 14056  0563  0020               	movlb	0	; select bank0
 14057  0564  1216               	bcf	22,4	;volatile
 14058  0565                     l1308:	
 14059  0565  0008               	return
 14060  0566                     __end_of_all_LED:	
 14061                           
 14062                           	psect	text25
 14063  0D46                     __ptext25:	
 14064 ;; *************** function _PWM6_LoadDutyValue *****************
 14065 ;; Defined at:
 14066 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1    wreg      void 
 14073 ;; Registers used:
 14074 ;;		wreg, status,2, status,0
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;Total ram usage:        4 bytes
 14085 ;; Hardware stack levels used:    1
 14086 ;; Hardware stack levels required when called:    6
 14087 ;; This function calls:
 14088 ;;		Nothing
 14089 ;; This function is called by:
 14090 ;;		_main
 14091 ;;		_increment_subfield
 14092 ;;		_all_LED
 14093 ;;		_mod1_LED
 14094 ;;		_mod2_LED
 14095 ;;		_mod3_LED
 14096 ;;		_mod4_LED
 14097 ;;		_mode_select_LED
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           
 14102                           ;psect for function _PWM6_LoadDutyValue
 14103  0D46                     _PWM6_LoadDutyValue:	
 14104  0D46                     l5819:	
 14105                           ;incstack = 0
 14106                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14107                           
 14108                           
 14109                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 14110  0D46  0020               	movlb	0	; select bank0
 14111  0D47  0848               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14112  0D48  00CA               	movwf	??_PWM6_LoadDutyValue+1
 14113  0D49  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 14114  0D4A  00C9               	movwf	??_PWM6_LoadDutyValue
 14115  0D4B  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 14116  0D4C  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 14117  0D4D  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 14118  0D4E  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 14119  0D4F  0849               	movf	??_PWM6_LoadDutyValue,w
 14120  0D50  0027               	movlb	7	; select bank7
 14121  0D51  008D               	movwf	13	;volatile
 14122                           
 14123                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 14124  0D52  0020               	movlb	0	; select bank0
 14125  0D53  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 14126  0D54  3903               	andlw	3
 14127  0D55  00C9               	movwf	??_PWM6_LoadDutyValue
 14128  0D56  3005               	movlw	5
 14129  0D57                     u3215:	
 14130  0D57  35C9               	lslf	??_PWM6_LoadDutyValue,f
 14131  0D58  3EFF               	addlw	-1
 14132  0D59  1D03               	skipz
 14133  0D5A  2D57               	goto	u3215
 14134  0D5B  3549               	lslf	??_PWM6_LoadDutyValue,w
 14135  0D5C  0027               	movlb	7	; select bank7
 14136  0D5D  008C               	movwf	12	;volatile
 14137  0D5E                     l916:	
 14138  0D5E  0008               	return
 14139  0D5F                     __end_of_PWM6_LoadDutyValue:	
 14140                           
 14141                           	psect	text26
 14142  0AC2                     __ptext26:	
 14143 ;; *************** function _TMR0_StartTimer *****************
 14144 ;; Defined at:
 14145 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;		None
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		None
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;Total ram usage:        0 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    6
 14166 ;; This function calls:
 14167 ;;		Nothing
 14168 ;; This function is called by:
 14169 ;;		_main
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           
 14174                           ;psect for function _TMR0_StartTimer
 14175  0AC2                     _TMR0_StartTimer:	
 14176  0AC2                     l6437:	
 14177                           ;incstack = 0
 14178                           ; Regs used in _TMR0_StartTimer: []
 14179                           
 14180                           
 14181                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 14182  0AC2  0020               	movlb	0	; select bank0
 14183  0AC3  179E               	bsf	30,7	;volatile
 14184  0AC4                     l1613:	
 14185  0AC4  0008               	return
 14186  0AC5                     __end_of_TMR0_StartTimer:	
 14187                           
 14188                           	psect	text27
 14189  0D93                     __ptext27:	
 14190 ;; *************** function _SYSTEM_Initialize *****************
 14191 ;; Defined at:
 14192 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;		None
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;		None
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      void 
 14199 ;; Registers used:
 14200 ;;		wreg, status,2, status,0, pclath, cstack
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;Total ram usage:        0 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; Hardware stack levels required when called:    8
 14213 ;; This function calls:
 14214 ;;		_ADCC_Initialize
 14215 ;;		_EXT_INT_Initialize
 14216 ;;		_OSCILLATOR_Initialize
 14217 ;;		_PIN_MANAGER_Initialize
 14218 ;;		_PMD_Initialize
 14219 ;;		_PWM6_Initialize
 14220 ;;		_TMR0_Initialize
 14221 ;;		_TMR1_Initialize
 14222 ;;		_TMR2_Initialize
 14223 ;; This function is called by:
 14224 ;;		_main
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           
 14229                           ;psect for function _SYSTEM_Initialize
 14230  0D93                     _SYSTEM_Initialize:	
 14231  0D93                     l6293:	
 14232                           ;incstack = 0
 14233                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14234                           
 14235                           
 14236                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 14237  0D93  318B  2351  318D   	fcall	_PMD_Initialize
 14238  0D96                     l6295:	
 14239                           
 14240                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 14241  0D96  3187  275F  318D   	fcall	_PIN_MANAGER_Initialize
 14242  0D99                     l6297:	
 14243                           
 14244                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 14245  0D99  318B  236B  318D   	fcall	_OSCILLATOR_Initialize
 14246  0D9C                     l6299:	
 14247                           
 14248                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 14249  0D9C  318B  23E3  318D   	fcall	_PWM6_Initialize
 14250  0D9F                     l6301:	
 14251                           
 14252                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14253  0D9F  318C  24BA  318D   	fcall	_ADCC_Initialize
 14254  0DA2                     l6303:	
 14255                           
 14256                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 14257  0DA2  318D  2515  318D   	fcall	_TMR2_Initialize
 14258  0DA5                     l6305:	
 14259                           
 14260                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 14261  0DA5  318D  25CB  318D   	fcall	_TMR1_Initialize
 14262  0DA8                     l6307:	
 14263                           
 14264                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 14265  0DA8  318B  23F0  318D   	fcall	_EXT_INT_Initialize
 14266  0DAB                     l6309:	
 14267                           
 14268                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 14269  0DAB  318C  248F  318D   	fcall	_TMR0_Initialize
 14270  0DAE                     l439:	
 14271  0DAE  0008               	return
 14272  0DAF                     __end_of_SYSTEM_Initialize:	
 14273                           
 14274                           	psect	text28
 14275  0D15                     __ptext28:	
 14276 ;; *************** function _TMR2_Initialize *****************
 14277 ;; Defined at:
 14278 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      void 
 14285 ;; Registers used:
 14286 ;;		wreg, status,2, status,0, pclath, cstack
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;Total ram usage:        0 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:    7
 14299 ;; This function calls:
 14300 ;;		_TMR2_SetInterruptHandler
 14301 ;; This function is called by:
 14302 ;;		_SYSTEM_Initialize
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306                           
 14307                           ;psect for function _TMR2_Initialize
 14308  0D15                     _TMR2_Initialize:	
 14309  0D15                     l6051:	
 14310                           ;incstack = 0
 14311                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14312                           
 14313                           
 14314                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 14315  0D15  3001               	movlw	1
 14316  0D16  0025               	movlb	5	; select bank5
 14317  0D17  0090               	movwf	16	;volatile
 14318                           
 14319                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 14320  0D18  3020               	movlw	32
 14321  0D19  008F               	movwf	15	;volatile
 14322  0D1A                     l6053:	
 14323                           
 14324                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 14325  0D1A  0191               	clrf	17	;volatile
 14326  0D1B                     l6055:	
 14327                           
 14328                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 14329  0D1B  309B               	movlw	155
 14330  0D1C  008D               	movwf	13	;volatile
 14331                           
 14332                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 14333  0D1D  018C               	clrf	12	;volatile
 14334  0D1E                     l6057:	
 14335                           
 14336                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 14337  0D1E  002E               	movlb	14	; select bank14
 14338  0D1F  1090               	bcf	16,1	;volatile
 14339  0D20                     l6059:	
 14340                           
 14341                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 14342  0D20  149A               	bsf	26,1	;volatile
 14343  0D21                     l6061:	
 14344                           
 14345                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 14346  0D21  30A4               	movlw	low _TMR2_DefaultInterruptHandler
 14347  0D22  0020               	movlb	0	; select bank0
 14348  0D23  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 14349  0D24  300A               	movlw	high _TMR2_DefaultInterruptHandler
 14350  0D25  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 14351  0D26  318B  237D  318D   	fcall	_TMR2_SetInterruptHandler
 14352  0D29                     l6063:	
 14353                           
 14354                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 14355  0D29  30B1               	movlw	177
 14356  0D2A  0025               	movlb	5	; select bank5
 14357  0D2B  008E               	movwf	14	;volatile
 14358  0D2C                     l998:	
 14359  0D2C  0008               	return
 14360  0D2D                     __end_of_TMR2_Initialize:	
 14361                           
 14362                           	psect	text29
 14363  0B7D                     __ptext29:	
 14364 ;; *************** function _TMR2_SetInterruptHandler *****************
 14365 ;; Defined at:
 14366 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14369 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      void 
 14374 ;; Registers used:
 14375 ;;		wreg
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14381 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;Total ram usage:        2 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; Hardware stack levels required when called:    6
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_TMR2_Initialize
 14392 ;;		_main
 14393 ;; This function uses a non-reentrant model
 14394 ;;
 14395                           
 14396                           
 14397                           ;psect for function _TMR2_SetInterruptHandler
 14398  0B7D                     _TMR2_SetInterruptHandler:	
 14399  0B7D                     l5907:	
 14400                           ;incstack = 0
 14401                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 14402                           
 14403                           
 14404                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 14405  0B7D  0020               	movlb	0	; select bank0
 14406  0B7E  0848               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 14407  0B7F  0021               	movlb	1	; select bank1
 14408  0B80  00CB               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 14409  0B81  0020               	movlb	0	; select bank0
 14410  0B82  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 14411  0B83  0021               	movlb	1	; select bank1
 14412  0B84  00CA               	movwf	_TMR2_InterruptHandler^(0+128)
 14413  0B85                     l1041:	
 14414  0B85  0008               	return
 14415  0B86                     __end_of_TMR2_SetInterruptHandler:	
 14416                           
 14417                           	psect	text30
 14418  0DCB                     __ptext30:	
 14419 ;; *************** function _TMR1_Initialize *****************
 14420 ;; Defined at:
 14421 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 14422 ;; Parameters:    Size  Location     Type
 14423 ;;		None
 14424 ;; Auto vars:     Size  Location     Type
 14425 ;;		None
 14426 ;; Return value:  Size  Location     Type
 14427 ;;                  1    wreg      void 
 14428 ;; Registers used:
 14429 ;;		wreg, status,2, status,0, pclath, cstack
 14430 ;; Tracked objects:
 14431 ;;		On entry : 0/0
 14432 ;;		On exit  : 0/0
 14433 ;;		Unchanged: 0/0
 14434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;Total ram usage:        0 bytes
 14440 ;; Hardware stack levels used:    1
 14441 ;; Hardware stack levels required when called:    7
 14442 ;; This function calls:
 14443 ;;		_TMR1_SetInterruptHandler
 14444 ;; This function is called by:
 14445 ;;		_SYSTEM_Initialize
 14446 ;; This function uses a non-reentrant model
 14447 ;;
 14448                           
 14449                           
 14450                           ;psect for function _TMR1_Initialize
 14451  0DCB                     _TMR1_Initialize:	
 14452  0DCB                     l6065:	
 14453                           ;incstack = 0
 14454                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14455                           
 14456                           
 14457                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 14458  0DCB  0024               	movlb	4	; select bank4
 14459  0DCC  018F               	clrf	15	;volatile
 14460                           
 14461                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 14462  0DCD  0190               	clrf	16	;volatile
 14463  0DCE                     l6067:	
 14464                           
 14465                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 14466  0DCE  3004               	movlw	4
 14467  0DCF  0091               	movwf	17	;volatile
 14468  0DD0                     l6069:	
 14469                           
 14470                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 14471  0DD0  30E1               	movlw	225
 14472  0DD1  008D               	movwf	13	;volatile
 14473  0DD2                     l6071:	
 14474                           
 14475                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 14476  0DD2  30BA               	movlw	186
 14477  0DD3  008C               	movwf	12	;volatile
 14478  0DD4                     l6073:	
 14479                           
 14480                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 14481  0DD4  080D               	movf	13,w	;volatile
 14482  0DD5  0020               	movlb	0	; select bank0
 14483  0DD6  00E7               	movwf	_timer1ReloadVal+1	;volatile
 14484  0DD7  0024               	movlb	4	; select bank4
 14485  0DD8  080C               	movf	12,w	;volatile
 14486  0DD9  0020               	movlb	0	; select bank0
 14487  0DDA  00E6               	movwf	_timer1ReloadVal	;volatile
 14488  0DDB                     l6075:	
 14489                           
 14490                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 14491  0DDB  002E               	movlb	14	; select bank14
 14492  0DDC  1010               	bcf	16,0	;volatile
 14493  0DDD                     l6077:	
 14494                           
 14495                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 14496  0DDD  141A               	bsf	26,0	;volatile
 14497  0DDE                     l6079:	
 14498                           
 14499                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 14500  0DDE  30A3               	movlw	low _TMR1_DefaultInterruptHandler
 14501  0DDF  0020               	movlb	0	; select bank0
 14502  0DE0  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 14503  0DE1  300A               	movlw	high _TMR1_DefaultInterruptHandler
 14504  0DE2  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 14505  0DE3  318B  230A  318D   	fcall	_TMR1_SetInterruptHandler
 14506  0DE6                     l6081:	
 14507                           
 14508                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 14509  0DE6  3015               	movlw	21
 14510  0DE7  0024               	movlb	4	; select bank4
 14511  0DE8  008E               	movwf	14	;volatile
 14512  0DE9                     l869:	
 14513  0DE9  0008               	return
 14514  0DEA                     __end_of_TMR1_Initialize:	
 14515                           
 14516                           	psect	text31
 14517  0B0A                     __ptext31:	
 14518 ;; *************** function _TMR1_SetInterruptHandler *****************
 14519 ;; Defined at:
 14520 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14523 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;		None
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  1    wreg      void 
 14528 ;; Registers used:
 14529 ;;		wreg
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/0
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;Total ram usage:        2 bytes
 14540 ;; Hardware stack levels used:    1
 14541 ;; Hardware stack levels required when called:    6
 14542 ;; This function calls:
 14543 ;;		Nothing
 14544 ;; This function is called by:
 14545 ;;		_TMR1_Initialize
 14546 ;;		_main
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           
 14551                           ;psect for function _TMR1_SetInterruptHandler
 14552  0B0A                     _TMR1_SetInterruptHandler:	
 14553  0B0A                     l5885:	
 14554                           ;incstack = 0
 14555                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 14556                           
 14557                           
 14558                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 14559  0B0A  0020               	movlb	0	; select bank0
 14560  0B0B  0848               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 14561  0B0C  00E5               	movwf	_TMR1_InterruptHandler+1
 14562  0B0D  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 14563  0B0E  00E4               	movwf	_TMR1_InterruptHandler
 14564  0B0F                     l899:	
 14565  0B0F  0008               	return
 14566  0B10                     __end_of_TMR1_SetInterruptHandler:	
 14567                           
 14568                           	psect	text32
 14569  0C8F                     __ptext32:	
 14570 ;; *************** function _TMR0_Initialize *****************
 14571 ;; Defined at:
 14572 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 14573 ;; Parameters:    Size  Location     Type
 14574 ;;		None
 14575 ;; Auto vars:     Size  Location     Type
 14576 ;;		None
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      void 
 14579 ;; Registers used:
 14580 ;;		wreg, status,2, status,0, pclath, cstack
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;Total ram usage:        0 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    7
 14593 ;; This function calls:
 14594 ;;		_TMR0_SetInterruptHandler
 14595 ;; This function is called by:
 14596 ;;		_SYSTEM_Initialize
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           
 14601                           ;psect for function _TMR0_Initialize
 14602  0C8F                     _TMR0_Initialize:	
 14603  0C8F                     l6083:	
 14604                           ;incstack = 0
 14605                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14606                           
 14607                           
 14608                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 14609  0C8F  3095               	movlw	149
 14610  0C90  0020               	movlb	0	; select bank0
 14611  0C91  009F               	movwf	31	;volatile
 14612                           
 14613                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 14614  0C92  30F1               	movlw	241
 14615  0C93  009D               	movwf	29	;volatile
 14616  0C94                     l6085:	
 14617                           
 14618                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 14619  0C94  019C               	clrf	28	;volatile
 14620  0C95                     l6087:	
 14621                           
 14622                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 14623  0C95  002E               	movlb	14	; select bank14
 14624  0C96  128C               	bcf	12,5	;volatile
 14625  0C97                     l6089:	
 14626                           
 14627                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 14628  0C97  1696               	bsf	22,5	;volatile
 14629  0C98                     l6091:	
 14630                           
 14631                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 14632  0C98  30A2               	movlw	low _TMR0_DefaultInterruptHandler
 14633  0C99  0020               	movlb	0	; select bank0
 14634  0C9A  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 14635  0C9B  300A               	movlw	high _TMR0_DefaultInterruptHandler
 14636  0C9C  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 14637  0C9D  318B  2374  318C   	fcall	_TMR0_SetInterruptHandler
 14638  0CA0                     l6093:	
 14639                           
 14640                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 14641  0CA0  300B               	movlw	11
 14642  0CA1  0020               	movlb	0	; select bank0
 14643  0CA2  009E               	movwf	30	;volatile
 14644  0CA3                     l1610:	
 14645  0CA3  0008               	return
 14646  0CA4                     __end_of_TMR0_Initialize:	
 14647                           
 14648                           	psect	text33
 14649  0B74                     __ptext33:	
 14650 ;; *************** function _TMR0_SetInterruptHandler *****************
 14651 ;; Defined at:
 14652 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14655 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      void 
 14660 ;; Registers used:
 14661 ;;		wreg
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;Total ram usage:        2 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; Hardware stack levels required when called:    6
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_main
 14678 ;;		_TMR0_Initialize
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           
 14683                           ;psect for function _TMR0_SetInterruptHandler
 14684  0B74                     _TMR0_SetInterruptHandler:	
 14685  0B74                     l5909:	
 14686                           ;incstack = 0
 14687                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 14688                           
 14689                           
 14690                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 14691  0B74  0020               	movlb	0	; select bank0
 14692  0B75  0848               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 14693  0B76  0021               	movlb	1	; select bank1
 14694  0B77  00C9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 14695  0B78  0020               	movlb	0	; select bank0
 14696  0B79  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 14697  0B7A  0021               	movlb	1	; select bank1
 14698  0B7B  00C8               	movwf	_TMR0_InterruptHandler^(0+128)
 14699  0B7C                     l1632:	
 14700  0B7C  0008               	return
 14701  0B7D                     __end_of_TMR0_SetInterruptHandler:	
 14702                           
 14703                           	psect	text34
 14704  0BE3                     __ptext34:	
 14705 ;; *************** function _PWM6_Initialize *****************
 14706 ;; Defined at:
 14707 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;		None
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;		None
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  1    wreg      void 
 14714 ;; Registers used:
 14715 ;;		wreg, status,2, status,0
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 0/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;Total ram usage:        0 bytes
 14726 ;; Hardware stack levels used:    1
 14727 ;; Hardware stack levels required when called:    6
 14728 ;; This function calls:
 14729 ;;		Nothing
 14730 ;; This function is called by:
 14731 ;;		_SYSTEM_Initialize
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           
 14736                           ;psect for function _PWM6_Initialize
 14737  0BE3                     _PWM6_Initialize:	
 14738  0BE3                     l6041:	
 14739                           ;incstack = 0
 14740                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 14741                           
 14742                           
 14743                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14744  0BE3  3080               	movlw	128
 14745  0BE4  0027               	movlb	7	; select bank7
 14746  0BE5  008E               	movwf	14	;volatile
 14747                           
 14748                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 14749  0BE6  303E               	movlw	62
 14750  0BE7  008D               	movwf	13	;volatile
 14751                           
 14752                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14753  0BE8  3040               	movlw	64
 14754  0BE9  008C               	movwf	12	;volatile
 14755  0BEA                     l6043:	
 14756                           
 14757                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14758  0BEA  0024               	movlb	4	; select bank4
 14759  0BEB  081F               	movf	31,w	;volatile
 14760  0BEC  39F3               	andlw	-13
 14761  0BED  3804               	iorlw	4
 14762  0BEE  009F               	movwf	31	;volatile
 14763  0BEF                     l913:	
 14764  0BEF  0008               	return
 14765  0BF0                     __end_of_PWM6_Initialize:	
 14766                           
 14767                           	psect	text35
 14768  0B51                     __ptext35:	
 14769 ;; *************** function _PMD_Initialize *****************
 14770 ;; Defined at:
 14771 ;;		line 77 in file "mcc_generated_files/mcc.c"
 14772 ;; Parameters:    Size  Location     Type
 14773 ;;		None
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;		None
 14776 ;; Return value:  Size  Location     Type
 14777 ;;                  1    wreg      void 
 14778 ;; Registers used:
 14779 ;;		status,2
 14780 ;; Tracked objects:
 14781 ;;		On entry : 0/0
 14782 ;;		On exit  : 0/0
 14783 ;;		Unchanged: 0/0
 14784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;Total ram usage:        0 bytes
 14790 ;; Hardware stack levels used:    1
 14791 ;; Hardware stack levels required when called:    6
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_SYSTEM_Initialize
 14796 ;; This function uses a non-reentrant model
 14797 ;;
 14798                           
 14799                           
 14800                           ;psect for function _PMD_Initialize
 14801  0B51                     _PMD_Initialize:	
 14802  0B51                     l5977:	
 14803                           ;incstack = 0
 14804                           ; Regs used in _PMD_Initialize: [status,2]
 14805                           
 14806                           
 14807                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 14808  0B51  002F               	movlb	15	; select bank15
 14809  0B52  0196               	clrf	22	;volatile
 14810                           
 14811                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 14812  0B53  0197               	clrf	23	;volatile
 14813                           
 14814                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 14815  0B54  0198               	clrf	24	;volatile
 14816                           
 14817                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 14818  0B55  0199               	clrf	25	;volatile
 14819                           
 14820                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 14821  0B56  019A               	clrf	26	;volatile
 14822                           
 14823                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 14824  0B57  019B               	clrf	27	;volatile
 14825  0B58                     l445:	
 14826  0B58  0008               	return
 14827  0B59                     __end_of_PMD_Initialize:	
 14828                           
 14829                           	psect	text36
 14830  075F                     __ptext36:	
 14831 ;; *************** function _PIN_MANAGER_Initialize *****************
 14832 ;; Defined at:
 14833 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14834 ;; Parameters:    Size  Location     Type
 14835 ;;		None
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;		None
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1    wreg      void 
 14840 ;; Registers used:
 14841 ;;		wreg, status,2
 14842 ;; Tracked objects:
 14843 ;;		On entry : 0/0
 14844 ;;		On exit  : 0/0
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14851 ;;Total ram usage:        0 bytes
 14852 ;; Hardware stack levels used:    1
 14853 ;; Hardware stack levels required when called:    6
 14854 ;; This function calls:
 14855 ;;		Nothing
 14856 ;; This function is called by:
 14857 ;;		_SYSTEM_Initialize
 14858 ;; This function uses a non-reentrant model
 14859 ;;
 14860                           
 14861                           
 14862                           ;psect for function _PIN_MANAGER_Initialize
 14863  075F                     _PIN_MANAGER_Initialize:	
 14864  075F                     l5979:	
 14865                           ;incstack = 0
 14866                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14867                           
 14868                           
 14869                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14870  075F  0020               	movlb	0	; select bank0
 14871  0760  019A               	clrf	26	;volatile
 14872                           
 14873                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14874  0761  0199               	clrf	25	;volatile
 14875                           
 14876                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 14877  0762  0196               	clrf	22	;volatile
 14878                           
 14879                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14880  0763  0197               	clrf	23	;volatile
 14881                           
 14882                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14883  0764  0198               	clrf	24	;volatile
 14884  0765                     l5981:	
 14885                           
 14886                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14887  0765  3007               	movlw	7
 14888  0766  0095               	movwf	21	;volatile
 14889  0767                     l5983:	
 14890                           
 14891                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 14892  0767  300F               	movlw	15
 14893  0768  0091               	movwf	17	;volatile
 14894  0769                     l5985:	
 14895                           
 14896                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 14897  0769  30FF               	movlw	255
 14898  076A  0092               	movwf	18	;volatile
 14899  076B                     l5987:	
 14900                           
 14901                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14902  076B  30FF               	movlw	255
 14903  076C  0093               	movwf	19	;volatile
 14904  076D                     l5989:	
 14905                           
 14906                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14907  076D  30FF               	movlw	255
 14908  076E  0094               	movwf	20	;volatile
 14909  076F                     l5991:	
 14910                           
 14911                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 14912  076F  30FF               	movlw	255
 14913  0770  003E               	movlb	30	; select bank30
 14914  0771  00D9               	movwf	89	;volatile
 14915  0772                     l5993:	
 14916                           
 14917                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 14918  0772  30C7               	movlw	199
 14919  0773  00CE               	movwf	78	;volatile
 14920  0774                     l5995:	
 14921                           
 14922                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 14923  0774  30EF               	movlw	239
 14924  0775  00C3               	movwf	67	;volatile
 14925  0776                     l5997:	
 14926                           
 14927                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14928  0776  3007               	movlw	7
 14929  0777  00E4               	movwf	100	;volatile
 14930  0778                     l5999:	
 14931                           
 14932                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 14933  0778  30FF               	movlw	255
 14934  0779  00B8               	movwf	56	;volatile
 14935                           
 14936                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14937  077A  01DA               	clrf	90	;volatile
 14938                           
 14939                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14940  077B  01E5               	clrf	101	;volatile
 14941                           
 14942                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14943  077C  01C4               	clrf	68	;volatile
 14944                           
 14945                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14946  077D  01B9               	clrf	57	;volatile
 14947                           
 14948                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14949  077E  01CF               	clrf	79	;volatile
 14950                           
 14951                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 14952  077F  01E6               	clrf	102	;volatile
 14953                           
 14954                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 14955  0780  01BA               	clrf	58	;volatile
 14956                           
 14957                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 14958  0781  01C5               	clrf	69	;volatile
 14959                           
 14960                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 14961  0782  01D0               	clrf	80	;volatile
 14962                           
 14963                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 14964  0783  01DB               	clrf	91	;volatile
 14965  0784                     l6001:	
 14966                           
 14967                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 14968  0784  30FF               	movlw	255
 14969  0785  00BB               	movwf	59	;volatile
 14970  0786                     l6003:	
 14971                           
 14972                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 14973  0786  30FF               	movlw	255
 14974  0787  00C6               	movwf	70	;volatile
 14975  0788                     l6005:	
 14976                           
 14977                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 14978  0788  30FF               	movlw	255
 14979  0789  00D1               	movwf	81	;volatile
 14980  078A                     l6007:	
 14981                           
 14982                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 14983  078A  30FF               	movlw	255
 14984  078B  00DC               	movwf	92	;volatile
 14985  078C                     l6009:	
 14986                           
 14987                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 14988  078C  3007               	movlw	7
 14989  078D  00E7               	movwf	103	;volatile
 14990  078E                     l6011:	
 14991                           
 14992                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 14993  078E  30FF               	movlw	255
 14994  078F  00BC               	movwf	60	;volatile
 14995  0790                     l6013:	
 14996                           
 14997                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 14998  0790  30FF               	movlw	255
 14999  0791  00C7               	movwf	71	;volatile
 15000  0792                     l6015:	
 15001                           
 15002                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 15003  0792  30FF               	movlw	255
 15004  0793  00D2               	movwf	82	;volatile
 15005  0794                     l6017:	
 15006                           
 15007                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 15008  0794  30FF               	movlw	255
 15009  0795  00DD               	movwf	93	;volatile
 15010  0796                     l6019:	
 15011                           
 15012                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 15013  0796  3007               	movlw	7
 15014  0797  00E8               	movwf	104	;volatile
 15015  0798                     l6021:	
 15016                           
 15017                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 15018  0798  300C               	movlw	12
 15019  0799  003D               	movlb	29	; select bank29
 15020  079A  0090               	movwf	16	;volatile
 15021  079B                     l6023:	
 15022                           
 15023                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 15024  079B  3013               	movlw	19
 15025  079C  00C5               	movwf	69	;volatile
 15026  079D                     l6025:	
 15027                           
 15028                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 15029  079D  3014               	movlw	20
 15030  079E  003E               	movlb	30	; select bank30
 15031  079F  00A3               	movwf	35	;volatile
 15032  07A0                     l6027:	
 15033                           
 15034                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 15035  07A0  3015               	movlw	21
 15036  07A1  00A4               	movwf	36	;volatile
 15037  07A2                     l6029:	
 15038                           
 15039                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 15040  07A2  300E               	movlw	14
 15041  07A3  0096               	movwf	22	;volatile
 15042  07A4                     l6031:	
 15043                           
 15044                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 15045  07A4  3014               	movlw	20
 15046  07A5  003D               	movlb	29	; select bank29
 15047  07A6  00C6               	movwf	70	;volatile
 15048  07A7                     l530:	
 15049  07A7  0008               	return
 15050  07A8                     __end_of_PIN_MANAGER_Initialize:	
 15051                           
 15052                           	psect	text37
 15053  0B6B                     __ptext37:	
 15054 ;; *************** function _OSCILLATOR_Initialize *****************
 15055 ;; Defined at:
 15056 ;;		line 63 in file "mcc_generated_files/mcc.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;		None
 15059 ;; Auto vars:     Size  Location     Type
 15060 ;;		None
 15061 ;; Return value:  Size  Location     Type
 15062 ;;                  1    wreg      void 
 15063 ;; Registers used:
 15064 ;;		wreg, status,2
 15065 ;; Tracked objects:
 15066 ;;		On entry : 0/0
 15067 ;;		On exit  : 0/0
 15068 ;;		Unchanged: 0/0
 15069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15074 ;;Total ram usage:        0 bytes
 15075 ;; Hardware stack levels used:    1
 15076 ;; Hardware stack levels required when called:    6
 15077 ;; This function calls:
 15078 ;;		Nothing
 15079 ;; This function is called by:
 15080 ;;		_SYSTEM_Initialize
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           
 15085                           ;psect for function _OSCILLATOR_Initialize
 15086  0B6B                     _OSCILLATOR_Initialize:	
 15087  0B6B                     l6033:	
 15088                           ;incstack = 0
 15089                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15090                           
 15091                           
 15092                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 15093  0B6B  3062               	movlw	98
 15094  0B6C  0031               	movlb	17	; select bank17
 15095  0B6D  008D               	movwf	13	;volatile
 15096  0B6E                     l6035:	
 15097                           
 15098                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 15099  0B6E  018F               	clrf	15	;volatile
 15100  0B6F                     l6037:	
 15101                           
 15102                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 15103  0B6F  0191               	clrf	17	;volatile
 15104                           
 15105                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 15106  0B70  3002               	movlw	2
 15107  0B71  0093               	movwf	19	;volatile
 15108  0B72                     l6039:	
 15109                           
 15110                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 15111  0B72  0192               	clrf	18	;volatile
 15112  0B73                     l442:	
 15113  0B73  0008               	return
 15114  0B74                     __end_of_OSCILLATOR_Initialize:	
 15115                           
 15116                           	psect	text38
 15117  0BF0                     __ptext38:	
 15118 ;; *************** function _EXT_INT_Initialize *****************
 15119 ;; Defined at:
 15120 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;		None
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2, status,0, pclath, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; Hardware stack levels required when called:    7
 15141 ;; This function calls:
 15142 ;;		_INT_SetInterruptHandler
 15143 ;; This function is called by:
 15144 ;;		_SYSTEM_Initialize
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           
 15149                           ;psect for function _EXT_INT_Initialize
 15150  0BF0                     _EXT_INT_Initialize:	
 15151  0BF0                     l5971:	
 15152                           ;incstack = 0
 15153                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15154                           
 15155                           
 15156                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 15157  0BF0  002E               	movlb	14	; select bank14
 15158  0BF1  100C               	bcf	12,0	;volatile
 15159                           
 15160                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 15161  0BF2  140B               	bsf	11,0	;volatile
 15162  0BF3                     l5973:	
 15163                           
 15164                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 15165  0BF3  30A1               	movlw	low _INT_DefaultInterruptHandler
 15166  0BF4  0020               	movlb	0	; select bank0
 15167  0BF5  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 15168  0BF6  300A               	movlw	high _INT_DefaultInterruptHandler
 15169  0BF7  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 15170  0BF8  318B  2304  318B   	fcall	_INT_SetInterruptHandler
 15171  0BFB                     l5975:	
 15172                           
 15173                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 15174  0BFB  002E               	movlb	14	; select bank14
 15175  0BFC  1416               	bsf	22,0	;volatile
 15176  0BFD                     l347:	
 15177  0BFD  0008               	return
 15178  0BFE                     __end_of_EXT_INT_Initialize:	
 15179                           
 15180                           	psect	text39
 15181  0B04                     __ptext39:	
 15182 ;; *************** function _INT_SetInterruptHandler *****************
 15183 ;; Defined at:
 15184 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15187 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;		None
 15190 ;; Return value:  Size  Location     Type
 15191 ;;                  1    wreg      void 
 15192 ;; Registers used:
 15193 ;;		wreg
 15194 ;; Tracked objects:
 15195 ;;		On entry : 0/0
 15196 ;;		On exit  : 0/0
 15197 ;;		Unchanged: 0/0
 15198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15203 ;;Total ram usage:        2 bytes
 15204 ;; Hardware stack levels used:    1
 15205 ;; Hardware stack levels required when called:    6
 15206 ;; This function calls:
 15207 ;;		Nothing
 15208 ;; This function is called by:
 15209 ;;		_EXT_INT_Initialize
 15210 ;;		_main
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214                           
 15215                           ;psect for function _INT_SetInterruptHandler
 15216  0B04                     _INT_SetInterruptHandler:	
 15217  0B04                     l5883:	
 15218                           ;incstack = 0
 15219                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 15220                           
 15221                           
 15222                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 15223  0B04  0020               	movlb	0	; select bank0
 15224  0B05  0848               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 15225  0B06  00E9               	movwf	_INT_InterruptHandler+1
 15226  0B07  0847               	movf	INT_SetInterruptHandler@InterruptHandler,w
 15227  0B08  00E8               	movwf	_INT_InterruptHandler
 15228  0B09                     l341:	
 15229  0B09  0008               	return
 15230  0B0A                     __end_of_INT_SetInterruptHandler:	
 15231                           
 15232                           	psect	text40
 15233  0CBA                     __ptext40:	
 15234 ;; *************** function _ADCC_Initialize *****************
 15235 ;; Defined at:
 15236 ;;		line 63 in file "mcc_generated_files/adcc.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;		None
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;		None
 15241 ;; Return value:  Size  Location     Type
 15242 ;;                  1    wreg      void 
 15243 ;; Registers used:
 15244 ;;		wreg, status,2
 15245 ;; Tracked objects:
 15246 ;;		On entry : 0/0
 15247 ;;		On exit  : 0/0
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15254 ;;Total ram usage:        0 bytes
 15255 ;; Hardware stack levels used:    1
 15256 ;; Hardware stack levels required when called:    6
 15257 ;; This function calls:
 15258 ;;		Nothing
 15259 ;; This function is called by:
 15260 ;;		_SYSTEM_Initialize
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           
 15265                           ;psect for function _ADCC_Initialize
 15266  0CBA                     _ADCC_Initialize:	
 15267  0CBA                     l6045:	
 15268                           ;incstack = 0
 15269                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 15270                           
 15271                           
 15272                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 15273  0CBA  0022               	movlb	2	; select bank2
 15274  0CBB  018E               	clrf	14	;volatile
 15275                           
 15276                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 15277  0CBC  018F               	clrf	15	;volatile
 15278                           
 15279                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 15280  0CBD  0190               	clrf	16	;volatile
 15281                           
 15282                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 15283  0CBE  0191               	clrf	17	;volatile
 15284                           
 15285                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 15286  0CBF  0192               	clrf	18	;volatile
 15287                           
 15288                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 15289  0CC0  0193               	clrf	19	;volatile
 15290                           
 15291                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 15292  0CC1  018D               	clrf	13	;volatile
 15293                           
 15294                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 15295  0CC2  0021               	movlb	1	; select bank1
 15296  0CC3  019E               	clrf	30	;volatile
 15297                           
 15298                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 15299  0CC4  019B               	clrf	27	;volatile
 15300                           
 15301                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 15302  0CC5  0194               	clrf	20	;volatile
 15303                           
 15304                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 15305  0CC6  0195               	clrf	21	;volatile
 15306                           
 15307                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 15308  0CC7  0196               	clrf	22	;volatile
 15309                           
 15310                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 15311  0CC8  0197               	clrf	23	;volatile
 15312                           
 15313                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 15314  0CC9  019A               	clrf	26	;volatile
 15315                           
 15316                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 15317  0CCA  0199               	clrf	25	;volatile
 15318                           
 15319                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 15320  0CCB  0198               	clrf	24	;volatile
 15321  0CCC                     l6047:	
 15322                           
 15323                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 15324  0CCC  3084               	movlw	132
 15325  0CCD  0093               	movwf	19	;volatile
 15326  0CCE                     l6049:	
 15327                           
 15328                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 15329  0CCE  019D               	clrf	29	;volatile
 15330  0CCF                     l757:	
 15331  0CCF  0008               	return
 15332  0CD0                     __end_of_ADCC_Initialize:	
 15333                           
 15334                           	psect	text41
 15335  0D79                     __ptext41:	
 15336 ;; *************** function _LED_bin *****************
 15337 ;; Defined at:
 15338 ;;		line 446 in file "main.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;  value           2    3[BANK0 ] unsigned int 
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;		None
 15343 ;; Return value:  Size  Location     Type
 15344 ;;                  1    wreg      void 
 15345 ;; Registers used:
 15346 ;;		wreg, status,2, status,0
 15347 ;; Tracked objects:
 15348 ;;		On entry : 0/0
 15349 ;;		On exit  : 0/0
 15350 ;;		Unchanged: 0/0
 15351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15354 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15356 ;;Total ram usage:        5 bytes
 15357 ;; Hardware stack levels used:    1
 15358 ;; Hardware stack levels required when called:    6
 15359 ;; This function calls:
 15360 ;;		Nothing
 15361 ;; This function is called by:
 15362 ;;		_main
 15363 ;; This function uses a non-reentrant model
 15364 ;;
 15365                           
 15366                           
 15367                           ;psect for function _LED_bin
 15368  0D79                     _LED_bin:	
 15369  0D79                     l6339:	
 15370                           ;incstack = 0
 15371                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 15372                           
 15373                           
 15374                           ;main.c: 448:     LATAbits.LATA4 = (value & 1);
 15375  0D79  0020               	movlb	0	; select bank0
 15376  0D7A  0847               	movf	LED_bin@value,w
 15377  0D7B  3901               	andlw	1
 15378  0D7C  00C9               	movwf	??_LED_bin
 15379  0D7D  0EC9               	swapf	??_LED_bin,f
 15380  0D7E  0816               	movf	22,w	;volatile
 15381  0D7F  0649               	xorwf	??_LED_bin,w
 15382  0D80  39EF               	andlw	-17
 15383  0D81  0649               	xorwf	??_LED_bin,w
 15384  0D82  0096               	movwf	22	;volatile
 15385                           
 15386                           ;main.c: 449:     LATAbits.LATA5 = (value >>1);
 15387  0D83  0848               	movf	LED_bin@value+1,w
 15388  0D84  00CA               	movwf	??_LED_bin+1
 15389  0D85  0847               	movf	LED_bin@value,w
 15390  0D86  00C9               	movwf	??_LED_bin
 15391  0D87  36CA               	lsrf	??_LED_bin+1,f
 15392  0D88  0CC9               	rrf	??_LED_bin,f
 15393  0D89  0849               	movf	??_LED_bin,w
 15394  0D8A  00CB               	movwf	??_LED_bin+2
 15395  0D8B  0ECB               	swapf	??_LED_bin+2,f
 15396  0D8C  0DCB               	rlf	??_LED_bin+2,f
 15397  0D8D  0816               	movf	22,w	;volatile
 15398  0D8E  064B               	xorwf	??_LED_bin+2,w
 15399  0D8F  39DF               	andlw	-33
 15400  0D90  064B               	xorwf	??_LED_bin+2,w
 15401  0D91  0096               	movwf	22	;volatile
 15402  0D92                     l1311:	
 15403  0D92  0008               	return
 15404  0D93                     __end_of_LED_bin:	
 15405                           
 15406                           	psect	text42
 15407  0D5F                     __ptext42:	
 15408 ;; *************** function _ADC_read *****************
 15409 ;; Defined at:
 15410 ;;		line 459 in file "main.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;		None
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;		None
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  2    5[BANK0 ] unsigned int 
 15417 ;; Registers used:
 15418 ;;		wreg, status,2, status,0, pclath, cstack
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;Total ram usage:        2 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; Hardware stack levels required when called:    7
 15431 ;; This function calls:
 15432 ;;		_ADCC_GetConversionResult
 15433 ;;		_ADCC_IsConversionDone
 15434 ;;		_ADCC_StartConversion
 15435 ;; This function is called by:
 15436 ;;		_main
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           
 15441                           ;psect for function _ADC_read
 15442  0D5F                     _ADC_read:	
 15443  0D5F                     l6329:	
 15444                           ;incstack = 0
 15445                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 15446                           
 15447                           
 15448                           ;main.c: 461:     ADCC_StartConversion(channel_ANA0);
 15449  0D5F  3000               	movlw	0
 15450  0D60  318B  2349  318D   	fcall	_ADCC_StartConversion
 15451                           
 15452                           ;main.c: 462:     while(!ADCC_IsConversionDone()){
 15453  0D63  2D68               	goto	l6333
 15454  0D64                     l6331:	
 15455                           
 15456                           ;main.c: 463:         _delay((unsigned long)((1)*(1000000/4000.0)));
 15457  0D64  3053               	movlw	83
 15458  0D65                     u4427:	
 15459  0D65  0B89               	decfsz	9,f
 15460  0D66  2D65               	goto	u4427
 15461  0D67  0000               	nop
 15462  0D68                     l6333:	
 15463                           
 15464                           ;main.c: 462:     while(!ADCC_IsConversionDone()){
 15465  0D68  318B  2323  318D   	fcall	_ADCC_IsConversionDone
 15466  0D6B  3A00               	xorlw	0
 15467  0D6C  1903               	skipnz
 15468  0D6D  2D6F               	goto	u3591
 15469  0D6E  2D70               	goto	u3590
 15470  0D6F                     u3591:	
 15471  0D6F  2D64               	goto	l6331
 15472  0D70                     u3590:	
 15473  0D70                     l6335:	
 15474                           
 15475                           ;main.c: 466:     return ADCC_GetConversionResult();
 15476  0D70  318B  2362  318D   	fcall	_ADCC_GetConversionResult
 15477  0D73  0020               	movlb	0	; select bank0
 15478  0D74  0848               	movf	?_ADCC_GetConversionResult+1,w
 15479  0D75  00CA               	movwf	?_ADC_read+1
 15480  0D76  0847               	movf	?_ADCC_GetConversionResult,w
 15481  0D77  00C9               	movwf	?_ADC_read
 15482  0D78                     l1317:	
 15483  0D78  0008               	return
 15484  0D79                     __end_of_ADC_read:	
 15485                           
 15486                           	psect	text43
 15487  0B49                     __ptext43:	
 15488 ;; *************** function _ADCC_StartConversion *****************
 15489 ;; Defined at:
 15490 ;;		line 106 in file "mcc_generated_files/adcc.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;  channel         1    wreg     enum E12246
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;  channel         1    3[BANK0 ] enum E12246
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  1    wreg      void 
 15497 ;; Registers used:
 15498 ;;		wreg
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;Total ram usage:        1 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:    6
 15511 ;; This function calls:
 15512 ;;		Nothing
 15513 ;; This function is called by:
 15514 ;;		_ADC_read
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           
 15519                           ;psect for function _ADCC_StartConversion
 15520  0B49                     _ADCC_StartConversion:	
 15521                           
 15522                           ;incstack = 0
 15523                           ; Regs used in _ADCC_StartConversion: [wreg]
 15524                           ;ADCC_StartConversion@channel stored from wreg
 15525  0B49  0020               	movlb	0	; select bank0
 15526  0B4A  00C7               	movwf	ADCC_StartConversion@channel
 15527  0B4B                     l6095:	
 15528                           
 15529                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 15530  0B4B  0847               	movf	ADCC_StartConversion@channel,w
 15531  0B4C  0021               	movlb	1	; select bank1
 15532  0B4D  009E               	movwf	30	;volatile
 15533  0B4E                     l6097:	
 15534                           
 15535                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 15536  0B4E  1793               	bsf	19,7	;volatile
 15537  0B4F                     l6099:	
 15538                           
 15539                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 15540  0B4F  1413               	bsf	19,0	;volatile
 15541  0B50                     l760:	
 15542  0B50  0008               	return
 15543  0B51                     __end_of_ADCC_StartConversion:	
 15544                           
 15545                           	psect	text44
 15546  0B23                     __ptext44:	
 15547 ;; *************** function _ADCC_IsConversionDone *****************
 15548 ;; Defined at:
 15549 ;;		line 118 in file "mcc_generated_files/adcc.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;		None
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      _Bool 
 15556 ;; Registers used:
 15557 ;;		wreg, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;Total ram usage:        0 bytes
 15568 ;; Hardware stack levels used:    1
 15569 ;; Hardware stack levels required when called:    6
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_ADC_read
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           
 15578                           ;psect for function _ADCC_IsConversionDone
 15579  0B23                     _ADCC_IsConversionDone:	
 15580  0B23                     l6101:	
 15581                           ;incstack = 0
 15582                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 15583                           
 15584                           
 15585                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 15586  0B23  1003               	clrc
 15587  0B24  0021               	movlb	1	; select bank1
 15588  0B25  1C13               	btfss	19,0	;volatile
 15589  0B26  1403               	setc
 15590  0B27  3000               	movlw	0
 15591  0B28  3D09               	addwfc	9,w
 15592  0B29                     l763:	
 15593  0B29  0008               	return
 15594  0B2A                     __end_of_ADCC_IsConversionDone:	
 15595                           
 15596                           	psect	text45
 15597  0B62                     __ptext45:	
 15598 ;; *************** function _ADCC_GetConversionResult *****************
 15599 ;; Defined at:
 15600 ;;		line 124 in file "mcc_generated_files/adcc.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  2    3[BANK0 ] unsigned short 
 15607 ;; Registers used:
 15608 ;;		wreg
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15618 ;;Total ram usage:        2 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    6
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_ADC_read
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           
 15629                           ;psect for function _ADCC_GetConversionResult
 15630  0B62                     _ADCC_GetConversionResult:	
 15631  0B62                     l6105:	
 15632                           ;incstack = 0
 15633                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 15634                           
 15635                           
 15636                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15637  0B62  0021               	movlb	1	; select bank1
 15638  0B63  080D               	movf	13,w	;volatile
 15639  0B64  0020               	movlb	0	; select bank0
 15640  0B65  00C8               	movwf	?_ADCC_GetConversionResult+1
 15641  0B66  0021               	movlb	1	; select bank1
 15642  0B67  080C               	movf	12,w	;volatile
 15643  0B68  0020               	movlb	0	; select bank0
 15644  0B69  00C7               	movwf	?_ADCC_GetConversionResult
 15645  0B6A                     l766:	
 15646  0B6A  0008               	return
 15647  0B6B                     __end_of_ADCC_GetConversionResult:	
 15648                           
 15649                           	psect	intentry
 15650  0004                     __pintentry:	
 15651 ;; *************** function _INTERRUPT_InterruptManager *****************
 15652 ;; Defined at:
 15653 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;		None
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      void 
 15660 ;; Registers used:
 15661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15671 ;;Total ram usage:        0 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; Hardware stack levels required when called:    5
 15674 ;; This function calls:
 15675 ;;		Absolute function
 15676 ;;		_INT_ISR
 15677 ;;		_TMR0_ISR
 15678 ;;		_TMR1_ISR
 15679 ;;		_TMR2_ISR
 15680 ;;		_i2c_ISR
 15681 ;;		_i2c_busCollisionISR
 15682 ;; This function is called by:
 15683 ;;		Interrupt level 1
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687  0004                     _INTERRUPT_InterruptManager:	
 15688                           
 15689                           ;incstack = 0
 15690  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15691                           
 15692                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15693  0005  3180               	pagesel	$
 15694  0006                     i1l5461:	
 15695                           
 15696                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 15697  0006  002E               	movlb	14	; select bank14
 15698  0007  1C16               	btfss	22,0	;volatile
 15699  0008  280A               	goto	u293_21
 15700  0009  280B               	goto	u293_20
 15701  000A                     u293_21:	
 15702  000A  2813               	goto	i1l378
 15703  000B                     u293_20:	
 15704  000B                     i1l5463:	
 15705  000B  1C0C               	btfss	12,0	;volatile
 15706  000C  280E               	goto	u294_21
 15707  000D  280F               	goto	u294_20
 15708  000E                     u294_21:	
 15709  000E  2813               	goto	i1l378
 15710  000F                     u294_20:	
 15711  000F                     i1l5465:	
 15712                           
 15713                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 15714  000F  318A  22FE  3180   	fcall	_INT_ISR
 15715                           
 15716                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15717  0012  2859               	goto	i1l392
 15718  0013                     i1l378:	
 15719                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 15720                           
 15721  0013  1E96               	btfss	22,5	;volatile
 15722  0014  2816               	goto	u295_21
 15723  0015  2817               	goto	u295_20
 15724  0016                     u295_21:	
 15725  0016  281F               	goto	i1l380
 15726  0017                     u295_20:	
 15727  0017                     i1l5467:	
 15728  0017  1E8C               	btfss	12,5	;volatile
 15729  0018  281A               	goto	u296_21
 15730  0019  281B               	goto	u296_20
 15731  001A                     u296_21:	
 15732  001A  281F               	goto	i1l380
 15733  001B                     u296_20:	
 15734  001B                     i1l5469:	
 15735                           
 15736                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 15737  001B  318B  23FE  3180   	fcall	_TMR0_ISR
 15738                           
 15739                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 15740  001E  2859               	goto	i1l392
 15741  001F                     i1l380:	
 15742                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 15743                           
 15744  001F  1F0B               	btfss	11,6	;volatile
 15745  0020  2822               	goto	u297_21
 15746  0021  2823               	goto	u297_20
 15747  0022                     u297_21:	
 15748  0022  2859               	goto	i1l386
 15749  0023                     u297_20:	
 15750  0023                     i1l5471:	
 15751                           
 15752                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15753  0023  1C1A               	btfss	26,0	;volatile
 15754  0024  2826               	goto	u298_21
 15755  0025  2827               	goto	u298_20
 15756  0026                     u298_21:	
 15757  0026  282F               	goto	i1l383
 15758  0027                     u298_20:	
 15759  0027                     i1l5473:	
 15760  0027  1C10               	btfss	16,0	;volatile
 15761  0028  282A               	goto	u299_21
 15762  0029  282B               	goto	u299_20
 15763  002A                     u299_21:	
 15764  002A  282F               	goto	i1l383
 15765  002B                     u299_20:	
 15766  002B                     i1l5475:	
 15767                           
 15768                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 15769  002B  318C  24E6  3180   	fcall	_TMR1_ISR
 15770                           
 15771                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 15772  002E  2859               	goto	i1l392
 15773  002F                     i1l383:	
 15774                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 15775                           
 15776  002F  1C99               	btfss	25,1	;volatile
 15777  0030  2832               	goto	u300_21
 15778  0031  2833               	goto	u300_20
 15779  0032                     u300_21:	
 15780  0032  283E               	goto	i1l385
 15781  0033                     u300_20:	
 15782  0033                     i1l5477:	
 15783  0033  1C8F               	btfss	15,1	;volatile
 15784  0034  2836               	goto	u301_21
 15785  0035  2837               	goto	u301_20
 15786  0036                     u301_21:	
 15787  0036  283E               	goto	i1l385
 15788  0037                     u301_20:	
 15789  0037                     i1l5479:	
 15790                           
 15791                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_busCollisionISR();
 15792  0037  0020               	movlb	0	; select bank0
 15793  0038  0835               	movf	_i2c1_driver_busCollisionISR+1,w
 15794  0039  008A               	movwf	10
 15795  003A  0834               	movf	_i2c1_driver_busCollisionISR,w
 15796  003B  000A               	callw
 15797  003C  3180               	pagesel	$
 15798                           
 15799                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 15800  003D  2859               	goto	i1l392
 15801  003E                     i1l385:	
 15802                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 15803                           
 15804  003E  1C19               	btfss	25,0	;volatile
 15805  003F  2841               	goto	u302_21
 15806  0040  2842               	goto	u302_20
 15807  0041                     u302_21:	
 15808  0041  284D               	goto	i1l387
 15809  0042                     u302_20:	
 15810  0042                     i1l5481:	
 15811  0042  1C0F               	btfss	15,0	;volatile
 15812  0043  2845               	goto	u303_21
 15813  0044  2846               	goto	u303_20
 15814  0045                     u303_21:	
 15815  0045  284D               	goto	i1l387
 15816  0046                     u303_20:	
 15817  0046                     i1l5483:	
 15818                           
 15819                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_i2cISR();
 15820  0046  0020               	movlb	0	; select bank0
 15821  0047  0833               	movf	_i2c1_driver_i2cISR+1,w
 15822  0048  008A               	movwf	10
 15823  0049  0832               	movf	_i2c1_driver_i2cISR,w
 15824  004A  000A               	callw
 15825  004B  3180               	pagesel	$
 15826                           
 15827                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 15828  004C  2859               	goto	i1l392
 15829  004D                     i1l387:	
 15830                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 15831                           
 15832  004D  1C9A               	btfss	26,1	;volatile
 15833  004E  2850               	goto	u304_21
 15834  004F  2851               	goto	u304_20
 15835  0050                     u304_21:	
 15836  0050  2859               	goto	i1l386
 15837  0051                     u304_20:	
 15838  0051                     i1l5485:	
 15839  0051  1C90               	btfss	16,1	;volatile
 15840  0052  2854               	goto	u305_21
 15841  0053  2855               	goto	u305_20
 15842  0054                     u305_21:	
 15843  0054  2859               	goto	i1l386
 15844  0055                     u305_20:	
 15845  0055                     i1l5487:	
 15846                           
 15847                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 15848  0055  318C  240D  3180   	fcall	_TMR2_ISR
 15849                           
 15850                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 15851  0058  2859               	goto	i1l392
 15852  0059                     i1l386:	
 15853  0059                     i1l392:	
 15854  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15855  005A  0009               	retfie
 15856  005B                     __end_of_INTERRUPT_InterruptManager:	
 15857                           
 15858                           	psect	text47
 15859  0ACD                     __ptext47:	
 15860 ;; *************** function _i2c_busCollisionISR *****************
 15861 ;; Defined at:
 15862 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15863 ;; Parameters:    Size  Location     Type
 15864 ;;		None
 15865 ;; Auto vars:     Size  Location     Type
 15866 ;;		None
 15867 ;; Return value:  Size  Location     Type
 15868 ;;                  1    wreg      void 
 15869 ;; Registers used:
 15870 ;;		status,2, status,0, pclath, cstack
 15871 ;; Tracked objects:
 15872 ;;		On entry : 0/0
 15873 ;;		On exit  : 0/0
 15874 ;;		Unchanged: 0/0
 15875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15880 ;;Total ram usage:        0 bytes
 15881 ;; Hardware stack levels used:    1
 15882 ;; Hardware stack levels required when called:    1
 15883 ;; This function calls:
 15884 ;;		_i2c1_driver_clearBusCollision
 15885 ;; This function is called by:
 15886 ;;		_i2c_open
 15887 ;;		_INTERRUPT_InterruptManager
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           
 15892                           ;psect for function _i2c_busCollisionISR
 15893  0ACD                     _i2c_busCollisionISR:	
 15894  0ACD                     i1l5095:	
 15895                           ;incstack = 0
 15896                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15897                           
 15898                           
 15899                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 15900  0ACD  318A  22BF  318A   	fcall	_i2c1_driver_clearBusCollision
 15901  0AD0                     i1l213:	
 15902  0AD0  0008               	return
 15903  0AD1                     __end_of_i2c_busCollisionISR:	
 15904                           
 15905                           	psect	text48
 15906  0ABF                     __ptext48:	
 15907 ;; *************** function _i2c1_driver_clearBusCollision *****************
 15908 ;; Defined at:
 15909 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;		None
 15912 ;; Auto vars:     Size  Location     Type
 15913 ;;		None
 15914 ;; Return value:  Size  Location     Type
 15915 ;;                  1    wreg      void 
 15916 ;; Registers used:
 15917 ;;		None
 15918 ;; Tracked objects:
 15919 ;;		On entry : 0/0
 15920 ;;		On exit  : 0/0
 15921 ;;		Unchanged: 0/0
 15922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15927 ;;Total ram usage:        0 bytes
 15928 ;; Hardware stack levels used:    1
 15929 ;; This function calls:
 15930 ;;		Nothing
 15931 ;; This function is called by:
 15932 ;;		_i2c_busCollisionISR
 15933 ;; This function uses a non-reentrant model
 15934 ;;
 15935                           
 15936                           
 15937                           ;psect for function _i2c1_driver_clearBusCollision
 15938  0ABF                     _i2c1_driver_clearBusCollision:	
 15939  0ABF                     i1l4687:	
 15940                           ;incstack = 0
 15941                           ; Regs used in _i2c1_driver_clearBusCollision: []
 15942                           
 15943                           
 15944                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 15945  0ABF  002E               	movlb	14	; select bank14
 15946  0AC0  108F               	bcf	15,1	;volatile
 15947  0AC1                     i1l672:	
 15948  0AC1  0008               	return
 15949  0AC2                     __end_of_i2c1_driver_clearBusCollision:	
 15950                           
 15951                           	psect	text49
 15952  0EBF                     __ptext49:	
 15953 ;; *************** function _i2c_ISR *****************
 15954 ;; Defined at:
 15955 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;		None
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;		None
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  1    wreg      void 
 15962 ;; Registers used:
 15963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;Total ram usage:        3 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:    4
 15976 ;; This function calls:
 15977 ;;		_do_I2C_DO_ACK
 15978 ;;		_do_I2C_DO_ADDRESS_NACK
 15979 ;;		_do_I2C_DO_NACK_RESTART
 15980 ;;		_do_I2C_DO_NACK_STOP
 15981 ;;		_do_I2C_IDLE
 15982 ;;		_do_I2C_RCEN
 15983 ;;		_do_I2C_RESET
 15984 ;;		_do_I2C_RX
 15985 ;;		_do_I2C_SEND_ADR_READ
 15986 ;;		_do_I2C_SEND_ADR_WRITE
 15987 ;;		_do_I2C_SEND_RESTART
 15988 ;;		_do_I2C_SEND_RESTART_READ
 15989 ;;		_do_I2C_SEND_RESTART_WRITE
 15990 ;;		_do_I2C_SEND_STOP
 15991 ;;		_do_I2C_TX
 15992 ;;		_do_I2C_TX_EMPTY
 15993 ;;		_i2c1_driver_isNACK
 15994 ;;		_mssp1_clearIRQ
 15995 ;; This function is called by:
 15996 ;;		_i2c_open
 15997 ;;		_i2c_poller
 15998 ;;		_INTERRUPT_InterruptManager
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           
 16003                           ;psect for function _i2c_ISR
 16004  0EBF                     _i2c_ISR:	
 16005  0EBF                     i1l5085:	
 16006                           ;incstack = 0
 16007                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16008                           
 16009                           
 16010                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 16011  0EBF  318A  22BC  318E   	fcall	_mssp1_clearIRQ
 16012  0EC2                     i1l5087:	
 16013                           
 16014                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 16015  0EC2  0021               	movlb	1	; select bank1
 16016  0EC3  1DA0               	btfss	_i2c_status^(0+128),3
 16017  0EC4  2EC6               	goto	u228_21
 16018  0EC5  2EC7               	goto	u228_20
 16019  0EC6                     u228_21:	
 16020  0EC6  2ED4               	goto	i1l5093
 16021  0EC7                     u228_20:	
 16022  0EC7                     i1l5089:	
 16023  0EC7  318B  2331  318E   	fcall	_i2c1_driver_isNACK
 16024  0ECA  1C03               	btfss	3,0
 16025  0ECB  2ECD               	goto	u229_21
 16026  0ECC  2ECE               	goto	u229_20
 16027  0ECD                     u229_21:	
 16028  0ECD  2ED4               	goto	i1l5093
 16029  0ECE                     u229_20:	
 16030  0ECE                     i1l5091:	
 16031                           
 16032                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 16033  0ECE  300F               	movlw	15
 16034  0ECF  0020               	movlb	0	; select bank0
 16035  0ED0  00C4               	movwf	??_i2c_ISR
 16036  0ED1  0844               	movf	??_i2c_ISR,w
 16037  0ED2  0021               	movlb	1	; select bank1
 16038  0ED3  00A9               	movwf	(_i2c_status^(0+128)+9)
 16039  0ED4                     i1l5093:	
 16040                           
 16041                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 16042  0ED4  0021               	movlb	1	; select bank1
 16043  0ED5  0829               	movf	(_i2c_status^(0+128)+9),w
 16044  0ED6  0020               	movlb	0	; select bank0
 16045  0ED7  00C4               	movwf	??_i2c_ISR
 16046  0ED8  01C5               	clrf	??_i2c_ISR+1
 16047  0ED9  35C4               	lslf	??_i2c_ISR,f
 16048  0EDA  0DC5               	rlf	??_i2c_ISR+1,f
 16049  0EDB  3000               	movlw	low (_fsmStateTable| (0+32768))
 16050  0EDC  0744               	addwf	??_i2c_ISR,w
 16051  0EDD  0084               	movwf	4
 16052  0EDE  3090               	movlw	high (_fsmStateTable| (0+32768))
 16053  0EDF  3D45               	addwfc	??_i2c_ISR+1,w
 16054  0EE0  0085               	movwf	5
 16055  0EE1  3F01               	moviw [1]fsr0
 16056  0EE2  008A               	movwf	10
 16057  0EE3  3F00               	moviw [0]fsr0
 16058  0EE4  000A               	callw
 16059  0EE5  318E               	pagesel	$
 16060  0EE6  0020               	movlb	0	; select bank0
 16061  0EE7  00C6               	movwf	??_i2c_ISR+2
 16062  0EE8  0846               	movf	??_i2c_ISR+2,w
 16063  0EE9  0021               	movlb	1	; select bank1
 16064  0EEA  00A9               	movwf	(_i2c_status^(0+128)+9)
 16065  0EEB                     i1l210:	
 16066  0EEB  0008               	return
 16067  0EEC                     __end_of_i2c_ISR:	
 16068                           
 16069                           	psect	text50
 16070  0ABC                     __ptext50:	
 16071 ;; *************** function _mssp1_clearIRQ *****************
 16072 ;; Defined at:
 16073 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		None
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_i2c_ISR
 16097 ;;		_i2c_open
 16098 ;;		_i2c_close
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           
 16103                           ;psect for function _mssp1_clearIRQ
 16104  0ABC                     _mssp1_clearIRQ:	
 16105  0ABC                     i1l4503:	
 16106                           ;incstack = 0
 16107                           ; Regs used in _mssp1_clearIRQ: []
 16108                           
 16109                           
 16110                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 16111  0ABC  002E               	movlb	14	; select bank14
 16112  0ABD  100F               	bcf	15,0	;volatile
 16113  0ABE                     i1l576:	
 16114  0ABE  0008               	return
 16115  0ABF                     __end_of_mssp1_clearIRQ:	
 16116                           
 16117                           	psect	text51
 16118  0715                     __ptext51:	
 16119 ;; *************** function _do_I2C_RX *****************
 16120 ;; Defined at:
 16121 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 16122 ;; Parameters:    Size  Location     Type
 16123 ;;		None
 16124 ;; Auto vars:     Size  Location     Type
 16125 ;;		None
 16126 ;; Return value:  Size  Location     Type
 16127 ;;                  1    wreg      enum E12722
 16128 ;; Registers used:
 16129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16130 ;; Tracked objects:
 16131 ;;		On entry : 0/0
 16132 ;;		On exit  : 0/0
 16133 ;;		Unchanged: 0/0
 16134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16137 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16139 ;;Total ram usage:        3 bytes
 16140 ;; Hardware stack levels used:    1
 16141 ;; Hardware stack levels required when called:    3
 16142 ;; This function calls:
 16143 ;;		Absolute function
 16144 ;;		_do_I2C_DO_NACK_RESTART
 16145 ;;		_do_I2C_DO_NACK_STOP
 16146 ;;		_i2c1_driver_getRXData
 16147 ;;		_i2c1_driver_sendACK
 16148 ;;		_i2c_restartWrite
 16149 ;;		_rd1RegCompleteHandler
 16150 ;;		_rd2RegCompleteHandler
 16151 ;;		_rdBlkRegCompleteHandler
 16152 ;;		_returnReset
 16153 ;;		_returnStop
 16154 ;;		_wr1RegCompleteHandler
 16155 ;;		_wr2RegCompleteHandler
 16156 ;; This function is called by:
 16157 ;;		_i2c_ISR
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           
 16162                           ;psect for function _do_I2C_RX
 16163  0715                     _do_I2C_RX:	
 16164  0715                     i1l4629:	
 16165                           ;incstack = 0
 16166                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16167                           
 16168                           
 16169                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 16170  0715  318A  22B6  3187   	fcall	_i2c1_driver_getRXData
 16171  0718  00FA               	movwf	??_do_I2C_RX
 16172  0719  0021               	movlb	1	; select bank1
 16173  071A  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 16174  071B  0086               	movwf	6
 16175  071C  0187               	clrf	7
 16176  071D  087A               	movf	??_do_I2C_RX,w
 16177  071E  0081               	movwf	1
 16178  071F                     i1l4631:	
 16179  071F  3001               	movlw	1
 16180  0720  00FA               	movwf	??_do_I2C_RX
 16181  0721  087A               	movf	??_do_I2C_RX,w
 16182  0722  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 16183  0723                     i1l4633:	
 16184                           
 16185                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 16186  0723  3001               	movlw	1
 16187  0724  02A3               	subwf	(_i2c_status^(0+128)+3),f
 16188  0725  3000               	movlw	0
 16189  0726  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 16190  0727  0823               	movf	(_i2c_status^(0+128)+3),w
 16191  0728  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 16192  0729  1903               	btfsc	3,2
 16193  072A  2F2C               	goto	u195_21
 16194  072B  2F2D               	goto	u195_20
 16195  072C                     u195_21:	
 16196  072C  2F32               	goto	i1l185
 16197  072D                     u195_20:	
 16198  072D                     i1l4635:	
 16199                           
 16200                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 16201  072D  318A  22C5  3187   	fcall	_i2c1_driver_sendACK
 16202  0730                     i1l4637:	
 16203                           
 16204                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 16205  0730  3005               	movlw	5
 16206  0731  2F5E               	goto	i1l186
 16207  0732                     i1l185:	
 16208                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 16209                           
 16210                           
 16211                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 16212  0732  1520               	bsf	_i2c_status^(0+128),2
 16213                           
 16214                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16215  0733  2F3C               	goto	i1l4653
 16216  0734                     i1l4643:	
 16217                           
 16218                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 16219  0734  318A  22F9  3187   	fcall	_do_I2C_DO_NACK_RESTART
 16220  0737  2F5E               	goto	i1l186
 16221  0738                     i1l4647:	
 16222                           
 16223                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 16224  0738  318A  22F4  3187   	fcall	_do_I2C_DO_NACK_STOP
 16225  073B  2F5E               	goto	i1l186
 16226  073C                     i1l4653:	
 16227  073C  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16228  073D  00FA               	movwf	??_do_I2C_RX
 16229  073E  087A               	movf	??_do_I2C_RX,w
 16230  073F  00F9               	movwf	rdBlkRegCompleteHandler@p
 16231  0740  300B               	movlw	11
 16232  0741  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16233  0742  0086               	movwf	6
 16234  0743  0187               	clrf	7
 16235  0744  3F41               	moviw [1]fsr1
 16236  0745  008A               	movwf	10
 16237  0746  3F40               	moviw [0]fsr1
 16238  0747  000A               	callw
 16239  0748  3187               	pagesel	$
 16240  0749  00FB               	movwf	??_do_I2C_RX+1
 16241  074A  01FC               	clrf	??_do_I2C_RX+2
 16242                           
 16243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16244                           ; Switch size 1, requested type "simple"
 16245                           ; Number of cases is 1, Range of values is 0 to 0
 16246                           ; switch strategies available:
 16247                           ; Name         Instructions Cycles
 16248                           ; simple_byte            4     3 (average)
 16249                           ; direct_byte            8     6 (fixed)
 16250                           ; jumptable            260     6 (fixed)
 16251                           ;	Chosen strategy is simple_byte
 16252  074B  087C               	movf	??_do_I2C_RX+2,w
 16253  074C  3A00               	xorlw	0	; case 0
 16254  074D  1903               	skipnz
 16255  074E  2F50               	goto	i1l6931
 16256  074F  2F38               	goto	i1l4647
 16257  0750                     i1l6931:	
 16258                           
 16259                           ; Switch size 1, requested type "simple"
 16260                           ; Number of cases is 4, Range of values is 1 to 4
 16261                           ; switch strategies available:
 16262                           ; Name         Instructions Cycles
 16263                           ; simple_byte           13     7 (average)
 16264                           ; direct_byte           17     9 (fixed)
 16265                           ; jumptable            263     9 (fixed)
 16266                           ;	Chosen strategy is simple_byte
 16267  0750  087B               	movf	??_do_I2C_RX+1,w
 16268  0751  3A01               	xorlw	1	; case 1
 16269  0752  1903               	skipnz
 16270  0753  2F38               	goto	i1l4647
 16271  0754  3A03               	xorlw	3	; case 2
 16272  0755  1903               	skipnz
 16273  0756  2F34               	goto	i1l4643
 16274  0757  3A01               	xorlw	1	; case 3
 16275  0758  1903               	skipnz
 16276  0759  2F34               	goto	i1l4643
 16277  075A  3A07               	xorlw	7	; case 4
 16278  075B  1903               	skipnz
 16279  075C  2F38               	goto	i1l4647
 16280  075D  2F38               	goto	i1l4647
 16281  075E                     i1l186:	
 16282  075E  0008               	return
 16283  075F                     __end_of_do_I2C_RX:	
 16284                           
 16285                           	psect	text52
 16286  0674                     __ptext52:	
 16287 ;; *************** function _do_I2C_TX *****************
 16288 ;; Defined at:
 16289 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;		None
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;		None
 16294 ;; Return value:  Size  Location     Type
 16295 ;;                  1    wreg      enum E12722
 16296 ;; Registers used:
 16297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;Total ram usage:        3 bytes
 16308 ;; Hardware stack levels used:    1
 16309 ;; Hardware stack levels required when called:    3
 16310 ;; This function calls:
 16311 ;;		Absolute function
 16312 ;;		_do_I2C_SEND_RESTART_READ
 16313 ;;		_do_I2C_SEND_RESTART_WRITE
 16314 ;;		_do_I2C_SEND_STOP
 16315 ;;		_i2c1_driver_TXData
 16316 ;;		_i2c1_driver_isNACK
 16317 ;;		_i2c_restartWrite
 16318 ;;		_rd1RegCompleteHandler
 16319 ;;		_rd2RegCompleteHandler
 16320 ;;		_rdBlkRegCompleteHandler
 16321 ;;		_returnReset
 16322 ;;		_returnStop
 16323 ;;		_wr1RegCompleteHandler
 16324 ;;		_wr2RegCompleteHandler
 16325 ;; This function is called by:
 16326 ;;		_i2c_ISR
 16327 ;; This function uses a non-reentrant model
 16328 ;;
 16329                           
 16330                           
 16331                           ;psect for function _do_I2C_TX
 16332  0674                     _do_I2C_TX:	
 16333  0674                     i1l4595:	
 16334                           ;incstack = 0
 16335                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16336                           
 16337                           
 16338                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 16339  0674  318B  2331  3186   	fcall	_i2c1_driver_isNACK
 16340  0677  1C03               	btfss	3,0
 16341  0678  2E7A               	goto	u193_21
 16342  0679  2E7B               	goto	u193_20
 16343  067A                     u193_21:	
 16344  067A  2EAB               	goto	i1l169
 16345  067B                     u193_20:	
 16346  067B  2E88               	goto	i1l4613
 16347  067C                     i1l4599:	
 16348                           
 16349                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 16350  067C  318A  22DB  3186   	fcall	_do_I2C_SEND_RESTART_READ
 16351  067F  2EC7               	goto	i1l172
 16352  0680                     i1l4603:	
 16353                           
 16354                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 16355  0680  318A  22E0  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 16356  0683  2EC7               	goto	i1l172
 16357  0684                     i1l4607:	
 16358                           
 16359                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 16360  0684  318A  22EA  3186   	fcall	_do_I2C_SEND_STOP
 16361  0687  2EC7               	goto	i1l172
 16362  0688                     i1l4613:	
 16363  0688  0021               	movlb	1	; select bank1
 16364  0689  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 16365  068A  00FA               	movwf	??_do_I2C_TX
 16366  068B  087A               	movf	??_do_I2C_TX,w
 16367  068C  00F9               	movwf	rdBlkRegCompleteHandler@p
 16368  068D  3011               	movlw	17
 16369  068E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16370  068F  0086               	movwf	6
 16371  0690  0187               	clrf	7
 16372  0691  3F41               	moviw [1]fsr1
 16373  0692  008A               	movwf	10
 16374  0693  3F40               	moviw [0]fsr1
 16375  0694  000A               	callw
 16376  0695  3186               	pagesel	$
 16377  0696  00FB               	movwf	??_do_I2C_TX+1
 16378  0697  01FC               	clrf	??_do_I2C_TX+2
 16379                           
 16380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16381                           ; Switch size 1, requested type "simple"
 16382                           ; Number of cases is 1, Range of values is 0 to 0
 16383                           ; switch strategies available:
 16384                           ; Name         Instructions Cycles
 16385                           ; simple_byte            4     3 (average)
 16386                           ; direct_byte            8     6 (fixed)
 16387                           ; jumptable            260     6 (fixed)
 16388                           ;	Chosen strategy is simple_byte
 16389  0698  087C               	movf	??_do_I2C_TX+2,w
 16390  0699  3A00               	xorlw	0	; case 0
 16391  069A  1903               	skipnz
 16392  069B  2E9D               	goto	i1l6933
 16393  069C  2E84               	goto	i1l4607
 16394  069D                     i1l6933:	
 16395                           
 16396                           ; Switch size 1, requested type "simple"
 16397                           ; Number of cases is 4, Range of values is 1 to 4
 16398                           ; switch strategies available:
 16399                           ; Name         Instructions Cycles
 16400                           ; simple_byte           13     7 (average)
 16401                           ; direct_byte           17     9 (fixed)
 16402                           ; jumptable            263     9 (fixed)
 16403                           ;	Chosen strategy is simple_byte
 16404  069D  087B               	movf	??_do_I2C_TX+1,w
 16405  069E  3A01               	xorlw	1	; case 1
 16406  069F  1903               	skipnz
 16407  06A0  2E84               	goto	i1l4607
 16408  06A1  3A03               	xorlw	3	; case 2
 16409  06A2  1903               	skipnz
 16410  06A3  2E7C               	goto	i1l4599
 16411  06A4  3A01               	xorlw	1	; case 3
 16412  06A5  1903               	skipnz
 16413  06A6  2E80               	goto	i1l4603
 16414  06A7  3A07               	xorlw	7	; case 4
 16415  06A8  1903               	skipnz
 16416  06A9  2E84               	goto	i1l4607
 16417  06AA  2E84               	goto	i1l4607
 16418  06AB                     i1l169:	
 16419                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 16420                           
 16421                           
 16422                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 16423  06AB  0021               	movlb	1	; select bank1
 16424  06AC  11A0               	bcf	_i2c_status^(0+128),3
 16425  06AD                     i1l4615:	
 16426                           
 16427                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 16428  06AD  3002               	movlw	2
 16429  06AE  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16430  06AF  0086               	movwf	6
 16431  06B0  0187               	clrf	7
 16432  06B1  3F40               	moviw [0]fsr1
 16433  06B2  0084               	movwf	4
 16434  06B3  0185               	clrf	5
 16435  06B4  0A81               	incf	1,f
 16436  06B5  0800               	movf	0,w
 16437  06B6  318A  22D1  3186   	fcall	_i2c1_driver_TXData
 16438  06B9                     i1l4617:	
 16439                           
 16440                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 16441  06B9  3001               	movlw	1
 16442  06BA  0021               	movlb	1	; select bank1
 16443  06BB  02A3               	subwf	(_i2c_status^(0+128)+3),f
 16444  06BC  3000               	movlw	0
 16445  06BD  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 16446  06BE  0823               	movf	(_i2c_status^(0+128)+3),w
 16447  06BF  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 16448  06C0  1D03               	btfss	3,2
 16449  06C1  2EC3               	goto	u194_21
 16450  06C2  2EC4               	goto	u194_20
 16451  06C3                     u194_21:	
 16452  06C3  2EC6               	goto	i1l4621
 16453  06C4                     u194_20:	
 16454  06C4                     i1l4619:	
 16455  06C4  3006               	movlw	6
 16456  06C5  2EC7               	goto	i1l172
 16457  06C6                     i1l4621:	
 16458  06C6  3003               	movlw	3
 16459  06C7                     i1l172:	
 16460  06C7  0008               	return
 16461  06C8                     __end_of_do_I2C_TX:	
 16462                           
 16463                           	psect	text53
 16464  0E93                     __ptext53:	
 16465 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 16466 ;; Defined at:
 16467 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      enum E12722
 16474 ;; Registers used:
 16475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;Total ram usage:        3 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    3
 16488 ;; This function calls:
 16489 ;;		Absolute function
 16490 ;;		_do_I2C_SEND_RESTART
 16491 ;;		_do_I2C_SEND_STOP
 16492 ;;		_i2c_restartWrite
 16493 ;;		_rd1RegCompleteHandler
 16494 ;;		_rd2RegCompleteHandler
 16495 ;;		_rdBlkRegCompleteHandler
 16496 ;;		_returnReset
 16497 ;;		_returnStop
 16498 ;;		_wr1RegCompleteHandler
 16499 ;;		_wr2RegCompleteHandler
 16500 ;; This function is called by:
 16501 ;;		_i2c_ISR
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505                           
 16506                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16507  0E93                     _do_I2C_DO_ADDRESS_NACK:	
 16508  0E93                     i1l4573:	
 16509                           ;incstack = 0
 16510                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16511                           
 16512                           
 16513                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 16514  0E93  0021               	movlb	1	; select bank1
 16515  0E94  11A0               	bcf	_i2c_status^(0+128),3
 16516  0E95                     i1l4575:	
 16517                           
 16518                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 16519  0E95  3002               	movlw	2
 16520  0E96  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16521  0E97  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16522  0E98  00AA               	movwf	(_i2c_status^(0+128)+10)
 16523                           
 16524                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 16525  0E99  2EA2               	goto	i1l4587
 16526  0E9A                     i1l4577:	
 16527                           
 16528                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 16529  0E9A  318A  22E5  318E   	fcall	_do_I2C_SEND_RESTART
 16530  0E9D  2EBE               	goto	i1l164
 16531  0E9E                     i1l4581:	
 16532                           
 16533                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 16534  0E9E  318A  22EA  318E   	fcall	_do_I2C_SEND_STOP
 16535  0EA1  2EBE               	goto	i1l164
 16536  0EA2                     i1l4587:	
 16537  0EA2  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 16538  0EA3  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16539  0EA4  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16540  0EA5  00F9               	movwf	rdBlkRegCompleteHandler@p
 16541  0EA6  300F               	movlw	15
 16542  0EA7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16543  0EA8  0086               	movwf	6
 16544  0EA9  0187               	clrf	7
 16545  0EAA  3F41               	moviw [1]fsr1
 16546  0EAB  008A               	movwf	10
 16547  0EAC  3F40               	moviw [0]fsr1
 16548  0EAD  000A               	callw
 16549  0EAE  318E               	pagesel	$
 16550  0EAF  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 16551  0EB0  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 16552                           
 16553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16554                           ; Switch size 1, requested type "simple"
 16555                           ; Number of cases is 1, Range of values is 0 to 0
 16556                           ; switch strategies available:
 16557                           ; Name         Instructions Cycles
 16558                           ; simple_byte            4     3 (average)
 16559                           ; direct_byte            8     6 (fixed)
 16560                           ; jumptable            260     6 (fixed)
 16561                           ;	Chosen strategy is simple_byte
 16562  0EB1  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 16563  0EB2  3A00               	xorlw	0	; case 0
 16564  0EB3  1903               	skipnz
 16565  0EB4  2EB6               	goto	i1l6935
 16566  0EB5  2E9E               	goto	i1l4581
 16567  0EB6                     i1l6935:	
 16568                           
 16569                           ; Switch size 1, requested type "simple"
 16570                           ; Number of cases is 2, Range of values is 2 to 3
 16571                           ; switch strategies available:
 16572                           ; Name         Instructions Cycles
 16573                           ; simple_byte            7     4 (average)
 16574                           ; direct_byte           13     9 (fixed)
 16575                           ; jumptable            263     9 (fixed)
 16576                           ;	Chosen strategy is simple_byte
 16577  0EB6  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 16578  0EB7  3A02               	xorlw	2	; case 2
 16579  0EB8  1903               	skipnz
 16580  0EB9  2E9A               	goto	i1l4577
 16581  0EBA  3A01               	xorlw	1	; case 3
 16582  0EBB  1903               	skipnz
 16583  0EBC  2E9A               	goto	i1l4577
 16584  0EBD  2E9E               	goto	i1l4581
 16585  0EBE                     i1l164:	
 16586  0EBE  0008               	return
 16587  0EBF                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16588                           
 16589                           	psect	text54
 16590  0AF9                     __ptext54:	
 16591 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16592 ;; Defined at:
 16593 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;		None
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;		None
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      enum E12722
 16600 ;; Registers used:
 16601 ;;		wreg, status,2, status,0, pclath, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;Total ram usage:        0 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    1
 16614 ;; This function calls:
 16615 ;;		_i2c1_driver_sendNACK
 16616 ;; This function is called by:
 16617 ;;		_do_I2C_RX
 16618 ;;		_i2c_ISR
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           
 16623                           ;psect for function _do_I2C_DO_NACK_RESTART
 16624  0AF9                     _do_I2C_DO_NACK_RESTART:	
 16625  0AF9                     i1l4335:	
 16626                           ;incstack = 0
 16627                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16628                           
 16629                           
 16630                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 16631  0AF9  318A  22C9  318A   	fcall	_i2c1_driver_sendNACK
 16632  0AFC                     i1l4337:	
 16633                           
 16634                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 16635  0AFC  3009               	movlw	9
 16636  0AFD                     i1l158:	
 16637  0AFD  0008               	return
 16638  0AFE                     __end_of_do_I2C_DO_NACK_RESTART:	
 16639                           
 16640                           	psect	text55
 16641  0AF4                     __ptext55:	
 16642 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16643 ;; Defined at:
 16644 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      enum E12722
 16651 ;; Registers used:
 16652 ;;		wreg, status,2, status,0, pclath, cstack
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; Hardware stack levels required when called:    1
 16665 ;; This function calls:
 16666 ;;		_i2c1_driver_sendNACK
 16667 ;; This function is called by:
 16668 ;;		_do_I2C_RX
 16669 ;;		_i2c_ISR
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           
 16674                           ;psect for function _do_I2C_DO_NACK_STOP
 16675  0AF4                     _do_I2C_DO_NACK_STOP:	
 16676  0AF4                     i1l4329:	
 16677                           ;incstack = 0
 16678                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16679                           
 16680                           
 16681                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 16682  0AF4  318A  22C9  318A   	fcall	_i2c1_driver_sendNACK
 16683  0AF7                     i1l4331:	
 16684                           
 16685                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 16686  0AF7  300A               	movlw	10
 16687  0AF8                     i1l155:	
 16688  0AF8  0008               	return
 16689  0AF9                     __end_of_do_I2C_DO_NACK_STOP:	
 16690                           
 16691                           	psect	text56
 16692  0AEF                     __ptext56:	
 16693 ;; *************** function _do_I2C_DO_ACK *****************
 16694 ;; Defined at:
 16695 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16696 ;; Parameters:    Size  Location     Type
 16697 ;;		None
 16698 ;; Auto vars:     Size  Location     Type
 16699 ;;		None
 16700 ;; Return value:  Size  Location     Type
 16701 ;;                  1    wreg      enum E12722
 16702 ;; Registers used:
 16703 ;;		wreg, status,2, status,0, pclath, cstack
 16704 ;; Tracked objects:
 16705 ;;		On entry : 0/0
 16706 ;;		On exit  : 0/0
 16707 ;;		Unchanged: 0/0
 16708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16713 ;;Total ram usage:        0 bytes
 16714 ;; Hardware stack levels used:    1
 16715 ;; Hardware stack levels required when called:    1
 16716 ;; This function calls:
 16717 ;;		_i2c1_driver_sendACK
 16718 ;; This function is called by:
 16719 ;;		_i2c_ISR
 16720 ;; This function uses a non-reentrant model
 16721 ;;
 16722                           
 16723                           
 16724                           ;psect for function _do_I2C_DO_ACK
 16725  0AEF                     _do_I2C_DO_ACK:	
 16726  0AEF                     i1l4567:	
 16727                           ;incstack = 0
 16728                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16729                           
 16730                           
 16731                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 16732  0AEF  318A  22C5  318A   	fcall	_i2c1_driver_sendACK
 16733  0AF2                     i1l4569:	
 16734                           
 16735                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 16736  0AF2  3005               	movlw	5
 16737  0AF3                     i1l152:	
 16738  0AF3  0008               	return
 16739  0AF4                     __end_of_do_I2C_DO_ACK:	
 16740                           
 16741                           	psect	text57
 16742  0B1C                     __ptext57:	
 16743 ;; *************** function _do_I2C_RCEN *****************
 16744 ;; Defined at:
 16745 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;		None
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;		None
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      enum E12722
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0, pclath, cstack
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;Total ram usage:        0 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:    1
 16766 ;; This function calls:
 16767 ;;		_i2c1_driver_startRX
 16768 ;; This function is called by:
 16769 ;;		_i2c_ISR
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773                           
 16774                           ;psect for function _do_I2C_RCEN
 16775  0B1C                     _do_I2C_RCEN:	
 16776  0B1C                     i1l4559:	
 16777                           ;incstack = 0
 16778                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16779                           
 16780                           
 16781                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 16782  0B1C  0021               	movlb	1	; select bank1
 16783  0B1D  11A0               	bcf	_i2c_status^(0+128),3
 16784  0B1E                     i1l4561:	
 16785                           
 16786                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 16787  0B1E  318A  22B3  318B   	fcall	_i2c1_driver_startRX
 16788  0B21                     i1l4563:	
 16789                           
 16790                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 16791  0B21  3004               	movlw	4
 16792  0B22                     i1l149:	
 16793  0B22  0008               	return
 16794  0B23                     __end_of_do_I2C_RCEN:	
 16795                           
 16796                           	psect	text58
 16797  0B41                     __ptext58:	
 16798 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16799 ;; Defined at:
 16800 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;		None
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;		None
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      enum E12722
 16807 ;; Registers used:
 16808 ;;		wreg, status,2, status,0, pclath, cstack
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;Total ram usage:        0 bytes
 16819 ;; Hardware stack levels used:    1
 16820 ;; Hardware stack levels required when called:    1
 16821 ;; This function calls:
 16822 ;;		_i2c1_driver_TXData
 16823 ;; This function is called by:
 16824 ;;		_i2c_ISR
 16825 ;; This function uses a non-reentrant model
 16826 ;;
 16827                           
 16828                           
 16829                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16830  0B41                     _do_I2C_SEND_ADR_WRITE:	
 16831  0B41                     i1l4551:	
 16832                           ;incstack = 0
 16833                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16834                           
 16835                           
 16836                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 16837  0B41  0021               	movlb	1	; select bank1
 16838  0B42  15A0               	bsf	_i2c_status^(0+128),3
 16839  0B43                     i1l4553:	
 16840                           
 16841                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 16842  0B43  3521               	lslf	(_i2c_status^(0+128)+1),w
 16843  0B44  318A  22D1  318B   	fcall	_i2c1_driver_TXData
 16844  0B47                     i1l4555:	
 16845                           
 16846                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 16847  0B47  3003               	movlw	3
 16848  0B48                     i1l146:	
 16849  0B48  0008               	return
 16850  0B49                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16851                           
 16852                           	psect	text59
 16853  0B59                     __ptext59:	
 16854 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16855 ;; Defined at:
 16856 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;		None
 16859 ;; Auto vars:     Size  Location     Type
 16860 ;;		None
 16861 ;; Return value:  Size  Location     Type
 16862 ;;                  1    wreg      enum E12722
 16863 ;; Registers used:
 16864 ;;		wreg, status,2, status,0, pclath, cstack
 16865 ;; Tracked objects:
 16866 ;;		On entry : 0/0
 16867 ;;		On exit  : 0/0
 16868 ;;		Unchanged: 0/0
 16869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16874 ;;Total ram usage:        0 bytes
 16875 ;; Hardware stack levels used:    1
 16876 ;; Hardware stack levels required when called:    1
 16877 ;; This function calls:
 16878 ;;		_i2c1_driver_TXData
 16879 ;; This function is called by:
 16880 ;;		_i2c_ISR
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           
 16885                           ;psect for function _do_I2C_SEND_ADR_READ
 16886  0B59                     _do_I2C_SEND_ADR_READ:	
 16887  0B59                     i1l4543:	
 16888                           ;incstack = 0
 16889                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16890                           
 16891                           
 16892                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 16893  0B59  0021               	movlb	1	; select bank1
 16894  0B5A  15A0               	bsf	_i2c_status^(0+128),3
 16895  0B5B                     i1l4545:	
 16896                           
 16897                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 16898  0B5B  1403               	setc
 16899  0B5C  0D21               	rlf	(_i2c_status^(0+128)+1),w
 16900  0B5D  318A  22D1  318B   	fcall	_i2c1_driver_TXData
 16901  0B60                     i1l4547:	
 16902                           
 16903                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 16904  0B60  3005               	movlw	5
 16905  0B61                     i1l143:	
 16906  0B61  0008               	return
 16907  0B62                     __end_of_do_I2C_SEND_ADR_READ:	
 16908                           
 16909                           	psect	text60
 16910  0AEA                     __ptext60:	
 16911 ;; *************** function _do_I2C_SEND_STOP *****************
 16912 ;; Defined at:
 16913 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;		None
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;		None
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  1    wreg      enum E12722
 16920 ;; Registers used:
 16921 ;;		wreg, status,2, status,0, pclath, cstack
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/0
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;Total ram usage:        0 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; Hardware stack levels required when called:    1
 16934 ;; This function calls:
 16935 ;;		_i2c1_driver_stop
 16936 ;; This function is called by:
 16937 ;;		_do_I2C_DO_ADDRESS_NACK
 16938 ;;		_do_I2C_TX
 16939 ;;		_do_I2C_TX_EMPTY
 16940 ;;		_i2c_ISR
 16941 ;; This function uses a non-reentrant model
 16942 ;;
 16943                           
 16944                           
 16945                           ;psect for function _do_I2C_SEND_STOP
 16946  0AEA                     _do_I2C_SEND_STOP:	
 16947  0AEA                     i1l4317:	
 16948                           ;incstack = 0
 16949                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16950                           
 16951                           
 16952                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 16953  0AEA  318A  22B0  318A   	fcall	_i2c1_driver_stop
 16954  0AED                     i1l4319:	
 16955                           
 16956                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 16957  0AED  3000               	movlw	0
 16958  0AEE                     i1l140:	
 16959  0AEE  0008               	return
 16960  0AEF                     __end_of_do_I2C_SEND_STOP:	
 16961                           
 16962                           	psect	text61
 16963  0AE5                     __ptext61:	
 16964 ;; *************** function _do_I2C_SEND_RESTART *****************
 16965 ;; Defined at:
 16966 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16967 ;; Parameters:    Size  Location     Type
 16968 ;;		None
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;		None
 16971 ;; Return value:  Size  Location     Type
 16972 ;;                  1    wreg      enum E12722
 16973 ;; Registers used:
 16974 ;;		wreg, status,2, status,0, pclath, cstack
 16975 ;; Tracked objects:
 16976 ;;		On entry : 0/0
 16977 ;;		On exit  : 0/0
 16978 ;;		Unchanged: 0/0
 16979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16984 ;;Total ram usage:        0 bytes
 16985 ;; Hardware stack levels used:    1
 16986 ;; Hardware stack levels required when called:    1
 16987 ;; This function calls:
 16988 ;;		_i2c1_driver_restart
 16989 ;; This function is called by:
 16990 ;;		_do_I2C_DO_ADDRESS_NACK
 16991 ;;		_do_I2C_TX_EMPTY
 16992 ;;		_i2c_ISR
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           
 16997                           ;psect for function _do_I2C_SEND_RESTART
 16998  0AE5                     _do_I2C_SEND_RESTART:	
 16999  0AE5                     i1l4311:	
 17000                           ;incstack = 0
 17001                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17002                           
 17003                           
 17004                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 17005  0AE5  318A  22AD  318A   	fcall	_i2c1_driver_restart
 17006  0AE8                     i1l4313:	
 17007                           
 17008                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 17009  0AE8  3001               	movlw	1
 17010  0AE9                     i1l137:	
 17011  0AE9  0008               	return
 17012  0AEA                     __end_of_do_I2C_SEND_RESTART:	
 17013                           
 17014                           	psect	text62
 17015  0AE0                     __ptext62:	
 17016 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 17017 ;; Defined at:
 17018 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;		None
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;		None
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      enum E12722
 17025 ;; Registers used:
 17026 ;;		wreg, status,2, status,0, pclath, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17036 ;;Total ram usage:        0 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:    1
 17039 ;; This function calls:
 17040 ;;		_i2c1_driver_restart
 17041 ;; This function is called by:
 17042 ;;		_do_I2C_TX
 17043 ;;		_i2c_ISR
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           
 17048                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 17049  0AE0                     _do_I2C_SEND_RESTART_WRITE:	
 17050  0AE0                     i1l4305:	
 17051                           ;incstack = 0
 17052                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 17053                           
 17054                           
 17055                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 17056  0AE0  318A  22AD  318A   	fcall	_i2c1_driver_restart
 17057  0AE3                     i1l4307:	
 17058                           
 17059                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 17060  0AE3  3002               	movlw	2
 17061  0AE4                     i1l134:	
 17062  0AE4  0008               	return
 17063  0AE5                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 17064                           
 17065                           	psect	text63
 17066  0ADB                     __ptext63:	
 17067 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 17068 ;; Defined at:
 17069 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 17070 ;; Parameters:    Size  Location     Type
 17071 ;;		None
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;		None
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  1    wreg      enum E12722
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0, pclath, cstack
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;Total ram usage:        0 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:    1
 17090 ;; This function calls:
 17091 ;;		_i2c1_driver_restart
 17092 ;; This function is called by:
 17093 ;;		_do_I2C_TX
 17094 ;;		_i2c_ISR
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           
 17099                           ;psect for function _do_I2C_SEND_RESTART_READ
 17100  0ADB                     _do_I2C_SEND_RESTART_READ:	
 17101  0ADB                     i1l4299:	
 17102                           ;incstack = 0
 17103                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 17104                           
 17105                           
 17106                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 17107  0ADB  318A  22AD  318A   	fcall	_i2c1_driver_restart
 17108  0ADE                     i1l4301:	
 17109                           
 17110                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 17111  0ADE  3001               	movlw	1
 17112  0ADF                     i1l131:	
 17113  0ADF  0008               	return
 17114  0AE0                     __end_of_do_I2C_SEND_RESTART_READ:	
 17115                           
 17116                           	psect	text64
 17117  0AD6                     __ptext64:	
 17118 ;; *************** function _do_I2C_IDLE *****************
 17119 ;; Defined at:
 17120 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;		None
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;		None
 17125 ;; Return value:  Size  Location     Type
 17126 ;;                  1    wreg      enum E12722
 17127 ;; Registers used:
 17128 ;;		wreg, status,2
 17129 ;; Tracked objects:
 17130 ;;		On entry : 0/0
 17131 ;;		On exit  : 0/0
 17132 ;;		Unchanged: 0/0
 17133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17138 ;;Total ram usage:        0 bytes
 17139 ;; Hardware stack levels used:    1
 17140 ;; This function calls:
 17141 ;;		Nothing
 17142 ;; This function is called by:
 17143 ;;		_i2c_ISR
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           
 17148                           ;psect for function _do_I2C_IDLE
 17149  0AD6                     _do_I2C_IDLE:	
 17150  0AD6                     i1l4535:	
 17151                           ;incstack = 0
 17152                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 17153                           
 17154                           
 17155                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 17156  0AD6  0021               	movlb	1	; select bank1
 17157  0AD7  1020               	bcf	_i2c_status^(0+128),0
 17158  0AD8                     i1l4537:	
 17159                           
 17160                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 17161  0AD8  01AA               	clrf	(_i2c_status^(0+128)+10)
 17162  0AD9                     i1l4539:	
 17163                           
 17164                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 17165  0AD9  300E               	movlw	14
 17166  0ADA                     i1l128:	
 17167  0ADA  0008               	return
 17168  0ADB                     __end_of_do_I2C_IDLE:	
 17169                           
 17170                           	psect	text65
 17171  0B39                     __ptext65:	
 17172 ;; *************** function _do_I2C_RESET *****************
 17173 ;; Defined at:
 17174 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      enum E12722
 17181 ;; Registers used:
 17182 ;;		wreg, status,2, status,0, pclath, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;Total ram usage:        0 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    1
 17195 ;; This function calls:
 17196 ;;		_i2c1_driver_resetBus
 17197 ;; This function is called by:
 17198 ;;		_i2c_ISR
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           
 17203                           ;psect for function _do_I2C_RESET
 17204  0B39                     _do_I2C_RESET:	
 17205  0B39                     i1l4525:	
 17206                           ;incstack = 0
 17207                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 17208                           
 17209                           
 17210                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 17211  0B39  318A  22A5  318B   	fcall	_i2c1_driver_resetBus
 17212  0B3C                     i1l4527:	
 17213                           
 17214                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 17215  0B3C  0021               	movlb	1	; select bank1
 17216  0B3D  1020               	bcf	_i2c_status^(0+128),0
 17217  0B3E                     i1l4529:	
 17218                           
 17219                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 17220  0B3E  01AA               	clrf	(_i2c_status^(0+128)+10)
 17221  0B3F                     i1l4531:	
 17222                           
 17223                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 17224  0B3F  300E               	movlw	14
 17225  0B40                     i1l125:	
 17226  0B40  0008               	return
 17227  0B41                     __end_of_do_I2C_RESET:	
 17228                           
 17229                           	psect	text66
 17230  0F1A                     __ptext66:	
 17231 ;; *************** function _do_I2C_TX_EMPTY *****************
 17232 ;; Defined at:
 17233 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;		None
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;		None
 17238 ;; Return value:  Size  Location     Type
 17239 ;;                  1    wreg      enum E12722
 17240 ;; Registers used:
 17241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17242 ;; Tracked objects:
 17243 ;;		On entry : 0/0
 17244 ;;		On exit  : 0/0
 17245 ;;		Unchanged: 0/0
 17246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17250 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17251 ;;Total ram usage:        3 bytes
 17252 ;; Hardware stack levels used:    1
 17253 ;; Hardware stack levels required when called:    3
 17254 ;; This function calls:
 17255 ;;		Absolute function
 17256 ;;		_do_I2C_SEND_RESTART
 17257 ;;		_do_I2C_SEND_STOP
 17258 ;;		_i2c_restartWrite
 17259 ;;		_mssp1_setIRQ
 17260 ;;		_rd1RegCompleteHandler
 17261 ;;		_rd2RegCompleteHandler
 17262 ;;		_rdBlkRegCompleteHandler
 17263 ;;		_returnReset
 17264 ;;		_returnStop
 17265 ;;		_wr1RegCompleteHandler
 17266 ;;		_wr2RegCompleteHandler
 17267 ;; This function is called by:
 17268 ;;		_i2c_ISR
 17269 ;; This function uses a non-reentrant model
 17270 ;;
 17271                           
 17272                           
 17273                           ;psect for function _do_I2C_TX_EMPTY
 17274  0F1A                     _do_I2C_TX_EMPTY:	
 17275  0F1A                     i1l4661:	
 17276                           ;incstack = 0
 17277                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17278                           
 17279                           
 17280                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 17281  0F1A  0021               	movlb	1	; select bank1
 17282  0F1B  1520               	bsf	_i2c_status^(0+128),2
 17283                           
 17284                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17285  0F1C  2F2A               	goto	i1l4679
 17286  0F1D                     i1l4663:	
 17287                           
 17288                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 17289  0F1D  318A  22E5  318F   	fcall	_do_I2C_SEND_RESTART
 17290  0F20  2F4C               	goto	i1l200
 17291  0F21                     i1l4667:	
 17292                           
 17293                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 17294  0F21  318A  22B9  318F   	fcall	_mssp1_setIRQ
 17295  0F24                     i1l4669:	
 17296                           
 17297                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 17298  0F24  3003               	movlw	3
 17299  0F25  2F4C               	goto	i1l200
 17300  0F26                     i1l4673:	
 17301                           
 17302                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 17303  0F26  318A  22EA  318F   	fcall	_do_I2C_SEND_STOP
 17304  0F29  2F4C               	goto	i1l200
 17305  0F2A                     i1l4679:	
 17306  0F2A  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17307  0F2B  00FA               	movwf	??_do_I2C_TX_EMPTY
 17308  0F2C  087A               	movf	??_do_I2C_TX_EMPTY,w
 17309  0F2D  00F9               	movwf	rdBlkRegCompleteHandler@p
 17310  0F2E  300B               	movlw	11
 17311  0F2F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17312  0F30  0086               	movwf	6
 17313  0F31  0187               	clrf	7
 17314  0F32  3F41               	moviw [1]fsr1
 17315  0F33  008A               	movwf	10
 17316  0F34  3F40               	moviw [0]fsr1
 17317  0F35  000A               	callw
 17318  0F36  318F               	pagesel	$
 17319  0F37  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 17320  0F38  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 17321                           
 17322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17323                           ; Switch size 1, requested type "simple"
 17324                           ; Number of cases is 1, Range of values is 0 to 0
 17325                           ; switch strategies available:
 17326                           ; Name         Instructions Cycles
 17327                           ; simple_byte            4     3 (average)
 17328                           ; direct_byte            8     6 (fixed)
 17329                           ; jumptable            260     6 (fixed)
 17330                           ;	Chosen strategy is simple_byte
 17331  0F39  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 17332  0F3A  3A00               	xorlw	0	; case 0
 17333  0F3B  1903               	skipnz
 17334  0F3C  2F3E               	goto	i1l6937
 17335  0F3D  2F26               	goto	i1l4673
 17336  0F3E                     i1l6937:	
 17337                           
 17338                           ; Switch size 1, requested type "simple"
 17339                           ; Number of cases is 4, Range of values is 1 to 4
 17340                           ; switch strategies available:
 17341                           ; Name         Instructions Cycles
 17342                           ; simple_byte           13     7 (average)
 17343                           ; direct_byte           17     9 (fixed)
 17344                           ; jumptable            263     9 (fixed)
 17345                           ;	Chosen strategy is simple_byte
 17346  0F3E  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 17347  0F3F  3A01               	xorlw	1	; case 1
 17348  0F40  1903               	skipnz
 17349  0F41  2F26               	goto	i1l4673
 17350  0F42  3A03               	xorlw	3	; case 2
 17351  0F43  1903               	skipnz
 17352  0F44  2F1D               	goto	i1l4663
 17353  0F45  3A01               	xorlw	1	; case 3
 17354  0F46  1903               	skipnz
 17355  0F47  2F1D               	goto	i1l4663
 17356  0F48  3A07               	xorlw	7	; case 4
 17357  0F49  1903               	skipnz
 17358  0F4A  2F21               	goto	i1l4667
 17359  0F4B  2F26               	goto	i1l4673
 17360  0F4C                     i1l200:	
 17361  0F4C  0008               	return
 17362  0F4D                     __end_of_do_I2C_TX_EMPTY:	
 17363                           
 17364                           	psect	text67
 17365  0AB9                     __ptext67:	
 17366 ;; *************** function _mssp1_setIRQ *****************
 17367 ;; Defined at:
 17368 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 17369 ;; Parameters:    Size  Location     Type
 17370 ;;		None
 17371 ;; Auto vars:     Size  Location     Type
 17372 ;;		None
 17373 ;; Return value:  Size  Location     Type
 17374 ;;                  1    wreg      void 
 17375 ;; Registers used:
 17376 ;;		None
 17377 ;; Tracked objects:
 17378 ;;		On entry : 0/0
 17379 ;;		On exit  : 0/0
 17380 ;;		Unchanged: 0/0
 17381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17386 ;;Total ram usage:        0 bytes
 17387 ;; Hardware stack levels used:    1
 17388 ;; This function calls:
 17389 ;;		Nothing
 17390 ;; This function is called by:
 17391 ;;		_do_I2C_TX_EMPTY
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           
 17396                           ;psect for function _mssp1_setIRQ
 17397  0AB9                     _mssp1_setIRQ:	
 17398  0AB9                     i1l4349:	
 17399                           ;incstack = 0
 17400                           ; Regs used in _mssp1_setIRQ: []
 17401                           
 17402                           
 17403                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 17404  0AB9  002E               	movlb	14	; select bank14
 17405  0ABA  140F               	bsf	15,0	;volatile
 17406  0ABB                     i1l579:	
 17407  0ABB  0008               	return
 17408  0ABC                     __end_of_mssp1_setIRQ:	
 17409                           
 17410                           	psect	text68
 17411  0B31                     __ptext68:	
 17412 ;; *************** function _i2c1_driver_isNACK *****************
 17413 ;; Defined at:
 17414 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;		None
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;		None
 17419 ;; Return value:  Size  Location     Type
 17420 ;;		None               void
 17421 ;; Registers used:
 17422 ;;		wreg, status,2, status,0
 17423 ;; Tracked objects:
 17424 ;;		On entry : 0/0
 17425 ;;		On exit  : 0/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17432 ;;Total ram usage:        1 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; This function calls:
 17435 ;;		Nothing
 17436 ;; This function is called by:
 17437 ;;		_do_I2C_TX
 17438 ;;		_i2c_ISR
 17439 ;; This function uses a non-reentrant model
 17440 ;;
 17441                           
 17442                           
 17443                           ;psect for function _i2c1_driver_isNACK
 17444  0B31                     _i2c1_driver_isNACK:	
 17445  0B31                     i1l4341:	
 17446                           ;incstack = 0
 17447                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 17448                           
 17449                           
 17450                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 17451  0B31  0023               	movlb	3	; select bank3
 17452  0B32  0E11               	swapf	17,w	;volatile
 17453  0B33  0C89               	rrf	9,f
 17454  0B34  0C89               	rrf	9,f
 17455  0B35  3901               	andlw	1
 17456  0B36  00F0               	movwf	??_i2c1_driver_isNACK
 17457  0B37  0C70               	rrf	??_i2c1_driver_isNACK,w
 17458  0B38                     i1l614:	
 17459  0B38  0008               	return
 17460  0B39                     __end_of_i2c1_driver_isNACK:	
 17461                           
 17462                           	psect	text69
 17463  0AD1                     __ptext69:	
 17464 ;; *************** function _i2c1_driver_TXData *****************
 17465 ;; Defined at:
 17466 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  d               1    wreg     unsigned char 
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;  d               1    0[COMMON] unsigned char 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  1    wreg      void 
 17473 ;; Registers used:
 17474 ;;		wreg
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17484 ;;Total ram usage:        1 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; This function calls:
 17487 ;;		Nothing
 17488 ;; This function is called by:
 17489 ;;		_do_I2C_SEND_ADR_READ
 17490 ;;		_do_I2C_SEND_ADR_WRITE
 17491 ;;		_do_I2C_TX
 17492 ;; This function uses a non-reentrant model
 17493 ;;
 17494                           
 17495                           
 17496                           ;psect for function _i2c1_driver_TXData
 17497  0AD1                     _i2c1_driver_TXData:	
 17498                           
 17499                           ;incstack = 0
 17500                           ; Regs used in _i2c1_driver_TXData: [wreg]
 17501                           ;i2c1_driver_TXData@d stored from wreg
 17502  0AD1  00F0               	movwf	i2c1_driver_TXData@d
 17503  0AD2                     i1l4323:	
 17504                           
 17505                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 17506  0AD2  0870               	movf	i2c1_driver_TXData@d,w
 17507  0AD3  0023               	movlb	3	; select bank3
 17508  0AD4  008C               	movwf	12	;volatile
 17509  0AD5                     i1l629:	
 17510  0AD5  0008               	return
 17511  0AD6                     __end_of_i2c1_driver_TXData:	
 17512                           
 17513                           	psect	text70
 17514  0AB6                     __ptext70:	
 17515 ;; *************** function _i2c1_driver_getRXData *****************
 17516 ;; Defined at:
 17517 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;		None
 17520 ;; Auto vars:     Size  Location     Type
 17521 ;;		None
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  1    wreg      unsigned char 
 17524 ;; Registers used:
 17525 ;;		wreg
 17526 ;; Tracked objects:
 17527 ;;		On entry : 0/0
 17528 ;;		On exit  : 0/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;Total ram usage:        0 bytes
 17536 ;; Hardware stack levels used:    1
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_do_I2C_RX
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           
 17545                           ;psect for function _i2c1_driver_getRXData
 17546  0AB6                     _i2c1_driver_getRXData:	
 17547  0AB6                     i1l4345:	
 17548                           ;incstack = 0
 17549                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 17550                           
 17551                           
 17552                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 17553  0AB6  0023               	movlb	3	; select bank3
 17554  0AB7  080C               	movf	12,w	;volatile
 17555  0AB8                     i1l620:	
 17556  0AB8  0008               	return
 17557  0AB9                     __end_of_i2c1_driver_getRXData:	
 17558                           
 17559                           	psect	text71
 17560  0AC9                     __ptext71:	
 17561 ;; *************** function _i2c1_driver_sendNACK *****************
 17562 ;; Defined at:
 17563 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 17564 ;; Parameters:    Size  Location     Type
 17565 ;;		None
 17566 ;; Auto vars:     Size  Location     Type
 17567 ;;		None
 17568 ;; Return value:  Size  Location     Type
 17569 ;;                  1    wreg      void 
 17570 ;; Registers used:
 17571 ;;		None
 17572 ;; Tracked objects:
 17573 ;;		On entry : 0/0
 17574 ;;		On exit  : 0/0
 17575 ;;		Unchanged: 0/0
 17576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17581 ;;Total ram usage:        0 bytes
 17582 ;; Hardware stack levels used:    1
 17583 ;; This function calls:
 17584 ;;		Nothing
 17585 ;; This function is called by:
 17586 ;;		_do_I2C_DO_NACK_STOP
 17587 ;;		_do_I2C_DO_NACK_RESTART
 17588 ;; This function uses a non-reentrant model
 17589 ;;
 17590                           
 17591                           
 17592                           ;psect for function _i2c1_driver_sendNACK
 17593  0AC9                     _i2c1_driver_sendNACK:	
 17594  0AC9                     i1l4193:	
 17595                           ;incstack = 0
 17596                           ; Regs used in _i2c1_driver_sendNACK: []
 17597                           
 17598                           
 17599                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 17600  0AC9  0023               	movlb	3	; select bank3
 17601  0ACA  1691               	bsf	17,5	;volatile
 17602                           
 17603                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 17604  0ACB  1611               	bsf	17,4	;volatile
 17605  0ACC                     i1l638:	
 17606  0ACC  0008               	return
 17607  0ACD                     __end_of_i2c1_driver_sendNACK:	
 17608                           
 17609                           	psect	text72
 17610  0AA5                     __ptext72:	
 17611 ;; *************** function _i2c1_driver_resetBus *****************
 17612 ;; Defined at:
 17613 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;		None
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;		None
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  1    wreg      void 
 17620 ;; Registers used:
 17621 ;;		None
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17631 ;;Total ram usage:        0 bytes
 17632 ;; Hardware stack levels used:    1
 17633 ;; This function calls:
 17634 ;;		Nothing
 17635 ;; This function is called by:
 17636 ;;		_do_I2C_RESET
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           
 17641                           ;psect for function _i2c1_driver_resetBus
 17642  0AA5                     _i2c1_driver_resetBus:	
 17643  0AA5                     i1l602:	
 17644                           ;incstack = 0
 17645                           ; Regs used in _i2c1_driver_resetBus: []
 17646                           
 17647  0AA5  0008               	return
 17648  0AA6                     __end_of_i2c1_driver_resetBus:	
 17649                           
 17650                           	psect	text73
 17651  0AB3                     __ptext73:	
 17652 ;; *************** function _i2c1_driver_startRX *****************
 17653 ;; Defined at:
 17654 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 17655 ;; Parameters:    Size  Location     Type
 17656 ;;		None
 17657 ;; Auto vars:     Size  Location     Type
 17658 ;;		None
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      void 
 17661 ;; Registers used:
 17662 ;;		None
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17672 ;;Total ram usage:        0 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; This function calls:
 17675 ;;		Nothing
 17676 ;; This function is called by:
 17677 ;;		_do_I2C_RCEN
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681                           
 17682                           ;psect for function _i2c1_driver_startRX
 17683  0AB3                     _i2c1_driver_startRX:	
 17684  0AB3                     i1l4325:	
 17685                           ;incstack = 0
 17686                           ; Regs used in _i2c1_driver_startRX: []
 17687                           
 17688                           
 17689                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 17690  0AB3  0023               	movlb	3	; select bank3
 17691  0AB4  1591               	bsf	17,3	;volatile
 17692  0AB5                     i1l617:	
 17693  0AB5  0008               	return
 17694  0AB6                     __end_of_i2c1_driver_startRX:	
 17695                           
 17696                           	psect	text74
 17697  0CFD                     __ptext74:	
 17698 ;; *************** function _rdBlkRegCompleteHandler *****************
 17699 ;; Defined at:
 17700 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17701 ;; Parameters:    Size  Location     Type
 17702 ;;  p               1    9[COMMON] PTR void 
 17703 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17704 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;		None
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  1    wreg      enum E358
 17709 ;; Registers used:
 17710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17711 ;; Tracked objects:
 17712 ;;		On entry : 0/0
 17713 ;;		On exit  : 0/0
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17720 ;;Total ram usage:        1 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:    2
 17723 ;; This function calls:
 17724 ;;		_i2c_setBuffer
 17725 ;;		_i2c_setDataCompleteCallback
 17726 ;; This function is called by:
 17727 ;;		_i2c_readDataBlock
 17728 ;;		_do_I2C_DO_ADDRESS_NACK
 17729 ;;		_do_I2C_TX
 17730 ;;		_do_I2C_RX
 17731 ;;		_do_I2C_TX_EMPTY
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           
 17736                           ;psect for function _rdBlkRegCompleteHandler
 17737  0CFD                     _rdBlkRegCompleteHandler:	
 17738  0CFD                     i1l4391:	
 17739                           ;incstack = 0
 17740                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17741                           
 17742                           
 17743                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 17744  0CFD  0879               	movf	rdBlkRegCompleteHandler@p,w
 17745  0CFE  0086               	movwf	6
 17746  0CFF  0187               	clrf	7
 17747  0D00  3F40               	moviw [0]fsr1
 17748  0D01  00F0               	movwf	i2c_setBuffer@bufferSize
 17749  0D02  3F41               	moviw [1]fsr1
 17750  0D03  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17751  0D04  0879               	movf	rdBlkRegCompleteHandler@p,w
 17752  0D05  3E02               	addlw	2
 17753  0D06  0086               	movwf	6
 17754  0D07  0187               	clrf	7
 17755  0D08  0801               	movf	1,w
 17756  0D09  318C  242B  318C   	fcall	_i2c_setBuffer
 17757                           
 17758                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17759  0D0C  3000               	movlw	0
 17760  0D0D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17761  0D0E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17762  0D0F  01F7               	clrf	i2c_setDataCompleteCallback@p
 17763  0D10  318B  23D6  318C   	fcall	_i2c_setDataCompleteCallback
 17764  0D13                     i1l4393:	
 17765                           
 17766                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 17767  0D13  3002               	movlw	2
 17768  0D14                     i1l303:	
 17769  0D14  0008               	return
 17770  0D15                     __end_of_rdBlkRegCompleteHandler:	
 17771                           
 17772                           	psect	text75
 17773  07EF                     __ptext75:	
 17774 ;; *************** function _rd2RegCompleteHandler *****************
 17775 ;; Defined at:
 17776 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;  p               1    9[COMMON] PTR void 
 17779 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17780 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17781 ;; Auto vars:     Size  Location     Type
 17782 ;;		None
 17783 ;; Return value:  Size  Location     Type
 17784 ;;                  1    wreg      enum E358
 17785 ;; Registers used:
 17786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17787 ;; Tracked objects:
 17788 ;;		On entry : 0/0
 17789 ;;		On exit  : 0/0
 17790 ;;		Unchanged: 0/0
 17791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;Total ram usage:        1 bytes
 17797 ;; Hardware stack levels used:    1
 17798 ;; Hardware stack levels required when called:    2
 17799 ;; This function calls:
 17800 ;;		_i2c_setBuffer
 17801 ;;		_i2c_setDataCompleteCallback
 17802 ;; This function is called by:
 17803 ;;		_i2c_read2ByteRegister
 17804 ;;		_do_I2C_DO_ADDRESS_NACK
 17805 ;;		_do_I2C_TX
 17806 ;;		_do_I2C_RX
 17807 ;;		_do_I2C_TX_EMPTY
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           
 17812                           ;psect for function _rd2RegCompleteHandler
 17813  07EF                     _rd2RegCompleteHandler:	
 17814  07EF                     i1l4375:	
 17815                           ;incstack = 0
 17816                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17817                           
 17818                           
 17819                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 17820  07EF  3002               	movlw	2
 17821  07F0  00F0               	movwf	i2c_setBuffer@bufferSize
 17822  07F1  3000               	movlw	0
 17823  07F2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17824  07F3  0879               	movf	rd2RegCompleteHandler@p,w
 17825  07F4  318C  242B  3187   	fcall	_i2c_setBuffer
 17826  07F7                     i1l4377:	
 17827                           
 17828                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17829  07F7  3000               	movlw	0
 17830  07F8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17831  07F9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17832  07FA  01F7               	clrf	i2c_setDataCompleteCallback@p
 17833  07FB  318B  23D6  3187   	fcall	_i2c_setDataCompleteCallback
 17834  07FE                     i1l4379:	
 17835                           
 17836                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 17837  07FE  3002               	movlw	2
 17838  07FF                     i1l279:	
 17839  07FF  0008               	return
 17840  0800                     __end_of_rd2RegCompleteHandler:	
 17841                           
 17842                           	psect	text76
 17843  0C7E                     __ptext76:	
 17844 ;; *************** function _rd1RegCompleteHandler *****************
 17845 ;; Defined at:
 17846 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17847 ;; Parameters:    Size  Location     Type
 17848 ;;  p               1    9[COMMON] PTR void 
 17849 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17850 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17851 ;; Auto vars:     Size  Location     Type
 17852 ;;		None
 17853 ;; Return value:  Size  Location     Type
 17854 ;;                  1    wreg      enum E358
 17855 ;; Registers used:
 17856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17857 ;; Tracked objects:
 17858 ;;		On entry : 0/0
 17859 ;;		On exit  : 0/0
 17860 ;;		Unchanged: 0/0
 17861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17862 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17866 ;;Total ram usage:        1 bytes
 17867 ;; Hardware stack levels used:    1
 17868 ;; Hardware stack levels required when called:    2
 17869 ;; This function calls:
 17870 ;;		_i2c_setBuffer
 17871 ;;		_i2c_setDataCompleteCallback
 17872 ;; This function is called by:
 17873 ;;		_i2c_read1ByteRegister
 17874 ;;		_do_I2C_DO_ADDRESS_NACK
 17875 ;;		_do_I2C_TX
 17876 ;;		_do_I2C_RX
 17877 ;;		_do_I2C_TX_EMPTY
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           
 17882                           ;psect for function _rd1RegCompleteHandler
 17883  0C7E                     _rd1RegCompleteHandler:	
 17884  0C7E                     i1l4367:	
 17885                           ;incstack = 0
 17886                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17887                           
 17888                           
 17889                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 17890  0C7E  3001               	movlw	1
 17891  0C7F  00F0               	movwf	i2c_setBuffer@bufferSize
 17892  0C80  3000               	movlw	0
 17893  0C81  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17894  0C82  0879               	movf	rd1RegCompleteHandler@p,w
 17895  0C83  318C  242B  318C   	fcall	_i2c_setBuffer
 17896  0C86                     i1l4369:	
 17897                           
 17898                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17899  0C86  3000               	movlw	0
 17900  0C87  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17901  0C88  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17902  0C89  01F7               	clrf	i2c_setDataCompleteCallback@p
 17903  0C8A  318B  23D6  318C   	fcall	_i2c_setDataCompleteCallback
 17904  0C8D                     i1l4371:	
 17905                           
 17906                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 17907  0C8D  3002               	movlw	2
 17908  0C8E                     i1l264:	
 17909  0C8E  0008               	return
 17910  0C8F                     __end_of_rd1RegCompleteHandler:	
 17911                           
 17912                           	psect	text77
 17913  0C6D                     __ptext77:	
 17914 ;; *************** function _wr1RegCompleteHandler *****************
 17915 ;; Defined at:
 17916 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17917 ;; Parameters:    Size  Location     Type
 17918 ;;  p               1    9[COMMON] PTR void 
 17919 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17920 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;		None
 17923 ;; Return value:  Size  Location     Type
 17924 ;;                  1    wreg      enum E358
 17925 ;; Registers used:
 17926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17927 ;; Tracked objects:
 17928 ;;		On entry : 0/0
 17929 ;;		On exit  : 0/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17936 ;;Total ram usage:        1 bytes
 17937 ;; Hardware stack levels used:    1
 17938 ;; Hardware stack levels required when called:    2
 17939 ;; This function calls:
 17940 ;;		_i2c_setBuffer
 17941 ;;		_i2c_setDataCompleteCallback
 17942 ;; This function is called by:
 17943 ;;		_i2c_write1ByteRegister
 17944 ;;		_do_I2C_DO_ADDRESS_NACK
 17945 ;;		_do_I2C_TX
 17946 ;;		_do_I2C_RX
 17947 ;;		_do_I2C_TX_EMPTY
 17948 ;; This function uses a non-reentrant model
 17949 ;;
 17950                           
 17951                           
 17952                           ;psect for function _wr1RegCompleteHandler
 17953  0C6D                     _wr1RegCompleteHandler:	
 17954  0C6D                     i1l4359:	
 17955                           ;incstack = 0
 17956                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17957                           
 17958                           
 17959                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 17960  0C6D  3001               	movlw	1
 17961  0C6E  00F0               	movwf	i2c_setBuffer@bufferSize
 17962  0C6F  3000               	movlw	0
 17963  0C70  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17964  0C71  0879               	movf	wr1RegCompleteHandler@p,w
 17965  0C72  318C  242B  318C   	fcall	_i2c_setBuffer
 17966  0C75                     i1l4361:	
 17967                           
 17968                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17969  0C75  3000               	movlw	0
 17970  0C76  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17971  0C77  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17972  0C78  01F7               	clrf	i2c_setDataCompleteCallback@p
 17973  0C79  318B  23D6  318C   	fcall	_i2c_setDataCompleteCallback
 17974  0C7C                     i1l4363:	
 17975                           
 17976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 17977  0C7C  3004               	movlw	4
 17978  0C7D                     i1l243:	
 17979  0C7D  0008               	return
 17980  0C7E                     __end_of_wr1RegCompleteHandler:	
 17981                           
 17982                           	psect	text78
 17983  0002                     __ptext78:	
 17984 ;; *************** function _returnReset *****************
 17985 ;; Defined at:
 17986 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;  p               1    9[COMMON] PTR void 
 17989 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17990 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17991 ;; Auto vars:     Size  Location     Type
 17992 ;;		None
 17993 ;; Return value:  Size  Location     Type
 17994 ;;                  1    wreg      enum E12568
 17995 ;; Registers used:
 17996 ;;		wreg
 17997 ;; Tracked objects:
 17998 ;;		On entry : 0/0
 17999 ;;		On exit  : 0/0
 18000 ;;		Unchanged: 0/0
 18001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18006 ;;Total ram usage:        1 bytes
 18007 ;; Hardware stack levels used:    1
 18008 ;; This function calls:
 18009 ;;		Nothing
 18010 ;; This function is called by:
 18011 ;;		_i2c_open
 18012 ;;		_do_I2C_DO_ADDRESS_NACK
 18013 ;;		_do_I2C_TX
 18014 ;;		_do_I2C_RX
 18015 ;;		_do_I2C_TX_EMPTY
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           
 18020                           ;psect for function _returnReset
 18021  0002                     _returnReset:	
 18022  0002                     i1l4355:	
 18023                           ;incstack = 0
 18024                           ; Regs used in _returnReset: [wreg]
 18025                           
 18026                           
 18027                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 18028  0002  3005               	movlw	5
 18029  0003                     i1l219:	
 18030  0003  0008               	return
 18031  0004                     __end_of_returnReset:	
 18032                           
 18033                           	psect	text79
 18034  0AA8                     __ptext79:	
 18035 ;; *************** function _returnStop *****************
 18036 ;; Defined at:
 18037 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;  p               1    9[COMMON] PTR void 
 18040 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18041 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;		None
 18044 ;; Return value:  Size  Location     Type
 18045 ;;                  1    wreg      enum E12568
 18046 ;; Registers used:
 18047 ;;		wreg
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18057 ;;Total ram usage:        1 bytes
 18058 ;; Hardware stack levels used:    1
 18059 ;; This function calls:
 18060 ;;		Nothing
 18061 ;; This function is called by:
 18062 ;;		_setCallBack
 18063 ;;		_i2c_open
 18064 ;;		_do_I2C_DO_ADDRESS_NACK
 18065 ;;		_do_I2C_TX
 18066 ;;		_do_I2C_RX
 18067 ;;		_do_I2C_TX_EMPTY
 18068 ;; This function uses a non-reentrant model
 18069 ;;
 18070                           
 18071                           
 18072                           ;psect for function _returnStop
 18073  0AA8                     _returnStop:	
 18074  0AA8                     i1l4351:	
 18075                           ;incstack = 0
 18076                           ; Regs used in _returnStop: [wreg]
 18077                           
 18078                           
 18079                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 18080  0AA8  3001               	movlw	1
 18081  0AA9                     i1l216:	
 18082  0AA9  0008               	return
 18083  0AAA                     __end_of_returnStop:	
 18084                           
 18085                           	psect	text80
 18086  0AA6                     __ptext80:	
 18087 ;; *************** function _i2c_restartWrite *****************
 18088 ;; Defined at:
 18089 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;  p               1    9[COMMON] PTR void 
 18092 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18093 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;		None
 18096 ;; Return value:  Size  Location     Type
 18097 ;;                  1    wreg      enum E358
 18098 ;; Registers used:
 18099 ;;		wreg
 18100 ;; Tracked objects:
 18101 ;;		On entry : 0/0
 18102 ;;		On exit  : 0/0
 18103 ;;		Unchanged: 0/0
 18104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18109 ;;Total ram usage:        1 bytes
 18110 ;; Hardware stack levels used:    1
 18111 ;; This function calls:
 18112 ;;		Nothing
 18113 ;; This function is called by:
 18114 ;;		_i2c_write1ByteRegister
 18115 ;;		_i2c_writeNBytes
 18116 ;;		_i2c_read1ByteRegister
 18117 ;;		_i2c_read2ByteRegister
 18118 ;;		_i2c_write2ByteRegister
 18119 ;;		_i2c_readDataBlock
 18120 ;;		_do_I2C_DO_ADDRESS_NACK
 18121 ;;		_do_I2C_TX
 18122 ;;		_do_I2C_RX
 18123 ;;		_do_I2C_TX_EMPTY
 18124 ;; This function uses a non-reentrant model
 18125 ;;
 18126                           
 18127                           
 18128                           ;psect for function _i2c_restartWrite
 18129  0AA6                     _i2c_restartWrite:	
 18130  0AA6                     i1l4287:	
 18131                           ;incstack = 0
 18132                           ; Regs used in _i2c_restartWrite: [wreg]
 18133                           
 18134                           
 18135                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 18136  0AA6  3003               	movlw	3
 18137  0AA7                     i1l9:	
 18138  0AA7  0008               	return
 18139  0AA8                     __end_of_i2c_restartWrite:	
 18140                           
 18141                           	psect	text81
 18142  0C5C                     __ptext81:	
 18143 ;; *************** function _wr2RegCompleteHandler *****************
 18144 ;; Defined at:
 18145 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18146 ;; Parameters:    Size  Location     Type
 18147 ;;  p               1    9[COMMON] PTR void 
 18148 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18149 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;		None
 18152 ;; Return value:  Size  Location     Type
 18153 ;;                  1    wreg      enum E358
 18154 ;; Registers used:
 18155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18156 ;; Tracked objects:
 18157 ;;		On entry : 0/0
 18158 ;;		On exit  : 0/0
 18159 ;;		Unchanged: 0/0
 18160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18161 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18165 ;;Total ram usage:        1 bytes
 18166 ;; Hardware stack levels used:    1
 18167 ;; Hardware stack levels required when called:    2
 18168 ;; This function calls:
 18169 ;;		_i2c_setBuffer
 18170 ;;		_i2c_setDataCompleteCallback
 18171 ;; This function is called by:
 18172 ;;		_i2c_write2ByteRegister
 18173 ;;		_do_I2C_DO_ADDRESS_NACK
 18174 ;;		_do_I2C_TX
 18175 ;;		_do_I2C_RX
 18176 ;;		_do_I2C_TX_EMPTY
 18177 ;; This function uses a non-reentrant model
 18178 ;;
 18179                           
 18180                           
 18181                           ;psect for function _wr2RegCompleteHandler
 18182  0C5C                     _wr2RegCompleteHandler:	
 18183  0C5C                     i1l4383:	
 18184                           ;incstack = 0
 18185                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18186                           
 18187                           
 18188                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 18189  0C5C  3002               	movlw	2
 18190  0C5D  00F0               	movwf	i2c_setBuffer@bufferSize
 18191  0C5E  3000               	movlw	0
 18192  0C5F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 18193  0C60  0879               	movf	wr2RegCompleteHandler@p,w
 18194  0C61  318C  242B  318C   	fcall	_i2c_setBuffer
 18195  0C64                     i1l4385:	
 18196                           
 18197                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18198  0C64  3000               	movlw	0
 18199  0C65  00F5               	movwf	i2c_setDataCompleteCallback@cb
 18200  0C66  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 18201  0C67  01F7               	clrf	i2c_setDataCompleteCallback@p
 18202  0C68  318B  23D6  318C   	fcall	_i2c_setDataCompleteCallback
 18203  0C6B                     i1l4387:	
 18204                           
 18205                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 18206  0C6B  3004               	movlw	4
 18207  0C6C                     i1l291:	
 18208  0C6C  0008               	return
 18209  0C6D                     __end_of_wr2RegCompleteHandler:	
 18210                           
 18211                           	psect	text82
 18212  0BD6                     __ptext82:	
 18213 ;; *************** function _i2c_setDataCompleteCallback *****************
 18214 ;; Defined at:
 18215 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 18218 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18219 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 18220 ;;  p               1    7[COMMON] PTR void 
 18221 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18222 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18223 ;; Auto vars:     Size  Location     Type
 18224 ;;		None
 18225 ;; Return value:  Size  Location     Type
 18226 ;;                  1    wreg      void 
 18227 ;; Registers used:
 18228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18229 ;; Tracked objects:
 18230 ;;		On entry : 0/0
 18231 ;;		On exit  : 0/0
 18232 ;;		Unchanged: 0/0
 18233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18238 ;;Total ram usage:        4 bytes
 18239 ;; Hardware stack levels used:    1
 18240 ;; Hardware stack levels required when called:    1
 18241 ;; This function calls:
 18242 ;;		_setCallBack
 18243 ;; This function is called by:
 18244 ;;		_wr1RegCompleteHandler
 18245 ;;		_rd1RegCompleteHandler
 18246 ;;		_rd2RegCompleteHandler
 18247 ;;		_wr2RegCompleteHandler
 18248 ;;		_rdBlkRegCompleteHandler
 18249 ;;		_i2c_write1ByteRegister
 18250 ;;		_i2c_read1ByteRegister
 18251 ;;		_i2c_read2ByteRegister
 18252 ;;		_i2c_write2ByteRegister
 18253 ;;		_i2c_readDataBlock
 18254 ;; This function uses a non-reentrant model
 18255 ;;
 18256                           
 18257                           
 18258                           ;psect for function _i2c_setDataCompleteCallback
 18259  0BD6                     _i2c_setDataCompleteCallback:	
 18260  0BD6                     i1l4181:	
 18261                           ;incstack = 0
 18262                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18263                           
 18264                           
 18265                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 18266  0BD6  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 18267  0BD7  00F1               	movwf	setCallBack@cb+1
 18268  0BD8  0875               	movf	i2c_setDataCompleteCallback@cb,w
 18269  0BD9  00F0               	movwf	setCallBack@cb
 18270  0BDA  0877               	movf	i2c_setDataCompleteCallback@p,w
 18271  0BDB  00F8               	movwf	??_i2c_setDataCompleteCallback
 18272  0BDC  0878               	movf	??_i2c_setDataCompleteCallback,w
 18273  0BDD  00F2               	movwf	setCallBack@p
 18274  0BDE  3000               	movlw	0
 18275  0BDF  318E  266D  318B   	fcall	_setCallBack
 18276  0BE2                     i1l73:	
 18277  0BE2  0008               	return
 18278  0BE3                     __end_of_i2c_setDataCompleteCallback:	
 18279                           
 18280                           	psect	text83
 18281  0E6D                     __ptext83:	
 18282 ;; *************** function _setCallBack *****************
 18283 ;; Defined at:
 18284 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 18285 ;; Parameters:    Size  Location     Type
 18286 ;;  idx             1    wreg     enum E12740
 18287 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 18288 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18289 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 18290 ;;  p               1    2[COMMON] PTR void 
 18291 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18292 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;  idx             1    4[COMMON] enum E12740
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      void 
 18297 ;; Registers used:
 18298 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18308 ;;Total ram usage:        5 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; This function calls:
 18311 ;;		Nothing
 18312 ;; This function is called by:
 18313 ;;		_i2c_setDataCompleteCallback
 18314 ;;		_i2c_setWriteCollisionCallback
 18315 ;;		_i2c_setAddressNACKCallback
 18316 ;;		_i2c_setDataNACKCallback
 18317 ;;		_i2c_setTimeOutCallback
 18318 ;; This function uses a non-reentrant model
 18319 ;;
 18320                           
 18321                           
 18322                           ;psect for function _setCallBack
 18323  0E6D                     _setCallBack:	
 18324                           
 18325                           ;incstack = 0
 18326                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 18327                           ;setCallBack@idx stored from wreg
 18328  0E6D  00F4               	movwf	setCallBack@idx
 18329  0E6E                     i1l4175:	
 18330                           
 18331                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 18332  0E6E  0870               	movf	setCallBack@cb,w
 18333  0E6F  0471               	iorwf	setCallBack@cb+1,w
 18334  0E70  1903               	btfsc	3,2
 18335  0E71  2E73               	goto	u165_21
 18336  0E72  2E74               	goto	u165_20
 18337  0E73                     u165_21:	
 18338  0E73  2E85               	goto	i1l4179
 18339  0E74                     u165_20:	
 18340  0E74                     i1l4177:	
 18341                           
 18342                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 18343  0E74  3574               	lslf	setCallBack@idx,w
 18344  0E75  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18345  0E76  0086               	movwf	6
 18346  0E77  0187               	clrf	7
 18347  0E78  0870               	movf	setCallBack@cb,w
 18348  0E79  3FC0               	movwi [0]fsr1
 18349  0E7A  0871               	movf	setCallBack@cb+1,w
 18350  0E7B  3FC1               	movwi [1]fsr1
 18351                           
 18352                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 18353  0E7C  0872               	movf	setCallBack@p,w
 18354  0E7D  00F3               	movwf	??_setCallBack
 18355  0E7E  0874               	movf	setCallBack@idx,w
 18356  0E7F  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18357  0E80  0086               	movwf	6
 18358  0E81  0187               	clrf	7
 18359  0E82  0873               	movf	??_setCallBack,w
 18360  0E83  0081               	movwf	1
 18361                           
 18362                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 18363  0E84  2E92               	goto	i1l224
 18364  0E85                     i1l4179:	
 18365                           
 18366                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 18367  0E85  3574               	lslf	setCallBack@idx,w
 18368  0E86  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18369  0E87  0086               	movwf	6
 18370  0E88  0187               	clrf	7
 18371  0E89  30A8               	movlw	low _returnStop
 18372  0E8A  3FC0               	movwi [0]fsr1
 18373  0E8B  300A               	movlw	high _returnStop
 18374  0E8C  3FC1               	movwi [1]fsr1
 18375                           
 18376                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 18377  0E8D  0874               	movf	setCallBack@idx,w
 18378  0E8E  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18379  0E8F  0086               	movwf	6
 18380  0E90  0187               	clrf	7
 18381  0E91  0181               	clrf	1
 18382  0E92                     i1l224:	
 18383  0E92  0008               	return
 18384  0E93                     __end_of_setCallBack:	
 18385                           
 18386                           	psect	text84
 18387  0C2B                     __ptext84:	
 18388 ;; *************** function _i2c_setBuffer *****************
 18389 ;; Defined at:
 18390 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18391 ;; Parameters:    Size  Location     Type
 18392 ;;  buffer          1    wreg     PTR void 
 18393 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18394 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18395 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18396 ;;  bufferSize      2    0[COMMON] unsigned int 
 18397 ;; Auto vars:     Size  Location     Type
 18398 ;;  buffer          1    3[COMMON] PTR void 
 18399 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18400 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18401 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      void 
 18404 ;; Registers used:
 18405 ;;		wreg
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;Total ram usage:        4 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; This function calls:
 18418 ;;		Nothing
 18419 ;; This function is called by:
 18420 ;;		_wr1RegCompleteHandler
 18421 ;;		_rd1RegCompleteHandler
 18422 ;;		_rd2RegCompleteHandler
 18423 ;;		_wr2RegCompleteHandler
 18424 ;;		_rdBlkRegCompleteHandler
 18425 ;;		_i2c_write1ByteRegister
 18426 ;;		_i2c_writeNBytes
 18427 ;;		_i2c_read1ByteRegister
 18428 ;;		_i2c_read2ByteRegister
 18429 ;;		_i2c_write2ByteRegister
 18430 ;;		_i2c_readDataBlock
 18431 ;;		_i2c_readNBytes
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           
 18436                           ;psect for function _i2c_setBuffer
 18437  0C2B                     _i2c_setBuffer:	
 18438                           
 18439                           ;incstack = 0
 18440                           ; Regs used in _i2c_setBuffer: [wreg]
 18441                           ;i2c_setBuffer@buffer stored from wreg
 18442  0C2B  00F3               	movwf	i2c_setBuffer@buffer
 18443  0C2C                     i1l4183:	
 18444                           
 18445                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 18446  0C2C  0021               	movlb	1	; select bank1
 18447  0C2D  1D20               	btfss	_i2c_status^(0+128),2
 18448  0C2E  2C30               	goto	u166_21
 18449  0C2F  2C31               	goto	u166_20
 18450  0C30                     u166_21:	
 18451  0C30  2C3A               	goto	i1l103
 18452  0C31                     u166_20:	
 18453  0C31                     i1l4185:	
 18454                           
 18455                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 18456  0C31  0873               	movf	i2c_setBuffer@buffer,w
 18457  0C32  00F2               	movwf	??_i2c_setBuffer
 18458  0C33  0872               	movf	??_i2c_setBuffer,w
 18459  0C34  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 18460                           
 18461                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 18462  0C35  0871               	movf	i2c_setBuffer@bufferSize+1,w
 18463  0C36  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 18464  0C37  0870               	movf	i2c_setBuffer@bufferSize,w
 18465  0C38  00A3               	movwf	(_i2c_status^(0+128)+3)
 18466  0C39                     i1l4187:	
 18467                           
 18468                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 18469  0C39  1120               	bcf	_i2c_status^(0+128),2
 18470  0C3A                     i1l103:	
 18471  0C3A  0008               	return
 18472  0C3B                     __end_of_i2c_setBuffer:	
 18473                           
 18474                           	psect	text85
 18475  0AB0                     __ptext85:	
 18476 ;; *************** function _i2c1_driver_stop *****************
 18477 ;; Defined at:
 18478 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;		None
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;		None
 18483 ;; Return value:  Size  Location     Type
 18484 ;;                  1    wreg      void 
 18485 ;; Registers used:
 18486 ;;		None
 18487 ;; Tracked objects:
 18488 ;;		On entry : 0/0
 18489 ;;		On exit  : 0/0
 18490 ;;		Unchanged: 0/0
 18491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;Total ram usage:        0 bytes
 18497 ;; Hardware stack levels used:    1
 18498 ;; This function calls:
 18499 ;;		Nothing
 18500 ;; This function is called by:
 18501 ;;		_do_I2C_SEND_STOP
 18502 ;; This function uses a non-reentrant model
 18503 ;;
 18504                           
 18505                           
 18506                           ;psect for function _i2c1_driver_stop
 18507  0AB0                     _i2c1_driver_stop:	
 18508  0AB0                     i1l4191:	
 18509                           ;incstack = 0
 18510                           ; Regs used in _i2c1_driver_stop: []
 18511                           
 18512                           
 18513                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 18514  0AB0  0023               	movlb	3	; select bank3
 18515  0AB1  1511               	bsf	17,2	;volatile
 18516  0AB2                     i1l611:	
 18517  0AB2  0008               	return
 18518  0AB3                     __end_of_i2c1_driver_stop:	
 18519                           
 18520                           	psect	text86
 18521  0AAD                     __ptext86:	
 18522 ;; *************** function _i2c1_driver_restart *****************
 18523 ;; Defined at:
 18524 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;		None
 18527 ;; Auto vars:     Size  Location     Type
 18528 ;;		None
 18529 ;; Return value:  Size  Location     Type
 18530 ;;                  1    wreg      void 
 18531 ;; Registers used:
 18532 ;;		None
 18533 ;; Tracked objects:
 18534 ;;		On entry : 0/0
 18535 ;;		On exit  : 0/0
 18536 ;;		Unchanged: 0/0
 18537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18542 ;;Total ram usage:        0 bytes
 18543 ;; Hardware stack levels used:    1
 18544 ;; This function calls:
 18545 ;;		Nothing
 18546 ;; This function is called by:
 18547 ;;		_do_I2C_SEND_RESTART_READ
 18548 ;;		_do_I2C_SEND_RESTART_WRITE
 18549 ;;		_do_I2C_SEND_RESTART
 18550 ;; This function uses a non-reentrant model
 18551 ;;
 18552                           
 18553                           
 18554                           ;psect for function _i2c1_driver_restart
 18555  0AAD                     _i2c1_driver_restart:	
 18556  0AAD                     i1l4189:	
 18557                           ;incstack = 0
 18558                           ; Regs used in _i2c1_driver_restart: []
 18559                           
 18560                           
 18561                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 18562  0AAD  0023               	movlb	3	; select bank3
 18563  0AAE  1491               	bsf	17,1	;volatile
 18564  0AAF                     i1l608:	
 18565  0AAF  0008               	return
 18566  0AB0                     __end_of_i2c1_driver_restart:	
 18567                           
 18568                           	psect	text87
 18569  0AC5                     __ptext87:	
 18570 ;; *************** function _i2c1_driver_sendACK *****************
 18571 ;; Defined at:
 18572 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;		None
 18575 ;; Auto vars:     Size  Location     Type
 18576 ;;		None
 18577 ;; Return value:  Size  Location     Type
 18578 ;;                  1    wreg      void 
 18579 ;; Registers used:
 18580 ;;		None
 18581 ;; Tracked objects:
 18582 ;;		On entry : 0/0
 18583 ;;		On exit  : 0/0
 18584 ;;		Unchanged: 0/0
 18585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18590 ;;Total ram usage:        0 bytes
 18591 ;; Hardware stack levels used:    1
 18592 ;; This function calls:
 18593 ;;		Nothing
 18594 ;; This function is called by:
 18595 ;;		_do_I2C_DO_ACK
 18596 ;;		_do_I2C_RX
 18597 ;; This function uses a non-reentrant model
 18598 ;;
 18599                           
 18600                           
 18601                           ;psect for function _i2c1_driver_sendACK
 18602  0AC5                     _i2c1_driver_sendACK:	
 18603  0AC5                     i1l4327:	
 18604                           ;incstack = 0
 18605                           ; Regs used in _i2c1_driver_sendACK: []
 18606                           
 18607                           
 18608                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 18609  0AC5  0023               	movlb	3	; select bank3
 18610  0AC6  1291               	bcf	17,5	;volatile
 18611                           
 18612                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 18613  0AC7  1611               	bsf	17,4	;volatile
 18614  0AC8                     i1l635:	
 18615  0AC8  0008               	return
 18616  0AC9                     __end_of_i2c1_driver_sendACK:	
 18617                           
 18618                           	psect	text88
 18619  0C0D                     __ptext88:	
 18620 ;; *************** function _TMR2_ISR *****************
 18621 ;; Defined at:
 18622 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 18623 ;; Parameters:    Size  Location     Type
 18624 ;;		None
 18625 ;; Auto vars:     Size  Location     Type
 18626 ;;		None
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		wreg, status,2, status,0, pclath, cstack
 18631 ;; Tracked objects:
 18632 ;;		On entry : 0/0
 18633 ;;		On exit  : 0/0
 18634 ;;		Unchanged: 0/0
 18635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18640 ;;Total ram usage:        0 bytes
 18641 ;; Hardware stack levels used:    1
 18642 ;; Hardware stack levels required when called:    1
 18643 ;; This function calls:
 18644 ;;		Absolute function
 18645 ;;		_TMR2_DefaultInterruptHandler
 18646 ;;		_handler_clock_ms
 18647 ;; This function is called by:
 18648 ;;		_INTERRUPT_InterruptManager
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           
 18653                           ;psect for function _TMR2_ISR
 18654  0C0D                     _TMR2_ISR:	
 18655  0C0D                     i1l5115:	
 18656                           ;incstack = 0
 18657                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18658                           
 18659                           
 18660                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 18661  0C0D  002E               	movlb	14	; select bank14
 18662  0C0E  1090               	bcf	16,1	;volatile
 18663  0C0F                     i1l5117:	
 18664                           
 18665                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 18666  0C0F  0021               	movlb	1	; select bank1
 18667  0C10  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 18668  0C11  044B               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 18669  0C12  1903               	btfsc	3,2
 18670  0C13  2C15               	goto	u232_21
 18671  0C14  2C16               	goto	u232_20
 18672  0C15                     u232_21:	
 18673  0C15  2C1B               	goto	i1l1038
 18674  0C16                     u232_20:	
 18675  0C16                     i1l5119:	
 18676                           
 18677                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 18678  0C16  084B               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 18679  0C17  008A               	movwf	10
 18680  0C18  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 18681  0C19  000A               	callw
 18682  0C1A  318C               	pagesel	$
 18683  0C1B                     i1l1038:	
 18684  0C1B  0008               	return
 18685  0C1C                     __end_of_TMR2_ISR:	
 18686                           
 18687                           	psect	text89
 18688  0AA4                     __ptext89:	
 18689 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 18690 ;; Defined at:
 18691 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      void 
 18698 ;; Registers used:
 18699 ;;		None
 18700 ;; Tracked objects:
 18701 ;;		On entry : 0/0
 18702 ;;		On exit  : 0/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;Total ram usage:        0 bytes
 18710 ;; Hardware stack levels used:    1
 18711 ;; This function calls:
 18712 ;;		Nothing
 18713 ;; This function is called by:
 18714 ;;		_TMR2_Initialize
 18715 ;;		_TMR2_ISR
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           
 18719                           
 18720                           ;psect for function _TMR2_DefaultInterruptHandler
 18721  0AA4                     _TMR2_DefaultInterruptHandler:	
 18722  0AA4                     i1l1044:	
 18723                           ;incstack = 0
 18724                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 18725                           
 18726  0AA4  0008               	return
 18727  0AA5                     __end_of_TMR2_DefaultInterruptHandler:	
 18728                           
 18729                           	psect	text90
 18730  0BB1                     __ptext90:	
 18731 ;; *************** function _handler_clock_ms *****************
 18732 ;; Defined at:
 18733 ;;		line 488 in file "main.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;		None
 18736 ;; Auto vars:     Size  Location     Type
 18737 ;;		None
 18738 ;; Return value:  Size  Location     Type
 18739 ;;                  1    wreg      void 
 18740 ;; Registers used:
 18741 ;;		wreg, status,2, status,0
 18742 ;; Tracked objects:
 18743 ;;		On entry : 0/0
 18744 ;;		On exit  : 0/0
 18745 ;;		Unchanged: 0/0
 18746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18751 ;;Total ram usage:        1 bytes
 18752 ;; Hardware stack levels used:    1
 18753 ;; This function calls:
 18754 ;;		Nothing
 18755 ;; This function is called by:
 18756 ;;		_main
 18757 ;;		_TMR2_ISR
 18758 ;; This function uses a non-reentrant model
 18759 ;;
 18760                           
 18761                           
 18762                           ;psect for function _handler_clock_ms
 18763  0BB1                     _handler_clock_ms:	
 18764  0BB1                     i1l4947:	
 18765                           ;incstack = 0
 18766                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 18767                           
 18768                           
 18769                           ;main.c: 489:     clkms++;
 18770  0BB1  3001               	movlw	1
 18771  0BB2  00F0               	movwf	??_handler_clock_ms
 18772  0BB3  0870               	movf	??_handler_clock_ms,w
 18773  0BB4  07FD               	addwf	_clkms,f	;volatile
 18774  0BB5                     i1l4949:	
 18775                           
 18776                           ;main.c: 491:     if(clkms > 200){
 18777  0BB5  30C9               	movlw	201
 18778  0BB6  027D               	subwf	_clkms,w	;volatile
 18779  0BB7  1C03               	skipc
 18780  0BB8  2BBA               	goto	u209_21
 18781  0BB9  2BBB               	goto	u209_20
 18782  0BBA                     u209_21:	
 18783  0BBA  2BBC               	goto	i1l1329
 18784  0BBB                     u209_20:	
 18785  0BBB                     i1l4951:	
 18786                           
 18787                           ;main.c: 492:         clkms = 0;
 18788  0BBB  01FD               	clrf	_clkms	;volatile
 18789  0BBC                     i1l1329:	
 18790  0BBC  0008               	return
 18791  0BBD                     __end_of_handler_clock_ms:	
 18792                           
 18793                           	psect	text91
 18794  0CE6                     __ptext91:	
 18795 ;; *************** function _TMR1_ISR *****************
 18796 ;; Defined at:
 18797 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;		None
 18800 ;; Auto vars:     Size  Location     Type
 18801 ;;		None
 18802 ;; Return value:  Size  Location     Type
 18803 ;;                  1    wreg      void 
 18804 ;; Registers used:
 18805 ;;		wreg, status,2, status,0, pclath, cstack
 18806 ;; Tracked objects:
 18807 ;;		On entry : 0/0
 18808 ;;		On exit  : 0/0
 18809 ;;		Unchanged: 0/0
 18810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18815 ;;Total ram usage:        0 bytes
 18816 ;; Hardware stack levels used:    1
 18817 ;; Hardware stack levels required when called:    1
 18818 ;; This function calls:
 18819 ;;		Absolute function
 18820 ;;		_TMR1_DefaultInterruptHandler
 18821 ;;		_TMR1_WriteTimer
 18822 ;;		_handler_clock_hms
 18823 ;; This function is called by:
 18824 ;;		_INTERRUPT_InterruptManager
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828                           
 18829                           ;psect for function _TMR1_ISR
 18830  0CE6                     _TMR1_ISR:	
 18831  0CE6                     i1l5107:	
 18832                           ;incstack = 0
 18833                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18834                           
 18835                           
 18836                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 18837  0CE6  002E               	movlb	14	; select bank14
 18838  0CE7  1010               	bcf	16,0	;volatile
 18839  0CE8                     i1l5109:	
 18840                           
 18841                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 18842  0CE8  0020               	movlb	0	; select bank0
 18843  0CE9  0867               	movf	_timer1ReloadVal+1,w	;volatile
 18844  0CEA  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18845  0CEB  0866               	movf	_timer1ReloadVal,w	;volatile
 18846  0CEC  00F0               	movwf	TMR1_WriteTimer@timerVal
 18847  0CED  318C  244B  318C   	fcall	_TMR1_WriteTimer
 18848  0CF0                     i1l5111:	
 18849                           
 18850                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 18851  0CF0  0020               	movlb	0	; select bank0
 18852  0CF1  0864               	movf	_TMR1_InterruptHandler,w
 18853  0CF2  0465               	iorwf	_TMR1_InterruptHandler+1,w
 18854  0CF3  1903               	btfsc	3,2
 18855  0CF4  2CF6               	goto	u231_21
 18856  0CF5  2CF7               	goto	u231_20
 18857  0CF6                     u231_21:	
 18858  0CF6  2CFC               	goto	i1l896
 18859  0CF7                     u231_20:	
 18860  0CF7                     i1l5113:	
 18861                           
 18862                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 18863  0CF7  0865               	movf	_TMR1_InterruptHandler+1,w
 18864  0CF8  008A               	movwf	10
 18865  0CF9  0864               	movf	_TMR1_InterruptHandler,w
 18866  0CFA  000A               	callw
 18867  0CFB  318C               	pagesel	$
 18868  0CFC                     i1l896:	
 18869  0CFC  0008               	return
 18870  0CFD                     __end_of_TMR1_ISR:	
 18871                           
 18872                           	psect	text92
 18873  0AA3                     __ptext92:	
 18874 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18875 ;; Defined at:
 18876 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18877 ;; Parameters:    Size  Location     Type
 18878 ;;		None
 18879 ;; Auto vars:     Size  Location     Type
 18880 ;;		None
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      void 
 18883 ;; Registers used:
 18884 ;;		None
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 0/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18894 ;;Total ram usage:        0 bytes
 18895 ;; Hardware stack levels used:    1
 18896 ;; This function calls:
 18897 ;;		Nothing
 18898 ;; This function is called by:
 18899 ;;		_TMR1_Initialize
 18900 ;;		_TMR1_ISR
 18901 ;; This function uses a non-reentrant model
 18902 ;;
 18903                           
 18904                           
 18905                           ;psect for function _TMR1_DefaultInterruptHandler
 18906  0AA3                     _TMR1_DefaultInterruptHandler:	
 18907  0AA3                     i1l902:	
 18908                           ;incstack = 0
 18909                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18910                           
 18911  0AA3  0008               	return
 18912  0AA4                     __end_of_TMR1_DefaultInterruptHandler:	
 18913                           
 18914                           	psect	text93
 18915  0F4D                     __ptext93:	
 18916 ;; *************** function _handler_clock_hms *****************
 18917 ;; Defined at:
 18918 ;;		line 469 in file "main.c"
 18919 ;; Parameters:    Size  Location     Type
 18920 ;;		None
 18921 ;; Auto vars:     Size  Location     Type
 18922 ;;		None
 18923 ;; Return value:  Size  Location     Type
 18924 ;;                  1    wreg      void 
 18925 ;; Registers used:
 18926 ;;		wreg, status,2, status,0
 18927 ;; Tracked objects:
 18928 ;;		On entry : 0/0
 18929 ;;		On exit  : 0/0
 18930 ;;		Unchanged: 0/0
 18931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18936 ;;Total ram usage:        1 bytes
 18937 ;; Hardware stack levels used:    1
 18938 ;; This function calls:
 18939 ;;		Nothing
 18940 ;; This function is called by:
 18941 ;;		_main
 18942 ;;		_TMR1_ISR
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946                           
 18947                           ;psect for function _handler_clock_hms
 18948  0F4D                     _handler_clock_hms:	
 18949  0F4D                     i1l4927:	
 18950                           ;incstack = 0
 18951                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 18952                           
 18953                           
 18954                           ;main.c: 471:     if(!config_mode){
 18955  0F4D  0020               	movlb	0	; select bank0
 18956  0F4E  0839               	movf	_config_mode,w	;volatile
 18957  0F4F  1D03               	btfss	3,2
 18958  0F50  2F52               	goto	u204_21
 18959  0F51  2F53               	goto	u204_20
 18960  0F52                     u204_21:	
 18961  0F52  2F5E               	goto	i1l4931
 18962  0F53                     u204_20:	
 18963  0F53                     i1l4929:	
 18964  0F53  1003               	clrc
 18965  0F54  1F96               	btfss	22,7	;volatile
 18966  0F55  1403               	setc
 18967  0F56  1803               	btfsc	3,0
 18968  0F57  2F59               	goto	u205_21
 18969  0F58  2F5C               	goto	u205_20
 18970  0F59                     u205_21:	
 18971  0F59  0020               	movlb	0	; select bank0
 18972  0F5A  1796               	bsf	22,7	;volatile
 18973  0F5B  2F5E               	goto	u206_24
 18974  0F5C                     u205_20:	
 18975  0F5C  0020               	movlb	0	; select bank0
 18976  0F5D  1396               	bcf	22,7	;volatile
 18977  0F5E                     u206_24:	
 18978  0F5E                     i1l4931:	
 18979                           
 18980                           ;main.c: 475:     last5s++;
 18981  0F5E  3001               	movlw	1
 18982  0F5F  00F0               	movwf	??_handler_clock_hms
 18983  0F60  0870               	movf	??_handler_clock_hms,w
 18984  0F61  07BC               	addwf	_last5s,f	;volatile
 18985  0F62                     i1l4933:	
 18986                           
 18987                           ;main.c: 476:     seg++;
 18988  0F62  3001               	movlw	1
 18989  0F63  00F0               	movwf	??_handler_clock_hms
 18990  0F64  0870               	movf	??_handler_clock_hms,w
 18991  0F65  07BF               	addwf	_seg,f	;volatile
 18992  0F66                     i1l4935:	
 18993                           
 18994                           ;main.c: 477:     if(seg >= 60) {
 18995  0F66  303C               	movlw	60
 18996  0F67  023F               	subwf	_seg,w	;volatile
 18997  0F68  1C03               	skipc
 18998  0F69  2F6B               	goto	u207_21
 18999  0F6A  2F6C               	goto	u207_20
 19000  0F6B                     u207_21:	
 19001  0F6B  2F80               	goto	i1l1325
 19002  0F6C                     u207_20:	
 19003  0F6C                     i1l4937:	
 19004                           
 19005                           ;main.c: 478:         clkm++;
 19006  0F6C  3001               	movlw	1
 19007  0F6D  00F0               	movwf	??_handler_clock_hms
 19008  0F6E  0870               	movf	??_handler_clock_hms,w
 19009  0F6F  07C0               	addwf	_clkm,f	;volatile
 19010                           
 19011                           ;main.c: 479:         last1m++;
 19012  0F70  3001               	movlw	1
 19013  0F71  00F0               	movwf	??_handler_clock_hms
 19014  0F72  0870               	movf	??_handler_clock_hms,w
 19015  0F73  07BB               	addwf	_last1m,f	;volatile
 19016  0F74                     i1l4939:	
 19017                           
 19018                           ;main.c: 480:         seg = 0;
 19019  0F74  01BF               	clrf	_seg	;volatile
 19020  0F75                     i1l4941:	
 19021                           
 19022                           ;main.c: 481:         if(clkm >= 60) {
 19023  0F75  303C               	movlw	60
 19024  0F76  0240               	subwf	_clkm,w	;volatile
 19025  0F77  1C03               	skipc
 19026  0F78  2F7A               	goto	u208_21
 19027  0F79  2F7B               	goto	u208_20
 19028  0F7A                     u208_21:	
 19029  0F7A  2F80               	goto	i1l1325
 19030  0F7B                     u208_20:	
 19031  0F7B                     i1l4943:	
 19032                           
 19033                           ;main.c: 482:             clkh++;
 19034  0F7B  3001               	movlw	1
 19035  0F7C  00F0               	movwf	??_handler_clock_hms
 19036  0F7D  0870               	movf	??_handler_clock_hms,w
 19037  0F7E  07C1               	addwf	_clkh,f	;volatile
 19038  0F7F                     i1l4945:	
 19039                           
 19040                           ;main.c: 483:             clkm = 0;
 19041  0F7F  01C0               	clrf	_clkm	;volatile
 19042  0F80                     i1l1325:	
 19043  0F80  0008               	return
 19044  0F81                     __end_of_handler_clock_hms:	
 19045                           
 19046                           	psect	text94
 19047  0C4B                     __ptext94:	
 19048 ;; *************** function _TMR1_WriteTimer *****************
 19049 ;; Defined at:
 19050 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 19051 ;; Parameters:    Size  Location     Type
 19052 ;;  timerVal        2    0[COMMON] unsigned short 
 19053 ;; Auto vars:     Size  Location     Type
 19054 ;;		None
 19055 ;; Return value:  Size  Location     Type
 19056 ;;                  1    wreg      void 
 19057 ;; Registers used:
 19058 ;;		wreg, status,2
 19059 ;; Tracked objects:
 19060 ;;		On entry : 0/0
 19061 ;;		On exit  : 0/0
 19062 ;;		Unchanged: 0/0
 19063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19068 ;;Total ram usage:        2 bytes
 19069 ;; Hardware stack levels used:    1
 19070 ;; This function calls:
 19071 ;;		Nothing
 19072 ;; This function is called by:
 19073 ;;		_TMR1_ISR
 19074 ;;		_TMR1_Reload
 19075 ;; This function uses a non-reentrant model
 19076 ;;
 19077                           
 19078                           
 19079                           ;psect for function _TMR1_WriteTimer
 19080  0C4B                     _TMR1_WriteTimer:	
 19081  0C4B                     i1l4831:	
 19082                           ;incstack = 0
 19083                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 19084                           
 19085                           
 19086                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 19087  0C4B  0024               	movlb	4	; select bank4
 19088  0C4C  1D0E               	btfss	14,2	;volatile
 19089  0C4D  2C4F               	goto	u197_21
 19090  0C4E  2C50               	goto	u197_20
 19091  0C4F                     u197_21:	
 19092  0C4F  2C57               	goto	i1l4841
 19093  0C50                     u197_20:	
 19094  0C50                     i1l4833:	
 19095                           
 19096                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 19097  0C50  100E               	bcf	14,0	;volatile
 19098  0C51                     i1l4835:	
 19099                           
 19100                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 19101  0C51  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 19102  0C52  008D               	movwf	13	;volatile
 19103  0C53                     i1l4837:	
 19104                           
 19105                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 19106  0C53  0870               	movf	TMR1_WriteTimer@timerVal,w
 19107  0C54  008C               	movwf	12	;volatile
 19108  0C55                     i1l4839:	
 19109                           
 19110                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 19111  0C55  140E               	bsf	14,0	;volatile
 19112                           
 19113                           ;mcc_generated_files/tmr1.c: 140:     }
 19114  0C56  2C5B               	goto	i1l883
 19115  0C57                     i1l4841:	
 19116                           
 19117                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 19118  0C57  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 19119  0C58  008D               	movwf	13	;volatile
 19120  0C59                     i1l4843:	
 19121                           
 19122                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 19123  0C59  0870               	movf	TMR1_WriteTimer@timerVal,w
 19124  0C5A  008C               	movwf	12	;volatile
 19125  0C5B                     i1l883:	
 19126  0C5B  0008               	return
 19127  0C5C                     __end_of_TMR1_WriteTimer:	
 19128                           
 19129                           	psect	text95
 19130  0BFE                     __ptext95:	
 19131 ;; *************** function _TMR0_ISR *****************
 19132 ;; Defined at:
 19133 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      void 
 19140 ;; Registers used:
 19141 ;;		wreg, status,2, status,0, pclath, cstack
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    2
 19154 ;; This function calls:
 19155 ;;		Absolute function
 19156 ;;		_ISR_3s
 19157 ;;		_TMR0_DefaultInterruptHandler
 19158 ;; This function is called by:
 19159 ;;		_INTERRUPT_InterruptManager
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           
 19164                           ;psect for function _TMR0_ISR
 19165  0BFE                     _TMR0_ISR:	
 19166  0BFE                     i1l5101:	
 19167                           ;incstack = 0
 19168                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 19169                           
 19170                           
 19171                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 19172  0BFE  002E               	movlb	14	; select bank14
 19173  0BFF  128C               	bcf	12,5	;volatile
 19174  0C00                     i1l5103:	
 19175                           
 19176                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 19177  0C00  0021               	movlb	1	; select bank1
 19178  0C01  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 19179  0C02  0449               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 19180  0C03  1903               	btfsc	3,2
 19181  0C04  2C06               	goto	u230_21
 19182  0C05  2C07               	goto	u230_20
 19183  0C06                     u230_21:	
 19184  0C06  2C0C               	goto	i1l1629
 19185  0C07                     u230_20:	
 19186  0C07                     i1l5105:	
 19187                           
 19188                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 19189  0C07  0849               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 19190  0C08  008A               	movwf	10
 19191  0C09  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 19192  0C0A  000A               	callw
 19193  0C0B  318B               	pagesel	$
 19194  0C0C                     i1l1629:	
 19195  0C0C  0008               	return
 19196  0C0D                     __end_of_TMR0_ISR:	
 19197                           
 19198                           	psect	text96
 19199  0D2D                     __ptext96:	
 19200 ;; *************** function _ISR_3s *****************
 19201 ;; Defined at:
 19202 ;;		line 131 in file "main.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;		None
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;		None
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  1    wreg      void 
 19209 ;; Registers used:
 19210 ;;		wreg, status,2, status,0, pclath, cstack
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19220 ;;Total ram usage:        1 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:    1
 19223 ;; This function calls:
 19224 ;;		_TMR0_StopTimer
 19225 ;;		i1_PWM6_LoadDutyValue
 19226 ;; This function is called by:
 19227 ;;		_main
 19228 ;;		_TMR0_ISR
 19229 ;; This function uses a non-reentrant model
 19230 ;;
 19231                           
 19232                           
 19233                           ;psect for function _ISR_3s
 19234  0D2D                     _ISR_3s:	
 19235  0D2D                     i1l4845:	
 19236                           ;incstack = 0
 19237                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 19238                           
 19239                           
 19240                           ;main.c: 133:     if (lum_threshold){
 19241  0D2D  0020               	movlb	0	; select bank0
 19242  0D2E  0820               	movf	_lum_threshold,w
 19243  0D2F  0421               	iorwf	_lum_threshold+1,w
 19244  0D30  1903               	btfsc	3,2
 19245  0D31  2D33               	goto	u198_21
 19246  0D32  2D34               	goto	u198_20
 19247  0D33                     u198_21:	
 19248  0D33  2D40               	goto	i1l1215
 19249  0D34                     u198_20:	
 19250  0D34                     i1l4847:	
 19251                           
 19252                           ;main.c: 134:         PWM6_LoadDutyValue(1023);
 19253  0D34  30FF               	movlw	255
 19254  0D35  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 19255  0D36  3003               	movlw	3
 19256  0D37  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 19257  0D38  318C  24A4  318D   	fcall	i1_PWM6_LoadDutyValue
 19258  0D3B                     i1l4849:	
 19259                           
 19260                           ;main.c: 135:         alarm = 1;
 19261  0D3B  3001               	movlw	1
 19262  0D3C  00F4               	movwf	??_ISR_3s
 19263  0D3D  0874               	movf	??_ISR_3s,w
 19264  0D3E  0020               	movlb	0	; select bank0
 19265  0D3F  00B8               	movwf	_alarm	;volatile
 19266  0D40                     i1l1215:	
 19267                           ;main.c: 137:     }
 19268                           
 19269                           
 19270                           ;main.c: 139:     TMR0_StopTimer();
 19271  0D40  318A  22AA  318D   	fcall	_TMR0_StopTimer
 19272  0D43                     i1l4851:	
 19273                           
 19274                           ;main.c: 140:     PIE0bits.TMR0IE = 0;
 19275  0D43  002E               	movlb	14	; select bank14
 19276  0D44  1296               	bcf	22,5	;volatile
 19277  0D45                     i1l1216:	
 19278  0D45  0008               	return
 19279  0D46                     __end_of_ISR_3s:	
 19280                           
 19281                           	psect	text97
 19282  0AA2                     __ptext97:	
 19283 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 19284 ;; Defined at:
 19285 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 19286 ;; Parameters:    Size  Location     Type
 19287 ;;		None
 19288 ;; Auto vars:     Size  Location     Type
 19289 ;;		None
 19290 ;; Return value:  Size  Location     Type
 19291 ;;                  1    wreg      void 
 19292 ;; Registers used:
 19293 ;;		None
 19294 ;; Tracked objects:
 19295 ;;		On entry : 0/0
 19296 ;;		On exit  : 0/0
 19297 ;;		Unchanged: 0/0
 19298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19303 ;;Total ram usage:        0 bytes
 19304 ;; Hardware stack levels used:    1
 19305 ;; This function calls:
 19306 ;;		Nothing
 19307 ;; This function is called by:
 19308 ;;		_TMR0_Initialize
 19309 ;;		_TMR0_ISR
 19310 ;; This function uses a non-reentrant model
 19311 ;;
 19312                           
 19313                           
 19314                           ;psect for function _TMR0_DefaultInterruptHandler
 19315  0AA2                     _TMR0_DefaultInterruptHandler:	
 19316  0AA2                     i1l1635:	
 19317                           ;incstack = 0
 19318                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 19319                           
 19320  0AA2  0008               	return
 19321  0AA3                     __end_of_TMR0_DefaultInterruptHandler:	
 19322                           
 19323                           	psect	text98
 19324  0AAA                     __ptext98:	
 19325 ;; *************** function _TMR0_StopTimer *****************
 19326 ;; Defined at:
 19327 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 19328 ;; Parameters:    Size  Location     Type
 19329 ;;		None
 19330 ;; Auto vars:     Size  Location     Type
 19331 ;;		None
 19332 ;; Return value:  Size  Location     Type
 19333 ;;                  1    wreg      void 
 19334 ;; Registers used:
 19335 ;;		None
 19336 ;; Tracked objects:
 19337 ;;		On entry : 0/0
 19338 ;;		On exit  : 0/0
 19339 ;;		Unchanged: 0/0
 19340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19345 ;;Total ram usage:        0 bytes
 19346 ;; Hardware stack levels used:    1
 19347 ;; This function calls:
 19348 ;;		Nothing
 19349 ;; This function is called by:
 19350 ;;		_ISR_3s
 19351 ;; This function uses a non-reentrant model
 19352 ;;
 19353                           
 19354                           
 19355                           ;psect for function _TMR0_StopTimer
 19356  0AAA                     _TMR0_StopTimer:	
 19357  0AAA                     i1l4439:	
 19358                           ;incstack = 0
 19359                           ; Regs used in _TMR0_StopTimer: []
 19360                           
 19361                           
 19362                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 19363  0AAA  0020               	movlb	0	; select bank0
 19364  0AAB  139E               	bcf	30,7	;volatile
 19365  0AAC                     i1l1616:	
 19366  0AAC  0008               	return
 19367  0AAD                     __end_of_TMR0_StopTimer:	
 19368                           
 19369                           	psect	text99
 19370  0AFE                     __ptext99:	
 19371 ;; *************** function _INT_ISR *****************
 19372 ;; Defined at:
 19373 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 19374 ;; Parameters:    Size  Location     Type
 19375 ;;		None
 19376 ;; Auto vars:     Size  Location     Type
 19377 ;;		None
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1    wreg      void 
 19380 ;; Registers used:
 19381 ;;		wreg, status,2, status,0, pclath, cstack
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/0
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19391 ;;Total ram usage:        0 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:    3
 19394 ;; This function calls:
 19395 ;;		_INT_CallBack
 19396 ;; This function is called by:
 19397 ;;		_INTERRUPT_InterruptManager
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           
 19402                           ;psect for function _INT_ISR
 19403  0AFE                     _INT_ISR:	
 19404  0AFE                     i1l5097:	
 19405                           ;incstack = 0
 19406                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 19407                           
 19408                           
 19409                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 19410  0AFE  002E               	movlb	14	; select bank14
 19411  0AFF  100C               	bcf	12,0	;volatile
 19412  0B00                     i1l5099:	
 19413                           
 19414                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 19415  0B00  318B  23C9  318A   	fcall	_INT_CallBack
 19416  0B03                     i1l334:	
 19417  0B03  0008               	return
 19418  0B04                     __end_of_INT_ISR:	
 19419                           
 19420                           	psect	text100
 19421  0BC9                     __ptext100:	
 19422 ;; *************** function _INT_CallBack *****************
 19423 ;; Defined at:
 19424 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 19425 ;; Parameters:    Size  Location     Type
 19426 ;;		None
 19427 ;; Auto vars:     Size  Location     Type
 19428 ;;		None
 19429 ;; Return value:  Size  Location     Type
 19430 ;;                  1    wreg      void 
 19431 ;; Registers used:
 19432 ;;		wreg, status,2, status,0, pclath, cstack
 19433 ;; Tracked objects:
 19434 ;;		On entry : 0/0
 19435 ;;		On exit  : 0/0
 19436 ;;		Unchanged: 0/0
 19437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19442 ;;Total ram usage:        0 bytes
 19443 ;; Hardware stack levels used:    1
 19444 ;; Hardware stack levels required when called:    2
 19445 ;; This function calls:
 19446 ;;		Absolute function
 19447 ;;		_INT_DefaultInterruptHandler
 19448 ;;		_sw1_EXT
 19449 ;; This function is called by:
 19450 ;;		_INT_ISR
 19451 ;; This function uses a non-reentrant model
 19452 ;;
 19453                           
 19454                           
 19455                           ;psect for function _INT_CallBack
 19456  0BC9                     _INT_CallBack:	
 19457  0BC9                     i1l4689:	
 19458                           ;incstack = 0
 19459                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 19460                           
 19461                           
 19462                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 19463  0BC9  0020               	movlb	0	; select bank0
 19464  0BCA  0868               	movf	_INT_InterruptHandler,w
 19465  0BCB  0469               	iorwf	_INT_InterruptHandler+1,w
 19466  0BCC  1903               	btfsc	3,2
 19467  0BCD  2BCF               	goto	u196_21
 19468  0BCE  2BD0               	goto	u196_20
 19469  0BCF                     u196_21:	
 19470  0BCF  2BD5               	goto	i1l338
 19471  0BD0                     u196_20:	
 19472  0BD0                     i1l4691:	
 19473                           
 19474                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 19475  0BD0  0869               	movf	_INT_InterruptHandler+1,w
 19476  0BD1  008A               	movwf	10
 19477  0BD2  0868               	movf	_INT_InterruptHandler,w
 19478  0BD3  000A               	callw
 19479  0BD4  318B               	pagesel	$
 19480  0BD5                     i1l338:	
 19481  0BD5  0008               	return
 19482  0BD6                     __end_of_INT_CallBack:	
 19483                           
 19484                           	psect	text101
 19485  0AA1                     __ptext101:	
 19486 ;; *************** function _INT_DefaultInterruptHandler *****************
 19487 ;; Defined at:
 19488 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 19489 ;; Parameters:    Size  Location     Type
 19490 ;;		None
 19491 ;; Auto vars:     Size  Location     Type
 19492 ;;		None
 19493 ;; Return value:  Size  Location     Type
 19494 ;;                  1    wreg      void 
 19495 ;; Registers used:
 19496 ;;		None
 19497 ;; Tracked objects:
 19498 ;;		On entry : 0/0
 19499 ;;		On exit  : 0/0
 19500 ;;		Unchanged: 0/0
 19501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19506 ;;Total ram usage:        0 bytes
 19507 ;; Hardware stack levels used:    1
 19508 ;; This function calls:
 19509 ;;		Nothing
 19510 ;; This function is called by:
 19511 ;;		_EXT_INT_Initialize
 19512 ;;		_INT_CallBack
 19513 ;; This function uses a non-reentrant model
 19514 ;;
 19515                           
 19516                           
 19517                           ;psect for function _INT_DefaultInterruptHandler
 19518  0AA1                     _INT_DefaultInterruptHandler:	
 19519  0AA1                     i1l344:	
 19520                           ;incstack = 0
 19521                           ; Regs used in _INT_DefaultInterruptHandler: []
 19522                           
 19523  0AA1  0008               	return
 19524  0AA2                     __end_of_INT_DefaultInterruptHandler:	
 19525                           
 19526                           	psect	text102
 19527  0EEC                     __ptext102:	
 19528 ;; *************** function _sw1_EXT *****************
 19529 ;; Defined at:
 19530 ;;		line 99 in file "main.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;		None
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		wreg, status,2, status,0, pclath, cstack
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19548 ;;Total ram usage:        1 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    1
 19551 ;; This function calls:
 19552 ;;		i1_PWM6_LoadDutyValue
 19553 ;;		i1_checkDebounceSW1
 19554 ;; This function is called by:
 19555 ;;		_main
 19556 ;;		_INT_CallBack
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           
 19561                           ;psect for function _sw1_EXT
 19562  0EEC                     _sw1_EXT:	
 19563  0EEC                     i1l4423:	
 19564                           ;incstack = 0
 19565                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 19566                           
 19567                           
 19568                           ;main.c: 102:     if(checkDebounceSW1()){
 19569  0EEC  3186  261A  318E   	fcall	i1_checkDebounceSW1
 19570  0EEF  3A00               	xorlw	0
 19571  0EF0  1903               	skipnz
 19572  0EF1  2EF3               	goto	u180_21
 19573  0EF2  2EF4               	goto	u180_20
 19574  0EF3                     u180_21:	
 19575  0EF3  2F19               	goto	i1l1212
 19576  0EF4                     u180_20:	
 19577  0EF4                     i1l4425:	
 19578                           
 19579                           ;main.c: 103:         if (alarm == 1){
 19580  0EF4  0020               	movlb	0	; select bank0
 19581  0EF5  0338               	decf	_alarm,w	;volatile
 19582  0EF6  1D03               	btfss	3,2
 19583  0EF7  2EF9               	goto	u181_21
 19584  0EF8  2EFA               	goto	u181_20
 19585  0EF9                     u181_21:	
 19586  0EF9  2F08               	goto	i1l1206
 19587  0EFA                     u181_20:	
 19588  0EFA                     i1l4427:	
 19589                           
 19590                           ;main.c: 104:             alarm = 0;
 19591  0EFA  01B8               	clrf	_alarm	;volatile
 19592  0EFB                     i1l4429:	
 19593  0EFB  1316               	bcf	22,6	;volatile
 19594  0EFC                     i1l4431:	
 19595                           
 19596                           ;main.c: 106:             PWM6_LoadDutyValue(0);
 19597  0EFC  3000               	movlw	0
 19598  0EFD  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 19599  0EFE  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 19600  0EFF  318C  24A4  318E   	fcall	i1_PWM6_LoadDutyValue
 19601  0F02                     i1l4433:	
 19602                           
 19603                           ;main.c: 107:             last_ms = clkms;
 19604  0F02  087D               	movf	_clkms,w	;volatile
 19605  0F03  00F7               	movwf	??_sw1_EXT
 19606  0F04  0877               	movf	??_sw1_EXT,w
 19607  0F05  0020               	movlb	0	; select bank0
 19608  0F06  00BE               	movwf	_last_ms
 19609                           
 19610                           ;main.c: 108:         }
 19611  0F07  2F15               	goto	i1l1209
 19612  0F08                     i1l1206:	
 19613                           ;main.c: 109:         else{
 19614                           
 19615                           
 19616                           ;main.c: 110:             if(!PORTBbits.RB4){
 19617  0F08  1A0D               	btfsc	13,4	;volatile
 19618  0F09  2F0B               	goto	u182_21
 19619  0F0A  2F0C               	goto	u182_20
 19620  0F0B                     u182_21:	
 19621  0F0B  2F15               	goto	i1l1209
 19622  0F0C                     u182_20:	
 19623  0F0C                     i1l4435:	
 19624                           
 19625                           ;main.c: 112:                 if(config_mode == 0){
 19626  0F0C  0839               	movf	_config_mode,w	;volatile
 19627  0F0D  1D03               	btfss	3,2
 19628  0F0E  2F10               	goto	u183_21
 19629  0F0F  2F11               	goto	u183_20
 19630  0F10                     u183_21:	
 19631  0F10  2F15               	goto	i1l1209
 19632  0F11                     u183_20:	
 19633  0F11                     i1l4437:	
 19634                           
 19635                           ;main.c: 113:                     config_mode = 1;
 19636  0F11  3001               	movlw	1
 19637  0F12  00F7               	movwf	??_sw1_EXT
 19638  0F13  0877               	movf	??_sw1_EXT,w
 19639  0F14  00B9               	movwf	_config_mode	;volatile
 19640  0F15                     i1l1209:	
 19641                           ;main.c: 119:             }
 19642                           
 19643                           
 19644                           ;main.c: 120:             last_ms = clkms;
 19645  0F15  087D               	movf	_clkms,w	;volatile
 19646  0F16  00F7               	movwf	??_sw1_EXT
 19647  0F17  0877               	movf	??_sw1_EXT,w
 19648  0F18  00BE               	movwf	_last_ms
 19649  0F19                     i1l1212:	
 19650  0F19  0008               	return
 19651  0F1A                     __end_of_sw1_EXT:	
 19652                           
 19653                           	psect	text103
 19654  061A                     __ptext103:	
 19655 ;; *************** function i1_checkDebounceSW1 *****************
 19656 ;; Defined at:
 19657 ;;		line 526 in file "main.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;		None
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;		None
 19662 ;; Return value:  Size  Location     Type
 19663 ;;                  1    wreg      unsigned char 
 19664 ;; Registers used:
 19665 ;;		wreg, status,2, status,0
 19666 ;; Tracked objects:
 19667 ;;		On entry : 0/0
 19668 ;;		On exit  : 0/0
 19669 ;;		Unchanged: 0/0
 19670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19673 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19674 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19675 ;;Total ram usage:        7 bytes
 19676 ;; Hardware stack levels used:    1
 19677 ;; This function calls:
 19678 ;;		Nothing
 19679 ;; This function is called by:
 19680 ;;		_sw1_EXT
 19681 ;; This function uses a non-reentrant model
 19682 ;;
 19683                           
 19684                           
 19685                           ;psect for function i1_checkDebounceSW1
 19686  061A                     i1_checkDebounceSW1:	
 19687  061A                     i1l4261:	
 19688                           ;incstack = 0
 19689                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 19690                           
 19691                           
 19692                           ;main.c: 527:    PIE4bits.TMR1IE = 0;
 19693  061A  002E               	movlb	14	; select bank14
 19694  061B  101A               	bcf	26,0	;volatile
 19695  061C                     i1l4263:	
 19696                           
 19697                           ;main.c: 529:     if(clkms - last_ms < 0){
 19698  061C  087D               	movf	_clkms,w	;volatile
 19699  061D  00F0               	movwf	??i1_checkDebounceSW1
 19700  061E  01F1               	clrf	??i1_checkDebounceSW1+1
 19701  061F  0871               	movf	??i1_checkDebounceSW1+1,w
 19702  0620  00F3               	movwf	??i1_checkDebounceSW1+3
 19703  0621  0020               	movlb	0	; select bank0
 19704  0622  083E               	movf	_last_ms,w
 19705  0623  0270               	subwf	??i1_checkDebounceSW1,w
 19706  0624  00F2               	movwf	??i1_checkDebounceSW1+2
 19707  0625  1C03               	skipc
 19708  0626  03F3               	decf	??i1_checkDebounceSW1+3,f
 19709  0627  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 19710  0628  2E2A               	goto	u175_21
 19711  0629  2E2B               	goto	u175_20
 19712  062A                     u175_21:	
 19713  062A  2E51               	goto	i1l4273
 19714  062B                     u175_20:	
 19715  062B                     i1l4265:	
 19716                           
 19717                           ;main.c: 531:         if ((200 - last_ms)+ clkms > 2 ){
 19718  062B  087D               	movf	_clkms,w	;volatile
 19719  062C  00F0               	movwf	??i1_checkDebounceSW1
 19720  062D  01F1               	clrf	??i1_checkDebounceSW1+1
 19721  062E  0871               	movf	??i1_checkDebounceSW1+1,w
 19722  062F  00F3               	movwf	??i1_checkDebounceSW1+3
 19723  0630  083E               	movf	_last_ms,w
 19724  0631  0270               	subwf	??i1_checkDebounceSW1,w
 19725  0632  00F2               	movwf	??i1_checkDebounceSW1+2
 19726  0633  1C03               	skipc
 19727  0634  03F3               	decf	??i1_checkDebounceSW1+3,f
 19728  0635  0872               	movf	??i1_checkDebounceSW1+2,w
 19729  0636  3EC8               	addlw	200
 19730  0637  00F4               	movwf	??i1_checkDebounceSW1+4
 19731  0638  3000               	movlw	0
 19732  0639  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 19733  063A  00F5               	movwf	??i1_checkDebounceSW1+5
 19734  063B  0875               	movf	??i1_checkDebounceSW1+5,w
 19735  063C  3A80               	xorlw	128
 19736  063D  00F6               	movwf	??i1_checkDebounceSW1+6
 19737  063E  3080               	movlw	128
 19738  063F  0276               	subwf	??i1_checkDebounceSW1+6,w
 19739  0640  1D03               	skipz
 19740  0641  2E44               	goto	u176_25
 19741  0642  3003               	movlw	3
 19742  0643  0274               	subwf	??i1_checkDebounceSW1+4,w
 19743  0644                     u176_25:	
 19744  0644  1C03               	skipc
 19745  0645  2E47               	goto	u176_21
 19746  0646  2E48               	goto	u176_20
 19747  0647                     u176_21:	
 19748  0647  2E51               	goto	i1l4273
 19749  0648                     u176_20:	
 19750  0648                     i1l4267:	
 19751                           
 19752                           ;main.c: 532:             last_ms = clkms;
 19753  0648  087D               	movf	_clkms,w	;volatile
 19754  0649  00F0               	movwf	??i1_checkDebounceSW1
 19755  064A  0870               	movf	??i1_checkDebounceSW1,w
 19756  064B  0020               	movlb	0	; select bank0
 19757  064C  00BE               	movwf	_last_ms
 19758  064D                     i1l4269:	
 19759                           
 19760                           ;main.c: 533:             PIE4bits.TMR1IE = 1;
 19761  064D  002E               	movlb	14	; select bank14
 19762  064E  141A               	bsf	26,0	;volatile
 19763                           
 19764                           ;main.c: 534:             return 1;
 19765  064F  3001               	movlw	1
 19766  0650  2E73               	goto	i1l1355
 19767  0651                     i1l4273:	
 19768                           
 19769                           ;main.c: 538:     if(clkms - last_ms < 2){
 19770  0651  087D               	movf	_clkms,w	;volatile
 19771  0652  00F0               	movwf	??i1_checkDebounceSW1
 19772  0653  01F1               	clrf	??i1_checkDebounceSW1+1
 19773  0654  0871               	movf	??i1_checkDebounceSW1+1,w
 19774  0655  00F3               	movwf	??i1_checkDebounceSW1+3
 19775  0656  0020               	movlb	0	; select bank0
 19776  0657  083E               	movf	_last_ms,w
 19777  0658  0270               	subwf	??i1_checkDebounceSW1,w
 19778  0659  00F2               	movwf	??i1_checkDebounceSW1+2
 19779  065A  1C03               	skipc
 19780  065B  03F3               	decf	??i1_checkDebounceSW1+3,f
 19781  065C  0873               	movf	??i1_checkDebounceSW1+3,w
 19782  065D  3A80               	xorlw	128
 19783  065E  00F4               	movwf	??i1_checkDebounceSW1+4
 19784  065F  3080               	movlw	128
 19785  0660  0274               	subwf	??i1_checkDebounceSW1+4,w
 19786  0661  1D03               	skipz
 19787  0662  2E65               	goto	u177_25
 19788  0663  3002               	movlw	2
 19789  0664  0272               	subwf	??i1_checkDebounceSW1+2,w
 19790  0665                     u177_25:	
 19791  0665  1803               	skipnc
 19792  0666  2E68               	goto	u177_21
 19793  0667  2E69               	goto	u177_20
 19794  0668                     u177_21:	
 19795  0668  2E6B               	goto	i1l4281
 19796  0669                     u177_20:	
 19797  0669                     i1l4275:	
 19798                           
 19799                           ;main.c: 539:         return 0;
 19800  0669  3000               	movlw	0
 19801  066A  2E73               	goto	i1l1355
 19802  066B                     i1l4281:	
 19803                           
 19804                           ;main.c: 542:         last_ms = clkms;
 19805  066B  087D               	movf	_clkms,w	;volatile
 19806  066C  00F0               	movwf	??i1_checkDebounceSW1
 19807  066D  0870               	movf	??i1_checkDebounceSW1,w
 19808  066E  0020               	movlb	0	; select bank0
 19809  066F  00BE               	movwf	_last_ms
 19810  0670                     i1l4283:	
 19811                           
 19812                           ;main.c: 543:         PIE4bits.TMR1IE = 1;
 19813  0670  002E               	movlb	14	; select bank14
 19814  0671  141A               	bsf	26,0	;volatile
 19815                           
 19816                           ;main.c: 544:         return 1;
 19817  0672  3001               	movlw	1
 19818  0673                     i1l1355:	
 19819  0673  0008               	return
 19820  0674                     __end_ofi1_checkDebounceSW1:	
 19821                           
 19822                           	psect	text104
 19823  0CA4                     __ptext104:	
 19824 ;; *************** function i1_PWM6_LoadDutyValue *****************
 19825 ;; Defined at:
 19826 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 19827 ;; Parameters:    Size  Location     Type
 19828 ;;  dutyValue       2    0[COMMON] unsigned short 
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;		None
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1    wreg      void 
 19833 ;; Registers used:
 19834 ;;		wreg, status,2, status,0
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/0
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19844 ;;Total ram usage:        4 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; This function calls:
 19847 ;;		Nothing
 19848 ;; This function is called by:
 19849 ;;		_sw1_EXT
 19850 ;;		_ISR_3s
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           
 19854                           
 19855                           ;psect for function i1_PWM6_LoadDutyValue
 19856  0CA4                     i1_PWM6_LoadDutyValue:	
 19857  0CA4                     i1l4259:	
 19858                           ;incstack = 0
 19859                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 19860                           
 19861                           
 19862                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19863  0CA4  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 19864  0CA5  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 19865  0CA6  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 19866  0CA7  00F2               	movwf	??i1_PWM6_LoadDutyValue
 19867  0CA8  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 19868  0CA9  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 19869  0CAA  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 19870  0CAB  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 19871  0CAC  0872               	movf	??i1_PWM6_LoadDutyValue,w
 19872  0CAD  0027               	movlb	7	; select bank7
 19873  0CAE  008D               	movwf	13	;volatile
 19874                           
 19875                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 19876  0CAF  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 19877  0CB0  3903               	andlw	3
 19878  0CB1  00F2               	movwf	??i1_PWM6_LoadDutyValue
 19879  0CB2  3005               	movlw	5
 19880  0CB3                     u174_25:	
 19881  0CB3  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 19882  0CB4  3EFF               	addlw	-1
 19883  0CB5  1D03               	skipz
 19884  0CB6  2CB3               	goto	u174_25
 19885  0CB7  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 19886  0CB8  008C               	movwf	12	;volatile
 19887  0CB9                     i1l916:	
 19888  0CB9  0008               	return
 19889  0CBA                     __end_ofi1_PWM6_LoadDutyValue:	
 19890  007E                     btemp	set	126	;btemp
 19891  007E                     int$flags	set	126
 19892  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         71
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      74
    BANK1            80      6      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3645$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3651	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3650	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3645	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_push_ring
    _tsttc->_WriteI2C
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _mode_select_LED->_PWM6_LoadDutyValue
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   44292
                                             20 BANK0      5     5      0
                                              0 BANK1      6     6      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   13358
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4465
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   14078
                                             17 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    6433
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1326
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      2C       7       55.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      84      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      84      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 20:45:32 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0B86  
                          ___bmul@product 0049                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0AE5  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 0050                    increment_subfield@plus 004E  
                             __CFG_LVP$ON 0000                                       l341 0B09  
                                     l442 0B73                                       l530 07A7  
                                     l347 0BFD                                       l445 0B58  
                                     l439 0DAE                                       l760 0B50  
                                     l913 0BEF                                       l594 0BC8  
                                     l763 0B29                                       l916 0D5E  
                                     l757 0CCF                                       l766 0B6A  
                                     l960 0E6C                                       l963 0C2A  
                                     l869 0DE9                                       l957 0E61  
                                     l959 0E65                                       l899 0B0F  
                                     l998 0D2C                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0AA7  
                         _timer1ReloadVal 0066                                       _seg 003F  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0D15                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0D93  
                                    l1041 0B85                   ??_rd2RegCompleteHandler 007A  
                                    l1311 0D92                                      l1240 01DB  
                                    l1224 00A1                                      l1235 0161  
                                    l1227 00CA                                      l1308 0565  
                                    l1340 0B8F                                      l1420 0233  
                                    l1244 01F8                                      l1317 0D78  
                                    l1245 022E                                      l1350 0BB0  
                                    l1502 0E00                                      l1510 05BF  
                                    l1271 0FCE                                      l1503 0E02  
                                    l1423 0242                                      l1424 0244  
                                    l1337 0B9A                                      l1345 0BA5  
                                    l1513 0587                                      l1610 0CA3  
                                    l1362 0714                                      l1282 04BE  
                                    l1506 0E08                                      l1522 05A9  
                                    l1355 0619                                      l1267 04A7  
                                    l1515 058C                                      l1435 027D  
                                    l1460 02EB                                      l1436 027F  
                                    l1613 0AC4                                      l1277 0FFF  
                                    l1293 050A                                      l1285 04E7  
                                    l1461 02ED                                      l1453 02D1  
                                    l1454 02D3                                      l1375 0E28  
                                    l1527 05BD                                      l1447 02BB  
                                    l1632 0B7C                                      l1296 050B  
                                    l1560 041A                                      l1472 0326  
                                    l1456 02D7                                      l1448 02BE  
                                    l1473 0328                                      l1490 037A  
                                    l1299 0518                                      l1491 037C  
                                    l1484 0364                                      l1813 0CE5  
                                    l1485 0367                                      l1574 0FBF  
                                    l1582 0E48                                      l1494 0382  
                                    l1567 07EE                                      l6001 0784  
                                    l1577 0C4A                                      l6011 078E  
                                    l6003 0786                                      l1587 0DCA  
                                    l6101 0B23                                      l6021 0798  
                                    l6013 0790                                      l6005 0788  
                    _ADCC_StartConversion 0B49                                      l6031 07A4  
                                    l6023 079B                                      l6015 0792  
                                    l6007 078A                                      l6111 050D  
                                    l6105 0B62                                      l6033 0B6B  
                                    l6025 079D                                      l6017 0794  
                                    l6009 078C                                      l6041 0BE3  
                                    l6121 0542                                      l6113 0516  
                                    l6201 0570                                      l6035 0B6E  
                                    l6027 07A0                                      l6019 0796  
                                    l6043 0BEA                                      l6051 0D15  
                                    l6131 055A                                      l6123 0544  
                                    l6115 0521                                      l6203 057A  
                                    l6045 0CBA                                      l6037 0B6F  
                                    l6029 07A2                                      l6061 0D21  
                                    l6053 0D1A                                      l6301 0D9F  
                                    l6133 0563                                      l6125 054D  
                                    l6117 0529                                      l6141 0E1B  
                                    l6109 0C3B                                      l6205 0585  
                                    l6213 0593                                      l6047 0CCC  
                                    l6039 0B72                                      l6071 0DD2  
                                    l6063 0D29                                      l6055 0D1B  
                                    l6303 0DA2                                      l6127 054F  
                                    l6119 0539                                      l6151 04AD  
                                    l6143 0E1D                                      l6135 0E09  
                                    l6231 0CD2                                      l6311 0383  
                                    l6223 0DEA                                      l6215 059E  
                                    l6207 0591                                      l6049 0CCE  
                                    l6081 0DE6                                      l6073 0DD4  
                                    l6065 0DCB                                      l6057 0D1E  
                                    l6305 0DA5                                      l6129 0558  
                                    l6161 04CC                                      l6153 04B1  
                                    l6145 0E25                                      l6137 0E11  
                                    l6241 0CE4                                      l6233 0CD3  
                                    l6401 0F9B                                      l6321 03F3  
                                    l6313 0390                                      l6225 0DF5  
                                    l6217 05AE                                      l6331 0D64  
                                    l6091 0C98                                      l6083 0C8F  
                                    l6075 0DDB                                      l6067 0DCE  
                                    l6059 0D20                                      l6307 0DA8  
                                    l6171 04F4                                      l6163 04D0  
                                    l6155 04B9                                      l6147 0E27  
                                    l6139 0E13                                      l6235 0CD7  
                                    l6411 0FB5                                      l6403 0FA1  
                                    l6323 03FF                                      l6315 03A2  
                                    l6227 0E07                                      l6333 0D68  
                                    l6093 0CA0                                      l6085 0C94  
                                    l6077 0DDD                                      l6069 0DD0  
                                    l6309 0DAB                                      l6173 04F9  
                                    l6157 04C4                                      l6149 04A8  
                                    l6237 0CDB                                      l6405 0FA8  
                                    l6325 040B                                      l6317 03E4  
                                    l6341 0233                                      l6095 0B4B  
                                    l6335 0D70                                      l6087 0C95  
                                    l6079 0DDE                                      l6175 04FC  
                                    l6159 04C8                                      l6167 04D4  
                                    l6431 07DC                                      l6415 07AA  
                                    l6239 0CDD                                      l6407 0FB3  
                                    l6191 0DC1                                      l6183 0DAF  
                                    l6327 0417                                      l6319 03E7  
                                    l6351 026E                                      l6343 0248  
                                    l6097 0B4E                                      l6329 0D5F  
                                    l6089 0C97                                      l6177 0500  
                                    l6169 04EC                                      l6441 041E  
                                    l6281 0BBD                                      l6433 07E4  
                                    l6425 07B8                                      l6417 07B2  
                                    l6193 0568                                      l6361 02AC  
                                    l6353 0283                                      l6345 0257  
                                    l6601 00A1                                      l6099 0B4F  
                                    l6339 0D79                                      l6451 0437  
                                    l6443 0422                                      l6283 0BC2  
                                    l6435 07E8                                      l6427 07C1  
                                    l6419 07B7                                      l6187 0DB4  
                                    l6195 056B                                      l6371 0304  
                                    l6363 02C2                                      l6355 0292  
                                    l6347 025B                                      l6611 00A8  
                                    l6603 00A1                                      l6293 0D93  
                                    l6437 0AC2                                      l6461 0452  
                                    l6453 043C                                      l6445 0426  
                                    l6285 0BC3                                      l5901 0E5E  
                                    l6429 07C5                                      l5821 0C1C  
                                    l6189 0DBC                                      l6381 033F  
                                    l6373 0313                                      l6365 02DC  
                                    l6357 0296                                      l6349 026A  
                                    l6701 01AA                                      l6621 00B0  
                                    l6613 00A9                                      l6295 0D96  
                                    l5911 0B90                                      l6463 0456  
                                    l6455 0444                                      l6471 0472  
                                    l6447 042E                                      l6439 041B  
                                    l6287 0BC5                                      l5903 0E60  
                                    l5831 0C27                                      l5823 0C20  
                                    l6383 034E                                      l6375 0317  
                                    l6367 02F1                                      l6359 02A5  
                                    l6711 01C3                                      l6703 01B0  
                                    l6631 00B9                                      l6623 00B1  
                                    l6615 00AA                                      l6607 00A6  
                                    l6297 0D99                                      l5841 05D1  
                                    l5913 0B92                                      l5921 0B9B  
                                    l6481 048B                                      l6465 045A  
                                    l6457 044A                                      l6473 0477  
                                    l6449 0434                                      l5905 0E66  
                                    l5833 0C28                                      l5825 0C24  
                                    l6393 0F83                                      l6385 0355  
                                    l6377 032C                                      l6369 0300  
                                    l6713 01C6                                      l6705 01B4  
                                    l6721 01DC                                      l6641 00C8  
                                    l6633 00BA                                      l6625 00B4  
                                    l6617 00AC                                      l6609 00A7  
                                    l5907 0B7D                                      l6299 0D9C  
                                    l5819 0D46                                      l5851 060F  
                                    l5843 05EE                                      l5915 0B98  
                                    l5923 0B9D                                      l5931 0BAE  
                                    l6483 0492                                      l6475 047B  
                                    l6459 044E                                      l5827 0C25  
                                    l6395 0F83                                      l6387 036B  
                                    l6379 033B                                      l6731 01F1  
                                    l6723 01E1                                      l6707 01BC  
                                    l6715 01CC                                      l6651 00D4  
                                    l6643 00C9                                      l6635 00BD  
                                    l6627 00B6                                      l6619 00AE  
                                    l5909 0B74                                      l5845 05F3  
                                    l5837 05C0                                      l5941 0FDA  
                                    l5933 0FC0                                      l5917 0B86  
                                    l5925 0BA3                                      l6477 0483  
                                    l6485 0495                                      l6469 045F  
                                    l5829 0C26                                      l6397 0F89  
                                    l6389 0380                                      l6741 020C  
                                    l6733 01FA                                      l6725 01E3  
                                    l6717 01D2                                      l6709 01C1  
                                    l6661 00E4                                      l6653 00D6  
                                    l6645 00CB                                      l6637 00C4  
                                    l6629 00B7                                      l5839 05C2  
                                    l5871 06FB                                      l5863 06C8  
                                    l5943 0FDF                                      l5951 0FF8  
                                    l5935 0FC5                                      l5919 0B88  
                                    l5927 0BA6                                      l6487 0499  
                                    l6479 0488                                      l6399 0F8E  
                                    l6743 020E                                      l6735 0200  
                                    l6727 01E6                                      l6719 01D8  
                                    l6671 0105                                      l6663 00EA  
                                    l6655 00DE                                      l6647 00CC  
                                    l6639 00C6                                      l5857 0611  
                                    l5849 05F7                                      l5873 0713  
                                    l5865 06D7                                      l5945 0FE6  
                                    l5937 0FC7                                      l5929 0BA8  
                                    l6489 049F                                      l5961 0E2F  
                                    l5953 0E29                                      l6745 021C  
                                    l6737 0201                                      l6729 01E8  
                                    l6681 0120                                      l6673 010C  
                                    l6665 00F2                                      l6657 00E0  
                                    l6649 00CE                                      l5883 0B04  
                                    l5971 0BF0                                      l5859 0616  
                                    l5867 06F4                                      l5947 0FEB  
                                    l5939 0FD2                                      l5891 0E55  
                                    l5963 0E3A                                      l5955 0E2B  
                                    l6747 022A                                      l6739 0206  
                                    l6691 0175                                      l6683 0122  
                                    l6675 010D                                      l6667 00FD  
                                    l6659 00E2                                      l5973 0BF3  
                                    l5981 0765                                      l5885 0B0A  
                                    l5949 0FF3                                      l5893 0E59  
                                    l5965 0E3E                                      l6693 0183  
                                    l6685 012C                                      l6677 0110  
                                    l6669 0104                                      l5975 0BFB  
                                    l5991 076F                                      l5983 0767  
                                    l6927 0464                                      l5895 0E5A  
                                    l5887 0E49                                      l5967 0E47  
                                    l6695 0194                                      l6687 0143  
                                    l6679 011A                                      l6599 007E  
                                    l5993 0772                                      l5985 0769  
                                    l5977 0B51                                      l6929 04D9  
                                    l5897 0E5B                                      l5889 0E51  
                                    l6697 01A0                                      l6689 0163  
                                    l5995 0774                                      l5987 076B  
                                    l5979 075F                                      l5899 0E5C  
                                    l6699 01A3                                      l5997 0776  
                                    l5989 076D                                      l5999 0778  
                                    _LATA 0016                                      _LATB 0017  
                         __end_of_INT_ISR 0B04                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    u3220 05D1                                      u3300 0FDA  
                                    u3221 05D0                                      u3301 0FD9  
                                    u3230 05EE                                      u3310 0FEB  
                                    u3215 0D57                                      u3231 05ED  
                                    u3311 0FEA                                      u3240 060F  
                                    u3320 0FF3                                      u3400 0DCA  
                                    u4200 0161                                      u3241 060E  
                                    u3321 0FF2                                      u3401 0DC9  
                                    u4201 0160                                      u3250 06D7  
                                    u3330 0FFF                                      u3410 056F  
                                    u4210 01AA                                      _T2PR 028D  
                                    u3235 05EA                                      u3251 06D6  
                                    u3331 0FFE                                      u3411 056E  
                                    u4211 01A9                                      u3260 06F4  
                                    u3340 0E47                                      u3500 0DF5  
                                    u3420 057A                                      u4220 01B0  
                                    u3245 060B                                      u3261 06F3  
                                    u3341 0E46                                      u3501 0DF4  
                                    u3421 0579                                      u4221 01AF  
                                    u4205 015D                                      u3270 0713  
                                    u3350 04B1                                      u3510 0E00  
                                    u3430 0585                                      u4230 01C1  
                                    u4150 00DE                                      u3271 0712  
                                    u3351 04B0                                      u3511 0DFF  
                                    u3431 0584                                      u4231 01C0  
                                    u4151 00DD                                      u3360 04B9  
                                    u3280 0E65                                      u3520 0E07  
                                    u3440 058C                                      u3600 0242  
                                    u4240 01D2                                      u4160 00EA  
                                    u3265 06F0                                      u3361 04B8  
                                    u3281 0E64                                      u3521 0E06  
                                    u3441 058B                                      u3601 0241  
                                    u4241 01D1                                      u4161 00E9  
                                    u3290 0FD2                                      u3370 04EC  
                                    u3530 0CD7                                      u3450 0591  
                                    u3610 0248                                      u4250 01E1  
                                    u4170 011A                                      u3275 070F  
                                    u3291 0FD1                                      u3371 04EB  
                                    u3531 0CD6                                      u3451 0590  
                                    u3611 0247                                      u4307 01EC  
                                    u4251 01E0                                      u4171 0119  
                                    u3380 04F4                                      u3540 0CE4  
                                    u3460 059E                                      u3700 02D1  
                                    u3620 0257                                      u4260 01F8  
                                    u4180 0120                                      u3381 04F3  
                                    u4317 0496                                      u3541 0CE3  
                                    u3461 059D                                      u3701 02D0  
                                    u3621 0256                                      u4261 01F7  
                                    u4181 011F                                      u3390 050A  
                                    u3470 05A9                                      u3710 02D7  
                                    u3630 026A                                      u4270 0200  
                                    u4190 0143                                      u4407 0553  
                                    u3391 0509                                      u4327 0E17  
                                    u3471 05A8                                      u3711 02D6  
                                    u3631 0269                                      u4271 01FF  
                                    u4191 0142                                      u3560 0BC2  
                                    u3480 05AE                                      u3800 034E  
                                    u3720 02DC                                      u3640 027D  
                                    u4417 055E                                      u4337 0E21  
                                    u3561 0BC1                                      u3481 05AD  
                                    u3801 034D                                      u3721 02DB  
                                    u3641 027C                                      u3570 0390  
                                    u3490 05BD                                      u3810 0364  
                                    u3730 02EB                                      u3650 0283  
                                    u4427 0D65                                      u4347 04FD  
                                    u3571 038F                                      u3491 05BC  
                                    u3811 0363                                      u3731 02EA  
                                    u3651 0282                                      u3900 07EE  
                                    u3580 03A2                                      u3820 036B  
                                    u3740 02F1                                      u3660 0292  
                                    _PMD0 0796                                      u4357 0511  
                                    u3901 07ED                                      u3581 03A1  
                                    u3821 036A                                      u3741 02F0  
                                    u3661 0291                                      _PMD1 0797  
                                    u3590 0D70                                      u3910 042E  
                                    u3830 037A                                      u3750 0300  
                                    u3670 02A5                                      _PMD2 0798  
                                    u3591 0D6F                                      u4367 051C  
                                    u3911 042D                                      u3831 0379  
                                    u3751 02FF                                      u3671 02A4  
                                    _PMD3 0799                                      u3920 0434  
                                    u3840 0380                                      u3760 0313  
                                    u3680 02BB                                      _PMD4 079A  
                                    u4377 052D                                      u3921 0433  
                                    u3841 037F                                      u3761 0312  
                                    u3681 02BA                                      _PMD5 079B  
                                    u3930 043C                                      u3850 0F89  
                                    u3770 0326                                      u3690 02C2  
                                    u4387 053D                                      u3931 043B  
                                    u3851 0F88                                      u3771 0325  
                                    u3691 02C1                                      u3940 0444  
                                    u3860 0F8E                                      u3780 032C  
                                    u4397 0548                                      u3941 0443  
                                    u3861 0F8D                                      u3781 032B  
                                    u3950 047B                                      u3870 0FA1  
                                    u3790 033B                                      u3951 047A  
                                    u3871 0FA0                                      u3791 033A  
                                    u3960 0483                                      u3880 07B2  
                                    i1l73 0BE2                                      u3961 0482  
                                    u3881 07B1                                      u3970 0492  
                                    u3890 07C1                                      u3971 0491  
                                    u3891 07C0                                      u3980 049F  
                                    u3981 049E                      ?_do_I2C_SEND_RESTART 0070  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 007A                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _alaf 0036                                      _clkh 0041  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0040  
                                    _main 007E                                      _tala 0061  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 0063                           _TMR0_StartTimer 0AC2  
                                    _temp 0037                                      _pmon 0062  
                      _increment_subfield 0FC0                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0AA2  
             _INT_DefaultInterruptHandler 0AA1                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0D79           __end_of_INT_SetInterruptHandler 0B0A  
                           _i2c_setBuffer 0C2B                ??_TMR1_SetInterruptHandler 0049  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 004A  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0EEC  
                         __end_of_ReadI2C 0E09                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0056                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0CA4                              _do_I2C_RESET 0B39  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0B74                         ??_clock_subfields 0052  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0BC9  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0AB3  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0AD6  
                          __CFG_DEBUG$OFF 0000                                     i1l103 0C3A  
                                   i1l200 0F4C                                     i1l210 0EEB  
                                   i1l131 0ADF                                     i1l140 0AEE  
                                   _T2TMR 028C                                     i1l125 0B40  
                                   i1l213 0AD0                                     i1l134 0AE4  
                                   i1l303 0D14                                     i1l143 0B61  
                                   i1l224 0E92                                     i1l216 0AA9  
                                   i1l128 0ADA                                     i1l152 0AF3  
                                   i1l137 0AE9                                     i1l146 0B48  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0C7D                                     i1l155 0AF8  
                                   i1l164 0EBE                                     i1l172 06C7  
                                   i1l149 0B22                                     i1l334 0B03  
                                   i1l158 0AFD                                     i1l344 0AA1  
                                   i1l264 0C8E                                     i1l169 06AB  
                                   i1l185 0732                                     i1l338 0BD5  
                                   i1l602 0AA5                                     i1l186 075E  
                                   i1l611 0AB2                                     i1l291 0C6C  
                                   i1l620 0AB8                                     i1l380 001F  
                                   i1l614 0B38                                     i1l279 07FF  
                                   i1l383 002F                                     i1l608 0AAF  
                                   i1l392 0059                                     i1l617 0AB5  
                                   i1l385 003E                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0AC8  
                                   i1l387 004D                                     i1l629 0AD5  
                                   i1l902 0AA3                                     i1l638 0ACC  
                                   i1l576 0ABE                                     i1l672 0AC1  
                                   i1l579 0ABB                                     i1l916 0CB9  
                                   i1l883 0C5B                                     i1l896 0CFC  
                                   _OSCEN 0891                           __end_of_all_LED 0566  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 0BE3                 ?_TMR0_SetInterruptHandler 0047  
                 ??_ADCC_IsConversionDone 0047                          __end_of_TMR0_ISR 0C0D  
                        __end_of_TMR1_ISR 0CFD                          __end_of_TMR2_ISR 0C1C  
                         __end_of_sw1_EXT 0F1A                           __end_of_cksum_w 0C4B  
                    ??_increment_subfield 004E                           _DATAEE_ReadByte 0C1C  
                                   _alarm 0038                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 0B39                                     _cksum 0E29  
                   ?_ADCC_StartConversion 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 0030                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                                   _tsttc 0233                   __end_of_TMR1_Initialize 0DEA  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0047                        ??_checkDebounceSW2 0047  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0C4B  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 1000                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 0233  
                 __end_of_TMR2_Initialize 0D2D               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0AEF                  _TMR2_SetInterruptHandler 0B7D  
                                  ??_main 0058                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 0049  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0AC5               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 05C0                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1212 0F19                                    i1l1044 0AA4  
                                  i1l1206 0F08                                    i1l1038 0C1B  
                                  i1l1215 0D40                                    i1l1216 0D45  
                                  i1l1209 0F15                                    i1l1325 0F80  
                                  i1l1329 0BBC                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    i1l1355 0673  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l1616 0AAC  
                                  i1l1635 0AA2                                    i1l1629 0C0C  
                                  i1l5101 0BFE                                    i1l4301 0ADE  
                                  i1l5103 0C00                                    i1l5111 0CF0  
                                  i1l4311 0AE5                                    i1l5105 0C07  
                                  i1l5113 0CF7                                    i1l4305 0AE0  
                                  i1l4313 0AE8                                    i1l5107 0CE6  
                                  i1l5115 0C0D                                    i1l4323 0AD2  
                                  i1l4307 0AE3                                    i1l4331 0AF7  
                                  i1l4261 061A                                    i1l5109 0CE8  
                                  i1l5117 0C0F                                    i1l4181 0BD6  
                                  i1l4325 0AB3                                    i1l4341 0B31  
                                  i1l4317 0AEA                                    i1l4263 061C  
                                  i1l4431 0EFC                                    i1l4423 0EEC  
                                  i1l5119 0C16                                    i1l4327 0AC5  
                                  i1l4191 0AB0                                    i1l4183 0C2C  
                                  i1l4175 0E6E                                    i1l4351 0AA8  
                                  i1l4319 0AED                                    i1l4335 0AF9  
                                  i1l4503 0ABC                                    i1l4281 066B  
                                  i1l4265 062B                                    i1l4273 0651  
                                  i1l4433 0F02                                    i1l4425 0EF4  
                                  i1l4185 0C31                                    i1l4177 0E74  
                                  i1l4361 0C75                                    i1l4193 0AC9  
                                  i1l4345 0AB6                                    i1l4329 0AF4  
                                  i1l4337 0AFC                                    i1l4259 0CA4  
                                  i1l4283 0670                                    i1l4275 0669  
                                  i1l4267 0648                                    i1l4435 0F0C  
                                  i1l4427 0EFA                                    i1l4187 0C39  
                                  i1l4179 0E85                                    i1l4355 0002  
                                  i1l4363 0C7C                                    i1l4371 0C8D  
                                  i1l4531 0B3F                                    i1l4603 0680  
                                  i1l5091 0ECE                                    i1l4269 064D  
                                  i1l4437 0F11                                    i1l4429 0EFB  
                                  i1l4189 0AAD                                    i1l4349 0AB9  
                                  i1l4525 0B39                                    i1l4621 06C6  
                                  i1l4613 0688                                    i1l5093 0ED4  
                                  i1l5085 0EBF                                    i1l4439 0AAA  
                                  i1l4383 0C5C                                    i1l4287 0AA6  
                                  i1l4359 0C6D                                    i1l4367 0C7E  
                                  i1l4375 07EF                                    i1l4391 0CFD  
                                  i1l4527 0B3C                                    i1l4535 0AD6  
                                  i1l4543 0B59                                    i1l4551 0B41  
                                  i1l4615 06AD                                    i1l4607 0684  
                                  i1l4631 071F                                    i1l5087 0EC2  
                                  i1l5095 0ACD                                    u204_20 0F53  
                                  u300_20 0033                                    i1l5097 0AFE  
                                  u204_21 0F52                                    i1l4385 0C64  
                                  i1l4369 0C86                                    i1l4377 07F7  
                                  i1l4393 0D13                                    i1l4529 0B3E  
                                  i1l4537 0AD8                                    i1l4545 0B5B  
                                  i1l4553 0B43                                    i1l4561 0B1E  
                                  i1l4617 06B9                                    i1l4633 0723  
                                  i1l5089 0EC7                                    u300_21 0032  
                                  i1l5099 0B00                                    i1l4387 0C6B  
                                  i1l4379 07FE                                    i1l4539 0AD9  
                                  i1l4299 0ADB                                    i1l4547 0B60  
                                  i1l4555 0B47                                    i1l4563 0B21  
                                  i1l4619 06C4                                    i1l4643 0734  
                                  i1l4635 072D                                    i1l4661 0F1A  
                                  i1l4581 0E9E                                    i1l4573 0E93  
                                  i1l4653 073C                                    i1l4637 0730  
                                  i1l4629 0715                                    i1l5461 0006  
                                  i1l4831 0C4B                                    i1l4663 0F1D  
                                  i1l4559 0B1C                                    i1l4567 0AEF  
                                  i1l4575 0E95                                    i1l4647 0738  
                                  i1l5471 0023                                    i1l5463 000B  
                                  u205_20 0F5C                                    u301_20 0037  
                                  i1l4833 0C50                                    i1l4841 0C57  
                                  u205_21 0F59                                    i1l4673 0F26  
                                  i1l4569 0AF2                                    i1l4577 0E9A  
                                  i1l5481 0042                                    u301_21 0036  
                                  i1l5473 0027                                    i1l5465 000F  
                                  i1l4691 0BD0                                    i1l4851 0D43  
                                  i1l4843 0C59                                    i1l4835 0C51  
                                  i1l4931 0F5E                                    i1l4667 0F21  
                                  i1l4587 0EA2                                    i1l4595 0674  
                                  i1l5483 0046                                    i1l5475 002B  
                                  i1l5467 0017                                    i1l4845 0D2D  
                                  i1l4837 0C53                                    i1l4941 0F75  
                                  i1l4933 0F62                                    i1l4669 0F24  
                                  i1l5485 0051                                    i1l5477 0033  
                                  i1l5469 001B                                    i1l4847 0D34  
                                  i1l4839 0C55                                    i1l4943 0F7B  
                                  i1l4935 0F66                                    i1l4927 0F4D  
                                  i1l4951 0BBB                                    i1l4679 0F2A  
                                  i1l4599 067C                                    i1l4687 0ABF  
                                  i1l5487 0055                                    i1l5479 0037  
                                  u230_20 0C07                                    u302_20 0042  
                                  i1l4689 0BC9                                    i1l4849 0D3B  
                                  u230_21 0C06                                    i1l4945 0F7F  
                                  i1l4937 0F6C                                    i1l4929 0F53  
                                  u302_21 0041                                    i1l4939 0F74  
                                  i1l4947 0BB1                                    u206_24 0F5E  
                                  i1l4949 0BB5                                    u207_20 0F6C  
                                  u231_20 0CF7                                    u303_20 0046  
                                  u207_21 0F6B                                    u231_21 0CF6  
                                  u303_21 0045                                    i1l6931 0750  
                                  i1l6933 069D                                    i1l6935 0EB6  
                                  u208_20 0F7B                                    u232_20 0C16  
                                  u304_20 0051                                    u208_21 0F7A  
                                  u232_21 0C15                                    i1l6937 0F3E  
                                  u304_21 0050                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u209_20 0BBB                                    u305_20 0055  
                                  u209_21 0BBA                                    u305_21 0054  
                                  u180_20 0EF4                                    u228_20 0EC7  
                                  u180_21 0EF3                                    u228_21 0EC6  
                                  u181_20 0EFA                                    u165_20 0E74  
                                  u229_20 0ECE                                    u181_21 0EF9  
                                  u165_21 0E73                                    u229_21 0ECD  
                                  u182_20 0F0C                                    u166_20 0C31  
                                  u182_21 0F0B                                    u166_21 0C30  
                                  u174_25 0CB3                                    u175_20 062B  
                                  u183_20 0F11                                    u175_21 062A  
                                  u183_21 0F10                                    u176_20 0648  
                                  u176_21 0647                                    _INTPPS 0E90  
                                  u176_25 0644                                    u177_20 0669  
                                  u193_20 067B                                    u177_21 0668  
                                  u193_21 067A                                    u177_25 0665  
                                  u194_20 06C4                                    u194_21 06C3  
                                  u195_20 072D                                    u195_21 072C  
                                  u196_20 0BD0                                    u196_21 0BCF  
                                  u197_20 0C50                                    u293_20 000B  
                                  u197_21 0C4F                                    u293_21 000A  
                                  u198_20 0D34                                    u294_20 000F  
                                  u198_21 0D33                                    u294_21 000E  
                                  u295_20 0017                                    u295_21 0016  
                                  u296_20 001B                                    u296_21 001A  
                                  u297_20 0023                                    u297_21 0022  
                                  u298_20 0027                                    u298_21 0026  
                                  u299_20 002B                                    u299_21 002A  
                                  _OSCFRQ 0893                                    _ISR_3s 0D2D  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0044                                 ??_ReadI2C 0047  
              ??_ADCC_GetConversionResult 0049                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0CBA                     _i2c1_driver_getRXData 0AB6  
                        __end_of_mod1_LED 0B9B                          __end_of_mod2_LED 0B90  
                        __end_of_mod3_LED 0BA6                          __end_of_mod4_LED 0BB1  
    __end_of_TMR1_DefaultInterruptHandler 0AA4     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0AA3                              _CCPTMRS1bits 021F  
                                  ___bmul 0CD0               __end_of_do_I2C_DO_NACK_STOP 0AF9  
     __end_of_i2c_setDataCompleteCallback 0BE3               _i2c_setDataCompleteCallback 0BD6  
   __end_of_i2c1_driver_clearBusCollision 0AC2    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0ABF                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 003B  
                                  _last5s 003C                                 ??_all_LED 004B  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0BF0  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 004B  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0C2B  
                               ??_sw1_EXT 0077                                 ??_cksum_w 0051  
                         _ADCC_Initialize 0CBA               __end_of_i2c1_driver_sendACK 0AC9  
                          _PMD_Initialize 0B51            __end_of_do_I2C_DO_ADDRESS_NACK 0EBF  
             __end_of_i2c1_driver_restart 0AB0                              ?_returnReset 0079  
                               ?_ADC_read 0049                    ??_ADCC_StartConversion 0047  
             __end_of_i2c1_driver_startRX 0AB6          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 0047  TMR2_SetInterruptHandler@InterruptHandler 0047  
TMR1_SetInterruptHandler@InterruptHandler 0047   INT_SetInterruptHandler@InterruptHandler 0047  
                 __end_of_TMR1_WriteTimer 0C5C                          ??_config_routine 0055  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0D93  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0AEA                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0047                   _rdBlkRegCompleteHandler 0CFD  
                          __pcstackCOMMON 0070                              __pidataBANK0 0B2A  
                     ??_SYSTEM_Initialize 0049                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 0E49  
                        _DATAEE_WriteByte 0E49                             __end_of_tsttc 0383  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0047  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0B59  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 004B  
             ADCC_StartConversion@channel 0047                            setCallBack@idx 0074  
                                 ??_cksum 0049                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0AF9                 __end_of_SYSTEM_Initialize 0DAF  
                                 ??_tsttc 0049                            _mssp1_clearIRQ 0ABC  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 0800                        read_ring@nreg_init 004C  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0C6D  
                   _rd1RegCompleteHandler 0C7E                    ?_i2c1_driver_getRXData 0070  
                         _clock_subfields 04A8                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0C6D              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0047          __end_of_TMR0_SetInterruptHandler 0B7D  
                 __size_of_TMR0_StopTimer 0003                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 0CD0  
              __end_of_PWM6_LoadDutyValue 0D5F                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0047                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 075F                         __end_of_do_I2C_TX 06C8  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                    __size_of_recoverData 0098                                   _LED_bin 0D79  
                        _handler_clock_ms 0BB1                        ??_i2c1_driver_open 0047  
                                 _INT_ISR 0AFE                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0CA4  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0ABF                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0B2A  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0AD1                      DATAEE_WriteByte@bAdd 004D  
                      _i2c1_driver_i2cISR 0032                           __size_of_ISR_3s 0019  
                                 _i2c_ISR 0EBF                 ??_rdBlkRegCompleteHandler 007A  
                                 _ReadI2C 0DEA                        _i2c1_driver_isNACK 0B31  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 0049  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                       ??_mode_select_LED 004B                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 050B                       ?_i2c1_driver_isNACK 0070  
                              ??_WriteI2C 0047                                   __ptext1 0233  
                                 __ptext2 0566                                   __ptext3 0DEA  
                                 __ptext4 0383                                   __ptext5 0DAF  
                                 __ptext6 0C3B                                   __ptext7 0E29  
                                 __ptext8 0F81                                   __ptext9 0CD0  
                     __end_of_do_I2C_IDLE 0ADB                       __end_of_do_I2C_RCEN 0B23  
                                 _sw1_EXT 0EEC            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0C3B                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0B6B                                   _last_ms 003E  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0AEA  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 0024  
                             reset_recv@i 0051         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0FC0                  ??_PIN_MANAGER_Initialize 0047  
               ?_TMR1_SetInterruptHandler 0047                                 _T2HLTbits 028F  
                                 _nreg_pt 0042                   _INT_SetInterruptHandler 0B04  
                                 _lum_bin 0022               __size_of_increment_subfield 0040  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 004B  
                              ??_mod2_LED 004B                                ??_mod3_LED 004B  
                              ??_mod4_LED 004B                                   main@t5s 00C6  
                _do_I2C_SEND_RESTART_READ 0ADB                __size_of_SYSTEM_Initialize 001C  
                                 main@aux 00C2                                   clrloop0 0B11  
                              _hours_tens 002E                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 050B  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 0B16  
            __end_of_i2c1_driver_sendNACK 0ACD                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0B17                      __end_of_INT_CallBack 0BD6  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0AA6  
                              _reset_recv 0DAF                             push_ring@nreg 0051  
               _do_I2C_SEND_RESTART_WRITE 0AE0                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 07EF                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0AA8                  _TMR0_SetInterruptHandler 0B74  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0D15                  __end_of_do_I2C_SEND_STOP 0AEF  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 0674  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0E6D  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0D46  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0AAA  
                             _do_I2C_IDLE 0AD6                               _do_I2C_RCEN 0B1C  
    __end_of_TMR2_DefaultInterruptHandler 0AA5     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0AA4                            __end_of___bmul 0CE6  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0049  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0047  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0ACD  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                        WriteI2C@data_out 0048             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                        ?_clock_subfields 0070                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
                 clock_subfields@subfield 0053              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0047                     __end_of_i2c_setBuffer 0C3B  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 0AAD  
                __end_of_handler_clock_ms 0BBD                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 0ABC                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0048                          ??_PMD_Initialize 0047  
                        _checkDebounceSW1 05C0                          _checkDebounceSW2 06C8  
                  wr1RegCompleteHandler@p 0079                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005D                __end_of_EXT_INT_Initialize 0BFE  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0079  
          __end_of_do_I2C_DO_NACK_RESTART 0AFE                                read_ring@i 0051  
                    _i2c1_driver_sendNACK 0AC9                         read_ring@absindex 0053  
                       __size_of_WriteI2C 005A                                  ?_LED_bin 0047  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0AA5                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0044                             __pcstackBANK1 00C2  
                      _PWM6_LoadDutyValue 0D46                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0715                                 _do_I2C_TX 0674  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0B49                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0047  
                        _i2c_restartWrite 0AA6                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0E09                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0F1A  
                                ?_ReadI2C 0070                     _TMR0_InterruptHandler 00C8  
                           ??_setCallBack 0073                                 __pnvBANK0 0064  
                               __pnvBANK1 00C8                     _rd2RegCompleteHandler 07EF  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 1020  
                               _main$2341 00C7                    _PIN_MANAGER_Initialize 075F  
                   _wr2RegCompleteHandler 0C5C             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 008D          __end_of_TMR1_SetInterruptHandler 0B10  
                       read_ring@subindex 004E                            ??_do_I2C_RESET 0070  
                               __ptext100 0BC9                                 __ptext101 0AA1  
                               __ptext102 0EEC                                 __ptext103 061A  
                               __ptext104 0CA4                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 0034                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0AF4                      ??_PWM6_LoadDutyValue 0049  
                           ??_recoverData 0053              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0BC9                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0D5F                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                                 _read_ring 0F81  
                          __size_of_tsttc 0150                                 _min_units 0028  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0B23  
                       ??_TMR0_Initialize 0049                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 0B10  
                                _PIE0bits 0716                         _handler_clock_hms 0F4D  
                               _nreg_init 0043                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0020  
              ??_TMR0_SetInterruptHandler 0049                                  _PIR0bits 070C  
                             _config_mode 0039                                  _PIR3bits 070F  
                               _ring_byte 00BD                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0BFE  
                                _TMR1_ISR 0CE6                                  _TMR2_ISR 0C0D  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0E93                          push_ring@nreg_pt 0057  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0049  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                               _push_ring 07A8                         ?_do_I2C_SEND_STOP 0070  
                                _WPUBbits 0F44                __end_of_increment_subfield 1000  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0009                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 0047                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 004F                       __end_of_recoverData 041B  
       __end_of_do_I2C_SEND_RESTART_WRITE 0AE5                          __size_of_INT_ISR 0006  
                 __end_of_mode_select_LED 0E29                   __end_of_do_I2C_TX_EMPTY 0F4D  
                              ?_read_ring 004B                  ?_rdBlkRegCompleteHandler 0079  
                       ?_DATAEE_WriteByte 004D              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                 __end_of_handler_clock_hms 0F81  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0049  
                  ?_rd2RegCompleteHandler 0079                        ??_DATAEE_WriteByte 0050  
                      i1_checkDebounceSW1 061A                       _do_I2C_DO_NACK_STOP 0AF4  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0079  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0B6B                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0056                   ??_OSCILLATOR_Initialize 0047  
                       ??_TMR0_StartTimer 0047                       _i2c1_driver_sendACK 0AC5  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                                _WriteI2C 0566                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0AAD                  _TMR1_SetInterruptHandler 0B0A  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0AB3  
            __end_of_do_I2C_SEND_ADR_READ 0B62                                ?_push_ring 0051  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0064  
                        __size_of_sw1_EXT 002E                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 0052                              _mssp1_setIRQ 0AB9  
                             ??_do_I2C_RX 007A                               ??_do_I2C_TX 007A  
                    ??i1_checkDebounceSW1 0070                                  __ptext10 0C1C  
                                __ptext11 07A8                                  __ptext20 0B90  
                                __ptext12 0E49                                  __ptext21 0FC0  
                                __ptext13 0BBD                                _T1GCONbits 020F  
                                __ptext30 0DCB                                  __ptext22 06C8  
                                __ptext14 041B                                  __ptext31 0B0A  
                                __ptext23 05C0                                  __ptext15 0E09  
                                __ptext40 0CBA                                  __ptext32 0C8F  
                                __ptext24 050B                                  __ptext16 04A8  
                                __ptext41 0D79                                  __ptext33 0B74  
                                __ptext25 0D46                                  __ptext17 0BA6  
                                __ptext50 0ABC                                  __ptext42 0D5F  
                                __ptext34 0BE3                                  __ptext26 0AC2  
                                __ptext18 0B9B                                  __ptext51 0715  
                                __ptext43 0B49                                  __ptext35 0B51  
                                __ptext27 0D93                                  __ptext19 0B86  
                                __ptext60 0AEA                                  __ptext52 0674  
                                __ptext44 0B23                                  __ptext36 075F  
                                __ptext28 0D15                                  __ptext61 0AE5  
                                __ptext53 0E93                                  __ptext45 0B62  
                                __ptext37 0B6B                                  __ptext29 0B7D  
                                __ptext70 0AB6                                  __ptext62 0AE0  
                                __ptext54 0AF9                                  __ptext38 0BF0  
                                __ptext71 0AC9                                  __ptext63 0ADB  
                                __ptext55 0AF4                                  __ptext47 0ACD  
                                __ptext39 0B04                                  __ptext80 0AA6  
                                __ptext72 0AA5                                  __ptext64 0AD6  
                                __ptext56 0AEF                                  __ptext48 0ABF  
                                __ptext81 0C5C                                  __ptext73 0AB3  
                                __ptext65 0B39                                  __ptext57 0B1C  
                                __ptext49 0EBF                                  __ptext90 0BB1  
                                __ptext82 0BD6                                  __ptext74 0CFD  
                                __ptext66 0F1A                                  __ptext58 0B41  
                                __ptext91 0CE6                                  __ptext83 0E6D  
                                __ptext75 07EF                                  __ptext67 0AB9  
                                __ptext59 0B59                                  __ptext92 0AA3  
                                __ptext84 0C2B                                  __ptext76 0C7E  
                                __ptext68 0B31                                  __ptext93 0F4D  
                                __ptext85 0AB0                                  __ptext77 0C6D  
                                __ptext69 0AD1                                  __ptext94 0C4B  
                                __ptext86 0AAD                                  __ptext78 0002  
                                __ptext95 0BFE                                  __ptext87 0AC5  
                                __ptext79 0AA8                                  __ptext96 0D2D  
                                __ptext88 0C0D                                  __ptext97 0AA2  
                                __ptext89 0AA4                                  __ptext98 0AAA  
                                __ptext99 0AFE                                  _mod1_LED 0B90  
                            _SSP1CON1bits 0190                                  _mod2_LED 0B86  
                __end_of_checkDebounceSW1 061A                              _SSP1CON2bits 0191  
                __end_of_checkDebounceSW2 0715                                  _mod3_LED 0B9B  
                                _mod4_LED 0BA6                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0B41  
             DATAEE_WriteByte@GIEBitValue 0050                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 003D  
                        _i2c1_driver_open 0BBD                         ??_PWM6_Initialize 0047  
                        _i2c1_driver_stop 0AB0                             __size_of_main 01B5  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 002A             __end_of_i2c1_driver_getRXData 0AB9  
    __end_of_TMR0_DefaultInterruptHandler 0AA3     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0AA2                         ??_DATAEE_ReadByte 0049  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0E6D  
                            ??_reset_recv 0051                         ?_handler_clock_ms 0070  
                                _set_mode 003A                            _config_routine 041B  
                              tsttc@value 004A              __end_of_ADCC_StartConversion 0B51  
                                int$flags 007E                        ??_handler_clock_ms 0070  
      __end_of_INTERRUPT_InterruptManager 005B                _INTERRUPT_InterruptManager 0004  
                                main@aux1 00C3                       _mode_field_subfield 005D  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 004A          __end_of_do_I2C_SEND_RESTART_READ 0AE0  
                            ??_returnStop 007A                               _hours_units 002C  
                __end_of_i2c_restartWrite 0AA8                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 0383                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 0068                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0DCB                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0BF0                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 004F                    _do_I2C_DO_ADDRESS_NACK 0E93  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0AAA                    __end_of_config_routine 04A8  
           ?_TMR0_DefaultInterruptHandler 0070                  __size_of_clock_subfields 0063  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0047  
                _ADCC_GetConversionResult 0B62                             __pstringtext1 1000  
                    ??_EXT_INT_Initialize 0049                            read_ring@index 004D  
                             ??_push_ring 0054                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0C8F  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 0047                             read_ring@nreg 004B  
          __end_of_PIN_MANAGER_Initialize 07A8                         ??_ADCC_Initialize 0047  
             __end_of_i2c_busCollisionISR 0AD1            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0C8F                        push_ring@nreg_init 0052  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0C7E  
                   _TMR2_InterruptHandler 00CA                     _do_I2C_SEND_ADR_WRITE 0B41  
                      push_ring@ring_byte 0053                      _do_I2C_SEND_ADR_READ 0B59  
                         ?_config_routine 0070                           _TMR1_Initialize 0DCB  
