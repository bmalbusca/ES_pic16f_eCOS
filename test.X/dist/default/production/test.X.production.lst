

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 13:28:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text65,local,class=CODE,merge=1,delta=2
    81                           	psect	text66,local,class=CODE,merge=1,delta=2
    82                           	psect	text67,local,class=CODE,merge=1,delta=2
    83                           	psect	text68,local,class=CODE,merge=1,delta=2
    84                           	psect	text69,local,class=CODE,merge=1,delta=2
    85                           	psect	text70,local,class=CODE,merge=1,delta=2
    86                           	psect	text71,local,class=CODE,merge=1,delta=2
    87                           	psect	text72,local,class=CODE,merge=1,delta=2
    88                           	psect	text73,local,class=CODE,merge=1,delta=2
    89                           	psect	text74,local,class=CODE,merge=1,delta=2
    90                           	psect	text75,local,class=CODE,merge=1,delta=2
    91                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text79,local,class=CODE,merge=1,delta=2
    95                           	psect	text80,local,class=CODE,merge=1,delta=2
    96                           	psect	text81,local,class=CODE,merge=1,delta=2
    97                           	psect	text82,local,class=CODE,merge=1,delta=2
    98                           	psect	text83,local,class=CODE,merge=1,delta=2
    99                           	psect	text84,local,class=CODE,merge=1,delta=2
   100                           	psect	text85,local,class=CODE,merge=1,delta=2
   101                           	psect	text86,local,class=CODE,merge=1,delta=2
   102                           	psect	text87,local,class=CODE,merge=1,delta=2
   103                           	psect	text88,local,class=CODE,merge=1,delta=2
   104                           	psect	text89,local,class=CODE,merge=1,delta=2
   105                           	psect	text90,local,class=CODE,merge=1,delta=2
   106                           	psect	text91,local,class=CODE,merge=1,delta=2
   107                           	psect	text92,local,class=CODE,merge=1,delta=2
   108                           	psect	text93,local,class=CODE,merge=1,delta=2
   109                           	psect	text94,local,class=CODE,merge=1,delta=2
   110                           	psect	text95,local,class=CODE,merge=1,delta=2
   111                           	dabs	1,0x7E,2
   112  0000                     
   113                           ; Version 2.10
   114                           ; Generated 31/07/2019 GMT
   115                           ; 
   116                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC16F18875 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001C                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  008C                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0110                     	;# 
   207  0110                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0112                     	;# 
   211  0113                     	;# 
   212  0114                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0116                     	;# 
   217  0117                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011A                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011C                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011E                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  018E                     	;# 
   246  018F                     	;# 
   247  0190                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0196                     	;# 
   251  0197                     	;# 
   252  0198                     	;# 
   253  0199                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  020C                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  020E                     	;# 
   261  020F                     	;# 
   262  020F                     	;# 
   263  0210                     	;# 
   264  0210                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0218                     	;# 
   278  0218                     	;# 
   279  0219                     	;# 
   280  021A                     	;# 
   281  021B                     	;# 
   282  021B                     	;# 
   283  021C                     	;# 
   284  021C                     	;# 
   285  021D                     	;# 
   286  021D                     	;# 
   287  021E                     	;# 
   288  021F                     	;# 
   289  028C                     	;# 
   290  028C                     	;# 
   291  028D                     	;# 
   292  028D                     	;# 
   293  028E                     	;# 
   294  028F                     	;# 
   295  0290                     	;# 
   296  0290                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0293                     	;# 
   302  0294                     	;# 
   303  0295                     	;# 
   304  0296                     	;# 
   305  0296                     	;# 
   306  0297                     	;# 
   307  0298                     	;# 
   308  0298                     	;# 
   309  0299                     	;# 
   310  0299                     	;# 
   311  029A                     	;# 
   312  029B                     	;# 
   313  029C                     	;# 
   314  029C                     	;# 
   315  029D                     	;# 
   316  030C                     	;# 
   317  030C                     	;# 
   318  030D                     	;# 
   319  030E                     	;# 
   320  030F                     	;# 
   321  0310                     	;# 
   322  0310                     	;# 
   323  0311                     	;# 
   324  0312                     	;# 
   325  0313                     	;# 
   326  0314                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0316                     	;# 
   330  0317                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031B                     	;# 
   336  031C                     	;# 
   337  031C                     	;# 
   338  031D                     	;# 
   339  031E                     	;# 
   340  031F                     	;# 
   341  038C                     	;# 
   342  038C                     	;# 
   343  038D                     	;# 
   344  038E                     	;# 
   345  0390                     	;# 
   346  0390                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  040C                     	;# 
   350  040D                     	;# 
   351  040E                     	;# 
   352  040F                     	;# 
   353  0410                     	;# 
   354  0411                     	;# 
   355  0416                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  0418                     	;# 
   359  0418                     	;# 
   360  0419                     	;# 
   361  041A                     	;# 
   362  041A                     	;# 
   363  041B                     	;# 
   364  041C                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  041F                     	;# 
   369  048C                     	;# 
   370  048C                     	;# 
   371  048D                     	;# 
   372  048E                     	;# 
   373  048F                     	;# 
   374  048F                     	;# 
   375  0490                     	;# 
   376  0491                     	;# 
   377  0492                     	;# 
   378  0492                     	;# 
   379  0493                     	;# 
   380  0494                     	;# 
   381  0495                     	;# 
   382  0495                     	;# 
   383  0496                     	;# 
   384  0497                     	;# 
   385  0498                     	;# 
   386  0499                     	;# 
   387  049A                     	;# 
   388  049B                     	;# 
   389  049C                     	;# 
   390  049D                     	;# 
   391  050C                     	;# 
   392  050C                     	;# 
   393  050D                     	;# 
   394  050E                     	;# 
   395  050F                     	;# 
   396  050F                     	;# 
   397  0510                     	;# 
   398  0511                     	;# 
   399  0512                     	;# 
   400  0512                     	;# 
   401  0513                     	;# 
   402  0514                     	;# 
   403  0515                     	;# 
   404  0515                     	;# 
   405  0516                     	;# 
   406  0517                     	;# 
   407  0518                     	;# 
   408  0519                     	;# 
   409  051A                     	;# 
   410  051B                     	;# 
   411  051C                     	;# 
   412  051D                     	;# 
   413  058C                     	;# 
   414  058C                     	;# 
   415  058D                     	;# 
   416  058E                     	;# 
   417  058F                     	;# 
   418  058F                     	;# 
   419  0590                     	;# 
   420  0591                     	;# 
   421  0592                     	;# 
   422  0593                     	;# 
   423  060C                     	;# 
   424  060D                     	;# 
   425  060E                     	;# 
   426  060F                     	;# 
   427  0610                     	;# 
   428  0611                     	;# 
   429  0612                     	;# 
   430  0613                     	;# 
   431  0614                     	;# 
   432  0616                     	;# 
   433  0617                     	;# 
   434  0618                     	;# 
   435  0619                     	;# 
   436  061A                     	;# 
   437  061B                     	;# 
   438  061C                     	;# 
   439  061D                     	;# 
   440  061E                     	;# 
   441  068C                     	;# 
   442  068D                     	;# 
   443  068E                     	;# 
   444  068F                     	;# 
   445  0690                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  070C                     	;# 
   451  070D                     	;# 
   452  070E                     	;# 
   453  070F                     	;# 
   454  0710                     	;# 
   455  0711                     	;# 
   456  0712                     	;# 
   457  0713                     	;# 
   458  0714                     	;# 
   459  0716                     	;# 
   460  0717                     	;# 
   461  0718                     	;# 
   462  0719                     	;# 
   463  071A                     	;# 
   464  071B                     	;# 
   465  071C                     	;# 
   466  071D                     	;# 
   467  071E                     	;# 
   468  0796                     	;# 
   469  0797                     	;# 
   470  0798                     	;# 
   471  0799                     	;# 
   472  079A                     	;# 
   473  079B                     	;# 
   474  080C                     	;# 
   475  080D                     	;# 
   476  080E                     	;# 
   477  080F                     	;# 
   478  0810                     	;# 
   479  0811                     	;# 
   480  0812                     	;# 
   481  0813                     	;# 
   482  0814                     	;# 
   483  081A                     	;# 
   484  081B                     	;# 
   485  081C                     	;# 
   486  081D                     	;# 
   487  081E                     	;# 
   488  081F                     	;# 
   489  088C                     	;# 
   490  088D                     	;# 
   491  088E                     	;# 
   492  088F                     	;# 
   493  0890                     	;# 
   494  0891                     	;# 
   495  0892                     	;# 
   496  0893                     	;# 
   497  0895                     	;# 
   498  0896                     	;# 
   499  0897                     	;# 
   500  0898                     	;# 
   501  0899                     	;# 
   502  089A                     	;# 
   503  089B                     	;# 
   504  090C                     	;# 
   505  090E                     	;# 
   506  090F                     	;# 
   507  091F                     	;# 
   508  091F                     	;# 
   509  098F                     	;# 
   510  098F                     	;# 
   511  0990                     	;# 
   512  0991                     	;# 
   513  0992                     	;# 
   514  0993                     	;# 
   515  0994                     	;# 
   516  0995                     	;# 
   517  0996                     	;# 
   518  0997                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E16                     	;# 
   527  0E17                     	;# 
   528  0E18                     	;# 
   529  0E19                     	;# 
   530  0E1A                     	;# 
   531  0E1B                     	;# 
   532  0E1C                     	;# 
   533  0E1D                     	;# 
   534  0E1E                     	;# 
   535  0E1F                     	;# 
   536  0E20                     	;# 
   537  0E21                     	;# 
   538  0E22                     	;# 
   539  0E23                     	;# 
   540  0E24                     	;# 
   541  0E25                     	;# 
   542  0E26                     	;# 
   543  0E27                     	;# 
   544  0E28                     	;# 
   545  0E29                     	;# 
   546  0E2A                     	;# 
   547  0E2B                     	;# 
   548  0E2C                     	;# 
   549  0E2D                     	;# 
   550  0E2E                     	;# 
   551  0E2F                     	;# 
   552  0E30                     	;# 
   553  0E31                     	;# 
   554  0E32                     	;# 
   555  0E33                     	;# 
   556  0E34                     	;# 
   557  0E35                     	;# 
   558  0E36                     	;# 
   559  0E37                     	;# 
   560  0E8F                     	;# 
   561  0E90                     	;# 
   562  0E91                     	;# 
   563  0E92                     	;# 
   564  0E93                     	;# 
   565  0E94                     	;# 
   566  0E95                     	;# 
   567  0E96                     	;# 
   568  0E97                     	;# 
   569  0E9C                     	;# 
   570  0E9D                     	;# 
   571  0E9E                     	;# 
   572  0EA1                     	;# 
   573  0EA2                     	;# 
   574  0EA3                     	;# 
   575  0EA4                     	;# 
   576  0EA5                     	;# 
   577  0EA9                     	;# 
   578  0EAA                     	;# 
   579  0EAB                     	;# 
   580  0EAC                     	;# 
   581  0EB1                     	;# 
   582  0EB2                     	;# 
   583  0EB3                     	;# 
   584  0EB8                     	;# 
   585  0EB9                     	;# 
   586  0EBA                     	;# 
   587  0EBB                     	;# 
   588  0EBC                     	;# 
   589  0EBD                     	;# 
   590  0EBE                     	;# 
   591  0EC3                     	;# 
   592  0EC5                     	;# 
   593  0EC6                     	;# 
   594  0EC7                     	;# 
   595  0EC8                     	;# 
   596  0EC9                     	;# 
   597  0ECA                     	;# 
   598  0ECB                     	;# 
   599  0ECC                     	;# 
   600  0F10                     	;# 
   601  0F11                     	;# 
   602  0F12                     	;# 
   603  0F13                     	;# 
   604  0F14                     	;# 
   605  0F15                     	;# 
   606  0F16                     	;# 
   607  0F17                     	;# 
   608  0F18                     	;# 
   609  0F19                     	;# 
   610  0F1A                     	;# 
   611  0F1B                     	;# 
   612  0F1C                     	;# 
   613  0F1D                     	;# 
   614  0F1E                     	;# 
   615  0F1F                     	;# 
   616  0F20                     	;# 
   617  0F21                     	;# 
   618  0F22                     	;# 
   619  0F23                     	;# 
   620  0F24                     	;# 
   621  0F25                     	;# 
   622  0F26                     	;# 
   623  0F27                     	;# 
   624  0F28                     	;# 
   625  0F29                     	;# 
   626  0F2A                     	;# 
   627  0F2B                     	;# 
   628  0F2C                     	;# 
   629  0F2D                     	;# 
   630  0F2E                     	;# 
   631  0F2F                     	;# 
   632  0F30                     	;# 
   633  0F31                     	;# 
   634  0F32                     	;# 
   635  0F38                     	;# 
   636  0F39                     	;# 
   637  0F3A                     	;# 
   638  0F3B                     	;# 
   639  0F3C                     	;# 
   640  0F3D                     	;# 
   641  0F3E                     	;# 
   642  0F3F                     	;# 
   643  0F40                     	;# 
   644  0F41                     	;# 
   645  0F43                     	;# 
   646  0F44                     	;# 
   647  0F45                     	;# 
   648  0F46                     	;# 
   649  0F47                     	;# 
   650  0F48                     	;# 
   651  0F49                     	;# 
   652  0F4A                     	;# 
   653  0F4B                     	;# 
   654  0F4C                     	;# 
   655  0F4E                     	;# 
   656  0F4F                     	;# 
   657  0F50                     	;# 
   658  0F51                     	;# 
   659  0F52                     	;# 
   660  0F53                     	;# 
   661  0F54                     	;# 
   662  0F55                     	;# 
   663  0F56                     	;# 
   664  0F57                     	;# 
   665  0F59                     	;# 
   666  0F5A                     	;# 
   667  0F5B                     	;# 
   668  0F5C                     	;# 
   669  0F5D                     	;# 
   670  0F61                     	;# 
   671  0F62                     	;# 
   672  0F64                     	;# 
   673  0F65                     	;# 
   674  0F66                     	;# 
   675  0F67                     	;# 
   676  0F68                     	;# 
   677  0F69                     	;# 
   678  0F6A                     	;# 
   679  0F6B                     	;# 
   680  0F6C                     	;# 
   681  0F6D                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE9                     	;# 
   688  0FEA                     	;# 
   689  0FEB                     	;# 
   690  0FED                     	;# 
   691  0FEE                     	;# 
   692  0FEF                     	;# 
   693  0000                     	;# 
   694  0001                     	;# 
   695  0002                     	;# 
   696  0003                     	;# 
   697  0004                     	;# 
   698  0005                     	;# 
   699  0006                     	;# 
   700  0007                     	;# 
   701  0008                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  000E                     	;# 
   708  000F                     	;# 
   709  0010                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0014                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001C                     	;# 
   721  001C                     	;# 
   722  001D                     	;# 
   723  001D                     	;# 
   724  001E                     	;# 
   725  001F                     	;# 
   726  008C                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  008E                     	;# 
   730  008E                     	;# 
   731  008F                     	;# 
   732  0090                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010E                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0110                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011C                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011D                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011E                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  018C                     	;# 
   790  018D                     	;# 
   791  018E                     	;# 
   792  018F                     	;# 
   793  0190                     	;# 
   794  0191                     	;# 
   795  0192                     	;# 
   796  0196                     	;# 
   797  0197                     	;# 
   798  0198                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  020C                     	;# 
   804  020C                     	;# 
   805  020D                     	;# 
   806  020E                     	;# 
   807  020F                     	;# 
   808  020F                     	;# 
   809  0210                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  0218                     	;# 
   824  0218                     	;# 
   825  0219                     	;# 
   826  021A                     	;# 
   827  021B                     	;# 
   828  021B                     	;# 
   829  021C                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021D                     	;# 
   833  021E                     	;# 
   834  021F                     	;# 
   835  028C                     	;# 
   836  028C                     	;# 
   837  028D                     	;# 
   838  028D                     	;# 
   839  028E                     	;# 
   840  028F                     	;# 
   841  0290                     	;# 
   842  0290                     	;# 
   843  0291                     	;# 
   844  0292                     	;# 
   845  0292                     	;# 
   846  0293                     	;# 
   847  0293                     	;# 
   848  0294                     	;# 
   849  0295                     	;# 
   850  0296                     	;# 
   851  0296                     	;# 
   852  0297                     	;# 
   853  0298                     	;# 
   854  0298                     	;# 
   855  0299                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029C                     	;# 
   861  029D                     	;# 
   862  030C                     	;# 
   863  030C                     	;# 
   864  030D                     	;# 
   865  030E                     	;# 
   866  030F                     	;# 
   867  0310                     	;# 
   868  0310                     	;# 
   869  0311                     	;# 
   870  0312                     	;# 
   871  0313                     	;# 
   872  0314                     	;# 
   873  0314                     	;# 
   874  0315                     	;# 
   875  0316                     	;# 
   876  0317                     	;# 
   877  0318                     	;# 
   878  0318                     	;# 
   879  0319                     	;# 
   880  031A                     	;# 
   881  031B                     	;# 
   882  031C                     	;# 
   883  031C                     	;# 
   884  031D                     	;# 
   885  031E                     	;# 
   886  031F                     	;# 
   887  038C                     	;# 
   888  038C                     	;# 
   889  038D                     	;# 
   890  038E                     	;# 
   891  0390                     	;# 
   892  0390                     	;# 
   893  0391                     	;# 
   894  0392                     	;# 
   895  040C                     	;# 
   896  040D                     	;# 
   897  040E                     	;# 
   898  040F                     	;# 
   899  0410                     	;# 
   900  0411                     	;# 
   901  0416                     	;# 
   902  0416                     	;# 
   903  0417                     	;# 
   904  0418                     	;# 
   905  0418                     	;# 
   906  0419                     	;# 
   907  041A                     	;# 
   908  041A                     	;# 
   909  041B                     	;# 
   910  041C                     	;# 
   911  041C                     	;# 
   912  041D                     	;# 
   913  041E                     	;# 
   914  041F                     	;# 
   915  048C                     	;# 
   916  048C                     	;# 
   917  048D                     	;# 
   918  048E                     	;# 
   919  048F                     	;# 
   920  048F                     	;# 
   921  0490                     	;# 
   922  0491                     	;# 
   923  0492                     	;# 
   924  0492                     	;# 
   925  0493                     	;# 
   926  0494                     	;# 
   927  0495                     	;# 
   928  0495                     	;# 
   929  0496                     	;# 
   930  0497                     	;# 
   931  0498                     	;# 
   932  0499                     	;# 
   933  049A                     	;# 
   934  049B                     	;# 
   935  049C                     	;# 
   936  049D                     	;# 
   937  050C                     	;# 
   938  050C                     	;# 
   939  050D                     	;# 
   940  050E                     	;# 
   941  050F                     	;# 
   942  050F                     	;# 
   943  0510                     	;# 
   944  0511                     	;# 
   945  0512                     	;# 
   946  0512                     	;# 
   947  0513                     	;# 
   948  0514                     	;# 
   949  0515                     	;# 
   950  0515                     	;# 
   951  0516                     	;# 
   952  0517                     	;# 
   953  0518                     	;# 
   954  0519                     	;# 
   955  051A                     	;# 
   956  051B                     	;# 
   957  051C                     	;# 
   958  051D                     	;# 
   959  058C                     	;# 
   960  058C                     	;# 
   961  058D                     	;# 
   962  058E                     	;# 
   963  058F                     	;# 
   964  058F                     	;# 
   965  0590                     	;# 
   966  0591                     	;# 
   967  0592                     	;# 
   968  0593                     	;# 
   969  060C                     	;# 
   970  060D                     	;# 
   971  060E                     	;# 
   972  060F                     	;# 
   973  0610                     	;# 
   974  0611                     	;# 
   975  0612                     	;# 
   976  0613                     	;# 
   977  0614                     	;# 
   978  0616                     	;# 
   979  0617                     	;# 
   980  0618                     	;# 
   981  0619                     	;# 
   982  061A                     	;# 
   983  061B                     	;# 
   984  061C                     	;# 
   985  061D                     	;# 
   986  061E                     	;# 
   987  068C                     	;# 
   988  068D                     	;# 
   989  068E                     	;# 
   990  068F                     	;# 
   991  0690                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  070C                     	;# 
   997  070D                     	;# 
   998  070E                     	;# 
   999  070F                     	;# 
  1000  0710                     	;# 
  1001  0711                     	;# 
  1002  0712                     	;# 
  1003  0713                     	;# 
  1004  0714                     	;# 
  1005  0716                     	;# 
  1006  0717                     	;# 
  1007  0718                     	;# 
  1008  0719                     	;# 
  1009  071A                     	;# 
  1010  071B                     	;# 
  1011  071C                     	;# 
  1012  071D                     	;# 
  1013  071E                     	;# 
  1014  0796                     	;# 
  1015  0797                     	;# 
  1016  0798                     	;# 
  1017  0799                     	;# 
  1018  079A                     	;# 
  1019  079B                     	;# 
  1020  080C                     	;# 
  1021  080D                     	;# 
  1022  080E                     	;# 
  1023  080F                     	;# 
  1024  0810                     	;# 
  1025  0811                     	;# 
  1026  0812                     	;# 
  1027  0813                     	;# 
  1028  0814                     	;# 
  1029  081A                     	;# 
  1030  081B                     	;# 
  1031  081C                     	;# 
  1032  081D                     	;# 
  1033  081E                     	;# 
  1034  081F                     	;# 
  1035  088C                     	;# 
  1036  088D                     	;# 
  1037  088E                     	;# 
  1038  088F                     	;# 
  1039  0890                     	;# 
  1040  0891                     	;# 
  1041  0892                     	;# 
  1042  0893                     	;# 
  1043  0895                     	;# 
  1044  0896                     	;# 
  1045  0897                     	;# 
  1046  0898                     	;# 
  1047  0899                     	;# 
  1048  089A                     	;# 
  1049  089B                     	;# 
  1050  090C                     	;# 
  1051  090E                     	;# 
  1052  090F                     	;# 
  1053  091F                     	;# 
  1054  091F                     	;# 
  1055  098F                     	;# 
  1056  098F                     	;# 
  1057  0990                     	;# 
  1058  0991                     	;# 
  1059  0992                     	;# 
  1060  0993                     	;# 
  1061  0994                     	;# 
  1062  0995                     	;# 
  1063  0996                     	;# 
  1064  0997                     	;# 
  1065  0E0F                     	;# 
  1066  0E10                     	;# 
  1067  0E11                     	;# 
  1068  0E12                     	;# 
  1069  0E13                     	;# 
  1070  0E14                     	;# 
  1071  0E15                     	;# 
  1072  0E16                     	;# 
  1073  0E17                     	;# 
  1074  0E18                     	;# 
  1075  0E19                     	;# 
  1076  0E1A                     	;# 
  1077  0E1B                     	;# 
  1078  0E1C                     	;# 
  1079  0E1D                     	;# 
  1080  0E1E                     	;# 
  1081  0E1F                     	;# 
  1082  0E20                     	;# 
  1083  0E21                     	;# 
  1084  0E22                     	;# 
  1085  0E23                     	;# 
  1086  0E24                     	;# 
  1087  0E25                     	;# 
  1088  0E26                     	;# 
  1089  0E27                     	;# 
  1090  0E28                     	;# 
  1091  0E29                     	;# 
  1092  0E2A                     	;# 
  1093  0E2B                     	;# 
  1094  0E2C                     	;# 
  1095  0E2D                     	;# 
  1096  0E2E                     	;# 
  1097  0E2F                     	;# 
  1098  0E30                     	;# 
  1099  0E31                     	;# 
  1100  0E32                     	;# 
  1101  0E33                     	;# 
  1102  0E34                     	;# 
  1103  0E35                     	;# 
  1104  0E36                     	;# 
  1105  0E37                     	;# 
  1106  0E8F                     	;# 
  1107  0E90                     	;# 
  1108  0E91                     	;# 
  1109  0E92                     	;# 
  1110  0E93                     	;# 
  1111  0E94                     	;# 
  1112  0E95                     	;# 
  1113  0E96                     	;# 
  1114  0E97                     	;# 
  1115  0E9C                     	;# 
  1116  0E9D                     	;# 
  1117  0E9E                     	;# 
  1118  0EA1                     	;# 
  1119  0EA2                     	;# 
  1120  0EA3                     	;# 
  1121  0EA4                     	;# 
  1122  0EA5                     	;# 
  1123  0EA9                     	;# 
  1124  0EAA                     	;# 
  1125  0EAB                     	;# 
  1126  0EAC                     	;# 
  1127  0EB1                     	;# 
  1128  0EB2                     	;# 
  1129  0EB3                     	;# 
  1130  0EB8                     	;# 
  1131  0EB9                     	;# 
  1132  0EBA                     	;# 
  1133  0EBB                     	;# 
  1134  0EBC                     	;# 
  1135  0EBD                     	;# 
  1136  0EBE                     	;# 
  1137  0EC3                     	;# 
  1138  0EC5                     	;# 
  1139  0EC6                     	;# 
  1140  0EC7                     	;# 
  1141  0EC8                     	;# 
  1142  0EC9                     	;# 
  1143  0ECA                     	;# 
  1144  0ECB                     	;# 
  1145  0ECC                     	;# 
  1146  0F10                     	;# 
  1147  0F11                     	;# 
  1148  0F12                     	;# 
  1149  0F13                     	;# 
  1150  0F14                     	;# 
  1151  0F15                     	;# 
  1152  0F16                     	;# 
  1153  0F17                     	;# 
  1154  0F18                     	;# 
  1155  0F19                     	;# 
  1156  0F1A                     	;# 
  1157  0F1B                     	;# 
  1158  0F1C                     	;# 
  1159  0F1D                     	;# 
  1160  0F1E                     	;# 
  1161  0F1F                     	;# 
  1162  0F20                     	;# 
  1163  0F21                     	;# 
  1164  0F22                     	;# 
  1165  0F23                     	;# 
  1166  0F24                     	;# 
  1167  0F25                     	;# 
  1168  0F26                     	;# 
  1169  0F27                     	;# 
  1170  0F28                     	;# 
  1171  0F29                     	;# 
  1172  0F2A                     	;# 
  1173  0F2B                     	;# 
  1174  0F2C                     	;# 
  1175  0F2D                     	;# 
  1176  0F2E                     	;# 
  1177  0F2F                     	;# 
  1178  0F30                     	;# 
  1179  0F31                     	;# 
  1180  0F32                     	;# 
  1181  0F38                     	;# 
  1182  0F39                     	;# 
  1183  0F3A                     	;# 
  1184  0F3B                     	;# 
  1185  0F3C                     	;# 
  1186  0F3D                     	;# 
  1187  0F3E                     	;# 
  1188  0F3F                     	;# 
  1189  0F40                     	;# 
  1190  0F41                     	;# 
  1191  0F43                     	;# 
  1192  0F44                     	;# 
  1193  0F45                     	;# 
  1194  0F46                     	;# 
  1195  0F47                     	;# 
  1196  0F48                     	;# 
  1197  0F49                     	;# 
  1198  0F4A                     	;# 
  1199  0F4B                     	;# 
  1200  0F4C                     	;# 
  1201  0F4E                     	;# 
  1202  0F4F                     	;# 
  1203  0F50                     	;# 
  1204  0F51                     	;# 
  1205  0F52                     	;# 
  1206  0F53                     	;# 
  1207  0F54                     	;# 
  1208  0F55                     	;# 
  1209  0F56                     	;# 
  1210  0F57                     	;# 
  1211  0F59                     	;# 
  1212  0F5A                     	;# 
  1213  0F5B                     	;# 
  1214  0F5C                     	;# 
  1215  0F5D                     	;# 
  1216  0F61                     	;# 
  1217  0F62                     	;# 
  1218  0F64                     	;# 
  1219  0F65                     	;# 
  1220  0F66                     	;# 
  1221  0F67                     	;# 
  1222  0F68                     	;# 
  1223  0F69                     	;# 
  1224  0F6A                     	;# 
  1225  0F6B                     	;# 
  1226  0F6C                     	;# 
  1227  0F6D                     	;# 
  1228  0FE4                     	;# 
  1229  0FE5                     	;# 
  1230  0FE6                     	;# 
  1231  0FE7                     	;# 
  1232  0FE8                     	;# 
  1233  0FE9                     	;# 
  1234  0FEA                     	;# 
  1235  0FEB                     	;# 
  1236  0FED                     	;# 
  1237  0FEE                     	;# 
  1238  0FEF                     	;# 
  1239  0000                     	;# 
  1240  0001                     	;# 
  1241  0002                     	;# 
  1242  0003                     	;# 
  1243  0004                     	;# 
  1244  0005                     	;# 
  1245  0006                     	;# 
  1246  0007                     	;# 
  1247  0008                     	;# 
  1248  0009                     	;# 
  1249  000A                     	;# 
  1250  000B                     	;# 
  1251  000C                     	;# 
  1252  000D                     	;# 
  1253  000E                     	;# 
  1254  000F                     	;# 
  1255  0010                     	;# 
  1256  0011                     	;# 
  1257  0012                     	;# 
  1258  0013                     	;# 
  1259  0014                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0017                     	;# 
  1263  0018                     	;# 
  1264  0019                     	;# 
  1265  001A                     	;# 
  1266  001C                     	;# 
  1267  001C                     	;# 
  1268  001D                     	;# 
  1269  001D                     	;# 
  1270  001E                     	;# 
  1271  001F                     	;# 
  1272  008C                     	;# 
  1273  008C                     	;# 
  1274  008D                     	;# 
  1275  008E                     	;# 
  1276  008E                     	;# 
  1277  008F                     	;# 
  1278  0090                     	;# 
  1279  0090                     	;# 
  1280  0091                     	;# 
  1281  0093                     	;# 
  1282  0094                     	;# 
  1283  0095                     	;# 
  1284  0096                     	;# 
  1285  0097                     	;# 
  1286  0098                     	;# 
  1287  0099                     	;# 
  1288  009A                     	;# 
  1289  009B                     	;# 
  1290  009C                     	;# 
  1291  009D                     	;# 
  1292  009E                     	;# 
  1293  010C                     	;# 
  1294  010D                     	;# 
  1295  010E                     	;# 
  1296  010E                     	;# 
  1297  010F                     	;# 
  1298  0110                     	;# 
  1299  0110                     	;# 
  1300  0111                     	;# 
  1301  0112                     	;# 
  1302  0112                     	;# 
  1303  0113                     	;# 
  1304  0114                     	;# 
  1305  0114                     	;# 
  1306  0115                     	;# 
  1307  0116                     	;# 
  1308  0116                     	;# 
  1309  0117                     	;# 
  1310  0119                     	;# 
  1311  0119                     	;# 
  1312  0119                     	;# 
  1313  011A                     	;# 
  1314  011A                     	;# 
  1315  011A                     	;# 
  1316  011B                     	;# 
  1317  011B                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011B                     	;# 
  1321  011C                     	;# 
  1322  011C                     	;# 
  1323  011C                     	;# 
  1324  011D                     	;# 
  1325  011D                     	;# 
  1326  011D                     	;# 
  1327  011E                     	;# 
  1328  011E                     	;# 
  1329  011E                     	;# 
  1330  011F                     	;# 
  1331  011F                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  011F                     	;# 
  1335  018C                     	;# 
  1336  018D                     	;# 
  1337  018E                     	;# 
  1338  018F                     	;# 
  1339  0190                     	;# 
  1340  0191                     	;# 
  1341  0192                     	;# 
  1342  0196                     	;# 
  1343  0197                     	;# 
  1344  0198                     	;# 
  1345  0199                     	;# 
  1346  019A                     	;# 
  1347  019B                     	;# 
  1348  019C                     	;# 
  1349  020C                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  020F                     	;# 
  1354  020F                     	;# 
  1355  0210                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  0212                     	;# 
  1360  0212                     	;# 
  1361  0213                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0216                     	;# 
  1366  0216                     	;# 
  1367  0217                     	;# 
  1368  0217                     	;# 
  1369  0218                     	;# 
  1370  0218                     	;# 
  1371  0219                     	;# 
  1372  021A                     	;# 
  1373  021B                     	;# 
  1374  021B                     	;# 
  1375  021C                     	;# 
  1376  021C                     	;# 
  1377  021D                     	;# 
  1378  021D                     	;# 
  1379  021E                     	;# 
  1380  021F                     	;# 
  1381  028C                     	;# 
  1382  028C                     	;# 
  1383  028D                     	;# 
  1384  028D                     	;# 
  1385  028E                     	;# 
  1386  028F                     	;# 
  1387  0290                     	;# 
  1388  0290                     	;# 
  1389  0291                     	;# 
  1390  0292                     	;# 
  1391  0292                     	;# 
  1392  0293                     	;# 
  1393  0293                     	;# 
  1394  0294                     	;# 
  1395  0295                     	;# 
  1396  0296                     	;# 
  1397  0296                     	;# 
  1398  0297                     	;# 
  1399  0298                     	;# 
  1400  0298                     	;# 
  1401  0299                     	;# 
  1402  0299                     	;# 
  1403  029A                     	;# 
  1404  029B                     	;# 
  1405  029C                     	;# 
  1406  029C                     	;# 
  1407  029D                     	;# 
  1408  030C                     	;# 
  1409  030C                     	;# 
  1410  030D                     	;# 
  1411  030E                     	;# 
  1412  030F                     	;# 
  1413  0310                     	;# 
  1414  0310                     	;# 
  1415  0311                     	;# 
  1416  0312                     	;# 
  1417  0313                     	;# 
  1418  0314                     	;# 
  1419  0314                     	;# 
  1420  0315                     	;# 
  1421  0316                     	;# 
  1422  0317                     	;# 
  1423  0318                     	;# 
  1424  0318                     	;# 
  1425  0319                     	;# 
  1426  031A                     	;# 
  1427  031B                     	;# 
  1428  031C                     	;# 
  1429  031C                     	;# 
  1430  031D                     	;# 
  1431  031E                     	;# 
  1432  031F                     	;# 
  1433  038C                     	;# 
  1434  038C                     	;# 
  1435  038D                     	;# 
  1436  038E                     	;# 
  1437  0390                     	;# 
  1438  0390                     	;# 
  1439  0391                     	;# 
  1440  0392                     	;# 
  1441  040C                     	;# 
  1442  040D                     	;# 
  1443  040E                     	;# 
  1444  040F                     	;# 
  1445  0410                     	;# 
  1446  0411                     	;# 
  1447  0416                     	;# 
  1448  0416                     	;# 
  1449  0417                     	;# 
  1450  0418                     	;# 
  1451  0418                     	;# 
  1452  0419                     	;# 
  1453  041A                     	;# 
  1454  041A                     	;# 
  1455  041B                     	;# 
  1456  041C                     	;# 
  1457  041C                     	;# 
  1458  041D                     	;# 
  1459  041E                     	;# 
  1460  041F                     	;# 
  1461  048C                     	;# 
  1462  048C                     	;# 
  1463  048D                     	;# 
  1464  048E                     	;# 
  1465  048F                     	;# 
  1466  048F                     	;# 
  1467  0490                     	;# 
  1468  0491                     	;# 
  1469  0492                     	;# 
  1470  0492                     	;# 
  1471  0493                     	;# 
  1472  0494                     	;# 
  1473  0495                     	;# 
  1474  0495                     	;# 
  1475  0496                     	;# 
  1476  0497                     	;# 
  1477  0498                     	;# 
  1478  0499                     	;# 
  1479  049A                     	;# 
  1480  049B                     	;# 
  1481  049C                     	;# 
  1482  049D                     	;# 
  1483  050C                     	;# 
  1484  050C                     	;# 
  1485  050D                     	;# 
  1486  050E                     	;# 
  1487  050F                     	;# 
  1488  050F                     	;# 
  1489  0510                     	;# 
  1490  0511                     	;# 
  1491  0512                     	;# 
  1492  0512                     	;# 
  1493  0513                     	;# 
  1494  0514                     	;# 
  1495  0515                     	;# 
  1496  0515                     	;# 
  1497  0516                     	;# 
  1498  0517                     	;# 
  1499  0518                     	;# 
  1500  0519                     	;# 
  1501  051A                     	;# 
  1502  051B                     	;# 
  1503  051C                     	;# 
  1504  051D                     	;# 
  1505  058C                     	;# 
  1506  058C                     	;# 
  1507  058D                     	;# 
  1508  058E                     	;# 
  1509  058F                     	;# 
  1510  058F                     	;# 
  1511  0590                     	;# 
  1512  0591                     	;# 
  1513  0592                     	;# 
  1514  0593                     	;# 
  1515  060C                     	;# 
  1516  060D                     	;# 
  1517  060E                     	;# 
  1518  060F                     	;# 
  1519  0610                     	;# 
  1520  0611                     	;# 
  1521  0612                     	;# 
  1522  0613                     	;# 
  1523  0614                     	;# 
  1524  0616                     	;# 
  1525  0617                     	;# 
  1526  0618                     	;# 
  1527  0619                     	;# 
  1528  061A                     	;# 
  1529  061B                     	;# 
  1530  061C                     	;# 
  1531  061D                     	;# 
  1532  061E                     	;# 
  1533  068C                     	;# 
  1534  068D                     	;# 
  1535  068E                     	;# 
  1536  068F                     	;# 
  1537  0690                     	;# 
  1538  0691                     	;# 
  1539  0692                     	;# 
  1540  0693                     	;# 
  1541  0694                     	;# 
  1542  070C                     	;# 
  1543  070D                     	;# 
  1544  070E                     	;# 
  1545  070F                     	;# 
  1546  0710                     	;# 
  1547  0711                     	;# 
  1548  0712                     	;# 
  1549  0713                     	;# 
  1550  0714                     	;# 
  1551  0716                     	;# 
  1552  0717                     	;# 
  1553  0718                     	;# 
  1554  0719                     	;# 
  1555  071A                     	;# 
  1556  071B                     	;# 
  1557  071C                     	;# 
  1558  071D                     	;# 
  1559  071E                     	;# 
  1560  0796                     	;# 
  1561  0797                     	;# 
  1562  0798                     	;# 
  1563  0799                     	;# 
  1564  079A                     	;# 
  1565  079B                     	;# 
  1566  080C                     	;# 
  1567  080D                     	;# 
  1568  080E                     	;# 
  1569  080F                     	;# 
  1570  0810                     	;# 
  1571  0811                     	;# 
  1572  0812                     	;# 
  1573  0813                     	;# 
  1574  0814                     	;# 
  1575  081A                     	;# 
  1576  081B                     	;# 
  1577  081C                     	;# 
  1578  081D                     	;# 
  1579  081E                     	;# 
  1580  081F                     	;# 
  1581  088C                     	;# 
  1582  088D                     	;# 
  1583  088E                     	;# 
  1584  088F                     	;# 
  1585  0890                     	;# 
  1586  0891                     	;# 
  1587  0892                     	;# 
  1588  0893                     	;# 
  1589  0895                     	;# 
  1590  0896                     	;# 
  1591  0897                     	;# 
  1592  0898                     	;# 
  1593  0899                     	;# 
  1594  089A                     	;# 
  1595  089B                     	;# 
  1596  090C                     	;# 
  1597  090E                     	;# 
  1598  090F                     	;# 
  1599  091F                     	;# 
  1600  091F                     	;# 
  1601  098F                     	;# 
  1602  098F                     	;# 
  1603  0990                     	;# 
  1604  0991                     	;# 
  1605  0992                     	;# 
  1606  0993                     	;# 
  1607  0994                     	;# 
  1608  0995                     	;# 
  1609  0996                     	;# 
  1610  0997                     	;# 
  1611  0E0F                     	;# 
  1612  0E10                     	;# 
  1613  0E11                     	;# 
  1614  0E12                     	;# 
  1615  0E13                     	;# 
  1616  0E14                     	;# 
  1617  0E15                     	;# 
  1618  0E16                     	;# 
  1619  0E17                     	;# 
  1620  0E18                     	;# 
  1621  0E19                     	;# 
  1622  0E1A                     	;# 
  1623  0E1B                     	;# 
  1624  0E1C                     	;# 
  1625  0E1D                     	;# 
  1626  0E1E                     	;# 
  1627  0E1F                     	;# 
  1628  0E20                     	;# 
  1629  0E21                     	;# 
  1630  0E22                     	;# 
  1631  0E23                     	;# 
  1632  0E24                     	;# 
  1633  0E25                     	;# 
  1634  0E26                     	;# 
  1635  0E27                     	;# 
  1636  0E28                     	;# 
  1637  0E29                     	;# 
  1638  0E2A                     	;# 
  1639  0E2B                     	;# 
  1640  0E2C                     	;# 
  1641  0E2D                     	;# 
  1642  0E2E                     	;# 
  1643  0E2F                     	;# 
  1644  0E30                     	;# 
  1645  0E31                     	;# 
  1646  0E32                     	;# 
  1647  0E33                     	;# 
  1648  0E34                     	;# 
  1649  0E35                     	;# 
  1650  0E36                     	;# 
  1651  0E37                     	;# 
  1652  0E8F                     	;# 
  1653  0E90                     	;# 
  1654  0E91                     	;# 
  1655  0E92                     	;# 
  1656  0E93                     	;# 
  1657  0E94                     	;# 
  1658  0E95                     	;# 
  1659  0E96                     	;# 
  1660  0E97                     	;# 
  1661  0E9C                     	;# 
  1662  0E9D                     	;# 
  1663  0E9E                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA9                     	;# 
  1670  0EAA                     	;# 
  1671  0EAB                     	;# 
  1672  0EAC                     	;# 
  1673  0EB1                     	;# 
  1674  0EB2                     	;# 
  1675  0EB3                     	;# 
  1676  0EB8                     	;# 
  1677  0EB9                     	;# 
  1678  0EBA                     	;# 
  1679  0EBB                     	;# 
  1680  0EBC                     	;# 
  1681  0EBD                     	;# 
  1682  0EBE                     	;# 
  1683  0EC3                     	;# 
  1684  0EC5                     	;# 
  1685  0EC6                     	;# 
  1686  0EC7                     	;# 
  1687  0EC8                     	;# 
  1688  0EC9                     	;# 
  1689  0ECA                     	;# 
  1690  0ECB                     	;# 
  1691  0ECC                     	;# 
  1692  0F10                     	;# 
  1693  0F11                     	;# 
  1694  0F12                     	;# 
  1695  0F13                     	;# 
  1696  0F14                     	;# 
  1697  0F15                     	;# 
  1698  0F16                     	;# 
  1699  0F17                     	;# 
  1700  0F18                     	;# 
  1701  0F19                     	;# 
  1702  0F1A                     	;# 
  1703  0F1B                     	;# 
  1704  0F1C                     	;# 
  1705  0F1D                     	;# 
  1706  0F1E                     	;# 
  1707  0F1F                     	;# 
  1708  0F20                     	;# 
  1709  0F21                     	;# 
  1710  0F22                     	;# 
  1711  0F23                     	;# 
  1712  0F24                     	;# 
  1713  0F25                     	;# 
  1714  0F26                     	;# 
  1715  0F27                     	;# 
  1716  0F28                     	;# 
  1717  0F29                     	;# 
  1718  0F2A                     	;# 
  1719  0F2B                     	;# 
  1720  0F2C                     	;# 
  1721  0F2D                     	;# 
  1722  0F2E                     	;# 
  1723  0F2F                     	;# 
  1724  0F30                     	;# 
  1725  0F31                     	;# 
  1726  0F32                     	;# 
  1727  0F38                     	;# 
  1728  0F39                     	;# 
  1729  0F3A                     	;# 
  1730  0F3B                     	;# 
  1731  0F3C                     	;# 
  1732  0F3D                     	;# 
  1733  0F3E                     	;# 
  1734  0F3F                     	;# 
  1735  0F40                     	;# 
  1736  0F41                     	;# 
  1737  0F43                     	;# 
  1738  0F44                     	;# 
  1739  0F45                     	;# 
  1740  0F46                     	;# 
  1741  0F47                     	;# 
  1742  0F48                     	;# 
  1743  0F49                     	;# 
  1744  0F4A                     	;# 
  1745  0F4B                     	;# 
  1746  0F4C                     	;# 
  1747  0F4E                     	;# 
  1748  0F4F                     	;# 
  1749  0F50                     	;# 
  1750  0F51                     	;# 
  1751  0F52                     	;# 
  1752  0F53                     	;# 
  1753  0F54                     	;# 
  1754  0F55                     	;# 
  1755  0F56                     	;# 
  1756  0F57                     	;# 
  1757  0F59                     	;# 
  1758  0F5A                     	;# 
  1759  0F5B                     	;# 
  1760  0F5C                     	;# 
  1761  0F5D                     	;# 
  1762  0F61                     	;# 
  1763  0F62                     	;# 
  1764  0F64                     	;# 
  1765  0F65                     	;# 
  1766  0F66                     	;# 
  1767  0F67                     	;# 
  1768  0F68                     	;# 
  1769  0F69                     	;# 
  1770  0F6A                     	;# 
  1771  0F6B                     	;# 
  1772  0F6C                     	;# 
  1773  0F6D                     	;# 
  1774  0FE4                     	;# 
  1775  0FE5                     	;# 
  1776  0FE6                     	;# 
  1777  0FE7                     	;# 
  1778  0FE8                     	;# 
  1779  0FE9                     	;# 
  1780  0FEA                     	;# 
  1781  0FEB                     	;# 
  1782  0FED                     	;# 
  1783  0FEE                     	;# 
  1784  0FEF                     	;# 
  1785  0000                     	;# 
  1786  0001                     	;# 
  1787  0002                     	;# 
  1788  0003                     	;# 
  1789  0004                     	;# 
  1790  0005                     	;# 
  1791  0006                     	;# 
  1792  0007                     	;# 
  1793  0008                     	;# 
  1794  0009                     	;# 
  1795  000A                     	;# 
  1796  000B                     	;# 
  1797  000C                     	;# 
  1798  000D                     	;# 
  1799  000E                     	;# 
  1800  000F                     	;# 
  1801  0010                     	;# 
  1802  0011                     	;# 
  1803  0012                     	;# 
  1804  0013                     	;# 
  1805  0014                     	;# 
  1806  0015                     	;# 
  1807  0016                     	;# 
  1808  0017                     	;# 
  1809  0018                     	;# 
  1810  0019                     	;# 
  1811  001A                     	;# 
  1812  001C                     	;# 
  1813  001C                     	;# 
  1814  001D                     	;# 
  1815  001D                     	;# 
  1816  001E                     	;# 
  1817  001F                     	;# 
  1818  008C                     	;# 
  1819  008C                     	;# 
  1820  008D                     	;# 
  1821  008E                     	;# 
  1822  008E                     	;# 
  1823  008F                     	;# 
  1824  0090                     	;# 
  1825  0090                     	;# 
  1826  0091                     	;# 
  1827  0093                     	;# 
  1828  0094                     	;# 
  1829  0095                     	;# 
  1830  0096                     	;# 
  1831  0097                     	;# 
  1832  0098                     	;# 
  1833  0099                     	;# 
  1834  009A                     	;# 
  1835  009B                     	;# 
  1836  009C                     	;# 
  1837  009D                     	;# 
  1838  009E                     	;# 
  1839  010C                     	;# 
  1840  010D                     	;# 
  1841  010E                     	;# 
  1842  010E                     	;# 
  1843  010F                     	;# 
  1844  0110                     	;# 
  1845  0110                     	;# 
  1846  0111                     	;# 
  1847  0112                     	;# 
  1848  0112                     	;# 
  1849  0113                     	;# 
  1850  0114                     	;# 
  1851  0114                     	;# 
  1852  0115                     	;# 
  1853  0116                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0119                     	;# 
  1857  0119                     	;# 
  1858  0119                     	;# 
  1859  011A                     	;# 
  1860  011A                     	;# 
  1861  011A                     	;# 
  1862  011B                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011B                     	;# 
  1867  011C                     	;# 
  1868  011C                     	;# 
  1869  011C                     	;# 
  1870  011D                     	;# 
  1871  011D                     	;# 
  1872  011D                     	;# 
  1873  011E                     	;# 
  1874  011E                     	;# 
  1875  011E                     	;# 
  1876  011F                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  011F                     	;# 
  1881  018C                     	;# 
  1882  018D                     	;# 
  1883  018E                     	;# 
  1884  018F                     	;# 
  1885  0190                     	;# 
  1886  0191                     	;# 
  1887  0192                     	;# 
  1888  0196                     	;# 
  1889  0197                     	;# 
  1890  0198                     	;# 
  1891  0199                     	;# 
  1892  019A                     	;# 
  1893  019B                     	;# 
  1894  019C                     	;# 
  1895  020C                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  020F                     	;# 
  1900  020F                     	;# 
  1901  0210                     	;# 
  1902  0210                     	;# 
  1903  0211                     	;# 
  1904  0211                     	;# 
  1905  0212                     	;# 
  1906  0212                     	;# 
  1907  0213                     	;# 
  1908  0214                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  0218                     	;# 
  1916  0218                     	;# 
  1917  0219                     	;# 
  1918  021A                     	;# 
  1919  021B                     	;# 
  1920  021B                     	;# 
  1921  021C                     	;# 
  1922  021C                     	;# 
  1923  021D                     	;# 
  1924  021D                     	;# 
  1925  021E                     	;# 
  1926  021F                     	;# 
  1927  028C                     	;# 
  1928  028C                     	;# 
  1929  028D                     	;# 
  1930  028D                     	;# 
  1931  028E                     	;# 
  1932  028F                     	;# 
  1933  0290                     	;# 
  1934  0290                     	;# 
  1935  0291                     	;# 
  1936  0292                     	;# 
  1937  0292                     	;# 
  1938  0293                     	;# 
  1939  0293                     	;# 
  1940  0294                     	;# 
  1941  0295                     	;# 
  1942  0296                     	;# 
  1943  0296                     	;# 
  1944  0297                     	;# 
  1945  0298                     	;# 
  1946  0298                     	;# 
  1947  0299                     	;# 
  1948  0299                     	;# 
  1949  029A                     	;# 
  1950  029B                     	;# 
  1951  029C                     	;# 
  1952  029C                     	;# 
  1953  029D                     	;# 
  1954  030C                     	;# 
  1955  030C                     	;# 
  1956  030D                     	;# 
  1957  030E                     	;# 
  1958  030F                     	;# 
  1959  0310                     	;# 
  1960  0310                     	;# 
  1961  0311                     	;# 
  1962  0312                     	;# 
  1963  0313                     	;# 
  1964  0314                     	;# 
  1965  0314                     	;# 
  1966  0315                     	;# 
  1967  0316                     	;# 
  1968  0317                     	;# 
  1969  0318                     	;# 
  1970  0318                     	;# 
  1971  0319                     	;# 
  1972  031A                     	;# 
  1973  031B                     	;# 
  1974  031C                     	;# 
  1975  031C                     	;# 
  1976  031D                     	;# 
  1977  031E                     	;# 
  1978  031F                     	;# 
  1979  038C                     	;# 
  1980  038C                     	;# 
  1981  038D                     	;# 
  1982  038E                     	;# 
  1983  0390                     	;# 
  1984  0390                     	;# 
  1985  0391                     	;# 
  1986  0392                     	;# 
  1987  040C                     	;# 
  1988  040D                     	;# 
  1989  040E                     	;# 
  1990  040F                     	;# 
  1991  0410                     	;# 
  1992  0411                     	;# 
  1993  0416                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  0418                     	;# 
  1997  0418                     	;# 
  1998  0419                     	;# 
  1999  041A                     	;# 
  2000  041A                     	;# 
  2001  041B                     	;# 
  2002  041C                     	;# 
  2003  041C                     	;# 
  2004  041D                     	;# 
  2005  041E                     	;# 
  2006  041F                     	;# 
  2007  048C                     	;# 
  2008  048C                     	;# 
  2009  048D                     	;# 
  2010  048E                     	;# 
  2011  048F                     	;# 
  2012  048F                     	;# 
  2013  0490                     	;# 
  2014  0491                     	;# 
  2015  0492                     	;# 
  2016  0492                     	;# 
  2017  0493                     	;# 
  2018  0494                     	;# 
  2019  0495                     	;# 
  2020  0495                     	;# 
  2021  0496                     	;# 
  2022  0497                     	;# 
  2023  0498                     	;# 
  2024  0499                     	;# 
  2025  049A                     	;# 
  2026  049B                     	;# 
  2027  049C                     	;# 
  2028  049D                     	;# 
  2029  050C                     	;# 
  2030  050C                     	;# 
  2031  050D                     	;# 
  2032  050E                     	;# 
  2033  050F                     	;# 
  2034  050F                     	;# 
  2035  0510                     	;# 
  2036  0511                     	;# 
  2037  0512                     	;# 
  2038  0512                     	;# 
  2039  0513                     	;# 
  2040  0514                     	;# 
  2041  0515                     	;# 
  2042  0515                     	;# 
  2043  0516                     	;# 
  2044  0517                     	;# 
  2045  0518                     	;# 
  2046  0519                     	;# 
  2047  051A                     	;# 
  2048  051B                     	;# 
  2049  051C                     	;# 
  2050  051D                     	;# 
  2051  058C                     	;# 
  2052  058C                     	;# 
  2053  058D                     	;# 
  2054  058E                     	;# 
  2055  058F                     	;# 
  2056  058F                     	;# 
  2057  0590                     	;# 
  2058  0591                     	;# 
  2059  0592                     	;# 
  2060  0593                     	;# 
  2061  060C                     	;# 
  2062  060D                     	;# 
  2063  060E                     	;# 
  2064  060F                     	;# 
  2065  0610                     	;# 
  2066  0611                     	;# 
  2067  0612                     	;# 
  2068  0613                     	;# 
  2069  0614                     	;# 
  2070  0616                     	;# 
  2071  0617                     	;# 
  2072  0618                     	;# 
  2073  0619                     	;# 
  2074  061A                     	;# 
  2075  061B                     	;# 
  2076  061C                     	;# 
  2077  061D                     	;# 
  2078  061E                     	;# 
  2079  068C                     	;# 
  2080  068D                     	;# 
  2081  068E                     	;# 
  2082  068F                     	;# 
  2083  0690                     	;# 
  2084  0691                     	;# 
  2085  0692                     	;# 
  2086  0693                     	;# 
  2087  0694                     	;# 
  2088  070C                     	;# 
  2089  070D                     	;# 
  2090  070E                     	;# 
  2091  070F                     	;# 
  2092  0710                     	;# 
  2093  0711                     	;# 
  2094  0712                     	;# 
  2095  0713                     	;# 
  2096  0714                     	;# 
  2097  0716                     	;# 
  2098  0717                     	;# 
  2099  0718                     	;# 
  2100  0719                     	;# 
  2101  071A                     	;# 
  2102  071B                     	;# 
  2103  071C                     	;# 
  2104  071D                     	;# 
  2105  071E                     	;# 
  2106  0796                     	;# 
  2107  0797                     	;# 
  2108  0798                     	;# 
  2109  0799                     	;# 
  2110  079A                     	;# 
  2111  079B                     	;# 
  2112  080C                     	;# 
  2113  080D                     	;# 
  2114  080E                     	;# 
  2115  080F                     	;# 
  2116  0810                     	;# 
  2117  0811                     	;# 
  2118  0812                     	;# 
  2119  0813                     	;# 
  2120  0814                     	;# 
  2121  081A                     	;# 
  2122  081B                     	;# 
  2123  081C                     	;# 
  2124  081D                     	;# 
  2125  081E                     	;# 
  2126  081F                     	;# 
  2127  088C                     	;# 
  2128  088D                     	;# 
  2129  088E                     	;# 
  2130  088F                     	;# 
  2131  0890                     	;# 
  2132  0891                     	;# 
  2133  0892                     	;# 
  2134  0893                     	;# 
  2135  0895                     	;# 
  2136  0896                     	;# 
  2137  0897                     	;# 
  2138  0898                     	;# 
  2139  0899                     	;# 
  2140  089A                     	;# 
  2141  089B                     	;# 
  2142  090C                     	;# 
  2143  090E                     	;# 
  2144  090F                     	;# 
  2145  091F                     	;# 
  2146  091F                     	;# 
  2147  098F                     	;# 
  2148  098F                     	;# 
  2149  0990                     	;# 
  2150  0991                     	;# 
  2151  0992                     	;# 
  2152  0993                     	;# 
  2153  0994                     	;# 
  2154  0995                     	;# 
  2155  0996                     	;# 
  2156  0997                     	;# 
  2157  0E0F                     	;# 
  2158  0E10                     	;# 
  2159  0E11                     	;# 
  2160  0E12                     	;# 
  2161  0E13                     	;# 
  2162  0E14                     	;# 
  2163  0E15                     	;# 
  2164  0E16                     	;# 
  2165  0E17                     	;# 
  2166  0E18                     	;# 
  2167  0E19                     	;# 
  2168  0E1A                     	;# 
  2169  0E1B                     	;# 
  2170  0E1C                     	;# 
  2171  0E1D                     	;# 
  2172  0E1E                     	;# 
  2173  0E1F                     	;# 
  2174  0E20                     	;# 
  2175  0E21                     	;# 
  2176  0E22                     	;# 
  2177  0E23                     	;# 
  2178  0E24                     	;# 
  2179  0E25                     	;# 
  2180  0E26                     	;# 
  2181  0E27                     	;# 
  2182  0E28                     	;# 
  2183  0E29                     	;# 
  2184  0E2A                     	;# 
  2185  0E2B                     	;# 
  2186  0E2C                     	;# 
  2187  0E2D                     	;# 
  2188  0E2E                     	;# 
  2189  0E2F                     	;# 
  2190  0E30                     	;# 
  2191  0E31                     	;# 
  2192  0E32                     	;# 
  2193  0E33                     	;# 
  2194  0E34                     	;# 
  2195  0E35                     	;# 
  2196  0E36                     	;# 
  2197  0E37                     	;# 
  2198  0E8F                     	;# 
  2199  0E90                     	;# 
  2200  0E91                     	;# 
  2201  0E92                     	;# 
  2202  0E93                     	;# 
  2203  0E94                     	;# 
  2204  0E95                     	;# 
  2205  0E96                     	;# 
  2206  0E97                     	;# 
  2207  0E9C                     	;# 
  2208  0E9D                     	;# 
  2209  0E9E                     	;# 
  2210  0EA1                     	;# 
  2211  0EA2                     	;# 
  2212  0EA3                     	;# 
  2213  0EA4                     	;# 
  2214  0EA5                     	;# 
  2215  0EA9                     	;# 
  2216  0EAA                     	;# 
  2217  0EAB                     	;# 
  2218  0EAC                     	;# 
  2219  0EB1                     	;# 
  2220  0EB2                     	;# 
  2221  0EB3                     	;# 
  2222  0EB8                     	;# 
  2223  0EB9                     	;# 
  2224  0EBA                     	;# 
  2225  0EBB                     	;# 
  2226  0EBC                     	;# 
  2227  0EBD                     	;# 
  2228  0EBE                     	;# 
  2229  0EC3                     	;# 
  2230  0EC5                     	;# 
  2231  0EC6                     	;# 
  2232  0EC7                     	;# 
  2233  0EC8                     	;# 
  2234  0EC9                     	;# 
  2235  0ECA                     	;# 
  2236  0ECB                     	;# 
  2237  0ECC                     	;# 
  2238  0F10                     	;# 
  2239  0F11                     	;# 
  2240  0F12                     	;# 
  2241  0F13                     	;# 
  2242  0F14                     	;# 
  2243  0F15                     	;# 
  2244  0F16                     	;# 
  2245  0F17                     	;# 
  2246  0F18                     	;# 
  2247  0F19                     	;# 
  2248  0F1A                     	;# 
  2249  0F1B                     	;# 
  2250  0F1C                     	;# 
  2251  0F1D                     	;# 
  2252  0F1E                     	;# 
  2253  0F1F                     	;# 
  2254  0F20                     	;# 
  2255  0F21                     	;# 
  2256  0F22                     	;# 
  2257  0F23                     	;# 
  2258  0F24                     	;# 
  2259  0F25                     	;# 
  2260  0F26                     	;# 
  2261  0F27                     	;# 
  2262  0F28                     	;# 
  2263  0F29                     	;# 
  2264  0F2A                     	;# 
  2265  0F2B                     	;# 
  2266  0F2C                     	;# 
  2267  0F2D                     	;# 
  2268  0F2E                     	;# 
  2269  0F2F                     	;# 
  2270  0F30                     	;# 
  2271  0F31                     	;# 
  2272  0F32                     	;# 
  2273  0F38                     	;# 
  2274  0F39                     	;# 
  2275  0F3A                     	;# 
  2276  0F3B                     	;# 
  2277  0F3C                     	;# 
  2278  0F3D                     	;# 
  2279  0F3E                     	;# 
  2280  0F3F                     	;# 
  2281  0F40                     	;# 
  2282  0F41                     	;# 
  2283  0F43                     	;# 
  2284  0F44                     	;# 
  2285  0F45                     	;# 
  2286  0F46                     	;# 
  2287  0F47                     	;# 
  2288  0F48                     	;# 
  2289  0F49                     	;# 
  2290  0F4A                     	;# 
  2291  0F4B                     	;# 
  2292  0F4C                     	;# 
  2293  0F4E                     	;# 
  2294  0F4F                     	;# 
  2295  0F50                     	;# 
  2296  0F51                     	;# 
  2297  0F52                     	;# 
  2298  0F53                     	;# 
  2299  0F54                     	;# 
  2300  0F55                     	;# 
  2301  0F56                     	;# 
  2302  0F57                     	;# 
  2303  0F59                     	;# 
  2304  0F5A                     	;# 
  2305  0F5B                     	;# 
  2306  0F5C                     	;# 
  2307  0F5D                     	;# 
  2308  0F61                     	;# 
  2309  0F62                     	;# 
  2310  0F64                     	;# 
  2311  0F65                     	;# 
  2312  0F66                     	;# 
  2313  0F67                     	;# 
  2314  0F68                     	;# 
  2315  0F69                     	;# 
  2316  0F6A                     	;# 
  2317  0F6B                     	;# 
  2318  0F6C                     	;# 
  2319  0F6D                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  000F                     	;# 
  2347  0010                     	;# 
  2348  0011                     	;# 
  2349  0012                     	;# 
  2350  0013                     	;# 
  2351  0014                     	;# 
  2352  0015                     	;# 
  2353  0016                     	;# 
  2354  0017                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001C                     	;# 
  2359  001C                     	;# 
  2360  001D                     	;# 
  2361  001D                     	;# 
  2362  001E                     	;# 
  2363  001F                     	;# 
  2364  008C                     	;# 
  2365  008C                     	;# 
  2366  008D                     	;# 
  2367  008E                     	;# 
  2368  008E                     	;# 
  2369  008F                     	;# 
  2370  0090                     	;# 
  2371  0090                     	;# 
  2372  0091                     	;# 
  2373  0093                     	;# 
  2374  0094                     	;# 
  2375  0095                     	;# 
  2376  0096                     	;# 
  2377  0097                     	;# 
  2378  0098                     	;# 
  2379  0099                     	;# 
  2380  009A                     	;# 
  2381  009B                     	;# 
  2382  009C                     	;# 
  2383  009D                     	;# 
  2384  009E                     	;# 
  2385  010C                     	;# 
  2386  010D                     	;# 
  2387  010E                     	;# 
  2388  010E                     	;# 
  2389  010F                     	;# 
  2390  0110                     	;# 
  2391  0110                     	;# 
  2392  0111                     	;# 
  2393  0112                     	;# 
  2394  0112                     	;# 
  2395  0113                     	;# 
  2396  0114                     	;# 
  2397  0114                     	;# 
  2398  0115                     	;# 
  2399  0116                     	;# 
  2400  0116                     	;# 
  2401  0117                     	;# 
  2402  0119                     	;# 
  2403  0119                     	;# 
  2404  0119                     	;# 
  2405  011A                     	;# 
  2406  011A                     	;# 
  2407  011A                     	;# 
  2408  011B                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011B                     	;# 
  2413  011C                     	;# 
  2414  011C                     	;# 
  2415  011C                     	;# 
  2416  011D                     	;# 
  2417  011D                     	;# 
  2418  011D                     	;# 
  2419  011E                     	;# 
  2420  011E                     	;# 
  2421  011E                     	;# 
  2422  011F                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  011F                     	;# 
  2427  018C                     	;# 
  2428  018D                     	;# 
  2429  018E                     	;# 
  2430  018F                     	;# 
  2431  0190                     	;# 
  2432  0191                     	;# 
  2433  0192                     	;# 
  2434  0196                     	;# 
  2435  0197                     	;# 
  2436  0198                     	;# 
  2437  0199                     	;# 
  2438  019A                     	;# 
  2439  019B                     	;# 
  2440  019C                     	;# 
  2441  020C                     	;# 
  2442  020C                     	;# 
  2443  020D                     	;# 
  2444  020E                     	;# 
  2445  020F                     	;# 
  2446  020F                     	;# 
  2447  0210                     	;# 
  2448  0210                     	;# 
  2449  0211                     	;# 
  2450  0211                     	;# 
  2451  0212                     	;# 
  2452  0212                     	;# 
  2453  0213                     	;# 
  2454  0214                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  0218                     	;# 
  2462  0218                     	;# 
  2463  0219                     	;# 
  2464  021A                     	;# 
  2465  021B                     	;# 
  2466  021B                     	;# 
  2467  021C                     	;# 
  2468  021C                     	;# 
  2469  021D                     	;# 
  2470  021D                     	;# 
  2471  021E                     	;# 
  2472  021F                     	;# 
  2473  028C                     	;# 
  2474  028C                     	;# 
  2475  028D                     	;# 
  2476  028D                     	;# 
  2477  028E                     	;# 
  2478  028F                     	;# 
  2479  0290                     	;# 
  2480  0290                     	;# 
  2481  0291                     	;# 
  2482  0292                     	;# 
  2483  0292                     	;# 
  2484  0293                     	;# 
  2485  0293                     	;# 
  2486  0294                     	;# 
  2487  0295                     	;# 
  2488  0296                     	;# 
  2489  0296                     	;# 
  2490  0297                     	;# 
  2491  0298                     	;# 
  2492  0298                     	;# 
  2493  0299                     	;# 
  2494  0299                     	;# 
  2495  029A                     	;# 
  2496  029B                     	;# 
  2497  029C                     	;# 
  2498  029C                     	;# 
  2499  029D                     	;# 
  2500  030C                     	;# 
  2501  030C                     	;# 
  2502  030D                     	;# 
  2503  030E                     	;# 
  2504  030F                     	;# 
  2505  0310                     	;# 
  2506  0310                     	;# 
  2507  0311                     	;# 
  2508  0312                     	;# 
  2509  0313                     	;# 
  2510  0314                     	;# 
  2511  0314                     	;# 
  2512  0315                     	;# 
  2513  0316                     	;# 
  2514  0317                     	;# 
  2515  0318                     	;# 
  2516  0318                     	;# 
  2517  0319                     	;# 
  2518  031A                     	;# 
  2519  031B                     	;# 
  2520  031C                     	;# 
  2521  031C                     	;# 
  2522  031D                     	;# 
  2523  031E                     	;# 
  2524  031F                     	;# 
  2525  038C                     	;# 
  2526  038C                     	;# 
  2527  038D                     	;# 
  2528  038E                     	;# 
  2529  0390                     	;# 
  2530  0390                     	;# 
  2531  0391                     	;# 
  2532  0392                     	;# 
  2533  040C                     	;# 
  2534  040D                     	;# 
  2535  040E                     	;# 
  2536  040F                     	;# 
  2537  0410                     	;# 
  2538  0411                     	;# 
  2539  0416                     	;# 
  2540  0416                     	;# 
  2541  0417                     	;# 
  2542  0418                     	;# 
  2543  0418                     	;# 
  2544  0419                     	;# 
  2545  041A                     	;# 
  2546  041A                     	;# 
  2547  041B                     	;# 
  2548  041C                     	;# 
  2549  041C                     	;# 
  2550  041D                     	;# 
  2551  041E                     	;# 
  2552  041F                     	;# 
  2553  048C                     	;# 
  2554  048C                     	;# 
  2555  048D                     	;# 
  2556  048E                     	;# 
  2557  048F                     	;# 
  2558  048F                     	;# 
  2559  0490                     	;# 
  2560  0491                     	;# 
  2561  0492                     	;# 
  2562  0492                     	;# 
  2563  0493                     	;# 
  2564  0494                     	;# 
  2565  0495                     	;# 
  2566  0495                     	;# 
  2567  0496                     	;# 
  2568  0497                     	;# 
  2569  0498                     	;# 
  2570  0499                     	;# 
  2571  049A                     	;# 
  2572  049B                     	;# 
  2573  049C                     	;# 
  2574  049D                     	;# 
  2575  050C                     	;# 
  2576  050C                     	;# 
  2577  050D                     	;# 
  2578  050E                     	;# 
  2579  050F                     	;# 
  2580  050F                     	;# 
  2581  0510                     	;# 
  2582  0511                     	;# 
  2583  0512                     	;# 
  2584  0512                     	;# 
  2585  0513                     	;# 
  2586  0514                     	;# 
  2587  0515                     	;# 
  2588  0515                     	;# 
  2589  0516                     	;# 
  2590  0517                     	;# 
  2591  0518                     	;# 
  2592  0519                     	;# 
  2593  051A                     	;# 
  2594  051B                     	;# 
  2595  051C                     	;# 
  2596  051D                     	;# 
  2597  058C                     	;# 
  2598  058C                     	;# 
  2599  058D                     	;# 
  2600  058E                     	;# 
  2601  058F                     	;# 
  2602  058F                     	;# 
  2603  0590                     	;# 
  2604  0591                     	;# 
  2605  0592                     	;# 
  2606  0593                     	;# 
  2607  060C                     	;# 
  2608  060D                     	;# 
  2609  060E                     	;# 
  2610  060F                     	;# 
  2611  0610                     	;# 
  2612  0611                     	;# 
  2613  0612                     	;# 
  2614  0613                     	;# 
  2615  0614                     	;# 
  2616  0616                     	;# 
  2617  0617                     	;# 
  2618  0618                     	;# 
  2619  0619                     	;# 
  2620  061A                     	;# 
  2621  061B                     	;# 
  2622  061C                     	;# 
  2623  061D                     	;# 
  2624  061E                     	;# 
  2625  068C                     	;# 
  2626  068D                     	;# 
  2627  068E                     	;# 
  2628  068F                     	;# 
  2629  0690                     	;# 
  2630  0691                     	;# 
  2631  0692                     	;# 
  2632  0693                     	;# 
  2633  0694                     	;# 
  2634  070C                     	;# 
  2635  070D                     	;# 
  2636  070E                     	;# 
  2637  070F                     	;# 
  2638  0710                     	;# 
  2639  0711                     	;# 
  2640  0712                     	;# 
  2641  0713                     	;# 
  2642  0714                     	;# 
  2643  0716                     	;# 
  2644  0717                     	;# 
  2645  0718                     	;# 
  2646  0719                     	;# 
  2647  071A                     	;# 
  2648  071B                     	;# 
  2649  071C                     	;# 
  2650  071D                     	;# 
  2651  071E                     	;# 
  2652  0796                     	;# 
  2653  0797                     	;# 
  2654  0798                     	;# 
  2655  0799                     	;# 
  2656  079A                     	;# 
  2657  079B                     	;# 
  2658  080C                     	;# 
  2659  080D                     	;# 
  2660  080E                     	;# 
  2661  080F                     	;# 
  2662  0810                     	;# 
  2663  0811                     	;# 
  2664  0812                     	;# 
  2665  0813                     	;# 
  2666  0814                     	;# 
  2667  081A                     	;# 
  2668  081B                     	;# 
  2669  081C                     	;# 
  2670  081D                     	;# 
  2671  081E                     	;# 
  2672  081F                     	;# 
  2673  088C                     	;# 
  2674  088D                     	;# 
  2675  088E                     	;# 
  2676  088F                     	;# 
  2677  0890                     	;# 
  2678  0891                     	;# 
  2679  0892                     	;# 
  2680  0893                     	;# 
  2681  0895                     	;# 
  2682  0896                     	;# 
  2683  0897                     	;# 
  2684  0898                     	;# 
  2685  0899                     	;# 
  2686  089A                     	;# 
  2687  089B                     	;# 
  2688  090C                     	;# 
  2689  090E                     	;# 
  2690  090F                     	;# 
  2691  091F                     	;# 
  2692  091F                     	;# 
  2693  098F                     	;# 
  2694  098F                     	;# 
  2695  0990                     	;# 
  2696  0991                     	;# 
  2697  0992                     	;# 
  2698  0993                     	;# 
  2699  0994                     	;# 
  2700  0995                     	;# 
  2701  0996                     	;# 
  2702  0997                     	;# 
  2703  0E0F                     	;# 
  2704  0E10                     	;# 
  2705  0E11                     	;# 
  2706  0E12                     	;# 
  2707  0E13                     	;# 
  2708  0E14                     	;# 
  2709  0E15                     	;# 
  2710  0E16                     	;# 
  2711  0E17                     	;# 
  2712  0E18                     	;# 
  2713  0E19                     	;# 
  2714  0E1A                     	;# 
  2715  0E1B                     	;# 
  2716  0E1C                     	;# 
  2717  0E1D                     	;# 
  2718  0E1E                     	;# 
  2719  0E1F                     	;# 
  2720  0E20                     	;# 
  2721  0E21                     	;# 
  2722  0E22                     	;# 
  2723  0E23                     	;# 
  2724  0E24                     	;# 
  2725  0E25                     	;# 
  2726  0E26                     	;# 
  2727  0E27                     	;# 
  2728  0E28                     	;# 
  2729  0E29                     	;# 
  2730  0E2A                     	;# 
  2731  0E2B                     	;# 
  2732  0E2C                     	;# 
  2733  0E2D                     	;# 
  2734  0E2E                     	;# 
  2735  0E2F                     	;# 
  2736  0E30                     	;# 
  2737  0E31                     	;# 
  2738  0E32                     	;# 
  2739  0E33                     	;# 
  2740  0E34                     	;# 
  2741  0E35                     	;# 
  2742  0E36                     	;# 
  2743  0E37                     	;# 
  2744  0E8F                     	;# 
  2745  0E90                     	;# 
  2746  0E91                     	;# 
  2747  0E92                     	;# 
  2748  0E93                     	;# 
  2749  0E94                     	;# 
  2750  0E95                     	;# 
  2751  0E96                     	;# 
  2752  0E97                     	;# 
  2753  0E9C                     	;# 
  2754  0E9D                     	;# 
  2755  0E9E                     	;# 
  2756  0EA1                     	;# 
  2757  0EA2                     	;# 
  2758  0EA3                     	;# 
  2759  0EA4                     	;# 
  2760  0EA5                     	;# 
  2761  0EA9                     	;# 
  2762  0EAA                     	;# 
  2763  0EAB                     	;# 
  2764  0EAC                     	;# 
  2765  0EB1                     	;# 
  2766  0EB2                     	;# 
  2767  0EB3                     	;# 
  2768  0EB8                     	;# 
  2769  0EB9                     	;# 
  2770  0EBA                     	;# 
  2771  0EBB                     	;# 
  2772  0EBC                     	;# 
  2773  0EBD                     	;# 
  2774  0EBE                     	;# 
  2775  0EC3                     	;# 
  2776  0EC5                     	;# 
  2777  0EC6                     	;# 
  2778  0EC7                     	;# 
  2779  0EC8                     	;# 
  2780  0EC9                     	;# 
  2781  0ECA                     	;# 
  2782  0ECB                     	;# 
  2783  0ECC                     	;# 
  2784  0F10                     	;# 
  2785  0F11                     	;# 
  2786  0F12                     	;# 
  2787  0F13                     	;# 
  2788  0F14                     	;# 
  2789  0F15                     	;# 
  2790  0F16                     	;# 
  2791  0F17                     	;# 
  2792  0F18                     	;# 
  2793  0F19                     	;# 
  2794  0F1A                     	;# 
  2795  0F1B                     	;# 
  2796  0F1C                     	;# 
  2797  0F1D                     	;# 
  2798  0F1E                     	;# 
  2799  0F1F                     	;# 
  2800  0F20                     	;# 
  2801  0F21                     	;# 
  2802  0F22                     	;# 
  2803  0F23                     	;# 
  2804  0F24                     	;# 
  2805  0F25                     	;# 
  2806  0F26                     	;# 
  2807  0F27                     	;# 
  2808  0F28                     	;# 
  2809  0F29                     	;# 
  2810  0F2A                     	;# 
  2811  0F2B                     	;# 
  2812  0F2C                     	;# 
  2813  0F2D                     	;# 
  2814  0F2E                     	;# 
  2815  0F2F                     	;# 
  2816  0F30                     	;# 
  2817  0F31                     	;# 
  2818  0F32                     	;# 
  2819  0F38                     	;# 
  2820  0F39                     	;# 
  2821  0F3A                     	;# 
  2822  0F3B                     	;# 
  2823  0F3C                     	;# 
  2824  0F3D                     	;# 
  2825  0F3E                     	;# 
  2826  0F3F                     	;# 
  2827  0F40                     	;# 
  2828  0F41                     	;# 
  2829  0F43                     	;# 
  2830  0F44                     	;# 
  2831  0F45                     	;# 
  2832  0F46                     	;# 
  2833  0F47                     	;# 
  2834  0F48                     	;# 
  2835  0F49                     	;# 
  2836  0F4A                     	;# 
  2837  0F4B                     	;# 
  2838  0F4C                     	;# 
  2839  0F4E                     	;# 
  2840  0F4F                     	;# 
  2841  0F50                     	;# 
  2842  0F51                     	;# 
  2843  0F52                     	;# 
  2844  0F53                     	;# 
  2845  0F54                     	;# 
  2846  0F55                     	;# 
  2847  0F56                     	;# 
  2848  0F57                     	;# 
  2849  0F59                     	;# 
  2850  0F5A                     	;# 
  2851  0F5B                     	;# 
  2852  0F5C                     	;# 
  2853  0F5D                     	;# 
  2854  0F61                     	;# 
  2855  0F62                     	;# 
  2856  0F64                     	;# 
  2857  0F65                     	;# 
  2858  0F66                     	;# 
  2859  0F67                     	;# 
  2860  0F68                     	;# 
  2861  0F69                     	;# 
  2862  0F6A                     	;# 
  2863  0F6B                     	;# 
  2864  0F6C                     	;# 
  2865  0F6D                     	;# 
  2866  0FE4                     	;# 
  2867  0FE5                     	;# 
  2868  0FE6                     	;# 
  2869  0FE7                     	;# 
  2870  0FE8                     	;# 
  2871  0FE9                     	;# 
  2872  0FEA                     	;# 
  2873  0FEB                     	;# 
  2874  0FED                     	;# 
  2875  0FEE                     	;# 
  2876  0FEF                     	;# 
  2877  0000                     	;# 
  2878  0001                     	;# 
  2879  0002                     	;# 
  2880  0003                     	;# 
  2881  0004                     	;# 
  2882  0005                     	;# 
  2883  0006                     	;# 
  2884  0007                     	;# 
  2885  0008                     	;# 
  2886  0009                     	;# 
  2887  000A                     	;# 
  2888  000B                     	;# 
  2889  000C                     	;# 
  2890  000D                     	;# 
  2891  000E                     	;# 
  2892  000F                     	;# 
  2893  0010                     	;# 
  2894  0011                     	;# 
  2895  0012                     	;# 
  2896  0013                     	;# 
  2897  0014                     	;# 
  2898  0015                     	;# 
  2899  0016                     	;# 
  2900  0017                     	;# 
  2901  0018                     	;# 
  2902  0019                     	;# 
  2903  001A                     	;# 
  2904  001C                     	;# 
  2905  001C                     	;# 
  2906  001D                     	;# 
  2907  001D                     	;# 
  2908  001E                     	;# 
  2909  001F                     	;# 
  2910  008C                     	;# 
  2911  008C                     	;# 
  2912  008D                     	;# 
  2913  008E                     	;# 
  2914  008E                     	;# 
  2915  008F                     	;# 
  2916  0090                     	;# 
  2917  0090                     	;# 
  2918  0091                     	;# 
  2919  0093                     	;# 
  2920  0094                     	;# 
  2921  0095                     	;# 
  2922  0096                     	;# 
  2923  0097                     	;# 
  2924  0098                     	;# 
  2925  0099                     	;# 
  2926  009A                     	;# 
  2927  009B                     	;# 
  2928  009C                     	;# 
  2929  009D                     	;# 
  2930  009E                     	;# 
  2931  010C                     	;# 
  2932  010D                     	;# 
  2933  010E                     	;# 
  2934  010E                     	;# 
  2935  010F                     	;# 
  2936  0110                     	;# 
  2937  0110                     	;# 
  2938  0111                     	;# 
  2939  0112                     	;# 
  2940  0112                     	;# 
  2941  0113                     	;# 
  2942  0114                     	;# 
  2943  0114                     	;# 
  2944  0115                     	;# 
  2945  0116                     	;# 
  2946  0116                     	;# 
  2947  0117                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  0119                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011A                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011B                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011C                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011D                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011E                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  011F                     	;# 
  2973  018C                     	;# 
  2974  018D                     	;# 
  2975  018E                     	;# 
  2976  018F                     	;# 
  2977  0190                     	;# 
  2978  0191                     	;# 
  2979  0192                     	;# 
  2980  0196                     	;# 
  2981  0197                     	;# 
  2982  0198                     	;# 
  2983  0199                     	;# 
  2984  019A                     	;# 
  2985  019B                     	;# 
  2986  019C                     	;# 
  2987  020C                     	;# 
  2988  020C                     	;# 
  2989  020D                     	;# 
  2990  020E                     	;# 
  2991  020F                     	;# 
  2992  020F                     	;# 
  2993  0210                     	;# 
  2994  0210                     	;# 
  2995  0211                     	;# 
  2996  0211                     	;# 
  2997  0212                     	;# 
  2998  0212                     	;# 
  2999  0213                     	;# 
  3000  0214                     	;# 
  3001  0215                     	;# 
  3002  0215                     	;# 
  3003  0216                     	;# 
  3004  0216                     	;# 
  3005  0217                     	;# 
  3006  0217                     	;# 
  3007  0218                     	;# 
  3008  0218                     	;# 
  3009  0219                     	;# 
  3010  021A                     	;# 
  3011  021B                     	;# 
  3012  021B                     	;# 
  3013  021C                     	;# 
  3014  021C                     	;# 
  3015  021D                     	;# 
  3016  021D                     	;# 
  3017  021E                     	;# 
  3018  021F                     	;# 
  3019  028C                     	;# 
  3020  028C                     	;# 
  3021  028D                     	;# 
  3022  028D                     	;# 
  3023  028E                     	;# 
  3024  028F                     	;# 
  3025  0290                     	;# 
  3026  0290                     	;# 
  3027  0291                     	;# 
  3028  0292                     	;# 
  3029  0292                     	;# 
  3030  0293                     	;# 
  3031  0293                     	;# 
  3032  0294                     	;# 
  3033  0295                     	;# 
  3034  0296                     	;# 
  3035  0296                     	;# 
  3036  0297                     	;# 
  3037  0298                     	;# 
  3038  0298                     	;# 
  3039  0299                     	;# 
  3040  0299                     	;# 
  3041  029A                     	;# 
  3042  029B                     	;# 
  3043  029C                     	;# 
  3044  029C                     	;# 
  3045  029D                     	;# 
  3046  030C                     	;# 
  3047  030C                     	;# 
  3048  030D                     	;# 
  3049  030E                     	;# 
  3050  030F                     	;# 
  3051  0310                     	;# 
  3052  0310                     	;# 
  3053  0311                     	;# 
  3054  0312                     	;# 
  3055  0313                     	;# 
  3056  0314                     	;# 
  3057  0314                     	;# 
  3058  0315                     	;# 
  3059  0316                     	;# 
  3060  0317                     	;# 
  3061  0318                     	;# 
  3062  0318                     	;# 
  3063  0319                     	;# 
  3064  031A                     	;# 
  3065  031B                     	;# 
  3066  031C                     	;# 
  3067  031C                     	;# 
  3068  031D                     	;# 
  3069  031E                     	;# 
  3070  031F                     	;# 
  3071  038C                     	;# 
  3072  038C                     	;# 
  3073  038D                     	;# 
  3074  038E                     	;# 
  3075  0390                     	;# 
  3076  0390                     	;# 
  3077  0391                     	;# 
  3078  0392                     	;# 
  3079  040C                     	;# 
  3080  040D                     	;# 
  3081  040E                     	;# 
  3082  040F                     	;# 
  3083  0410                     	;# 
  3084  0411                     	;# 
  3085  0416                     	;# 
  3086  0416                     	;# 
  3087  0417                     	;# 
  3088  0418                     	;# 
  3089  0418                     	;# 
  3090  0419                     	;# 
  3091  041A                     	;# 
  3092  041A                     	;# 
  3093  041B                     	;# 
  3094  041C                     	;# 
  3095  041C                     	;# 
  3096  041D                     	;# 
  3097  041E                     	;# 
  3098  041F                     	;# 
  3099  048C                     	;# 
  3100  048C                     	;# 
  3101  048D                     	;# 
  3102  048E                     	;# 
  3103  048F                     	;# 
  3104  048F                     	;# 
  3105  0490                     	;# 
  3106  0491                     	;# 
  3107  0492                     	;# 
  3108  0492                     	;# 
  3109  0493                     	;# 
  3110  0494                     	;# 
  3111  0495                     	;# 
  3112  0495                     	;# 
  3113  0496                     	;# 
  3114  0497                     	;# 
  3115  0498                     	;# 
  3116  0499                     	;# 
  3117  049A                     	;# 
  3118  049B                     	;# 
  3119  049C                     	;# 
  3120  049D                     	;# 
  3121  050C                     	;# 
  3122  050C                     	;# 
  3123  050D                     	;# 
  3124  050E                     	;# 
  3125  050F                     	;# 
  3126  050F                     	;# 
  3127  0510                     	;# 
  3128  0511                     	;# 
  3129  0512                     	;# 
  3130  0512                     	;# 
  3131  0513                     	;# 
  3132  0514                     	;# 
  3133  0515                     	;# 
  3134  0515                     	;# 
  3135  0516                     	;# 
  3136  0517                     	;# 
  3137  0518                     	;# 
  3138  0519                     	;# 
  3139  051A                     	;# 
  3140  051B                     	;# 
  3141  051C                     	;# 
  3142  051D                     	;# 
  3143  058C                     	;# 
  3144  058C                     	;# 
  3145  058D                     	;# 
  3146  058E                     	;# 
  3147  058F                     	;# 
  3148  058F                     	;# 
  3149  0590                     	;# 
  3150  0591                     	;# 
  3151  0592                     	;# 
  3152  0593                     	;# 
  3153  060C                     	;# 
  3154  060D                     	;# 
  3155  060E                     	;# 
  3156  060F                     	;# 
  3157  0610                     	;# 
  3158  0611                     	;# 
  3159  0612                     	;# 
  3160  0613                     	;# 
  3161  0614                     	;# 
  3162  0616                     	;# 
  3163  0617                     	;# 
  3164  0618                     	;# 
  3165  0619                     	;# 
  3166  061A                     	;# 
  3167  061B                     	;# 
  3168  061C                     	;# 
  3169  061D                     	;# 
  3170  061E                     	;# 
  3171  068C                     	;# 
  3172  068D                     	;# 
  3173  068E                     	;# 
  3174  068F                     	;# 
  3175  0690                     	;# 
  3176  0691                     	;# 
  3177  0692                     	;# 
  3178  0693                     	;# 
  3179  0694                     	;# 
  3180  070C                     	;# 
  3181  070D                     	;# 
  3182  070E                     	;# 
  3183  070F                     	;# 
  3184  0710                     	;# 
  3185  0711                     	;# 
  3186  0712                     	;# 
  3187  0713                     	;# 
  3188  0714                     	;# 
  3189  0716                     	;# 
  3190  0717                     	;# 
  3191  0718                     	;# 
  3192  0719                     	;# 
  3193  071A                     	;# 
  3194  071B                     	;# 
  3195  071C                     	;# 
  3196  071D                     	;# 
  3197  071E                     	;# 
  3198  0796                     	;# 
  3199  0797                     	;# 
  3200  0798                     	;# 
  3201  0799                     	;# 
  3202  079A                     	;# 
  3203  079B                     	;# 
  3204  080C                     	;# 
  3205  080D                     	;# 
  3206  080E                     	;# 
  3207  080F                     	;# 
  3208  0810                     	;# 
  3209  0811                     	;# 
  3210  0812                     	;# 
  3211  0813                     	;# 
  3212  0814                     	;# 
  3213  081A                     	;# 
  3214  081B                     	;# 
  3215  081C                     	;# 
  3216  081D                     	;# 
  3217  081E                     	;# 
  3218  081F                     	;# 
  3219  088C                     	;# 
  3220  088D                     	;# 
  3221  088E                     	;# 
  3222  088F                     	;# 
  3223  0890                     	;# 
  3224  0891                     	;# 
  3225  0892                     	;# 
  3226  0893                     	;# 
  3227  0895                     	;# 
  3228  0896                     	;# 
  3229  0897                     	;# 
  3230  0898                     	;# 
  3231  0899                     	;# 
  3232  089A                     	;# 
  3233  089B                     	;# 
  3234  090C                     	;# 
  3235  090E                     	;# 
  3236  090F                     	;# 
  3237  091F                     	;# 
  3238  091F                     	;# 
  3239  098F                     	;# 
  3240  098F                     	;# 
  3241  0990                     	;# 
  3242  0991                     	;# 
  3243  0992                     	;# 
  3244  0993                     	;# 
  3245  0994                     	;# 
  3246  0995                     	;# 
  3247  0996                     	;# 
  3248  0997                     	;# 
  3249  0E0F                     	;# 
  3250  0E10                     	;# 
  3251  0E11                     	;# 
  3252  0E12                     	;# 
  3253  0E13                     	;# 
  3254  0E14                     	;# 
  3255  0E15                     	;# 
  3256  0E16                     	;# 
  3257  0E17                     	;# 
  3258  0E18                     	;# 
  3259  0E19                     	;# 
  3260  0E1A                     	;# 
  3261  0E1B                     	;# 
  3262  0E1C                     	;# 
  3263  0E1D                     	;# 
  3264  0E1E                     	;# 
  3265  0E1F                     	;# 
  3266  0E20                     	;# 
  3267  0E21                     	;# 
  3268  0E22                     	;# 
  3269  0E23                     	;# 
  3270  0E24                     	;# 
  3271  0E25                     	;# 
  3272  0E26                     	;# 
  3273  0E27                     	;# 
  3274  0E28                     	;# 
  3275  0E29                     	;# 
  3276  0E2A                     	;# 
  3277  0E2B                     	;# 
  3278  0E2C                     	;# 
  3279  0E2D                     	;# 
  3280  0E2E                     	;# 
  3281  0E2F                     	;# 
  3282  0E30                     	;# 
  3283  0E31                     	;# 
  3284  0E32                     	;# 
  3285  0E33                     	;# 
  3286  0E34                     	;# 
  3287  0E35                     	;# 
  3288  0E36                     	;# 
  3289  0E37                     	;# 
  3290  0E8F                     	;# 
  3291  0E90                     	;# 
  3292  0E91                     	;# 
  3293  0E92                     	;# 
  3294  0E93                     	;# 
  3295  0E94                     	;# 
  3296  0E95                     	;# 
  3297  0E96                     	;# 
  3298  0E97                     	;# 
  3299  0E9C                     	;# 
  3300  0E9D                     	;# 
  3301  0E9E                     	;# 
  3302  0EA1                     	;# 
  3303  0EA2                     	;# 
  3304  0EA3                     	;# 
  3305  0EA4                     	;# 
  3306  0EA5                     	;# 
  3307  0EA9                     	;# 
  3308  0EAA                     	;# 
  3309  0EAB                     	;# 
  3310  0EAC                     	;# 
  3311  0EB1                     	;# 
  3312  0EB2                     	;# 
  3313  0EB3                     	;# 
  3314  0EB8                     	;# 
  3315  0EB9                     	;# 
  3316  0EBA                     	;# 
  3317  0EBB                     	;# 
  3318  0EBC                     	;# 
  3319  0EBD                     	;# 
  3320  0EBE                     	;# 
  3321  0EC3                     	;# 
  3322  0EC5                     	;# 
  3323  0EC6                     	;# 
  3324  0EC7                     	;# 
  3325  0EC8                     	;# 
  3326  0EC9                     	;# 
  3327  0ECA                     	;# 
  3328  0ECB                     	;# 
  3329  0ECC                     	;# 
  3330  0F10                     	;# 
  3331  0F11                     	;# 
  3332  0F12                     	;# 
  3333  0F13                     	;# 
  3334  0F14                     	;# 
  3335  0F15                     	;# 
  3336  0F16                     	;# 
  3337  0F17                     	;# 
  3338  0F18                     	;# 
  3339  0F19                     	;# 
  3340  0F1A                     	;# 
  3341  0F1B                     	;# 
  3342  0F1C                     	;# 
  3343  0F1D                     	;# 
  3344  0F1E                     	;# 
  3345  0F1F                     	;# 
  3346  0F20                     	;# 
  3347  0F21                     	;# 
  3348  0F22                     	;# 
  3349  0F23                     	;# 
  3350  0F24                     	;# 
  3351  0F25                     	;# 
  3352  0F26                     	;# 
  3353  0F27                     	;# 
  3354  0F28                     	;# 
  3355  0F29                     	;# 
  3356  0F2A                     	;# 
  3357  0F2B                     	;# 
  3358  0F2C                     	;# 
  3359  0F2D                     	;# 
  3360  0F2E                     	;# 
  3361  0F2F                     	;# 
  3362  0F30                     	;# 
  3363  0F31                     	;# 
  3364  0F32                     	;# 
  3365  0F38                     	;# 
  3366  0F39                     	;# 
  3367  0F3A                     	;# 
  3368  0F3B                     	;# 
  3369  0F3C                     	;# 
  3370  0F3D                     	;# 
  3371  0F3E                     	;# 
  3372  0F3F                     	;# 
  3373  0F40                     	;# 
  3374  0F41                     	;# 
  3375  0F43                     	;# 
  3376  0F44                     	;# 
  3377  0F45                     	;# 
  3378  0F46                     	;# 
  3379  0F47                     	;# 
  3380  0F48                     	;# 
  3381  0F49                     	;# 
  3382  0F4A                     	;# 
  3383  0F4B                     	;# 
  3384  0F4C                     	;# 
  3385  0F4E                     	;# 
  3386  0F4F                     	;# 
  3387  0F50                     	;# 
  3388  0F51                     	;# 
  3389  0F52                     	;# 
  3390  0F53                     	;# 
  3391  0F54                     	;# 
  3392  0F55                     	;# 
  3393  0F56                     	;# 
  3394  0F57                     	;# 
  3395  0F59                     	;# 
  3396  0F5A                     	;# 
  3397  0F5B                     	;# 
  3398  0F5C                     	;# 
  3399  0F5D                     	;# 
  3400  0F61                     	;# 
  3401  0F62                     	;# 
  3402  0F64                     	;# 
  3403  0F65                     	;# 
  3404  0F66                     	;# 
  3405  0F67                     	;# 
  3406  0F68                     	;# 
  3407  0F69                     	;# 
  3408  0F6A                     	;# 
  3409  0F6B                     	;# 
  3410  0F6C                     	;# 
  3411  0F6D                     	;# 
  3412  0FE4                     	;# 
  3413  0FE5                     	;# 
  3414  0FE6                     	;# 
  3415  0FE7                     	;# 
  3416  0FE8                     	;# 
  3417  0FE9                     	;# 
  3418  0FEA                     	;# 
  3419  0FEB                     	;# 
  3420  0FED                     	;# 
  3421  0FEE                     	;# 
  3422  0FEF                     	;# 
  3423  0000                     	;# 
  3424  0001                     	;# 
  3425  0002                     	;# 
  3426  0003                     	;# 
  3427  0004                     	;# 
  3428  0005                     	;# 
  3429  0006                     	;# 
  3430  0007                     	;# 
  3431  0008                     	;# 
  3432  0009                     	;# 
  3433  000A                     	;# 
  3434  000B                     	;# 
  3435  000C                     	;# 
  3436  000D                     	;# 
  3437  000E                     	;# 
  3438  000F                     	;# 
  3439  0010                     	;# 
  3440  0011                     	;# 
  3441  0012                     	;# 
  3442  0013                     	;# 
  3443  0014                     	;# 
  3444  0015                     	;# 
  3445  0016                     	;# 
  3446  0017                     	;# 
  3447  0018                     	;# 
  3448  0019                     	;# 
  3449  001A                     	;# 
  3450  001C                     	;# 
  3451  001C                     	;# 
  3452  001D                     	;# 
  3453  001D                     	;# 
  3454  001E                     	;# 
  3455  001F                     	;# 
  3456  008C                     	;# 
  3457  008C                     	;# 
  3458  008D                     	;# 
  3459  008E                     	;# 
  3460  008E                     	;# 
  3461  008F                     	;# 
  3462  0090                     	;# 
  3463  0090                     	;# 
  3464  0091                     	;# 
  3465  0093                     	;# 
  3466  0094                     	;# 
  3467  0095                     	;# 
  3468  0096                     	;# 
  3469  0097                     	;# 
  3470  0098                     	;# 
  3471  0099                     	;# 
  3472  009A                     	;# 
  3473  009B                     	;# 
  3474  009C                     	;# 
  3475  009D                     	;# 
  3476  009E                     	;# 
  3477  010C                     	;# 
  3478  010D                     	;# 
  3479  010E                     	;# 
  3480  010E                     	;# 
  3481  010F                     	;# 
  3482  0110                     	;# 
  3483  0110                     	;# 
  3484  0111                     	;# 
  3485  0112                     	;# 
  3486  0112                     	;# 
  3487  0113                     	;# 
  3488  0114                     	;# 
  3489  0114                     	;# 
  3490  0115                     	;# 
  3491  0116                     	;# 
  3492  0116                     	;# 
  3493  0117                     	;# 
  3494  0119                     	;# 
  3495  0119                     	;# 
  3496  0119                     	;# 
  3497  011A                     	;# 
  3498  011A                     	;# 
  3499  011A                     	;# 
  3500  011B                     	;# 
  3501  011B                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011B                     	;# 
  3505  011C                     	;# 
  3506  011C                     	;# 
  3507  011C                     	;# 
  3508  011D                     	;# 
  3509  011D                     	;# 
  3510  011D                     	;# 
  3511  011E                     	;# 
  3512  011E                     	;# 
  3513  011E                     	;# 
  3514  011F                     	;# 
  3515  011F                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  011F                     	;# 
  3519  018C                     	;# 
  3520  018D                     	;# 
  3521  018E                     	;# 
  3522  018F                     	;# 
  3523  0190                     	;# 
  3524  0191                     	;# 
  3525  0192                     	;# 
  3526  0196                     	;# 
  3527  0197                     	;# 
  3528  0198                     	;# 
  3529  0199                     	;# 
  3530  019A                     	;# 
  3531  019B                     	;# 
  3532  019C                     	;# 
  3533  020C                     	;# 
  3534  020C                     	;# 
  3535  020D                     	;# 
  3536  020E                     	;# 
  3537  020F                     	;# 
  3538  020F                     	;# 
  3539  0210                     	;# 
  3540  0210                     	;# 
  3541  0211                     	;# 
  3542  0211                     	;# 
  3543  0212                     	;# 
  3544  0212                     	;# 
  3545  0213                     	;# 
  3546  0214                     	;# 
  3547  0215                     	;# 
  3548  0215                     	;# 
  3549  0216                     	;# 
  3550  0216                     	;# 
  3551  0217                     	;# 
  3552  0217                     	;# 
  3553  0218                     	;# 
  3554  0218                     	;# 
  3555  0219                     	;# 
  3556  021A                     	;# 
  3557  021B                     	;# 
  3558  021B                     	;# 
  3559  021C                     	;# 
  3560  021C                     	;# 
  3561  021D                     	;# 
  3562  021D                     	;# 
  3563  021E                     	;# 
  3564  021F                     	;# 
  3565  028C                     	;# 
  3566  028C                     	;# 
  3567  028D                     	;# 
  3568  028D                     	;# 
  3569  028E                     	;# 
  3570  028F                     	;# 
  3571  0290                     	;# 
  3572  0290                     	;# 
  3573  0291                     	;# 
  3574  0292                     	;# 
  3575  0292                     	;# 
  3576  0293                     	;# 
  3577  0293                     	;# 
  3578  0294                     	;# 
  3579  0295                     	;# 
  3580  0296                     	;# 
  3581  0296                     	;# 
  3582  0297                     	;# 
  3583  0298                     	;# 
  3584  0298                     	;# 
  3585  0299                     	;# 
  3586  0299                     	;# 
  3587  029A                     	;# 
  3588  029B                     	;# 
  3589  029C                     	;# 
  3590  029C                     	;# 
  3591  029D                     	;# 
  3592  030C                     	;# 
  3593  030C                     	;# 
  3594  030D                     	;# 
  3595  030E                     	;# 
  3596  030F                     	;# 
  3597  0310                     	;# 
  3598  0310                     	;# 
  3599  0311                     	;# 
  3600  0312                     	;# 
  3601  0313                     	;# 
  3602  0314                     	;# 
  3603  0314                     	;# 
  3604  0315                     	;# 
  3605  0316                     	;# 
  3606  0317                     	;# 
  3607  0318                     	;# 
  3608  0318                     	;# 
  3609  0319                     	;# 
  3610  031A                     	;# 
  3611  031B                     	;# 
  3612  031C                     	;# 
  3613  031C                     	;# 
  3614  031D                     	;# 
  3615  031E                     	;# 
  3616  031F                     	;# 
  3617  038C                     	;# 
  3618  038C                     	;# 
  3619  038D                     	;# 
  3620  038E                     	;# 
  3621  0390                     	;# 
  3622  0390                     	;# 
  3623  0391                     	;# 
  3624  0392                     	;# 
  3625  040C                     	;# 
  3626  040D                     	;# 
  3627  040E                     	;# 
  3628  040F                     	;# 
  3629  0410                     	;# 
  3630  0411                     	;# 
  3631  0416                     	;# 
  3632  0416                     	;# 
  3633  0417                     	;# 
  3634  0418                     	;# 
  3635  0418                     	;# 
  3636  0419                     	;# 
  3637  041A                     	;# 
  3638  041A                     	;# 
  3639  041B                     	;# 
  3640  041C                     	;# 
  3641  041C                     	;# 
  3642  041D                     	;# 
  3643  041E                     	;# 
  3644  041F                     	;# 
  3645  048C                     	;# 
  3646  048C                     	;# 
  3647  048D                     	;# 
  3648  048E                     	;# 
  3649  048F                     	;# 
  3650  048F                     	;# 
  3651  0490                     	;# 
  3652  0491                     	;# 
  3653  0492                     	;# 
  3654  0492                     	;# 
  3655  0493                     	;# 
  3656  0494                     	;# 
  3657  0495                     	;# 
  3658  0495                     	;# 
  3659  0496                     	;# 
  3660  0497                     	;# 
  3661  0498                     	;# 
  3662  0499                     	;# 
  3663  049A                     	;# 
  3664  049B                     	;# 
  3665  049C                     	;# 
  3666  049D                     	;# 
  3667  050C                     	;# 
  3668  050C                     	;# 
  3669  050D                     	;# 
  3670  050E                     	;# 
  3671  050F                     	;# 
  3672  050F                     	;# 
  3673  0510                     	;# 
  3674  0511                     	;# 
  3675  0512                     	;# 
  3676  0512                     	;# 
  3677  0513                     	;# 
  3678  0514                     	;# 
  3679  0515                     	;# 
  3680  0515                     	;# 
  3681  0516                     	;# 
  3682  0517                     	;# 
  3683  0518                     	;# 
  3684  0519                     	;# 
  3685  051A                     	;# 
  3686  051B                     	;# 
  3687  051C                     	;# 
  3688  051D                     	;# 
  3689  058C                     	;# 
  3690  058C                     	;# 
  3691  058D                     	;# 
  3692  058E                     	;# 
  3693  058F                     	;# 
  3694  058F                     	;# 
  3695  0590                     	;# 
  3696  0591                     	;# 
  3697  0592                     	;# 
  3698  0593                     	;# 
  3699  060C                     	;# 
  3700  060D                     	;# 
  3701  060E                     	;# 
  3702  060F                     	;# 
  3703  0610                     	;# 
  3704  0611                     	;# 
  3705  0612                     	;# 
  3706  0613                     	;# 
  3707  0614                     	;# 
  3708  0616                     	;# 
  3709  0617                     	;# 
  3710  0618                     	;# 
  3711  0619                     	;# 
  3712  061A                     	;# 
  3713  061B                     	;# 
  3714  061C                     	;# 
  3715  061D                     	;# 
  3716  061E                     	;# 
  3717  068C                     	;# 
  3718  068D                     	;# 
  3719  068E                     	;# 
  3720  068F                     	;# 
  3721  0690                     	;# 
  3722  0691                     	;# 
  3723  0692                     	;# 
  3724  0693                     	;# 
  3725  0694                     	;# 
  3726  070C                     	;# 
  3727  070D                     	;# 
  3728  070E                     	;# 
  3729  070F                     	;# 
  3730  0710                     	;# 
  3731  0711                     	;# 
  3732  0712                     	;# 
  3733  0713                     	;# 
  3734  0714                     	;# 
  3735  0716                     	;# 
  3736  0717                     	;# 
  3737  0718                     	;# 
  3738  0719                     	;# 
  3739  071A                     	;# 
  3740  071B                     	;# 
  3741  071C                     	;# 
  3742  071D                     	;# 
  3743  071E                     	;# 
  3744  0796                     	;# 
  3745  0797                     	;# 
  3746  0798                     	;# 
  3747  0799                     	;# 
  3748  079A                     	;# 
  3749  079B                     	;# 
  3750  080C                     	;# 
  3751  080D                     	;# 
  3752  080E                     	;# 
  3753  080F                     	;# 
  3754  0810                     	;# 
  3755  0811                     	;# 
  3756  0812                     	;# 
  3757  0813                     	;# 
  3758  0814                     	;# 
  3759  081A                     	;# 
  3760  081B                     	;# 
  3761  081C                     	;# 
  3762  081D                     	;# 
  3763  081E                     	;# 
  3764  081F                     	;# 
  3765  088C                     	;# 
  3766  088D                     	;# 
  3767  088E                     	;# 
  3768  088F                     	;# 
  3769  0890                     	;# 
  3770  0891                     	;# 
  3771  0892                     	;# 
  3772  0893                     	;# 
  3773  0895                     	;# 
  3774  0896                     	;# 
  3775  0897                     	;# 
  3776  0898                     	;# 
  3777  0899                     	;# 
  3778  089A                     	;# 
  3779  089B                     	;# 
  3780  090C                     	;# 
  3781  090E                     	;# 
  3782  090F                     	;# 
  3783  091F                     	;# 
  3784  091F                     	;# 
  3785  098F                     	;# 
  3786  098F                     	;# 
  3787  0990                     	;# 
  3788  0991                     	;# 
  3789  0992                     	;# 
  3790  0993                     	;# 
  3791  0994                     	;# 
  3792  0995                     	;# 
  3793  0996                     	;# 
  3794  0997                     	;# 
  3795  0E0F                     	;# 
  3796  0E10                     	;# 
  3797  0E11                     	;# 
  3798  0E12                     	;# 
  3799  0E13                     	;# 
  3800  0E14                     	;# 
  3801  0E15                     	;# 
  3802  0E16                     	;# 
  3803  0E17                     	;# 
  3804  0E18                     	;# 
  3805  0E19                     	;# 
  3806  0E1A                     	;# 
  3807  0E1B                     	;# 
  3808  0E1C                     	;# 
  3809  0E1D                     	;# 
  3810  0E1E                     	;# 
  3811  0E1F                     	;# 
  3812  0E20                     	;# 
  3813  0E21                     	;# 
  3814  0E22                     	;# 
  3815  0E23                     	;# 
  3816  0E24                     	;# 
  3817  0E25                     	;# 
  3818  0E26                     	;# 
  3819  0E27                     	;# 
  3820  0E28                     	;# 
  3821  0E29                     	;# 
  3822  0E2A                     	;# 
  3823  0E2B                     	;# 
  3824  0E2C                     	;# 
  3825  0E2D                     	;# 
  3826  0E2E                     	;# 
  3827  0E2F                     	;# 
  3828  0E30                     	;# 
  3829  0E31                     	;# 
  3830  0E32                     	;# 
  3831  0E33                     	;# 
  3832  0E34                     	;# 
  3833  0E35                     	;# 
  3834  0E36                     	;# 
  3835  0E37                     	;# 
  3836  0E8F                     	;# 
  3837  0E90                     	;# 
  3838  0E91                     	;# 
  3839  0E92                     	;# 
  3840  0E93                     	;# 
  3841  0E94                     	;# 
  3842  0E95                     	;# 
  3843  0E96                     	;# 
  3844  0E97                     	;# 
  3845  0E9C                     	;# 
  3846  0E9D                     	;# 
  3847  0E9E                     	;# 
  3848  0EA1                     	;# 
  3849  0EA2                     	;# 
  3850  0EA3                     	;# 
  3851  0EA4                     	;# 
  3852  0EA5                     	;# 
  3853  0EA9                     	;# 
  3854  0EAA                     	;# 
  3855  0EAB                     	;# 
  3856  0EAC                     	;# 
  3857  0EB1                     	;# 
  3858  0EB2                     	;# 
  3859  0EB3                     	;# 
  3860  0EB8                     	;# 
  3861  0EB9                     	;# 
  3862  0EBA                     	;# 
  3863  0EBB                     	;# 
  3864  0EBC                     	;# 
  3865  0EBD                     	;# 
  3866  0EBE                     	;# 
  3867  0EC3                     	;# 
  3868  0EC5                     	;# 
  3869  0EC6                     	;# 
  3870  0EC7                     	;# 
  3871  0EC8                     	;# 
  3872  0EC9                     	;# 
  3873  0ECA                     	;# 
  3874  0ECB                     	;# 
  3875  0ECC                     	;# 
  3876  0F10                     	;# 
  3877  0F11                     	;# 
  3878  0F12                     	;# 
  3879  0F13                     	;# 
  3880  0F14                     	;# 
  3881  0F15                     	;# 
  3882  0F16                     	;# 
  3883  0F17                     	;# 
  3884  0F18                     	;# 
  3885  0F19                     	;# 
  3886  0F1A                     	;# 
  3887  0F1B                     	;# 
  3888  0F1C                     	;# 
  3889  0F1D                     	;# 
  3890  0F1E                     	;# 
  3891  0F1F                     	;# 
  3892  0F20                     	;# 
  3893  0F21                     	;# 
  3894  0F22                     	;# 
  3895  0F23                     	;# 
  3896  0F24                     	;# 
  3897  0F25                     	;# 
  3898  0F26                     	;# 
  3899  0F27                     	;# 
  3900  0F28                     	;# 
  3901  0F29                     	;# 
  3902  0F2A                     	;# 
  3903  0F2B                     	;# 
  3904  0F2C                     	;# 
  3905  0F2D                     	;# 
  3906  0F2E                     	;# 
  3907  0F2F                     	;# 
  3908  0F30                     	;# 
  3909  0F31                     	;# 
  3910  0F32                     	;# 
  3911  0F38                     	;# 
  3912  0F39                     	;# 
  3913  0F3A                     	;# 
  3914  0F3B                     	;# 
  3915  0F3C                     	;# 
  3916  0F3D                     	;# 
  3917  0F3E                     	;# 
  3918  0F3F                     	;# 
  3919  0F40                     	;# 
  3920  0F41                     	;# 
  3921  0F43                     	;# 
  3922  0F44                     	;# 
  3923  0F45                     	;# 
  3924  0F46                     	;# 
  3925  0F47                     	;# 
  3926  0F48                     	;# 
  3927  0F49                     	;# 
  3928  0F4A                     	;# 
  3929  0F4B                     	;# 
  3930  0F4C                     	;# 
  3931  0F4E                     	;# 
  3932  0F4F                     	;# 
  3933  0F50                     	;# 
  3934  0F51                     	;# 
  3935  0F52                     	;# 
  3936  0F53                     	;# 
  3937  0F54                     	;# 
  3938  0F55                     	;# 
  3939  0F56                     	;# 
  3940  0F57                     	;# 
  3941  0F59                     	;# 
  3942  0F5A                     	;# 
  3943  0F5B                     	;# 
  3944  0F5C                     	;# 
  3945  0F5D                     	;# 
  3946  0F61                     	;# 
  3947  0F62                     	;# 
  3948  0F64                     	;# 
  3949  0F65                     	;# 
  3950  0F66                     	;# 
  3951  0F67                     	;# 
  3952  0F68                     	;# 
  3953  0F69                     	;# 
  3954  0F6A                     	;# 
  3955  0F6B                     	;# 
  3956  0F6C                     	;# 
  3957  0F6D                     	;# 
  3958  0FE4                     	;# 
  3959  0FE5                     	;# 
  3960  0FE6                     	;# 
  3961  0FE7                     	;# 
  3962  0FE8                     	;# 
  3963  0FE9                     	;# 
  3964  0FEA                     	;# 
  3965  0FEB                     	;# 
  3966  0FED                     	;# 
  3967  0FEE                     	;# 
  3968  0FEF                     	;# 
  3969  0000                     	;# 
  3970  0001                     	;# 
  3971  0002                     	;# 
  3972  0003                     	;# 
  3973  0004                     	;# 
  3974  0005                     	;# 
  3975  0006                     	;# 
  3976  0007                     	;# 
  3977  0008                     	;# 
  3978  0009                     	;# 
  3979  000A                     	;# 
  3980  000B                     	;# 
  3981  000C                     	;# 
  3982  000D                     	;# 
  3983  000E                     	;# 
  3984  000F                     	;# 
  3985  0010                     	;# 
  3986  0011                     	;# 
  3987  0012                     	;# 
  3988  0013                     	;# 
  3989  0014                     	;# 
  3990  0015                     	;# 
  3991  0016                     	;# 
  3992  0017                     	;# 
  3993  0018                     	;# 
  3994  0019                     	;# 
  3995  001A                     	;# 
  3996  001C                     	;# 
  3997  001C                     	;# 
  3998  001D                     	;# 
  3999  001D                     	;# 
  4000  001E                     	;# 
  4001  001F                     	;# 
  4002  008C                     	;# 
  4003  008C                     	;# 
  4004  008D                     	;# 
  4005  008E                     	;# 
  4006  008E                     	;# 
  4007  008F                     	;# 
  4008  0090                     	;# 
  4009  0090                     	;# 
  4010  0091                     	;# 
  4011  0093                     	;# 
  4012  0094                     	;# 
  4013  0095                     	;# 
  4014  0096                     	;# 
  4015  0097                     	;# 
  4016  0098                     	;# 
  4017  0099                     	;# 
  4018  009A                     	;# 
  4019  009B                     	;# 
  4020  009C                     	;# 
  4021  009D                     	;# 
  4022  009E                     	;# 
  4023  010C                     	;# 
  4024  010D                     	;# 
  4025  010E                     	;# 
  4026  010E                     	;# 
  4027  010F                     	;# 
  4028  0110                     	;# 
  4029  0110                     	;# 
  4030  0111                     	;# 
  4031  0112                     	;# 
  4032  0112                     	;# 
  4033  0113                     	;# 
  4034  0114                     	;# 
  4035  0114                     	;# 
  4036  0115                     	;# 
  4037  0116                     	;# 
  4038  0116                     	;# 
  4039  0117                     	;# 
  4040  0119                     	;# 
  4041  0119                     	;# 
  4042  0119                     	;# 
  4043  011A                     	;# 
  4044  011A                     	;# 
  4045  011A                     	;# 
  4046  011B                     	;# 
  4047  011B                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011B                     	;# 
  4051  011C                     	;# 
  4052  011C                     	;# 
  4053  011C                     	;# 
  4054  011D                     	;# 
  4055  011D                     	;# 
  4056  011D                     	;# 
  4057  011E                     	;# 
  4058  011E                     	;# 
  4059  011E                     	;# 
  4060  011F                     	;# 
  4061  011F                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  011F                     	;# 
  4065  018C                     	;# 
  4066  018D                     	;# 
  4067  018E                     	;# 
  4068  018F                     	;# 
  4069  0190                     	;# 
  4070  0191                     	;# 
  4071  0192                     	;# 
  4072  0196                     	;# 
  4073  0197                     	;# 
  4074  0198                     	;# 
  4075  0199                     	;# 
  4076  019A                     	;# 
  4077  019B                     	;# 
  4078  019C                     	;# 
  4079  020C                     	;# 
  4080  020C                     	;# 
  4081  020D                     	;# 
  4082  020E                     	;# 
  4083  020F                     	;# 
  4084  020F                     	;# 
  4085  0210                     	;# 
  4086  0210                     	;# 
  4087  0211                     	;# 
  4088  0211                     	;# 
  4089  0212                     	;# 
  4090  0212                     	;# 
  4091  0213                     	;# 
  4092  0214                     	;# 
  4093  0215                     	;# 
  4094  0215                     	;# 
  4095  0216                     	;# 
  4096  0216                     	;# 
  4097  0217                     	;# 
  4098  0217                     	;# 
  4099  0218                     	;# 
  4100  0218                     	;# 
  4101  0219                     	;# 
  4102  021A                     	;# 
  4103  021B                     	;# 
  4104  021B                     	;# 
  4105  021C                     	;# 
  4106  021C                     	;# 
  4107  021D                     	;# 
  4108  021D                     	;# 
  4109  021E                     	;# 
  4110  021F                     	;# 
  4111  028C                     	;# 
  4112  028C                     	;# 
  4113  028D                     	;# 
  4114  028D                     	;# 
  4115  028E                     	;# 
  4116  028F                     	;# 
  4117  0290                     	;# 
  4118  0290                     	;# 
  4119  0291                     	;# 
  4120  0292                     	;# 
  4121  0292                     	;# 
  4122  0293                     	;# 
  4123  0293                     	;# 
  4124  0294                     	;# 
  4125  0295                     	;# 
  4126  0296                     	;# 
  4127  0296                     	;# 
  4128  0297                     	;# 
  4129  0298                     	;# 
  4130  0298                     	;# 
  4131  0299                     	;# 
  4132  0299                     	;# 
  4133  029A                     	;# 
  4134  029B                     	;# 
  4135  029C                     	;# 
  4136  029C                     	;# 
  4137  029D                     	;# 
  4138  030C                     	;# 
  4139  030C                     	;# 
  4140  030D                     	;# 
  4141  030E                     	;# 
  4142  030F                     	;# 
  4143  0310                     	;# 
  4144  0310                     	;# 
  4145  0311                     	;# 
  4146  0312                     	;# 
  4147  0313                     	;# 
  4148  0314                     	;# 
  4149  0314                     	;# 
  4150  0315                     	;# 
  4151  0316                     	;# 
  4152  0317                     	;# 
  4153  0318                     	;# 
  4154  0318                     	;# 
  4155  0319                     	;# 
  4156  031A                     	;# 
  4157  031B                     	;# 
  4158  031C                     	;# 
  4159  031C                     	;# 
  4160  031D                     	;# 
  4161  031E                     	;# 
  4162  031F                     	;# 
  4163  038C                     	;# 
  4164  038C                     	;# 
  4165  038D                     	;# 
  4166  038E                     	;# 
  4167  0390                     	;# 
  4168  0390                     	;# 
  4169  0391                     	;# 
  4170  0392                     	;# 
  4171  040C                     	;# 
  4172  040D                     	;# 
  4173  040E                     	;# 
  4174  040F                     	;# 
  4175  0410                     	;# 
  4176  0411                     	;# 
  4177  0416                     	;# 
  4178  0416                     	;# 
  4179  0417                     	;# 
  4180  0418                     	;# 
  4181  0418                     	;# 
  4182  0419                     	;# 
  4183  041A                     	;# 
  4184  041A                     	;# 
  4185  041B                     	;# 
  4186  041C                     	;# 
  4187  041C                     	;# 
  4188  041D                     	;# 
  4189  041E                     	;# 
  4190  041F                     	;# 
  4191  048C                     	;# 
  4192  048C                     	;# 
  4193  048D                     	;# 
  4194  048E                     	;# 
  4195  048F                     	;# 
  4196  048F                     	;# 
  4197  0490                     	;# 
  4198  0491                     	;# 
  4199  0492                     	;# 
  4200  0492                     	;# 
  4201  0493                     	;# 
  4202  0494                     	;# 
  4203  0495                     	;# 
  4204  0495                     	;# 
  4205  0496                     	;# 
  4206  0497                     	;# 
  4207  0498                     	;# 
  4208  0499                     	;# 
  4209  049A                     	;# 
  4210  049B                     	;# 
  4211  049C                     	;# 
  4212  049D                     	;# 
  4213  050C                     	;# 
  4214  050C                     	;# 
  4215  050D                     	;# 
  4216  050E                     	;# 
  4217  050F                     	;# 
  4218  050F                     	;# 
  4219  0510                     	;# 
  4220  0511                     	;# 
  4221  0512                     	;# 
  4222  0512                     	;# 
  4223  0513                     	;# 
  4224  0514                     	;# 
  4225  0515                     	;# 
  4226  0515                     	;# 
  4227  0516                     	;# 
  4228  0517                     	;# 
  4229  0518                     	;# 
  4230  0519                     	;# 
  4231  051A                     	;# 
  4232  051B                     	;# 
  4233  051C                     	;# 
  4234  051D                     	;# 
  4235  058C                     	;# 
  4236  058C                     	;# 
  4237  058D                     	;# 
  4238  058E                     	;# 
  4239  058F                     	;# 
  4240  058F                     	;# 
  4241  0590                     	;# 
  4242  0591                     	;# 
  4243  0592                     	;# 
  4244  0593                     	;# 
  4245  060C                     	;# 
  4246  060D                     	;# 
  4247  060E                     	;# 
  4248  060F                     	;# 
  4249  0610                     	;# 
  4250  0611                     	;# 
  4251  0612                     	;# 
  4252  0613                     	;# 
  4253  0614                     	;# 
  4254  0616                     	;# 
  4255  0617                     	;# 
  4256  0618                     	;# 
  4257  0619                     	;# 
  4258  061A                     	;# 
  4259  061B                     	;# 
  4260  061C                     	;# 
  4261  061D                     	;# 
  4262  061E                     	;# 
  4263  068C                     	;# 
  4264  068D                     	;# 
  4265  068E                     	;# 
  4266  068F                     	;# 
  4267  0690                     	;# 
  4268  0691                     	;# 
  4269  0692                     	;# 
  4270  0693                     	;# 
  4271  0694                     	;# 
  4272  070C                     	;# 
  4273  070D                     	;# 
  4274  070E                     	;# 
  4275  070F                     	;# 
  4276  0710                     	;# 
  4277  0711                     	;# 
  4278  0712                     	;# 
  4279  0713                     	;# 
  4280  0714                     	;# 
  4281  0716                     	;# 
  4282  0717                     	;# 
  4283  0718                     	;# 
  4284  0719                     	;# 
  4285  071A                     	;# 
  4286  071B                     	;# 
  4287  071C                     	;# 
  4288  071D                     	;# 
  4289  071E                     	;# 
  4290  0796                     	;# 
  4291  0797                     	;# 
  4292  0798                     	;# 
  4293  0799                     	;# 
  4294  079A                     	;# 
  4295  079B                     	;# 
  4296  080C                     	;# 
  4297  080D                     	;# 
  4298  080E                     	;# 
  4299  080F                     	;# 
  4300  0810                     	;# 
  4301  0811                     	;# 
  4302  0812                     	;# 
  4303  0813                     	;# 
  4304  0814                     	;# 
  4305  081A                     	;# 
  4306  081B                     	;# 
  4307  081C                     	;# 
  4308  081D                     	;# 
  4309  081E                     	;# 
  4310  081F                     	;# 
  4311  088C                     	;# 
  4312  088D                     	;# 
  4313  088E                     	;# 
  4314  088F                     	;# 
  4315  0890                     	;# 
  4316  0891                     	;# 
  4317  0892                     	;# 
  4318  0893                     	;# 
  4319  0895                     	;# 
  4320  0896                     	;# 
  4321  0897                     	;# 
  4322  0898                     	;# 
  4323  0899                     	;# 
  4324  089A                     	;# 
  4325  089B                     	;# 
  4326  090C                     	;# 
  4327  090E                     	;# 
  4328  090F                     	;# 
  4329  091F                     	;# 
  4330  091F                     	;# 
  4331  098F                     	;# 
  4332  098F                     	;# 
  4333  0990                     	;# 
  4334  0991                     	;# 
  4335  0992                     	;# 
  4336  0993                     	;# 
  4337  0994                     	;# 
  4338  0995                     	;# 
  4339  0996                     	;# 
  4340  0997                     	;# 
  4341  0E0F                     	;# 
  4342  0E10                     	;# 
  4343  0E11                     	;# 
  4344  0E12                     	;# 
  4345  0E13                     	;# 
  4346  0E14                     	;# 
  4347  0E15                     	;# 
  4348  0E16                     	;# 
  4349  0E17                     	;# 
  4350  0E18                     	;# 
  4351  0E19                     	;# 
  4352  0E1A                     	;# 
  4353  0E1B                     	;# 
  4354  0E1C                     	;# 
  4355  0E1D                     	;# 
  4356  0E1E                     	;# 
  4357  0E1F                     	;# 
  4358  0E20                     	;# 
  4359  0E21                     	;# 
  4360  0E22                     	;# 
  4361  0E23                     	;# 
  4362  0E24                     	;# 
  4363  0E25                     	;# 
  4364  0E26                     	;# 
  4365  0E27                     	;# 
  4366  0E28                     	;# 
  4367  0E29                     	;# 
  4368  0E2A                     	;# 
  4369  0E2B                     	;# 
  4370  0E2C                     	;# 
  4371  0E2D                     	;# 
  4372  0E2E                     	;# 
  4373  0E2F                     	;# 
  4374  0E30                     	;# 
  4375  0E31                     	;# 
  4376  0E32                     	;# 
  4377  0E33                     	;# 
  4378  0E34                     	;# 
  4379  0E35                     	;# 
  4380  0E36                     	;# 
  4381  0E37                     	;# 
  4382  0E8F                     	;# 
  4383  0E90                     	;# 
  4384  0E91                     	;# 
  4385  0E92                     	;# 
  4386  0E93                     	;# 
  4387  0E94                     	;# 
  4388  0E95                     	;# 
  4389  0E96                     	;# 
  4390  0E97                     	;# 
  4391  0E9C                     	;# 
  4392  0E9D                     	;# 
  4393  0E9E                     	;# 
  4394  0EA1                     	;# 
  4395  0EA2                     	;# 
  4396  0EA3                     	;# 
  4397  0EA4                     	;# 
  4398  0EA5                     	;# 
  4399  0EA9                     	;# 
  4400  0EAA                     	;# 
  4401  0EAB                     	;# 
  4402  0EAC                     	;# 
  4403  0EB1                     	;# 
  4404  0EB2                     	;# 
  4405  0EB3                     	;# 
  4406  0EB8                     	;# 
  4407  0EB9                     	;# 
  4408  0EBA                     	;# 
  4409  0EBB                     	;# 
  4410  0EBC                     	;# 
  4411  0EBD                     	;# 
  4412  0EBE                     	;# 
  4413  0EC3                     	;# 
  4414  0EC5                     	;# 
  4415  0EC6                     	;# 
  4416  0EC7                     	;# 
  4417  0EC8                     	;# 
  4418  0EC9                     	;# 
  4419  0ECA                     	;# 
  4420  0ECB                     	;# 
  4421  0ECC                     	;# 
  4422  0F10                     	;# 
  4423  0F11                     	;# 
  4424  0F12                     	;# 
  4425  0F13                     	;# 
  4426  0F14                     	;# 
  4427  0F15                     	;# 
  4428  0F16                     	;# 
  4429  0F17                     	;# 
  4430  0F18                     	;# 
  4431  0F19                     	;# 
  4432  0F1A                     	;# 
  4433  0F1B                     	;# 
  4434  0F1C                     	;# 
  4435  0F1D                     	;# 
  4436  0F1E                     	;# 
  4437  0F1F                     	;# 
  4438  0F20                     	;# 
  4439  0F21                     	;# 
  4440  0F22                     	;# 
  4441  0F23                     	;# 
  4442  0F24                     	;# 
  4443  0F25                     	;# 
  4444  0F26                     	;# 
  4445  0F27                     	;# 
  4446  0F28                     	;# 
  4447  0F29                     	;# 
  4448  0F2A                     	;# 
  4449  0F2B                     	;# 
  4450  0F2C                     	;# 
  4451  0F2D                     	;# 
  4452  0F2E                     	;# 
  4453  0F2F                     	;# 
  4454  0F30                     	;# 
  4455  0F31                     	;# 
  4456  0F32                     	;# 
  4457  0F38                     	;# 
  4458  0F39                     	;# 
  4459  0F3A                     	;# 
  4460  0F3B                     	;# 
  4461  0F3C                     	;# 
  4462  0F3D                     	;# 
  4463  0F3E                     	;# 
  4464  0F3F                     	;# 
  4465  0F40                     	;# 
  4466  0F41                     	;# 
  4467  0F43                     	;# 
  4468  0F44                     	;# 
  4469  0F45                     	;# 
  4470  0F46                     	;# 
  4471  0F47                     	;# 
  4472  0F48                     	;# 
  4473  0F49                     	;# 
  4474  0F4A                     	;# 
  4475  0F4B                     	;# 
  4476  0F4C                     	;# 
  4477  0F4E                     	;# 
  4478  0F4F                     	;# 
  4479  0F50                     	;# 
  4480  0F51                     	;# 
  4481  0F52                     	;# 
  4482  0F53                     	;# 
  4483  0F54                     	;# 
  4484  0F55                     	;# 
  4485  0F56                     	;# 
  4486  0F57                     	;# 
  4487  0F59                     	;# 
  4488  0F5A                     	;# 
  4489  0F5B                     	;# 
  4490  0F5C                     	;# 
  4491  0F5D                     	;# 
  4492  0F61                     	;# 
  4493  0F62                     	;# 
  4494  0F64                     	;# 
  4495  0F65                     	;# 
  4496  0F66                     	;# 
  4497  0F67                     	;# 
  4498  0F68                     	;# 
  4499  0F69                     	;# 
  4500  0F6A                     	;# 
  4501  0F6B                     	;# 
  4502  0F6C                     	;# 
  4503  0F6D                     	;# 
  4504  0FE4                     	;# 
  4505  0FE5                     	;# 
  4506  0FE6                     	;# 
  4507  0FE7                     	;# 
  4508  0FE8                     	;# 
  4509  0FE9                     	;# 
  4510  0FEA                     	;# 
  4511  0FEB                     	;# 
  4512  0FED                     	;# 
  4513  0FEE                     	;# 
  4514  0FEF                     	;# 
  4515  0000                     	;# 
  4516  0001                     	;# 
  4517  0002                     	;# 
  4518  0003                     	;# 
  4519  0004                     	;# 
  4520  0005                     	;# 
  4521  0006                     	;# 
  4522  0007                     	;# 
  4523  0008                     	;# 
  4524  0009                     	;# 
  4525  000A                     	;# 
  4526  000B                     	;# 
  4527  000C                     	;# 
  4528  000D                     	;# 
  4529  000E                     	;# 
  4530  000F                     	;# 
  4531  0010                     	;# 
  4532  0011                     	;# 
  4533  0012                     	;# 
  4534  0013                     	;# 
  4535  0014                     	;# 
  4536  0015                     	;# 
  4537  0016                     	;# 
  4538  0017                     	;# 
  4539  0018                     	;# 
  4540  0019                     	;# 
  4541  001A                     	;# 
  4542  001C                     	;# 
  4543  001C                     	;# 
  4544  001D                     	;# 
  4545  001D                     	;# 
  4546  001E                     	;# 
  4547  001F                     	;# 
  4548  008C                     	;# 
  4549  008C                     	;# 
  4550  008D                     	;# 
  4551  008E                     	;# 
  4552  008E                     	;# 
  4553  008F                     	;# 
  4554  0090                     	;# 
  4555  0090                     	;# 
  4556  0091                     	;# 
  4557  0093                     	;# 
  4558  0094                     	;# 
  4559  0095                     	;# 
  4560  0096                     	;# 
  4561  0097                     	;# 
  4562  0098                     	;# 
  4563  0099                     	;# 
  4564  009A                     	;# 
  4565  009B                     	;# 
  4566  009C                     	;# 
  4567  009D                     	;# 
  4568  009E                     	;# 
  4569  010C                     	;# 
  4570  010D                     	;# 
  4571  010E                     	;# 
  4572  010E                     	;# 
  4573  010F                     	;# 
  4574  0110                     	;# 
  4575  0110                     	;# 
  4576  0111                     	;# 
  4577  0112                     	;# 
  4578  0112                     	;# 
  4579  0113                     	;# 
  4580  0114                     	;# 
  4581  0114                     	;# 
  4582  0115                     	;# 
  4583  0116                     	;# 
  4584  0116                     	;# 
  4585  0117                     	;# 
  4586  0119                     	;# 
  4587  0119                     	;# 
  4588  0119                     	;# 
  4589  011A                     	;# 
  4590  011A                     	;# 
  4591  011A                     	;# 
  4592  011B                     	;# 
  4593  011B                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011B                     	;# 
  4597  011C                     	;# 
  4598  011C                     	;# 
  4599  011C                     	;# 
  4600  011D                     	;# 
  4601  011D                     	;# 
  4602  011D                     	;# 
  4603  011E                     	;# 
  4604  011E                     	;# 
  4605  011E                     	;# 
  4606  011F                     	;# 
  4607  011F                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  011F                     	;# 
  4611  018C                     	;# 
  4612  018D                     	;# 
  4613  018E                     	;# 
  4614  018F                     	;# 
  4615  0190                     	;# 
  4616  0191                     	;# 
  4617  0192                     	;# 
  4618  0196                     	;# 
  4619  0197                     	;# 
  4620  0198                     	;# 
  4621  0199                     	;# 
  4622  019A                     	;# 
  4623  019B                     	;# 
  4624  019C                     	;# 
  4625  020C                     	;# 
  4626  020C                     	;# 
  4627  020D                     	;# 
  4628  020E                     	;# 
  4629  020F                     	;# 
  4630  020F                     	;# 
  4631  0210                     	;# 
  4632  0210                     	;# 
  4633  0211                     	;# 
  4634  0211                     	;# 
  4635  0212                     	;# 
  4636  0212                     	;# 
  4637  0213                     	;# 
  4638  0214                     	;# 
  4639  0215                     	;# 
  4640  0215                     	;# 
  4641  0216                     	;# 
  4642  0216                     	;# 
  4643  0217                     	;# 
  4644  0217                     	;# 
  4645  0218                     	;# 
  4646  0218                     	;# 
  4647  0219                     	;# 
  4648  021A                     	;# 
  4649  021B                     	;# 
  4650  021B                     	;# 
  4651  021C                     	;# 
  4652  021C                     	;# 
  4653  021D                     	;# 
  4654  021D                     	;# 
  4655  021E                     	;# 
  4656  021F                     	;# 
  4657  028C                     	;# 
  4658  028C                     	;# 
  4659  028D                     	;# 
  4660  028D                     	;# 
  4661  028E                     	;# 
  4662  028F                     	;# 
  4663  0290                     	;# 
  4664  0290                     	;# 
  4665  0291                     	;# 
  4666  0292                     	;# 
  4667  0292                     	;# 
  4668  0293                     	;# 
  4669  0293                     	;# 
  4670  0294                     	;# 
  4671  0295                     	;# 
  4672  0296                     	;# 
  4673  0296                     	;# 
  4674  0297                     	;# 
  4675  0298                     	;# 
  4676  0298                     	;# 
  4677  0299                     	;# 
  4678  0299                     	;# 
  4679  029A                     	;# 
  4680  029B                     	;# 
  4681  029C                     	;# 
  4682  029C                     	;# 
  4683  029D                     	;# 
  4684  030C                     	;# 
  4685  030C                     	;# 
  4686  030D                     	;# 
  4687  030E                     	;# 
  4688  030F                     	;# 
  4689  0310                     	;# 
  4690  0310                     	;# 
  4691  0311                     	;# 
  4692  0312                     	;# 
  4693  0313                     	;# 
  4694  0314                     	;# 
  4695  0314                     	;# 
  4696  0315                     	;# 
  4697  0316                     	;# 
  4698  0317                     	;# 
  4699  0318                     	;# 
  4700  0318                     	;# 
  4701  0319                     	;# 
  4702  031A                     	;# 
  4703  031B                     	;# 
  4704  031C                     	;# 
  4705  031C                     	;# 
  4706  031D                     	;# 
  4707  031E                     	;# 
  4708  031F                     	;# 
  4709  038C                     	;# 
  4710  038C                     	;# 
  4711  038D                     	;# 
  4712  038E                     	;# 
  4713  0390                     	;# 
  4714  0390                     	;# 
  4715  0391                     	;# 
  4716  0392                     	;# 
  4717  040C                     	;# 
  4718  040D                     	;# 
  4719  040E                     	;# 
  4720  040F                     	;# 
  4721  0410                     	;# 
  4722  0411                     	;# 
  4723  0416                     	;# 
  4724  0416                     	;# 
  4725  0417                     	;# 
  4726  0418                     	;# 
  4727  0418                     	;# 
  4728  0419                     	;# 
  4729  041A                     	;# 
  4730  041A                     	;# 
  4731  041B                     	;# 
  4732  041C                     	;# 
  4733  041C                     	;# 
  4734  041D                     	;# 
  4735  041E                     	;# 
  4736  041F                     	;# 
  4737  048C                     	;# 
  4738  048C                     	;# 
  4739  048D                     	;# 
  4740  048E                     	;# 
  4741  048F                     	;# 
  4742  048F                     	;# 
  4743  0490                     	;# 
  4744  0491                     	;# 
  4745  0492                     	;# 
  4746  0492                     	;# 
  4747  0493                     	;# 
  4748  0494                     	;# 
  4749  0495                     	;# 
  4750  0495                     	;# 
  4751  0496                     	;# 
  4752  0497                     	;# 
  4753  0498                     	;# 
  4754  0499                     	;# 
  4755  049A                     	;# 
  4756  049B                     	;# 
  4757  049C                     	;# 
  4758  049D                     	;# 
  4759  050C                     	;# 
  4760  050C                     	;# 
  4761  050D                     	;# 
  4762  050E                     	;# 
  4763  050F                     	;# 
  4764  050F                     	;# 
  4765  0510                     	;# 
  4766  0511                     	;# 
  4767  0512                     	;# 
  4768  0512                     	;# 
  4769  0513                     	;# 
  4770  0514                     	;# 
  4771  0515                     	;# 
  4772  0515                     	;# 
  4773  0516                     	;# 
  4774  0517                     	;# 
  4775  0518                     	;# 
  4776  0519                     	;# 
  4777  051A                     	;# 
  4778  051B                     	;# 
  4779  051C                     	;# 
  4780  051D                     	;# 
  4781  058C                     	;# 
  4782  058C                     	;# 
  4783  058D                     	;# 
  4784  058E                     	;# 
  4785  058F                     	;# 
  4786  058F                     	;# 
  4787  0590                     	;# 
  4788  0591                     	;# 
  4789  0592                     	;# 
  4790  0593                     	;# 
  4791  060C                     	;# 
  4792  060D                     	;# 
  4793  060E                     	;# 
  4794  060F                     	;# 
  4795  0610                     	;# 
  4796  0611                     	;# 
  4797  0612                     	;# 
  4798  0613                     	;# 
  4799  0614                     	;# 
  4800  0616                     	;# 
  4801  0617                     	;# 
  4802  0618                     	;# 
  4803  0619                     	;# 
  4804  061A                     	;# 
  4805  061B                     	;# 
  4806  061C                     	;# 
  4807  061D                     	;# 
  4808  061E                     	;# 
  4809  068C                     	;# 
  4810  068D                     	;# 
  4811  068E                     	;# 
  4812  068F                     	;# 
  4813  0690                     	;# 
  4814  0691                     	;# 
  4815  0692                     	;# 
  4816  0693                     	;# 
  4817  0694                     	;# 
  4818  070C                     	;# 
  4819  070D                     	;# 
  4820  070E                     	;# 
  4821  070F                     	;# 
  4822  0710                     	;# 
  4823  0711                     	;# 
  4824  0712                     	;# 
  4825  0713                     	;# 
  4826  0714                     	;# 
  4827  0716                     	;# 
  4828  0717                     	;# 
  4829  0718                     	;# 
  4830  0719                     	;# 
  4831  071A                     	;# 
  4832  071B                     	;# 
  4833  071C                     	;# 
  4834  071D                     	;# 
  4835  071E                     	;# 
  4836  0796                     	;# 
  4837  0797                     	;# 
  4838  0798                     	;# 
  4839  0799                     	;# 
  4840  079A                     	;# 
  4841  079B                     	;# 
  4842  080C                     	;# 
  4843  080D                     	;# 
  4844  080E                     	;# 
  4845  080F                     	;# 
  4846  0810                     	;# 
  4847  0811                     	;# 
  4848  0812                     	;# 
  4849  0813                     	;# 
  4850  0814                     	;# 
  4851  081A                     	;# 
  4852  081B                     	;# 
  4853  081C                     	;# 
  4854  081D                     	;# 
  4855  081E                     	;# 
  4856  081F                     	;# 
  4857  088C                     	;# 
  4858  088D                     	;# 
  4859  088E                     	;# 
  4860  088F                     	;# 
  4861  0890                     	;# 
  4862  0891                     	;# 
  4863  0892                     	;# 
  4864  0893                     	;# 
  4865  0895                     	;# 
  4866  0896                     	;# 
  4867  0897                     	;# 
  4868  0898                     	;# 
  4869  0899                     	;# 
  4870  089A                     	;# 
  4871  089B                     	;# 
  4872  090C                     	;# 
  4873  090E                     	;# 
  4874  090F                     	;# 
  4875  091F                     	;# 
  4876  091F                     	;# 
  4877  098F                     	;# 
  4878  098F                     	;# 
  4879  0990                     	;# 
  4880  0991                     	;# 
  4881  0992                     	;# 
  4882  0993                     	;# 
  4883  0994                     	;# 
  4884  0995                     	;# 
  4885  0996                     	;# 
  4886  0997                     	;# 
  4887  0E0F                     	;# 
  4888  0E10                     	;# 
  4889  0E11                     	;# 
  4890  0E12                     	;# 
  4891  0E13                     	;# 
  4892  0E14                     	;# 
  4893  0E15                     	;# 
  4894  0E16                     	;# 
  4895  0E17                     	;# 
  4896  0E18                     	;# 
  4897  0E19                     	;# 
  4898  0E1A                     	;# 
  4899  0E1B                     	;# 
  4900  0E1C                     	;# 
  4901  0E1D                     	;# 
  4902  0E1E                     	;# 
  4903  0E1F                     	;# 
  4904  0E20                     	;# 
  4905  0E21                     	;# 
  4906  0E22                     	;# 
  4907  0E23                     	;# 
  4908  0E24                     	;# 
  4909  0E25                     	;# 
  4910  0E26                     	;# 
  4911  0E27                     	;# 
  4912  0E28                     	;# 
  4913  0E29                     	;# 
  4914  0E2A                     	;# 
  4915  0E2B                     	;# 
  4916  0E2C                     	;# 
  4917  0E2D                     	;# 
  4918  0E2E                     	;# 
  4919  0E2F                     	;# 
  4920  0E30                     	;# 
  4921  0E31                     	;# 
  4922  0E32                     	;# 
  4923  0E33                     	;# 
  4924  0E34                     	;# 
  4925  0E35                     	;# 
  4926  0E36                     	;# 
  4927  0E37                     	;# 
  4928  0E8F                     	;# 
  4929  0E90                     	;# 
  4930  0E91                     	;# 
  4931  0E92                     	;# 
  4932  0E93                     	;# 
  4933  0E94                     	;# 
  4934  0E95                     	;# 
  4935  0E96                     	;# 
  4936  0E97                     	;# 
  4937  0E9C                     	;# 
  4938  0E9D                     	;# 
  4939  0E9E                     	;# 
  4940  0EA1                     	;# 
  4941  0EA2                     	;# 
  4942  0EA3                     	;# 
  4943  0EA4                     	;# 
  4944  0EA5                     	;# 
  4945  0EA9                     	;# 
  4946  0EAA                     	;# 
  4947  0EAB                     	;# 
  4948  0EAC                     	;# 
  4949  0EB1                     	;# 
  4950  0EB2                     	;# 
  4951  0EB3                     	;# 
  4952  0EB8                     	;# 
  4953  0EB9                     	;# 
  4954  0EBA                     	;# 
  4955  0EBB                     	;# 
  4956  0EBC                     	;# 
  4957  0EBD                     	;# 
  4958  0EBE                     	;# 
  4959  0EC3                     	;# 
  4960  0EC5                     	;# 
  4961  0EC6                     	;# 
  4962  0EC7                     	;# 
  4963  0EC8                     	;# 
  4964  0EC9                     	;# 
  4965  0ECA                     	;# 
  4966  0ECB                     	;# 
  4967  0ECC                     	;# 
  4968  0F10                     	;# 
  4969  0F11                     	;# 
  4970  0F12                     	;# 
  4971  0F13                     	;# 
  4972  0F14                     	;# 
  4973  0F15                     	;# 
  4974  0F16                     	;# 
  4975  0F17                     	;# 
  4976  0F18                     	;# 
  4977  0F19                     	;# 
  4978  0F1A                     	;# 
  4979  0F1B                     	;# 
  4980  0F1C                     	;# 
  4981  0F1D                     	;# 
  4982  0F1E                     	;# 
  4983  0F1F                     	;# 
  4984  0F20                     	;# 
  4985  0F21                     	;# 
  4986  0F22                     	;# 
  4987  0F23                     	;# 
  4988  0F24                     	;# 
  4989  0F25                     	;# 
  4990  0F26                     	;# 
  4991  0F27                     	;# 
  4992  0F28                     	;# 
  4993  0F29                     	;# 
  4994  0F2A                     	;# 
  4995  0F2B                     	;# 
  4996  0F2C                     	;# 
  4997  0F2D                     	;# 
  4998  0F2E                     	;# 
  4999  0F2F                     	;# 
  5000  0F30                     	;# 
  5001  0F31                     	;# 
  5002  0F32                     	;# 
  5003  0F38                     	;# 
  5004  0F39                     	;# 
  5005  0F3A                     	;# 
  5006  0F3B                     	;# 
  5007  0F3C                     	;# 
  5008  0F3D                     	;# 
  5009  0F3E                     	;# 
  5010  0F3F                     	;# 
  5011  0F40                     	;# 
  5012  0F41                     	;# 
  5013  0F43                     	;# 
  5014  0F44                     	;# 
  5015  0F45                     	;# 
  5016  0F46                     	;# 
  5017  0F47                     	;# 
  5018  0F48                     	;# 
  5019  0F49                     	;# 
  5020  0F4A                     	;# 
  5021  0F4B                     	;# 
  5022  0F4C                     	;# 
  5023  0F4E                     	;# 
  5024  0F4F                     	;# 
  5025  0F50                     	;# 
  5026  0F51                     	;# 
  5027  0F52                     	;# 
  5028  0F53                     	;# 
  5029  0F54                     	;# 
  5030  0F55                     	;# 
  5031  0F56                     	;# 
  5032  0F57                     	;# 
  5033  0F59                     	;# 
  5034  0F5A                     	;# 
  5035  0F5B                     	;# 
  5036  0F5C                     	;# 
  5037  0F5D                     	;# 
  5038  0F61                     	;# 
  5039  0F62                     	;# 
  5040  0F64                     	;# 
  5041  0F65                     	;# 
  5042  0F66                     	;# 
  5043  0F67                     	;# 
  5044  0F68                     	;# 
  5045  0F69                     	;# 
  5046  0F6A                     	;# 
  5047  0F6B                     	;# 
  5048  0F6C                     	;# 
  5049  0F6D                     	;# 
  5050  0FE4                     	;# 
  5051  0FE5                     	;# 
  5052  0FE6                     	;# 
  5053  0FE7                     	;# 
  5054  0FE8                     	;# 
  5055  0FE9                     	;# 
  5056  0FEA                     	;# 
  5057  0FEB                     	;# 
  5058  0FED                     	;# 
  5059  0FEE                     	;# 
  5060  0FEF                     	;# 
  5061  0000                     	;# 
  5062  0001                     	;# 
  5063  0002                     	;# 
  5064  0003                     	;# 
  5065  0004                     	;# 
  5066  0005                     	;# 
  5067  0006                     	;# 
  5068  0007                     	;# 
  5069  0008                     	;# 
  5070  0009                     	;# 
  5071  000A                     	;# 
  5072  000B                     	;# 
  5073  000C                     	;# 
  5074  000D                     	;# 
  5075  000E                     	;# 
  5076  000F                     	;# 
  5077  0010                     	;# 
  5078  0011                     	;# 
  5079  0012                     	;# 
  5080  0013                     	;# 
  5081  0014                     	;# 
  5082  0015                     	;# 
  5083  0016                     	;# 
  5084  0017                     	;# 
  5085  0018                     	;# 
  5086  0019                     	;# 
  5087  001A                     	;# 
  5088  001C                     	;# 
  5089  001C                     	;# 
  5090  001D                     	;# 
  5091  001D                     	;# 
  5092  001E                     	;# 
  5093  001F                     	;# 
  5094  008C                     	;# 
  5095  008C                     	;# 
  5096  008D                     	;# 
  5097  008E                     	;# 
  5098  008E                     	;# 
  5099  008F                     	;# 
  5100  0090                     	;# 
  5101  0090                     	;# 
  5102  0091                     	;# 
  5103  0093                     	;# 
  5104  0094                     	;# 
  5105  0095                     	;# 
  5106  0096                     	;# 
  5107  0097                     	;# 
  5108  0098                     	;# 
  5109  0099                     	;# 
  5110  009A                     	;# 
  5111  009B                     	;# 
  5112  009C                     	;# 
  5113  009D                     	;# 
  5114  009E                     	;# 
  5115  010C                     	;# 
  5116  010D                     	;# 
  5117  010E                     	;# 
  5118  010E                     	;# 
  5119  010F                     	;# 
  5120  0110                     	;# 
  5121  0110                     	;# 
  5122  0111                     	;# 
  5123  0112                     	;# 
  5124  0112                     	;# 
  5125  0113                     	;# 
  5126  0114                     	;# 
  5127  0114                     	;# 
  5128  0115                     	;# 
  5129  0116                     	;# 
  5130  0116                     	;# 
  5131  0117                     	;# 
  5132  0119                     	;# 
  5133  0119                     	;# 
  5134  0119                     	;# 
  5135  011A                     	;# 
  5136  011A                     	;# 
  5137  011A                     	;# 
  5138  011B                     	;# 
  5139  011B                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011B                     	;# 
  5143  011C                     	;# 
  5144  011C                     	;# 
  5145  011C                     	;# 
  5146  011D                     	;# 
  5147  011D                     	;# 
  5148  011D                     	;# 
  5149  011E                     	;# 
  5150  011E                     	;# 
  5151  011E                     	;# 
  5152  011F                     	;# 
  5153  011F                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  011F                     	;# 
  5157  018C                     	;# 
  5158  018D                     	;# 
  5159  018E                     	;# 
  5160  018F                     	;# 
  5161  0190                     	;# 
  5162  0191                     	;# 
  5163  0192                     	;# 
  5164  0196                     	;# 
  5165  0197                     	;# 
  5166  0198                     	;# 
  5167  0199                     	;# 
  5168  019A                     	;# 
  5169  019B                     	;# 
  5170  019C                     	;# 
  5171  020C                     	;# 
  5172  020C                     	;# 
  5173  020D                     	;# 
  5174  020E                     	;# 
  5175  020F                     	;# 
  5176  020F                     	;# 
  5177  0210                     	;# 
  5178  0210                     	;# 
  5179  0211                     	;# 
  5180  0211                     	;# 
  5181  0212                     	;# 
  5182  0212                     	;# 
  5183  0213                     	;# 
  5184  0214                     	;# 
  5185  0215                     	;# 
  5186  0215                     	;# 
  5187  0216                     	;# 
  5188  0216                     	;# 
  5189  0217                     	;# 
  5190  0217                     	;# 
  5191  0218                     	;# 
  5192  0218                     	;# 
  5193  0219                     	;# 
  5194  021A                     	;# 
  5195  021B                     	;# 
  5196  021B                     	;# 
  5197  021C                     	;# 
  5198  021C                     	;# 
  5199  021D                     	;# 
  5200  021D                     	;# 
  5201  021E                     	;# 
  5202  021F                     	;# 
  5203  028C                     	;# 
  5204  028C                     	;# 
  5205  028D                     	;# 
  5206  028D                     	;# 
  5207  028E                     	;# 
  5208  028F                     	;# 
  5209  0290                     	;# 
  5210  0290                     	;# 
  5211  0291                     	;# 
  5212  0292                     	;# 
  5213  0292                     	;# 
  5214  0293                     	;# 
  5215  0293                     	;# 
  5216  0294                     	;# 
  5217  0295                     	;# 
  5218  0296                     	;# 
  5219  0296                     	;# 
  5220  0297                     	;# 
  5221  0298                     	;# 
  5222  0298                     	;# 
  5223  0299                     	;# 
  5224  0299                     	;# 
  5225  029A                     	;# 
  5226  029B                     	;# 
  5227  029C                     	;# 
  5228  029C                     	;# 
  5229  029D                     	;# 
  5230  030C                     	;# 
  5231  030C                     	;# 
  5232  030D                     	;# 
  5233  030E                     	;# 
  5234  030F                     	;# 
  5235  0310                     	;# 
  5236  0310                     	;# 
  5237  0311                     	;# 
  5238  0312                     	;# 
  5239  0313                     	;# 
  5240  0314                     	;# 
  5241  0314                     	;# 
  5242  0315                     	;# 
  5243  0316                     	;# 
  5244  0317                     	;# 
  5245  0318                     	;# 
  5246  0318                     	;# 
  5247  0319                     	;# 
  5248  031A                     	;# 
  5249  031B                     	;# 
  5250  031C                     	;# 
  5251  031C                     	;# 
  5252  031D                     	;# 
  5253  031E                     	;# 
  5254  031F                     	;# 
  5255  038C                     	;# 
  5256  038C                     	;# 
  5257  038D                     	;# 
  5258  038E                     	;# 
  5259  0390                     	;# 
  5260  0390                     	;# 
  5261  0391                     	;# 
  5262  0392                     	;# 
  5263  040C                     	;# 
  5264  040D                     	;# 
  5265  040E                     	;# 
  5266  040F                     	;# 
  5267  0410                     	;# 
  5268  0411                     	;# 
  5269  0416                     	;# 
  5270  0416                     	;# 
  5271  0417                     	;# 
  5272  0418                     	;# 
  5273  0418                     	;# 
  5274  0419                     	;# 
  5275  041A                     	;# 
  5276  041A                     	;# 
  5277  041B                     	;# 
  5278  041C                     	;# 
  5279  041C                     	;# 
  5280  041D                     	;# 
  5281  041E                     	;# 
  5282  041F                     	;# 
  5283  048C                     	;# 
  5284  048C                     	;# 
  5285  048D                     	;# 
  5286  048E                     	;# 
  5287  048F                     	;# 
  5288  048F                     	;# 
  5289  0490                     	;# 
  5290  0491                     	;# 
  5291  0492                     	;# 
  5292  0492                     	;# 
  5293  0493                     	;# 
  5294  0494                     	;# 
  5295  0495                     	;# 
  5296  0495                     	;# 
  5297  0496                     	;# 
  5298  0497                     	;# 
  5299  0498                     	;# 
  5300  0499                     	;# 
  5301  049A                     	;# 
  5302  049B                     	;# 
  5303  049C                     	;# 
  5304  049D                     	;# 
  5305  050C                     	;# 
  5306  050C                     	;# 
  5307  050D                     	;# 
  5308  050E                     	;# 
  5309  050F                     	;# 
  5310  050F                     	;# 
  5311  0510                     	;# 
  5312  0511                     	;# 
  5313  0512                     	;# 
  5314  0512                     	;# 
  5315  0513                     	;# 
  5316  0514                     	;# 
  5317  0515                     	;# 
  5318  0515                     	;# 
  5319  0516                     	;# 
  5320  0517                     	;# 
  5321  0518                     	;# 
  5322  0519                     	;# 
  5323  051A                     	;# 
  5324  051B                     	;# 
  5325  051C                     	;# 
  5326  051D                     	;# 
  5327  058C                     	;# 
  5328  058C                     	;# 
  5329  058D                     	;# 
  5330  058E                     	;# 
  5331  058F                     	;# 
  5332  058F                     	;# 
  5333  0590                     	;# 
  5334  0591                     	;# 
  5335  0592                     	;# 
  5336  0593                     	;# 
  5337  060C                     	;# 
  5338  060D                     	;# 
  5339  060E                     	;# 
  5340  060F                     	;# 
  5341  0610                     	;# 
  5342  0611                     	;# 
  5343  0612                     	;# 
  5344  0613                     	;# 
  5345  0614                     	;# 
  5346  0616                     	;# 
  5347  0617                     	;# 
  5348  0618                     	;# 
  5349  0619                     	;# 
  5350  061A                     	;# 
  5351  061B                     	;# 
  5352  061C                     	;# 
  5353  061D                     	;# 
  5354  061E                     	;# 
  5355  068C                     	;# 
  5356  068D                     	;# 
  5357  068E                     	;# 
  5358  068F                     	;# 
  5359  0690                     	;# 
  5360  0691                     	;# 
  5361  0692                     	;# 
  5362  0693                     	;# 
  5363  0694                     	;# 
  5364  070C                     	;# 
  5365  070D                     	;# 
  5366  070E                     	;# 
  5367  070F                     	;# 
  5368  0710                     	;# 
  5369  0711                     	;# 
  5370  0712                     	;# 
  5371  0713                     	;# 
  5372  0714                     	;# 
  5373  0716                     	;# 
  5374  0717                     	;# 
  5375  0718                     	;# 
  5376  0719                     	;# 
  5377  071A                     	;# 
  5378  071B                     	;# 
  5379  071C                     	;# 
  5380  071D                     	;# 
  5381  071E                     	;# 
  5382  0796                     	;# 
  5383  0797                     	;# 
  5384  0798                     	;# 
  5385  0799                     	;# 
  5386  079A                     	;# 
  5387  079B                     	;# 
  5388  080C                     	;# 
  5389  080D                     	;# 
  5390  080E                     	;# 
  5391  080F                     	;# 
  5392  0810                     	;# 
  5393  0811                     	;# 
  5394  0812                     	;# 
  5395  0813                     	;# 
  5396  0814                     	;# 
  5397  081A                     	;# 
  5398  081B                     	;# 
  5399  081C                     	;# 
  5400  081D                     	;# 
  5401  081E                     	;# 
  5402  081F                     	;# 
  5403  088C                     	;# 
  5404  088D                     	;# 
  5405  088E                     	;# 
  5406  088F                     	;# 
  5407  0890                     	;# 
  5408  0891                     	;# 
  5409  0892                     	;# 
  5410  0893                     	;# 
  5411  0895                     	;# 
  5412  0896                     	;# 
  5413  0897                     	;# 
  5414  0898                     	;# 
  5415  0899                     	;# 
  5416  089A                     	;# 
  5417  089B                     	;# 
  5418  090C                     	;# 
  5419  090E                     	;# 
  5420  090F                     	;# 
  5421  091F                     	;# 
  5422  091F                     	;# 
  5423  098F                     	;# 
  5424  098F                     	;# 
  5425  0990                     	;# 
  5426  0991                     	;# 
  5427  0992                     	;# 
  5428  0993                     	;# 
  5429  0994                     	;# 
  5430  0995                     	;# 
  5431  0996                     	;# 
  5432  0997                     	;# 
  5433  0E0F                     	;# 
  5434  0E10                     	;# 
  5435  0E11                     	;# 
  5436  0E12                     	;# 
  5437  0E13                     	;# 
  5438  0E14                     	;# 
  5439  0E15                     	;# 
  5440  0E16                     	;# 
  5441  0E17                     	;# 
  5442  0E18                     	;# 
  5443  0E19                     	;# 
  5444  0E1A                     	;# 
  5445  0E1B                     	;# 
  5446  0E1C                     	;# 
  5447  0E1D                     	;# 
  5448  0E1E                     	;# 
  5449  0E1F                     	;# 
  5450  0E20                     	;# 
  5451  0E21                     	;# 
  5452  0E22                     	;# 
  5453  0E23                     	;# 
  5454  0E24                     	;# 
  5455  0E25                     	;# 
  5456  0E26                     	;# 
  5457  0E27                     	;# 
  5458  0E28                     	;# 
  5459  0E29                     	;# 
  5460  0E2A                     	;# 
  5461  0E2B                     	;# 
  5462  0E2C                     	;# 
  5463  0E2D                     	;# 
  5464  0E2E                     	;# 
  5465  0E2F                     	;# 
  5466  0E30                     	;# 
  5467  0E31                     	;# 
  5468  0E32                     	;# 
  5469  0E33                     	;# 
  5470  0E34                     	;# 
  5471  0E35                     	;# 
  5472  0E36                     	;# 
  5473  0E37                     	;# 
  5474  0E8F                     	;# 
  5475  0E90                     	;# 
  5476  0E91                     	;# 
  5477  0E92                     	;# 
  5478  0E93                     	;# 
  5479  0E94                     	;# 
  5480  0E95                     	;# 
  5481  0E96                     	;# 
  5482  0E97                     	;# 
  5483  0E9C                     	;# 
  5484  0E9D                     	;# 
  5485  0E9E                     	;# 
  5486  0EA1                     	;# 
  5487  0EA2                     	;# 
  5488  0EA3                     	;# 
  5489  0EA4                     	;# 
  5490  0EA5                     	;# 
  5491  0EA9                     	;# 
  5492  0EAA                     	;# 
  5493  0EAB                     	;# 
  5494  0EAC                     	;# 
  5495  0EB1                     	;# 
  5496  0EB2                     	;# 
  5497  0EB3                     	;# 
  5498  0EB8                     	;# 
  5499  0EB9                     	;# 
  5500  0EBA                     	;# 
  5501  0EBB                     	;# 
  5502  0EBC                     	;# 
  5503  0EBD                     	;# 
  5504  0EBE                     	;# 
  5505  0EC3                     	;# 
  5506  0EC5                     	;# 
  5507  0EC6                     	;# 
  5508  0EC7                     	;# 
  5509  0EC8                     	;# 
  5510  0EC9                     	;# 
  5511  0ECA                     	;# 
  5512  0ECB                     	;# 
  5513  0ECC                     	;# 
  5514  0F10                     	;# 
  5515  0F11                     	;# 
  5516  0F12                     	;# 
  5517  0F13                     	;# 
  5518  0F14                     	;# 
  5519  0F15                     	;# 
  5520  0F16                     	;# 
  5521  0F17                     	;# 
  5522  0F18                     	;# 
  5523  0F19                     	;# 
  5524  0F1A                     	;# 
  5525  0F1B                     	;# 
  5526  0F1C                     	;# 
  5527  0F1D                     	;# 
  5528  0F1E                     	;# 
  5529  0F1F                     	;# 
  5530  0F20                     	;# 
  5531  0F21                     	;# 
  5532  0F22                     	;# 
  5533  0F23                     	;# 
  5534  0F24                     	;# 
  5535  0F25                     	;# 
  5536  0F26                     	;# 
  5537  0F27                     	;# 
  5538  0F28                     	;# 
  5539  0F29                     	;# 
  5540  0F2A                     	;# 
  5541  0F2B                     	;# 
  5542  0F2C                     	;# 
  5543  0F2D                     	;# 
  5544  0F2E                     	;# 
  5545  0F2F                     	;# 
  5546  0F30                     	;# 
  5547  0F31                     	;# 
  5548  0F32                     	;# 
  5549  0F38                     	;# 
  5550  0F39                     	;# 
  5551  0F3A                     	;# 
  5552  0F3B                     	;# 
  5553  0F3C                     	;# 
  5554  0F3D                     	;# 
  5555  0F3E                     	;# 
  5556  0F3F                     	;# 
  5557  0F40                     	;# 
  5558  0F41                     	;# 
  5559  0F43                     	;# 
  5560  0F44                     	;# 
  5561  0F45                     	;# 
  5562  0F46                     	;# 
  5563  0F47                     	;# 
  5564  0F48                     	;# 
  5565  0F49                     	;# 
  5566  0F4A                     	;# 
  5567  0F4B                     	;# 
  5568  0F4C                     	;# 
  5569  0F4E                     	;# 
  5570  0F4F                     	;# 
  5571  0F50                     	;# 
  5572  0F51                     	;# 
  5573  0F52                     	;# 
  5574  0F53                     	;# 
  5575  0F54                     	;# 
  5576  0F55                     	;# 
  5577  0F56                     	;# 
  5578  0F57                     	;# 
  5579  0F59                     	;# 
  5580  0F5A                     	;# 
  5581  0F5B                     	;# 
  5582  0F5C                     	;# 
  5583  0F5D                     	;# 
  5584  0F61                     	;# 
  5585  0F62                     	;# 
  5586  0F64                     	;# 
  5587  0F65                     	;# 
  5588  0F66                     	;# 
  5589  0F67                     	;# 
  5590  0F68                     	;# 
  5591  0F69                     	;# 
  5592  0F6A                     	;# 
  5593  0F6B                     	;# 
  5594  0F6C                     	;# 
  5595  0F6D                     	;# 
  5596  0FE4                     	;# 
  5597  0FE5                     	;# 
  5598  0FE6                     	;# 
  5599  0FE7                     	;# 
  5600  0FE8                     	;# 
  5601  0FE9                     	;# 
  5602  0FEA                     	;# 
  5603  0FEB                     	;# 
  5604  0FED                     	;# 
  5605  0FEE                     	;# 
  5606  0FEF                     	;# 
  5607  0000                     	;# 
  5608  0001                     	;# 
  5609  0002                     	;# 
  5610  0003                     	;# 
  5611  0004                     	;# 
  5612  0005                     	;# 
  5613  0006                     	;# 
  5614  0007                     	;# 
  5615  0008                     	;# 
  5616  0009                     	;# 
  5617  000A                     	;# 
  5618  000B                     	;# 
  5619  000C                     	;# 
  5620  000D                     	;# 
  5621  000E                     	;# 
  5622  000F                     	;# 
  5623  0010                     	;# 
  5624  0011                     	;# 
  5625  0012                     	;# 
  5626  0013                     	;# 
  5627  0014                     	;# 
  5628  0015                     	;# 
  5629  0016                     	;# 
  5630  0017                     	;# 
  5631  0018                     	;# 
  5632  0019                     	;# 
  5633  001A                     	;# 
  5634  001C                     	;# 
  5635  001C                     	;# 
  5636  001D                     	;# 
  5637  001D                     	;# 
  5638  001E                     	;# 
  5639  001F                     	;# 
  5640  008C                     	;# 
  5641  008C                     	;# 
  5642  008D                     	;# 
  5643  008E                     	;# 
  5644  008E                     	;# 
  5645  008F                     	;# 
  5646  0090                     	;# 
  5647  0090                     	;# 
  5648  0091                     	;# 
  5649  0093                     	;# 
  5650  0094                     	;# 
  5651  0095                     	;# 
  5652  0096                     	;# 
  5653  0097                     	;# 
  5654  0098                     	;# 
  5655  0099                     	;# 
  5656  009A                     	;# 
  5657  009B                     	;# 
  5658  009C                     	;# 
  5659  009D                     	;# 
  5660  009E                     	;# 
  5661  010C                     	;# 
  5662  010D                     	;# 
  5663  010E                     	;# 
  5664  010E                     	;# 
  5665  010F                     	;# 
  5666  0110                     	;# 
  5667  0110                     	;# 
  5668  0111                     	;# 
  5669  0112                     	;# 
  5670  0112                     	;# 
  5671  0113                     	;# 
  5672  0114                     	;# 
  5673  0114                     	;# 
  5674  0115                     	;# 
  5675  0116                     	;# 
  5676  0116                     	;# 
  5677  0117                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  0119                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011A                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011C                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011D                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011E                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  018C                     	;# 
  5704  018D                     	;# 
  5705  018E                     	;# 
  5706  018F                     	;# 
  5707  0190                     	;# 
  5708  0191                     	;# 
  5709  0192                     	;# 
  5710  0196                     	;# 
  5711  0197                     	;# 
  5712  0198                     	;# 
  5713  0199                     	;# 
  5714  019A                     	;# 
  5715  019B                     	;# 
  5716  019C                     	;# 
  5717  020C                     	;# 
  5718  020C                     	;# 
  5719  020D                     	;# 
  5720  020E                     	;# 
  5721  020F                     	;# 
  5722  020F                     	;# 
  5723  0210                     	;# 
  5724  0210                     	;# 
  5725  0211                     	;# 
  5726  0211                     	;# 
  5727  0212                     	;# 
  5728  0212                     	;# 
  5729  0213                     	;# 
  5730  0214                     	;# 
  5731  0215                     	;# 
  5732  0215                     	;# 
  5733  0216                     	;# 
  5734  0216                     	;# 
  5735  0217                     	;# 
  5736  0217                     	;# 
  5737  0218                     	;# 
  5738  0218                     	;# 
  5739  0219                     	;# 
  5740  021A                     	;# 
  5741  021B                     	;# 
  5742  021B                     	;# 
  5743  021C                     	;# 
  5744  021C                     	;# 
  5745  021D                     	;# 
  5746  021D                     	;# 
  5747  021E                     	;# 
  5748  021F                     	;# 
  5749  028C                     	;# 
  5750  028C                     	;# 
  5751  028D                     	;# 
  5752  028D                     	;# 
  5753  028E                     	;# 
  5754  028F                     	;# 
  5755  0290                     	;# 
  5756  0290                     	;# 
  5757  0291                     	;# 
  5758  0292                     	;# 
  5759  0292                     	;# 
  5760  0293                     	;# 
  5761  0293                     	;# 
  5762  0294                     	;# 
  5763  0295                     	;# 
  5764  0296                     	;# 
  5765  0296                     	;# 
  5766  0297                     	;# 
  5767  0298                     	;# 
  5768  0298                     	;# 
  5769  0299                     	;# 
  5770  0299                     	;# 
  5771  029A                     	;# 
  5772  029B                     	;# 
  5773  029C                     	;# 
  5774  029C                     	;# 
  5775  029D                     	;# 
  5776  030C                     	;# 
  5777  030C                     	;# 
  5778  030D                     	;# 
  5779  030E                     	;# 
  5780  030F                     	;# 
  5781  0310                     	;# 
  5782  0310                     	;# 
  5783  0311                     	;# 
  5784  0312                     	;# 
  5785  0313                     	;# 
  5786  0314                     	;# 
  5787  0314                     	;# 
  5788  0315                     	;# 
  5789  0316                     	;# 
  5790  0317                     	;# 
  5791  0318                     	;# 
  5792  0318                     	;# 
  5793  0319                     	;# 
  5794  031A                     	;# 
  5795  031B                     	;# 
  5796  031C                     	;# 
  5797  031C                     	;# 
  5798  031D                     	;# 
  5799  031E                     	;# 
  5800  031F                     	;# 
  5801  038C                     	;# 
  5802  038C                     	;# 
  5803  038D                     	;# 
  5804  038E                     	;# 
  5805  0390                     	;# 
  5806  0390                     	;# 
  5807  0391                     	;# 
  5808  0392                     	;# 
  5809  040C                     	;# 
  5810  040D                     	;# 
  5811  040E                     	;# 
  5812  040F                     	;# 
  5813  0410                     	;# 
  5814  0411                     	;# 
  5815  0416                     	;# 
  5816  0416                     	;# 
  5817  0417                     	;# 
  5818  0418                     	;# 
  5819  0418                     	;# 
  5820  0419                     	;# 
  5821  041A                     	;# 
  5822  041A                     	;# 
  5823  041B                     	;# 
  5824  041C                     	;# 
  5825  041C                     	;# 
  5826  041D                     	;# 
  5827  041E                     	;# 
  5828  041F                     	;# 
  5829  048C                     	;# 
  5830  048C                     	;# 
  5831  048D                     	;# 
  5832  048E                     	;# 
  5833  048F                     	;# 
  5834  048F                     	;# 
  5835  0490                     	;# 
  5836  0491                     	;# 
  5837  0492                     	;# 
  5838  0492                     	;# 
  5839  0493                     	;# 
  5840  0494                     	;# 
  5841  0495                     	;# 
  5842  0495                     	;# 
  5843  0496                     	;# 
  5844  0497                     	;# 
  5845  0498                     	;# 
  5846  0499                     	;# 
  5847  049A                     	;# 
  5848  049B                     	;# 
  5849  049C                     	;# 
  5850  049D                     	;# 
  5851  050C                     	;# 
  5852  050C                     	;# 
  5853  050D                     	;# 
  5854  050E                     	;# 
  5855  050F                     	;# 
  5856  050F                     	;# 
  5857  0510                     	;# 
  5858  0511                     	;# 
  5859  0512                     	;# 
  5860  0512                     	;# 
  5861  0513                     	;# 
  5862  0514                     	;# 
  5863  0515                     	;# 
  5864  0515                     	;# 
  5865  0516                     	;# 
  5866  0517                     	;# 
  5867  0518                     	;# 
  5868  0519                     	;# 
  5869  051A                     	;# 
  5870  051B                     	;# 
  5871  051C                     	;# 
  5872  051D                     	;# 
  5873  058C                     	;# 
  5874  058C                     	;# 
  5875  058D                     	;# 
  5876  058E                     	;# 
  5877  058F                     	;# 
  5878  058F                     	;# 
  5879  0590                     	;# 
  5880  0591                     	;# 
  5881  0592                     	;# 
  5882  0593                     	;# 
  5883  060C                     	;# 
  5884  060D                     	;# 
  5885  060E                     	;# 
  5886  060F                     	;# 
  5887  0610                     	;# 
  5888  0611                     	;# 
  5889  0612                     	;# 
  5890  0613                     	;# 
  5891  0614                     	;# 
  5892  0616                     	;# 
  5893  0617                     	;# 
  5894  0618                     	;# 
  5895  0619                     	;# 
  5896  061A                     	;# 
  5897  061B                     	;# 
  5898  061C                     	;# 
  5899  061D                     	;# 
  5900  061E                     	;# 
  5901  068C                     	;# 
  5902  068D                     	;# 
  5903  068E                     	;# 
  5904  068F                     	;# 
  5905  0690                     	;# 
  5906  0691                     	;# 
  5907  0692                     	;# 
  5908  0693                     	;# 
  5909  0694                     	;# 
  5910  070C                     	;# 
  5911  070D                     	;# 
  5912  070E                     	;# 
  5913  070F                     	;# 
  5914  0710                     	;# 
  5915  0711                     	;# 
  5916  0712                     	;# 
  5917  0713                     	;# 
  5918  0714                     	;# 
  5919  0716                     	;# 
  5920  0717                     	;# 
  5921  0718                     	;# 
  5922  0719                     	;# 
  5923  071A                     	;# 
  5924  071B                     	;# 
  5925  071C                     	;# 
  5926  071D                     	;# 
  5927  071E                     	;# 
  5928  0796                     	;# 
  5929  0797                     	;# 
  5930  0798                     	;# 
  5931  0799                     	;# 
  5932  079A                     	;# 
  5933  079B                     	;# 
  5934  080C                     	;# 
  5935  080D                     	;# 
  5936  080E                     	;# 
  5937  080F                     	;# 
  5938  0810                     	;# 
  5939  0811                     	;# 
  5940  0812                     	;# 
  5941  0813                     	;# 
  5942  0814                     	;# 
  5943  081A                     	;# 
  5944  081B                     	;# 
  5945  081C                     	;# 
  5946  081D                     	;# 
  5947  081E                     	;# 
  5948  081F                     	;# 
  5949  088C                     	;# 
  5950  088D                     	;# 
  5951  088E                     	;# 
  5952  088F                     	;# 
  5953  0890                     	;# 
  5954  0891                     	;# 
  5955  0892                     	;# 
  5956  0893                     	;# 
  5957  0895                     	;# 
  5958  0896                     	;# 
  5959  0897                     	;# 
  5960  0898                     	;# 
  5961  0899                     	;# 
  5962  089A                     	;# 
  5963  089B                     	;# 
  5964  090C                     	;# 
  5965  090E                     	;# 
  5966  090F                     	;# 
  5967  091F                     	;# 
  5968  091F                     	;# 
  5969  098F                     	;# 
  5970  098F                     	;# 
  5971  0990                     	;# 
  5972  0991                     	;# 
  5973  0992                     	;# 
  5974  0993                     	;# 
  5975  0994                     	;# 
  5976  0995                     	;# 
  5977  0996                     	;# 
  5978  0997                     	;# 
  5979  0E0F                     	;# 
  5980  0E10                     	;# 
  5981  0E11                     	;# 
  5982  0E12                     	;# 
  5983  0E13                     	;# 
  5984  0E14                     	;# 
  5985  0E15                     	;# 
  5986  0E16                     	;# 
  5987  0E17                     	;# 
  5988  0E18                     	;# 
  5989  0E19                     	;# 
  5990  0E1A                     	;# 
  5991  0E1B                     	;# 
  5992  0E1C                     	;# 
  5993  0E1D                     	;# 
  5994  0E1E                     	;# 
  5995  0E1F                     	;# 
  5996  0E20                     	;# 
  5997  0E21                     	;# 
  5998  0E22                     	;# 
  5999  0E23                     	;# 
  6000  0E24                     	;# 
  6001  0E25                     	;# 
  6002  0E26                     	;# 
  6003  0E27                     	;# 
  6004  0E28                     	;# 
  6005  0E29                     	;# 
  6006  0E2A                     	;# 
  6007  0E2B                     	;# 
  6008  0E2C                     	;# 
  6009  0E2D                     	;# 
  6010  0E2E                     	;# 
  6011  0E2F                     	;# 
  6012  0E30                     	;# 
  6013  0E31                     	;# 
  6014  0E32                     	;# 
  6015  0E33                     	;# 
  6016  0E34                     	;# 
  6017  0E35                     	;# 
  6018  0E36                     	;# 
  6019  0E37                     	;# 
  6020  0E8F                     	;# 
  6021  0E90                     	;# 
  6022  0E91                     	;# 
  6023  0E92                     	;# 
  6024  0E93                     	;# 
  6025  0E94                     	;# 
  6026  0E95                     	;# 
  6027  0E96                     	;# 
  6028  0E97                     	;# 
  6029  0E9C                     	;# 
  6030  0E9D                     	;# 
  6031  0E9E                     	;# 
  6032  0EA1                     	;# 
  6033  0EA2                     	;# 
  6034  0EA3                     	;# 
  6035  0EA4                     	;# 
  6036  0EA5                     	;# 
  6037  0EA9                     	;# 
  6038  0EAA                     	;# 
  6039  0EAB                     	;# 
  6040  0EAC                     	;# 
  6041  0EB1                     	;# 
  6042  0EB2                     	;# 
  6043  0EB3                     	;# 
  6044  0EB8                     	;# 
  6045  0EB9                     	;# 
  6046  0EBA                     	;# 
  6047  0EBB                     	;# 
  6048  0EBC                     	;# 
  6049  0EBD                     	;# 
  6050  0EBE                     	;# 
  6051  0EC3                     	;# 
  6052  0EC5                     	;# 
  6053  0EC6                     	;# 
  6054  0EC7                     	;# 
  6055  0EC8                     	;# 
  6056  0EC9                     	;# 
  6057  0ECA                     	;# 
  6058  0ECB                     	;# 
  6059  0ECC                     	;# 
  6060  0F10                     	;# 
  6061  0F11                     	;# 
  6062  0F12                     	;# 
  6063  0F13                     	;# 
  6064  0F14                     	;# 
  6065  0F15                     	;# 
  6066  0F16                     	;# 
  6067  0F17                     	;# 
  6068  0F18                     	;# 
  6069  0F19                     	;# 
  6070  0F1A                     	;# 
  6071  0F1B                     	;# 
  6072  0F1C                     	;# 
  6073  0F1D                     	;# 
  6074  0F1E                     	;# 
  6075  0F1F                     	;# 
  6076  0F20                     	;# 
  6077  0F21                     	;# 
  6078  0F22                     	;# 
  6079  0F23                     	;# 
  6080  0F24                     	;# 
  6081  0F25                     	;# 
  6082  0F26                     	;# 
  6083  0F27                     	;# 
  6084  0F28                     	;# 
  6085  0F29                     	;# 
  6086  0F2A                     	;# 
  6087  0F2B                     	;# 
  6088  0F2C                     	;# 
  6089  0F2D                     	;# 
  6090  0F2E                     	;# 
  6091  0F2F                     	;# 
  6092  0F30                     	;# 
  6093  0F31                     	;# 
  6094  0F32                     	;# 
  6095  0F38                     	;# 
  6096  0F39                     	;# 
  6097  0F3A                     	;# 
  6098  0F3B                     	;# 
  6099  0F3C                     	;# 
  6100  0F3D                     	;# 
  6101  0F3E                     	;# 
  6102  0F3F                     	;# 
  6103  0F40                     	;# 
  6104  0F41                     	;# 
  6105  0F43                     	;# 
  6106  0F44                     	;# 
  6107  0F45                     	;# 
  6108  0F46                     	;# 
  6109  0F47                     	;# 
  6110  0F48                     	;# 
  6111  0F49                     	;# 
  6112  0F4A                     	;# 
  6113  0F4B                     	;# 
  6114  0F4C                     	;# 
  6115  0F4E                     	;# 
  6116  0F4F                     	;# 
  6117  0F50                     	;# 
  6118  0F51                     	;# 
  6119  0F52                     	;# 
  6120  0F53                     	;# 
  6121  0F54                     	;# 
  6122  0F55                     	;# 
  6123  0F56                     	;# 
  6124  0F57                     	;# 
  6125  0F59                     	;# 
  6126  0F5A                     	;# 
  6127  0F5B                     	;# 
  6128  0F5C                     	;# 
  6129  0F5D                     	;# 
  6130  0F61                     	;# 
  6131  0F62                     	;# 
  6132  0F64                     	;# 
  6133  0F65                     	;# 
  6134  0F66                     	;# 
  6135  0F67                     	;# 
  6136  0F68                     	;# 
  6137  0F69                     	;# 
  6138  0F6A                     	;# 
  6139  0F6B                     	;# 
  6140  0F6C                     	;# 
  6141  0F6D                     	;# 
  6142  0FE4                     	;# 
  6143  0FE5                     	;# 
  6144  0FE6                     	;# 
  6145  0FE7                     	;# 
  6146  0FE8                     	;# 
  6147  0FE9                     	;# 
  6148  0FEA                     	;# 
  6149  0FEB                     	;# 
  6150  0FED                     	;# 
  6151  0FEE                     	;# 
  6152  0FEF                     	;# 
  6153  0000                     	;# 
  6154  0001                     	;# 
  6155  0002                     	;# 
  6156  0003                     	;# 
  6157  0004                     	;# 
  6158  0005                     	;# 
  6159  0006                     	;# 
  6160  0007                     	;# 
  6161  0008                     	;# 
  6162  0009                     	;# 
  6163  000A                     	;# 
  6164  000B                     	;# 
  6165  000C                     	;# 
  6166  000D                     	;# 
  6167  000E                     	;# 
  6168  000F                     	;# 
  6169  0010                     	;# 
  6170  0011                     	;# 
  6171  0012                     	;# 
  6172  0013                     	;# 
  6173  0014                     	;# 
  6174  0015                     	;# 
  6175  0016                     	;# 
  6176  0017                     	;# 
  6177  0018                     	;# 
  6178  0019                     	;# 
  6179  001A                     	;# 
  6180  001C                     	;# 
  6181  001C                     	;# 
  6182  001D                     	;# 
  6183  001D                     	;# 
  6184  001E                     	;# 
  6185  001F                     	;# 
  6186  008C                     	;# 
  6187  008C                     	;# 
  6188  008D                     	;# 
  6189  008E                     	;# 
  6190  008E                     	;# 
  6191  008F                     	;# 
  6192  0090                     	;# 
  6193  0090                     	;# 
  6194  0091                     	;# 
  6195  0093                     	;# 
  6196  0094                     	;# 
  6197  0095                     	;# 
  6198  0096                     	;# 
  6199  0097                     	;# 
  6200  0098                     	;# 
  6201  0099                     	;# 
  6202  009A                     	;# 
  6203  009B                     	;# 
  6204  009C                     	;# 
  6205  009D                     	;# 
  6206  009E                     	;# 
  6207  010C                     	;# 
  6208  010D                     	;# 
  6209  010E                     	;# 
  6210  010E                     	;# 
  6211  010F                     	;# 
  6212  0110                     	;# 
  6213  0110                     	;# 
  6214  0111                     	;# 
  6215  0112                     	;# 
  6216  0112                     	;# 
  6217  0113                     	;# 
  6218  0114                     	;# 
  6219  0114                     	;# 
  6220  0115                     	;# 
  6221  0116                     	;# 
  6222  0116                     	;# 
  6223  0117                     	;# 
  6224  0119                     	;# 
  6225  0119                     	;# 
  6226  0119                     	;# 
  6227  011A                     	;# 
  6228  011A                     	;# 
  6229  011A                     	;# 
  6230  011B                     	;# 
  6231  011B                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011B                     	;# 
  6235  011C                     	;# 
  6236  011C                     	;# 
  6237  011C                     	;# 
  6238  011D                     	;# 
  6239  011D                     	;# 
  6240  011D                     	;# 
  6241  011E                     	;# 
  6242  011E                     	;# 
  6243  011E                     	;# 
  6244  011F                     	;# 
  6245  011F                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  011F                     	;# 
  6249  018C                     	;# 
  6250  018D                     	;# 
  6251  018E                     	;# 
  6252  018F                     	;# 
  6253  0190                     	;# 
  6254  0191                     	;# 
  6255  0192                     	;# 
  6256  0196                     	;# 
  6257  0197                     	;# 
  6258  0198                     	;# 
  6259  0199                     	;# 
  6260  019A                     	;# 
  6261  019B                     	;# 
  6262  019C                     	;# 
  6263  020C                     	;# 
  6264  020C                     	;# 
  6265  020D                     	;# 
  6266  020E                     	;# 
  6267  020F                     	;# 
  6268  020F                     	;# 
  6269  0210                     	;# 
  6270  0210                     	;# 
  6271  0211                     	;# 
  6272  0211                     	;# 
  6273  0212                     	;# 
  6274  0212                     	;# 
  6275  0213                     	;# 
  6276  0214                     	;# 
  6277  0215                     	;# 
  6278  0215                     	;# 
  6279  0216                     	;# 
  6280  0216                     	;# 
  6281  0217                     	;# 
  6282  0217                     	;# 
  6283  0218                     	;# 
  6284  0218                     	;# 
  6285  0219                     	;# 
  6286  021A                     	;# 
  6287  021B                     	;# 
  6288  021B                     	;# 
  6289  021C                     	;# 
  6290  021C                     	;# 
  6291  021D                     	;# 
  6292  021D                     	;# 
  6293  021E                     	;# 
  6294  021F                     	;# 
  6295  028C                     	;# 
  6296  028C                     	;# 
  6297  028D                     	;# 
  6298  028D                     	;# 
  6299  028E                     	;# 
  6300  028F                     	;# 
  6301  0290                     	;# 
  6302  0290                     	;# 
  6303  0291                     	;# 
  6304  0292                     	;# 
  6305  0292                     	;# 
  6306  0293                     	;# 
  6307  0293                     	;# 
  6308  0294                     	;# 
  6309  0295                     	;# 
  6310  0296                     	;# 
  6311  0296                     	;# 
  6312  0297                     	;# 
  6313  0298                     	;# 
  6314  0298                     	;# 
  6315  0299                     	;# 
  6316  0299                     	;# 
  6317  029A                     	;# 
  6318  029B                     	;# 
  6319  029C                     	;# 
  6320  029C                     	;# 
  6321  029D                     	;# 
  6322  030C                     	;# 
  6323  030C                     	;# 
  6324  030D                     	;# 
  6325  030E                     	;# 
  6326  030F                     	;# 
  6327  0310                     	;# 
  6328  0310                     	;# 
  6329  0311                     	;# 
  6330  0312                     	;# 
  6331  0313                     	;# 
  6332  0314                     	;# 
  6333  0314                     	;# 
  6334  0315                     	;# 
  6335  0316                     	;# 
  6336  0317                     	;# 
  6337  0318                     	;# 
  6338  0318                     	;# 
  6339  0319                     	;# 
  6340  031A                     	;# 
  6341  031B                     	;# 
  6342  031C                     	;# 
  6343  031C                     	;# 
  6344  031D                     	;# 
  6345  031E                     	;# 
  6346  031F                     	;# 
  6347  038C                     	;# 
  6348  038C                     	;# 
  6349  038D                     	;# 
  6350  038E                     	;# 
  6351  0390                     	;# 
  6352  0390                     	;# 
  6353  0391                     	;# 
  6354  0392                     	;# 
  6355  040C                     	;# 
  6356  040D                     	;# 
  6357  040E                     	;# 
  6358  040F                     	;# 
  6359  0410                     	;# 
  6360  0411                     	;# 
  6361  0416                     	;# 
  6362  0416                     	;# 
  6363  0417                     	;# 
  6364  0418                     	;# 
  6365  0418                     	;# 
  6366  0419                     	;# 
  6367  041A                     	;# 
  6368  041A                     	;# 
  6369  041B                     	;# 
  6370  041C                     	;# 
  6371  041C                     	;# 
  6372  041D                     	;# 
  6373  041E                     	;# 
  6374  041F                     	;# 
  6375  048C                     	;# 
  6376  048C                     	;# 
  6377  048D                     	;# 
  6378  048E                     	;# 
  6379  048F                     	;# 
  6380  048F                     	;# 
  6381  0490                     	;# 
  6382  0491                     	;# 
  6383  0492                     	;# 
  6384  0492                     	;# 
  6385  0493                     	;# 
  6386  0494                     	;# 
  6387  0495                     	;# 
  6388  0495                     	;# 
  6389  0496                     	;# 
  6390  0497                     	;# 
  6391  0498                     	;# 
  6392  0499                     	;# 
  6393  049A                     	;# 
  6394  049B                     	;# 
  6395  049C                     	;# 
  6396  049D                     	;# 
  6397  050C                     	;# 
  6398  050C                     	;# 
  6399  050D                     	;# 
  6400  050E                     	;# 
  6401  050F                     	;# 
  6402  050F                     	;# 
  6403  0510                     	;# 
  6404  0511                     	;# 
  6405  0512                     	;# 
  6406  0512                     	;# 
  6407  0513                     	;# 
  6408  0514                     	;# 
  6409  0515                     	;# 
  6410  0515                     	;# 
  6411  0516                     	;# 
  6412  0517                     	;# 
  6413  0518                     	;# 
  6414  0519                     	;# 
  6415  051A                     	;# 
  6416  051B                     	;# 
  6417  051C                     	;# 
  6418  051D                     	;# 
  6419  058C                     	;# 
  6420  058C                     	;# 
  6421  058D                     	;# 
  6422  058E                     	;# 
  6423  058F                     	;# 
  6424  058F                     	;# 
  6425  0590                     	;# 
  6426  0591                     	;# 
  6427  0592                     	;# 
  6428  0593                     	;# 
  6429  060C                     	;# 
  6430  060D                     	;# 
  6431  060E                     	;# 
  6432  060F                     	;# 
  6433  0610                     	;# 
  6434  0611                     	;# 
  6435  0612                     	;# 
  6436  0613                     	;# 
  6437  0614                     	;# 
  6438  0616                     	;# 
  6439  0617                     	;# 
  6440  0618                     	;# 
  6441  0619                     	;# 
  6442  061A                     	;# 
  6443  061B                     	;# 
  6444  061C                     	;# 
  6445  061D                     	;# 
  6446  061E                     	;# 
  6447  068C                     	;# 
  6448  068D                     	;# 
  6449  068E                     	;# 
  6450  068F                     	;# 
  6451  0690                     	;# 
  6452  0691                     	;# 
  6453  0692                     	;# 
  6454  0693                     	;# 
  6455  0694                     	;# 
  6456  070C                     	;# 
  6457  070D                     	;# 
  6458  070E                     	;# 
  6459  070F                     	;# 
  6460  0710                     	;# 
  6461  0711                     	;# 
  6462  0712                     	;# 
  6463  0713                     	;# 
  6464  0714                     	;# 
  6465  0716                     	;# 
  6466  0717                     	;# 
  6467  0718                     	;# 
  6468  0719                     	;# 
  6469  071A                     	;# 
  6470  071B                     	;# 
  6471  071C                     	;# 
  6472  071D                     	;# 
  6473  071E                     	;# 
  6474  0796                     	;# 
  6475  0797                     	;# 
  6476  0798                     	;# 
  6477  0799                     	;# 
  6478  079A                     	;# 
  6479  079B                     	;# 
  6480  080C                     	;# 
  6481  080D                     	;# 
  6482  080E                     	;# 
  6483  080F                     	;# 
  6484  0810                     	;# 
  6485  0811                     	;# 
  6486  0812                     	;# 
  6487  0813                     	;# 
  6488  0814                     	;# 
  6489  081A                     	;# 
  6490  081B                     	;# 
  6491  081C                     	;# 
  6492  081D                     	;# 
  6493  081E                     	;# 
  6494  081F                     	;# 
  6495  088C                     	;# 
  6496  088D                     	;# 
  6497  088E                     	;# 
  6498  088F                     	;# 
  6499  0890                     	;# 
  6500  0891                     	;# 
  6501  0892                     	;# 
  6502  0893                     	;# 
  6503  0895                     	;# 
  6504  0896                     	;# 
  6505  0897                     	;# 
  6506  0898                     	;# 
  6507  0899                     	;# 
  6508  089A                     	;# 
  6509  089B                     	;# 
  6510  090C                     	;# 
  6511  090E                     	;# 
  6512  090F                     	;# 
  6513  091F                     	;# 
  6514  091F                     	;# 
  6515  098F                     	;# 
  6516  098F                     	;# 
  6517  0990                     	;# 
  6518  0991                     	;# 
  6519  0992                     	;# 
  6520  0993                     	;# 
  6521  0994                     	;# 
  6522  0995                     	;# 
  6523  0996                     	;# 
  6524  0997                     	;# 
  6525  0E0F                     	;# 
  6526  0E10                     	;# 
  6527  0E11                     	;# 
  6528  0E12                     	;# 
  6529  0E13                     	;# 
  6530  0E14                     	;# 
  6531  0E15                     	;# 
  6532  0E16                     	;# 
  6533  0E17                     	;# 
  6534  0E18                     	;# 
  6535  0E19                     	;# 
  6536  0E1A                     	;# 
  6537  0E1B                     	;# 
  6538  0E1C                     	;# 
  6539  0E1D                     	;# 
  6540  0E1E                     	;# 
  6541  0E1F                     	;# 
  6542  0E20                     	;# 
  6543  0E21                     	;# 
  6544  0E22                     	;# 
  6545  0E23                     	;# 
  6546  0E24                     	;# 
  6547  0E25                     	;# 
  6548  0E26                     	;# 
  6549  0E27                     	;# 
  6550  0E28                     	;# 
  6551  0E29                     	;# 
  6552  0E2A                     	;# 
  6553  0E2B                     	;# 
  6554  0E2C                     	;# 
  6555  0E2D                     	;# 
  6556  0E2E                     	;# 
  6557  0E2F                     	;# 
  6558  0E30                     	;# 
  6559  0E31                     	;# 
  6560  0E32                     	;# 
  6561  0E33                     	;# 
  6562  0E34                     	;# 
  6563  0E35                     	;# 
  6564  0E36                     	;# 
  6565  0E37                     	;# 
  6566  0E8F                     	;# 
  6567  0E90                     	;# 
  6568  0E91                     	;# 
  6569  0E92                     	;# 
  6570  0E93                     	;# 
  6571  0E94                     	;# 
  6572  0E95                     	;# 
  6573  0E96                     	;# 
  6574  0E97                     	;# 
  6575  0E9C                     	;# 
  6576  0E9D                     	;# 
  6577  0E9E                     	;# 
  6578  0EA1                     	;# 
  6579  0EA2                     	;# 
  6580  0EA3                     	;# 
  6581  0EA4                     	;# 
  6582  0EA5                     	;# 
  6583  0EA9                     	;# 
  6584  0EAA                     	;# 
  6585  0EAB                     	;# 
  6586  0EAC                     	;# 
  6587  0EB1                     	;# 
  6588  0EB2                     	;# 
  6589  0EB3                     	;# 
  6590  0EB8                     	;# 
  6591  0EB9                     	;# 
  6592  0EBA                     	;# 
  6593  0EBB                     	;# 
  6594  0EBC                     	;# 
  6595  0EBD                     	;# 
  6596  0EBE                     	;# 
  6597  0EC3                     	;# 
  6598  0EC5                     	;# 
  6599  0EC6                     	;# 
  6600  0EC7                     	;# 
  6601  0EC8                     	;# 
  6602  0EC9                     	;# 
  6603  0ECA                     	;# 
  6604  0ECB                     	;# 
  6605  0ECC                     	;# 
  6606  0F10                     	;# 
  6607  0F11                     	;# 
  6608  0F12                     	;# 
  6609  0F13                     	;# 
  6610  0F14                     	;# 
  6611  0F15                     	;# 
  6612  0F16                     	;# 
  6613  0F17                     	;# 
  6614  0F18                     	;# 
  6615  0F19                     	;# 
  6616  0F1A                     	;# 
  6617  0F1B                     	;# 
  6618  0F1C                     	;# 
  6619  0F1D                     	;# 
  6620  0F1E                     	;# 
  6621  0F1F                     	;# 
  6622  0F20                     	;# 
  6623  0F21                     	;# 
  6624  0F22                     	;# 
  6625  0F23                     	;# 
  6626  0F24                     	;# 
  6627  0F25                     	;# 
  6628  0F26                     	;# 
  6629  0F27                     	;# 
  6630  0F28                     	;# 
  6631  0F29                     	;# 
  6632  0F2A                     	;# 
  6633  0F2B                     	;# 
  6634  0F2C                     	;# 
  6635  0F2D                     	;# 
  6636  0F2E                     	;# 
  6637  0F2F                     	;# 
  6638  0F30                     	;# 
  6639  0F31                     	;# 
  6640  0F32                     	;# 
  6641  0F38                     	;# 
  6642  0F39                     	;# 
  6643  0F3A                     	;# 
  6644  0F3B                     	;# 
  6645  0F3C                     	;# 
  6646  0F3D                     	;# 
  6647  0F3E                     	;# 
  6648  0F3F                     	;# 
  6649  0F40                     	;# 
  6650  0F41                     	;# 
  6651  0F43                     	;# 
  6652  0F44                     	;# 
  6653  0F45                     	;# 
  6654  0F46                     	;# 
  6655  0F47                     	;# 
  6656  0F48                     	;# 
  6657  0F49                     	;# 
  6658  0F4A                     	;# 
  6659  0F4B                     	;# 
  6660  0F4C                     	;# 
  6661  0F4E                     	;# 
  6662  0F4F                     	;# 
  6663  0F50                     	;# 
  6664  0F51                     	;# 
  6665  0F52                     	;# 
  6666  0F53                     	;# 
  6667  0F54                     	;# 
  6668  0F55                     	;# 
  6669  0F56                     	;# 
  6670  0F57                     	;# 
  6671  0F59                     	;# 
  6672  0F5A                     	;# 
  6673  0F5B                     	;# 
  6674  0F5C                     	;# 
  6675  0F5D                     	;# 
  6676  0F61                     	;# 
  6677  0F62                     	;# 
  6678  0F64                     	;# 
  6679  0F65                     	;# 
  6680  0F66                     	;# 
  6681  0F67                     	;# 
  6682  0F68                     	;# 
  6683  0F69                     	;# 
  6684  0F6A                     	;# 
  6685  0F6B                     	;# 
  6686  0F6C                     	;# 
  6687  0F6D                     	;# 
  6688  0FE4                     	;# 
  6689  0FE5                     	;# 
  6690  0FE6                     	;# 
  6691  0FE7                     	;# 
  6692  0FE8                     	;# 
  6693  0FE9                     	;# 
  6694  0FEA                     	;# 
  6695  0FEB                     	;# 
  6696  0FED                     	;# 
  6697  0FEE                     	;# 
  6698  0FEF                     	;# 
  6699  0000                     	;# 
  6700  0001                     	;# 
  6701  0002                     	;# 
  6702  0003                     	;# 
  6703  0004                     	;# 
  6704  0005                     	;# 
  6705  0006                     	;# 
  6706  0007                     	;# 
  6707  0008                     	;# 
  6708  0009                     	;# 
  6709  000A                     	;# 
  6710  000B                     	;# 
  6711  000C                     	;# 
  6712  000D                     	;# 
  6713  000E                     	;# 
  6714  000F                     	;# 
  6715  0010                     	;# 
  6716  0011                     	;# 
  6717  0012                     	;# 
  6718  0013                     	;# 
  6719  0014                     	;# 
  6720  0015                     	;# 
  6721  0016                     	;# 
  6722  0017                     	;# 
  6723  0018                     	;# 
  6724  0019                     	;# 
  6725  001A                     	;# 
  6726  001C                     	;# 
  6727  001C                     	;# 
  6728  001D                     	;# 
  6729  001D                     	;# 
  6730  001E                     	;# 
  6731  001F                     	;# 
  6732  008C                     	;# 
  6733  008C                     	;# 
  6734  008D                     	;# 
  6735  008E                     	;# 
  6736  008E                     	;# 
  6737  008F                     	;# 
  6738  0090                     	;# 
  6739  0090                     	;# 
  6740  0091                     	;# 
  6741  0093                     	;# 
  6742  0094                     	;# 
  6743  0095                     	;# 
  6744  0096                     	;# 
  6745  0097                     	;# 
  6746  0098                     	;# 
  6747  0099                     	;# 
  6748  009A                     	;# 
  6749  009B                     	;# 
  6750  009C                     	;# 
  6751  009D                     	;# 
  6752  009E                     	;# 
  6753  010C                     	;# 
  6754  010D                     	;# 
  6755  010E                     	;# 
  6756  010E                     	;# 
  6757  010F                     	;# 
  6758  0110                     	;# 
  6759  0110                     	;# 
  6760  0111                     	;# 
  6761  0112                     	;# 
  6762  0112                     	;# 
  6763  0113                     	;# 
  6764  0114                     	;# 
  6765  0114                     	;# 
  6766  0115                     	;# 
  6767  0116                     	;# 
  6768  0116                     	;# 
  6769  0117                     	;# 
  6770  0119                     	;# 
  6771  0119                     	;# 
  6772  0119                     	;# 
  6773  011A                     	;# 
  6774  011A                     	;# 
  6775  011A                     	;# 
  6776  011B                     	;# 
  6777  011B                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011B                     	;# 
  6781  011C                     	;# 
  6782  011C                     	;# 
  6783  011C                     	;# 
  6784  011D                     	;# 
  6785  011D                     	;# 
  6786  011D                     	;# 
  6787  011E                     	;# 
  6788  011E                     	;# 
  6789  011E                     	;# 
  6790  011F                     	;# 
  6791  011F                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  011F                     	;# 
  6795  018C                     	;# 
  6796  018D                     	;# 
  6797  018E                     	;# 
  6798  018F                     	;# 
  6799  0190                     	;# 
  6800  0191                     	;# 
  6801  0192                     	;# 
  6802  0196                     	;# 
  6803  0197                     	;# 
  6804  0198                     	;# 
  6805  0199                     	;# 
  6806  019A                     	;# 
  6807  019B                     	;# 
  6808  019C                     	;# 
  6809  020C                     	;# 
  6810  020C                     	;# 
  6811  020D                     	;# 
  6812  020E                     	;# 
  6813  020F                     	;# 
  6814  020F                     	;# 
  6815  0210                     	;# 
  6816  0210                     	;# 
  6817  0211                     	;# 
  6818  0211                     	;# 
  6819  0212                     	;# 
  6820  0212                     	;# 
  6821  0213                     	;# 
  6822  0214                     	;# 
  6823  0215                     	;# 
  6824  0215                     	;# 
  6825  0216                     	;# 
  6826  0216                     	;# 
  6827  0217                     	;# 
  6828  0217                     	;# 
  6829  0218                     	;# 
  6830  0218                     	;# 
  6831  0219                     	;# 
  6832  021A                     	;# 
  6833  021B                     	;# 
  6834  021B                     	;# 
  6835  021C                     	;# 
  6836  021C                     	;# 
  6837  021D                     	;# 
  6838  021D                     	;# 
  6839  021E                     	;# 
  6840  021F                     	;# 
  6841  028C                     	;# 
  6842  028C                     	;# 
  6843  028D                     	;# 
  6844  028D                     	;# 
  6845  028E                     	;# 
  6846  028F                     	;# 
  6847  0290                     	;# 
  6848  0290                     	;# 
  6849  0291                     	;# 
  6850  0292                     	;# 
  6851  0292                     	;# 
  6852  0293                     	;# 
  6853  0293                     	;# 
  6854  0294                     	;# 
  6855  0295                     	;# 
  6856  0296                     	;# 
  6857  0296                     	;# 
  6858  0297                     	;# 
  6859  0298                     	;# 
  6860  0298                     	;# 
  6861  0299                     	;# 
  6862  0299                     	;# 
  6863  029A                     	;# 
  6864  029B                     	;# 
  6865  029C                     	;# 
  6866  029C                     	;# 
  6867  029D                     	;# 
  6868  030C                     	;# 
  6869  030C                     	;# 
  6870  030D                     	;# 
  6871  030E                     	;# 
  6872  030F                     	;# 
  6873  0310                     	;# 
  6874  0310                     	;# 
  6875  0311                     	;# 
  6876  0312                     	;# 
  6877  0313                     	;# 
  6878  0314                     	;# 
  6879  0314                     	;# 
  6880  0315                     	;# 
  6881  0316                     	;# 
  6882  0317                     	;# 
  6883  0318                     	;# 
  6884  0318                     	;# 
  6885  0319                     	;# 
  6886  031A                     	;# 
  6887  031B                     	;# 
  6888  031C                     	;# 
  6889  031C                     	;# 
  6890  031D                     	;# 
  6891  031E                     	;# 
  6892  031F                     	;# 
  6893  038C                     	;# 
  6894  038C                     	;# 
  6895  038D                     	;# 
  6896  038E                     	;# 
  6897  0390                     	;# 
  6898  0390                     	;# 
  6899  0391                     	;# 
  6900  0392                     	;# 
  6901  040C                     	;# 
  6902  040D                     	;# 
  6903  040E                     	;# 
  6904  040F                     	;# 
  6905  0410                     	;# 
  6906  0411                     	;# 
  6907  0416                     	;# 
  6908  0416                     	;# 
  6909  0417                     	;# 
  6910  0418                     	;# 
  6911  0418                     	;# 
  6912  0419                     	;# 
  6913  041A                     	;# 
  6914  041A                     	;# 
  6915  041B                     	;# 
  6916  041C                     	;# 
  6917  041C                     	;# 
  6918  041D                     	;# 
  6919  041E                     	;# 
  6920  041F                     	;# 
  6921  048C                     	;# 
  6922  048C                     	;# 
  6923  048D                     	;# 
  6924  048E                     	;# 
  6925  048F                     	;# 
  6926  048F                     	;# 
  6927  0490                     	;# 
  6928  0491                     	;# 
  6929  0492                     	;# 
  6930  0492                     	;# 
  6931  0493                     	;# 
  6932  0494                     	;# 
  6933  0495                     	;# 
  6934  0495                     	;# 
  6935  0496                     	;# 
  6936  0497                     	;# 
  6937  0498                     	;# 
  6938  0499                     	;# 
  6939  049A                     	;# 
  6940  049B                     	;# 
  6941  049C                     	;# 
  6942  049D                     	;# 
  6943  050C                     	;# 
  6944  050C                     	;# 
  6945  050D                     	;# 
  6946  050E                     	;# 
  6947  050F                     	;# 
  6948  050F                     	;# 
  6949  0510                     	;# 
  6950  0511                     	;# 
  6951  0512                     	;# 
  6952  0512                     	;# 
  6953  0513                     	;# 
  6954  0514                     	;# 
  6955  0515                     	;# 
  6956  0515                     	;# 
  6957  0516                     	;# 
  6958  0517                     	;# 
  6959  0518                     	;# 
  6960  0519                     	;# 
  6961  051A                     	;# 
  6962  051B                     	;# 
  6963  051C                     	;# 
  6964  051D                     	;# 
  6965  058C                     	;# 
  6966  058C                     	;# 
  6967  058D                     	;# 
  6968  058E                     	;# 
  6969  058F                     	;# 
  6970  058F                     	;# 
  6971  0590                     	;# 
  6972  0591                     	;# 
  6973  0592                     	;# 
  6974  0593                     	;# 
  6975  060C                     	;# 
  6976  060D                     	;# 
  6977  060E                     	;# 
  6978  060F                     	;# 
  6979  0610                     	;# 
  6980  0611                     	;# 
  6981  0612                     	;# 
  6982  0613                     	;# 
  6983  0614                     	;# 
  6984  0616                     	;# 
  6985  0617                     	;# 
  6986  0618                     	;# 
  6987  0619                     	;# 
  6988  061A                     	;# 
  6989  061B                     	;# 
  6990  061C                     	;# 
  6991  061D                     	;# 
  6992  061E                     	;# 
  6993  068C                     	;# 
  6994  068D                     	;# 
  6995  068E                     	;# 
  6996  068F                     	;# 
  6997  0690                     	;# 
  6998  0691                     	;# 
  6999  0692                     	;# 
  7000  0693                     	;# 
  7001  0694                     	;# 
  7002  070C                     	;# 
  7003  070D                     	;# 
  7004  070E                     	;# 
  7005  070F                     	;# 
  7006  0710                     	;# 
  7007  0711                     	;# 
  7008  0712                     	;# 
  7009  0713                     	;# 
  7010  0714                     	;# 
  7011  0716                     	;# 
  7012  0717                     	;# 
  7013  0718                     	;# 
  7014  0719                     	;# 
  7015  071A                     	;# 
  7016  071B                     	;# 
  7017  071C                     	;# 
  7018  071D                     	;# 
  7019  071E                     	;# 
  7020  0796                     	;# 
  7021  0797                     	;# 
  7022  0798                     	;# 
  7023  0799                     	;# 
  7024  079A                     	;# 
  7025  079B                     	;# 
  7026  080C                     	;# 
  7027  080D                     	;# 
  7028  080E                     	;# 
  7029  080F                     	;# 
  7030  0810                     	;# 
  7031  0811                     	;# 
  7032  0812                     	;# 
  7033  0813                     	;# 
  7034  0814                     	;# 
  7035  081A                     	;# 
  7036  081B                     	;# 
  7037  081C                     	;# 
  7038  081D                     	;# 
  7039  081E                     	;# 
  7040  081F                     	;# 
  7041  088C                     	;# 
  7042  088D                     	;# 
  7043  088E                     	;# 
  7044  088F                     	;# 
  7045  0890                     	;# 
  7046  0891                     	;# 
  7047  0892                     	;# 
  7048  0893                     	;# 
  7049  0895                     	;# 
  7050  0896                     	;# 
  7051  0897                     	;# 
  7052  0898                     	;# 
  7053  0899                     	;# 
  7054  089A                     	;# 
  7055  089B                     	;# 
  7056  090C                     	;# 
  7057  090E                     	;# 
  7058  090F                     	;# 
  7059  091F                     	;# 
  7060  091F                     	;# 
  7061  098F                     	;# 
  7062  098F                     	;# 
  7063  0990                     	;# 
  7064  0991                     	;# 
  7065  0992                     	;# 
  7066  0993                     	;# 
  7067  0994                     	;# 
  7068  0995                     	;# 
  7069  0996                     	;# 
  7070  0997                     	;# 
  7071  0E0F                     	;# 
  7072  0E10                     	;# 
  7073  0E11                     	;# 
  7074  0E12                     	;# 
  7075  0E13                     	;# 
  7076  0E14                     	;# 
  7077  0E15                     	;# 
  7078  0E16                     	;# 
  7079  0E17                     	;# 
  7080  0E18                     	;# 
  7081  0E19                     	;# 
  7082  0E1A                     	;# 
  7083  0E1B                     	;# 
  7084  0E1C                     	;# 
  7085  0E1D                     	;# 
  7086  0E1E                     	;# 
  7087  0E1F                     	;# 
  7088  0E20                     	;# 
  7089  0E21                     	;# 
  7090  0E22                     	;# 
  7091  0E23                     	;# 
  7092  0E24                     	;# 
  7093  0E25                     	;# 
  7094  0E26                     	;# 
  7095  0E27                     	;# 
  7096  0E28                     	;# 
  7097  0E29                     	;# 
  7098  0E2A                     	;# 
  7099  0E2B                     	;# 
  7100  0E2C                     	;# 
  7101  0E2D                     	;# 
  7102  0E2E                     	;# 
  7103  0E2F                     	;# 
  7104  0E30                     	;# 
  7105  0E31                     	;# 
  7106  0E32                     	;# 
  7107  0E33                     	;# 
  7108  0E34                     	;# 
  7109  0E35                     	;# 
  7110  0E36                     	;# 
  7111  0E37                     	;# 
  7112  0E8F                     	;# 
  7113  0E90                     	;# 
  7114  0E91                     	;# 
  7115  0E92                     	;# 
  7116  0E93                     	;# 
  7117  0E94                     	;# 
  7118  0E95                     	;# 
  7119  0E96                     	;# 
  7120  0E97                     	;# 
  7121  0E9C                     	;# 
  7122  0E9D                     	;# 
  7123  0E9E                     	;# 
  7124  0EA1                     	;# 
  7125  0EA2                     	;# 
  7126  0EA3                     	;# 
  7127  0EA4                     	;# 
  7128  0EA5                     	;# 
  7129  0EA9                     	;# 
  7130  0EAA                     	;# 
  7131  0EAB                     	;# 
  7132  0EAC                     	;# 
  7133  0EB1                     	;# 
  7134  0EB2                     	;# 
  7135  0EB3                     	;# 
  7136  0EB8                     	;# 
  7137  0EB9                     	;# 
  7138  0EBA                     	;# 
  7139  0EBB                     	;# 
  7140  0EBC                     	;# 
  7141  0EBD                     	;# 
  7142  0EBE                     	;# 
  7143  0EC3                     	;# 
  7144  0EC5                     	;# 
  7145  0EC6                     	;# 
  7146  0EC7                     	;# 
  7147  0EC8                     	;# 
  7148  0EC9                     	;# 
  7149  0ECA                     	;# 
  7150  0ECB                     	;# 
  7151  0ECC                     	;# 
  7152  0F10                     	;# 
  7153  0F11                     	;# 
  7154  0F12                     	;# 
  7155  0F13                     	;# 
  7156  0F14                     	;# 
  7157  0F15                     	;# 
  7158  0F16                     	;# 
  7159  0F17                     	;# 
  7160  0F18                     	;# 
  7161  0F19                     	;# 
  7162  0F1A                     	;# 
  7163  0F1B                     	;# 
  7164  0F1C                     	;# 
  7165  0F1D                     	;# 
  7166  0F1E                     	;# 
  7167  0F1F                     	;# 
  7168  0F20                     	;# 
  7169  0F21                     	;# 
  7170  0F22                     	;# 
  7171  0F23                     	;# 
  7172  0F24                     	;# 
  7173  0F25                     	;# 
  7174  0F26                     	;# 
  7175  0F27                     	;# 
  7176  0F28                     	;# 
  7177  0F29                     	;# 
  7178  0F2A                     	;# 
  7179  0F2B                     	;# 
  7180  0F2C                     	;# 
  7181  0F2D                     	;# 
  7182  0F2E                     	;# 
  7183  0F2F                     	;# 
  7184  0F30                     	;# 
  7185  0F31                     	;# 
  7186  0F32                     	;# 
  7187  0F38                     	;# 
  7188  0F39                     	;# 
  7189  0F3A                     	;# 
  7190  0F3B                     	;# 
  7191  0F3C                     	;# 
  7192  0F3D                     	;# 
  7193  0F3E                     	;# 
  7194  0F3F                     	;# 
  7195  0F40                     	;# 
  7196  0F41                     	;# 
  7197  0F43                     	;# 
  7198  0F44                     	;# 
  7199  0F45                     	;# 
  7200  0F46                     	;# 
  7201  0F47                     	;# 
  7202  0F48                     	;# 
  7203  0F49                     	;# 
  7204  0F4A                     	;# 
  7205  0F4B                     	;# 
  7206  0F4C                     	;# 
  7207  0F4E                     	;# 
  7208  0F4F                     	;# 
  7209  0F50                     	;# 
  7210  0F51                     	;# 
  7211  0F52                     	;# 
  7212  0F53                     	;# 
  7213  0F54                     	;# 
  7214  0F55                     	;# 
  7215  0F56                     	;# 
  7216  0F57                     	;# 
  7217  0F59                     	;# 
  7218  0F5A                     	;# 
  7219  0F5B                     	;# 
  7220  0F5C                     	;# 
  7221  0F5D                     	;# 
  7222  0F61                     	;# 
  7223  0F62                     	;# 
  7224  0F64                     	;# 
  7225  0F65                     	;# 
  7226  0F66                     	;# 
  7227  0F67                     	;# 
  7228  0F68                     	;# 
  7229  0F69                     	;# 
  7230  0F6A                     	;# 
  7231  0F6B                     	;# 
  7232  0F6C                     	;# 
  7233  0F6D                     	;# 
  7234  0FE4                     	;# 
  7235  0FE5                     	;# 
  7236  0FE6                     	;# 
  7237  0FE7                     	;# 
  7238  0FE8                     	;# 
  7239  0FE9                     	;# 
  7240  0FEA                     	;# 
  7241  0FEB                     	;# 
  7242  0FED                     	;# 
  7243  0FEE                     	;# 
  7244  0FEF                     	;# 
  7245  0000                     	;# 
  7246  0001                     	;# 
  7247  0002                     	;# 
  7248  0003                     	;# 
  7249  0004                     	;# 
  7250  0005                     	;# 
  7251  0006                     	;# 
  7252  0007                     	;# 
  7253  0008                     	;# 
  7254  0009                     	;# 
  7255  000A                     	;# 
  7256  000B                     	;# 
  7257  000C                     	;# 
  7258  000D                     	;# 
  7259  000E                     	;# 
  7260  000F                     	;# 
  7261  0010                     	;# 
  7262  0011                     	;# 
  7263  0012                     	;# 
  7264  0013                     	;# 
  7265  0014                     	;# 
  7266  0015                     	;# 
  7267  0016                     	;# 
  7268  0017                     	;# 
  7269  0018                     	;# 
  7270  0019                     	;# 
  7271  001A                     	;# 
  7272  001C                     	;# 
  7273  001C                     	;# 
  7274  001D                     	;# 
  7275  001D                     	;# 
  7276  001E                     	;# 
  7277  001F                     	;# 
  7278  008C                     	;# 
  7279  008C                     	;# 
  7280  008D                     	;# 
  7281  008E                     	;# 
  7282  008E                     	;# 
  7283  008F                     	;# 
  7284  0090                     	;# 
  7285  0090                     	;# 
  7286  0091                     	;# 
  7287  0093                     	;# 
  7288  0094                     	;# 
  7289  0095                     	;# 
  7290  0096                     	;# 
  7291  0097                     	;# 
  7292  0098                     	;# 
  7293  0099                     	;# 
  7294  009A                     	;# 
  7295  009B                     	;# 
  7296  009C                     	;# 
  7297  009D                     	;# 
  7298  009E                     	;# 
  7299  010C                     	;# 
  7300  010D                     	;# 
  7301  010E                     	;# 
  7302  010E                     	;# 
  7303  010F                     	;# 
  7304  0110                     	;# 
  7305  0110                     	;# 
  7306  0111                     	;# 
  7307  0112                     	;# 
  7308  0112                     	;# 
  7309  0113                     	;# 
  7310  0114                     	;# 
  7311  0114                     	;# 
  7312  0115                     	;# 
  7313  0116                     	;# 
  7314  0116                     	;# 
  7315  0117                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  0119                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011A                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011B                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011C                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011D                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011E                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  011F                     	;# 
  7341  018C                     	;# 
  7342  018D                     	;# 
  7343  018E                     	;# 
  7344  018F                     	;# 
  7345  0190                     	;# 
  7346  0191                     	;# 
  7347  0192                     	;# 
  7348  0196                     	;# 
  7349  0197                     	;# 
  7350  0198                     	;# 
  7351  0199                     	;# 
  7352  019A                     	;# 
  7353  019B                     	;# 
  7354  019C                     	;# 
  7355  020C                     	;# 
  7356  020C                     	;# 
  7357  020D                     	;# 
  7358  020E                     	;# 
  7359  020F                     	;# 
  7360  020F                     	;# 
  7361  0210                     	;# 
  7362  0210                     	;# 
  7363  0211                     	;# 
  7364  0211                     	;# 
  7365  0212                     	;# 
  7366  0212                     	;# 
  7367  0213                     	;# 
  7368  0214                     	;# 
  7369  0215                     	;# 
  7370  0215                     	;# 
  7371  0216                     	;# 
  7372  0216                     	;# 
  7373  0217                     	;# 
  7374  0217                     	;# 
  7375  0218                     	;# 
  7376  0218                     	;# 
  7377  0219                     	;# 
  7378  021A                     	;# 
  7379  021B                     	;# 
  7380  021B                     	;# 
  7381  021C                     	;# 
  7382  021C                     	;# 
  7383  021D                     	;# 
  7384  021D                     	;# 
  7385  021E                     	;# 
  7386  021F                     	;# 
  7387  028C                     	;# 
  7388  028C                     	;# 
  7389  028D                     	;# 
  7390  028D                     	;# 
  7391  028E                     	;# 
  7392  028F                     	;# 
  7393  0290                     	;# 
  7394  0290                     	;# 
  7395  0291                     	;# 
  7396  0292                     	;# 
  7397  0292                     	;# 
  7398  0293                     	;# 
  7399  0293                     	;# 
  7400  0294                     	;# 
  7401  0295                     	;# 
  7402  0296                     	;# 
  7403  0296                     	;# 
  7404  0297                     	;# 
  7405  0298                     	;# 
  7406  0298                     	;# 
  7407  0299                     	;# 
  7408  0299                     	;# 
  7409  029A                     	;# 
  7410  029B                     	;# 
  7411  029C                     	;# 
  7412  029C                     	;# 
  7413  029D                     	;# 
  7414  030C                     	;# 
  7415  030C                     	;# 
  7416  030D                     	;# 
  7417  030E                     	;# 
  7418  030F                     	;# 
  7419  0310                     	;# 
  7420  0310                     	;# 
  7421  0311                     	;# 
  7422  0312                     	;# 
  7423  0313                     	;# 
  7424  0314                     	;# 
  7425  0314                     	;# 
  7426  0315                     	;# 
  7427  0316                     	;# 
  7428  0317                     	;# 
  7429  0318                     	;# 
  7430  0318                     	;# 
  7431  0319                     	;# 
  7432  031A                     	;# 
  7433  031B                     	;# 
  7434  031C                     	;# 
  7435  031C                     	;# 
  7436  031D                     	;# 
  7437  031E                     	;# 
  7438  031F                     	;# 
  7439  038C                     	;# 
  7440  038C                     	;# 
  7441  038D                     	;# 
  7442  038E                     	;# 
  7443  0390                     	;# 
  7444  0390                     	;# 
  7445  0391                     	;# 
  7446  0392                     	;# 
  7447  040C                     	;# 
  7448  040D                     	;# 
  7449  040E                     	;# 
  7450  040F                     	;# 
  7451  0410                     	;# 
  7452  0411                     	;# 
  7453  0416                     	;# 
  7454  0416                     	;# 
  7455  0417                     	;# 
  7456  0418                     	;# 
  7457  0418                     	;# 
  7458  0419                     	;# 
  7459  041A                     	;# 
  7460  041A                     	;# 
  7461  041B                     	;# 
  7462  041C                     	;# 
  7463  041C                     	;# 
  7464  041D                     	;# 
  7465  041E                     	;# 
  7466  041F                     	;# 
  7467  048C                     	;# 
  7468  048C                     	;# 
  7469  048D                     	;# 
  7470  048E                     	;# 
  7471  048F                     	;# 
  7472  048F                     	;# 
  7473  0490                     	;# 
  7474  0491                     	;# 
  7475  0492                     	;# 
  7476  0492                     	;# 
  7477  0493                     	;# 
  7478  0494                     	;# 
  7479  0495                     	;# 
  7480  0495                     	;# 
  7481  0496                     	;# 
  7482  0497                     	;# 
  7483  0498                     	;# 
  7484  0499                     	;# 
  7485  049A                     	;# 
  7486  049B                     	;# 
  7487  049C                     	;# 
  7488  049D                     	;# 
  7489  050C                     	;# 
  7490  050C                     	;# 
  7491  050D                     	;# 
  7492  050E                     	;# 
  7493  050F                     	;# 
  7494  050F                     	;# 
  7495  0510                     	;# 
  7496  0511                     	;# 
  7497  0512                     	;# 
  7498  0512                     	;# 
  7499  0513                     	;# 
  7500  0514                     	;# 
  7501  0515                     	;# 
  7502  0515                     	;# 
  7503  0516                     	;# 
  7504  0517                     	;# 
  7505  0518                     	;# 
  7506  0519                     	;# 
  7507  051A                     	;# 
  7508  051B                     	;# 
  7509  051C                     	;# 
  7510  051D                     	;# 
  7511  058C                     	;# 
  7512  058C                     	;# 
  7513  058D                     	;# 
  7514  058E                     	;# 
  7515  058F                     	;# 
  7516  058F                     	;# 
  7517  0590                     	;# 
  7518  0591                     	;# 
  7519  0592                     	;# 
  7520  0593                     	;# 
  7521  060C                     	;# 
  7522  060D                     	;# 
  7523  060E                     	;# 
  7524  060F                     	;# 
  7525  0610                     	;# 
  7526  0611                     	;# 
  7527  0612                     	;# 
  7528  0613                     	;# 
  7529  0614                     	;# 
  7530  0616                     	;# 
  7531  0617                     	;# 
  7532  0618                     	;# 
  7533  0619                     	;# 
  7534  061A                     	;# 
  7535  061B                     	;# 
  7536  061C                     	;# 
  7537  061D                     	;# 
  7538  061E                     	;# 
  7539  068C                     	;# 
  7540  068D                     	;# 
  7541  068E                     	;# 
  7542  068F                     	;# 
  7543  0690                     	;# 
  7544  0691                     	;# 
  7545  0692                     	;# 
  7546  0693                     	;# 
  7547  0694                     	;# 
  7548  070C                     	;# 
  7549  070D                     	;# 
  7550  070E                     	;# 
  7551  070F                     	;# 
  7552  0710                     	;# 
  7553  0711                     	;# 
  7554  0712                     	;# 
  7555  0713                     	;# 
  7556  0714                     	;# 
  7557  0716                     	;# 
  7558  0717                     	;# 
  7559  0718                     	;# 
  7560  0719                     	;# 
  7561  071A                     	;# 
  7562  071B                     	;# 
  7563  071C                     	;# 
  7564  071D                     	;# 
  7565  071E                     	;# 
  7566  0796                     	;# 
  7567  0797                     	;# 
  7568  0798                     	;# 
  7569  0799                     	;# 
  7570  079A                     	;# 
  7571  079B                     	;# 
  7572  080C                     	;# 
  7573  080D                     	;# 
  7574  080E                     	;# 
  7575  080F                     	;# 
  7576  0810                     	;# 
  7577  0811                     	;# 
  7578  0812                     	;# 
  7579  0813                     	;# 
  7580  0814                     	;# 
  7581  081A                     	;# 
  7582  081B                     	;# 
  7583  081C                     	;# 
  7584  081D                     	;# 
  7585  081E                     	;# 
  7586  081F                     	;# 
  7587  088C                     	;# 
  7588  088D                     	;# 
  7589  088E                     	;# 
  7590  088F                     	;# 
  7591  0890                     	;# 
  7592  0891                     	;# 
  7593  0892                     	;# 
  7594  0893                     	;# 
  7595  0895                     	;# 
  7596  0896                     	;# 
  7597  0897                     	;# 
  7598  0898                     	;# 
  7599  0899                     	;# 
  7600  089A                     	;# 
  7601  089B                     	;# 
  7602  090C                     	;# 
  7603  090E                     	;# 
  7604  090F                     	;# 
  7605  091F                     	;# 
  7606  091F                     	;# 
  7607  098F                     	;# 
  7608  098F                     	;# 
  7609  0990                     	;# 
  7610  0991                     	;# 
  7611  0992                     	;# 
  7612  0993                     	;# 
  7613  0994                     	;# 
  7614  0995                     	;# 
  7615  0996                     	;# 
  7616  0997                     	;# 
  7617  0E0F                     	;# 
  7618  0E10                     	;# 
  7619  0E11                     	;# 
  7620  0E12                     	;# 
  7621  0E13                     	;# 
  7622  0E14                     	;# 
  7623  0E15                     	;# 
  7624  0E16                     	;# 
  7625  0E17                     	;# 
  7626  0E18                     	;# 
  7627  0E19                     	;# 
  7628  0E1A                     	;# 
  7629  0E1B                     	;# 
  7630  0E1C                     	;# 
  7631  0E1D                     	;# 
  7632  0E1E                     	;# 
  7633  0E1F                     	;# 
  7634  0E20                     	;# 
  7635  0E21                     	;# 
  7636  0E22                     	;# 
  7637  0E23                     	;# 
  7638  0E24                     	;# 
  7639  0E25                     	;# 
  7640  0E26                     	;# 
  7641  0E27                     	;# 
  7642  0E28                     	;# 
  7643  0E29                     	;# 
  7644  0E2A                     	;# 
  7645  0E2B                     	;# 
  7646  0E2C                     	;# 
  7647  0E2D                     	;# 
  7648  0E2E                     	;# 
  7649  0E2F                     	;# 
  7650  0E30                     	;# 
  7651  0E31                     	;# 
  7652  0E32                     	;# 
  7653  0E33                     	;# 
  7654  0E34                     	;# 
  7655  0E35                     	;# 
  7656  0E36                     	;# 
  7657  0E37                     	;# 
  7658  0E8F                     	;# 
  7659  0E90                     	;# 
  7660  0E91                     	;# 
  7661  0E92                     	;# 
  7662  0E93                     	;# 
  7663  0E94                     	;# 
  7664  0E95                     	;# 
  7665  0E96                     	;# 
  7666  0E97                     	;# 
  7667  0E9C                     	;# 
  7668  0E9D                     	;# 
  7669  0E9E                     	;# 
  7670  0EA1                     	;# 
  7671  0EA2                     	;# 
  7672  0EA3                     	;# 
  7673  0EA4                     	;# 
  7674  0EA5                     	;# 
  7675  0EA9                     	;# 
  7676  0EAA                     	;# 
  7677  0EAB                     	;# 
  7678  0EAC                     	;# 
  7679  0EB1                     	;# 
  7680  0EB2                     	;# 
  7681  0EB3                     	;# 
  7682  0EB8                     	;# 
  7683  0EB9                     	;# 
  7684  0EBA                     	;# 
  7685  0EBB                     	;# 
  7686  0EBC                     	;# 
  7687  0EBD                     	;# 
  7688  0EBE                     	;# 
  7689  0EC3                     	;# 
  7690  0EC5                     	;# 
  7691  0EC6                     	;# 
  7692  0EC7                     	;# 
  7693  0EC8                     	;# 
  7694  0EC9                     	;# 
  7695  0ECA                     	;# 
  7696  0ECB                     	;# 
  7697  0ECC                     	;# 
  7698  0F10                     	;# 
  7699  0F11                     	;# 
  7700  0F12                     	;# 
  7701  0F13                     	;# 
  7702  0F14                     	;# 
  7703  0F15                     	;# 
  7704  0F16                     	;# 
  7705  0F17                     	;# 
  7706  0F18                     	;# 
  7707  0F19                     	;# 
  7708  0F1A                     	;# 
  7709  0F1B                     	;# 
  7710  0F1C                     	;# 
  7711  0F1D                     	;# 
  7712  0F1E                     	;# 
  7713  0F1F                     	;# 
  7714  0F20                     	;# 
  7715  0F21                     	;# 
  7716  0F22                     	;# 
  7717  0F23                     	;# 
  7718  0F24                     	;# 
  7719  0F25                     	;# 
  7720  0F26                     	;# 
  7721  0F27                     	;# 
  7722  0F28                     	;# 
  7723  0F29                     	;# 
  7724  0F2A                     	;# 
  7725  0F2B                     	;# 
  7726  0F2C                     	;# 
  7727  0F2D                     	;# 
  7728  0F2E                     	;# 
  7729  0F2F                     	;# 
  7730  0F30                     	;# 
  7731  0F31                     	;# 
  7732  0F32                     	;# 
  7733  0F38                     	;# 
  7734  0F39                     	;# 
  7735  0F3A                     	;# 
  7736  0F3B                     	;# 
  7737  0F3C                     	;# 
  7738  0F3D                     	;# 
  7739  0F3E                     	;# 
  7740  0F3F                     	;# 
  7741  0F40                     	;# 
  7742  0F41                     	;# 
  7743  0F43                     	;# 
  7744  0F44                     	;# 
  7745  0F45                     	;# 
  7746  0F46                     	;# 
  7747  0F47                     	;# 
  7748  0F48                     	;# 
  7749  0F49                     	;# 
  7750  0F4A                     	;# 
  7751  0F4B                     	;# 
  7752  0F4C                     	;# 
  7753  0F4E                     	;# 
  7754  0F4F                     	;# 
  7755  0F50                     	;# 
  7756  0F51                     	;# 
  7757  0F52                     	;# 
  7758  0F53                     	;# 
  7759  0F54                     	;# 
  7760  0F55                     	;# 
  7761  0F56                     	;# 
  7762  0F57                     	;# 
  7763  0F59                     	;# 
  7764  0F5A                     	;# 
  7765  0F5B                     	;# 
  7766  0F5C                     	;# 
  7767  0F5D                     	;# 
  7768  0F61                     	;# 
  7769  0F62                     	;# 
  7770  0F64                     	;# 
  7771  0F65                     	;# 
  7772  0F66                     	;# 
  7773  0F67                     	;# 
  7774  0F68                     	;# 
  7775  0F69                     	;# 
  7776  0F6A                     	;# 
  7777  0F6B                     	;# 
  7778  0F6C                     	;# 
  7779  0F6D                     	;# 
  7780  0FE4                     	;# 
  7781  0FE5                     	;# 
  7782  0FE6                     	;# 
  7783  0FE7                     	;# 
  7784  0FE8                     	;# 
  7785  0FE9                     	;# 
  7786  0FEA                     	;# 
  7787  0FEB                     	;# 
  7788  0FED                     	;# 
  7789  0FEE                     	;# 
  7790  0FEF                     	;# 
  7791  0000                     	;# 
  7792  0001                     	;# 
  7793  0002                     	;# 
  7794  0003                     	;# 
  7795  0004                     	;# 
  7796  0005                     	;# 
  7797  0006                     	;# 
  7798  0007                     	;# 
  7799  0008                     	;# 
  7800  0009                     	;# 
  7801  000A                     	;# 
  7802  000B                     	;# 
  7803  000C                     	;# 
  7804  000D                     	;# 
  7805  000E                     	;# 
  7806  000F                     	;# 
  7807  0010                     	;# 
  7808  0011                     	;# 
  7809  0012                     	;# 
  7810  0013                     	;# 
  7811  0014                     	;# 
  7812  0015                     	;# 
  7813  0016                     	;# 
  7814  0017                     	;# 
  7815  0018                     	;# 
  7816  0019                     	;# 
  7817  001A                     	;# 
  7818  001C                     	;# 
  7819  001C                     	;# 
  7820  001D                     	;# 
  7821  001D                     	;# 
  7822  001E                     	;# 
  7823  001F                     	;# 
  7824  008C                     	;# 
  7825  008C                     	;# 
  7826  008D                     	;# 
  7827  008E                     	;# 
  7828  008E                     	;# 
  7829  008F                     	;# 
  7830  0090                     	;# 
  7831  0090                     	;# 
  7832  0091                     	;# 
  7833  0093                     	;# 
  7834  0094                     	;# 
  7835  0095                     	;# 
  7836  0096                     	;# 
  7837  0097                     	;# 
  7838  0098                     	;# 
  7839  0099                     	;# 
  7840  009A                     	;# 
  7841  009B                     	;# 
  7842  009C                     	;# 
  7843  009D                     	;# 
  7844  009E                     	;# 
  7845  010C                     	;# 
  7846  010D                     	;# 
  7847  010E                     	;# 
  7848  010E                     	;# 
  7849  010F                     	;# 
  7850  0110                     	;# 
  7851  0110                     	;# 
  7852  0111                     	;# 
  7853  0112                     	;# 
  7854  0112                     	;# 
  7855  0113                     	;# 
  7856  0114                     	;# 
  7857  0114                     	;# 
  7858  0115                     	;# 
  7859  0116                     	;# 
  7860  0116                     	;# 
  7861  0117                     	;# 
  7862  0119                     	;# 
  7863  0119                     	;# 
  7864  0119                     	;# 
  7865  011A                     	;# 
  7866  011A                     	;# 
  7867  011A                     	;# 
  7868  011B                     	;# 
  7869  011B                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011B                     	;# 
  7873  011C                     	;# 
  7874  011C                     	;# 
  7875  011C                     	;# 
  7876  011D                     	;# 
  7877  011D                     	;# 
  7878  011D                     	;# 
  7879  011E                     	;# 
  7880  011E                     	;# 
  7881  011E                     	;# 
  7882  011F                     	;# 
  7883  011F                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  011F                     	;# 
  7887  018C                     	;# 
  7888  018D                     	;# 
  7889  018E                     	;# 
  7890  018F                     	;# 
  7891  0190                     	;# 
  7892  0191                     	;# 
  7893  0192                     	;# 
  7894  0196                     	;# 
  7895  0197                     	;# 
  7896  0198                     	;# 
  7897  0199                     	;# 
  7898  019A                     	;# 
  7899  019B                     	;# 
  7900  019C                     	;# 
  7901  020C                     	;# 
  7902  020C                     	;# 
  7903  020D                     	;# 
  7904  020E                     	;# 
  7905  020F                     	;# 
  7906  020F                     	;# 
  7907  0210                     	;# 
  7908  0210                     	;# 
  7909  0211                     	;# 
  7910  0211                     	;# 
  7911  0212                     	;# 
  7912  0212                     	;# 
  7913  0213                     	;# 
  7914  0214                     	;# 
  7915  0215                     	;# 
  7916  0215                     	;# 
  7917  0216                     	;# 
  7918  0216                     	;# 
  7919  0217                     	;# 
  7920  0217                     	;# 
  7921  0218                     	;# 
  7922  0218                     	;# 
  7923  0219                     	;# 
  7924  021A                     	;# 
  7925  021B                     	;# 
  7926  021B                     	;# 
  7927  021C                     	;# 
  7928  021C                     	;# 
  7929  021D                     	;# 
  7930  021D                     	;# 
  7931  021E                     	;# 
  7932  021F                     	;# 
  7933  028C                     	;# 
  7934  028C                     	;# 
  7935  028D                     	;# 
  7936  028D                     	;# 
  7937  028E                     	;# 
  7938  028F                     	;# 
  7939  0290                     	;# 
  7940  0290                     	;# 
  7941  0291                     	;# 
  7942  0292                     	;# 
  7943  0292                     	;# 
  7944  0293                     	;# 
  7945  0293                     	;# 
  7946  0294                     	;# 
  7947  0295                     	;# 
  7948  0296                     	;# 
  7949  0296                     	;# 
  7950  0297                     	;# 
  7951  0298                     	;# 
  7952  0298                     	;# 
  7953  0299                     	;# 
  7954  0299                     	;# 
  7955  029A                     	;# 
  7956  029B                     	;# 
  7957  029C                     	;# 
  7958  029C                     	;# 
  7959  029D                     	;# 
  7960  030C                     	;# 
  7961  030C                     	;# 
  7962  030D                     	;# 
  7963  030E                     	;# 
  7964  030F                     	;# 
  7965  0310                     	;# 
  7966  0310                     	;# 
  7967  0311                     	;# 
  7968  0312                     	;# 
  7969  0313                     	;# 
  7970  0314                     	;# 
  7971  0314                     	;# 
  7972  0315                     	;# 
  7973  0316                     	;# 
  7974  0317                     	;# 
  7975  0318                     	;# 
  7976  0318                     	;# 
  7977  0319                     	;# 
  7978  031A                     	;# 
  7979  031B                     	;# 
  7980  031C                     	;# 
  7981  031C                     	;# 
  7982  031D                     	;# 
  7983  031E                     	;# 
  7984  031F                     	;# 
  7985  038C                     	;# 
  7986  038C                     	;# 
  7987  038D                     	;# 
  7988  038E                     	;# 
  7989  0390                     	;# 
  7990  0390                     	;# 
  7991  0391                     	;# 
  7992  0392                     	;# 
  7993  040C                     	;# 
  7994  040D                     	;# 
  7995  040E                     	;# 
  7996  040F                     	;# 
  7997  0410                     	;# 
  7998  0411                     	;# 
  7999  0416                     	;# 
  8000  0416                     	;# 
  8001  0417                     	;# 
  8002  0418                     	;# 
  8003  0418                     	;# 
  8004  0419                     	;# 
  8005  041A                     	;# 
  8006  041A                     	;# 
  8007  041B                     	;# 
  8008  041C                     	;# 
  8009  041C                     	;# 
  8010  041D                     	;# 
  8011  041E                     	;# 
  8012  041F                     	;# 
  8013  048C                     	;# 
  8014  048C                     	;# 
  8015  048D                     	;# 
  8016  048E                     	;# 
  8017  048F                     	;# 
  8018  048F                     	;# 
  8019  0490                     	;# 
  8020  0491                     	;# 
  8021  0492                     	;# 
  8022  0492                     	;# 
  8023  0493                     	;# 
  8024  0494                     	;# 
  8025  0495                     	;# 
  8026  0495                     	;# 
  8027  0496                     	;# 
  8028  0497                     	;# 
  8029  0498                     	;# 
  8030  0499                     	;# 
  8031  049A                     	;# 
  8032  049B                     	;# 
  8033  049C                     	;# 
  8034  049D                     	;# 
  8035  050C                     	;# 
  8036  050C                     	;# 
  8037  050D                     	;# 
  8038  050E                     	;# 
  8039  050F                     	;# 
  8040  050F                     	;# 
  8041  0510                     	;# 
  8042  0511                     	;# 
  8043  0512                     	;# 
  8044  0512                     	;# 
  8045  0513                     	;# 
  8046  0514                     	;# 
  8047  0515                     	;# 
  8048  0515                     	;# 
  8049  0516                     	;# 
  8050  0517                     	;# 
  8051  0518                     	;# 
  8052  0519                     	;# 
  8053  051A                     	;# 
  8054  051B                     	;# 
  8055  051C                     	;# 
  8056  051D                     	;# 
  8057  058C                     	;# 
  8058  058C                     	;# 
  8059  058D                     	;# 
  8060  058E                     	;# 
  8061  058F                     	;# 
  8062  058F                     	;# 
  8063  0590                     	;# 
  8064  0591                     	;# 
  8065  0592                     	;# 
  8066  0593                     	;# 
  8067  060C                     	;# 
  8068  060D                     	;# 
  8069  060E                     	;# 
  8070  060F                     	;# 
  8071  0610                     	;# 
  8072  0611                     	;# 
  8073  0612                     	;# 
  8074  0613                     	;# 
  8075  0614                     	;# 
  8076  0616                     	;# 
  8077  0617                     	;# 
  8078  0618                     	;# 
  8079  0619                     	;# 
  8080  061A                     	;# 
  8081  061B                     	;# 
  8082  061C                     	;# 
  8083  061D                     	;# 
  8084  061E                     	;# 
  8085  068C                     	;# 
  8086  068D                     	;# 
  8087  068E                     	;# 
  8088  068F                     	;# 
  8089  0690                     	;# 
  8090  0691                     	;# 
  8091  0692                     	;# 
  8092  0693                     	;# 
  8093  0694                     	;# 
  8094  070C                     	;# 
  8095  070D                     	;# 
  8096  070E                     	;# 
  8097  070F                     	;# 
  8098  0710                     	;# 
  8099  0711                     	;# 
  8100  0712                     	;# 
  8101  0713                     	;# 
  8102  0714                     	;# 
  8103  0716                     	;# 
  8104  0717                     	;# 
  8105  0718                     	;# 
  8106  0719                     	;# 
  8107  071A                     	;# 
  8108  071B                     	;# 
  8109  071C                     	;# 
  8110  071D                     	;# 
  8111  071E                     	;# 
  8112  0796                     	;# 
  8113  0797                     	;# 
  8114  0798                     	;# 
  8115  0799                     	;# 
  8116  079A                     	;# 
  8117  079B                     	;# 
  8118  080C                     	;# 
  8119  080D                     	;# 
  8120  080E                     	;# 
  8121  080F                     	;# 
  8122  0810                     	;# 
  8123  0811                     	;# 
  8124  0812                     	;# 
  8125  0813                     	;# 
  8126  0814                     	;# 
  8127  081A                     	;# 
  8128  081B                     	;# 
  8129  081C                     	;# 
  8130  081D                     	;# 
  8131  081E                     	;# 
  8132  081F                     	;# 
  8133  088C                     	;# 
  8134  088D                     	;# 
  8135  088E                     	;# 
  8136  088F                     	;# 
  8137  0890                     	;# 
  8138  0891                     	;# 
  8139  0892                     	;# 
  8140  0893                     	;# 
  8141  0895                     	;# 
  8142  0896                     	;# 
  8143  0897                     	;# 
  8144  0898                     	;# 
  8145  0899                     	;# 
  8146  089A                     	;# 
  8147  089B                     	;# 
  8148  090C                     	;# 
  8149  090E                     	;# 
  8150  090F                     	;# 
  8151  091F                     	;# 
  8152  091F                     	;# 
  8153  098F                     	;# 
  8154  098F                     	;# 
  8155  0990                     	;# 
  8156  0991                     	;# 
  8157  0992                     	;# 
  8158  0993                     	;# 
  8159  0994                     	;# 
  8160  0995                     	;# 
  8161  0996                     	;# 
  8162  0997                     	;# 
  8163  0E0F                     	;# 
  8164  0E10                     	;# 
  8165  0E11                     	;# 
  8166  0E12                     	;# 
  8167  0E13                     	;# 
  8168  0E14                     	;# 
  8169  0E15                     	;# 
  8170  0E16                     	;# 
  8171  0E17                     	;# 
  8172  0E18                     	;# 
  8173  0E19                     	;# 
  8174  0E1A                     	;# 
  8175  0E1B                     	;# 
  8176  0E1C                     	;# 
  8177  0E1D                     	;# 
  8178  0E1E                     	;# 
  8179  0E1F                     	;# 
  8180  0E20                     	;# 
  8181  0E21                     	;# 
  8182  0E22                     	;# 
  8183  0E23                     	;# 
  8184  0E24                     	;# 
  8185  0E25                     	;# 
  8186  0E26                     	;# 
  8187  0E27                     	;# 
  8188  0E28                     	;# 
  8189  0E29                     	;# 
  8190  0E2A                     	;# 
  8191  0E2B                     	;# 
  8192  0E2C                     	;# 
  8193  0E2D                     	;# 
  8194  0E2E                     	;# 
  8195  0E2F                     	;# 
  8196  0E30                     	;# 
  8197  0E31                     	;# 
  8198  0E32                     	;# 
  8199  0E33                     	;# 
  8200  0E34                     	;# 
  8201  0E35                     	;# 
  8202  0E36                     	;# 
  8203  0E37                     	;# 
  8204  0E8F                     	;# 
  8205  0E90                     	;# 
  8206  0E91                     	;# 
  8207  0E92                     	;# 
  8208  0E93                     	;# 
  8209  0E94                     	;# 
  8210  0E95                     	;# 
  8211  0E96                     	;# 
  8212  0E97                     	;# 
  8213  0E9C                     	;# 
  8214  0E9D                     	;# 
  8215  0E9E                     	;# 
  8216  0EA1                     	;# 
  8217  0EA2                     	;# 
  8218  0EA3                     	;# 
  8219  0EA4                     	;# 
  8220  0EA5                     	;# 
  8221  0EA9                     	;# 
  8222  0EAA                     	;# 
  8223  0EAB                     	;# 
  8224  0EAC                     	;# 
  8225  0EB1                     	;# 
  8226  0EB2                     	;# 
  8227  0EB3                     	;# 
  8228  0EB8                     	;# 
  8229  0EB9                     	;# 
  8230  0EBA                     	;# 
  8231  0EBB                     	;# 
  8232  0EBC                     	;# 
  8233  0EBD                     	;# 
  8234  0EBE                     	;# 
  8235  0EC3                     	;# 
  8236  0EC5                     	;# 
  8237  0EC6                     	;# 
  8238  0EC7                     	;# 
  8239  0EC8                     	;# 
  8240  0EC9                     	;# 
  8241  0ECA                     	;# 
  8242  0ECB                     	;# 
  8243  0ECC                     	;# 
  8244  0F10                     	;# 
  8245  0F11                     	;# 
  8246  0F12                     	;# 
  8247  0F13                     	;# 
  8248  0F14                     	;# 
  8249  0F15                     	;# 
  8250  0F16                     	;# 
  8251  0F17                     	;# 
  8252  0F18                     	;# 
  8253  0F19                     	;# 
  8254  0F1A                     	;# 
  8255  0F1B                     	;# 
  8256  0F1C                     	;# 
  8257  0F1D                     	;# 
  8258  0F1E                     	;# 
  8259  0F1F                     	;# 
  8260  0F20                     	;# 
  8261  0F21                     	;# 
  8262  0F22                     	;# 
  8263  0F23                     	;# 
  8264  0F24                     	;# 
  8265  0F25                     	;# 
  8266  0F26                     	;# 
  8267  0F27                     	;# 
  8268  0F28                     	;# 
  8269  0F29                     	;# 
  8270  0F2A                     	;# 
  8271  0F2B                     	;# 
  8272  0F2C                     	;# 
  8273  0F2D                     	;# 
  8274  0F2E                     	;# 
  8275  0F2F                     	;# 
  8276  0F30                     	;# 
  8277  0F31                     	;# 
  8278  0F32                     	;# 
  8279  0F38                     	;# 
  8280  0F39                     	;# 
  8281  0F3A                     	;# 
  8282  0F3B                     	;# 
  8283  0F3C                     	;# 
  8284  0F3D                     	;# 
  8285  0F3E                     	;# 
  8286  0F3F                     	;# 
  8287  0F40                     	;# 
  8288  0F41                     	;# 
  8289  0F43                     	;# 
  8290  0F44                     	;# 
  8291  0F45                     	;# 
  8292  0F46                     	;# 
  8293  0F47                     	;# 
  8294  0F48                     	;# 
  8295  0F49                     	;# 
  8296  0F4A                     	;# 
  8297  0F4B                     	;# 
  8298  0F4C                     	;# 
  8299  0F4E                     	;# 
  8300  0F4F                     	;# 
  8301  0F50                     	;# 
  8302  0F51                     	;# 
  8303  0F52                     	;# 
  8304  0F53                     	;# 
  8305  0F54                     	;# 
  8306  0F55                     	;# 
  8307  0F56                     	;# 
  8308  0F57                     	;# 
  8309  0F59                     	;# 
  8310  0F5A                     	;# 
  8311  0F5B                     	;# 
  8312  0F5C                     	;# 
  8313  0F5D                     	;# 
  8314  0F61                     	;# 
  8315  0F62                     	;# 
  8316  0F64                     	;# 
  8317  0F65                     	;# 
  8318  0F66                     	;# 
  8319  0F67                     	;# 
  8320  0F68                     	;# 
  8321  0F69                     	;# 
  8322  0F6A                     	;# 
  8323  0F6B                     	;# 
  8324  0F6C                     	;# 
  8325  0F6D                     	;# 
  8326  0FE4                     	;# 
  8327  0FE5                     	;# 
  8328  0FE6                     	;# 
  8329  0FE7                     	;# 
  8330  0FE8                     	;# 
  8331  0FE9                     	;# 
  8332  0FEA                     	;# 
  8333  0FEB                     	;# 
  8334  0FED                     	;# 
  8335  0FEE                     	;# 
  8336  0FEF                     	;# 
  8337  0000                     	;# 
  8338  0001                     	;# 
  8339  0002                     	;# 
  8340  0003                     	;# 
  8341  0004                     	;# 
  8342  0005                     	;# 
  8343  0006                     	;# 
  8344  0007                     	;# 
  8345  0008                     	;# 
  8346  0009                     	;# 
  8347  000A                     	;# 
  8348  000B                     	;# 
  8349  000C                     	;# 
  8350  000D                     	;# 
  8351  000E                     	;# 
  8352  000F                     	;# 
  8353  0010                     	;# 
  8354  0011                     	;# 
  8355  0012                     	;# 
  8356  0013                     	;# 
  8357  0014                     	;# 
  8358  0015                     	;# 
  8359  0016                     	;# 
  8360  0017                     	;# 
  8361  0018                     	;# 
  8362  0019                     	;# 
  8363  001A                     	;# 
  8364  001C                     	;# 
  8365  001C                     	;# 
  8366  001D                     	;# 
  8367  001D                     	;# 
  8368  001E                     	;# 
  8369  001F                     	;# 
  8370  008C                     	;# 
  8371  008C                     	;# 
  8372  008D                     	;# 
  8373  008E                     	;# 
  8374  008E                     	;# 
  8375  008F                     	;# 
  8376  0090                     	;# 
  8377  0090                     	;# 
  8378  0091                     	;# 
  8379  0093                     	;# 
  8380  0094                     	;# 
  8381  0095                     	;# 
  8382  0096                     	;# 
  8383  0097                     	;# 
  8384  0098                     	;# 
  8385  0099                     	;# 
  8386  009A                     	;# 
  8387  009B                     	;# 
  8388  009C                     	;# 
  8389  009D                     	;# 
  8390  009E                     	;# 
  8391  010C                     	;# 
  8392  010D                     	;# 
  8393  010E                     	;# 
  8394  010E                     	;# 
  8395  010F                     	;# 
  8396  0110                     	;# 
  8397  0110                     	;# 
  8398  0111                     	;# 
  8399  0112                     	;# 
  8400  0112                     	;# 
  8401  0113                     	;# 
  8402  0114                     	;# 
  8403  0114                     	;# 
  8404  0115                     	;# 
  8405  0116                     	;# 
  8406  0116                     	;# 
  8407  0117                     	;# 
  8408  0119                     	;# 
  8409  0119                     	;# 
  8410  0119                     	;# 
  8411  011A                     	;# 
  8412  011A                     	;# 
  8413  011A                     	;# 
  8414  011B                     	;# 
  8415  011B                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011B                     	;# 
  8419  011C                     	;# 
  8420  011C                     	;# 
  8421  011C                     	;# 
  8422  011D                     	;# 
  8423  011D                     	;# 
  8424  011D                     	;# 
  8425  011E                     	;# 
  8426  011E                     	;# 
  8427  011E                     	;# 
  8428  011F                     	;# 
  8429  011F                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  011F                     	;# 
  8433  018C                     	;# 
  8434  018D                     	;# 
  8435  018E                     	;# 
  8436  018F                     	;# 
  8437  0190                     	;# 
  8438  0191                     	;# 
  8439  0192                     	;# 
  8440  0196                     	;# 
  8441  0197                     	;# 
  8442  0198                     	;# 
  8443  0199                     	;# 
  8444  019A                     	;# 
  8445  019B                     	;# 
  8446  019C                     	;# 
  8447  020C                     	;# 
  8448  020C                     	;# 
  8449  020D                     	;# 
  8450  020E                     	;# 
  8451  020F                     	;# 
  8452  020F                     	;# 
  8453  0210                     	;# 
  8454  0210                     	;# 
  8455  0211                     	;# 
  8456  0211                     	;# 
  8457  0212                     	;# 
  8458  0212                     	;# 
  8459  0213                     	;# 
  8460  0214                     	;# 
  8461  0215                     	;# 
  8462  0215                     	;# 
  8463  0216                     	;# 
  8464  0216                     	;# 
  8465  0217                     	;# 
  8466  0217                     	;# 
  8467  0218                     	;# 
  8468  0218                     	;# 
  8469  0219                     	;# 
  8470  021A                     	;# 
  8471  021B                     	;# 
  8472  021B                     	;# 
  8473  021C                     	;# 
  8474  021C                     	;# 
  8475  021D                     	;# 
  8476  021D                     	;# 
  8477  021E                     	;# 
  8478  021F                     	;# 
  8479  028C                     	;# 
  8480  028C                     	;# 
  8481  028D                     	;# 
  8482  028D                     	;# 
  8483  028E                     	;# 
  8484  028F                     	;# 
  8485  0290                     	;# 
  8486  0290                     	;# 
  8487  0291                     	;# 
  8488  0292                     	;# 
  8489  0292                     	;# 
  8490  0293                     	;# 
  8491  0293                     	;# 
  8492  0294                     	;# 
  8493  0295                     	;# 
  8494  0296                     	;# 
  8495  0296                     	;# 
  8496  0297                     	;# 
  8497  0298                     	;# 
  8498  0298                     	;# 
  8499  0299                     	;# 
  8500  0299                     	;# 
  8501  029A                     	;# 
  8502  029B                     	;# 
  8503  029C                     	;# 
  8504  029C                     	;# 
  8505  029D                     	;# 
  8506  030C                     	;# 
  8507  030C                     	;# 
  8508  030D                     	;# 
  8509  030E                     	;# 
  8510  030F                     	;# 
  8511  0310                     	;# 
  8512  0310                     	;# 
  8513  0311                     	;# 
  8514  0312                     	;# 
  8515  0313                     	;# 
  8516  0314                     	;# 
  8517  0314                     	;# 
  8518  0315                     	;# 
  8519  0316                     	;# 
  8520  0317                     	;# 
  8521  0318                     	;# 
  8522  0318                     	;# 
  8523  0319                     	;# 
  8524  031A                     	;# 
  8525  031B                     	;# 
  8526  031C                     	;# 
  8527  031C                     	;# 
  8528  031D                     	;# 
  8529  031E                     	;# 
  8530  031F                     	;# 
  8531  038C                     	;# 
  8532  038C                     	;# 
  8533  038D                     	;# 
  8534  038E                     	;# 
  8535  0390                     	;# 
  8536  0390                     	;# 
  8537  0391                     	;# 
  8538  0392                     	;# 
  8539  040C                     	;# 
  8540  040D                     	;# 
  8541  040E                     	;# 
  8542  040F                     	;# 
  8543  0410                     	;# 
  8544  0411                     	;# 
  8545  0416                     	;# 
  8546  0416                     	;# 
  8547  0417                     	;# 
  8548  0418                     	;# 
  8549  0418                     	;# 
  8550  0419                     	;# 
  8551  041A                     	;# 
  8552  041A                     	;# 
  8553  041B                     	;# 
  8554  041C                     	;# 
  8555  041C                     	;# 
  8556  041D                     	;# 
  8557  041E                     	;# 
  8558  041F                     	;# 
  8559  048C                     	;# 
  8560  048C                     	;# 
  8561  048D                     	;# 
  8562  048E                     	;# 
  8563  048F                     	;# 
  8564  048F                     	;# 
  8565  0490                     	;# 
  8566  0491                     	;# 
  8567  0492                     	;# 
  8568  0492                     	;# 
  8569  0493                     	;# 
  8570  0494                     	;# 
  8571  0495                     	;# 
  8572  0495                     	;# 
  8573  0496                     	;# 
  8574  0497                     	;# 
  8575  0498                     	;# 
  8576  0499                     	;# 
  8577  049A                     	;# 
  8578  049B                     	;# 
  8579  049C                     	;# 
  8580  049D                     	;# 
  8581  050C                     	;# 
  8582  050C                     	;# 
  8583  050D                     	;# 
  8584  050E                     	;# 
  8585  050F                     	;# 
  8586  050F                     	;# 
  8587  0510                     	;# 
  8588  0511                     	;# 
  8589  0512                     	;# 
  8590  0512                     	;# 
  8591  0513                     	;# 
  8592  0514                     	;# 
  8593  0515                     	;# 
  8594  0515                     	;# 
  8595  0516                     	;# 
  8596  0517                     	;# 
  8597  0518                     	;# 
  8598  0519                     	;# 
  8599  051A                     	;# 
  8600  051B                     	;# 
  8601  051C                     	;# 
  8602  051D                     	;# 
  8603  058C                     	;# 
  8604  058C                     	;# 
  8605  058D                     	;# 
  8606  058E                     	;# 
  8607  058F                     	;# 
  8608  058F                     	;# 
  8609  0590                     	;# 
  8610  0591                     	;# 
  8611  0592                     	;# 
  8612  0593                     	;# 
  8613  060C                     	;# 
  8614  060D                     	;# 
  8615  060E                     	;# 
  8616  060F                     	;# 
  8617  0610                     	;# 
  8618  0611                     	;# 
  8619  0612                     	;# 
  8620  0613                     	;# 
  8621  0614                     	;# 
  8622  0616                     	;# 
  8623  0617                     	;# 
  8624  0618                     	;# 
  8625  0619                     	;# 
  8626  061A                     	;# 
  8627  061B                     	;# 
  8628  061C                     	;# 
  8629  061D                     	;# 
  8630  061E                     	;# 
  8631  068C                     	;# 
  8632  068D                     	;# 
  8633  068E                     	;# 
  8634  068F                     	;# 
  8635  0690                     	;# 
  8636  0691                     	;# 
  8637  0692                     	;# 
  8638  0693                     	;# 
  8639  0694                     	;# 
  8640  070C                     	;# 
  8641  070D                     	;# 
  8642  070E                     	;# 
  8643  070F                     	;# 
  8644  0710                     	;# 
  8645  0711                     	;# 
  8646  0712                     	;# 
  8647  0713                     	;# 
  8648  0714                     	;# 
  8649  0716                     	;# 
  8650  0717                     	;# 
  8651  0718                     	;# 
  8652  0719                     	;# 
  8653  071A                     	;# 
  8654  071B                     	;# 
  8655  071C                     	;# 
  8656  071D                     	;# 
  8657  071E                     	;# 
  8658  0796                     	;# 
  8659  0797                     	;# 
  8660  0798                     	;# 
  8661  0799                     	;# 
  8662  079A                     	;# 
  8663  079B                     	;# 
  8664  080C                     	;# 
  8665  080D                     	;# 
  8666  080E                     	;# 
  8667  080F                     	;# 
  8668  0810                     	;# 
  8669  0811                     	;# 
  8670  0812                     	;# 
  8671  0813                     	;# 
  8672  0814                     	;# 
  8673  081A                     	;# 
  8674  081B                     	;# 
  8675  081C                     	;# 
  8676  081D                     	;# 
  8677  081E                     	;# 
  8678  081F                     	;# 
  8679  088C                     	;# 
  8680  088D                     	;# 
  8681  088E                     	;# 
  8682  088F                     	;# 
  8683  0890                     	;# 
  8684  0891                     	;# 
  8685  0892                     	;# 
  8686  0893                     	;# 
  8687  0895                     	;# 
  8688  0896                     	;# 
  8689  0897                     	;# 
  8690  0898                     	;# 
  8691  0899                     	;# 
  8692  089A                     	;# 
  8693  089B                     	;# 
  8694  090C                     	;# 
  8695  090E                     	;# 
  8696  090F                     	;# 
  8697  091F                     	;# 
  8698  091F                     	;# 
  8699  098F                     	;# 
  8700  098F                     	;# 
  8701  0990                     	;# 
  8702  0991                     	;# 
  8703  0992                     	;# 
  8704  0993                     	;# 
  8705  0994                     	;# 
  8706  0995                     	;# 
  8707  0996                     	;# 
  8708  0997                     	;# 
  8709  0E0F                     	;# 
  8710  0E10                     	;# 
  8711  0E11                     	;# 
  8712  0E12                     	;# 
  8713  0E13                     	;# 
  8714  0E14                     	;# 
  8715  0E15                     	;# 
  8716  0E16                     	;# 
  8717  0E17                     	;# 
  8718  0E18                     	;# 
  8719  0E19                     	;# 
  8720  0E1A                     	;# 
  8721  0E1B                     	;# 
  8722  0E1C                     	;# 
  8723  0E1D                     	;# 
  8724  0E1E                     	;# 
  8725  0E1F                     	;# 
  8726  0E20                     	;# 
  8727  0E21                     	;# 
  8728  0E22                     	;# 
  8729  0E23                     	;# 
  8730  0E24                     	;# 
  8731  0E25                     	;# 
  8732  0E26                     	;# 
  8733  0E27                     	;# 
  8734  0E28                     	;# 
  8735  0E29                     	;# 
  8736  0E2A                     	;# 
  8737  0E2B                     	;# 
  8738  0E2C                     	;# 
  8739  0E2D                     	;# 
  8740  0E2E                     	;# 
  8741  0E2F                     	;# 
  8742  0E30                     	;# 
  8743  0E31                     	;# 
  8744  0E32                     	;# 
  8745  0E33                     	;# 
  8746  0E34                     	;# 
  8747  0E35                     	;# 
  8748  0E36                     	;# 
  8749  0E37                     	;# 
  8750  0E8F                     	;# 
  8751  0E90                     	;# 
  8752  0E91                     	;# 
  8753  0E92                     	;# 
  8754  0E93                     	;# 
  8755  0E94                     	;# 
  8756  0E95                     	;# 
  8757  0E96                     	;# 
  8758  0E97                     	;# 
  8759  0E9C                     	;# 
  8760  0E9D                     	;# 
  8761  0E9E                     	;# 
  8762  0EA1                     	;# 
  8763  0EA2                     	;# 
  8764  0EA3                     	;# 
  8765  0EA4                     	;# 
  8766  0EA5                     	;# 
  8767  0EA9                     	;# 
  8768  0EAA                     	;# 
  8769  0EAB                     	;# 
  8770  0EAC                     	;# 
  8771  0EB1                     	;# 
  8772  0EB2                     	;# 
  8773  0EB3                     	;# 
  8774  0EB8                     	;# 
  8775  0EB9                     	;# 
  8776  0EBA                     	;# 
  8777  0EBB                     	;# 
  8778  0EBC                     	;# 
  8779  0EBD                     	;# 
  8780  0EBE                     	;# 
  8781  0EC3                     	;# 
  8782  0EC5                     	;# 
  8783  0EC6                     	;# 
  8784  0EC7                     	;# 
  8785  0EC8                     	;# 
  8786  0EC9                     	;# 
  8787  0ECA                     	;# 
  8788  0ECB                     	;# 
  8789  0ECC                     	;# 
  8790  0F10                     	;# 
  8791  0F11                     	;# 
  8792  0F12                     	;# 
  8793  0F13                     	;# 
  8794  0F14                     	;# 
  8795  0F15                     	;# 
  8796  0F16                     	;# 
  8797  0F17                     	;# 
  8798  0F18                     	;# 
  8799  0F19                     	;# 
  8800  0F1A                     	;# 
  8801  0F1B                     	;# 
  8802  0F1C                     	;# 
  8803  0F1D                     	;# 
  8804  0F1E                     	;# 
  8805  0F1F                     	;# 
  8806  0F20                     	;# 
  8807  0F21                     	;# 
  8808  0F22                     	;# 
  8809  0F23                     	;# 
  8810  0F24                     	;# 
  8811  0F25                     	;# 
  8812  0F26                     	;# 
  8813  0F27                     	;# 
  8814  0F28                     	;# 
  8815  0F29                     	;# 
  8816  0F2A                     	;# 
  8817  0F2B                     	;# 
  8818  0F2C                     	;# 
  8819  0F2D                     	;# 
  8820  0F2E                     	;# 
  8821  0F2F                     	;# 
  8822  0F30                     	;# 
  8823  0F31                     	;# 
  8824  0F32                     	;# 
  8825  0F38                     	;# 
  8826  0F39                     	;# 
  8827  0F3A                     	;# 
  8828  0F3B                     	;# 
  8829  0F3C                     	;# 
  8830  0F3D                     	;# 
  8831  0F3E                     	;# 
  8832  0F3F                     	;# 
  8833  0F40                     	;# 
  8834  0F41                     	;# 
  8835  0F43                     	;# 
  8836  0F44                     	;# 
  8837  0F45                     	;# 
  8838  0F46                     	;# 
  8839  0F47                     	;# 
  8840  0F48                     	;# 
  8841  0F49                     	;# 
  8842  0F4A                     	;# 
  8843  0F4B                     	;# 
  8844  0F4C                     	;# 
  8845  0F4E                     	;# 
  8846  0F4F                     	;# 
  8847  0F50                     	;# 
  8848  0F51                     	;# 
  8849  0F52                     	;# 
  8850  0F53                     	;# 
  8851  0F54                     	;# 
  8852  0F55                     	;# 
  8853  0F56                     	;# 
  8854  0F57                     	;# 
  8855  0F59                     	;# 
  8856  0F5A                     	;# 
  8857  0F5B                     	;# 
  8858  0F5C                     	;# 
  8859  0F5D                     	;# 
  8860  0F61                     	;# 
  8861  0F62                     	;# 
  8862  0F64                     	;# 
  8863  0F65                     	;# 
  8864  0F66                     	;# 
  8865  0F67                     	;# 
  8866  0F68                     	;# 
  8867  0F69                     	;# 
  8868  0F6A                     	;# 
  8869  0F6B                     	;# 
  8870  0F6C                     	;# 
  8871  0F6D                     	;# 
  8872  0FE4                     	;# 
  8873  0FE5                     	;# 
  8874  0FE6                     	;# 
  8875  0FE7                     	;# 
  8876  0FE8                     	;# 
  8877  0FE9                     	;# 
  8878  0FEA                     	;# 
  8879  0FEB                     	;# 
  8880  0FED                     	;# 
  8881  0FEE                     	;# 
  8882  0FEF                     	;# 
  8883                           
  8884                           	psect	idataBANK0
  8885  0F17                     __pidataBANK0:	
  8886                           
  8887                           ;initializer for _tala
  8888  0F17  3403               	retlw	3
  8889                           
  8890                           ;initializer for _pmon
  8891  0F18  3405               	retlw	5
  8892                           
  8893                           ;initializer for _nreg
  8894  0F19  341E               	retlw	30
  8895                           
  8896                           	psect	stringtext1
  8897  0587                     __pstringtext1:	
  8898  0587                     _fsmStateTable:	
  8899  0587  342B               	retlw	low _do_I2C_IDLE
  8900  0588  340F               	retlw	high _do_I2C_IDLE
  8901  0589  34AD               	retlw	low _do_I2C_SEND_ADR_READ
  8902  058A  340F               	retlw	high _do_I2C_SEND_ADR_READ
  8903  058B  3495               	retlw	low _do_I2C_SEND_ADR_WRITE
  8904  058C  340F               	retlw	high _do_I2C_SEND_ADR_WRITE
  8905  058D  349A               	retlw	low _do_I2C_TX
  8906  058E  3402               	retlw	high _do_I2C_TX
  8907  058F  34EE               	retlw	low _do_I2C_RX
  8908  0590  3402               	retlw	high _do_I2C_RX
  8909  0591  3477               	retlw	low _do_I2C_RCEN
  8910  0592  340F               	retlw	high _do_I2C_RCEN
  8911  0593  3459               	retlw	low _do_I2C_TX_EMPTY
  8912  0594  3404               	retlw	high _do_I2C_TX_EMPTY
  8913  0595  3430               	retlw	low _do_I2C_SEND_RESTART_READ
  8914  0596  340F               	retlw	high _do_I2C_SEND_RESTART_READ
  8915  0597  3435               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8916  0598  340F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8917  0599  343A               	retlw	low _do_I2C_SEND_RESTART
  8918  059A  340F               	retlw	high _do_I2C_SEND_RESTART
  8919  059B  343F               	retlw	low _do_I2C_SEND_STOP
  8920  059C  340F               	retlw	high _do_I2C_SEND_STOP
  8921  059D  3444               	retlw	low _do_I2C_DO_ACK
  8922  059E  340F               	retlw	high _do_I2C_DO_ACK
  8923  059F  3449               	retlw	low _do_I2C_DO_NACK_STOP
  8924  05A0  340F               	retlw	high _do_I2C_DO_NACK_STOP
  8925  05A1  344E               	retlw	low _do_I2C_DO_NACK_RESTART
  8926  05A2  340F               	retlw	high _do_I2C_DO_NACK_RESTART
  8927  05A3  348D               	retlw	low _do_I2C_RESET
  8928  05A4  340F               	retlw	high _do_I2C_RESET
  8929  05A5  34B9               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8930  05A6  3404               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8931  05A7                     __end_of_fsmStateTable:	
  8932                           
  8933                           	psect	nvBANK0
  8934  004A                     __pnvBANK0:	
  8935  004A                     _TMR0_InterruptHandler:	
  8936  004A                     	ds	2
  8937  004C                     _TMR2_InterruptHandler:	
  8938  004C                     	ds	2
  8939  004E                     _TMR1_InterruptHandler:	
  8940  004E                     	ds	2
  8941  0050                     _timer1ReloadVal:	
  8942  0050                     	ds	2
  8943  0052                     _INT_InterruptHandler:	
  8944  0052                     	ds	2
  8945  001E                     _T0CON0bits	set	30
  8946  001E                     _T0CON0	set	30
  8947  001C                     _TMR0L	set	28
  8948  001D                     _TMR0H	set	29
  8949  001F                     _T0CON1	set	31
  8950  0013                     _TRISCbits	set	19
  8951  000E                     _PORTCbits	set	14
  8952  000D                     _PORTBbits	set	13
  8953  0016                     _LATAbits	set	22
  8954  0014                     _TRISD	set	20
  8955  0013                     _TRISC	set	19
  8956  0012                     _TRISB	set	18
  8957  0011                     _TRISA	set	17
  8958  0015                     _TRISE	set	21
  8959  0018                     _LATC	set	24
  8960  0017                     _LATB	set	23
  8961  0016                     _LATA	set	22
  8962  0019                     _LATD	set	25
  8963  001A                     _LATE	set	26
  8964  000B                     _INTCONbits	set	11
  8965  0094                     _ADCON1bits	set	148
  8966  008E                     _ADPREVL	set	142
  8967  008F                     _ADPREVH	set	143
  8968  0097                     _ADSTATbits	set	151
  8969  0090                     _ADACCL	set	144
  8970  0091                     _ADACCH	set	145
  8971  0095                     _ADCON2bits	set	149
  8972  009C                     _ADPRE	set	156
  8973  0096                     _ADCON3bits	set	150
  8974  008C                     _ADRESL	set	140
  8975  008D                     _ADRESH	set	141
  8976  0093                     _ADCON0bits	set	147
  8977  009D                     _ADACQ	set	157
  8978  0093                     _ADCON0	set	147
  8979  0098                     _ADCLK	set	152
  8980  0099                     _ADACT	set	153
  8981  009A                     _ADREF	set	154
  8982  0097                     _ADSTAT	set	151
  8983  0096                     _ADCON3	set	150
  8984  0095                     _ADCON2	set	149
  8985  0094                     _ADCON1	set	148
  8986  009B                     _ADCAP	set	155
  8987  009E                     _ADPCH	set	158
  8988  0116                     _ADERRL	set	278
  8989  0117                     _ADERRH	set	279
  8990  0114                     _ADFLTRL	set	276
  8991  0115                     _ADFLTRH	set	277
  8992  010C                     _ADCNT	set	268
  8993  010D                     _ADRPT	set	269
  8994  0113                     _ADSTPTH	set	275
  8995  0112                     _ADSTPTL	set	274
  8996  0111                     _ADUTHH	set	273
  8997  0110                     _ADUTHL	set	272
  8998  010F                     _ADLTHH	set	271
  8999  010E                     _ADLTHL	set	270
  9000  018F                     _SSP1STATbits	set	399
  9001  018E                     _SSP1MSK	set	398
  9002  018C                     _SSP1BUF	set	396
  9003  0191                     _SSP1CON2bits	set	401
  9004  018D                     _SSP1ADD	set	397
  9005  0191                     _SSP1CON2	set	401
  9006  0190                     _SSP1CON1	set	400
  9007  018F                     _SSP1STAT	set	399
  9008  0190                     _SSP1CON1bits	set	400
  9009  021F                     _CCPTMRS1bits	set	543
  9010  020F                     _T1GCONbits	set	527
  9011  020E                     _T1CONbits	set	526
  9012  020E                     _T1CON	set	526
  9013  020C                     _TMR1L	set	524
  9014  020D                     _TMR1H	set	525
  9015  0211                     _T1CLK	set	529
  9016  0210                     _T1GATE	set	528
  9017  020F                     _T1GCON	set	527
  9018  028D                     _PR2	set	653
  9019  028C                     _TMR2	set	652
  9020  028E                     _T2CONbits	set	654
  9021  0291                     _T2RSTbits	set	657
  9022  028F                     _T2HLTbits	set	655
  9023  028E                     _T2CON	set	654
  9024  028C                     _T2TMR	set	652
  9025  028D                     _T2PR	set	653
  9026  0291                     _T2RST	set	657
  9027  028F                     _T2HLT	set	655
  9028  0290                     _T2CLKCON	set	656
  9029  038C                     _PWM6DCL	set	908
  9030  038D                     _PWM6DCH	set	909
  9031  038E                     _PWM6CON	set	910
  9032  0710                     _PIR4bits	set	1808
  9033  071A                     _PIE4bits	set	1818
  9034  070F                     _PIR3bits	set	1807
  9035  0719                     _PIE3bits	set	1817
  9036  0716                     _PIE0bits	set	1814
  9037  070C                     _PIR0bits	set	1804
  9038  079B                     _PMD5	set	1947
  9039  079A                     _PMD4	set	1946
  9040  0799                     _PMD3	set	1945
  9041  0798                     _PMD2	set	1944
  9042  0797                     _PMD1	set	1943
  9043  0796                     _PMD0	set	1942
  9044  081F                     _NVMCON2	set	2079
  9045  081C                     _NVMDATL	set	2076
  9046  081D                     _NVMDATH	set	2077
  9047  081E                     _NVMCON1bits	set	2078
  9048  081B                     _NVMADRH	set	2075
  9049  081A                     _NVMADRL	set	2074
  9050  0892                     _OSCTUNE	set	2194
  9051  0893                     _OSCFRQ	set	2195
  9052  0891                     _OSCEN	set	2193
  9053  088F                     _OSCCON3	set	2191
  9054  088D                     _OSCCON1	set	2189
  9055  0EC6                     _SSP1DATPPS	set	3782
  9056  0EC5                     _SSP1CLKPPS	set	3781
  9057  0E90                     _INTPPS	set	3728
  9058  0F44                     _WPUBbits	set	3908
  9059  0F16                     _RA6PPS	set	3862
  9060  0F24                     _RC4PPS	set	3876
  9061  0F23                     _RC3PPS	set	3875
  9062  0F68                     _INLVLE	set	3944
  9063  0F5D                     _INLVLD	set	3933
  9064  0F52                     _INLVLC	set	3922
  9065  0F47                     _INLVLB	set	3911
  9066  0F3C                     _INLVLA	set	3900
  9067  0F67                     _SLRCONE	set	3943
  9068  0F5C                     _SLRCOND	set	3932
  9069  0F51                     _SLRCONC	set	3921
  9070  0F46                     _SLRCONB	set	3910
  9071  0F3B                     _SLRCONA	set	3899
  9072  0F5B                     _ODCOND	set	3931
  9073  0F50                     _ODCONC	set	3920
  9074  0F45                     _ODCONB	set	3909
  9075  0F3A                     _ODCONA	set	3898
  9076  0F66                     _ODCONE	set	3942
  9077  0F4F                     _WPUC	set	3919
  9078  0F39                     _WPUA	set	3897
  9079  0F44                     _WPUB	set	3908
  9080  0F65                     _WPUE	set	3941
  9081  0F5A                     _WPUD	set	3930
  9082  0F38                     _ANSELA	set	3896
  9083  0F64                     _ANSELE	set	3940
  9084  0F43                     _ANSELB	set	3907
  9085  0F4E                     _ANSELC	set	3918
  9086  0F59                     _ANSELD	set	3929
  9087  7A7C                     _WPUC4	set	31356
  9088  7A7B                     _WPUC3	set	31355
  9089                           
  9090                           ; #config settings
  9091  0000                     
  9092                           	psect	cinit
  9093  005D                     start_initialization:	
  9094  005D                     __initialization:	
  9095                           
  9096                           ; Initialize objects allocated to BANK0
  9097  005D  318F  2717  3180   	fcall	__pidataBANK0	;fetch initializer
  9098  0060  00D4               	movwf	__pdataBANK0& (0+127)
  9099  0061  318F  2718  3180   	fcall	__pidataBANK0+1	;fetch initializer
  9100  0064  00D5               	movwf	(__pdataBANK0+1)& (0+127)
  9101  0065  318F  2719  3180   	fcall	__pidataBANK0+2	;fetch initializer
  9102  0068  00D6               	movwf	(__pdataBANK0+2)& (0+127)
  9103                           
  9104                           ; Clear objects allocated to COMMON
  9105  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9106                           
  9107                           ; Clear objects allocated to BANK0
  9108  006A  3020               	movlw	low __pbssBANK0
  9109  006B  0084               	movwf	4
  9110  006C  3000               	movlw	high __pbssBANK0
  9111  006D  0085               	movwf	5
  9112  006E  3018               	movlw	24
  9113  006F  318F  2771  3180   	fcall	clear_ram0
  9114                           
  9115                           ; Clear objects allocated to BANK1
  9116  0072  30A0               	movlw	low __pbssBANK1
  9117  0073  0084               	movwf	4
  9118  0074  3000               	movlw	high __pbssBANK1
  9119  0075  0085               	movwf	5
  9120  0076  301D               	movlw	29
  9121  0077  318F  2771  3180   	fcall	clear_ram0
  9122  007A                     end_of_initialization:	
  9123                           ;End of C runtime variable initialization code
  9124                           
  9125  007A                     __end_of__initialization:	
  9126  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9127  007B  0020               	movlb	0
  9128  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9129                           
  9130                           	psect	bssCOMMON
  9131  007D                     __pbssCOMMON:	
  9132  007D                     _clkms:	
  9133  007D                     	ds	1
  9134                           
  9135                           	psect	bssBANK0
  9136  0020                     __pbssBANK0:	
  9137  0020                     _lum_threshold:	
  9138  0020                     	ds	2
  9139  0022                     _level_bin:	
  9140  0022                     	ds	2
  9141  0024                     _duty_cycle:	
  9142  0024                     	ds	2
  9143  0026                     _convertedValue:	
  9144  0026                     	ds	2
  9145  0028                     _value:	
  9146  0028                     	ds	2
  9147  002A                     _i2c1_driver_i2cISR:	
  9148  002A                     	ds	2
  9149  002C                     _i2c1_driver_busCollisionISR:	
  9150  002C                     	ds	2
  9151  002E                     _nreg_pt:	
  9152  002E                     	ds	1
  9153  002F                     _alarm:	
  9154  002F                     	ds	1
  9155  0030                     _config_mode:	
  9156  0030                     	ds	1
  9157  0031                     _set_mode:	
  9158  0031                     	ds	1
  9159  0032                     _bounce_time:	
  9160  0032                     	ds	1
  9161  0033                     _last_ms2:	
  9162  0033                     	ds	1
  9163  0034                     _last_ms:	
  9164  0034                     	ds	1
  9165  0035                     _seg:	
  9166  0035                     	ds	1
  9167  0036                     _clkm:	
  9168  0036                     	ds	1
  9169  0037                     _clkh:	
  9170  0037                     	ds	1
  9171                           
  9172                           	psect	dataBANK0
  9173  0054                     __pdataBANK0:	
  9174  0054                     _tala:	
  9175  0054                     	ds	1
  9176  0055                     _pmon:	
  9177  0055                     	ds	1
  9178  0056                     _nreg:	
  9179  0056                     	ds	1
  9180                           
  9181                           	psect	bssBANK1
  9182  00A0                     __pbssBANK1:	
  9183  00A0                     _i2c_status:	
  9184  00A0                     	ds	29
  9185                           
  9186                           	psect	clrtext
  9187  0F71                     clear_ram0:	
  9188                           ;	Called with FSR0 containing the base address, and
  9189                           ;	WREG with the size to clear
  9190                           
  9191  0F71  0064               	clrwdt	;clear the watchdog before getting into this loop
  9192  0F72                     clrloop0:	
  9193  0F72  0180               	clrf	0	;clear RAM location pointed to by FSR
  9194  0F73  3101               	addfsr 0,1
  9195  0F74  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9196  0F75  2F72               	goto	clrloop0	;have we reached the end yet?
  9197  0F76  3400               	retlw	0	;all done for this memory range, return
  9198                           
  9199                           	psect	cstackCOMMON
  9200  0070                     __pcstackCOMMON:	
  9201  0070                     ?_i2c1_driver_isNACK:	
  9202  0070                     ?_setCallBack:	
  9203                           ; 1 bit 
  9204                           
  9205  0070                     ?_mssp1_clearIRQ:	
  9206                           ; 1 bytes @ 0x0
  9207                           
  9208  0070                     ??_mssp1_clearIRQ:	
  9209                           ; 1 bytes @ 0x0
  9210                           
  9211  0070                     ?_i2c_busCollisionISR:	
  9212                           ; 1 bytes @ 0x0
  9213                           
  9214  0070                     ??_i2c_busCollisionISR:	
  9215                           ; 1 bytes @ 0x0
  9216                           
  9217  0070                     ?_i2c_ISR:	
  9218                           ; 1 bytes @ 0x0
  9219                           
  9220  0070                     ?_i2c1_driver_resetBus:	
  9221                           ; 1 bytes @ 0x0
  9222                           
  9223  0070                     ??_i2c1_driver_resetBus:	
  9224                           ; 1 bytes @ 0x0
  9225                           
  9226  0070                     ?_i2c1_driver_restart:	
  9227                           ; 1 bytes @ 0x0
  9228                           
  9229  0070                     ??_i2c1_driver_restart:	
  9230                           ; 1 bytes @ 0x0
  9231                           
  9232  0070                     ?_i2c1_driver_stop:	
  9233                           ; 1 bytes @ 0x0
  9234                           
  9235  0070                     ??_i2c1_driver_stop:	
  9236                           ; 1 bytes @ 0x0
  9237                           
  9238  0070                     ?_i2c1_driver_TXData:	
  9239                           ; 1 bytes @ 0x0
  9240                           
  9241  0070                     ??_i2c1_driver_TXData:	
  9242                           ; 1 bytes @ 0x0
  9243                           
  9244  0070                     ?_i2c1_driver_startRX:	
  9245                           ; 1 bytes @ 0x0
  9246                           
  9247  0070                     ??_i2c1_driver_startRX:	
  9248                           ; 1 bytes @ 0x0
  9249                           
  9250  0070                     ?_i2c1_driver_sendACK:	
  9251                           ; 1 bytes @ 0x0
  9252                           
  9253  0070                     ??_i2c1_driver_sendACK:	
  9254                           ; 1 bytes @ 0x0
  9255                           
  9256  0070                     ?_i2c1_driver_sendNACK:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0070                     ??_i2c1_driver_sendNACK:	
  9260                           ; 1 bytes @ 0x0
  9261                           
  9262  0070                     ??_i2c1_driver_isNACK:	
  9263                           ; 1 bytes @ 0x0
  9264                           
  9265  0070                     ?_i2c1_driver_getRXData:	
  9266                           ; 1 bytes @ 0x0
  9267                           
  9268  0070                     ??_i2c1_driver_getRXData:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0070                     ?_mssp1_setIRQ:	
  9272                           ; 1 bytes @ 0x0
  9273                           
  9274  0070                     ??_mssp1_setIRQ:	
  9275                           ; 1 bytes @ 0x0
  9276                           
  9277  0070                     ?_i2c1_driver_clearBusCollision:	
  9278                           ; 1 bytes @ 0x0
  9279                           
  9280  0070                     ??_i2c1_driver_clearBusCollision:	
  9281                           ; 1 bytes @ 0x0
  9282                           
  9283  0070                     ?_INT_CallBack:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0070                     ?_TMR0_ISR:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0070                     ?_TMR1_ISR:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0070                     ?_TMR2_ISR:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0070                     ?_PMD_Initialize:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0070                     ?_PIN_MANAGER_Initialize:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0070                     ?_OSCILLATOR_Initialize:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0070                     ?_PWM6_Initialize:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0070                     ?_ADCC_Initialize:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0070                     ?_TMR2_Initialize:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0070                     ?_TMR1_Initialize:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0070                     ?_TMR0_Initialize:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0070                     ?_TMR1_DefaultInterruptHandler:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0070                     ??_TMR1_DefaultInterruptHandler:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0070                     ?_TMR2_DefaultInterruptHandler:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0070                     ??_TMR2_DefaultInterruptHandler:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0070                     ?_checkDebounceSW1:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0070                     ?_TMR0_StopTimer:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0070                     ??_TMR0_StopTimer:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0070                     ?_handler_clock_hms:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0070                     ??_handler_clock_hms:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0070                     ?_handler_clock_ms:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0070                     ??_handler_clock_ms:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0070                     ?_recoverData:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0070                     ?_TMR0_StartTimer:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0070                     ?_config_routine:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0070                     ?_mod3_LED:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0070                     ?_all_LED:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0070                     ?_mod1_LED:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0070                     ?_mod2_LED:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0070                     ?_mod4_LED:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0070                     ?_checkDebounceSW2:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0070                     ?_cksum:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0070                     ?_reset_recv:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0070                     ?_cksum_w:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0070                     ?_TMR0_DefaultInterruptHandler:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0070                     ??_TMR0_DefaultInterruptHandler:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0070                     ?_i2c_setBuffer:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0070                     ?_do_I2C_RESET:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0070                     ??_do_I2C_RESET:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0070                     ?_do_I2C_IDLE:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0070                     ??_do_I2C_IDLE:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0070                     ?_do_I2C_SEND_RESTART:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0070                     ??_do_I2C_SEND_RESTART:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0070                     ?_do_I2C_SEND_STOP:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0070                     ??_do_I2C_SEND_STOP:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0070                     ?_do_I2C_SEND_ADR_READ:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0070                     ??_do_I2C_SEND_ADR_READ:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0070                     ?_do_I2C_RCEN:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0070                     ??_do_I2C_RCEN:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448  0070                     ?_do_I2C_DO_ACK:	
  9449                           ; 1 bytes @ 0x0
  9450                           
  9451  0070                     ??_do_I2C_DO_ACK:	
  9452                           ; 1 bytes @ 0x0
  9453                           
  9454  0070                     ?_do_I2C_DO_NACK_STOP:	
  9455                           ; 1 bytes @ 0x0
  9456                           
  9457  0070                     ??_do_I2C_DO_NACK_STOP:	
  9458                           ; 1 bytes @ 0x0
  9459                           
  9460  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9461                           ; 1 bytes @ 0x0
  9462                           
  9463  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9464                           ; 1 bytes @ 0x0
  9465                           
  9466  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0070                     ?_do_I2C_TX:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0070                     ?_do_I2C_RX:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0070                     ?_do_I2C_TX_EMPTY:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0070                     ?_INT_ISR:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0070                     ?_INT_DefaultInterruptHandler:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0070                     ??_INT_DefaultInterruptHandler:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0070                     ?_EXT_INT_Initialize:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0070                     ?_INTERRUPT_InterruptManager:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0070                     ?_SYSTEM_Initialize:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0070                     ?_ADCC_StartConversion:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0070                     ?_ADCC_IsConversionDone:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0070                     ?_TMR1_WriteTimer:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0070                     ?_sw1_EXT:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0070                     ?_ISR_3s:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0070                     ?_main:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0070                     ?i1_PWM6_LoadDutyValue:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0070                     ?i1_checkDebounceSW1:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0070                     ??i1_checkDebounceSW1:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0070                     i2c1_driver_TXData@d:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0070                     i2c_setBuffer@bufferSize:	
  9527                           ; 1 bytes @ 0x0
  9528                           
  9529  0070                     setCallBack@cb:	
  9530                           ; 2 bytes @ 0x0
  9531                           
  9532  0070                     TMR1_WriteTimer@timerVal:	
  9533                           ; 2 bytes @ 0x0
  9534                           
  9535  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9536                           ; 2 bytes @ 0x0
  9537                           
  9538                           
  9539                           ; 2 bytes @ 0x0
  9540  0070                     	ds	1
  9541  0071                     ??_TMR2_ISR:	
  9542  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9543                           ; 1 bytes @ 0x1
  9544                           
  9545                           
  9546                           ; 1 bytes @ 0x1
  9547  0071                     	ds	1
  9548  0072                     ??_TMR1_ISR:	
  9549  0072                     ??_i2c_setBuffer:	
  9550                           ; 1 bytes @ 0x2
  9551                           
  9552  0072                     ??_TMR1_WriteTimer:	
  9553                           ; 1 bytes @ 0x2
  9554                           
  9555  0072                     ??i1_PWM6_LoadDutyValue:	
  9556                           ; 1 bytes @ 0x2
  9557                           
  9558  0072                     setCallBack@p:	
  9559                           ; 1 bytes @ 0x2
  9560                           
  9561                           
  9562                           ; 1 bytes @ 0x2
  9563  0072                     	ds	1
  9564  0073                     ??_setCallBack:	
  9565  0073                     i2c_setBuffer@buffer:	
  9566                           ; 1 bytes @ 0x3
  9567                           
  9568                           
  9569                           ; 1 bytes @ 0x3
  9570  0073                     	ds	1
  9571  0074                     ??_ISR_3s:	
  9572  0074                     setCallBack@idx:	
  9573                           ; 1 bytes @ 0x4
  9574                           
  9575                           
  9576                           ; 1 bytes @ 0x4
  9577  0074                     	ds	1
  9578  0075                     ??_TMR0_ISR:	
  9579  0075                     ?_i2c_setDataCompleteCallback:	
  9580                           ; 1 bytes @ 0x5
  9581                           
  9582  0075                     i2c_setDataCompleteCallback@cb:	
  9583                           ; 1 bytes @ 0x5
  9584                           
  9585                           
  9586                           ; 2 bytes @ 0x5
  9587  0075                     	ds	2
  9588  0077                     ??_sw1_EXT:	
  9589  0077                     i2c_setDataCompleteCallback@p:	
  9590                           ; 1 bytes @ 0x7
  9591                           
  9592                           
  9593                           ; 1 bytes @ 0x7
  9594  0077                     	ds	1
  9595  0078                     ??_INT_CallBack:	
  9596  0078                     ??_i2c_setDataCompleteCallback:	
  9597                           ; 1 bytes @ 0x8
  9598                           
  9599  0078                     ??_INT_ISR:	
  9600                           ; 1 bytes @ 0x8
  9601                           
  9602                           
  9603                           ; 1 bytes @ 0x8
  9604  0078                     	ds	1
  9605  0079                     ?_returnStop:	
  9606  0079                     ?_returnReset:	
  9607                           ; 1 bytes @ 0x9
  9608                           
  9609  0079                     ?_i2c_restartWrite:	
  9610                           ; 1 bytes @ 0x9
  9611                           
  9612  0079                     ?_wr1RegCompleteHandler:	
  9613                           ; 1 bytes @ 0x9
  9614                           
  9615  0079                     ?_rd1RegCompleteHandler:	
  9616                           ; 1 bytes @ 0x9
  9617                           
  9618  0079                     ?_rd2RegCompleteHandler:	
  9619                           ; 1 bytes @ 0x9
  9620                           
  9621  0079                     ?_wr2RegCompleteHandler:	
  9622                           ; 1 bytes @ 0x9
  9623                           
  9624  0079                     ?_rdBlkRegCompleteHandler:	
  9625                           ; 1 bytes @ 0x9
  9626                           
  9627  0079                     i2c_restartWrite@p:	
  9628                           ; 1 bytes @ 0x9
  9629                           
  9630  0079                     returnStop@p:	
  9631                           ; 1 bytes @ 0x9
  9632                           
  9633  0079                     returnReset@p:	
  9634                           ; 1 bytes @ 0x9
  9635                           
  9636  0079                     wr1RegCompleteHandler@p:	
  9637                           ; 1 bytes @ 0x9
  9638                           
  9639  0079                     rd1RegCompleteHandler@p:	
  9640                           ; 1 bytes @ 0x9
  9641                           
  9642  0079                     rd2RegCompleteHandler@p:	
  9643                           ; 1 bytes @ 0x9
  9644                           
  9645  0079                     wr2RegCompleteHandler@p:	
  9646                           ; 1 bytes @ 0x9
  9647                           
  9648  0079                     rdBlkRegCompleteHandler@p:	
  9649                           ; 1 bytes @ 0x9
  9650                           
  9651                           
  9652                           ; 1 bytes @ 0x9
  9653  0079                     	ds	1
  9654  007A                     ??_returnStop:	
  9655  007A                     ??_returnReset:	
  9656                           ; 1 bytes @ 0xA
  9657                           
  9658  007A                     ??_i2c_restartWrite:	
  9659                           ; 1 bytes @ 0xA
  9660                           
  9661  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9662                           ; 1 bytes @ 0xA
  9663                           
  9664  007A                     ??_do_I2C_TX:	
  9665                           ; 1 bytes @ 0xA
  9666                           
  9667  007A                     ??_do_I2C_RX:	
  9668                           ; 1 bytes @ 0xA
  9669                           
  9670  007A                     ??_do_I2C_TX_EMPTY:	
  9671                           ; 1 bytes @ 0xA
  9672                           
  9673  007A                     ??_wr1RegCompleteHandler:	
  9674                           ; 1 bytes @ 0xA
  9675                           
  9676  007A                     ??_rd1RegCompleteHandler:	
  9677                           ; 1 bytes @ 0xA
  9678                           
  9679  007A                     ??_rd2RegCompleteHandler:	
  9680                           ; 1 bytes @ 0xA
  9681                           
  9682  007A                     ??_wr2RegCompleteHandler:	
  9683                           ; 1 bytes @ 0xA
  9684                           
  9685  007A                     ??_rdBlkRegCompleteHandler:	
  9686                           ; 1 bytes @ 0xA
  9687                           
  9688                           
  9689                           ; 1 bytes @ 0xA
  9690  007A                     	ds	3
  9691  007D                     ??_INTERRUPT_InterruptManager:	
  9692                           
  9693                           	psect	cstackBANK0
  9694  0038                     __pcstackBANK0:	
  9695                           ; 1 bytes @ 0xD
  9696                           
  9697  0038                     ??_i2c_ISR:	
  9698                           
  9699                           ; 1 bytes @ 0x0
  9700  0038                     	ds	3
  9701  003B                     ??_PMD_Initialize:	
  9702  003B                     ??_PIN_MANAGER_Initialize:	
  9703                           ; 1 bytes @ 0x3
  9704                           
  9705  003B                     ??_OSCILLATOR_Initialize:	
  9706                           ; 1 bytes @ 0x3
  9707                           
  9708  003B                     ??_PWM6_Initialize:	
  9709                           ; 1 bytes @ 0x3
  9710                           
  9711  003B                     ??_ADCC_Initialize:	
  9712                           ; 1 bytes @ 0x3
  9713                           
  9714  003B                     ?_TMR1_SetInterruptHandler:	
  9715                           ; 1 bytes @ 0x3
  9716                           
  9717  003B                     ?_TMR2_SetInterruptHandler:	
  9718                           ; 1 bytes @ 0x3
  9719                           
  9720  003B                     ??_checkDebounceSW1:	
  9721                           ; 1 bytes @ 0x3
  9722                           
  9723  003B                     ?_TMR0_SetInterruptHandler:	
  9724                           ; 1 bytes @ 0x3
  9725                           
  9726  003B                     ?_LED_bin:	
  9727                           ; 1 bytes @ 0x3
  9728                           
  9729  003B                     ??_TMR0_StartTimer:	
  9730                           ; 1 bytes @ 0x3
  9731                           
  9732  003B                     ??_checkDebounceSW2:	
  9733                           ; 1 bytes @ 0x3
  9734                           
  9735  003B                     ?_INT_SetInterruptHandler:	
  9736                           ; 1 bytes @ 0x3
  9737                           
  9738  003B                     ??_ADCC_StartConversion:	
  9739                           ; 1 bytes @ 0x3
  9740                           
  9741  003B                     ??_ADCC_IsConversionDone:	
  9742                           ; 1 bytes @ 0x3
  9743                           
  9744  003B                     ?_PWM6_LoadDutyValue:	
  9745                           ; 1 bytes @ 0x3
  9746                           
  9747  003B                     ?_DATAEE_ReadByte:	
  9748                           ; 1 bytes @ 0x3
  9749                           
  9750  003B                     ?_ADCC_GetConversionResult:	
  9751                           ; 1 bytes @ 0x3
  9752                           
  9753  003B                     ADCC_StartConversion@channel:	
  9754                           ; 2 bytes @ 0x3
  9755                           
  9756  003B                     INT_SetInterruptHandler@InterruptHandler:	
  9757                           ; 1 bytes @ 0x3
  9758                           
  9759  003B                     TMR1_SetInterruptHandler@InterruptHandler:	
  9760                           ; 2 bytes @ 0x3
  9761                           
  9762  003B                     PWM6_LoadDutyValue@dutyValue:	
  9763                           ; 2 bytes @ 0x3
  9764                           
  9765  003B                     DATAEE_ReadByte@bAdd:	
  9766                           ; 2 bytes @ 0x3
  9767                           
  9768  003B                     TMR2_SetInterruptHandler@InterruptHandler:	
  9769                           ; 2 bytes @ 0x3
  9770                           
  9771  003B                     LED_bin@value:	
  9772                           ; 2 bytes @ 0x3
  9773                           
  9774  003B                     TMR0_SetInterruptHandler@InterruptHandler:	
  9775                           ; 2 bytes @ 0x3
  9776                           
  9777                           
  9778                           ; 2 bytes @ 0x3
  9779  003B                     	ds	2
  9780  003D                     ??_TMR2_Initialize:	
  9781  003D                     ??_TMR1_Initialize:	
  9782                           ; 1 bytes @ 0x5
  9783                           
  9784  003D                     ??_TMR0_Initialize:	
  9785                           ; 1 bytes @ 0x5
  9786                           
  9787  003D                     ??_TMR1_SetInterruptHandler:	
  9788                           ; 1 bytes @ 0x5
  9789                           
  9790  003D                     ??_TMR2_SetInterruptHandler:	
  9791                           ; 1 bytes @ 0x5
  9792                           
  9793  003D                     ??_TMR0_SetInterruptHandler:	
  9794                           ; 1 bytes @ 0x5
  9795                           
  9796  003D                     ??_LED_bin:	
  9797                           ; 1 bytes @ 0x5
  9798                           
  9799  003D                     ??_cksum:	
  9800                           ; 1 bytes @ 0x5
  9801                           
  9802  003D                     ??_INT_SetInterruptHandler:	
  9803                           ; 1 bytes @ 0x5
  9804                           
  9805  003D                     ??_EXT_INT_Initialize:	
  9806                           ; 1 bytes @ 0x5
  9807                           
  9808  003D                     ??_SYSTEM_Initialize:	
  9809                           ; 1 bytes @ 0x5
  9810                           
  9811  003D                     ??_ADCC_GetConversionResult:	
  9812                           ; 1 bytes @ 0x5
  9813                           
  9814  003D                     ??_PWM6_LoadDutyValue:	
  9815                           ; 1 bytes @ 0x5
  9816                           
  9817  003D                     ??_DATAEE_ReadByte:	
  9818                           ; 1 bytes @ 0x5
  9819                           
  9820  003D                     ?_ADC_read:	
  9821                           ; 1 bytes @ 0x5
  9822                           
  9823                           
  9824                           ; 2 bytes @ 0x5
  9825  003D                     	ds	1
  9826  003E                     cksum@res:	
  9827                           
  9828                           ; 1 bytes @ 0x6
  9829  003E                     	ds	1
  9830  003F                     ??_ADC_read:	
  9831  003F                     ??_mod3_LED:	
  9832                           ; 1 bytes @ 0x7
  9833                           
  9834  003F                     ??_all_LED:	
  9835                           ; 1 bytes @ 0x7
  9836                           
  9837  003F                     ??_mod1_LED:	
  9838                           ; 1 bytes @ 0x7
  9839                           
  9840  003F                     ??_mod2_LED:	
  9841                           ; 1 bytes @ 0x7
  9842                           
  9843  003F                     ??_mod4_LED:	
  9844                           ; 1 bytes @ 0x7
  9845                           
  9846  003F                     ?_select_routine:	
  9847                           ; 1 bytes @ 0x7
  9848                           
  9849  003F                     select_routine@mode:	
  9850                           ; 1 bytes @ 0x7
  9851                           
  9852  003F                     cksum@i:	
  9853                           ; 2 bytes @ 0x7
  9854                           
  9855                           
  9856                           ; 2 bytes @ 0x7
  9857  003F                     	ds	2
  9858  0041                     ?_DATAEE_WriteByte:	
  9859  0041                     ??_select_routine:	
  9860                           ; 1 bytes @ 0x9
  9861                           
  9862  0041                     DATAEE_WriteByte@bAdd:	
  9863                           ; 1 bytes @ 0x9
  9864                           
  9865  0041                     select_routine@mode_num:	
  9866                           ; 2 bytes @ 0x9
  9867                           
  9868                           
  9869                           ; 2 bytes @ 0x9
  9870  0041                     	ds	2
  9871  0043                     ??_config_routine:	
  9872  0043                     DATAEE_WriteByte@bData:	
  9873                           ; 1 bytes @ 0xB
  9874                           
  9875                           
  9876                           ; 1 bytes @ 0xB
  9877  0043                     	ds	1
  9878  0044                     ??_DATAEE_WriteByte:	
  9879  0044                     DATAEE_WriteByte@GIEBitValue:	
  9880                           ; 1 bytes @ 0xC
  9881                           
  9882  0044                     config_routine@select_mode:	
  9883                           ; 1 bytes @ 0xC
  9884                           
  9885                           
  9886                           ; 2 bytes @ 0xC
  9887  0044                     	ds	1
  9888  0045                     ??_reset_recv:	
  9889  0045                     ??_cksum_w:	
  9890                           ; 1 bytes @ 0xD
  9891                           
  9892  0045                     reset_recv@i:	
  9893                           ; 1 bytes @ 0xD
  9894                           
  9895                           
  9896                           ; 2 bytes @ 0xD
  9897  0045                     	ds	2
  9898  0047                     ??_recoverData:	
  9899                           
  9900                           ; 1 bytes @ 0xF
  9901  0047                     	ds	1
  9902  0048                     ??_main:	
  9903                           
  9904                           ; 1 bytes @ 0x10
  9905  0048                     	ds	2
  9906                           
  9907                           	psect	maintext
  9908  007E                     __pmaintext:	
  9909 ;;
  9910 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9911 ;;
  9912 ;; *************** function _main *****************
  9913 ;; Defined at:
  9914 ;;		line 123 in file "main.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  task_schedul    2    0        unsigned int 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : B1F/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        4 bytes
  9933 ;; Hardware stack levels required when called:   10
  9934 ;; This function calls:
  9935 ;;		_ADC_read
  9936 ;;		_INT_SetInterruptHandler
  9937 ;;		_LED_bin
  9938 ;;		_PWM6_LoadDutyValue
  9939 ;;		_SYSTEM_Initialize
  9940 ;;		_TMR0_SetInterruptHandler
  9941 ;;		_TMR0_StartTimer
  9942 ;;		_TMR1_SetInterruptHandler
  9943 ;;		_TMR2_SetInterruptHandler
  9944 ;;		_config_routine
  9945 ;;		_recoverData
  9946 ;; This function is called by:
  9947 ;;		Startup code after reset
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function _main
  9953  007E                     _main:	
  9954  007E                     l4952:	
  9955                           ;incstack = 0
  9956                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9957                           
  9958                           
  9959                           ;main.c: 124:     SYSTEM_Initialize();
  9960  007E  3186  2620  3180   	fcall	_SYSTEM_Initialize
  9961                           
  9962                           ;main.c: 126:     TMR0_SetInterruptHandler(ISR_3s);
  9963  0081  3089               	movlw	low _ISR_3s
  9964  0082  0020               	movlb	0	; select bank0
  9965  0083  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9966  0084  3006               	movlw	high _ISR_3s
  9967  0085  00BC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9968  0086  318F  275F  3180   	fcall	_TMR0_SetInterruptHandler
  9969                           
  9970                           ;main.c: 127:     TMR1_SetInterruptHandler(handler_clock_hms);
  9971  0089  30E5               	movlw	low _handler_clock_hms
  9972  008A  0020               	movlb	0	; select bank0
  9973  008B  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9974  008C  3004               	movlw	high _handler_clock_hms
  9975  008D  00BC               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9976  008E  318F  2765  3180   	fcall	_TMR1_SetInterruptHandler
  9977                           
  9978                           ;main.c: 128:     INT_SetInterruptHandler(sw1_EXT);
  9979  0091  3011               	movlw	low _sw1_EXT
  9980  0092  0020               	movlb	0	; select bank0
  9981  0093  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler
  9982  0094  3005               	movlw	high _sw1_EXT
  9983  0095  00BC               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  9984  0096  318F  2759  3180   	fcall	_INT_SetInterruptHandler
  9985                           
  9986                           ;main.c: 129:     TMR2_SetInterruptHandler(handler_clock_ms);
  9987  0099  30F4               	movlw	low _handler_clock_ms
  9988  009A  0020               	movlb	0	; select bank0
  9989  009B  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  9990  009C  3007               	movlw	high _handler_clock_ms
  9991  009D  00BC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  9992  009E  318F  276B  3180   	fcall	_TMR2_SetInterruptHandler
  9993  00A1                     l4954:	
  9994  00A1                     l4956:	
  9995                           
  9996                           ;main.c: 133:     recoverData();
  9997  00A1  3181  212E  3180   	fcall	_recoverData
  9998  00A4                     l4958:	
  9999                           
 10000                           ;main.c: 135:     PWM6_LoadDutyValue(0);
 10001  00A4  3000               	movlw	0
 10002  00A5  0020               	movlb	0	; select bank0
 10003  00A6  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 10004  00A7  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10005  00A8  3186  2670  3180   	fcall	_PWM6_LoadDutyValue
 10006  00AB                     l4960:	
 10007                           
 10008                           ;main.c: 136:     alarm = 0 ;
 10009  00AB  0020               	movlb	0	; select bank0
 10010  00AC  01AF               	clrf	_alarm	;volatile
 10011  00AD                     l4962:	
 10012  00AD  003E               	movlb	30	; select bank30
 10013  00AE  1644               	bsf	68,4	;volatile
 10014  00AF                     l4964:	
 10015                           
 10016                           ;main.c: 140:     (INTCONbits.GIE = 1);
 10017  00AF  178B               	bsf	11,7	;volatile
 10018  00B0                     l4966:	
 10019                           
 10020                           ;main.c: 143:     (INTCONbits.PEIE = 1);
 10021  00B0  170B               	bsf	11,6	;volatile
 10022  00B1                     l4968:	
 10023                           
 10024                           ;main.c: 154:                     if(!config_mode){
 10025  00B1  0020               	movlb	0	; select bank0
 10026  00B2  0830               	movf	_config_mode,w	;volatile
 10027  00B3  1D03               	btfss	3,2
 10028  00B4  28B6               	goto	u2241
 10029  00B5  28B7               	goto	u2240
 10030  00B6                     u2241:	
 10031  00B6  291B               	goto	l5000
 10032  00B7                     u2240:	
 10033  00B7                     l4970:	
 10034                           
 10035                           ;main.c: 156:                         convertedValue = ADC_read();
 10036  00B7  3186  2656  3180   	fcall	_ADC_read
 10037  00BA  0020               	movlb	0	; select bank0
 10038  00BB  083E               	movf	?_ADC_read+1,w
 10039  00BC  00A7               	movwf	_convertedValue+1
 10040  00BD  083D               	movf	?_ADC_read,w
 10041  00BE  00A6               	movwf	_convertedValue
 10042  00BF                     l4972:	
 10043                           
 10044                           ;main.c: 157:                         level_bin = (convertedValue >> 8);
 10045  00BF  0827               	movf	_convertedValue+1,w
 10046  00C0  00C9               	movwf	??_main+1
 10047  00C1  0826               	movf	_convertedValue,w
 10048  00C2  00C8               	movwf	??_main
 10049  00C3  0849               	movf	??_main+1,w
 10050  00C4  00C8               	movwf	??_main
 10051  00C5  01C9               	clrf	??_main+1
 10052  00C6  0848               	movf	??_main,w
 10053  00C7  00A2               	movwf	_level_bin
 10054  00C8  0849               	movf	??_main+1,w
 10055  00C9  00A3               	movwf	_level_bin+1
 10056  00CA                     l4974:	
 10057                           
 10058                           ;main.c: 158:                         LED_bin(level_bin);
 10059  00CA  0823               	movf	_level_bin+1,w
 10060  00CB  00BC               	movwf	LED_bin@value+1
 10061  00CC  0822               	movf	_level_bin,w
 10062  00CD  00BB               	movwf	LED_bin@value
 10063  00CE  3186  263C  3180   	fcall	_LED_bin
 10064  00D1                     l4976:	
 10065                           
 10066                           ;main.c: 159:                         lum_threshold = (level_bin > 2);
 10067  00D1  3000               	movlw	0
 10068  00D2  0020               	movlb	0	; select bank0
 10069  00D3  0223               	subwf	_level_bin+1,w
 10070  00D4  3003               	movlw	3
 10071  00D5  1903               	skipnz
 10072  00D6  0222               	subwf	_level_bin,w
 10073  00D7  1803               	skipnc
 10074  00D8  28DA               	goto	u2251
 10075  00D9  28DC               	goto	u2250
 10076  00DA                     u2251:	
 10077  00DA  3001               	movlw	1
 10078  00DB  28DD               	goto	u2260
 10079  00DC                     u2250:	
 10080  00DC  3000               	movlw	0
 10081  00DD                     u2260:	
 10082  00DD  00C8               	movwf	??_main
 10083  00DE  01C9               	clrf	??_main+1
 10084  00DF  0848               	movf	??_main,w
 10085  00E0  00A0               	movwf	_lum_threshold
 10086  00E1  0849               	movf	??_main+1,w
 10087  00E2  00A1               	movwf	_lum_threshold+1
 10088  00E3                     l4978:	
 10089                           
 10090                           ;main.c: 161:                         if(lum_threshold){
 10091  00E3  0820               	movf	_lum_threshold,w
 10092  00E4  0421               	iorwf	_lum_threshold+1,w
 10093  00E5  1903               	btfsc	3,2
 10094  00E6  28E8               	goto	u2271
 10095  00E7  28E9               	goto	u2270
 10096  00E8                     u2271:	
 10097  00E8  290B               	goto	l4994
 10098  00E9                     u2270:	
 10099  00E9                     l4980:	
 10100                           
 10101                           ;main.c: 162:                             if(alarm == 2){
 10102  00E9  3002               	movlw	2
 10103  00EA  062F               	xorwf	_alarm,w	;volatile
 10104  00EB  1D03               	btfss	3,2
 10105  00EC  28EE               	goto	u2281
 10106  00ED  28EF               	goto	u2280
 10107  00EE                     u2281:	
 10108  00EE  28FB               	goto	l4986
 10109  00EF                     u2280:	
 10110  00EF                     l4982:	
 10111                           
 10112                           ;main.c: 163:                                 duty_cycle +=1 ;
 10113  00EF  3001               	movlw	1
 10114  00F0  07A4               	addwf	_duty_cycle,f
 10115  00F1  3000               	movlw	0
 10116  00F2  3DA5               	addwfc	_duty_cycle+1,f
 10117  00F3                     l4984:	
 10118                           
 10119                           ;main.c: 164:                                 PWM6_LoadDutyValue(duty_cycle);
 10120  00F3  0825               	movf	_duty_cycle+1,w
 10121  00F4  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10122  00F5  0824               	movf	_duty_cycle,w
 10123  00F6  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 10124  00F7  3186  2670  3180   	fcall	_PWM6_LoadDutyValue
 10125                           
 10126                           ;main.c: 165:                             }
 10127  00FA  2927               	goto	l5008
 10128  00FB                     l4986:	
 10129  00FB  082F               	movf	_alarm,w	;volatile
 10130  00FC  1D03               	btfss	3,2
 10131  00FD  28FF               	goto	u2291
 10132  00FE  2900               	goto	u2290
 10133  00FF                     u2291:	
 10134  00FF  291A               	goto	l1178
 10135  0100                     u2290:	
 10136  0100                     l4988:	
 10137                           
 10138                           ;main.c: 167:                                 PIE0bits.TMR0IE = 1;
 10139  0100  002E               	movlb	14	; select bank14
 10140  0101  1696               	bsf	22,5	;volatile
 10141  0102                     l4990:	
 10142                           
 10143                           ;main.c: 168:                                 TMR0_StartTimer();
 10144  0102  318F  2714  3180   	fcall	_TMR0_StartTimer
 10145  0105                     l4992:	
 10146                           
 10147                           ;main.c: 169:                                 alarm = 2 ;
 10148  0105  3002               	movlw	2
 10149  0106  0020               	movlb	0	; select bank0
 10150  0107  00C8               	movwf	??_main
 10151  0108  0848               	movf	??_main,w
 10152  0109  00AF               	movwf	_alarm	;volatile
 10153  010A  2927               	goto	l5008
 10154  010B                     l4994:	
 10155                           
 10156                           ;main.c: 173:                             if(alarm == 2){
 10157  010B  3002               	movlw	2
 10158  010C  062F               	xorwf	_alarm,w	;volatile
 10159  010D  1D03               	btfss	3,2
 10160  010E  2910               	goto	u2301
 10161  010F  2911               	goto	u2300
 10162  0110                     u2301:	
 10163  0110  2927               	goto	l5008
 10164  0111                     u2300:	
 10165  0111                     l4996:	
 10166                           
 10167                           ;main.c: 174:                                 PWM6_LoadDutyValue(0);
 10168  0111  3000               	movlw	0
 10169  0112  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 10170  0113  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10171  0114  3186  2670  3180   	fcall	_PWM6_LoadDutyValue
 10172  0117                     l4998:	
 10173                           
 10174                           ;main.c: 175:                                 alarm = 0 ;
 10175  0117  0020               	movlb	0	; select bank0
 10176  0118  01AF               	clrf	_alarm	;volatile
 10177  0119  2927               	goto	l5008
 10178  011A                     l1178:	
 10179                           ;main.c: 177:                         }
 10180                           
 10181                           
 10182                           ;main.c: 179:                      }
 10183  011A  2927               	goto	l5008
 10184  011B                     l5000:	
 10185  011B  0330               	decf	_config_mode,w	;volatile
 10186  011C  1D03               	btfss	3,2
 10187  011D  291F               	goto	u2311
 10188  011E  2920               	goto	u2310
 10189  011F                     u2311:	
 10190  011F  2927               	goto	l5008
 10191  0120                     u2310:	
 10192  0120                     l5002:	
 10193                           
 10194                           ;main.c: 183:                       (PIE0bits.INTE = 0);
 10195  0120  002E               	movlb	14	; select bank14
 10196  0121  1016               	bcf	22,0	;volatile
 10197  0122                     l5004:	
 10198                           
 10199                           ;main.c: 184:                       config_routine();
 10200  0122  3181  21C6  3180   	fcall	_config_routine
 10201  0125                     l5006:	
 10202                           
 10203                           ;main.c: 185:                       (PIE0bits.INTE = 1);
 10204  0125  002E               	movlb	14	; select bank14
 10205  0126  1416               	bsf	22,0	;volatile
 10206  0127                     l5008:	
 10207                           
 10208                           ;main.c: 188:                 _delay((unsigned long)((1)*(1000000/4000.0)));
 10209  0127  3053               	movlw	83
 10210  0128                     u2367:	
 10211  0128  0B89               	decfsz	9,f
 10212  0129  2928               	goto	u2367
 10213  012A  0000               	nop
 10214                           
 10215                           ;main.c: 191:                 }while(1);
 10216  012B  28B1               	goto	l4968
 10217  012C  3180  285B         	ljmp	start
 10218  012E                     __end_of_main:	
 10219                           
 10220                           	psect	text1
 10221  012E                     __ptext1:	
 10222 ;; *************** function _recoverData *****************
 10223 ;; Defined at:
 10224 ;;		line 11 in file "eeprom_rw.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0, pclath, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;Total ram usage:        1 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    9
 10245 ;; This function calls:
 10246 ;;		_DATAEE_ReadByte
 10247 ;;		_DATAEE_WriteByte
 10248 ;;		_cksum
 10249 ;;		_cksum_w
 10250 ;;		_reset_recv
 10251 ;; This function is called by:
 10252 ;;		_main
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           
 10257                           ;psect for function _recoverData
 10258  012E                     _recoverData:	
 10259  012E                     l4704:	
 10260                           ;incstack = 0
 10261                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10262                           
 10263                           
 10264                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10265  012E  30F5               	movlw	245
 10266  012F  0020               	movlb	0	; select bank0
 10267  0130  00BB               	movwf	DATAEE_ReadByte@bAdd
 10268  0131  30F0               	movlw	240
 10269  0132  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10270  0133  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10271  0136  3AAB               	xorlw	171
 10272  0137  1D03               	skipz
 10273  0138  293A               	goto	u1841
 10274  0139  293B               	goto	u1840
 10275  013A                     u1841:	
 10276  013A  298F               	goto	l4710
 10277  013B                     u1840:	
 10278  013B                     l4706:	
 10279                           
 10280                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10281  013B  3185  25A7  3181   	fcall	_cksum
 10282  013E  0020               	movlb	0	; select bank0
 10283  013F  00C7               	movwf	??_recoverData
 10284  0140  30FF               	movlw	255
 10285  0141  00BB               	movwf	DATAEE_ReadByte@bAdd
 10286  0142  30F0               	movlw	240
 10287  0143  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10288  0144  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10289  0147  0020               	movlb	0	; select bank0
 10290  0148  0647               	xorwf	??_recoverData,w
 10291  0149  1D03               	skipz
 10292  014A  294C               	goto	u1851
 10293  014B  294D               	goto	u1850
 10294  014C                     u1851:	
 10295  014C  298F               	goto	l4710
 10296  014D                     u1850:	
 10297  014D                     l4708:	
 10298                           
 10299                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10300  014D  30F6               	movlw	246
 10301  014E  00BB               	movwf	DATAEE_ReadByte@bAdd
 10302  014F  30F0               	movlw	240
 10303  0150  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10304  0151  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10305  0154  0020               	movlb	0	; select bank0
 10306  0155  00C7               	movwf	??_recoverData
 10307  0156  0847               	movf	??_recoverData,w
 10308  0157  00B7               	movwf	_clkh	;volatile
 10309                           
 10310                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10311  0158  30F7               	movlw	247
 10312  0159  00BB               	movwf	DATAEE_ReadByte@bAdd
 10313  015A  30F0               	movlw	240
 10314  015B  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10315  015C  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10316  015F  0020               	movlb	0	; select bank0
 10317  0160  00C7               	movwf	??_recoverData
 10318  0161  0847               	movf	??_recoverData,w
 10319  0162  00B6               	movwf	_clkm	;volatile
 10320                           
 10321                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10322  0163  30F8               	movlw	248
 10323  0164  00BB               	movwf	DATAEE_ReadByte@bAdd
 10324  0165  30F0               	movlw	240
 10325  0166  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10326  0167  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10327  016A  0020               	movlb	0	; select bank0
 10328  016B  00C7               	movwf	??_recoverData
 10329  016C  0847               	movf	??_recoverData,w
 10330  016D  00D6               	movwf	_nreg
 10331                           
 10332                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10333  016E  30F9               	movlw	249
 10334  016F  00BB               	movwf	DATAEE_ReadByte@bAdd
 10335  0170  30F0               	movlw	240
 10336  0171  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10337  0172  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10338  0175  0020               	movlb	0	; select bank0
 10339  0176  00C7               	movwf	??_recoverData
 10340  0177  0847               	movf	??_recoverData,w
 10341  0178  00AE               	movwf	_nreg_pt
 10342                           
 10343                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10344  0179  30FA               	movlw	250
 10345  017A  00BB               	movwf	DATAEE_ReadByte@bAdd
 10346  017B  30F0               	movlw	240
 10347  017C  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10348  017D  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10349  0180  0020               	movlb	0	; select bank0
 10350  0181  00C7               	movwf	??_recoverData
 10351  0182  0847               	movf	??_recoverData,w
 10352  0183  00D5               	movwf	_pmon
 10353                           
 10354                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10355  0184  30FB               	movlw	251
 10356  0185  00BB               	movwf	DATAEE_ReadByte@bAdd
 10357  0186  30F0               	movlw	240
 10358  0187  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10359  0188  3187  279F  3181   	fcall	_DATAEE_ReadByte
 10360  018B  0020               	movlb	0	; select bank0
 10361  018C  00C7               	movwf	??_recoverData
 10362  018D  0847               	movf	??_recoverData,w
 10363  018E  00D4               	movwf	_tala
 10364  018F                     l4710:	
 10365                           
 10366                           ;eeprom_rw.c: 24:     reset_recv();
 10367  018F  3186  2604  3181   	fcall	_reset_recv
 10368  0192                     l4712:	
 10369                           
 10370                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10371  0192  30F5               	movlw	245
 10372  0193  0020               	movlb	0	; select bank0
 10373  0194  00C1               	movwf	DATAEE_WriteByte@bAdd
 10374  0195  30F0               	movlw	240
 10375  0196  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10376  0197  30AB               	movlw	171
 10377  0198  00C7               	movwf	??_recoverData
 10378  0199  0847               	movf	??_recoverData,w
 10379  019A  00C3               	movwf	DATAEE_WriteByte@bData
 10380  019B  3185  2563  3181   	fcall	_DATAEE_WriteByte
 10381  019E                     l4714:	
 10382                           
 10383                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10384  019E  30F8               	movlw	248
 10385  019F  0020               	movlb	0	; select bank0
 10386  01A0  00C1               	movwf	DATAEE_WriteByte@bAdd
 10387  01A1  30F0               	movlw	240
 10388  01A2  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10389  01A3  0856               	movf	_nreg,w
 10390  01A4  00C7               	movwf	??_recoverData
 10391  01A5  0847               	movf	??_recoverData,w
 10392  01A6  00C3               	movwf	DATAEE_WriteByte@bData
 10393  01A7  3185  2563  3181   	fcall	_DATAEE_WriteByte
 10394  01AA                     l4716:	
 10395                           
 10396                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10397  01AA  30FA               	movlw	250
 10398  01AB  0020               	movlb	0	; select bank0
 10399  01AC  00C1               	movwf	DATAEE_WriteByte@bAdd
 10400  01AD  30F0               	movlw	240
 10401  01AE  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10402  01AF  0855               	movf	_pmon,w
 10403  01B0  00C7               	movwf	??_recoverData
 10404  01B1  0847               	movf	??_recoverData,w
 10405  01B2  00C3               	movwf	DATAEE_WriteByte@bData
 10406  01B3  3185  2563  3181   	fcall	_DATAEE_WriteByte
 10407  01B6                     l4718:	
 10408                           
 10409                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10410  01B6  30FB               	movlw	251
 10411  01B7  0020               	movlb	0	; select bank0
 10412  01B8  00C1               	movwf	DATAEE_WriteByte@bAdd
 10413  01B9  30F0               	movlw	240
 10414  01BA  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10415  01BB  0854               	movf	_tala,w
 10416  01BC  00C7               	movwf	??_recoverData
 10417  01BD  0847               	movf	??_recoverData,w
 10418  01BE  00C3               	movwf	DATAEE_WriteByte@bData
 10419  01BF  3185  2563  3181   	fcall	_DATAEE_WriteByte
 10420  01C2                     l4720:	
 10421                           
 10422                           ;eeprom_rw.c: 31:     cksum_w();
 10423  01C2  3187  277F  3181   	fcall	_cksum_w
 10424  01C5                     l1459:	
 10425  01C5  0008               	return
 10426  01C6                     __end_of_recoverData:	
 10427                           
 10428                           	psect	text2
 10429  0604                     __ptext2:	
 10430 ;; *************** function _reset_recv *****************
 10431 ;; Defined at:
 10432 ;;		line 75 in file "eeprom_rw.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;		None
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  i               2   13[BANK0 ] unsigned int 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, pclath, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;Total ram usage:        2 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    7
 10453 ;; This function calls:
 10454 ;;		_DATAEE_WriteByte
 10455 ;; This function is called by:
 10456 ;;		_recoverData
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _reset_recv
 10462  0604                     _reset_recv:	
 10463  0604                     l4568:	
 10464                           ;incstack = 0
 10465                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10466                           
 10467                           
 10468                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10469  0604  30F5               	movlw	245
 10470  0605  0020               	movlb	0	; select bank0
 10471  0606  00C5               	movwf	reset_recv@i
 10472  0607  30F0               	movlw	240
 10473  0608  00C6               	movwf	reset_recv@i+1
 10474  0609                     l4572:	
 10475                           
 10476                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10477  0609  0846               	movf	reset_recv@i+1,w
 10478  060A  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10479  060B  0845               	movf	reset_recv@i,w
 10480  060C  00C1               	movwf	DATAEE_WriteByte@bAdd
 10481  060D  01C3               	clrf	DATAEE_WriteByte@bData
 10482  060E  3185  2563  3186   	fcall	_DATAEE_WriteByte
 10483  0611                     l4574:	
 10484  0611  3001               	movlw	1
 10485  0612  0020               	movlb	0	; select bank0
 10486  0613  07C5               	addwf	reset_recv@i,f
 10487  0614  3000               	movlw	0
 10488  0615  3DC6               	addwfc	reset_recv@i+1,f
 10489  0616                     l4576:	
 10490  0616  30F1               	movlw	241
 10491  0617  0246               	subwf	reset_recv@i+1,w
 10492  0618  3000               	movlw	0
 10493  0619  1903               	skipnz
 10494  061A  0245               	subwf	reset_recv@i,w
 10495  061B  1C03               	skipc
 10496  061C  2E1E               	goto	u1751
 10497  061D  2E1F               	goto	u1750
 10498  061E                     u1751:	
 10499  061E  2E09               	goto	l4572
 10500  061F                     u1750:	
 10501  061F                     l1486:	
 10502  061F  0008               	return
 10503  0620                     __end_of_reset_recv:	
 10504                           
 10505                           	psect	text3
 10506  077F                     __ptext3:	
 10507 ;; *************** function _cksum_w *****************
 10508 ;; Defined at:
 10509 ;;		line 61 in file "eeprom_rw.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;		None
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      void 
 10516 ;; Registers used:
 10517 ;;		wreg, status,2, status,0, pclath, cstack
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;Total ram usage:        1 bytes
 10528 ;; Hardware stack levels used:    1
 10529 ;; Hardware stack levels required when called:    8
 10530 ;; This function calls:
 10531 ;;		_DATAEE_WriteByte
 10532 ;;		_cksum
 10533 ;; This function is called by:
 10534 ;;		_recoverData
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           
 10539                           ;psect for function _cksum_w
 10540  077F                     _cksum_w:	
 10541  077F                     l4578:	
 10542                           ;incstack = 0
 10543                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10544                           
 10545                           
 10546                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10547  077F  30FF               	movlw	255
 10548  0780  0020               	movlb	0	; select bank0
 10549  0781  00C1               	movwf	DATAEE_WriteByte@bAdd
 10550  0782  30F0               	movlw	240
 10551  0783  00C2               	movwf	DATAEE_WriteByte@bAdd+1
 10552  0784  3185  25A7  3187   	fcall	_cksum
 10553  0787  0020               	movlb	0	; select bank0
 10554  0788  00C5               	movwf	??_cksum_w
 10555  0789  0845               	movf	??_cksum_w,w
 10556  078A  00C3               	movwf	DATAEE_WriteByte@bData
 10557  078B  3185  2563  3187   	fcall	_DATAEE_WriteByte
 10558  078E                     l1476:	
 10559  078E  0008               	return
 10560  078F                     __end_of_cksum_w:	
 10561                           
 10562                           	psect	text4
 10563  05A7                     __ptext4:	
 10564 ;; *************** function _cksum *****************
 10565 ;; Defined at:
 10566 ;;		line 66 in file "eeprom_rw.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  i               2    7[BANK0 ] unsigned int 
 10571 ;;  res             1    6[BANK0 ] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      unsigned char 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0, pclath, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;Total ram usage:        4 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    7
 10588 ;; This function calls:
 10589 ;;		_DATAEE_ReadByte
 10590 ;; This function is called by:
 10591 ;;		_recoverData
 10592 ;;		_cksum_w
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           
 10597                           ;psect for function _cksum
 10598  05A7                     _cksum:	
 10599  05A7                     l4078:	
 10600                           ;incstack = 0
 10601                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 10602                           
 10603                           
 10604                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 10605  05A7  0020               	movlb	0	; select bank0
 10606  05A8  01BE               	clrf	cksum@res
 10607  05A9                     l4080:	
 10608                           
 10609                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 10610  05A9  30F5               	movlw	245
 10611  05AA  00BF               	movwf	cksum@i
 10612  05AB  30F0               	movlw	240
 10613  05AC  00C0               	movwf	cksum@i+1
 10614  05AD                     l4086:	
 10615                           
 10616                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 10617  05AD  0840               	movf	cksum@i+1,w
 10618  05AE  00BC               	movwf	DATAEE_ReadByte@bAdd+1
 10619  05AF  083F               	movf	cksum@i,w
 10620  05B0  00BB               	movwf	DATAEE_ReadByte@bAdd
 10621  05B1  3187  279F  3185   	fcall	_DATAEE_ReadByte
 10622  05B4  0020               	movlb	0	; select bank0
 10623  05B5  00BD               	movwf	??_cksum
 10624  05B6  083D               	movf	??_cksum,w
 10625  05B7  07BE               	addwf	cksum@res,f
 10626  05B8                     l4088:	
 10627                           
 10628                           ;eeprom_rw.c: 71:     }
 10629  05B8  3001               	movlw	1
 10630  05B9  07BF               	addwf	cksum@i,f
 10631  05BA  3000               	movlw	0
 10632  05BB  3DC0               	addwfc	cksum@i+1,f
 10633  05BC                     l4090:	
 10634  05BC  30F0               	movlw	240
 10635  05BD  0240               	subwf	cksum@i+1,w
 10636  05BE  30FF               	movlw	255
 10637  05BF  1903               	skipnz
 10638  05C0  023F               	subwf	cksum@i,w
 10639  05C1  1C03               	skipc
 10640  05C2  2DC4               	goto	u1531
 10641  05C3  2DC5               	goto	u1530
 10642  05C4                     u1531:	
 10643  05C4  2DAD               	goto	l4086
 10644  05C5                     u1530:	
 10645  05C5                     l4092:	
 10646                           
 10647                           ;eeprom_rw.c: 72:     return res;
 10648  05C5  083E               	movf	cksum@res,w
 10649  05C6                     l1481:	
 10650  05C6  0008               	return
 10651  05C7                     __end_of_cksum:	
 10652                           
 10653                           	psect	text5
 10654  079F                     __ptext5:	
 10655 ;; *************** function _DATAEE_ReadByte *****************
 10656 ;; Defined at:
 10657 ;;		line 202 in file "mcc_generated_files/memory.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  bAdd            2    3[BANK0 ] unsigned short 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      unsigned char 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;Total ram usage:        2 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    6
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_recoverData
 10682 ;;		_cksum
 10683 ;;		_read_ring
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _DATAEE_ReadByte
 10689  079F                     _DATAEE_ReadByte:	
 10690  079F                     l3878:	
 10691                           ;incstack = 0
 10692                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 10693                           
 10694                           
 10695                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 10696  079F  0020               	movlb	0	; select bank0
 10697  07A0  083C               	movf	DATAEE_ReadByte@bAdd+1,w
 10698  07A1  0030               	movlb	16	; select bank16
 10699  07A2  009B               	movwf	27	;volatile
 10700  07A3                     l3880:	
 10701                           
 10702                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 10703  07A3  0020               	movlb	0	; select bank0
 10704  07A4  083B               	movf	DATAEE_ReadByte@bAdd,w
 10705  07A5  0030               	movlb	16	; select bank16
 10706  07A6  009A               	movwf	26	;volatile
 10707  07A7                     l3882:	
 10708                           
 10709                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 10710  07A7  171E               	bsf	30,6	;volsfr
 10711  07A8                     l3884:	
 10712                           
 10713                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 10714  07A8  141E               	bsf	30,0	;volsfr
 10715  07A9                     l3886:	
 10716                           
 10717                           ;mcc_generated_files/memory.c: 208:     __nop();
 10718  07A9  0000               	nop
 10719  07AA                     l3888:	
 10720                           
 10721                           ;mcc_generated_files/memory.c: 209:     __nop();
 10722  07AA  0000               	nop
 10723  07AB                     l3890:	
 10724                           
 10725                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 10726  07AB  0030               	movlb	16	; select bank16
 10727  07AC  081C               	movf	28,w	;volatile
 10728  07AD                     l963:	
 10729  07AD  0008               	return
 10730  07AE                     __end_of_DATAEE_ReadByte:	
 10731                           
 10732                           	psect	text6
 10733  0563                     __ptext6:	
 10734 ;; *************** function _DATAEE_WriteByte *****************
 10735 ;; Defined at:
 10736 ;;		line 180 in file "mcc_generated_files/memory.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  bAdd            2    9[BANK0 ] unsigned short 
 10739 ;;  bData           1   11[BANK0 ] unsigned char 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		wreg, status,2, status,0
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10751 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;Total ram usage:        4 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; Hardware stack levels required when called:    6
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_recoverData
 10762 ;;		_cksum_w
 10763 ;;		_reset_recv
 10764 ;;		_push_ring
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           
 10769                           ;psect for function _DATAEE_WriteByte
 10770  0563                     _DATAEE_WriteByte:	
 10771  0563                     l4030:	
 10772                           ;incstack = 0
 10773                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 10774                           
 10775                           
 10776                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 10777  0563  3000               	movlw	0
 10778  0564  1B8B               	btfsc	11,7	;volatile
 10779  0565  3001               	movlw	1
 10780  0566  0020               	movlb	0	; select bank0
 10781  0567  00C4               	movwf	DATAEE_WriteByte@GIEBitValue
 10782                           
 10783                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 10784  0568  0842               	movf	DATAEE_WriteByte@bAdd+1,w
 10785  0569  0030               	movlb	16	; select bank16
 10786  056A  009B               	movwf	27	;volatile
 10787  056B                     l4032:	
 10788                           
 10789                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 10790  056B  0020               	movlb	0	; select bank0
 10791  056C  0841               	movf	DATAEE_WriteByte@bAdd,w
 10792  056D  0030               	movlb	16	; select bank16
 10793  056E  009A               	movwf	26	;volatile
 10794  056F                     l4034:	
 10795                           
 10796                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 10797  056F  0020               	movlb	0	; select bank0
 10798  0570  0843               	movf	DATAEE_WriteByte@bData,w
 10799  0571  0030               	movlb	16	; select bank16
 10800  0572  009C               	movwf	28	;volatile
 10801  0573                     l4036:	
 10802                           
 10803                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 10804  0573  171E               	bsf	30,6	;volsfr
 10805  0574                     l4038:	
 10806                           
 10807                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 10808  0574  151E               	bsf	30,2	;volsfr
 10809  0575                     l4040:	
 10810                           
 10811                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 10812  0575  138B               	bcf	11,7	;volatile
 10813  0576                     l4042:	
 10814                           
 10815                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 10816  0576  3055               	movlw	85
 10817  0577  009F               	movwf	31	;volsfr
 10818  0578                     l4044:	
 10819                           
 10820                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 10821  0578  30AA               	movlw	170
 10822  0579  009F               	movwf	31	;volsfr
 10823  057A                     l4046:	
 10824                           
 10825                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 10826  057A  149E               	bsf	30,1	;volsfr
 10827  057B                     l957:	
 10828                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 10829                           
 10830                           
 10831                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 10832  057B  189E               	btfsc	30,1	;volsfr
 10833  057C  2D7E               	goto	u1481
 10834  057D  2D7F               	goto	u1480
 10835  057E                     u1481:	
 10836  057E  2D7B               	goto	l957
 10837  057F                     u1480:	
 10838  057F                     l959:	
 10839                           
 10840                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 10841  057F  111E               	bcf	30,2	;volsfr
 10842  0580                     l4048:	
 10843                           
 10844                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 10845  0580  0020               	movlb	0	; select bank0
 10846  0581  0C44               	rrf	DATAEE_WriteByte@GIEBitValue,w
 10847  0582  1C03               	skipc
 10848  0583  138B               	bcf	11,7	;volatile
 10849  0584  1803               	skipnc
 10850  0585  178B               	bsf	11,7	;volatile
 10851  0586                     l960:	
 10852  0586  0008               	return
 10853  0587                     __end_of_DATAEE_WriteByte:	
 10854                           
 10855                           	psect	text7
 10856  01C6                     __ptext7:	
 10857 ;; *************** function _config_routine *****************
 10858 ;; Defined at:
 10859 ;;		line 213 in file "main.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;		None
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;  select_mode     2   12[BANK0 ] unsigned int 
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10877 ;;Total ram usage:        3 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    9
 10880 ;; This function calls:
 10881 ;;		_all_LED
 10882 ;;		_checkDebounceSW1
 10883 ;;		_checkDebounceSW2
 10884 ;;		_mod1_LED
 10885 ;;		_mod2_LED
 10886 ;;		_mod3_LED
 10887 ;;		_mod4_LED
 10888 ;;		_select_routine
 10889 ;; This function is called by:
 10890 ;;		_main
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           
 10895                           ;psect for function _config_routine
 10896  01C6                     _config_routine:	
 10897  01C6                     l4736:	
 10898                           ;incstack = 0
 10899                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10900                           
 10901                           
 10902                           ;main.c: 215:     unsigned int select_mode =0;
 10903  01C6  0020               	movlb	0	; select bank0
 10904  01C7  01C4               	clrf	config_routine@select_mode
 10905  01C8  01C5               	clrf	config_routine@select_mode+1
 10906  01C9                     l4738:	
 10907                           
 10908                           ;main.c: 216:       last_ms = clkms;
 10909  01C9  087D               	movf	_clkms,w	;volatile
 10910  01CA  00C3               	movwf	??_config_routine
 10911  01CB  0843               	movf	??_config_routine,w
 10912  01CC  00B4               	movwf	_last_ms
 10913  01CD                     l4740:	
 10914                           
 10915                           ;main.c: 217:       last_ms2 = clkms;
 10916  01CD  087D               	movf	_clkms,w	;volatile
 10917  01CE  00C3               	movwf	??_config_routine
 10918  01CF  0843               	movf	??_config_routine,w
 10919  01D0  00B3               	movwf	_last_ms2
 10920  01D1                     l4742:	
 10921                           
 10922                           ;main.c: 221:                 if(select_mode == 0){
 10923  01D1  0844               	movf	config_routine@select_mode,w
 10924  01D2  0445               	iorwf	config_routine@select_mode+1,w
 10925  01D3  1D03               	btfss	3,2
 10926  01D4  29D6               	goto	u1871
 10927  01D5  29D7               	goto	u1870
 10928  01D6                     u1871:	
 10929  01D6  29DA               	goto	l4746
 10930  01D7                     u1870:	
 10931  01D7                     l4744:	
 10932                           
 10933                           ;main.c: 222:                         all_LED();}
 10934  01D7  3182  223F  3181   	fcall	_all_LED
 10935  01DA                     l4746:	
 10936                           
 10937                           ;main.c: 224:                 if(!PORTBbits.RB4){
 10938  01DA  0020               	movlb	0	; select bank0
 10939  01DB  1A0D               	btfsc	13,4	;volatile
 10940  01DC  29DE               	goto	u1881
 10941  01DD  29DF               	goto	u1880
 10942  01DE                     u1881:	
 10943  01DE  2A1A               	goto	l4768
 10944  01DF                     u1880:	
 10945  01DF                     l4748:	
 10946                           
 10947                           ;main.c: 225:                     if(checkDebounceSW1()){
 10948  01DF  3183  23C9  3181   	fcall	_checkDebounceSW1
 10949  01E2  3A00               	xorlw	0
 10950  01E3  1903               	skipnz
 10951  01E4  29E6               	goto	u1891
 10952  01E5  29E7               	goto	u1890
 10953  01E6                     u1891:	
 10954  01E6  2A1A               	goto	l4768
 10955  01E7                     u1890:	
 10956  01E7                     l4750:	
 10957                           
 10958                           ;main.c: 227:                         select_mode +=1;
 10959  01E7  3001               	movlw	1
 10960  01E8  0020               	movlb	0	; select bank0
 10961  01E9  07C4               	addwf	config_routine@select_mode,f
 10962  01EA  3000               	movlw	0
 10963  01EB  3DC5               	addwfc	config_routine@select_mode+1,f
 10964                           
 10965                           ;main.c: 229:                         switch(select_mode){
 10966  01EC  2A02               	goto	l4764
 10967  01ED                     l4752:	
 10968  01ED  318F  27D2  3181   	fcall	_mod1_LED
 10969  01F0  2A15               	goto	l4766
 10970  01F1                     l4754:	
 10971  01F1  318F  27C8  3181   	fcall	_mod2_LED
 10972  01F4  2A15               	goto	l4766
 10973  01F5                     l4756:	
 10974  01F5  318F  27E8  3181   	fcall	_mod3_LED
 10975  01F8  2A15               	goto	l4766
 10976  01F9                     l4758:	
 10977  01F9  318F  27DD  3181   	fcall	_mod4_LED
 10978  01FC  2A15               	goto	l4766
 10979  01FD                     l4760:	
 10980  01FD  01C4               	clrf	config_routine@select_mode
 10981  01FE  01C5               	clrf	config_routine@select_mode+1
 10982  01FF  01B0               	clrf	_config_mode	;volatile
 10983  0200  01AF               	clrf	_alarm	;volatile
 10984                           
 10985                           ;main.c: 235:                             break;
 10986  0201  2A15               	goto	l4766
 10987  0202                     l4764:	
 10988                           
 10989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10990                           ; Switch size 1, requested type "simple"
 10991                           ; Number of cases is 1, Range of values is 0 to 0
 10992                           ; switch strategies available:
 10993                           ; Name         Instructions Cycles
 10994                           ; simple_byte            4     3 (average)
 10995                           ; direct_byte            8     6 (fixed)
 10996                           ; jumptable            260     6 (fixed)
 10997                           ;	Chosen strategy is simple_byte
 10998  0202  0845               	movf	config_routine@select_mode+1,w
 10999  0203  3A00               	xorlw	0	; case 0
 11000  0204  1903               	skipnz
 11001  0205  2A07               	goto	l5204
 11002  0206  29FD               	goto	l4760
 11003  0207                     l5204:	
 11004                           
 11005                           ; Switch size 1, requested type "simple"
 11006                           ; Number of cases is 4, Range of values is 1 to 4
 11007                           ; switch strategies available:
 11008                           ; Name         Instructions Cycles
 11009                           ; simple_byte           13     7 (average)
 11010                           ; direct_byte           17     9 (fixed)
 11011                           ; jumptable            263     9 (fixed)
 11012                           ;	Chosen strategy is simple_byte
 11013  0207  0844               	movf	config_routine@select_mode,w
 11014  0208  3A01               	xorlw	1	; case 1
 11015  0209  1903               	skipnz
 11016  020A  29ED               	goto	l4752
 11017  020B  3A03               	xorlw	3	; case 2
 11018  020C  1903               	skipnz
 11019  020D  29F1               	goto	l4754
 11020  020E  3A01               	xorlw	1	; case 3
 11021  020F  1903               	skipnz
 11022  0210  29F5               	goto	l4756
 11023  0211  3A07               	xorlw	7	; case 4
 11024  0212  1903               	skipnz
 11025  0213  29F9               	goto	l4758
 11026  0214  29FD               	goto	l4760
 11027  0215                     l4766:	
 11028                           
 11029                           ;main.c: 238:                         last_ms = clkms;
 11030  0215  087D               	movf	_clkms,w	;volatile
 11031  0216  0020               	movlb	0	; select bank0
 11032  0217  00C3               	movwf	??_config_routine
 11033  0218  0843               	movf	??_config_routine,w
 11034  0219  00B4               	movwf	_last_ms
 11035  021A                     l4768:	
 11036                           
 11037                           ;main.c: 244:                 if(!PORTCbits.RC5){
 11038  021A  0020               	movlb	0	; select bank0
 11039  021B  1A8E               	btfsc	14,5	;volatile
 11040  021C  2A1E               	goto	u1901
 11041  021D  2A1F               	goto	u1900
 11042  021E                     u1901:	
 11043  021E  2A34               	goto	l4776
 11044  021F                     u1900:	
 11045  021F                     l4770:	
 11046                           
 11047                           ;main.c: 245:                     if(checkDebounceSW2()){
 11048  021F  3183  2381  3181   	fcall	_checkDebounceSW2
 11049  0222  3A00               	xorlw	0
 11050  0223  1903               	skipnz
 11051  0224  2A26               	goto	u1911
 11052  0225  2A27               	goto	u1910
 11053  0226                     u1911:	
 11054  0226  2A34               	goto	l4776
 11055  0227                     u1910:	
 11056  0227                     l4772:	
 11057                           
 11058                           ;main.c: 246:                         select_routine(select_mode);
 11059  0227  0020               	movlb	0	; select bank0
 11060  0228  0845               	movf	config_routine@select_mode+1,w
 11061  0229  00C0               	movwf	select_routine@mode+1
 11062  022A  0844               	movf	config_routine@select_mode,w
 11063  022B  00BF               	movwf	select_routine@mode
 11064  022C  3185  25E6  3181   	fcall	_select_routine
 11065  022F                     l4774:	
 11066                           
 11067                           ;main.c: 247:                      last_ms2 = clkms;
 11068  022F  087D               	movf	_clkms,w	;volatile
 11069  0230  0020               	movlb	0	; select bank0
 11070  0231  00C3               	movwf	??_config_routine
 11071  0232  0843               	movf	??_config_routine,w
 11072  0233  00B3               	movwf	_last_ms2
 11073  0234                     l4776:	
 11074                           
 11075                           ;main.c: 250:                    _delay((unsigned long)((1)*(1000000/4000.0)));
 11076  0234  3053               	movlw	83
 11077  0235                     u2377:	
 11078  0235  0B89               	decfsz	9,f
 11079  0236  2A35               	goto	u2377
 11080  0237  0000               	nop
 11081  0238                     l4778:	
 11082                           
 11083                           ;main.c: 252:             }while(config_mode == 1);
 11084  0238  0020               	movlb	0	; select bank0
 11085  0239  0330               	decf	_config_mode,w	;volatile
 11086  023A  1903               	btfsc	3,2
 11087  023B  2A3D               	goto	u1921
 11088  023C  2A3E               	goto	u1920
 11089  023D                     u1921:	
 11090  023D  29D1               	goto	l4742
 11091  023E                     u1920:	
 11092  023E                     l1212:	
 11093  023E  0008               	return
 11094  023F                     __end_of_config_routine:	
 11095                           
 11096                           	psect	text8
 11097  05E6                     __ptext8:	
 11098 ;; *************** function _select_routine *****************
 11099 ;; Defined at:
 11100 ;;		line 198 in file "main.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  mode            2    7[BANK0 ] int 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;  mode_num        2    9[BANK0 ] int 
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;Total ram usage:        4 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:    8
 11121 ;; This function calls:
 11122 ;;		_mod3_LED
 11123 ;; This function is called by:
 11124 ;;		_config_routine
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           
 11129                           ;psect for function _select_routine
 11130  05E6                     _select_routine:	
 11131  05E6                     l4466:	
 11132                           ;incstack = 0
 11133                           ; Regs used in _select_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11134                           
 11135                           
 11136                           ;main.c: 200:     int mode_num = mode;
 11137  05E6  0020               	movlb	0	; select bank0
 11138  05E7  0840               	movf	select_routine@mode+1,w
 11139  05E8  00C2               	movwf	select_routine@mode_num+1
 11140  05E9  083F               	movf	select_routine@mode,w
 11141  05EA  00C1               	movwf	select_routine@mode_num
 11142                           
 11143                           ;main.c: 201:         switch(mode_num){
 11144  05EB  2DF0               	goto	l4478
 11145  05EC                     l4468:	
 11146  05EC  318F  27E8  3185   	fcall	_mod3_LED
 11147  05EF  2E03               	goto	l1195
 11148  05F0                     l4478:	
 11149                           
 11150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11151                           ; Switch size 1, requested type "simple"
 11152                           ; Number of cases is 1, Range of values is 0 to 0
 11153                           ; switch strategies available:
 11154                           ; Name         Instructions Cycles
 11155                           ; simple_byte            4     3 (average)
 11156                           ; direct_byte            8     6 (fixed)
 11157                           ; jumptable            260     6 (fixed)
 11158                           ;	Chosen strategy is simple_byte
 11159  05F0  0842               	movf	select_routine@mode_num+1,w
 11160  05F1  3A00               	xorlw	0	; case 0
 11161  05F2  1903               	skipnz
 11162  05F3  2DF5               	goto	l5206
 11163  05F4  2E03               	goto	l1195
 11164  05F5                     l5206:	
 11165                           
 11166                           ; Switch size 1, requested type "simple"
 11167                           ; Number of cases is 4, Range of values is 1 to 4
 11168                           ; switch strategies available:
 11169                           ; Name         Instructions Cycles
 11170                           ; simple_byte           13     7 (average)
 11171                           ; direct_byte           17     9 (fixed)
 11172                           ; jumptable            263     9 (fixed)
 11173                           ;	Chosen strategy is simple_byte
 11174  05F5  0841               	movf	select_routine@mode_num,w
 11175  05F6  3A01               	xorlw	1	; case 1
 11176  05F7  1903               	skipnz
 11177  05F8  2DEC               	goto	l4468
 11178  05F9  3A03               	xorlw	3	; case 2
 11179  05FA  1903               	skipnz
 11180  05FB  2DEC               	goto	l4468
 11181  05FC  3A01               	xorlw	1	; case 3
 11182  05FD  1903               	skipnz
 11183  05FE  2DEC               	goto	l4468
 11184  05FF  3A07               	xorlw	7	; case 4
 11185  0600  1903               	skipnz
 11186  0601  2DEC               	goto	l4468
 11187  0602  2E03               	goto	l1195
 11188  0603                     l1195:	
 11189  0603  0008               	return
 11190  0604                     __end_of_select_routine:	
 11191                           
 11192                           	psect	text9
 11193  0FE8                     __ptext9:	
 11194 ;; *************** function _mod3_LED *****************
 11195 ;; Defined at:
 11196 ;;		line 362 in file "main.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;		None
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      void 
 11203 ;; Registers used:
 11204 ;;		wreg, status,2, status,0, pclath, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;Total ram usage:        0 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    7
 11217 ;; This function calls:
 11218 ;;		_PWM6_LoadDutyValue
 11219 ;; This function is called by:
 11220 ;;		_select_routine
 11221 ;;		_config_routine
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           
 11226                           ;psect for function _mod3_LED
 11227  0FE8                     _mod3_LED:	
 11228  0FE8                     l4072:	
 11229                           ;incstack = 0
 11230                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 11231                           
 11232                           
 11233                           ;main.c: 363:     LATA = 0;
 11234  0FE8  0020               	movlb	0	; select bank0
 11235  0FE9  0196               	clrf	22	;volatile
 11236  0FEA                     l4074:	
 11237                           
 11238                           ;main.c: 364:     PWM6_LoadDutyValue(0);
 11239  0FEA  3000               	movlw	0
 11240  0FEB  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11241  0FEC  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11242  0FED  3186  2670  318F   	fcall	_PWM6_LoadDutyValue
 11243  0FF0                     l4076:	
 11244  0FF0  0020               	movlb	0	; select bank0
 11245  0FF1  1696               	bsf	22,5	;volatile
 11246  0FF2                     l1264:	
 11247  0FF2  0008               	return
 11248  0FF3                     __end_of_mod3_LED:	
 11249                           
 11250                           	psect	text10
 11251  0FDD                     __ptext10:	
 11252 ;; *************** function _mod4_LED *****************
 11253 ;; Defined at:
 11254 ;;		line 369 in file "main.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, status,0, pclath, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;Total ram usage:        0 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    7
 11275 ;; This function calls:
 11276 ;;		_PWM6_LoadDutyValue
 11277 ;; This function is called by:
 11278 ;;		_config_routine
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           
 11283                           ;psect for function _mod4_LED
 11284  0FDD                     _mod4_LED:	
 11285  0FDD                     l4518:	
 11286                           ;incstack = 0
 11287                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 11288                           
 11289                           
 11290                           ;main.c: 370:     LATA = 0;
 11291  0FDD  0020               	movlb	0	; select bank0
 11292  0FDE  0196               	clrf	22	;volatile
 11293  0FDF                     l4520:	
 11294                           
 11295                           ;main.c: 371:     PWM6_LoadDutyValue(0);
 11296  0FDF  3000               	movlw	0
 11297  0FE0  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11298  0FE1  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11299  0FE2  3186  2670  318F   	fcall	_PWM6_LoadDutyValue
 11300  0FE5                     l4522:	
 11301  0FE5  0020               	movlb	0	; select bank0
 11302  0FE6  1616               	bsf	22,4	;volatile
 11303  0FE7                     l1269:	
 11304  0FE7  0008               	return
 11305  0FE8                     __end_of_mod4_LED:	
 11306                           
 11307                           	psect	text11
 11308  0FC8                     __ptext11:	
 11309 ;; *************** function _mod2_LED *****************
 11310 ;; Defined at:
 11311 ;;		line 357 in file "main.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0, pclath, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;Total ram usage:        0 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    7
 11332 ;; This function calls:
 11333 ;;		_PWM6_LoadDutyValue
 11334 ;; This function is called by:
 11335 ;;		_config_routine
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           
 11340                           ;psect for function _mod2_LED
 11341  0FC8                     _mod2_LED:	
 11342  0FC8                     l4514:	
 11343                           ;incstack = 0
 11344                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 11345                           
 11346                           
 11347                           ;main.c: 358:     LATA = 0;
 11348  0FC8  0020               	movlb	0	; select bank0
 11349  0FC9  0196               	clrf	22	;volatile
 11350  0FCA                     l4516:	
 11351                           
 11352                           ;main.c: 359:     PWM6_LoadDutyValue(1023);
 11353  0FCA  30FF               	movlw	255
 11354  0FCB  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11355  0FCC  3003               	movlw	3
 11356  0FCD  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11357  0FCE  3186  2670  318F   	fcall	_PWM6_LoadDutyValue
 11358  0FD1                     l1259:	
 11359  0FD1  0008               	return
 11360  0FD2                     __end_of_mod2_LED:	
 11361                           
 11362                           	psect	text12
 11363  0FD2                     __ptext12:	
 11364 ;; *************** function _mod1_LED *****************
 11365 ;; Defined at:
 11366 ;;		line 350 in file "main.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;		None
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, status,2, status,0, pclath, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;Total ram usage:        0 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    7
 11387 ;; This function calls:
 11388 ;;		_PWM6_LoadDutyValue
 11389 ;; This function is called by:
 11390 ;;		_config_routine
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           
 11395                           ;psect for function _mod1_LED
 11396  0FD2                     _mod1_LED:	
 11397  0FD2                     l4508:	
 11398                           ;incstack = 0
 11399                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 11400                           
 11401                           
 11402                           ;main.c: 351:     LATA = 0;
 11403  0FD2  0020               	movlb	0	; select bank0
 11404  0FD3  0196               	clrf	22	;volatile
 11405  0FD4                     l4510:	
 11406                           
 11407                           ;main.c: 352:     PWM6_LoadDutyValue(0);
 11408  0FD4  3000               	movlw	0
 11409  0FD5  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11410  0FD6  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11411  0FD7  3186  2670  318F   	fcall	_PWM6_LoadDutyValue
 11412  0FDA                     l4512:	
 11413  0FDA  0020               	movlb	0	; select bank0
 11414  0FDB  1796               	bsf	22,7	;volatile
 11415  0FDC                     l1256:	
 11416  0FDC  0008               	return
 11417  0FDD                     __end_of_mod1_LED:	
 11418                           
 11419                           	psect	text13
 11420  0381                     __ptext13:	
 11421 ;; *************** function _checkDebounceSW2 *****************
 11422 ;; Defined at:
 11423 ;;		line 393 in file "main.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      unsigned char 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;Total ram usage:        7 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    6
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_config_routine
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           
 11452                           ;psect for function _checkDebounceSW2
 11453  0381                     _checkDebounceSW2:	
 11454  0381                     l4524:	
 11455                           ;incstack = 0
 11456                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 11457                           
 11458                           
 11459                           ;main.c: 396:     if(clkms - last_ms2 < 0){
 11460  0381  087D               	movf	_clkms,w	;volatile
 11461  0382  0020               	movlb	0	; select bank0
 11462  0383  00BB               	movwf	??_checkDebounceSW2
 11463  0384  01BC               	clrf	??_checkDebounceSW2+1
 11464  0385  083C               	movf	??_checkDebounceSW2+1,w
 11465  0386  00BE               	movwf	??_checkDebounceSW2+3
 11466  0387  0833               	movf	_last_ms2,w
 11467  0388  023B               	subwf	??_checkDebounceSW2,w
 11468  0389  00BD               	movwf	??_checkDebounceSW2+2
 11469  038A  1C03               	skipc
 11470  038B  03BE               	decf	??_checkDebounceSW2+3,f
 11471  038C  1FBE               	btfss	??_checkDebounceSW2+3,7
 11472  038D  2B8F               	goto	u1661
 11473  038E  2B90               	goto	u1660
 11474  038F                     u1661:	
 11475  038F  2BAF               	goto	l4532
 11476  0390                     u1660:	
 11477  0390                     l4526:	
 11478                           
 11479                           ;main.c: 398:         if ((200 - last_ms2)+ clkms > 40 ){
 11480  0390  087D               	movf	_clkms,w	;volatile
 11481  0391  00BB               	movwf	??_checkDebounceSW2
 11482  0392  01BC               	clrf	??_checkDebounceSW2+1
 11483  0393  083C               	movf	??_checkDebounceSW2+1,w
 11484  0394  00BE               	movwf	??_checkDebounceSW2+3
 11485  0395  0833               	movf	_last_ms2,w
 11486  0396  023B               	subwf	??_checkDebounceSW2,w
 11487  0397  00BD               	movwf	??_checkDebounceSW2+2
 11488  0398  1C03               	skipc
 11489  0399  03BE               	decf	??_checkDebounceSW2+3,f
 11490  039A  083D               	movf	??_checkDebounceSW2+2,w
 11491  039B  3EC8               	addlw	200
 11492  039C  00BF               	movwf	??_checkDebounceSW2+4
 11493  039D  3000               	movlw	0
 11494  039E  3D3E               	addwfc	??_checkDebounceSW2+3,w
 11495  039F  00C0               	movwf	??_checkDebounceSW2+5
 11496  03A0  0840               	movf	??_checkDebounceSW2+5,w
 11497  03A1  3A80               	xorlw	128
 11498  03A2  00C1               	movwf	??_checkDebounceSW2+6
 11499  03A3  3080               	movlw	128
 11500  03A4  0241               	subwf	??_checkDebounceSW2+6,w
 11501  03A5  1D03               	skipz
 11502  03A6  2BA9               	goto	u1675
 11503  03A7  3029               	movlw	41
 11504  03A8  023F               	subwf	??_checkDebounceSW2+4,w
 11505  03A9                     u1675:	
 11506  03A9  1C03               	skipc
 11507  03AA  2BAC               	goto	u1671
 11508  03AB  2BAD               	goto	u1670
 11509  03AC                     u1671:	
 11510  03AC  2BAF               	goto	l4532
 11511  03AD                     u1670:	
 11512  03AD                     l4528:	
 11513                           
 11514                           ;main.c: 399:             return 1;
 11515  03AD  3001               	movlw	1
 11516  03AE  2BC8               	goto	l1281
 11517  03AF                     l4532:	
 11518                           
 11519                           ;main.c: 403:     if(clkms - last_ms2 < 40){
 11520  03AF  087D               	movf	_clkms,w	;volatile
 11521  03B0  0020               	movlb	0	; select bank0
 11522  03B1  00BB               	movwf	??_checkDebounceSW2
 11523  03B2  01BC               	clrf	??_checkDebounceSW2+1
 11524  03B3  083C               	movf	??_checkDebounceSW2+1,w
 11525  03B4  00BE               	movwf	??_checkDebounceSW2+3
 11526  03B5  0833               	movf	_last_ms2,w
 11527  03B6  023B               	subwf	??_checkDebounceSW2,w
 11528  03B7  00BD               	movwf	??_checkDebounceSW2+2
 11529  03B8  1C03               	skipc
 11530  03B9  03BE               	decf	??_checkDebounceSW2+3,f
 11531  03BA  083E               	movf	??_checkDebounceSW2+3,w
 11532  03BB  3A80               	xorlw	128
 11533  03BC  00BF               	movwf	??_checkDebounceSW2+4
 11534  03BD  3080               	movlw	128
 11535  03BE  023F               	subwf	??_checkDebounceSW2+4,w
 11536  03BF  1D03               	skipz
 11537  03C0  2BC3               	goto	u1685
 11538  03C1  3028               	movlw	40
 11539  03C2  023D               	subwf	??_checkDebounceSW2+2,w
 11540  03C3                     u1685:	
 11541  03C3  1803               	skipnc
 11542  03C4  2BC6               	goto	u1681
 11543  03C5  2BC7               	goto	u1680
 11544  03C6                     u1681:	
 11545  03C6  2BAD               	goto	l4528
 11546  03C7                     u1680:	
 11547  03C7                     l4534:	
 11548                           
 11549                           ;main.c: 404:         return 0;
 11550  03C7  3000               	movlw	0
 11551  03C8                     l1281:	
 11552  03C8  0008               	return
 11553  03C9                     __end_of_checkDebounceSW2:	
 11554                           
 11555                           	psect	text14
 11556  03C9                     __ptext14:	
 11557 ;; *************** function _checkDebounceSW1 *****************
 11558 ;; Defined at:
 11559 ;;		line 375 in file "main.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      unsigned char 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, status,0
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;Total ram usage:        7 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    6
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_config_routine
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           
 11588                           ;psect for function _checkDebounceSW1
 11589  03C9                     _checkDebounceSW1:	
 11590  03C9                     l4438:	
 11591                           ;incstack = 0
 11592                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 11593                           
 11594                           
 11595                           ;main.c: 378:     if(clkms - last_ms < 0){
 11596  03C9  087D               	movf	_clkms,w	;volatile
 11597  03CA  0020               	movlb	0	; select bank0
 11598  03CB  00BB               	movwf	??_checkDebounceSW1
 11599  03CC  01BC               	clrf	??_checkDebounceSW1+1
 11600  03CD  083C               	movf	??_checkDebounceSW1+1,w
 11601  03CE  00BE               	movwf	??_checkDebounceSW1+3
 11602  03CF  0834               	movf	_last_ms,w
 11603  03D0  023B               	subwf	??_checkDebounceSW1,w
 11604  03D1  00BD               	movwf	??_checkDebounceSW1+2
 11605  03D2  1C03               	skipc
 11606  03D3  03BE               	decf	??_checkDebounceSW1+3,f
 11607  03D4  1FBE               	btfss	??_checkDebounceSW1+3,7
 11608  03D5  2BD7               	goto	u1621
 11609  03D6  2BD8               	goto	u1620
 11610  03D7                     u1621:	
 11611  03D7  2BF7               	goto	l4446
 11612  03D8                     u1620:	
 11613  03D8                     l4440:	
 11614                           
 11615                           ;main.c: 380:         if ((200 - last_ms)+ clkms > 40 ){
 11616  03D8  087D               	movf	_clkms,w	;volatile
 11617  03D9  00BB               	movwf	??_checkDebounceSW1
 11618  03DA  01BC               	clrf	??_checkDebounceSW1+1
 11619  03DB  083C               	movf	??_checkDebounceSW1+1,w
 11620  03DC  00BE               	movwf	??_checkDebounceSW1+3
 11621  03DD  0834               	movf	_last_ms,w
 11622  03DE  023B               	subwf	??_checkDebounceSW1,w
 11623  03DF  00BD               	movwf	??_checkDebounceSW1+2
 11624  03E0  1C03               	skipc
 11625  03E1  03BE               	decf	??_checkDebounceSW1+3,f
 11626  03E2  083D               	movf	??_checkDebounceSW1+2,w
 11627  03E3  3EC8               	addlw	200
 11628  03E4  00BF               	movwf	??_checkDebounceSW1+4
 11629  03E5  3000               	movlw	0
 11630  03E6  3D3E               	addwfc	??_checkDebounceSW1+3,w
 11631  03E7  00C0               	movwf	??_checkDebounceSW1+5
 11632  03E8  0840               	movf	??_checkDebounceSW1+5,w
 11633  03E9  3A80               	xorlw	128
 11634  03EA  00C1               	movwf	??_checkDebounceSW1+6
 11635  03EB  3080               	movlw	128
 11636  03EC  0241               	subwf	??_checkDebounceSW1+6,w
 11637  03ED  1D03               	skipz
 11638  03EE  2BF1               	goto	u1635
 11639  03EF  3029               	movlw	41
 11640  03F0  023F               	subwf	??_checkDebounceSW1+4,w
 11641  03F1                     u1635:	
 11642  03F1  1C03               	skipc
 11643  03F2  2BF4               	goto	u1631
 11644  03F3  2BF5               	goto	u1630
 11645  03F4                     u1631:	
 11646  03F4  2BF7               	goto	l4446
 11647  03F5                     u1630:	
 11648  03F5                     l4442:	
 11649                           
 11650                           ;main.c: 381:             return 1;
 11651  03F5  3001               	movlw	1
 11652  03F6  2C10               	goto	l1274
 11653  03F7                     l4446:	
 11654                           
 11655                           ;main.c: 385:     if(clkms - last_ms < 40){
 11656  03F7  087D               	movf	_clkms,w	;volatile
 11657  03F8  0020               	movlb	0	; select bank0
 11658  03F9  00BB               	movwf	??_checkDebounceSW1
 11659  03FA  01BC               	clrf	??_checkDebounceSW1+1
 11660  03FB  083C               	movf	??_checkDebounceSW1+1,w
 11661  03FC  00BE               	movwf	??_checkDebounceSW1+3
 11662  03FD  0834               	movf	_last_ms,w
 11663  03FE  023B               	subwf	??_checkDebounceSW1,w
 11664  03FF  00BD               	movwf	??_checkDebounceSW1+2
 11665  0400  1C03               	skipc
 11666  0401  03BE               	decf	??_checkDebounceSW1+3,f
 11667  0402  083E               	movf	??_checkDebounceSW1+3,w
 11668  0403  3A80               	xorlw	128
 11669  0404  00BF               	movwf	??_checkDebounceSW1+4
 11670  0405  3080               	movlw	128
 11671  0406  023F               	subwf	??_checkDebounceSW1+4,w
 11672  0407  1D03               	skipz
 11673  0408  2C0B               	goto	u1645
 11674  0409  3028               	movlw	40
 11675  040A  023D               	subwf	??_checkDebounceSW1+2,w
 11676  040B                     u1645:	
 11677  040B  1803               	skipnc
 11678  040C  2C0E               	goto	u1641
 11679  040D  2C0F               	goto	u1640
 11680  040E                     u1641:	
 11681  040E  2BF5               	goto	l4442
 11682  040F                     u1640:	
 11683  040F                     l4448:	
 11684                           
 11685                           ;main.c: 386:         return 0;
 11686  040F  3000               	movlw	0
 11687  0410                     l1274:	
 11688  0410  0008               	return
 11689  0411                     __end_of_checkDebounceSW1:	
 11690                           
 11691                           	psect	text15
 11692  023F                     __ptext15:	
 11693 ;; *************** function _all_LED *****************
 11694 ;; Defined at:
 11695 ;;		line 267 in file "main.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;		None
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;		None
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg, status,2, status,0, pclath, cstack
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;Total ram usage:        1 bytes
 11714 ;; Hardware stack levels used:    1
 11715 ;; Hardware stack levels required when called:    7
 11716 ;; This function calls:
 11717 ;;		_PWM6_LoadDutyValue
 11718 ;; This function is called by:
 11719 ;;		_config_routine
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           
 11724                           ;psect for function _all_LED
 11725  023F                     _all_LED:	
 11726  023F                     l1215:	
 11727                           ;incstack = 0
 11728                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 11729                           ;main.c: 269:        do { LATAbits.LATA7 = 1; } while(0);
 11730                           
 11731  023F  0020               	movlb	0	; select bank0
 11732  0240  1796               	bsf	22,7	;volatile
 11733  0241                     l4484:	
 11734                           
 11735                           ;main.c: 270:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11736  0241  3021               	movlw	33
 11737  0242  0020               	movlb	0	; select bank0
 11738  0243  00BF               	movwf	??_all_LED
 11739  0244  3076               	movlw	118
 11740  0245                     u2387:	
 11741  0245  0B89               	decfsz	9,f
 11742  0246  2A45               	goto	u2387
 11743  0247  0BBF               	decfsz	??_all_LED,f
 11744  0248  2A45               	goto	u2387
 11745  0249  0000               	nop
 11746  024A                     l4486:	
 11747  024A  0020               	movlb	0	; select bank0
 11748  024B  1396               	bcf	22,7	;volatile
 11749  024C                     l1218:	
 11750                           
 11751                           ;main.c: 272:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11752  024C  3021               	movlw	33
 11753  024D  0020               	movlb	0	; select bank0
 11754  024E  00BF               	movwf	??_all_LED
 11755  024F  3076               	movlw	118
 11756  0250                     u2397:	
 11757  0250  0B89               	decfsz	9,f
 11758  0251  2A50               	goto	u2397
 11759  0252  0BBF               	decfsz	??_all_LED,f
 11760  0253  2A50               	goto	u2397
 11761  0254  0000               	nop
 11762  0255                     l4488:	
 11763                           
 11764                           ;main.c: 274:        PWM6_LoadDutyValue(1023);
 11765  0255  30FF               	movlw	255
 11766  0256  0020               	movlb	0	; select bank0
 11767  0257  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11768  0258  3003               	movlw	3
 11769  0259  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11770  025A  3186  2670  3182   	fcall	_PWM6_LoadDutyValue
 11771  025D                     l4490:	
 11772                           
 11773                           ;main.c: 275:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11774  025D  3021               	movlw	33
 11775  025E  0020               	movlb	0	; select bank0
 11776  025F  00BF               	movwf	??_all_LED
 11777  0260  3076               	movlw	118
 11778  0261                     u2407:	
 11779  0261  0B89               	decfsz	9,f
 11780  0262  2A61               	goto	u2407
 11781  0263  0BBF               	decfsz	??_all_LED,f
 11782  0264  2A61               	goto	u2407
 11783  0265  0000               	nop
 11784                           
 11785                           ;main.c: 277:         PWM6_LoadDutyValue(0);
 11786  0266  3000               	movlw	0
 11787  0267  0020               	movlb	0	; select bank0
 11788  0268  00BB               	movwf	PWM6_LoadDutyValue@dutyValue
 11789  0269  00BC               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11790  026A  3186  2670  3182   	fcall	_PWM6_LoadDutyValue
 11791  026D                     l4492:	
 11792                           
 11793                           ;main.c: 278:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11794  026D  3021               	movlw	33
 11795  026E  0020               	movlb	0	; select bank0
 11796  026F  00BF               	movwf	??_all_LED
 11797  0270  3076               	movlw	118
 11798  0271                     u2417:	
 11799  0271  0B89               	decfsz	9,f
 11800  0272  2A71               	goto	u2417
 11801  0273  0BBF               	decfsz	??_all_LED,f
 11802  0274  2A71               	goto	u2417
 11803  0275  0000               	nop
 11804  0276                     l4494:	
 11805  0276  0020               	movlb	0	; select bank0
 11806  0277  1696               	bsf	22,5	;volatile
 11807  0278                     l4496:	
 11808                           
 11809                           ;main.c: 280:          _delay((unsigned long)((100)*(1000000/4000.0)));
 11810  0278  3021               	movlw	33
 11811  0279  0020               	movlb	0	; select bank0
 11812  027A  00BF               	movwf	??_all_LED
 11813  027B  3076               	movlw	118
 11814  027C                     u2427:	
 11815  027C  0B89               	decfsz	9,f
 11816  027D  2A7C               	goto	u2427
 11817  027E  0BBF               	decfsz	??_all_LED,f
 11818  027F  2A7C               	goto	u2427
 11819  0280  0000               	nop
 11820  0281                     l4498:	
 11821  0281  0020               	movlb	0	; select bank0
 11822  0282  1296               	bcf	22,5	;volatile
 11823  0283                     l4500:	
 11824                           
 11825                           ;main.c: 282:        _delay((unsigned long)((100)*(1000000/4000.0)));
 11826  0283  3021               	movlw	33
 11827  0284  0020               	movlb	0	; select bank0
 11828  0285  00BF               	movwf	??_all_LED
 11829  0286  3076               	movlw	118
 11830  0287                     u2437:	
 11831  0287  0B89               	decfsz	9,f
 11832  0288  2A87               	goto	u2437
 11833  0289  0BBF               	decfsz	??_all_LED,f
 11834  028A  2A87               	goto	u2437
 11835  028B  0000               	nop
 11836  028C                     l4502:	
 11837  028C  0020               	movlb	0	; select bank0
 11838  028D  1616               	bsf	22,4	;volatile
 11839  028E                     l4504:	
 11840                           
 11841                           ;main.c: 284:         _delay((unsigned long)((100)*(1000000/4000.0)));
 11842  028E  3021               	movlw	33
 11843  028F  0020               	movlb	0	; select bank0
 11844  0290  00BF               	movwf	??_all_LED
 11845  0291  3076               	movlw	118
 11846  0292                     u2447:	
 11847  0292  0B89               	decfsz	9,f
 11848  0293  2A92               	goto	u2447
 11849  0294  0BBF               	decfsz	??_all_LED,f
 11850  0295  2A92               	goto	u2447
 11851  0296  0000               	nop
 11852  0297                     l4506:	
 11853  0297  0020               	movlb	0	; select bank0
 11854  0298  1216               	bcf	22,4	;volatile
 11855  0299                     l1227:	
 11856  0299  0008               	return
 11857  029A                     __end_of_all_LED:	
 11858                           
 11859                           	psect	text16
 11860  0670                     __ptext16:	
 11861 ;; *************** function _PWM6_LoadDutyValue *****************
 11862 ;; Defined at:
 11863 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, status,2, status,0
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;Total ram usage:        4 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    6
 11884 ;; This function calls:
 11885 ;;		Nothing
 11886 ;; This function is called by:
 11887 ;;		_main
 11888 ;;		_all_LED
 11889 ;;		_mod1_LED
 11890 ;;		_mod2_LED
 11891 ;;		_mod3_LED
 11892 ;;		_mod4_LED
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           
 11897                           ;psect for function _PWM6_LoadDutyValue
 11898  0670                     _PWM6_LoadDutyValue:	
 11899  0670                     l3876:	
 11900                           ;incstack = 0
 11901                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11902                           
 11903                           
 11904                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11905  0670  0020               	movlb	0	; select bank0
 11906  0671  083C               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11907  0672  00BE               	movwf	??_PWM6_LoadDutyValue+1
 11908  0673  083B               	movf	PWM6_LoadDutyValue@dutyValue,w
 11909  0674  00BD               	movwf	??_PWM6_LoadDutyValue
 11910  0675  36BE               	lsrf	??_PWM6_LoadDutyValue+1,f
 11911  0676  0CBD               	rrf	??_PWM6_LoadDutyValue,f
 11912  0677  36BE               	lsrf	??_PWM6_LoadDutyValue+1,f
 11913  0678  0CBD               	rrf	??_PWM6_LoadDutyValue,f
 11914  0679  083D               	movf	??_PWM6_LoadDutyValue,w
 11915  067A  0027               	movlb	7	; select bank7
 11916  067B  008D               	movwf	13	;volatile
 11917                           
 11918                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 11919  067C  0020               	movlb	0	; select bank0
 11920  067D  083B               	movf	PWM6_LoadDutyValue@dutyValue,w
 11921  067E  3903               	andlw	3
 11922  067F  00BD               	movwf	??_PWM6_LoadDutyValue
 11923  0680  3005               	movlw	5
 11924  0681                     u1425:	
 11925  0681  35BD               	lslf	??_PWM6_LoadDutyValue,f
 11926  0682  3EFF               	addlw	-1
 11927  0683  1D03               	skipz
 11928  0684  2E81               	goto	u1425
 11929  0685  353D               	lslf	??_PWM6_LoadDutyValue,w
 11930  0686  0027               	movlb	7	; select bank7
 11931  0687  008C               	movwf	12	;volatile
 11932  0688                     l916:	
 11933  0688  0008               	return
 11934  0689                     __end_of_PWM6_LoadDutyValue:	
 11935                           
 11936                           	psect	text17
 11937  0F14                     __ptext17:	
 11938 ;; *************** function _TMR0_StartTimer *****************
 11939 ;; Defined at:
 11940 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		None
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    6
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_main
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           
 11969                           ;psect for function _TMR0_StartTimer
 11970  0F14                     _TMR0_StartTimer:	
 11971  0F14                     l4734:	
 11972                           ;incstack = 0
 11973                           ; Regs used in _TMR0_StartTimer: []
 11974                           
 11975                           
 11976                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 11977  0F14  0020               	movlb	0	; select bank0
 11978  0F15  179E               	bsf	30,7	;volatile
 11979  0F16                     l1512:	
 11980  0F16  0008               	return
 11981  0F17                     __end_of_TMR0_StartTimer:	
 11982                           
 11983                           	psect	text18
 11984  0620                     __ptext18:	
 11985 ;; *************** function _SYSTEM_Initialize *****************
 11986 ;; Defined at:
 11987 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, pclath, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;Total ram usage:        0 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    8
 12008 ;; This function calls:
 12009 ;;		_ADCC_Initialize
 12010 ;;		_EXT_INT_Initialize
 12011 ;;		_OSCILLATOR_Initialize
 12012 ;;		_PIN_MANAGER_Initialize
 12013 ;;		_PMD_Initialize
 12014 ;;		_PWM6_Initialize
 12015 ;;		_TMR0_Initialize
 12016 ;;		_TMR1_Initialize
 12017 ;;		_TMR2_Initialize
 12018 ;; This function is called by:
 12019 ;;		_main
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           
 12024                           ;psect for function _SYSTEM_Initialize
 12025  0620                     _SYSTEM_Initialize:	
 12026  0620                     l4686:	
 12027                           ;incstack = 0
 12028                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12029                           
 12030                           
 12031                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12032  0620  318F  27A5  3186   	fcall	_PMD_Initialize
 12033  0623                     l4688:	
 12034                           
 12035                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12036  0623  3183  2338  3186   	fcall	_PIN_MANAGER_Initialize
 12037  0626                     l4690:	
 12038                           
 12039                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12040  0626  318F  27BF  3186   	fcall	_OSCILLATOR_Initialize
 12041  0629                     l4692:	
 12042                           
 12043                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 12044  0629  3187  27DA  3186   	fcall	_PWM6_Initialize
 12045  062C                     l4694:	
 12046                           
 12047                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12048  062C  3186  26E9  3186   	fcall	_ADCC_Initialize
 12049  062F                     l4696:	
 12050                           
 12051                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 12052  062F  3186  26A2  3186   	fcall	_TMR2_Initialize
 12053  0632                     l4698:	
 12054                           
 12055                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12056  0632  3187  27CC  3186   	fcall	_EXT_INT_Initialize
 12057  0635                     l4700:	
 12058                           
 12059                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 12060  0635  3185  25C7  3186   	fcall	_TMR1_Initialize
 12061  0638                     l4702:	
 12062                           
 12063                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 12064  0638  3187  2715  3186   	fcall	_TMR0_Initialize
 12065  063B                     l439:	
 12066  063B  0008               	return
 12067  063C                     __end_of_SYSTEM_Initialize:	
 12068                           
 12069                           	psect	text19
 12070  06A2                     __ptext19:	
 12071 ;; *************** function _TMR2_Initialize *****************
 12072 ;; Defined at:
 12073 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;		None
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      void 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2, status,0, pclath, cstack
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;Total ram usage:        0 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; Hardware stack levels required when called:    7
 12094 ;; This function calls:
 12095 ;;		_TMR2_SetInterruptHandler
 12096 ;; This function is called by:
 12097 ;;		_SYSTEM_Initialize
 12098 ;; This function uses a non-reentrant model
 12099 ;;
 12100                           
 12101                           
 12102                           ;psect for function _TMR2_Initialize
 12103  06A2                     _TMR2_Initialize:	
 12104  06A2                     l4366:	
 12105                           ;incstack = 0
 12106                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12107                           
 12108                           
 12109                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 12110  06A2  3001               	movlw	1
 12111  06A3  0025               	movlb	5	; select bank5
 12112  06A4  0090               	movwf	16	;volatile
 12113                           
 12114                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 12115  06A5  3020               	movlw	32
 12116  06A6  008F               	movwf	15	;volatile
 12117  06A7                     l4368:	
 12118                           
 12119                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12120  06A7  0191               	clrf	17	;volatile
 12121  06A8                     l4370:	
 12122                           
 12123                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 12124  06A8  309B               	movlw	155
 12125  06A9  008D               	movwf	13	;volatile
 12126                           
 12127                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12128  06AA  018C               	clrf	12	;volatile
 12129  06AB                     l4372:	
 12130                           
 12131                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 12132  06AB  002E               	movlb	14	; select bank14
 12133  06AC  1090               	bcf	16,1	;volatile
 12134  06AD                     l4374:	
 12135                           
 12136                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 12137  06AD  149A               	bsf	26,1	;volatile
 12138  06AE                     l4376:	
 12139                           
 12140                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12141  06AE  30F6               	movlw	low _TMR2_DefaultInterruptHandler
 12142  06AF  0020               	movlb	0	; select bank0
 12143  06B0  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12144  06B1  300E               	movlw	high _TMR2_DefaultInterruptHandler
 12145  06B2  00BC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12146  06B3  318F  276B  3186   	fcall	_TMR2_SetInterruptHandler
 12147  06B6                     l4378:	
 12148                           
 12149                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 12150  06B6  30B1               	movlw	177
 12151  06B7  0025               	movlb	5	; select bank5
 12152  06B8  008E               	movwf	14	;volatile
 12153  06B9                     l998:	
 12154  06B9  0008               	return
 12155  06BA                     __end_of_TMR2_Initialize:	
 12156                           
 12157                           	psect	text20
 12158  0F6B                     __ptext20:	
 12159 ;; *************** function _TMR2_SetInterruptHandler *****************
 12160 ;; Defined at:
 12161 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12164 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  1    wreg      void 
 12169 ;; Registers used:
 12170 ;;		wreg
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:        2 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; Hardware stack levels required when called:    6
 12183 ;; This function calls:
 12184 ;;		Nothing
 12185 ;; This function is called by:
 12186 ;;		_TMR2_Initialize
 12187 ;;		_main
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           
 12192                           ;psect for function _TMR2_SetInterruptHandler
 12193  0F6B                     _TMR2_SetInterruptHandler:	
 12194  0F6B                     l4050:	
 12195                           ;incstack = 0
 12196                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12197                           
 12198                           
 12199                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 12200  0F6B  0020               	movlb	0	; select bank0
 12201  0F6C  083C               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12202  0F6D  00CD               	movwf	_TMR2_InterruptHandler+1
 12203  0F6E  083B               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12204  0F6F  00CC               	movwf	_TMR2_InterruptHandler
 12205  0F70                     l1041:	
 12206  0F70  0008               	return
 12207  0F71                     __end_of_TMR2_SetInterruptHandler:	
 12208                           
 12209                           	psect	text21
 12210  05C7                     __ptext21:	
 12211 ;; *************** function _TMR1_Initialize *****************
 12212 ;; Defined at:
 12213 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;		None
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1    wreg      void 
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0, pclath, cstack
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12231 ;;Total ram usage:        0 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    7
 12234 ;; This function calls:
 12235 ;;		_TMR1_SetInterruptHandler
 12236 ;; This function is called by:
 12237 ;;		_SYSTEM_Initialize
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           
 12242                           ;psect for function _TMR1_Initialize
 12243  05C7                     _TMR1_Initialize:	
 12244  05C7                     l4380:	
 12245                           ;incstack = 0
 12246                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12247                           
 12248                           
 12249                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12250  05C7  0024               	movlb	4	; select bank4
 12251  05C8  018F               	clrf	15	;volatile
 12252                           
 12253                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12254  05C9  0190               	clrf	16	;volatile
 12255  05CA                     l4382:	
 12256                           
 12257                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12258  05CA  3004               	movlw	4
 12259  05CB  0091               	movwf	17	;volatile
 12260  05CC                     l4384:	
 12261                           
 12262                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 12263  05CC  30E1               	movlw	225
 12264  05CD  008D               	movwf	13	;volatile
 12265  05CE                     l4386:	
 12266                           
 12267                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 12268  05CE  30BA               	movlw	186
 12269  05CF  008C               	movwf	12	;volatile
 12270  05D0                     l4388:	
 12271                           
 12272                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12273  05D0  080D               	movf	13,w	;volatile
 12274  05D1  0020               	movlb	0	; select bank0
 12275  05D2  00D1               	movwf	_timer1ReloadVal+1	;volatile
 12276  05D3  0024               	movlb	4	; select bank4
 12277  05D4  080C               	movf	12,w	;volatile
 12278  05D5  0020               	movlb	0	; select bank0
 12279  05D6  00D0               	movwf	_timer1ReloadVal	;volatile
 12280  05D7                     l4390:	
 12281                           
 12282                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 12283  05D7  002E               	movlb	14	; select bank14
 12284  05D8  1010               	bcf	16,0	;volatile
 12285  05D9                     l4392:	
 12286                           
 12287                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12288  05D9  141A               	bsf	26,0	;volatile
 12289  05DA                     l4394:	
 12290                           
 12291                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12292  05DA  30F5               	movlw	low _TMR1_DefaultInterruptHandler
 12293  05DB  0020               	movlb	0	; select bank0
 12294  05DC  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12295  05DD  300E               	movlw	high _TMR1_DefaultInterruptHandler
 12296  05DE  00BC               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12297  05DF  318F  2765  3185   	fcall	_TMR1_SetInterruptHandler
 12298  05E2                     l4396:	
 12299                           
 12300                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 12301  05E2  3015               	movlw	21
 12302  05E3  0024               	movlb	4	; select bank4
 12303  05E4  008E               	movwf	14	;volatile
 12304  05E5                     l869:	
 12305  05E5  0008               	return
 12306  05E6                     __end_of_TMR1_Initialize:	
 12307                           
 12308                           	psect	text22
 12309  0F65                     __ptext22:	
 12310 ;; *************** function _TMR1_SetInterruptHandler *****************
 12311 ;; Defined at:
 12312 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12315 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;Total ram usage:        2 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    6
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_TMR1_Initialize
 12338 ;;		_main
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           
 12343                           ;psect for function _TMR1_SetInterruptHandler
 12344  0F65                     _TMR1_SetInterruptHandler:	
 12345  0F65                     l4028:	
 12346                           ;incstack = 0
 12347                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12348                           
 12349                           
 12350                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 12351  0F65  0020               	movlb	0	; select bank0
 12352  0F66  083C               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12353  0F67  00CF               	movwf	_TMR1_InterruptHandler+1
 12354  0F68  083B               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12355  0F69  00CE               	movwf	_TMR1_InterruptHandler
 12356  0F6A                     l899:	
 12357  0F6A  0008               	return
 12358  0F6B                     __end_of_TMR1_SetInterruptHandler:	
 12359                           
 12360                           	psect	text23
 12361  0715                     __ptext23:	
 12362 ;; *************** function _TMR0_Initialize *****************
 12363 ;; Defined at:
 12364 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;		None
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2, status,0, pclath, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;Total ram usage:        0 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    7
 12385 ;; This function calls:
 12386 ;;		_TMR0_SetInterruptHandler
 12387 ;; This function is called by:
 12388 ;;		_SYSTEM_Initialize
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           
 12393                           ;psect for function _TMR0_Initialize
 12394  0715                     _TMR0_Initialize:	
 12395  0715                     l4398:	
 12396                           ;incstack = 0
 12397                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12398                           
 12399                           
 12400                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 12401  0715  3095               	movlw	149
 12402  0716  0020               	movlb	0	; select bank0
 12403  0717  009F               	movwf	31	;volatile
 12404                           
 12405                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 12406  0718  30F1               	movlw	241
 12407  0719  009D               	movwf	29	;volatile
 12408  071A                     l4400:	
 12409                           
 12410                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12411  071A  019C               	clrf	28	;volatile
 12412  071B                     l4402:	
 12413                           
 12414                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12415  071B  002E               	movlb	14	; select bank14
 12416  071C  128C               	bcf	12,5	;volatile
 12417  071D                     l4404:	
 12418                           
 12419                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12420  071D  1696               	bsf	22,5	;volatile
 12421  071E                     l4406:	
 12422                           
 12423                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12424  071E  30F4               	movlw	low _TMR0_DefaultInterruptHandler
 12425  071F  0020               	movlb	0	; select bank0
 12426  0720  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12427  0721  300E               	movlw	high _TMR0_DefaultInterruptHandler
 12428  0722  00BC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12429  0723  318F  275F  3187   	fcall	_TMR0_SetInterruptHandler
 12430  0726                     l4408:	
 12431                           
 12432                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 12433  0726  300B               	movlw	11
 12434  0727  0020               	movlb	0	; select bank0
 12435  0728  009E               	movwf	30	;volatile
 12436  0729                     l1509:	
 12437  0729  0008               	return
 12438  072A                     __end_of_TMR0_Initialize:	
 12439                           
 12440                           	psect	text24
 12441  0F5F                     __ptext24:	
 12442 ;; *************** function _TMR0_SetInterruptHandler *****************
 12443 ;; Defined at:
 12444 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12447 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 12448 ;; Auto vars:     Size  Location     Type
 12449 ;;		None
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  1    wreg      void 
 12452 ;; Registers used:
 12453 ;;		wreg
 12454 ;; Tracked objects:
 12455 ;;		On entry : 0/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;Total ram usage:        2 bytes
 12464 ;; Hardware stack levels used:    1
 12465 ;; Hardware stack levels required when called:    6
 12466 ;; This function calls:
 12467 ;;		Nothing
 12468 ;; This function is called by:
 12469 ;;		_main
 12470 ;;		_TMR0_Initialize
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           
 12475                           ;psect for function _TMR0_SetInterruptHandler
 12476  0F5F                     _TMR0_SetInterruptHandler:	
 12477  0F5F                     l4070:	
 12478                           ;incstack = 0
 12479                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12480                           
 12481                           
 12482                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 12483  0F5F  0020               	movlb	0	; select bank0
 12484  0F60  083C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12485  0F61  00CB               	movwf	_TMR0_InterruptHandler+1
 12486  0F62  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12487  0F63  00CA               	movwf	_TMR0_InterruptHandler
 12488  0F64                     l1531:	
 12489  0F64  0008               	return
 12490  0F65                     __end_of_TMR0_SetInterruptHandler:	
 12491                           
 12492                           	psect	text25
 12493  07DA                     __ptext25:	
 12494 ;; *************** function _PWM6_Initialize *****************
 12495 ;; Defined at:
 12496 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      void 
 12503 ;; Registers used:
 12504 ;;		wreg, status,2, status,0
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    6
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_SYSTEM_Initialize
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           
 12525                           ;psect for function _PWM6_Initialize
 12526  07DA                     _PWM6_Initialize:	
 12527  07DA                     l4356:	
 12528                           ;incstack = 0
 12529                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12530                           
 12531                           
 12532                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12533  07DA  3080               	movlw	128
 12534  07DB  0027               	movlb	7	; select bank7
 12535  07DC  008E               	movwf	14	;volatile
 12536                           
 12537                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 12538  07DD  303E               	movlw	62
 12539  07DE  008D               	movwf	13	;volatile
 12540                           
 12541                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12542  07DF  3040               	movlw	64
 12543  07E0  008C               	movwf	12	;volatile
 12544  07E1                     l4358:	
 12545                           
 12546                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12547  07E1  0024               	movlb	4	; select bank4
 12548  07E2  081F               	movf	31,w	;volatile
 12549  07E3  39F3               	andlw	-13
 12550  07E4  3804               	iorlw	4
 12551  07E5  009F               	movwf	31	;volatile
 12552  07E6                     l913:	
 12553  07E6  0008               	return
 12554  07E7                     __end_of_PWM6_Initialize:	
 12555                           
 12556                           	psect	text26
 12557  0FA5                     __ptext26:	
 12558 ;; *************** function _PMD_Initialize *****************
 12559 ;; Defined at:
 12560 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;		None
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		status,2
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;Total ram usage:        0 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    6
 12581 ;; This function calls:
 12582 ;;		Nothing
 12583 ;; This function is called by:
 12584 ;;		_SYSTEM_Initialize
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           
 12589                           ;psect for function _PMD_Initialize
 12590  0FA5                     _PMD_Initialize:	
 12591  0FA5                     l4292:	
 12592                           ;incstack = 0
 12593                           ; Regs used in _PMD_Initialize: [status,2]
 12594                           
 12595                           
 12596                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12597  0FA5  002F               	movlb	15	; select bank15
 12598  0FA6  0196               	clrf	22	;volatile
 12599                           
 12600                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12601  0FA7  0197               	clrf	23	;volatile
 12602                           
 12603                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12604  0FA8  0198               	clrf	24	;volatile
 12605                           
 12606                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12607  0FA9  0199               	clrf	25	;volatile
 12608                           
 12609                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12610  0FAA  019A               	clrf	26	;volatile
 12611                           
 12612                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12613  0FAB  019B               	clrf	27	;volatile
 12614  0FAC                     l445:	
 12615  0FAC  0008               	return
 12616  0FAD                     __end_of_PMD_Initialize:	
 12617                           
 12618                           	psect	text27
 12619  0338                     __ptext27:	
 12620 ;; *************** function _PIN_MANAGER_Initialize *****************
 12621 ;; Defined at:
 12622 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;		None
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;Total ram usage:        0 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:    6
 12643 ;; This function calls:
 12644 ;;		Nothing
 12645 ;; This function is called by:
 12646 ;;		_SYSTEM_Initialize
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           
 12651                           ;psect for function _PIN_MANAGER_Initialize
 12652  0338                     _PIN_MANAGER_Initialize:	
 12653  0338                     l4294:	
 12654                           ;incstack = 0
 12655                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12656                           
 12657                           
 12658                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12659  0338  0020               	movlb	0	; select bank0
 12660  0339  019A               	clrf	26	;volatile
 12661                           
 12662                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12663  033A  0199               	clrf	25	;volatile
 12664                           
 12665                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12666  033B  0196               	clrf	22	;volatile
 12667                           
 12668                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12669  033C  0197               	clrf	23	;volatile
 12670                           
 12671                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12672  033D  0198               	clrf	24	;volatile
 12673  033E                     l4296:	
 12674                           
 12675                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12676  033E  3007               	movlw	7
 12677  033F  0095               	movwf	21	;volatile
 12678  0340                     l4298:	
 12679                           
 12680                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 12681  0340  300F               	movlw	15
 12682  0341  0091               	movwf	17	;volatile
 12683  0342                     l4300:	
 12684                           
 12685                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12686  0342  30FF               	movlw	255
 12687  0343  0092               	movwf	18	;volatile
 12688  0344                     l4302:	
 12689                           
 12690                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 12691  0344  30FF               	movlw	255
 12692  0345  0093               	movwf	19	;volatile
 12693  0346                     l4304:	
 12694                           
 12695                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12696  0346  30FF               	movlw	255
 12697  0347  0094               	movwf	20	;volatile
 12698  0348                     l4306:	
 12699                           
 12700                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 12701  0348  30FF               	movlw	255
 12702  0349  003E               	movlb	30	; select bank30
 12703  034A  00D9               	movwf	89	;volatile
 12704  034B                     l4308:	
 12705                           
 12706                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 12707  034B  30C7               	movlw	199
 12708  034C  00CE               	movwf	78	;volatile
 12709  034D                     l4310:	
 12710                           
 12711                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 12712  034D  30EF               	movlw	239
 12713  034E  00C3               	movwf	67	;volatile
 12714  034F                     l4312:	
 12715                           
 12716                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 12717  034F  3007               	movlw	7
 12718  0350  00E4               	movwf	100	;volatile
 12719  0351                     l4314:	
 12720                           
 12721                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 12722  0351  30FF               	movlw	255
 12723  0352  00B8               	movwf	56	;volatile
 12724                           
 12725                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 12726  0353  01DA               	clrf	90	;volatile
 12727                           
 12728                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 12729  0354  01E5               	clrf	101	;volatile
 12730                           
 12731                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 12732  0355  01C4               	clrf	68	;volatile
 12733                           
 12734                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 12735  0356  01B9               	clrf	57	;volatile
 12736                           
 12737                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 12738  0357  01CF               	clrf	79	;volatile
 12739                           
 12740                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 12741  0358  01E6               	clrf	102	;volatile
 12742                           
 12743                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 12744  0359  01BA               	clrf	58	;volatile
 12745                           
 12746                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 12747  035A  01C5               	clrf	69	;volatile
 12748                           
 12749                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 12750  035B  01D0               	clrf	80	;volatile
 12751                           
 12752                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 12753  035C  01DB               	clrf	91	;volatile
 12754  035D                     l4316:	
 12755                           
 12756                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 12757  035D  30FF               	movlw	255
 12758  035E  00BB               	movwf	59	;volatile
 12759  035F                     l4318:	
 12760                           
 12761                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 12762  035F  30FF               	movlw	255
 12763  0360  00C6               	movwf	70	;volatile
 12764  0361                     l4320:	
 12765                           
 12766                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 12767  0361  30FF               	movlw	255
 12768  0362  00D1               	movwf	81	;volatile
 12769  0363                     l4322:	
 12770                           
 12771                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 12772  0363  30FF               	movlw	255
 12773  0364  00DC               	movwf	92	;volatile
 12774  0365                     l4324:	
 12775                           
 12776                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 12777  0365  3007               	movlw	7
 12778  0366  00E7               	movwf	103	;volatile
 12779  0367                     l4326:	
 12780                           
 12781                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 12782  0367  30FF               	movlw	255
 12783  0368  00BC               	movwf	60	;volatile
 12784  0369                     l4328:	
 12785                           
 12786                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 12787  0369  30FF               	movlw	255
 12788  036A  00C7               	movwf	71	;volatile
 12789  036B                     l4330:	
 12790                           
 12791                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 12792  036B  30FF               	movlw	255
 12793  036C  00D2               	movwf	82	;volatile
 12794  036D                     l4332:	
 12795                           
 12796                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 12797  036D  30FF               	movlw	255
 12798  036E  00DD               	movwf	93	;volatile
 12799  036F                     l4334:	
 12800                           
 12801                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 12802  036F  3007               	movlw	7
 12803  0370  00E8               	movwf	104	;volatile
 12804  0371                     l4336:	
 12805                           
 12806                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 12807  0371  300C               	movlw	12
 12808  0372  003D               	movlb	29	; select bank29
 12809  0373  0090               	movwf	16	;volatile
 12810  0374                     l4338:	
 12811                           
 12812                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 12813  0374  3013               	movlw	19
 12814  0375  00C5               	movwf	69	;volatile
 12815  0376                     l4340:	
 12816                           
 12817                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 12818  0376  3014               	movlw	20
 12819  0377  003E               	movlb	30	; select bank30
 12820  0378  00A3               	movwf	35	;volatile
 12821  0379                     l4342:	
 12822                           
 12823                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 12824  0379  3015               	movlw	21
 12825  037A  00A4               	movwf	36	;volatile
 12826  037B                     l4344:	
 12827                           
 12828                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 12829  037B  300E               	movlw	14
 12830  037C  0096               	movwf	22	;volatile
 12831  037D                     l4346:	
 12832                           
 12833                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 12834  037D  3014               	movlw	20
 12835  037E  003D               	movlb	29	; select bank29
 12836  037F  00C6               	movwf	70	;volatile
 12837  0380                     l530:	
 12838  0380  0008               	return
 12839  0381                     __end_of_PIN_MANAGER_Initialize:	
 12840                           
 12841                           	psect	text28
 12842  0FBF                     __ptext28:	
 12843 ;; *************** function _OSCILLATOR_Initialize *****************
 12844 ;; Defined at:
 12845 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12846 ;; Parameters:    Size  Location     Type
 12847 ;;		None
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;		None
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      void 
 12852 ;; Registers used:
 12853 ;;		wreg, status,2
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;Total ram usage:        0 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    6
 12866 ;; This function calls:
 12867 ;;		Nothing
 12868 ;; This function is called by:
 12869 ;;		_SYSTEM_Initialize
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           
 12874                           ;psect for function _OSCILLATOR_Initialize
 12875  0FBF                     _OSCILLATOR_Initialize:	
 12876  0FBF                     l4348:	
 12877                           ;incstack = 0
 12878                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12879                           
 12880                           
 12881                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 12882  0FBF  3062               	movlw	98
 12883  0FC0  0031               	movlb	17	; select bank17
 12884  0FC1  008D               	movwf	13	;volatile
 12885  0FC2                     l4350:	
 12886                           
 12887                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12888  0FC2  018F               	clrf	15	;volatile
 12889  0FC3                     l4352:	
 12890                           
 12891                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12892  0FC3  0191               	clrf	17	;volatile
 12893                           
 12894                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 12895  0FC4  3002               	movlw	2
 12896  0FC5  0093               	movwf	19	;volatile
 12897  0FC6                     l4354:	
 12898                           
 12899                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12900  0FC6  0192               	clrf	18	;volatile
 12901  0FC7                     l442:	
 12902  0FC7  0008               	return
 12903  0FC8                     __end_of_OSCILLATOR_Initialize:	
 12904                           
 12905                           	psect	text29
 12906  07CC                     __ptext29:	
 12907 ;; *************** function _EXT_INT_Initialize *****************
 12908 ;; Defined at:
 12909 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12910 ;; Parameters:    Size  Location     Type
 12911 ;;		None
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;		None
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1    wreg      void 
 12916 ;; Registers used:
 12917 ;;		wreg, status,2, status,0, pclath, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;Total ram usage:        0 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    7
 12930 ;; This function calls:
 12931 ;;		_INT_SetInterruptHandler
 12932 ;; This function is called by:
 12933 ;;		_SYSTEM_Initialize
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           
 12938                           ;psect for function _EXT_INT_Initialize
 12939  07CC                     _EXT_INT_Initialize:	
 12940  07CC                     l4286:	
 12941                           ;incstack = 0
 12942                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12943                           
 12944                           
 12945                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 12946  07CC  002E               	movlb	14	; select bank14
 12947  07CD  100C               	bcf	12,0	;volatile
 12948                           
 12949                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 12950  07CE  140B               	bsf	11,0	;volatile
 12951  07CF                     l4288:	
 12952                           
 12953                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 12954  07CF  30F3               	movlw	low _INT_DefaultInterruptHandler
 12955  07D0  0020               	movlb	0	; select bank0
 12956  07D1  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler
 12957  07D2  300E               	movlw	high _INT_DefaultInterruptHandler
 12958  07D3  00BC               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12959  07D4  318F  2759  3187   	fcall	_INT_SetInterruptHandler
 12960  07D7                     l4290:	
 12961                           
 12962                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 12963  07D7  002E               	movlb	14	; select bank14
 12964  07D8  1416               	bsf	22,0	;volatile
 12965  07D9                     l347:	
 12966  07D9  0008               	return
 12967  07DA                     __end_of_EXT_INT_Initialize:	
 12968                           
 12969                           	psect	text30
 12970  0F59                     __ptext30:	
 12971 ;; *************** function _INT_SetInterruptHandler *****************
 12972 ;; Defined at:
 12973 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12976 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;		None
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      void 
 12981 ;; Registers used:
 12982 ;;		wreg
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;Total ram usage:        2 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    6
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_EXT_INT_Initialize
 12999 ;;		_main
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function _INT_SetInterruptHandler
 13005  0F59                     _INT_SetInterruptHandler:	
 13006  0F59                     l4026:	
 13007                           ;incstack = 0
 13008                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13009                           
 13010                           
 13011                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 13012  0F59  0020               	movlb	0	; select bank0
 13013  0F5A  083C               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 13014  0F5B  00D3               	movwf	_INT_InterruptHandler+1
 13015  0F5C  083B               	movf	INT_SetInterruptHandler@InterruptHandler,w
 13016  0F5D  00D2               	movwf	_INT_InterruptHandler
 13017  0F5E                     l341:	
 13018  0F5E  0008               	return
 13019  0F5F                     __end_of_INT_SetInterruptHandler:	
 13020                           
 13021                           	psect	text31
 13022  06E9                     __ptext31:	
 13023 ;; *************** function _ADCC_Initialize *****************
 13024 ;; Defined at:
 13025 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;		None
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;		None
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  1    wreg      void 
 13032 ;; Registers used:
 13033 ;;		wreg, status,2
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13043 ;;Total ram usage:        0 bytes
 13044 ;; Hardware stack levels used:    1
 13045 ;; Hardware stack levels required when called:    6
 13046 ;; This function calls:
 13047 ;;		Nothing
 13048 ;; This function is called by:
 13049 ;;		_SYSTEM_Initialize
 13050 ;; This function uses a non-reentrant model
 13051 ;;
 13052                           
 13053                           
 13054                           ;psect for function _ADCC_Initialize
 13055  06E9                     _ADCC_Initialize:	
 13056  06E9                     l4360:	
 13057                           ;incstack = 0
 13058                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13059                           
 13060                           
 13061                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13062  06E9  0022               	movlb	2	; select bank2
 13063  06EA  018E               	clrf	14	;volatile
 13064                           
 13065                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13066  06EB  018F               	clrf	15	;volatile
 13067                           
 13068                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13069  06EC  0190               	clrf	16	;volatile
 13070                           
 13071                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13072  06ED  0191               	clrf	17	;volatile
 13073                           
 13074                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13075  06EE  0192               	clrf	18	;volatile
 13076                           
 13077                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13078  06EF  0193               	clrf	19	;volatile
 13079                           
 13080                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13081  06F0  018D               	clrf	13	;volatile
 13082                           
 13083                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13084  06F1  0021               	movlb	1	; select bank1
 13085  06F2  019E               	clrf	30	;volatile
 13086                           
 13087                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13088  06F3  019B               	clrf	27	;volatile
 13089                           
 13090                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 13091  06F4  0194               	clrf	20	;volatile
 13092                           
 13093                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 13094  06F5  0195               	clrf	21	;volatile
 13095                           
 13096                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 13097  06F6  0196               	clrf	22	;volatile
 13098                           
 13099                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 13100  06F7  0197               	clrf	23	;volatile
 13101                           
 13102                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 13103  06F8  019A               	clrf	26	;volatile
 13104                           
 13105                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 13106  06F9  0199               	clrf	25	;volatile
 13107                           
 13108                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 13109  06FA  0198               	clrf	24	;volatile
 13110  06FB                     l4362:	
 13111                           
 13112                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 13113  06FB  3084               	movlw	132
 13114  06FC  0093               	movwf	19	;volatile
 13115  06FD                     l4364:	
 13116                           
 13117                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 13118  06FD  019D               	clrf	29	;volatile
 13119  06FE                     l757:	
 13120  06FE  0008               	return
 13121  06FF                     __end_of_ADCC_Initialize:	
 13122                           
 13123                           	psect	text32
 13124  063C                     __ptext32:	
 13125 ;; *************** function _LED_bin *****************
 13126 ;; Defined at:
 13127 ;;		line 297 in file "main.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  value           2    3[BANK0 ] unsigned int 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, status,2, status,0
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:        5 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    6
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_main
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function _LED_bin
 13157  063C                     _LED_bin:	
 13158  063C                     l4732:	
 13159                           ;incstack = 0
 13160                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 13161                           
 13162                           
 13163                           ;main.c: 299:     LATAbits.LATA4 = (value & 1);
 13164  063C  0020               	movlb	0	; select bank0
 13165  063D  083B               	movf	LED_bin@value,w
 13166  063E  3901               	andlw	1
 13167  063F  00BD               	movwf	??_LED_bin
 13168  0640  0EBD               	swapf	??_LED_bin,f
 13169  0641  0816               	movf	22,w	;volatile
 13170  0642  063D               	xorwf	??_LED_bin,w
 13171  0643  39EF               	andlw	-17
 13172  0644  063D               	xorwf	??_LED_bin,w
 13173  0645  0096               	movwf	22	;volatile
 13174                           
 13175                           ;main.c: 300:     LATAbits.LATA5 = (value >>1);
 13176  0646  083C               	movf	LED_bin@value+1,w
 13177  0647  00BE               	movwf	??_LED_bin+1
 13178  0648  083B               	movf	LED_bin@value,w
 13179  0649  00BD               	movwf	??_LED_bin
 13180  064A  36BE               	lsrf	??_LED_bin+1,f
 13181  064B  0CBD               	rrf	??_LED_bin,f
 13182  064C  083D               	movf	??_LED_bin,w
 13183  064D  00BF               	movwf	??_LED_bin+2
 13184  064E  0EBF               	swapf	??_LED_bin+2,f
 13185  064F  0DBF               	rlf	??_LED_bin+2,f
 13186  0650  0816               	movf	22,w	;volatile
 13187  0651  063F               	xorwf	??_LED_bin+2,w
 13188  0652  39DF               	andlw	-33
 13189  0653  063F               	xorwf	??_LED_bin+2,w
 13190  0654  0096               	movwf	22	;volatile
 13191  0655                     l1230:	
 13192  0655  0008               	return
 13193  0656                     __end_of_LED_bin:	
 13194                           
 13195                           	psect	text33
 13196  0656                     __ptext33:	
 13197 ;; *************** function _ADC_read *****************
 13198 ;; Defined at:
 13199 ;;		line 310 in file "main.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;		None
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;		None
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  2    5[BANK0 ] unsigned int 
 13206 ;; Registers used:
 13207 ;;		wreg, status,2, status,0, pclath, cstack
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13217 ;;Total ram usage:        2 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; Hardware stack levels required when called:    7
 13220 ;; This function calls:
 13221 ;;		_ADCC_GetConversionResult
 13222 ;;		_ADCC_IsConversionDone
 13223 ;;		_ADCC_StartConversion
 13224 ;; This function is called by:
 13225 ;;		_main
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           
 13230                           ;psect for function _ADC_read
 13231  0656                     _ADC_read:	
 13232  0656                     l4722:	
 13233                           ;incstack = 0
 13234                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 13235                           
 13236                           
 13237                           ;main.c: 312:     ADCC_StartConversion(channel_ANA0);
 13238  0656  3000               	movlw	0
 13239  0657  318F  279D  3186   	fcall	_ADCC_StartConversion
 13240                           
 13241                           ;main.c: 313:     while(!ADCC_IsConversionDone()){
 13242  065A  2E5F               	goto	l4726
 13243  065B                     l4724:	
 13244                           
 13245                           ;main.c: 314:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13246  065B  3053               	movlw	83
 13247  065C                     u2457:	
 13248  065C  0B89               	decfsz	9,f
 13249  065D  2E5C               	goto	u2457
 13250  065E  0000               	nop
 13251  065F                     l4726:	
 13252                           
 13253                           ;main.c: 313:     while(!ADCC_IsConversionDone()){
 13254  065F  318F  277E  3186   	fcall	_ADCC_IsConversionDone
 13255  0662  3A00               	xorlw	0
 13256  0663  1903               	skipnz
 13257  0664  2E66               	goto	u1861
 13258  0665  2E67               	goto	u1860
 13259  0666                     u1861:	
 13260  0666  2E5B               	goto	l4724
 13261  0667                     u1860:	
 13262  0667                     l4728:	
 13263                           
 13264                           ;main.c: 317:     return ADCC_GetConversionResult();
 13265  0667  318F  27B6  3186   	fcall	_ADCC_GetConversionResult
 13266  066A  0020               	movlb	0	; select bank0
 13267  066B  083C               	movf	?_ADCC_GetConversionResult+1,w
 13268  066C  00BE               	movwf	?_ADC_read+1
 13269  066D  083B               	movf	?_ADCC_GetConversionResult,w
 13270  066E  00BD               	movwf	?_ADC_read
 13271  066F                     l1236:	
 13272  066F  0008               	return
 13273  0670                     __end_of_ADC_read:	
 13274                           
 13275                           	psect	text34
 13276  0F9D                     __ptext34:	
 13277 ;; *************** function _ADCC_StartConversion *****************
 13278 ;; Defined at:
 13279 ;;		line 106 in file "mcc_generated_files/adcc.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  channel         1    wreg     enum E12246
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  channel         1    3[BANK0 ] enum E12246
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13297 ;;Total ram usage:        1 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    6
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_ADC_read
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           
 13308                           ;psect for function _ADCC_StartConversion
 13309  0F9D                     _ADCC_StartConversion:	
 13310                           
 13311                           ;incstack = 0
 13312                           ; Regs used in _ADCC_StartConversion: [wreg]
 13313                           ;ADCC_StartConversion@channel stored from wreg
 13314  0F9D  0020               	movlb	0	; select bank0
 13315  0F9E  00BB               	movwf	ADCC_StartConversion@channel
 13316  0F9F                     l4410:	
 13317                           
 13318                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 13319  0F9F  083B               	movf	ADCC_StartConversion@channel,w
 13320  0FA0  0021               	movlb	1	; select bank1
 13321  0FA1  009E               	movwf	30	;volatile
 13322  0FA2                     l4412:	
 13323                           
 13324                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 13325  0FA2  1793               	bsf	19,7	;volatile
 13326  0FA3                     l4414:	
 13327                           
 13328                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 13329  0FA3  1413               	bsf	19,0	;volatile
 13330  0FA4                     l760:	
 13331  0FA4  0008               	return
 13332  0FA5                     __end_of_ADCC_StartConversion:	
 13333                           
 13334                           	psect	text35
 13335  0F7E                     __ptext35:	
 13336 ;; *************** function _ADCC_IsConversionDone *****************
 13337 ;; Defined at:
 13338 ;;		line 118 in file "mcc_generated_files/adcc.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;		None
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;		None
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  1    wreg      _Bool 
 13345 ;; Registers used:
 13346 ;;		wreg, status,0
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;Total ram usage:        0 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:    6
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_ADC_read
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           
 13367                           ;psect for function _ADCC_IsConversionDone
 13368  0F7E                     _ADCC_IsConversionDone:	
 13369  0F7E                     l4416:	
 13370                           ;incstack = 0
 13371                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 13372                           
 13373                           
 13374                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 13375  0F7E  1003               	clrc
 13376  0F7F  0021               	movlb	1	; select bank1
 13377  0F80  1C13               	btfss	19,0	;volatile
 13378  0F81  1403               	setc
 13379  0F82  3000               	movlw	0
 13380  0F83  3D09               	addwfc	9,w
 13381  0F84                     l763:	
 13382  0F84  0008               	return
 13383  0F85                     __end_of_ADCC_IsConversionDone:	
 13384                           
 13385                           	psect	text36
 13386  0FB6                     __ptext36:	
 13387 ;; *************** function _ADCC_GetConversionResult *****************
 13388 ;; Defined at:
 13389 ;;		line 124 in file "mcc_generated_files/adcc.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;		None
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  2    3[BANK0 ] unsigned short 
 13396 ;; Registers used:
 13397 ;;		wreg
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;Total ram usage:        2 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    6
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_ADC_read
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           
 13418                           ;psect for function _ADCC_GetConversionResult
 13419  0FB6                     _ADCC_GetConversionResult:	
 13420  0FB6                     l4420:	
 13421                           ;incstack = 0
 13422                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13423                           
 13424                           
 13425                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13426  0FB6  0021               	movlb	1	; select bank1
 13427  0FB7  080D               	movf	13,w	;volatile
 13428  0FB8  0020               	movlb	0	; select bank0
 13429  0FB9  00BC               	movwf	?_ADCC_GetConversionResult+1
 13430  0FBA  0021               	movlb	1	; select bank1
 13431  0FBB  080C               	movf	12,w	;volatile
 13432  0FBC  0020               	movlb	0	; select bank0
 13433  0FBD  00BB               	movwf	?_ADCC_GetConversionResult
 13434  0FBE                     l766:	
 13435  0FBE  0008               	return
 13436  0FBF                     __end_of_ADCC_GetConversionResult:	
 13437                           
 13438                           	psect	intentry
 13439  0004                     __pintentry:	
 13440 ;; *************** function _INTERRUPT_InterruptManager *****************
 13441 ;; Defined at:
 13442 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1    wreg      void 
 13449 ;; Registers used:
 13450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;Total ram usage:        0 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:    5
 13463 ;; This function calls:
 13464 ;;		Absolute function
 13465 ;;		_INT_ISR
 13466 ;;		_TMR0_ISR
 13467 ;;		_TMR1_ISR
 13468 ;;		_TMR2_ISR
 13469 ;;		_i2c_ISR
 13470 ;;		_i2c_busCollisionISR
 13471 ;; This function is called by:
 13472 ;;		Interrupt level 1
 13473 ;; This function uses a non-reentrant model
 13474 ;;
 13475                           
 13476  0004                     _INTERRUPT_InterruptManager:	
 13477                           
 13478                           ;incstack = 0
 13479  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13480                           
 13481                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13482  0005  3180               	pagesel	$
 13483  0006                     i1l4922:	
 13484                           
 13485                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 13486  0006  002E               	movlb	14	; select bank14
 13487  0007  1C16               	btfss	22,0	;volatile
 13488  0008  280A               	goto	u211_21
 13489  0009  280B               	goto	u211_20
 13490  000A                     u211_21:	
 13491  000A  2813               	goto	i1l378
 13492  000B                     u211_20:	
 13493  000B                     i1l4924:	
 13494  000B  1C0C               	btfss	12,0	;volatile
 13495  000C  280E               	goto	u212_21
 13496  000D  280F               	goto	u212_20
 13497  000E                     u212_21:	
 13498  000E  2813               	goto	i1l378
 13499  000F                     u212_20:	
 13500  000F                     i1l4926:	
 13501                           
 13502                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 13503  000F  318F  2753  3180   	fcall	_INT_ISR
 13504                           
 13505                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13506  0012  2859               	goto	i1l392
 13507  0013                     i1l378:	
 13508                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 13509                           
 13510  0013  1E96               	btfss	22,5	;volatile
 13511  0014  2816               	goto	u213_21
 13512  0015  2817               	goto	u213_20
 13513  0016                     u213_21:	
 13514  0016  281F               	goto	i1l380
 13515  0017                     u213_20:	
 13516  0017                     i1l4928:	
 13517  0017  1E8C               	btfss	12,5	;volatile
 13518  0018  281A               	goto	u214_21
 13519  0019  281B               	goto	u214_20
 13520  001A                     u214_21:	
 13521  001A  281F               	goto	i1l380
 13522  001B                     u214_20:	
 13523  001B                     i1l4930:	
 13524                           
 13525                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 13526  001B  3187  27BD  3180   	fcall	_TMR0_ISR
 13527                           
 13528                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 13529  001E  2859               	goto	i1l392
 13530  001F                     i1l380:	
 13531                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 13532                           
 13533  001F  1F0B               	btfss	11,6	;volatile
 13534  0020  2822               	goto	u215_21
 13535  0021  2823               	goto	u215_20
 13536  0022                     u215_21:	
 13537  0022  2859               	goto	i1l386
 13538  0023                     u215_20:	
 13539  0023                     i1l4932:	
 13540                           
 13541                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13542  0023  1C99               	btfss	25,1	;volatile
 13543  0024  2826               	goto	u216_21
 13544  0025  2827               	goto	u216_20
 13545  0026                     u216_21:	
 13546  0026  2832               	goto	i1l383
 13547  0027                     u216_20:	
 13548  0027                     i1l4934:	
 13549  0027  1C8F               	btfss	15,1	;volatile
 13550  0028  282A               	goto	u217_21
 13551  0029  282B               	goto	u217_20
 13552  002A                     u217_21:	
 13553  002A  2832               	goto	i1l383
 13554  002B                     u217_20:	
 13555  002B                     i1l4936:	
 13556                           
 13557                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 13558  002B  0020               	movlb	0	; select bank0
 13559  002C  082D               	movf	_i2c1_driver_busCollisionISR+1,w
 13560  002D  008A               	movwf	10
 13561  002E  082C               	movf	_i2c1_driver_busCollisionISR,w
 13562  002F  000A               	callw
 13563  0030  3180               	pagesel	$
 13564                           
 13565                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13566  0031  2859               	goto	i1l392
 13567  0032                     i1l383:	
 13568                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 13569                           
 13570  0032  1C19               	btfss	25,0	;volatile
 13571  0033  2835               	goto	u218_21
 13572  0034  2836               	goto	u218_20
 13573  0035                     u218_21:	
 13574  0035  2841               	goto	i1l385
 13575  0036                     u218_20:	
 13576  0036                     i1l4938:	
 13577  0036  1C0F               	btfss	15,0	;volatile
 13578  0037  2839               	goto	u219_21
 13579  0038  283A               	goto	u219_20
 13580  0039                     u219_21:	
 13581  0039  2841               	goto	i1l385
 13582  003A                     u219_20:	
 13583  003A                     i1l4940:	
 13584                           
 13585                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 13586  003A  0020               	movlb	0	; select bank0
 13587  003B  082B               	movf	_i2c1_driver_i2cISR+1,w
 13588  003C  008A               	movwf	10
 13589  003D  082A               	movf	_i2c1_driver_i2cISR,w
 13590  003E  000A               	callw
 13591  003F  3180               	pagesel	$
 13592                           
 13593                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13594  0040  2859               	goto	i1l392
 13595  0041                     i1l385:	
 13596                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 13597                           
 13598  0041  1C1A               	btfss	26,0	;volatile
 13599  0042  2844               	goto	u220_21
 13600  0043  2845               	goto	u220_20
 13601  0044                     u220_21:	
 13602  0044  284D               	goto	i1l387
 13603  0045                     u220_20:	
 13604  0045                     i1l4942:	
 13605  0045  1C10               	btfss	16,0	;volatile
 13606  0046  2848               	goto	u221_21
 13607  0047  2849               	goto	u221_20
 13608  0048                     u221_21:	
 13609  0048  284D               	goto	i1l387
 13610  0049                     u221_20:	
 13611  0049                     i1l4944:	
 13612                           
 13613                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 13614  0049  3186  26D2  3180   	fcall	_TMR1_ISR
 13615                           
 13616                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 13617  004C  2859               	goto	i1l392
 13618  004D                     i1l387:	
 13619                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 13620                           
 13621  004D  1C9A               	btfss	26,1	;volatile
 13622  004E  2850               	goto	u222_21
 13623  004F  2851               	goto	u222_20
 13624  0050                     u222_21:	
 13625  0050  2859               	goto	i1l386
 13626  0051                     u222_20:	
 13627  0051                     i1l4946:	
 13628  0051  1C90               	btfss	16,1	;volatile
 13629  0052  2854               	goto	u223_21
 13630  0053  2855               	goto	u223_20
 13631  0054                     u223_21:	
 13632  0054  2859               	goto	i1l386
 13633  0055                     u223_20:	
 13634  0055                     i1l4948:	
 13635                           
 13636                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 13637  0055  3187  27AE  3180   	fcall	_TMR2_ISR
 13638                           
 13639                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 13640  0058  2859               	goto	i1l392
 13641  0059                     i1l386:	
 13642  0059                     i1l392:	
 13643  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13644  005A  0009               	retfie
 13645  005B                     __end_of_INTERRUPT_InterruptManager:	
 13646                           
 13647                           	psect	text38
 13648  0F22                     __ptext38:	
 13649 ;; *************** function _i2c_busCollisionISR *****************
 13650 ;; Defined at:
 13651 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;		None
 13654 ;; Auto vars:     Size  Location     Type
 13655 ;;		None
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  1    wreg      void 
 13658 ;; Registers used:
 13659 ;;		status,2, status,0, pclath, cstack
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;Total ram usage:        0 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    1
 13672 ;; This function calls:
 13673 ;;		_i2c1_driver_clearBusCollision
 13674 ;; This function is called by:
 13675 ;;		_i2c_open
 13676 ;;		_INTERRUPT_InterruptManager
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           
 13681                           ;psect for function _i2c_busCollisionISR
 13682  0F22                     _i2c_busCollisionISR:	
 13683  0F22                     i1l4660:	
 13684                           ;incstack = 0
 13685                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13686                           
 13687                           
 13688                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 13689  0F22  318F  2711  318F   	fcall	_i2c1_driver_clearBusCollision
 13690  0F25                     i1l213:	
 13691  0F25  0008               	return
 13692  0F26                     __end_of_i2c_busCollisionISR:	
 13693                           
 13694                           	psect	text39
 13695  0F11                     __ptext39:	
 13696 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13697 ;; Defined at:
 13698 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 13699 ;; Parameters:    Size  Location     Type
 13700 ;;		None
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;		None
 13703 ;; Return value:  Size  Location     Type
 13704 ;;                  1    wreg      void 
 13705 ;; Registers used:
 13706 ;;		None
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/0
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;Total ram usage:        0 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; This function calls:
 13719 ;;		Nothing
 13720 ;; This function is called by:
 13721 ;;		_i2c_busCollisionISR
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           
 13726                           ;psect for function _i2c1_driver_clearBusCollision
 13727  0F11                     _i2c1_driver_clearBusCollision:	
 13728  0F11                     i1l4280:	
 13729                           ;incstack = 0
 13730                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13731                           
 13732                           
 13733                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 13734  0F11  002E               	movlb	14	; select bank14
 13735  0F12  108F               	bcf	15,1	;volatile
 13736  0F13                     i1l672:	
 13737  0F13  0008               	return
 13738  0F14                     __end_of_i2c1_driver_clearBusCollision:	
 13739                           
 13740                           	psect	text40
 13741  048C                     __ptext40:	
 13742 ;; *************** function _i2c_ISR *****************
 13743 ;; Defined at:
 13744 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;		None
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      void 
 13751 ;; Registers used:
 13752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;Total ram usage:        3 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:    4
 13765 ;; This function calls:
 13766 ;;		_do_I2C_DO_ACK
 13767 ;;		_do_I2C_DO_ADDRESS_NACK
 13768 ;;		_do_I2C_DO_NACK_RESTART
 13769 ;;		_do_I2C_DO_NACK_STOP
 13770 ;;		_do_I2C_IDLE
 13771 ;;		_do_I2C_RCEN
 13772 ;;		_do_I2C_RESET
 13773 ;;		_do_I2C_RX
 13774 ;;		_do_I2C_SEND_ADR_READ
 13775 ;;		_do_I2C_SEND_ADR_WRITE
 13776 ;;		_do_I2C_SEND_RESTART
 13777 ;;		_do_I2C_SEND_RESTART_READ
 13778 ;;		_do_I2C_SEND_RESTART_WRITE
 13779 ;;		_do_I2C_SEND_STOP
 13780 ;;		_do_I2C_TX
 13781 ;;		_do_I2C_TX_EMPTY
 13782 ;;		_i2c1_driver_isNACK
 13783 ;;		_mssp1_clearIRQ
 13784 ;; This function is called by:
 13785 ;;		_i2c_open
 13786 ;;		_i2c_poller
 13787 ;;		_INTERRUPT_InterruptManager
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           
 13792                           ;psect for function _i2c_ISR
 13793  048C                     _i2c_ISR:	
 13794  048C                     i1l4650:	
 13795                           ;incstack = 0
 13796                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13797                           
 13798                           
 13799                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 13800  048C  318F  270E  3184   	fcall	_mssp1_clearIRQ
 13801  048F                     i1l4652:	
 13802                           
 13803                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 13804  048F  0021               	movlb	1	; select bank1
 13805  0490  1DA0               	btfss	_i2c_status^(0+128),3
 13806  0491  2C93               	goto	u179_21
 13807  0492  2C94               	goto	u179_20
 13808  0493                     u179_21:	
 13809  0493  2CA1               	goto	i1l4658
 13810  0494                     u179_20:	
 13811  0494                     i1l4654:	
 13812  0494  318F  2785  3184   	fcall	_i2c1_driver_isNACK
 13813  0497  1C03               	btfss	3,0
 13814  0498  2C9A               	goto	u180_21
 13815  0499  2C9B               	goto	u180_20
 13816  049A                     u180_21:	
 13817  049A  2CA1               	goto	i1l4658
 13818  049B                     u180_20:	
 13819  049B                     i1l4656:	
 13820                           
 13821                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 13822  049B  300F               	movlw	15
 13823  049C  0020               	movlb	0	; select bank0
 13824  049D  00B8               	movwf	??_i2c_ISR
 13825  049E  0838               	movf	??_i2c_ISR,w
 13826  049F  0021               	movlb	1	; select bank1
 13827  04A0  00A9               	movwf	(_i2c_status^(0+128)+9)
 13828  04A1                     i1l4658:	
 13829                           
 13830                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 13831  04A1  0021               	movlb	1	; select bank1
 13832  04A2  0829               	movf	(_i2c_status^(0+128)+9),w
 13833  04A3  0020               	movlb	0	; select bank0
 13834  04A4  00B8               	movwf	??_i2c_ISR
 13835  04A5  01B9               	clrf	??_i2c_ISR+1
 13836  04A6  35B8               	lslf	??_i2c_ISR,f
 13837  04A7  0DB9               	rlf	??_i2c_ISR+1,f
 13838  04A8  3087               	movlw	low (_fsmStateTable| (0+32768))
 13839  04A9  0738               	addwf	??_i2c_ISR,w
 13840  04AA  0084               	movwf	4
 13841  04AB  3085               	movlw	high (_fsmStateTable| (0+32768))
 13842  04AC  3D39               	addwfc	??_i2c_ISR+1,w
 13843  04AD  0085               	movwf	5
 13844  04AE  3F01               	moviw [1]fsr0
 13845  04AF  008A               	movwf	10
 13846  04B0  3F00               	moviw [0]fsr0
 13847  04B1  000A               	callw
 13848  04B2  3184               	pagesel	$
 13849  04B3  0020               	movlb	0	; select bank0
 13850  04B4  00BA               	movwf	??_i2c_ISR+2
 13851  04B5  083A               	movf	??_i2c_ISR+2,w
 13852  04B6  0021               	movlb	1	; select bank1
 13853  04B7  00A9               	movwf	(_i2c_status^(0+128)+9)
 13854  04B8                     i1l210:	
 13855  04B8  0008               	return
 13856  04B9                     __end_of_i2c_ISR:	
 13857                           
 13858                           	psect	text41
 13859  0F0E                     __ptext41:	
 13860 ;; *************** function _mssp1_clearIRQ *****************
 13861 ;; Defined at:
 13862 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;		None
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		None
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;Total ram usage:        0 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_i2c_ISR
 13886 ;;		_i2c_open
 13887 ;;		_i2c_close
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           
 13892                           ;psect for function _mssp1_clearIRQ
 13893  0F0E                     _mssp1_clearIRQ:	
 13894  0F0E                     i1l4096:	
 13895                           ;incstack = 0
 13896                           ; Regs used in _mssp1_clearIRQ: []
 13897                           
 13898                           
 13899                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 13900  0F0E  002E               	movlb	14	; select bank14
 13901  0F0F  100F               	bcf	15,0	;volatile
 13902  0F10                     i1l576:	
 13903  0F10  0008               	return
 13904  0F11                     __end_of_mssp1_clearIRQ:	
 13905                           
 13906                           	psect	text42
 13907  02EE                     __ptext42:	
 13908 ;; *************** function _do_I2C_RX *****************
 13909 ;; Defined at:
 13910 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;		None
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;		None
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      enum E12722
 13917 ;; Registers used:
 13918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;Total ram usage:        3 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    3
 13931 ;; This function calls:
 13932 ;;		Absolute function
 13933 ;;		_do_I2C_DO_NACK_RESTART
 13934 ;;		_do_I2C_DO_NACK_STOP
 13935 ;;		_i2c1_driver_getRXData
 13936 ;;		_i2c1_driver_sendACK
 13937 ;;		_i2c_restartWrite
 13938 ;;		_rd1RegCompleteHandler
 13939 ;;		_rd2RegCompleteHandler
 13940 ;;		_rdBlkRegCompleteHandler
 13941 ;;		_returnReset
 13942 ;;		_returnStop
 13943 ;;		_wr1RegCompleteHandler
 13944 ;;		_wr2RegCompleteHandler
 13945 ;; This function is called by:
 13946 ;;		_i2c_ISR
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           
 13951                           ;psect for function _do_I2C_RX
 13952  02EE                     _do_I2C_RX:	
 13953  02EE                     i1l4222:	
 13954                           ;incstack = 0
 13955                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13956                           
 13957                           
 13958                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 13959  02EE  318F  2708  3182   	fcall	_i2c1_driver_getRXData
 13960  02F1  00FA               	movwf	??_do_I2C_RX
 13961  02F2  0021               	movlb	1	; select bank1
 13962  02F3  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 13963  02F4  0086               	movwf	6
 13964  02F5  0187               	clrf	7
 13965  02F6  087A               	movf	??_do_I2C_RX,w
 13966  02F7  0081               	movwf	1
 13967  02F8                     i1l4224:	
 13968  02F8  3001               	movlw	1
 13969  02F9  00FA               	movwf	??_do_I2C_RX
 13970  02FA  087A               	movf	??_do_I2C_RX,w
 13971  02FB  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 13972  02FC                     i1l4226:	
 13973                           
 13974                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 13975  02FC  3001               	movlw	1
 13976  02FD  02A3               	subwf	(_i2c_status^(0+128)+3),f
 13977  02FE  3000               	movlw	0
 13978  02FF  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 13979  0300  0823               	movf	(_i2c_status^(0+128)+3),w
 13980  0301  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 13981  0302  1903               	btfsc	3,2
 13982  0303  2B05               	goto	u159_21
 13983  0304  2B06               	goto	u159_20
 13984  0305                     u159_21:	
 13985  0305  2B0B               	goto	i1l185
 13986  0306                     u159_20:	
 13987  0306                     i1l4228:	
 13988                           
 13989                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 13990  0306  318F  271A  3182   	fcall	_i2c1_driver_sendACK
 13991  0309                     i1l4230:	
 13992                           
 13993                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 13994  0309  3005               	movlw	5
 13995  030A  2B37               	goto	i1l186
 13996  030B                     i1l185:	
 13997                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 13998                           
 13999                           
 14000                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 14001  030B  1520               	bsf	_i2c_status^(0+128),2
 14002                           
 14003                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14004  030C  2B15               	goto	i1l4246
 14005  030D                     i1l4236:	
 14006                           
 14007                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 14008  030D  318F  274E  3182   	fcall	_do_I2C_DO_NACK_RESTART
 14009  0310  2B37               	goto	i1l186
 14010  0311                     i1l4240:	
 14011                           
 14012                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 14013  0311  318F  2749  3182   	fcall	_do_I2C_DO_NACK_STOP
 14014  0314  2B37               	goto	i1l186
 14015  0315                     i1l4246:	
 14016  0315  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14017  0316  00FA               	movwf	??_do_I2C_RX
 14018  0317  087A               	movf	??_do_I2C_RX,w
 14019  0318  00F9               	movwf	rdBlkRegCompleteHandler@p
 14020  0319  300B               	movlw	11
 14021  031A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14022  031B  0086               	movwf	6
 14023  031C  0187               	clrf	7
 14024  031D  3F41               	moviw [1]fsr1
 14025  031E  008A               	movwf	10
 14026  031F  3F40               	moviw [0]fsr1
 14027  0320  000A               	callw
 14028  0321  3182               	pagesel	$
 14029  0322  00FB               	movwf	??_do_I2C_RX+1
 14030  0323  01FC               	clrf	??_do_I2C_RX+2
 14031                           
 14032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14033                           ; Switch size 1, requested type "simple"
 14034                           ; Number of cases is 1, Range of values is 0 to 0
 14035                           ; switch strategies available:
 14036                           ; Name         Instructions Cycles
 14037                           ; simple_byte            4     3 (average)
 14038                           ; direct_byte            8     6 (fixed)
 14039                           ; jumptable            260     6 (fixed)
 14040                           ;	Chosen strategy is simple_byte
 14041  0324  087C               	movf	??_do_I2C_RX+2,w
 14042  0325  3A00               	xorlw	0	; case 0
 14043  0326  1903               	skipnz
 14044  0327  2B29               	goto	i1l5208
 14045  0328  2B11               	goto	i1l4240
 14046  0329                     i1l5208:	
 14047                           
 14048                           ; Switch size 1, requested type "simple"
 14049                           ; Number of cases is 4, Range of values is 1 to 4
 14050                           ; switch strategies available:
 14051                           ; Name         Instructions Cycles
 14052                           ; simple_byte           13     7 (average)
 14053                           ; direct_byte           17     9 (fixed)
 14054                           ; jumptable            263     9 (fixed)
 14055                           ;	Chosen strategy is simple_byte
 14056  0329  087B               	movf	??_do_I2C_RX+1,w
 14057  032A  3A01               	xorlw	1	; case 1
 14058  032B  1903               	skipnz
 14059  032C  2B11               	goto	i1l4240
 14060  032D  3A03               	xorlw	3	; case 2
 14061  032E  1903               	skipnz
 14062  032F  2B0D               	goto	i1l4236
 14063  0330  3A01               	xorlw	1	; case 3
 14064  0331  1903               	skipnz
 14065  0332  2B0D               	goto	i1l4236
 14066  0333  3A07               	xorlw	7	; case 4
 14067  0334  1903               	skipnz
 14068  0335  2B11               	goto	i1l4240
 14069  0336  2B11               	goto	i1l4240
 14070  0337                     i1l186:	
 14071  0337  0008               	return
 14072  0338                     __end_of_do_I2C_RX:	
 14073                           
 14074                           	psect	text43
 14075  029A                     __ptext43:	
 14076 ;; *************** function _do_I2C_TX *****************
 14077 ;; Defined at:
 14078 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;		None
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      enum E12722
 14085 ;; Registers used:
 14086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;Total ram usage:        3 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:    3
 14099 ;; This function calls:
 14100 ;;		Absolute function
 14101 ;;		_do_I2C_SEND_RESTART_READ
 14102 ;;		_do_I2C_SEND_RESTART_WRITE
 14103 ;;		_do_I2C_SEND_STOP
 14104 ;;		_i2c1_driver_TXData
 14105 ;;		_i2c1_driver_isNACK
 14106 ;;		_i2c_restartWrite
 14107 ;;		_rd1RegCompleteHandler
 14108 ;;		_rd2RegCompleteHandler
 14109 ;;		_rdBlkRegCompleteHandler
 14110 ;;		_returnReset
 14111 ;;		_returnStop
 14112 ;;		_wr1RegCompleteHandler
 14113 ;;		_wr2RegCompleteHandler
 14114 ;; This function is called by:
 14115 ;;		_i2c_ISR
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           
 14120                           ;psect for function _do_I2C_TX
 14121  029A                     _do_I2C_TX:	
 14122  029A                     i1l4188:	
 14123                           ;incstack = 0
 14124                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14125                           
 14126                           
 14127                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 14128  029A  318F  2785  3182   	fcall	_i2c1_driver_isNACK
 14129  029D  1C03               	btfss	3,0
 14130  029E  2AA0               	goto	u157_21
 14131  029F  2AA1               	goto	u157_20
 14132  02A0                     u157_21:	
 14133  02A0  2AD1               	goto	i1l169
 14134  02A1                     u157_20:	
 14135  02A1  2AAE               	goto	i1l4206
 14136  02A2                     i1l4192:	
 14137                           
 14138                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 14139  02A2  318F  2730  3182   	fcall	_do_I2C_SEND_RESTART_READ
 14140  02A5  2AED               	goto	i1l172
 14141  02A6                     i1l4196:	
 14142                           
 14143                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 14144  02A6  318F  2735  3182   	fcall	_do_I2C_SEND_RESTART_WRITE
 14145  02A9  2AED               	goto	i1l172
 14146  02AA                     i1l4200:	
 14147                           
 14148                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 14149  02AA  318F  273F  3182   	fcall	_do_I2C_SEND_STOP
 14150  02AD  2AED               	goto	i1l172
 14151  02AE                     i1l4206:	
 14152  02AE  0021               	movlb	1	; select bank1
 14153  02AF  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14154  02B0  00FA               	movwf	??_do_I2C_TX
 14155  02B1  087A               	movf	??_do_I2C_TX,w
 14156  02B2  00F9               	movwf	rdBlkRegCompleteHandler@p
 14157  02B3  3011               	movlw	17
 14158  02B4  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14159  02B5  0086               	movwf	6
 14160  02B6  0187               	clrf	7
 14161  02B7  3F41               	moviw [1]fsr1
 14162  02B8  008A               	movwf	10
 14163  02B9  3F40               	moviw [0]fsr1
 14164  02BA  000A               	callw
 14165  02BB  3182               	pagesel	$
 14166  02BC  00FB               	movwf	??_do_I2C_TX+1
 14167  02BD  01FC               	clrf	??_do_I2C_TX+2
 14168                           
 14169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14170                           ; Switch size 1, requested type "simple"
 14171                           ; Number of cases is 1, Range of values is 0 to 0
 14172                           ; switch strategies available:
 14173                           ; Name         Instructions Cycles
 14174                           ; simple_byte            4     3 (average)
 14175                           ; direct_byte            8     6 (fixed)
 14176                           ; jumptable            260     6 (fixed)
 14177                           ;	Chosen strategy is simple_byte
 14178  02BE  087C               	movf	??_do_I2C_TX+2,w
 14179  02BF  3A00               	xorlw	0	; case 0
 14180  02C0  1903               	skipnz
 14181  02C1  2AC3               	goto	i1l5210
 14182  02C2  2AAA               	goto	i1l4200
 14183  02C3                     i1l5210:	
 14184                           
 14185                           ; Switch size 1, requested type "simple"
 14186                           ; Number of cases is 4, Range of values is 1 to 4
 14187                           ; switch strategies available:
 14188                           ; Name         Instructions Cycles
 14189                           ; simple_byte           13     7 (average)
 14190                           ; direct_byte           17     9 (fixed)
 14191                           ; jumptable            263     9 (fixed)
 14192                           ;	Chosen strategy is simple_byte
 14193  02C3  087B               	movf	??_do_I2C_TX+1,w
 14194  02C4  3A01               	xorlw	1	; case 1
 14195  02C5  1903               	skipnz
 14196  02C6  2AAA               	goto	i1l4200
 14197  02C7  3A03               	xorlw	3	; case 2
 14198  02C8  1903               	skipnz
 14199  02C9  2AA2               	goto	i1l4192
 14200  02CA  3A01               	xorlw	1	; case 3
 14201  02CB  1903               	skipnz
 14202  02CC  2AA6               	goto	i1l4196
 14203  02CD  3A07               	xorlw	7	; case 4
 14204  02CE  1903               	skipnz
 14205  02CF  2AAA               	goto	i1l4200
 14206  02D0  2AAA               	goto	i1l4200
 14207  02D1                     i1l169:	
 14208                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 14209                           
 14210                           
 14211                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 14212  02D1  0021               	movlb	1	; select bank1
 14213  02D2  11A0               	bcf	_i2c_status^(0+128),3
 14214  02D3                     i1l4208:	
 14215                           
 14216                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 14217  02D3  3002               	movlw	2
 14218  02D4  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14219  02D5  0086               	movwf	6
 14220  02D6  0187               	clrf	7
 14221  02D7  3F40               	moviw [0]fsr1
 14222  02D8  0084               	movwf	4
 14223  02D9  0185               	clrf	5
 14224  02DA  0A81               	incf	1,f
 14225  02DB  0800               	movf	0,w
 14226  02DC  318F  2726  3182   	fcall	_i2c1_driver_TXData
 14227  02DF                     i1l4210:	
 14228                           
 14229                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 14230  02DF  3001               	movlw	1
 14231  02E0  0021               	movlb	1	; select bank1
 14232  02E1  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14233  02E2  3000               	movlw	0
 14234  02E3  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14235  02E4  0823               	movf	(_i2c_status^(0+128)+3),w
 14236  02E5  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14237  02E6  1D03               	btfss	3,2
 14238  02E7  2AE9               	goto	u158_21
 14239  02E8  2AEA               	goto	u158_20
 14240  02E9                     u158_21:	
 14241  02E9  2AEC               	goto	i1l4214
 14242  02EA                     u158_20:	
 14243  02EA                     i1l4212:	
 14244  02EA  3006               	movlw	6
 14245  02EB  2AED               	goto	i1l172
 14246  02EC                     i1l4214:	
 14247  02EC  3003               	movlw	3
 14248  02ED                     i1l172:	
 14249  02ED  0008               	return
 14250  02EE                     __end_of_do_I2C_TX:	
 14251                           
 14252                           	psect	text44
 14253  04B9                     __ptext44:	
 14254 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14255 ;; Defined at:
 14256 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;		None
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1    wreg      enum E12722
 14263 ;; Registers used:
 14264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/0
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;Total ram usage:        3 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    3
 14277 ;; This function calls:
 14278 ;;		Absolute function
 14279 ;;		_do_I2C_SEND_RESTART
 14280 ;;		_do_I2C_SEND_STOP
 14281 ;;		_i2c_restartWrite
 14282 ;;		_rd1RegCompleteHandler
 14283 ;;		_rd2RegCompleteHandler
 14284 ;;		_rdBlkRegCompleteHandler
 14285 ;;		_returnReset
 14286 ;;		_returnStop
 14287 ;;		_wr1RegCompleteHandler
 14288 ;;		_wr2RegCompleteHandler
 14289 ;; This function is called by:
 14290 ;;		_i2c_ISR
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           
 14295                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14296  04B9                     _do_I2C_DO_ADDRESS_NACK:	
 14297  04B9                     i1l4166:	
 14298                           ;incstack = 0
 14299                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14300                           
 14301                           
 14302                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 14303  04B9  0021               	movlb	1	; select bank1
 14304  04BA  11A0               	bcf	_i2c_status^(0+128),3
 14305  04BB                     i1l4168:	
 14306                           
 14307                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14308  04BB  3002               	movlw	2
 14309  04BC  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14310  04BD  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14311  04BE  00AA               	movwf	(_i2c_status^(0+128)+10)
 14312                           
 14313                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14314  04BF  2CC8               	goto	i1l4180
 14315  04C0                     i1l4170:	
 14316                           
 14317                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14318  04C0  318F  273A  3184   	fcall	_do_I2C_SEND_RESTART
 14319  04C3  2CE4               	goto	i1l164
 14320  04C4                     i1l4174:	
 14321                           
 14322                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14323  04C4  318F  273F  3184   	fcall	_do_I2C_SEND_STOP
 14324  04C7  2CE4               	goto	i1l164
 14325  04C8                     i1l4180:	
 14326  04C8  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14327  04C9  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14328  04CA  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14329  04CB  00F9               	movwf	rdBlkRegCompleteHandler@p
 14330  04CC  300F               	movlw	15
 14331  04CD  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14332  04CE  0086               	movwf	6
 14333  04CF  0187               	clrf	7
 14334  04D0  3F41               	moviw [1]fsr1
 14335  04D1  008A               	movwf	10
 14336  04D2  3F40               	moviw [0]fsr1
 14337  04D3  000A               	callw
 14338  04D4  3184               	pagesel	$
 14339  04D5  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14340  04D6  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14341                           
 14342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14343                           ; Switch size 1, requested type "simple"
 14344                           ; Number of cases is 1, Range of values is 0 to 0
 14345                           ; switch strategies available:
 14346                           ; Name         Instructions Cycles
 14347                           ; simple_byte            4     3 (average)
 14348                           ; direct_byte            8     6 (fixed)
 14349                           ; jumptable            260     6 (fixed)
 14350                           ;	Chosen strategy is simple_byte
 14351  04D7  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14352  04D8  3A00               	xorlw	0	; case 0
 14353  04D9  1903               	skipnz
 14354  04DA  2CDC               	goto	i1l5212
 14355  04DB  2CC4               	goto	i1l4174
 14356  04DC                     i1l5212:	
 14357                           
 14358                           ; Switch size 1, requested type "simple"
 14359                           ; Number of cases is 2, Range of values is 2 to 3
 14360                           ; switch strategies available:
 14361                           ; Name         Instructions Cycles
 14362                           ; simple_byte            7     4 (average)
 14363                           ; direct_byte           13     9 (fixed)
 14364                           ; jumptable            263     9 (fixed)
 14365                           ;	Chosen strategy is simple_byte
 14366  04DC  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14367  04DD  3A02               	xorlw	2	; case 2
 14368  04DE  1903               	skipnz
 14369  04DF  2CC0               	goto	i1l4170
 14370  04E0  3A01               	xorlw	1	; case 3
 14371  04E1  1903               	skipnz
 14372  04E2  2CC0               	goto	i1l4170
 14373  04E3  2CC4               	goto	i1l4174
 14374  04E4                     i1l164:	
 14375  04E4  0008               	return
 14376  04E5                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14377                           
 14378                           	psect	text45
 14379  0F4E                     __ptext45:	
 14380 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14381 ;; Defined at:
 14382 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14383 ;; Parameters:    Size  Location     Type
 14384 ;;		None
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;		None
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  1    wreg      enum E12722
 14389 ;; Registers used:
 14390 ;;		wreg, status,2, status,0, pclath, cstack
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;Total ram usage:        0 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; Hardware stack levels required when called:    1
 14403 ;; This function calls:
 14404 ;;		_i2c1_driver_sendNACK
 14405 ;; This function is called by:
 14406 ;;		_do_I2C_RX
 14407 ;;		_i2c_ISR
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           
 14412                           ;psect for function _do_I2C_DO_NACK_RESTART
 14413  0F4E                     _do_I2C_DO_NACK_RESTART:	
 14414  0F4E                     i1l3964:	
 14415                           ;incstack = 0
 14416                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14417                           
 14418                           
 14419                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14420  0F4E  318F  271E  318F   	fcall	_i2c1_driver_sendNACK
 14421  0F51                     i1l3966:	
 14422                           
 14423                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14424  0F51  3009               	movlw	9
 14425  0F52                     i1l158:	
 14426  0F52  0008               	return
 14427  0F53                     __end_of_do_I2C_DO_NACK_RESTART:	
 14428                           
 14429                           	psect	text46
 14430  0F49                     __ptext46:	
 14431 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14432 ;; Defined at:
 14433 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14434 ;; Parameters:    Size  Location     Type
 14435 ;;		None
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;		None
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      enum E12722
 14440 ;; Registers used:
 14441 ;;		wreg, status,2, status,0, pclath, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;Total ram usage:        0 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:    1
 14454 ;; This function calls:
 14455 ;;		_i2c1_driver_sendNACK
 14456 ;; This function is called by:
 14457 ;;		_do_I2C_RX
 14458 ;;		_i2c_ISR
 14459 ;; This function uses a non-reentrant model
 14460 ;;
 14461                           
 14462                           
 14463                           ;psect for function _do_I2C_DO_NACK_STOP
 14464  0F49                     _do_I2C_DO_NACK_STOP:	
 14465  0F49                     i1l3958:	
 14466                           ;incstack = 0
 14467                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14468                           
 14469                           
 14470                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14471  0F49  318F  271E  318F   	fcall	_i2c1_driver_sendNACK
 14472  0F4C                     i1l3960:	
 14473                           
 14474                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14475  0F4C  300A               	movlw	10
 14476  0F4D                     i1l155:	
 14477  0F4D  0008               	return
 14478  0F4E                     __end_of_do_I2C_DO_NACK_STOP:	
 14479                           
 14480                           	psect	text47
 14481  0F44                     __ptext47:	
 14482 ;; *************** function _do_I2C_DO_ACK *****************
 14483 ;; Defined at:
 14484 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;		None
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;		None
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      enum E12722
 14491 ;; Registers used:
 14492 ;;		wreg, status,2, status,0, pclath, cstack
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;Total ram usage:        0 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    1
 14505 ;; This function calls:
 14506 ;;		_i2c1_driver_sendACK
 14507 ;; This function is called by:
 14508 ;;		_i2c_ISR
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           
 14513                           ;psect for function _do_I2C_DO_ACK
 14514  0F44                     _do_I2C_DO_ACK:	
 14515  0F44                     i1l4160:	
 14516                           ;incstack = 0
 14517                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14518                           
 14519                           
 14520                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14521  0F44  318F  271A  318F   	fcall	_i2c1_driver_sendACK
 14522  0F47                     i1l4162:	
 14523                           
 14524                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14525  0F47  3005               	movlw	5
 14526  0F48                     i1l152:	
 14527  0F48  0008               	return
 14528  0F49                     __end_of_do_I2C_DO_ACK:	
 14529                           
 14530                           	psect	text48
 14531  0F77                     __ptext48:	
 14532 ;; *************** function _do_I2C_RCEN *****************
 14533 ;; Defined at:
 14534 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;		None
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      enum E12722
 14541 ;; Registers used:
 14542 ;;		wreg, status,2, status,0, pclath, cstack
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;Total ram usage:        0 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    1
 14555 ;; This function calls:
 14556 ;;		_i2c1_driver_startRX
 14557 ;; This function is called by:
 14558 ;;		_i2c_ISR
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           
 14563                           ;psect for function _do_I2C_RCEN
 14564  0F77                     _do_I2C_RCEN:	
 14565  0F77                     i1l4152:	
 14566                           ;incstack = 0
 14567                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14568                           
 14569                           
 14570                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14571  0F77  0021               	movlb	1	; select bank1
 14572  0F78  11A0               	bcf	_i2c_status^(0+128),3
 14573  0F79                     i1l4154:	
 14574                           
 14575                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14576  0F79  318F  2705  318F   	fcall	_i2c1_driver_startRX
 14577  0F7C                     i1l4156:	
 14578                           
 14579                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14580  0F7C  3004               	movlw	4
 14581  0F7D                     i1l149:	
 14582  0F7D  0008               	return
 14583  0F7E                     __end_of_do_I2C_RCEN:	
 14584                           
 14585                           	psect	text49
 14586  0F95                     __ptext49:	
 14587 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14588 ;; Defined at:
 14589 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;		None
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;		None
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  1    wreg      enum E12722
 14596 ;; Registers used:
 14597 ;;		wreg, status,2, status,0, pclath, cstack
 14598 ;; Tracked objects:
 14599 ;;		On entry : 0/0
 14600 ;;		On exit  : 0/0
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;Total ram usage:        0 bytes
 14608 ;; Hardware stack levels used:    1
 14609 ;; Hardware stack levels required when called:    1
 14610 ;; This function calls:
 14611 ;;		_i2c1_driver_TXData
 14612 ;; This function is called by:
 14613 ;;		_i2c_ISR
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617                           
 14618                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14619  0F95                     _do_I2C_SEND_ADR_WRITE:	
 14620  0F95                     i1l4144:	
 14621                           ;incstack = 0
 14622                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14623                           
 14624                           
 14625                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 14626  0F95  0021               	movlb	1	; select bank1
 14627  0F96  15A0               	bsf	_i2c_status^(0+128),3
 14628  0F97                     i1l4146:	
 14629                           
 14630                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 14631  0F97  3521               	lslf	(_i2c_status^(0+128)+1),w
 14632  0F98  318F  2726  318F   	fcall	_i2c1_driver_TXData
 14633  0F9B                     i1l4148:	
 14634                           
 14635                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 14636  0F9B  3003               	movlw	3
 14637  0F9C                     i1l146:	
 14638  0F9C  0008               	return
 14639  0F9D                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14640                           
 14641                           	psect	text50
 14642  0FAD                     __ptext50:	
 14643 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14644 ;; Defined at:
 14645 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;		None
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;		None
 14650 ;; Return value:  Size  Location     Type
 14651 ;;                  1    wreg      enum E12722
 14652 ;; Registers used:
 14653 ;;		wreg, status,2, status,0, pclath, cstack
 14654 ;; Tracked objects:
 14655 ;;		On entry : 0/0
 14656 ;;		On exit  : 0/0
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;Total ram usage:        0 bytes
 14664 ;; Hardware stack levels used:    1
 14665 ;; Hardware stack levels required when called:    1
 14666 ;; This function calls:
 14667 ;;		_i2c1_driver_TXData
 14668 ;; This function is called by:
 14669 ;;		_i2c_ISR
 14670 ;; This function uses a non-reentrant model
 14671 ;;
 14672                           
 14673                           
 14674                           ;psect for function _do_I2C_SEND_ADR_READ
 14675  0FAD                     _do_I2C_SEND_ADR_READ:	
 14676  0FAD                     i1l4136:	
 14677                           ;incstack = 0
 14678                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14679                           
 14680                           
 14681                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 14682  0FAD  0021               	movlb	1	; select bank1
 14683  0FAE  15A0               	bsf	_i2c_status^(0+128),3
 14684  0FAF                     i1l4138:	
 14685                           
 14686                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 14687  0FAF  1403               	setc
 14688  0FB0  0D21               	rlf	(_i2c_status^(0+128)+1),w
 14689  0FB1  318F  2726  318F   	fcall	_i2c1_driver_TXData
 14690  0FB4                     i1l4140:	
 14691                           
 14692                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 14693  0FB4  3005               	movlw	5
 14694  0FB5                     i1l143:	
 14695  0FB5  0008               	return
 14696  0FB6                     __end_of_do_I2C_SEND_ADR_READ:	
 14697                           
 14698                           	psect	text51
 14699  0F3F                     __ptext51:	
 14700 ;; *************** function _do_I2C_SEND_STOP *****************
 14701 ;; Defined at:
 14702 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;		None
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;		None
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      enum E12722
 14709 ;; Registers used:
 14710 ;;		wreg, status,2, status,0, pclath, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14720 ;;Total ram usage:        0 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:    1
 14723 ;; This function calls:
 14724 ;;		_i2c1_driver_stop
 14725 ;; This function is called by:
 14726 ;;		_do_I2C_DO_ADDRESS_NACK
 14727 ;;		_do_I2C_TX
 14728 ;;		_do_I2C_TX_EMPTY
 14729 ;;		_i2c_ISR
 14730 ;; This function uses a non-reentrant model
 14731 ;;
 14732                           
 14733                           
 14734                           ;psect for function _do_I2C_SEND_STOP
 14735  0F3F                     _do_I2C_SEND_STOP:	
 14736  0F3F                     i1l3946:	
 14737                           ;incstack = 0
 14738                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 14739                           
 14740                           
 14741                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 14742  0F3F  318F  2702  318F   	fcall	_i2c1_driver_stop
 14743  0F42                     i1l3948:	
 14744                           
 14745                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 14746  0F42  3000               	movlw	0
 14747  0F43                     i1l140:	
 14748  0F43  0008               	return
 14749  0F44                     __end_of_do_I2C_SEND_STOP:	
 14750                           
 14751                           	psect	text52
 14752  0F3A                     __ptext52:	
 14753 ;; *************** function _do_I2C_SEND_RESTART *****************
 14754 ;; Defined at:
 14755 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;		None
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;		None
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  1    wreg      enum E12722
 14762 ;; Registers used:
 14763 ;;		wreg, status,2, status,0, pclath, cstack
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;Total ram usage:        0 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    1
 14776 ;; This function calls:
 14777 ;;		_i2c1_driver_restart
 14778 ;; This function is called by:
 14779 ;;		_do_I2C_DO_ADDRESS_NACK
 14780 ;;		_do_I2C_TX_EMPTY
 14781 ;;		_i2c_ISR
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           
 14786                           ;psect for function _do_I2C_SEND_RESTART
 14787  0F3A                     _do_I2C_SEND_RESTART:	
 14788  0F3A                     i1l3940:	
 14789                           ;incstack = 0
 14790                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14791                           
 14792                           
 14793                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 14794  0F3A  318E  26FF  318F   	fcall	_i2c1_driver_restart
 14795  0F3D                     i1l3942:	
 14796                           
 14797                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 14798  0F3D  3001               	movlw	1
 14799  0F3E                     i1l137:	
 14800  0F3E  0008               	return
 14801  0F3F                     __end_of_do_I2C_SEND_RESTART:	
 14802                           
 14803                           	psect	text53
 14804  0F35                     __ptext53:	
 14805 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 14806 ;; Defined at:
 14807 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;		None
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;		None
 14812 ;; Return value:  Size  Location     Type
 14813 ;;                  1    wreg      enum E12722
 14814 ;; Registers used:
 14815 ;;		wreg, status,2, status,0, pclath, cstack
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14825 ;;Total ram usage:        0 bytes
 14826 ;; Hardware stack levels used:    1
 14827 ;; Hardware stack levels required when called:    1
 14828 ;; This function calls:
 14829 ;;		_i2c1_driver_restart
 14830 ;; This function is called by:
 14831 ;;		_do_I2C_TX
 14832 ;;		_i2c_ISR
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           
 14837                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 14838  0F35                     _do_I2C_SEND_RESTART_WRITE:	
 14839  0F35                     i1l3934:	
 14840                           ;incstack = 0
 14841                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14842                           
 14843                           
 14844                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 14845  0F35  318E  26FF  318F   	fcall	_i2c1_driver_restart
 14846  0F38                     i1l3936:	
 14847                           
 14848                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 14849  0F38  3002               	movlw	2
 14850  0F39                     i1l134:	
 14851  0F39  0008               	return
 14852  0F3A                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 14853                           
 14854                           	psect	text54
 14855  0F30                     __ptext54:	
 14856 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 14857 ;; Defined at:
 14858 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;		None
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;		None
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  1    wreg      enum E12722
 14865 ;; Registers used:
 14866 ;;		wreg, status,2, status,0, pclath, cstack
 14867 ;; Tracked objects:
 14868 ;;		On entry : 0/0
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;Total ram usage:        0 bytes
 14877 ;; Hardware stack levels used:    1
 14878 ;; Hardware stack levels required when called:    1
 14879 ;; This function calls:
 14880 ;;		_i2c1_driver_restart
 14881 ;; This function is called by:
 14882 ;;		_do_I2C_TX
 14883 ;;		_i2c_ISR
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887                           
 14888                           ;psect for function _do_I2C_SEND_RESTART_READ
 14889  0F30                     _do_I2C_SEND_RESTART_READ:	
 14890  0F30                     i1l3928:	
 14891                           ;incstack = 0
 14892                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14893                           
 14894                           
 14895                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 14896  0F30  318E  26FF  318F   	fcall	_i2c1_driver_restart
 14897  0F33                     i1l3930:	
 14898                           
 14899                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 14900  0F33  3001               	movlw	1
 14901  0F34                     i1l131:	
 14902  0F34  0008               	return
 14903  0F35                     __end_of_do_I2C_SEND_RESTART_READ:	
 14904                           
 14905                           	psect	text55
 14906  0F2B                     __ptext55:	
 14907 ;; *************** function _do_I2C_IDLE *****************
 14908 ;; Defined at:
 14909 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;		None
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      enum E12722
 14916 ;; Registers used:
 14917 ;;		wreg, status,2
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;Total ram usage:        0 bytes
 14928 ;; Hardware stack levels used:    1
 14929 ;; This function calls:
 14930 ;;		Nothing
 14931 ;; This function is called by:
 14932 ;;		_i2c_ISR
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           
 14937                           ;psect for function _do_I2C_IDLE
 14938  0F2B                     _do_I2C_IDLE:	
 14939  0F2B                     i1l4128:	
 14940                           ;incstack = 0
 14941                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 14942                           
 14943                           
 14944                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 14945  0F2B  0021               	movlb	1	; select bank1
 14946  0F2C  1020               	bcf	_i2c_status^(0+128),0
 14947  0F2D                     i1l4130:	
 14948                           
 14949                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 14950  0F2D  01AA               	clrf	(_i2c_status^(0+128)+10)
 14951  0F2E                     i1l4132:	
 14952                           
 14953                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 14954  0F2E  300E               	movlw	14
 14955  0F2F                     i1l128:	
 14956  0F2F  0008               	return
 14957  0F30                     __end_of_do_I2C_IDLE:	
 14958                           
 14959                           	psect	text56
 14960  0F8D                     __ptext56:	
 14961 ;; *************** function _do_I2C_RESET *****************
 14962 ;; Defined at:
 14963 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;		None
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      enum E12722
 14970 ;; Registers used:
 14971 ;;		wreg, status,2, status,0, pclath, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    1
 14984 ;; This function calls:
 14985 ;;		_i2c1_driver_resetBus
 14986 ;; This function is called by:
 14987 ;;		_i2c_ISR
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           
 14992                           ;psect for function _do_I2C_RESET
 14993  0F8D                     _do_I2C_RESET:	
 14994  0F8D                     i1l4118:	
 14995                           ;incstack = 0
 14996                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 14997                           
 14998                           
 14999                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 15000  0F8D  318E  26F7  318F   	fcall	_i2c1_driver_resetBus
 15001  0F90                     i1l4120:	
 15002                           
 15003                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 15004  0F90  0021               	movlb	1	; select bank1
 15005  0F91  1020               	bcf	_i2c_status^(0+128),0
 15006  0F92                     i1l4122:	
 15007                           
 15008                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 15009  0F92  01AA               	clrf	(_i2c_status^(0+128)+10)
 15010  0F93                     i1l4124:	
 15011                           
 15012                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 15013  0F93  300E               	movlw	14
 15014  0F94                     i1l125:	
 15015  0F94  0008               	return
 15016  0F95                     __end_of_do_I2C_RESET:	
 15017                           
 15018                           	psect	text57
 15019  0459                     __ptext57:	
 15020 ;; *************** function _do_I2C_TX_EMPTY *****************
 15021 ;; Defined at:
 15022 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;		None
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;		None
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1    wreg      enum E12722
 15029 ;; Registers used:
 15030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15038 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15040 ;;Total ram usage:        3 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:    3
 15043 ;; This function calls:
 15044 ;;		Absolute function
 15045 ;;		_do_I2C_SEND_RESTART
 15046 ;;		_do_I2C_SEND_STOP
 15047 ;;		_i2c_restartWrite
 15048 ;;		_mssp1_setIRQ
 15049 ;;		_rd1RegCompleteHandler
 15050 ;;		_rd2RegCompleteHandler
 15051 ;;		_rdBlkRegCompleteHandler
 15052 ;;		_returnReset
 15053 ;;		_returnStop
 15054 ;;		_wr1RegCompleteHandler
 15055 ;;		_wr2RegCompleteHandler
 15056 ;; This function is called by:
 15057 ;;		_i2c_ISR
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           
 15062                           ;psect for function _do_I2C_TX_EMPTY
 15063  0459                     _do_I2C_TX_EMPTY:	
 15064  0459                     i1l4254:	
 15065                           ;incstack = 0
 15066                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15067                           
 15068                           
 15069                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 15070  0459  0021               	movlb	1	; select bank1
 15071  045A  1520               	bsf	_i2c_status^(0+128),2
 15072                           
 15073                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15074  045B  2C69               	goto	i1l4272
 15075  045C                     i1l4256:	
 15076                           
 15077                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 15078  045C  318F  273A  3184   	fcall	_do_I2C_SEND_RESTART
 15079  045F  2C8B               	goto	i1l200
 15080  0460                     i1l4260:	
 15081                           
 15082                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 15083  0460  318F  270B  3184   	fcall	_mssp1_setIRQ
 15084  0463                     i1l4262:	
 15085                           
 15086                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 15087  0463  3003               	movlw	3
 15088  0464  2C8B               	goto	i1l200
 15089  0465                     i1l4266:	
 15090                           
 15091                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 15092  0465  318F  273F  3184   	fcall	_do_I2C_SEND_STOP
 15093  0468  2C8B               	goto	i1l200
 15094  0469                     i1l4272:	
 15095  0469  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15096  046A  00FA               	movwf	??_do_I2C_TX_EMPTY
 15097  046B  087A               	movf	??_do_I2C_TX_EMPTY,w
 15098  046C  00F9               	movwf	rdBlkRegCompleteHandler@p
 15099  046D  300B               	movlw	11
 15100  046E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15101  046F  0086               	movwf	6
 15102  0470  0187               	clrf	7
 15103  0471  3F41               	moviw [1]fsr1
 15104  0472  008A               	movwf	10
 15105  0473  3F40               	moviw [0]fsr1
 15106  0474  000A               	callw
 15107  0475  3184               	pagesel	$
 15108  0476  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 15109  0477  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 15110                           
 15111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15112                           ; Switch size 1, requested type "simple"
 15113                           ; Number of cases is 1, Range of values is 0 to 0
 15114                           ; switch strategies available:
 15115                           ; Name         Instructions Cycles
 15116                           ; simple_byte            4     3 (average)
 15117                           ; direct_byte            8     6 (fixed)
 15118                           ; jumptable            260     6 (fixed)
 15119                           ;	Chosen strategy is simple_byte
 15120  0478  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 15121  0479  3A00               	xorlw	0	; case 0
 15122  047A  1903               	skipnz
 15123  047B  2C7D               	goto	i1l5214
 15124  047C  2C65               	goto	i1l4266
 15125  047D                     i1l5214:	
 15126                           
 15127                           ; Switch size 1, requested type "simple"
 15128                           ; Number of cases is 4, Range of values is 1 to 4
 15129                           ; switch strategies available:
 15130                           ; Name         Instructions Cycles
 15131                           ; simple_byte           13     7 (average)
 15132                           ; direct_byte           17     9 (fixed)
 15133                           ; jumptable            263     9 (fixed)
 15134                           ;	Chosen strategy is simple_byte
 15135  047D  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 15136  047E  3A01               	xorlw	1	; case 1
 15137  047F  1903               	skipnz
 15138  0480  2C65               	goto	i1l4266
 15139  0481  3A03               	xorlw	3	; case 2
 15140  0482  1903               	skipnz
 15141  0483  2C5C               	goto	i1l4256
 15142  0484  3A01               	xorlw	1	; case 3
 15143  0485  1903               	skipnz
 15144  0486  2C5C               	goto	i1l4256
 15145  0487  3A07               	xorlw	7	; case 4
 15146  0488  1903               	skipnz
 15147  0489  2C60               	goto	i1l4260
 15148  048A  2C65               	goto	i1l4266
 15149  048B                     i1l200:	
 15150  048B  0008               	return
 15151  048C                     __end_of_do_I2C_TX_EMPTY:	
 15152                           
 15153                           	psect	text58
 15154  0F0B                     __ptext58:	
 15155 ;; *************** function _mssp1_setIRQ *****************
 15156 ;; Defined at:
 15157 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;		None
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;		None
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  1    wreg      void 
 15164 ;; Registers used:
 15165 ;;		None
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;Total ram usage:        0 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_do_I2C_TX_EMPTY
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           
 15185                           ;psect for function _mssp1_setIRQ
 15186  0F0B                     _mssp1_setIRQ:	
 15187  0F0B                     i1l3978:	
 15188                           ;incstack = 0
 15189                           ; Regs used in _mssp1_setIRQ: []
 15190                           
 15191                           
 15192                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 15193  0F0B  002E               	movlb	14	; select bank14
 15194  0F0C  140F               	bsf	15,0	;volatile
 15195  0F0D                     i1l579:	
 15196  0F0D  0008               	return
 15197  0F0E                     __end_of_mssp1_setIRQ:	
 15198                           
 15199                           	psect	text59
 15200  0F85                     __ptext59:	
 15201 ;; *************** function _i2c1_driver_isNACK *****************
 15202 ;; Defined at:
 15203 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 15204 ;; Parameters:    Size  Location     Type
 15205 ;;		None
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;		None
 15208 ;; Return value:  Size  Location     Type
 15209 ;;		None               void
 15210 ;; Registers used:
 15211 ;;		wreg, status,2, status,0
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/0
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15221 ;;Total ram usage:        1 bytes
 15222 ;; Hardware stack levels used:    1
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_do_I2C_TX
 15227 ;;		_i2c_ISR
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           
 15232                           ;psect for function _i2c1_driver_isNACK
 15233  0F85                     _i2c1_driver_isNACK:	
 15234  0F85                     i1l3970:	
 15235                           ;incstack = 0
 15236                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15237                           
 15238                           
 15239                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 15240  0F85  0023               	movlb	3	; select bank3
 15241  0F86  0E11               	swapf	17,w	;volatile
 15242  0F87  0C89               	rrf	9,f
 15243  0F88  0C89               	rrf	9,f
 15244  0F89  3901               	andlw	1
 15245  0F8A  00F0               	movwf	??_i2c1_driver_isNACK
 15246  0F8B  0C70               	rrf	??_i2c1_driver_isNACK,w
 15247  0F8C                     i1l614:	
 15248  0F8C  0008               	return
 15249  0F8D                     __end_of_i2c1_driver_isNACK:	
 15250                           
 15251                           	psect	text60
 15252  0F26                     __ptext60:	
 15253 ;; *************** function _i2c1_driver_TXData *****************
 15254 ;; Defined at:
 15255 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 15256 ;; Parameters:    Size  Location     Type
 15257 ;;  d               1    wreg     unsigned char 
 15258 ;; Auto vars:     Size  Location     Type
 15259 ;;  d               1    0[COMMON] unsigned char 
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  1    wreg      void 
 15262 ;; Registers used:
 15263 ;;		wreg
 15264 ;; Tracked objects:
 15265 ;;		On entry : 0/0
 15266 ;;		On exit  : 0/0
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;Total ram usage:        1 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		_do_I2C_SEND_ADR_READ
 15279 ;;		_do_I2C_SEND_ADR_WRITE
 15280 ;;		_do_I2C_TX
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           
 15285                           ;psect for function _i2c1_driver_TXData
 15286  0F26                     _i2c1_driver_TXData:	
 15287                           
 15288                           ;incstack = 0
 15289                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15290                           ;i2c1_driver_TXData@d stored from wreg
 15291  0F26  00F0               	movwf	i2c1_driver_TXData@d
 15292  0F27                     i1l3952:	
 15293                           
 15294                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 15295  0F27  0870               	movf	i2c1_driver_TXData@d,w
 15296  0F28  0023               	movlb	3	; select bank3
 15297  0F29  008C               	movwf	12	;volatile
 15298  0F2A                     i1l629:	
 15299  0F2A  0008               	return
 15300  0F2B                     __end_of_i2c1_driver_TXData:	
 15301                           
 15302                           	psect	text61
 15303  0F08                     __ptext61:	
 15304 ;; *************** function _i2c1_driver_getRXData *****************
 15305 ;; Defined at:
 15306 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 15307 ;; Parameters:    Size  Location     Type
 15308 ;;		None
 15309 ;; Auto vars:     Size  Location     Type
 15310 ;;		None
 15311 ;; Return value:  Size  Location     Type
 15312 ;;                  1    wreg      unsigned char 
 15313 ;; Registers used:
 15314 ;;		wreg
 15315 ;; Tracked objects:
 15316 ;;		On entry : 0/0
 15317 ;;		On exit  : 0/0
 15318 ;;		Unchanged: 0/0
 15319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;Total ram usage:        0 bytes
 15325 ;; Hardware stack levels used:    1
 15326 ;; This function calls:
 15327 ;;		Nothing
 15328 ;; This function is called by:
 15329 ;;		_do_I2C_RX
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           
 15334                           ;psect for function _i2c1_driver_getRXData
 15335  0F08                     _i2c1_driver_getRXData:	
 15336  0F08                     i1l3974:	
 15337                           ;incstack = 0
 15338                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15339                           
 15340                           
 15341                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 15342  0F08  0023               	movlb	3	; select bank3
 15343  0F09  080C               	movf	12,w	;volatile
 15344  0F0A                     i1l620:	
 15345  0F0A  0008               	return
 15346  0F0B                     __end_of_i2c1_driver_getRXData:	
 15347                           
 15348                           	psect	text62
 15349  0F1E                     __ptext62:	
 15350 ;; *************** function _i2c1_driver_sendNACK *****************
 15351 ;; Defined at:
 15352 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;		None
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;		None
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      void 
 15359 ;; Registers used:
 15360 ;;		None
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;Total ram usage:        0 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; This function calls:
 15373 ;;		Nothing
 15374 ;; This function is called by:
 15375 ;;		_do_I2C_DO_NACK_STOP
 15376 ;;		_do_I2C_DO_NACK_RESTART
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           
 15381                           ;psect for function _i2c1_driver_sendNACK
 15382  0F1E                     _i2c1_driver_sendNACK:	
 15383  0F1E                     i1l3874:	
 15384                           ;incstack = 0
 15385                           ; Regs used in _i2c1_driver_sendNACK: []
 15386                           
 15387                           
 15388                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 15389  0F1E  0023               	movlb	3	; select bank3
 15390  0F1F  1691               	bsf	17,5	;volatile
 15391                           
 15392                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 15393  0F20  1611               	bsf	17,4	;volatile
 15394  0F21                     i1l638:	
 15395  0F21  0008               	return
 15396  0F22                     __end_of_i2c1_driver_sendNACK:	
 15397                           
 15398                           	psect	text63
 15399  0EF7                     __ptext63:	
 15400 ;; *************** function _i2c1_driver_resetBus *****************
 15401 ;; Defined at:
 15402 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      void 
 15409 ;; Registers used:
 15410 ;;		None
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15420 ;;Total ram usage:        0 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_do_I2C_RESET
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           
 15430                           ;psect for function _i2c1_driver_resetBus
 15431  0EF7                     _i2c1_driver_resetBus:	
 15432  0EF7                     i1l602:	
 15433                           ;incstack = 0
 15434                           ; Regs used in _i2c1_driver_resetBus: []
 15435                           
 15436  0EF7  0008               	return
 15437  0EF8                     __end_of_i2c1_driver_resetBus:	
 15438                           
 15439                           	psect	text64
 15440  0F05                     __ptext64:	
 15441 ;; *************** function _i2c1_driver_startRX *****************
 15442 ;; Defined at:
 15443 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;		None
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		None
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		_do_I2C_RCEN
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           
 15471                           ;psect for function _i2c1_driver_startRX
 15472  0F05                     _i2c1_driver_startRX:	
 15473  0F05                     i1l3954:	
 15474                           ;incstack = 0
 15475                           ; Regs used in _i2c1_driver_startRX: []
 15476                           
 15477                           
 15478                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 15479  0F05  0023               	movlb	3	; select bank3
 15480  0F06  1591               	bsf	17,3	;volatile
 15481  0F07                     i1l617:	
 15482  0F07  0008               	return
 15483  0F08                     __end_of_i2c1_driver_startRX:	
 15484                           
 15485                           	psect	text65
 15486  06BA                     __ptext65:	
 15487 ;; *************** function _rdBlkRegCompleteHandler *****************
 15488 ;; Defined at:
 15489 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;  p               1    9[COMMON] PTR void 
 15492 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15493 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;		None
 15496 ;; Return value:  Size  Location     Type
 15497 ;;                  1    wreg      enum E358
 15498 ;; Registers used:
 15499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15505 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;Total ram usage:        1 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; Hardware stack levels required when called:    2
 15512 ;; This function calls:
 15513 ;;		_i2c_setBuffer
 15514 ;;		_i2c_setDataCompleteCallback
 15515 ;; This function is called by:
 15516 ;;		_i2c_readDataBlock
 15517 ;;		_do_I2C_DO_ADDRESS_NACK
 15518 ;;		_do_I2C_TX
 15519 ;;		_do_I2C_RX
 15520 ;;		_do_I2C_TX_EMPTY
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           
 15525                           ;psect for function _rdBlkRegCompleteHandler
 15526  06BA                     _rdBlkRegCompleteHandler:	
 15527  06BA                     i1l4020:	
 15528                           ;incstack = 0
 15529                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15530                           
 15531                           
 15532                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 15533  06BA  0879               	movf	rdBlkRegCompleteHandler@p,w
 15534  06BB  0086               	movwf	6
 15535  06BC  0187               	clrf	7
 15536  06BD  3F40               	moviw [0]fsr1
 15537  06BE  00F0               	movwf	i2c_setBuffer@bufferSize
 15538  06BF  3F41               	moviw [1]fsr1
 15539  06C0  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15540  06C1  0879               	movf	rdBlkRegCompleteHandler@p,w
 15541  06C2  3E02               	addlw	2
 15542  06C3  0086               	movwf	6
 15543  06C4  0187               	clrf	7
 15544  06C5  0801               	movf	1,w
 15545  06C6  3187  278F  3186   	fcall	_i2c_setBuffer
 15546                           
 15547                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15548  06C9  3000               	movlw	0
 15549  06CA  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15550  06CB  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15551  06CC  01F7               	clrf	i2c_setDataCompleteCallback@p
 15552  06CD  3187  27E7  3186   	fcall	_i2c_setDataCompleteCallback
 15553  06D0                     i1l4022:	
 15554                           
 15555                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 15556  06D0  3002               	movlw	2
 15557  06D1                     i1l303:	
 15558  06D1  0008               	return
 15559  06D2                     __end_of_rdBlkRegCompleteHandler:	
 15560                           
 15561                           	psect	text66
 15562  072A                     __ptext66:	
 15563 ;; *************** function _rd2RegCompleteHandler *****************
 15564 ;; Defined at:
 15565 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;  p               1    9[COMMON] PTR void 
 15568 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15569 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      enum E358
 15574 ;; Registers used:
 15575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;Total ram usage:        1 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:    2
 15588 ;; This function calls:
 15589 ;;		_i2c_setBuffer
 15590 ;;		_i2c_setDataCompleteCallback
 15591 ;; This function is called by:
 15592 ;;		_i2c_read2ByteRegister
 15593 ;;		_do_I2C_DO_ADDRESS_NACK
 15594 ;;		_do_I2C_TX
 15595 ;;		_do_I2C_RX
 15596 ;;		_do_I2C_TX_EMPTY
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           
 15601                           ;psect for function _rd2RegCompleteHandler
 15602  072A                     _rd2RegCompleteHandler:	
 15603  072A                     i1l4004:	
 15604                           ;incstack = 0
 15605                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15606                           
 15607                           
 15608                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 15609  072A  3002               	movlw	2
 15610  072B  00F0               	movwf	i2c_setBuffer@bufferSize
 15611  072C  3000               	movlw	0
 15612  072D  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15613  072E  0879               	movf	rd2RegCompleteHandler@p,w
 15614  072F  3187  278F  3187   	fcall	_i2c_setBuffer
 15615  0732                     i1l4006:	
 15616                           
 15617                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15618  0732  3000               	movlw	0
 15619  0733  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15620  0734  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15621  0735  01F7               	clrf	i2c_setDataCompleteCallback@p
 15622  0736  3187  27E7  3187   	fcall	_i2c_setDataCompleteCallback
 15623  0739                     i1l4008:	
 15624                           
 15625                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 15626  0739  3002               	movlw	2
 15627  073A                     i1l279:	
 15628  073A  0008               	return
 15629  073B                     __end_of_rd2RegCompleteHandler:	
 15630                           
 15631                           	psect	text67
 15632  073B                     __ptext67:	
 15633 ;; *************** function _rd1RegCompleteHandler *****************
 15634 ;; Defined at:
 15635 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15636 ;; Parameters:    Size  Location     Type
 15637 ;;  p               1    9[COMMON] PTR void 
 15638 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15639 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15640 ;; Auto vars:     Size  Location     Type
 15641 ;;		None
 15642 ;; Return value:  Size  Location     Type
 15643 ;;                  1    wreg      enum E358
 15644 ;; Registers used:
 15645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15646 ;; Tracked objects:
 15647 ;;		On entry : 0/0
 15648 ;;		On exit  : 0/0
 15649 ;;		Unchanged: 0/0
 15650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;Total ram usage:        1 bytes
 15656 ;; Hardware stack levels used:    1
 15657 ;; Hardware stack levels required when called:    2
 15658 ;; This function calls:
 15659 ;;		_i2c_setBuffer
 15660 ;;		_i2c_setDataCompleteCallback
 15661 ;; This function is called by:
 15662 ;;		_i2c_read1ByteRegister
 15663 ;;		_do_I2C_DO_ADDRESS_NACK
 15664 ;;		_do_I2C_TX
 15665 ;;		_do_I2C_RX
 15666 ;;		_do_I2C_TX_EMPTY
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           
 15671                           ;psect for function _rd1RegCompleteHandler
 15672  073B                     _rd1RegCompleteHandler:	
 15673  073B                     i1l3996:	
 15674                           ;incstack = 0
 15675                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15676                           
 15677                           
 15678                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 15679  073B  3001               	movlw	1
 15680  073C  00F0               	movwf	i2c_setBuffer@bufferSize
 15681  073D  3000               	movlw	0
 15682  073E  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15683  073F  0879               	movf	rd1RegCompleteHandler@p,w
 15684  0740  3187  278F  3187   	fcall	_i2c_setBuffer
 15685  0743                     i1l3998:	
 15686                           
 15687                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15688  0743  3000               	movlw	0
 15689  0744  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15690  0745  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15691  0746  01F7               	clrf	i2c_setDataCompleteCallback@p
 15692  0747  3187  27E7  3187   	fcall	_i2c_setDataCompleteCallback
 15693  074A                     i1l4000:	
 15694                           
 15695                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 15696  074A  3002               	movlw	2
 15697  074B                     i1l264:	
 15698  074B  0008               	return
 15699  074C                     __end_of_rd1RegCompleteHandler:	
 15700                           
 15701                           	psect	text68
 15702  074C                     __ptext68:	
 15703 ;; *************** function _wr1RegCompleteHandler *****************
 15704 ;; Defined at:
 15705 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  p               1    9[COMMON] PTR void 
 15708 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15709 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1    wreg      enum E358
 15714 ;; Registers used:
 15715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15716 ;; Tracked objects:
 15717 ;;		On entry : 0/0
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;Total ram usage:        1 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; Hardware stack levels required when called:    2
 15728 ;; This function calls:
 15729 ;;		_i2c_setBuffer
 15730 ;;		_i2c_setDataCompleteCallback
 15731 ;; This function is called by:
 15732 ;;		_i2c_write1ByteRegister
 15733 ;;		_do_I2C_DO_ADDRESS_NACK
 15734 ;;		_do_I2C_TX
 15735 ;;		_do_I2C_RX
 15736 ;;		_do_I2C_TX_EMPTY
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           
 15741                           ;psect for function _wr1RegCompleteHandler
 15742  074C                     _wr1RegCompleteHandler:	
 15743  074C                     i1l3988:	
 15744                           ;incstack = 0
 15745                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15746                           
 15747                           
 15748                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 15749  074C  3001               	movlw	1
 15750  074D  00F0               	movwf	i2c_setBuffer@bufferSize
 15751  074E  3000               	movlw	0
 15752  074F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15753  0750  0879               	movf	wr1RegCompleteHandler@p,w
 15754  0751  3187  278F  3187   	fcall	_i2c_setBuffer
 15755  0754                     i1l3990:	
 15756                           
 15757                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 15758  0754  3000               	movlw	0
 15759  0755  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15760  0756  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15761  0757  01F7               	clrf	i2c_setDataCompleteCallback@p
 15762  0758  3187  27E7  3187   	fcall	_i2c_setDataCompleteCallback
 15763  075B                     i1l3992:	
 15764                           
 15765                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 15766  075B  3004               	movlw	4
 15767  075C                     i1l243:	
 15768  075C  0008               	return
 15769  075D                     __end_of_wr1RegCompleteHandler:	
 15770                           
 15771                           	psect	text69
 15772  0002                     __ptext69:	
 15773 ;; *************** function _returnReset *****************
 15774 ;; Defined at:
 15775 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;  p               1    9[COMMON] PTR void 
 15778 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15779 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15780 ;; Auto vars:     Size  Location     Type
 15781 ;;		None
 15782 ;; Return value:  Size  Location     Type
 15783 ;;                  1    wreg      enum E12568
 15784 ;; Registers used:
 15785 ;;		wreg
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15795 ;;Total ram usage:        1 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; This function calls:
 15798 ;;		Nothing
 15799 ;; This function is called by:
 15800 ;;		_i2c_open
 15801 ;;		_do_I2C_DO_ADDRESS_NACK
 15802 ;;		_do_I2C_TX
 15803 ;;		_do_I2C_RX
 15804 ;;		_do_I2C_TX_EMPTY
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           
 15809                           ;psect for function _returnReset
 15810  0002                     _returnReset:	
 15811  0002                     i1l3984:	
 15812                           ;incstack = 0
 15813                           ; Regs used in _returnReset: [wreg]
 15814                           
 15815                           
 15816                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 15817  0002  3005               	movlw	5
 15818  0003                     i1l219:	
 15819  0003  0008               	return
 15820  0004                     __end_of_returnReset:	
 15821                           
 15822                           	psect	text70
 15823  0EFA                     __ptext70:	
 15824 ;; *************** function _returnStop *****************
 15825 ;; Defined at:
 15826 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;  p               1    9[COMMON] PTR void 
 15829 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15830 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15831 ;; Auto vars:     Size  Location     Type
 15832 ;;		None
 15833 ;; Return value:  Size  Location     Type
 15834 ;;                  1    wreg      enum E12568
 15835 ;; Registers used:
 15836 ;;		wreg
 15837 ;; Tracked objects:
 15838 ;;		On entry : 0/0
 15839 ;;		On exit  : 0/0
 15840 ;;		Unchanged: 0/0
 15841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15842 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;Total ram usage:        1 bytes
 15847 ;; Hardware stack levels used:    1
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_setCallBack
 15852 ;;		_i2c_open
 15853 ;;		_do_I2C_DO_ADDRESS_NACK
 15854 ;;		_do_I2C_TX
 15855 ;;		_do_I2C_RX
 15856 ;;		_do_I2C_TX_EMPTY
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           
 15861                           ;psect for function _returnStop
 15862  0EFA                     _returnStop:	
 15863  0EFA                     i1l3980:	
 15864                           ;incstack = 0
 15865                           ; Regs used in _returnStop: [wreg]
 15866                           
 15867                           
 15868                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 15869  0EFA  3001               	movlw	1
 15870  0EFB                     i1l216:	
 15871  0EFB  0008               	return
 15872  0EFC                     __end_of_returnStop:	
 15873                           
 15874                           	psect	text71
 15875  0EF8                     __ptext71:	
 15876 ;; *************** function _i2c_restartWrite *****************
 15877 ;; Defined at:
 15878 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 15879 ;; Parameters:    Size  Location     Type
 15880 ;;  p               1    9[COMMON] PTR void 
 15881 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15882 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;		None
 15885 ;; Return value:  Size  Location     Type
 15886 ;;                  1    wreg      enum E358
 15887 ;; Registers used:
 15888 ;;		wreg
 15889 ;; Tracked objects:
 15890 ;;		On entry : 0/0
 15891 ;;		On exit  : 0/0
 15892 ;;		Unchanged: 0/0
 15893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15894 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;Total ram usage:        1 bytes
 15899 ;; Hardware stack levels used:    1
 15900 ;; This function calls:
 15901 ;;		Nothing
 15902 ;; This function is called by:
 15903 ;;		_i2c_write1ByteRegister
 15904 ;;		_i2c_writeNBytes
 15905 ;;		_i2c_read1ByteRegister
 15906 ;;		_i2c_read2ByteRegister
 15907 ;;		_i2c_write2ByteRegister
 15908 ;;		_i2c_readDataBlock
 15909 ;;		_do_I2C_DO_ADDRESS_NACK
 15910 ;;		_do_I2C_TX
 15911 ;;		_do_I2C_RX
 15912 ;;		_do_I2C_TX_EMPTY
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           
 15917                           ;psect for function _i2c_restartWrite
 15918  0EF8                     _i2c_restartWrite:	
 15919  0EF8                     i1l3916:	
 15920                           ;incstack = 0
 15921                           ; Regs used in _i2c_restartWrite: [wreg]
 15922                           
 15923                           
 15924                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 15925  0EF8  3003               	movlw	3
 15926  0EF9                     i1l9:	
 15927  0EF9  0008               	return
 15928  0EFA                     __end_of_i2c_restartWrite:	
 15929                           
 15930                           	psect	text72
 15931  075D                     __ptext72:	
 15932 ;; *************** function _wr2RegCompleteHandler *****************
 15933 ;; Defined at:
 15934 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;  p               1    9[COMMON] PTR void 
 15937 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15938 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;		None
 15941 ;; Return value:  Size  Location     Type
 15942 ;;                  1    wreg      enum E358
 15943 ;; Registers used:
 15944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15950 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;Total ram usage:        1 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:    2
 15957 ;; This function calls:
 15958 ;;		_i2c_setBuffer
 15959 ;;		_i2c_setDataCompleteCallback
 15960 ;; This function is called by:
 15961 ;;		_i2c_write2ByteRegister
 15962 ;;		_do_I2C_DO_ADDRESS_NACK
 15963 ;;		_do_I2C_TX
 15964 ;;		_do_I2C_RX
 15965 ;;		_do_I2C_TX_EMPTY
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           
 15970                           ;psect for function _wr2RegCompleteHandler
 15971  075D                     _wr2RegCompleteHandler:	
 15972  075D                     i1l4012:	
 15973                           ;incstack = 0
 15974                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15975                           
 15976                           
 15977                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 15978  075D  3002               	movlw	2
 15979  075E  00F0               	movwf	i2c_setBuffer@bufferSize
 15980  075F  3000               	movlw	0
 15981  0760  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15982  0761  0879               	movf	wr2RegCompleteHandler@p,w
 15983  0762  3187  278F  3187   	fcall	_i2c_setBuffer
 15984  0765                     i1l4014:	
 15985                           
 15986                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15987  0765  3000               	movlw	0
 15988  0766  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15989  0767  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15990  0768  01F7               	clrf	i2c_setDataCompleteCallback@p
 15991  0769  3187  27E7  3187   	fcall	_i2c_setDataCompleteCallback
 15992  076C                     i1l4016:	
 15993                           
 15994                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 15995  076C  3004               	movlw	4
 15996  076D                     i1l291:	
 15997  076D  0008               	return
 15998  076E                     __end_of_wr2RegCompleteHandler:	
 15999                           
 16000                           	psect	text73
 16001  07E7                     __ptext73:	
 16002 ;; *************** function _i2c_setDataCompleteCallback *****************
 16003 ;; Defined at:
 16004 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 16007 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16008 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16009 ;;  p               1    7[COMMON] PTR void 
 16010 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16011 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;		None
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  1    wreg      void 
 16016 ;; Registers used:
 16017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16027 ;;Total ram usage:        4 bytes
 16028 ;; Hardware stack levels used:    1
 16029 ;; Hardware stack levels required when called:    1
 16030 ;; This function calls:
 16031 ;;		_setCallBack
 16032 ;; This function is called by:
 16033 ;;		_wr1RegCompleteHandler
 16034 ;;		_rd1RegCompleteHandler
 16035 ;;		_rd2RegCompleteHandler
 16036 ;;		_wr2RegCompleteHandler
 16037 ;;		_rdBlkRegCompleteHandler
 16038 ;;		_i2c_write1ByteRegister
 16039 ;;		_i2c_read1ByteRegister
 16040 ;;		_i2c_read2ByteRegister
 16041 ;;		_i2c_write2ByteRegister
 16042 ;;		_i2c_readDataBlock
 16043 ;; This function uses a non-reentrant model
 16044 ;;
 16045                           
 16046                           
 16047                           ;psect for function _i2c_setDataCompleteCallback
 16048  07E7                     _i2c_setDataCompleteCallback:	
 16049  07E7                     i1l3862:	
 16050                           ;incstack = 0
 16051                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16052                           
 16053                           
 16054                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 16055  07E7  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 16056  07E8  00F1               	movwf	setCallBack@cb+1
 16057  07E9  0875               	movf	i2c_setDataCompleteCallback@cb,w
 16058  07EA  00F0               	movwf	setCallBack@cb
 16059  07EB  0877               	movf	i2c_setDataCompleteCallback@p,w
 16060  07EC  00F8               	movwf	??_i2c_setDataCompleteCallback
 16061  07ED  0878               	movf	??_i2c_setDataCompleteCallback,w
 16062  07EE  00F2               	movwf	setCallBack@p
 16063  07EF  3000               	movlw	0
 16064  07F0  3185  253D  3187   	fcall	_setCallBack
 16065  07F3                     i1l73:	
 16066  07F3  0008               	return
 16067  07F4                     __end_of_i2c_setDataCompleteCallback:	
 16068                           
 16069                           	psect	text74
 16070  053D                     __ptext74:	
 16071 ;; *************** function _setCallBack *****************
 16072 ;; Defined at:
 16073 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;  idx             1    wreg     enum E12740
 16076 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 16077 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16078 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 16079 ;;  p               1    2[COMMON] PTR void 
 16080 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16081 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  idx             1    4[COMMON] enum E12740
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  1    wreg      void 
 16086 ;; Registers used:
 16087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/0
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;Total ram usage:        5 bytes
 16098 ;; Hardware stack levels used:    1
 16099 ;; This function calls:
 16100 ;;		Nothing
 16101 ;; This function is called by:
 16102 ;;		_i2c_setDataCompleteCallback
 16103 ;;		_i2c_setWriteCollisionCallback
 16104 ;;		_i2c_setAddressNACKCallback
 16105 ;;		_i2c_setDataNACKCallback
 16106 ;;		_i2c_setTimeOutCallback
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110                           
 16111                           ;psect for function _setCallBack
 16112  053D                     _setCallBack:	
 16113                           
 16114                           ;incstack = 0
 16115                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16116                           ;setCallBack@idx stored from wreg
 16117  053D  00F4               	movwf	setCallBack@idx
 16118  053E                     i1l3856:	
 16119                           
 16120                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 16121  053E  0870               	movf	setCallBack@cb,w
 16122  053F  0471               	iorwf	setCallBack@cb+1,w
 16123  0540  1903               	btfsc	3,2
 16124  0541  2D43               	goto	u140_21
 16125  0542  2D44               	goto	u140_20
 16126  0543                     u140_21:	
 16127  0543  2D55               	goto	i1l3860
 16128  0544                     u140_20:	
 16129  0544                     i1l3858:	
 16130                           
 16131                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 16132  0544  3574               	lslf	setCallBack@idx,w
 16133  0545  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16134  0546  0086               	movwf	6
 16135  0547  0187               	clrf	7
 16136  0548  0870               	movf	setCallBack@cb,w
 16137  0549  3FC0               	movwi [0]fsr1
 16138  054A  0871               	movf	setCallBack@cb+1,w
 16139  054B  3FC1               	movwi [1]fsr1
 16140                           
 16141                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 16142  054C  0872               	movf	setCallBack@p,w
 16143  054D  00F3               	movwf	??_setCallBack
 16144  054E  0874               	movf	setCallBack@idx,w
 16145  054F  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16146  0550  0086               	movwf	6
 16147  0551  0187               	clrf	7
 16148  0552  0873               	movf	??_setCallBack,w
 16149  0553  0081               	movwf	1
 16150                           
 16151                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 16152  0554  2D62               	goto	i1l224
 16153  0555                     i1l3860:	
 16154                           
 16155                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 16156  0555  3574               	lslf	setCallBack@idx,w
 16157  0556  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16158  0557  0086               	movwf	6
 16159  0558  0187               	clrf	7
 16160  0559  30FA               	movlw	low _returnStop
 16161  055A  3FC0               	movwi [0]fsr1
 16162  055B  300E               	movlw	high _returnStop
 16163  055C  3FC1               	movwi [1]fsr1
 16164                           
 16165                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 16166  055D  0874               	movf	setCallBack@idx,w
 16167  055E  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16168  055F  0086               	movwf	6
 16169  0560  0187               	clrf	7
 16170  0561  0181               	clrf	1
 16171  0562                     i1l224:	
 16172  0562  0008               	return
 16173  0563                     __end_of_setCallBack:	
 16174                           
 16175                           	psect	text75
 16176  078F                     __ptext75:	
 16177 ;; *************** function _i2c_setBuffer *****************
 16178 ;; Defined at:
 16179 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16180 ;; Parameters:    Size  Location     Type
 16181 ;;  buffer          1    wreg     PTR void 
 16182 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16183 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16184 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16185 ;;  bufferSize      2    0[COMMON] unsigned int 
 16186 ;; Auto vars:     Size  Location     Type
 16187 ;;  buffer          1    3[COMMON] PTR void 
 16188 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16189 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16190 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16191 ;; Return value:  Size  Location     Type
 16192 ;;                  1    wreg      void 
 16193 ;; Registers used:
 16194 ;;		wreg
 16195 ;; Tracked objects:
 16196 ;;		On entry : 0/0
 16197 ;;		On exit  : 0/0
 16198 ;;		Unchanged: 0/0
 16199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;Total ram usage:        4 bytes
 16205 ;; Hardware stack levels used:    1
 16206 ;; This function calls:
 16207 ;;		Nothing
 16208 ;; This function is called by:
 16209 ;;		_wr1RegCompleteHandler
 16210 ;;		_rd1RegCompleteHandler
 16211 ;;		_rd2RegCompleteHandler
 16212 ;;		_wr2RegCompleteHandler
 16213 ;;		_rdBlkRegCompleteHandler
 16214 ;;		_i2c_write1ByteRegister
 16215 ;;		_i2c_writeNBytes
 16216 ;;		_i2c_read1ByteRegister
 16217 ;;		_i2c_read2ByteRegister
 16218 ;;		_i2c_write2ByteRegister
 16219 ;;		_i2c_readDataBlock
 16220 ;;		_i2c_readNBytes
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           
 16225                           ;psect for function _i2c_setBuffer
 16226  078F                     _i2c_setBuffer:	
 16227                           
 16228                           ;incstack = 0
 16229                           ; Regs used in _i2c_setBuffer: [wreg]
 16230                           ;i2c_setBuffer@buffer stored from wreg
 16231  078F  00F3               	movwf	i2c_setBuffer@buffer
 16232  0790                     i1l3864:	
 16233                           
 16234                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 16235  0790  0021               	movlb	1	; select bank1
 16236  0791  1D20               	btfss	_i2c_status^(0+128),2
 16237  0792  2F94               	goto	u141_21
 16238  0793  2F95               	goto	u141_20
 16239  0794                     u141_21:	
 16240  0794  2F9E               	goto	i1l103
 16241  0795                     u141_20:	
 16242  0795                     i1l3866:	
 16243                           
 16244                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 16245  0795  0873               	movf	i2c_setBuffer@buffer,w
 16246  0796  00F2               	movwf	??_i2c_setBuffer
 16247  0797  0872               	movf	??_i2c_setBuffer,w
 16248  0798  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16249                           
 16250                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 16251  0799  0871               	movf	i2c_setBuffer@bufferSize+1,w
 16252  079A  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16253  079B  0870               	movf	i2c_setBuffer@bufferSize,w
 16254  079C  00A3               	movwf	(_i2c_status^(0+128)+3)
 16255  079D                     i1l3868:	
 16256                           
 16257                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 16258  079D  1120               	bcf	_i2c_status^(0+128),2
 16259  079E                     i1l103:	
 16260  079E  0008               	return
 16261  079F                     __end_of_i2c_setBuffer:	
 16262                           
 16263                           	psect	text76
 16264  0F02                     __ptext76:	
 16265 ;; *************** function _i2c1_driver_stop *****************
 16266 ;; Defined at:
 16267 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;		None
 16270 ;; Auto vars:     Size  Location     Type
 16271 ;;		None
 16272 ;; Return value:  Size  Location     Type
 16273 ;;                  1    wreg      void 
 16274 ;; Registers used:
 16275 ;;		None
 16276 ;; Tracked objects:
 16277 ;;		On entry : 0/0
 16278 ;;		On exit  : 0/0
 16279 ;;		Unchanged: 0/0
 16280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16285 ;;Total ram usage:        0 bytes
 16286 ;; Hardware stack levels used:    1
 16287 ;; This function calls:
 16288 ;;		Nothing
 16289 ;; This function is called by:
 16290 ;;		_do_I2C_SEND_STOP
 16291 ;; This function uses a non-reentrant model
 16292 ;;
 16293                           
 16294                           
 16295                           ;psect for function _i2c1_driver_stop
 16296  0F02                     _i2c1_driver_stop:	
 16297  0F02                     i1l3872:	
 16298                           ;incstack = 0
 16299                           ; Regs used in _i2c1_driver_stop: []
 16300                           
 16301                           
 16302                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 16303  0F02  0023               	movlb	3	; select bank3
 16304  0F03  1511               	bsf	17,2	;volatile
 16305  0F04                     i1l611:	
 16306  0F04  0008               	return
 16307  0F05                     __end_of_i2c1_driver_stop:	
 16308                           
 16309                           	psect	text77
 16310  0EFF                     __ptext77:	
 16311 ;; *************** function _i2c1_driver_restart *****************
 16312 ;; Defined at:
 16313 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;		None
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;		None
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  1    wreg      void 
 16320 ;; Registers used:
 16321 ;;		None
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16331 ;;Total ram usage:        0 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; This function calls:
 16334 ;;		Nothing
 16335 ;; This function is called by:
 16336 ;;		_do_I2C_SEND_RESTART_READ
 16337 ;;		_do_I2C_SEND_RESTART_WRITE
 16338 ;;		_do_I2C_SEND_RESTART
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           
 16343                           ;psect for function _i2c1_driver_restart
 16344  0EFF                     _i2c1_driver_restart:	
 16345  0EFF                     i1l3870:	
 16346                           ;incstack = 0
 16347                           ; Regs used in _i2c1_driver_restart: []
 16348                           
 16349                           
 16350                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 16351  0EFF  0023               	movlb	3	; select bank3
 16352  0F00  1491               	bsf	17,1	;volatile
 16353  0F01                     i1l608:	
 16354  0F01  0008               	return
 16355  0F02                     __end_of_i2c1_driver_restart:	
 16356                           
 16357                           	psect	text78
 16358  0F1A                     __ptext78:	
 16359 ;; *************** function _i2c1_driver_sendACK *****************
 16360 ;; Defined at:
 16361 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 16362 ;; Parameters:    Size  Location     Type
 16363 ;;		None
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;		None
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		None
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;Total ram usage:        0 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; This function calls:
 16382 ;;		Nothing
 16383 ;; This function is called by:
 16384 ;;		_do_I2C_DO_ACK
 16385 ;;		_do_I2C_RX
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           
 16390                           ;psect for function _i2c1_driver_sendACK
 16391  0F1A                     _i2c1_driver_sendACK:	
 16392  0F1A                     i1l3956:	
 16393                           ;incstack = 0
 16394                           ; Regs used in _i2c1_driver_sendACK: []
 16395                           
 16396                           
 16397                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 16398  0F1A  0023               	movlb	3	; select bank3
 16399  0F1B  1291               	bcf	17,5	;volatile
 16400                           
 16401                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 16402  0F1C  1611               	bsf	17,4	;volatile
 16403  0F1D                     i1l635:	
 16404  0F1D  0008               	return
 16405  0F1E                     __end_of_i2c1_driver_sendACK:	
 16406                           
 16407                           	psect	text79
 16408  07AE                     __ptext79:	
 16409 ;; *************** function _TMR2_ISR *****************
 16410 ;; Defined at:
 16411 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;		None
 16414 ;; Auto vars:     Size  Location     Type
 16415 ;;		None
 16416 ;; Return value:  Size  Location     Type
 16417 ;;                  1    wreg      void 
 16418 ;; Registers used:
 16419 ;;		wreg, status,2, status,0, pclath, cstack
 16420 ;; Tracked objects:
 16421 ;;		On entry : 0/0
 16422 ;;		On exit  : 0/0
 16423 ;;		Unchanged: 0/0
 16424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16429 ;;Total ram usage:        0 bytes
 16430 ;; Hardware stack levels used:    1
 16431 ;; Hardware stack levels required when called:    1
 16432 ;; This function calls:
 16433 ;;		Absolute function
 16434 ;;		_TMR2_DefaultInterruptHandler
 16435 ;;		_handler_clock_ms
 16436 ;; This function is called by:
 16437 ;;		_INTERRUPT_InterruptManager
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           
 16442                           ;psect for function _TMR2_ISR
 16443  07AE                     _TMR2_ISR:	
 16444  07AE                     i1l4680:	
 16445                           ;incstack = 0
 16446                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16447                           
 16448                           
 16449                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 16450  07AE  002E               	movlb	14	; select bank14
 16451  07AF  1090               	bcf	16,1	;volatile
 16452  07B0                     i1l4682:	
 16453                           
 16454                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 16455  07B0  0020               	movlb	0	; select bank0
 16456  07B1  084C               	movf	_TMR2_InterruptHandler,w
 16457  07B2  044D               	iorwf	_TMR2_InterruptHandler+1,w
 16458  07B3  1903               	btfsc	3,2
 16459  07B4  2FB6               	goto	u183_21
 16460  07B5  2FB7               	goto	u183_20
 16461  07B6                     u183_21:	
 16462  07B6  2FBC               	goto	i1l1038
 16463  07B7                     u183_20:	
 16464  07B7                     i1l4684:	
 16465                           
 16466                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 16467  07B7  084D               	movf	_TMR2_InterruptHandler+1,w
 16468  07B8  008A               	movwf	10
 16469  07B9  084C               	movf	_TMR2_InterruptHandler,w
 16470  07BA  000A               	callw
 16471  07BB  3187               	pagesel	$
 16472  07BC                     i1l1038:	
 16473  07BC  0008               	return
 16474  07BD                     __end_of_TMR2_ISR:	
 16475                           
 16476                           	psect	text80
 16477  0EF6                     __ptext80:	
 16478 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 16479 ;; Defined at:
 16480 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;		None
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		None
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;Total ram usage:        0 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; This function calls:
 16501 ;;		Nothing
 16502 ;; This function is called by:
 16503 ;;		_TMR2_Initialize
 16504 ;;		_TMR2_ISR
 16505 ;; This function uses a non-reentrant model
 16506 ;;
 16507                           
 16508                           
 16509                           ;psect for function _TMR2_DefaultInterruptHandler
 16510  0EF6                     _TMR2_DefaultInterruptHandler:	
 16511  0EF6                     i1l1044:	
 16512                           ;incstack = 0
 16513                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 16514                           
 16515  0EF6  0008               	return
 16516  0EF7                     __end_of_TMR2_DefaultInterruptHandler:	
 16517                           
 16518                           	psect	text81
 16519  07F4                     __ptext81:	
 16520 ;; *************** function _handler_clock_ms *****************
 16521 ;; Defined at:
 16522 ;;		line 337 in file "main.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;		None
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  1    wreg      void 
 16529 ;; Registers used:
 16530 ;;		wreg, status,2, status,0
 16531 ;; Tracked objects:
 16532 ;;		On entry : 0/0
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16540 ;;Total ram usage:        1 bytes
 16541 ;; Hardware stack levels used:    1
 16542 ;; This function calls:
 16543 ;;		Nothing
 16544 ;; This function is called by:
 16545 ;;		_main
 16546 ;;		_TMR2_ISR
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           
 16551                           ;psect for function _handler_clock_ms
 16552  07F4                     _handler_clock_ms:	
 16553  07F4                     i1l4562:	
 16554                           ;incstack = 0
 16555                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 16556                           
 16557                           
 16558                           ;main.c: 338:     clkms++;
 16559  07F4  3001               	movlw	1
 16560  07F5  00F0               	movwf	??_handler_clock_ms
 16561  07F6  0870               	movf	??_handler_clock_ms,w
 16562  07F7  07FD               	addwf	_clkms,f	;volatile
 16563  07F8                     i1l4564:	
 16564                           
 16565                           ;main.c: 340:     if(clkms >= 200){
 16566  07F8  30C8               	movlw	200
 16567  07F9  027D               	subwf	_clkms,w	;volatile
 16568  07FA  1C03               	skipc
 16569  07FB  2FFD               	goto	u174_21
 16570  07FC  2FFE               	goto	u174_20
 16571  07FD                     u174_21:	
 16572  07FD  2FFF               	goto	i1l1248
 16573  07FE                     u174_20:	
 16574  07FE                     i1l4566:	
 16575                           
 16576                           ;main.c: 341:         clkms = 0;
 16577  07FE  01FD               	clrf	_clkms	;volatile
 16578  07FF                     i1l1248:	
 16579  07FF  0008               	return
 16580  0800                     __end_of_handler_clock_ms:	
 16581                           
 16582                           	psect	text82
 16583  06D2                     __ptext82:	
 16584 ;; *************** function _TMR1_ISR *****************
 16585 ;; Defined at:
 16586 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		wreg, status,2, status,0, pclath, cstack
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;Total ram usage:        0 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; Hardware stack levels required when called:    1
 16607 ;; This function calls:
 16608 ;;		Absolute function
 16609 ;;		_TMR1_DefaultInterruptHandler
 16610 ;;		_TMR1_WriteTimer
 16611 ;;		_handler_clock_hms
 16612 ;; This function is called by:
 16613 ;;		_INTERRUPT_InterruptManager
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           
 16618                           ;psect for function _TMR1_ISR
 16619  06D2                     _TMR1_ISR:	
 16620  06D2                     i1l4672:	
 16621                           ;incstack = 0
 16622                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16623                           
 16624                           
 16625                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 16626  06D2  002E               	movlb	14	; select bank14
 16627  06D3  1010               	bcf	16,0	;volatile
 16628  06D4                     i1l4674:	
 16629                           
 16630                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 16631  06D4  0020               	movlb	0	; select bank0
 16632  06D5  0851               	movf	_timer1ReloadVal+1,w	;volatile
 16633  06D6  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16634  06D7  0850               	movf	_timer1ReloadVal,w	;volatile
 16635  06D8  00F0               	movwf	TMR1_WriteTimer@timerVal
 16636  06D9  3187  276E  3186   	fcall	_TMR1_WriteTimer
 16637  06DC                     i1l4676:	
 16638                           
 16639                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 16640  06DC  0020               	movlb	0	; select bank0
 16641  06DD  084E               	movf	_TMR1_InterruptHandler,w
 16642  06DE  044F               	iorwf	_TMR1_InterruptHandler+1,w
 16643  06DF  1903               	btfsc	3,2
 16644  06E0  2EE2               	goto	u182_21
 16645  06E1  2EE3               	goto	u182_20
 16646  06E2                     u182_21:	
 16647  06E2  2EE8               	goto	i1l896
 16648  06E3                     u182_20:	
 16649  06E3                     i1l4678:	
 16650                           
 16651                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 16652  06E3  084F               	movf	_TMR1_InterruptHandler+1,w
 16653  06E4  008A               	movwf	10
 16654  06E5  084E               	movf	_TMR1_InterruptHandler,w
 16655  06E6  000A               	callw
 16656  06E7  3186               	pagesel	$
 16657  06E8                     i1l896:	
 16658  06E8  0008               	return
 16659  06E9                     __end_of_TMR1_ISR:	
 16660                           
 16661                           	psect	text83
 16662  0EF5                     __ptext83:	
 16663 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16664 ;; Defined at:
 16665 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;		None
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;		None
 16670 ;; Return value:  Size  Location     Type
 16671 ;;                  1    wreg      void 
 16672 ;; Registers used:
 16673 ;;		None
 16674 ;; Tracked objects:
 16675 ;;		On entry : 0/0
 16676 ;;		On exit  : 0/0
 16677 ;;		Unchanged: 0/0
 16678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;Total ram usage:        0 bytes
 16684 ;; Hardware stack levels used:    1
 16685 ;; This function calls:
 16686 ;;		Nothing
 16687 ;; This function is called by:
 16688 ;;		_TMR1_Initialize
 16689 ;;		_TMR1_ISR
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           
 16694                           ;psect for function _TMR1_DefaultInterruptHandler
 16695  0EF5                     _TMR1_DefaultInterruptHandler:	
 16696  0EF5                     i1l902:	
 16697                           ;incstack = 0
 16698                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16699                           
 16700  0EF5  0008               	return
 16701  0EF6                     __end_of_TMR1_DefaultInterruptHandler:	
 16702                           
 16703                           	psect	text84
 16704  04E5                     __ptext84:	
 16705 ;; *************** function _handler_clock_hms *****************
 16706 ;; Defined at:
 16707 ;;		line 320 in file "main.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;		None
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;		None
 16712 ;; Return value:  Size  Location     Type
 16713 ;;                  1    wreg      void 
 16714 ;; Registers used:
 16715 ;;		wreg, status,2, status,0
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;Total ram usage:        1 bytes
 16726 ;; Hardware stack levels used:    1
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_main
 16731 ;;		_TMR1_ISR
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           
 16736                           ;psect for function _handler_clock_hms
 16737  04E5                     _handler_clock_hms:	
 16738  04E5                     i1l4544:	
 16739                           ;incstack = 0
 16740                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 16741                           
 16742                           
 16743                           ;main.c: 322:     if(!config_mode){
 16744  04E5  0020               	movlb	0	; select bank0
 16745  04E6  0830               	movf	_config_mode,w	;volatile
 16746  04E7  1D03               	btfss	3,2
 16747  04E8  2CEA               	goto	u169_21
 16748  04E9  2CEB               	goto	u169_20
 16749  04EA                     u169_21:	
 16750  04EA  2CF6               	goto	i1l4548
 16751  04EB                     u169_20:	
 16752  04EB                     i1l4546:	
 16753  04EB  1003               	clrc
 16754  04EC  1F96               	btfss	22,7	;volatile
 16755  04ED  1403               	setc
 16756  04EE  1803               	btfsc	3,0
 16757  04EF  2CF1               	goto	u170_21
 16758  04F0  2CF4               	goto	u170_20
 16759  04F1                     u170_21:	
 16760  04F1  0020               	movlb	0	; select bank0
 16761  04F2  1796               	bsf	22,7	;volatile
 16762  04F3  2CF6               	goto	u171_24
 16763  04F4                     u170_20:	
 16764  04F4  0020               	movlb	0	; select bank0
 16765  04F5  1396               	bcf	22,7	;volatile
 16766  04F6                     u171_24:	
 16767  04F6                     i1l4548:	
 16768                           
 16769                           ;main.c: 326:     seg++;
 16770  04F6  3001               	movlw	1
 16771  04F7  00F0               	movwf	??_handler_clock_hms
 16772  04F8  0870               	movf	??_handler_clock_hms,w
 16773  04F9  07B5               	addwf	_seg,f	;volatile
 16774  04FA                     i1l4550:	
 16775                           
 16776                           ;main.c: 327:     if(seg >= 60) {
 16777  04FA  303C               	movlw	60
 16778  04FB  0235               	subwf	_seg,w	;volatile
 16779  04FC  1C03               	skipc
 16780  04FD  2CFF               	goto	u172_21
 16781  04FE  2D00               	goto	u172_20
 16782  04FF                     u172_21:	
 16783  04FF  2D10               	goto	i1l1244
 16784  0500                     u172_20:	
 16785  0500                     i1l4552:	
 16786                           
 16787                           ;main.c: 328:         clkm++;
 16788  0500  3001               	movlw	1
 16789  0501  00F0               	movwf	??_handler_clock_hms
 16790  0502  0870               	movf	??_handler_clock_hms,w
 16791  0503  07B6               	addwf	_clkm,f	;volatile
 16792  0504                     i1l4554:	
 16793                           
 16794                           ;main.c: 329:         seg = 0;
 16795  0504  01B5               	clrf	_seg	;volatile
 16796  0505                     i1l4556:	
 16797                           
 16798                           ;main.c: 330:         if(clkm >= 60) {
 16799  0505  303C               	movlw	60
 16800  0506  0236               	subwf	_clkm,w	;volatile
 16801  0507  1C03               	skipc
 16802  0508  2D0A               	goto	u173_21
 16803  0509  2D0B               	goto	u173_20
 16804  050A                     u173_21:	
 16805  050A  2D10               	goto	i1l1244
 16806  050B                     u173_20:	
 16807  050B                     i1l4558:	
 16808                           
 16809                           ;main.c: 331:             clkh++;
 16810  050B  3001               	movlw	1
 16811  050C  00F0               	movwf	??_handler_clock_hms
 16812  050D  0870               	movf	??_handler_clock_hms,w
 16813  050E  07B7               	addwf	_clkh,f	;volatile
 16814  050F                     i1l4560:	
 16815                           
 16816                           ;main.c: 332:             clkm = 0;
 16817  050F  01B6               	clrf	_clkm	;volatile
 16818  0510                     i1l1244:	
 16819  0510  0008               	return
 16820  0511                     __end_of_handler_clock_hms:	
 16821                           
 16822                           	psect	text85
 16823  076E                     __ptext85:	
 16824 ;; *************** function _TMR1_WriteTimer *****************
 16825 ;; Defined at:
 16826 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;  timerVal        2    0[COMMON] unsigned short 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg, status,2
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;Total ram usage:        2 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; This function calls:
 16847 ;;		Nothing
 16848 ;; This function is called by:
 16849 ;;		_TMR1_ISR
 16850 ;;		_TMR1_Reload
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           
 16855                           ;psect for function _TMR1_WriteTimer
 16856  076E                     _TMR1_WriteTimer:	
 16857  076E                     i1l4424:	
 16858                           ;incstack = 0
 16859                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16860                           
 16861                           
 16862                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 16863  076E  0024               	movlb	4	; select bank4
 16864  076F  1D0E               	btfss	14,2	;volatile
 16865  0770  2F72               	goto	u161_21
 16866  0771  2F73               	goto	u161_20
 16867  0772                     u161_21:	
 16868  0772  2F7A               	goto	i1l4434
 16869  0773                     u161_20:	
 16870  0773                     i1l4426:	
 16871                           
 16872                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 16873  0773  100E               	bcf	14,0	;volatile
 16874  0774                     i1l4428:	
 16875                           
 16876                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 16877  0774  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16878  0775  008D               	movwf	13	;volatile
 16879  0776                     i1l4430:	
 16880                           
 16881                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 16882  0776  0870               	movf	TMR1_WriteTimer@timerVal,w
 16883  0777  008C               	movwf	12	;volatile
 16884  0778                     i1l4432:	
 16885                           
 16886                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 16887  0778  140E               	bsf	14,0	;volatile
 16888                           
 16889                           ;mcc_generated_files/tmr1.c: 140:     }
 16890  0779  2F7E               	goto	i1l883
 16891  077A                     i1l4434:	
 16892                           
 16893                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 16894  077A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16895  077B  008D               	movwf	13	;volatile
 16896  077C                     i1l4436:	
 16897                           
 16898                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 16899  077C  0870               	movf	TMR1_WriteTimer@timerVal,w
 16900  077D  008C               	movwf	12	;volatile
 16901  077E                     i1l883:	
 16902  077E  0008               	return
 16903  077F                     __end_of_TMR1_WriteTimer:	
 16904                           
 16905                           	psect	text86
 16906  07BD                     __ptext86:	
 16907 ;; *************** function _TMR0_ISR *****************
 16908 ;; Defined at:
 16909 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 16910 ;; Parameters:    Size  Location     Type
 16911 ;;		None
 16912 ;; Auto vars:     Size  Location     Type
 16913 ;;		None
 16914 ;; Return value:  Size  Location     Type
 16915 ;;                  1    wreg      void 
 16916 ;; Registers used:
 16917 ;;		wreg, status,2, status,0, pclath, cstack
 16918 ;; Tracked objects:
 16919 ;;		On entry : 0/0
 16920 ;;		On exit  : 0/0
 16921 ;;		Unchanged: 0/0
 16922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;Total ram usage:        0 bytes
 16928 ;; Hardware stack levels used:    1
 16929 ;; Hardware stack levels required when called:    2
 16930 ;; This function calls:
 16931 ;;		Absolute function
 16932 ;;		_ISR_3s
 16933 ;;		_TMR0_DefaultInterruptHandler
 16934 ;; This function is called by:
 16935 ;;		_INTERRUPT_InterruptManager
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           
 16940                           ;psect for function _TMR0_ISR
 16941  07BD                     _TMR0_ISR:	
 16942  07BD                     i1l4666:	
 16943                           ;incstack = 0
 16944                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16945                           
 16946                           
 16947                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 16948  07BD  002E               	movlb	14	; select bank14
 16949  07BE  128C               	bcf	12,5	;volatile
 16950  07BF                     i1l4668:	
 16951                           
 16952                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 16953  07BF  0020               	movlb	0	; select bank0
 16954  07C0  084A               	movf	_TMR0_InterruptHandler,w
 16955  07C1  044B               	iorwf	_TMR0_InterruptHandler+1,w
 16956  07C2  1903               	btfsc	3,2
 16957  07C3  2FC5               	goto	u181_21
 16958  07C4  2FC6               	goto	u181_20
 16959  07C5                     u181_21:	
 16960  07C5  2FCB               	goto	i1l1528
 16961  07C6                     u181_20:	
 16962  07C6                     i1l4670:	
 16963                           
 16964                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 16965  07C6  084B               	movf	_TMR0_InterruptHandler+1,w
 16966  07C7  008A               	movwf	10
 16967  07C8  084A               	movf	_TMR0_InterruptHandler,w
 16968  07C9  000A               	callw
 16969  07CA  3187               	pagesel	$
 16970  07CB                     i1l1528:	
 16971  07CB  0008               	return
 16972  07CC                     __end_of_TMR0_ISR:	
 16973                           
 16974                           	psect	text87
 16975  0689                     __ptext87:	
 16976 ;; *************** function _ISR_3s *****************
 16977 ;; Defined at:
 16978 ;;		line 110 in file "main.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;		None
 16981 ;; Auto vars:     Size  Location     Type
 16982 ;;		None
 16983 ;; Return value:  Size  Location     Type
 16984 ;;                  1    wreg      void 
 16985 ;; Registers used:
 16986 ;;		wreg, status,2, status,0, pclath, cstack
 16987 ;; Tracked objects:
 16988 ;;		On entry : 0/0
 16989 ;;		On exit  : 0/0
 16990 ;;		Unchanged: 0/0
 16991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;Total ram usage:        1 bytes
 16997 ;; Hardware stack levels used:    1
 16998 ;; Hardware stack levels required when called:    1
 16999 ;; This function calls:
 17000 ;;		_TMR0_StopTimer
 17001 ;;		i1_PWM6_LoadDutyValue
 17002 ;; This function is called by:
 17003 ;;		_main
 17004 ;;		_TMR0_ISR
 17005 ;; This function uses a non-reentrant model
 17006 ;;
 17007                           
 17008                           
 17009                           ;psect for function _ISR_3s
 17010  0689                     _ISR_3s:	
 17011  0689                     i1l4458:	
 17012                           ;incstack = 0
 17013                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 17014                           
 17015                           
 17016                           ;main.c: 112:     if (lum_threshold){
 17017  0689  0020               	movlb	0	; select bank0
 17018  068A  0820               	movf	_lum_threshold,w
 17019  068B  0421               	iorwf	_lum_threshold+1,w
 17020  068C  1903               	btfsc	3,2
 17021  068D  2E8F               	goto	u165_21
 17022  068E  2E90               	goto	u165_20
 17023  068F                     u165_21:	
 17024  068F  2E9C               	goto	i1l1163
 17025  0690                     u165_20:	
 17026  0690                     i1l4460:	
 17027                           
 17028                           ;main.c: 113:         PWM6_LoadDutyValue(1023);
 17029  0690  30FF               	movlw	255
 17030  0691  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17031  0692  3003               	movlw	3
 17032  0693  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17033  0694  3186  26FF  3186   	fcall	i1_PWM6_LoadDutyValue
 17034  0697                     i1l4462:	
 17035                           
 17036                           ;main.c: 114:         alarm = 1;
 17037  0697  3001               	movlw	1
 17038  0698  00F4               	movwf	??_ISR_3s
 17039  0699  0874               	movf	??_ISR_3s,w
 17040  069A  0020               	movlb	0	; select bank0
 17041  069B  00AF               	movwf	_alarm	;volatile
 17042  069C                     i1l1163:	
 17043                           ;main.c: 116:     }
 17044                           
 17045                           
 17046                           ;main.c: 118:     TMR0_StopTimer();
 17047  069C  318E  26FC  3186   	fcall	_TMR0_StopTimer
 17048  069F                     i1l4464:	
 17049                           
 17050                           ;main.c: 119:     PIE0bits.TMR0IE = 0;
 17051  069F  002E               	movlb	14	; select bank14
 17052  06A0  1296               	bcf	22,5	;volatile
 17053  06A1                     i1l1164:	
 17054  06A1  0008               	return
 17055  06A2                     __end_of_ISR_3s:	
 17056                           
 17057                           	psect	text88
 17058  0EF4                     __ptext88:	
 17059 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17060 ;; Defined at:
 17061 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 17062 ;; Parameters:    Size  Location     Type
 17063 ;;		None
 17064 ;; Auto vars:     Size  Location     Type
 17065 ;;		None
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      void 
 17068 ;; Registers used:
 17069 ;;		None
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;Total ram usage:        0 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; This function calls:
 17082 ;;		Nothing
 17083 ;; This function is called by:
 17084 ;;		_TMR0_Initialize
 17085 ;;		_TMR0_ISR
 17086 ;; This function uses a non-reentrant model
 17087 ;;
 17088                           
 17089                           
 17090                           ;psect for function _TMR0_DefaultInterruptHandler
 17091  0EF4                     _TMR0_DefaultInterruptHandler:	
 17092  0EF4                     i1l1534:	
 17093                           ;incstack = 0
 17094                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17095                           
 17096  0EF4  0008               	return
 17097  0EF5                     __end_of_TMR0_DefaultInterruptHandler:	
 17098                           
 17099                           	psect	text89
 17100  0EFC                     __ptext89:	
 17101 ;; *************** function _TMR0_StopTimer *****************
 17102 ;; Defined at:
 17103 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;		None
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;		None
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		None
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17121 ;;Total ram usage:        0 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		_ISR_3s
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           
 17131                           ;psect for function _TMR0_StopTimer
 17132  0EFC                     _TMR0_StopTimer:	
 17133  0EFC                     i1l4068:	
 17134                           ;incstack = 0
 17135                           ; Regs used in _TMR0_StopTimer: []
 17136                           
 17137                           
 17138                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 17139  0EFC  0020               	movlb	0	; select bank0
 17140  0EFD  139E               	bcf	30,7	;volatile
 17141  0EFE                     i1l1515:	
 17142  0EFE  0008               	return
 17143  0EFF                     __end_of_TMR0_StopTimer:	
 17144                           
 17145                           	psect	text90
 17146  0F53                     __ptext90:	
 17147 ;; *************** function _INT_ISR *****************
 17148 ;; Defined at:
 17149 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;		None
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  1    wreg      void 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0, pclath, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;Total ram usage:        0 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:    3
 17170 ;; This function calls:
 17171 ;;		_INT_CallBack
 17172 ;; This function is called by:
 17173 ;;		_INTERRUPT_InterruptManager
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           
 17178                           ;psect for function _INT_ISR
 17179  0F53                     _INT_ISR:	
 17180  0F53                     i1l4662:	
 17181                           ;incstack = 0
 17182                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 17183                           
 17184                           
 17185                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 17186  0F53  002E               	movlb	14	; select bank14
 17187  0F54  100C               	bcf	12,0	;volatile
 17188  0F55                     i1l4664:	
 17189                           
 17190                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 17191  0F55  318F  27F3  318F   	fcall	_INT_CallBack
 17192  0F58                     i1l334:	
 17193  0F58  0008               	return
 17194  0F59                     __end_of_INT_ISR:	
 17195                           
 17196                           	psect	text91
 17197  0FF3                     __ptext91:	
 17198 ;; *************** function _INT_CallBack *****************
 17199 ;; Defined at:
 17200 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;		None
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      void 
 17207 ;; Registers used:
 17208 ;;		wreg, status,2, status,0, pclath, cstack
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17218 ;;Total ram usage:        0 bytes
 17219 ;; Hardware stack levels used:    1
 17220 ;; Hardware stack levels required when called:    2
 17221 ;; This function calls:
 17222 ;;		Absolute function
 17223 ;;		_INT_DefaultInterruptHandler
 17224 ;;		_sw1_EXT
 17225 ;; This function is called by:
 17226 ;;		_INT_ISR
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           
 17231                           ;psect for function _INT_CallBack
 17232  0FF3                     _INT_CallBack:	
 17233  0FF3                     i1l4282:	
 17234                           ;incstack = 0
 17235                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17236                           
 17237                           
 17238                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 17239  0FF3  0020               	movlb	0	; select bank0
 17240  0FF4  0852               	movf	_INT_InterruptHandler,w
 17241  0FF5  0453               	iorwf	_INT_InterruptHandler+1,w
 17242  0FF6  1903               	btfsc	3,2
 17243  0FF7  2FF9               	goto	u160_21
 17244  0FF8  2FFA               	goto	u160_20
 17245  0FF9                     u160_21:	
 17246  0FF9  2FFF               	goto	i1l338
 17247  0FFA                     u160_20:	
 17248  0FFA                     i1l4284:	
 17249                           
 17250                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 17251  0FFA  0853               	movf	_INT_InterruptHandler+1,w
 17252  0FFB  008A               	movwf	10
 17253  0FFC  0852               	movf	_INT_InterruptHandler,w
 17254  0FFD  000A               	callw
 17255  0FFE  318F               	pagesel	$
 17256  0FFF                     i1l338:	
 17257  0FFF  0008               	return
 17258  1000                     __end_of_INT_CallBack:	
 17259                           
 17260                           	psect	text92
 17261  0EF3                     __ptext92:	
 17262 ;; *************** function _INT_DefaultInterruptHandler *****************
 17263 ;; Defined at:
 17264 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 17265 ;; Parameters:    Size  Location     Type
 17266 ;;		None
 17267 ;; Auto vars:     Size  Location     Type
 17268 ;;		None
 17269 ;; Return value:  Size  Location     Type
 17270 ;;                  1    wreg      void 
 17271 ;; Registers used:
 17272 ;;		None
 17273 ;; Tracked objects:
 17274 ;;		On entry : 0/0
 17275 ;;		On exit  : 0/0
 17276 ;;		Unchanged: 0/0
 17277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17282 ;;Total ram usage:        0 bytes
 17283 ;; Hardware stack levels used:    1
 17284 ;; This function calls:
 17285 ;;		Nothing
 17286 ;; This function is called by:
 17287 ;;		_EXT_INT_Initialize
 17288 ;;		_INT_CallBack
 17289 ;; This function uses a non-reentrant model
 17290 ;;
 17291                           
 17292                           
 17293                           ;psect for function _INT_DefaultInterruptHandler
 17294  0EF3                     _INT_DefaultInterruptHandler:	
 17295  0EF3                     i1l344:	
 17296                           ;incstack = 0
 17297                           ; Regs used in _INT_DefaultInterruptHandler: []
 17298                           
 17299  0EF3  0008               	return
 17300  0EF4                     __end_of_INT_DefaultInterruptHandler:	
 17301                           
 17302                           	psect	text93
 17303  0511                     __ptext93:	
 17304 ;; *************** function _sw1_EXT *****************
 17305 ;; Defined at:
 17306 ;;		line 76 in file "main.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;		None
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;		None
 17311 ;; Return value:  Size  Location     Type
 17312 ;;                  1    wreg      void 
 17313 ;; Registers used:
 17314 ;;		wreg, status,2, status,0, pclath, cstack
 17315 ;; Tracked objects:
 17316 ;;		On entry : 0/0
 17317 ;;		On exit  : 0/0
 17318 ;;		Unchanged: 0/0
 17319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17324 ;;Total ram usage:        1 bytes
 17325 ;; Hardware stack levels used:    1
 17326 ;; Hardware stack levels required when called:    1
 17327 ;; This function calls:
 17328 ;;		i1_PWM6_LoadDutyValue
 17329 ;;		i1_checkDebounceSW1
 17330 ;; This function is called by:
 17331 ;;		_main
 17332 ;;		_INT_CallBack
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           
 17337                           ;psect for function _sw1_EXT
 17338  0511                     _sw1_EXT:	
 17339  0511                     i1l4052:	
 17340                           ;incstack = 0
 17341                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 17342                           
 17343                           
 17344                           ;main.c: 80:     if(checkDebounceSW1()){
 17345  0511  3184  2411  3185   	fcall	i1_checkDebounceSW1
 17346  0514  3A00               	xorlw	0
 17347  0515  1903               	skipnz
 17348  0516  2D18               	goto	u149_21
 17349  0517  2D19               	goto	u149_20
 17350  0518                     u149_21:	
 17351  0518  2D3C               	goto	i1l1160
 17352  0519                     u149_20:	
 17353  0519                     i1l4054:	
 17354                           
 17355                           ;main.c: 81:         if (alarm == 1){
 17356  0519  0020               	movlb	0	; select bank0
 17357  051A  032F               	decf	_alarm,w	;volatile
 17358  051B  1D03               	btfss	3,2
 17359  051C  2D1E               	goto	u150_21
 17360  051D  2D1F               	goto	u150_20
 17361  051E                     u150_21:	
 17362  051E  2D28               	goto	i1l1154
 17363  051F                     u150_20:	
 17364  051F                     i1l4056:	
 17365                           
 17366                           ;main.c: 82:             alarm = 0;
 17367  051F  01AF               	clrf	_alarm	;volatile
 17368  0520                     i1l4058:	
 17369  0520  1316               	bcf	22,6	;volatile
 17370  0521                     i1l4060:	
 17371                           
 17372                           ;main.c: 84:             PWM6_LoadDutyValue(0);
 17373  0521  3000               	movlw	0
 17374  0522  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17375  0523  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17376  0524  3186  26FF  3185   	fcall	i1_PWM6_LoadDutyValue
 17377                           
 17378                           ;main.c: 85:         }
 17379  0527  2D37               	goto	i1l1157
 17380  0528                     i1l1154:	
 17381                           ;main.c: 86:         else{
 17382                           
 17383                           
 17384                           ;main.c: 87:             if(!PORTBbits.RB4){
 17385  0528  1A0D               	btfsc	13,4	;volatile
 17386  0529  2D2B               	goto	u151_21
 17387  052A  2D2C               	goto	u151_20
 17388  052B                     u151_21:	
 17389  052B  2D37               	goto	i1l1157
 17390  052C                     u151_20:	
 17391  052C                     i1l4062:	
 17392                           
 17393                           ;main.c: 89:                 if(config_mode == 0){
 17394  052C  0830               	movf	_config_mode,w	;volatile
 17395  052D  1D03               	btfss	3,2
 17396  052E  2D30               	goto	u152_21
 17397  052F  2D31               	goto	u152_20
 17398  0530                     u152_21:	
 17399  0530  2D37               	goto	i1l1157
 17400  0531                     u152_20:	
 17401  0531                     i1l4064:	
 17402                           
 17403                           ;main.c: 90:                     config_mode = 1;
 17404  0531  3001               	movlw	1
 17405  0532  00F7               	movwf	??_sw1_EXT
 17406  0533  0877               	movf	??_sw1_EXT,w
 17407  0534  00B0               	movwf	_config_mode	;volatile
 17408  0535                     i1l4066:	
 17409                           
 17410                           ;main.c: 92:                     (PIE0bits.INTE = 0);
 17411  0535  002E               	movlb	14	; select bank14
 17412  0536  1016               	bcf	22,0	;volatile
 17413  0537                     i1l1157:	
 17414                           ;main.c: 96:             }
 17415                           
 17416                           
 17417                           ;main.c: 98:             last_ms = clkms;
 17418  0537  087D               	movf	_clkms,w	;volatile
 17419  0538  00F7               	movwf	??_sw1_EXT
 17420  0539  0877               	movf	??_sw1_EXT,w
 17421  053A  0020               	movlb	0	; select bank0
 17422  053B  00B4               	movwf	_last_ms
 17423  053C                     i1l1160:	
 17424  053C  0008               	return
 17425  053D                     __end_of_sw1_EXT:	
 17426                           
 17427                           	psect	text94
 17428  0411                     __ptext94:	
 17429 ;; *************** function i1_checkDebounceSW1 *****************
 17430 ;; Defined at:
 17431 ;;		line 375 in file "main.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      unsigned char 
 17438 ;; Registers used:
 17439 ;;		wreg, status,2, status,0
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;Total ram usage:        7 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_sw1_EXT
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           
 17459                           ;psect for function i1_checkDebounceSW1
 17460  0411                     i1_checkDebounceSW1:	
 17461  0411                     i1l3896:	
 17462                           ;incstack = 0
 17463                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 17464                           
 17465                           
 17466                           ;main.c: 378:     if(clkms - last_ms < 0){
 17467  0411  087D               	movf	_clkms,w	;volatile
 17468  0412  00F0               	movwf	??i1_checkDebounceSW1
 17469  0413  01F1               	clrf	??i1_checkDebounceSW1+1
 17470  0414  0871               	movf	??i1_checkDebounceSW1+1,w
 17471  0415  00F3               	movwf	??i1_checkDebounceSW1+3
 17472  0416  0020               	movlb	0	; select bank0
 17473  0417  0834               	movf	_last_ms,w
 17474  0418  0270               	subwf	??i1_checkDebounceSW1,w
 17475  0419  00F2               	movwf	??i1_checkDebounceSW1+2
 17476  041A  1C03               	skipc
 17477  041B  03F3               	decf	??i1_checkDebounceSW1+3,f
 17478  041C  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 17479  041D  2C1F               	goto	u144_21
 17480  041E  2C20               	goto	u144_20
 17481  041F                     u144_21:	
 17482  041F  2C3F               	goto	i1l3904
 17483  0420                     u144_20:	
 17484  0420                     i1l3898:	
 17485                           
 17486                           ;main.c: 380:         if ((200 - last_ms)+ clkms > 40 ){
 17487  0420  087D               	movf	_clkms,w	;volatile
 17488  0421  00F0               	movwf	??i1_checkDebounceSW1
 17489  0422  01F1               	clrf	??i1_checkDebounceSW1+1
 17490  0423  0871               	movf	??i1_checkDebounceSW1+1,w
 17491  0424  00F3               	movwf	??i1_checkDebounceSW1+3
 17492  0425  0834               	movf	_last_ms,w
 17493  0426  0270               	subwf	??i1_checkDebounceSW1,w
 17494  0427  00F2               	movwf	??i1_checkDebounceSW1+2
 17495  0428  1C03               	skipc
 17496  0429  03F3               	decf	??i1_checkDebounceSW1+3,f
 17497  042A  0872               	movf	??i1_checkDebounceSW1+2,w
 17498  042B  3EC8               	addlw	200
 17499  042C  00F4               	movwf	??i1_checkDebounceSW1+4
 17500  042D  3000               	movlw	0
 17501  042E  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 17502  042F  00F5               	movwf	??i1_checkDebounceSW1+5
 17503  0430  0875               	movf	??i1_checkDebounceSW1+5,w
 17504  0431  3A80               	xorlw	128
 17505  0432  00F6               	movwf	??i1_checkDebounceSW1+6
 17506  0433  3080               	movlw	128
 17507  0434  0276               	subwf	??i1_checkDebounceSW1+6,w
 17508  0435  1D03               	skipz
 17509  0436  2C39               	goto	u145_25
 17510  0437  3029               	movlw	41
 17511  0438  0274               	subwf	??i1_checkDebounceSW1+4,w
 17512  0439                     u145_25:	
 17513  0439  1C03               	skipc
 17514  043A  2C3C               	goto	u145_21
 17515  043B  2C3D               	goto	u145_20
 17516  043C                     u145_21:	
 17517  043C  2C3F               	goto	i1l3904
 17518  043D                     u145_20:	
 17519  043D                     i1l3900:	
 17520                           
 17521                           ;main.c: 381:             return 1;
 17522  043D  3001               	movlw	1
 17523  043E  2C58               	goto	i1l1274
 17524  043F                     i1l3904:	
 17525                           
 17526                           ;main.c: 385:     if(clkms - last_ms < 40){
 17527  043F  087D               	movf	_clkms,w	;volatile
 17528  0440  00F0               	movwf	??i1_checkDebounceSW1
 17529  0441  01F1               	clrf	??i1_checkDebounceSW1+1
 17530  0442  0871               	movf	??i1_checkDebounceSW1+1,w
 17531  0443  00F3               	movwf	??i1_checkDebounceSW1+3
 17532  0444  0020               	movlb	0	; select bank0
 17533  0445  0834               	movf	_last_ms,w
 17534  0446  0270               	subwf	??i1_checkDebounceSW1,w
 17535  0447  00F2               	movwf	??i1_checkDebounceSW1+2
 17536  0448  1C03               	skipc
 17537  0449  03F3               	decf	??i1_checkDebounceSW1+3,f
 17538  044A  0873               	movf	??i1_checkDebounceSW1+3,w
 17539  044B  3A80               	xorlw	128
 17540  044C  00F4               	movwf	??i1_checkDebounceSW1+4
 17541  044D  3080               	movlw	128
 17542  044E  0274               	subwf	??i1_checkDebounceSW1+4,w
 17543  044F  1D03               	skipz
 17544  0450  2C53               	goto	u146_25
 17545  0451  3028               	movlw	40
 17546  0452  0272               	subwf	??i1_checkDebounceSW1+2,w
 17547  0453                     u146_25:	
 17548  0453  1803               	skipnc
 17549  0454  2C56               	goto	u146_21
 17550  0455  2C57               	goto	u146_20
 17551  0456                     u146_21:	
 17552  0456  2C3D               	goto	i1l3900
 17553  0457                     u146_20:	
 17554  0457                     i1l3906:	
 17555                           
 17556                           ;main.c: 386:         return 0;
 17557  0457  3000               	movlw	0
 17558  0458                     i1l1274:	
 17559  0458  0008               	return
 17560  0459                     __end_ofi1_checkDebounceSW1:	
 17561                           
 17562                           	psect	text95
 17563  06FF                     __ptext95:	
 17564 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17565 ;; Defined at:
 17566 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;  dutyValue       2    0[COMMON] unsigned short 
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;		None
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  1    wreg      void 
 17573 ;; Registers used:
 17574 ;;		wreg, status,2, status,0
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;Total ram usage:        4 bytes
 17585 ;; Hardware stack levels used:    1
 17586 ;; This function calls:
 17587 ;;		Nothing
 17588 ;; This function is called by:
 17589 ;;		_sw1_EXT
 17590 ;;		_ISR_3s
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           
 17595                           ;psect for function i1_PWM6_LoadDutyValue
 17596  06FF                     i1_PWM6_LoadDutyValue:	
 17597  06FF                     i1l3894:	
 17598                           ;incstack = 0
 17599                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17600                           
 17601                           
 17602                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17603  06FF  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17604  0700  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17605  0701  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17606  0702  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17607  0703  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17608  0704  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17609  0705  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17610  0706  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17611  0707  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17612  0708  0027               	movlb	7	; select bank7
 17613  0709  008D               	movwf	13	;volatile
 17614                           
 17615                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 17616  070A  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17617  070B  3903               	andlw	3
 17618  070C  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17619  070D  3005               	movlw	5
 17620  070E                     u143_25:	
 17621  070E  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 17622  070F  3EFF               	addlw	-1
 17623  0710  1D03               	skipz
 17624  0711  2F0E               	goto	u143_25
 17625  0712  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 17626  0713  008C               	movwf	12	;volatile
 17627  0714                     i1l916:	
 17628  0714  0008               	return
 17629  0715                     __end_ofi1_PWM6_LoadDutyValue:	
 17630  007E                     btemp	set	126	;btemp
 17631  007E                     int$flags	set	126
 17632  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         54
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      57
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3568$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3574	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3573	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3568	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_recoverData
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_select_routine
    _mod3_LED->_PWM6_LoadDutyValue
    _mod4_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13644
                                             16 BANK0      4     4      0
                           _ADC_read
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _config_routine
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    6123
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    1221
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    2049
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0     896
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     804
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1153
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0    5158
                                             11 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                     _select_routine
 ---------------------------------------------------------------------------------
 (2) _select_routine                                       4     2      2     949
                                              7 BANK0      4     2      2
                           _mod3_LED
 ---------------------------------------------------------------------------------
 (3) _mod3_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0     828
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0     828
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     828
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     120
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      22
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _select_routine
       _mod3_LED
         _PWM6_LoadDutyValue
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      64      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      64      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 13:28:11 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0F71  
                             __CFG_CP$OFF 0000                      __size_of_do_I2C_IDLE 0005  
                     _do_I2C_SEND_RESTART 0F3A                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l341 0F5E                                       l442 0FC7  
                                     l530 0380                                       l347 07D9  
                                     l445 0FAC                                       l439 063B  
                                     l760 0FA4                                       l913 07E6  
                                     l763 0F84                                       l916 0688  
                                     l757 06FE                                       l766 0FBE  
                                     l960 0586                                       l963 07AD  
                                     l869 05E5                                       l957 057B  
                                     l959 057F                                       l899 0F6A  
                                     l998 06B9                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0EF9  
                         _timer1ReloadVal 0050                                       _seg 0035  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 06A2                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0656  
                                    l1041 0F70                                      l1212 023E  
                 ??_rd2RegCompleteHandler 007A                                      l1230 0655  
                                    l1215 023F                                      l1218 024C  
                                    l1227 0299                                      l1236 066F  
                                    l1512 0F16                                      l1256 0FDC  
                                    l1264 0FF2                                      l1281 03C8  
                                    l1274 0410                                      l1178 011A  
                                    l1531 0F64                                      l1259 0FD1  
                                    l1195 0603                                      l1509 0729  
                                    l1269 0FE7                                      l4030 0563  
                                    l4040 0575                                      l4032 056B  
                                    l5000 011B                                      l1481 05C6  
                                    l4026 0F59                                      l4050 0F6B  
                                    l4042 0576                                      l4034 056F  
                                    l5002 0120                                      l1459 01C5  
                                    l4300 0342                                      l4028 0F65  
                                    l4044 0578                                      l4036 0573  
                                    l1476 078E                                      l5004 0122  
                                    l4310 034D                                      l4302 0344  
                                    l4070 0F5F                                      l4046 057A  
                                    l4038 0574                                      l1486 061F  
                                    l5006 0125                                      l4320 0361  
                                    l4312 034F                                      l4304 0346  
                                    l4400 071A                                      l4072 0FE8  
                                    l4048 0580                                      l4080 05A9  
                                    l5008 0127                                      l4410 0F9F  
                                    l4330 036B                                      l4322 0363  
                                    l4314 0351                                      l4306 0348  
                                    l4402 071B                                      l4074 0FEA  
                                    l4090 05BC                                      l4420 0FB6  
                                    l4412 0FA2                                      l4340 0376  
                                    l4332 036D                                      l4324 0365  
                                    l4316 035D                                      l4308 034B  
                                    l4404 071D                                      l4500 0283  
                                    l4076 0FF0                                      l5204 0207  
                                    l4092 05C5                                      l4414 0FA3  
                                    l4350 0FC2                                      l4342 0379  
                                    l4334 036F                                      l4326 0367  
                                    l4318 035F                                      l4406 071E  
                                    l4502 028C                                      l4510 0FD4  
                                    l5206 05F5                                      l4086 05AD  
                                    l4078 05A7                      _ADCC_StartConversion 0F9D  
                                    l4416 0F7E                                      l4360 06E9  
                                    l4352 0FC3                                      l4344 037B  
                                    l4336 0371                                      l4328 0369  
                                    l4408 0726                                      l4504 028E  
                                    l4440 03D8                                      l4512 0FDA  
                                    l4520 0FDF                                      l4088 05B8  
                                    l4362 06FB                                      l4290 07D7  
                                    l4354 0FC6                                      l4346 037D  
                                    l4338 0374                                      l4370 06A8  
                                    l4506 0297                                      l4442 03F5  
                                    l4514 0FC8                                      l4522 0FE5  
                                    l4364 06FD                                      l4348 0FBF  
                                    l4292 0FA5                                      l4356 07DA  
                                    l4380 05C7                                      l4372 06AB  
                                    l4700 0635                                      l4532 03AF  
                                    l4524 0381                                      l4508 0FD2  
                                    l4516 0FCA                                      l4286 07CC  
                                    l4294 0338                                      l4358 07E1  
                                    l4390 05D7                                      l4382 05CA  
                                    l4374 06AD                                      l4366 06A2  
                                    l4702 0638                                      l4446 03F7  
                                    l4438 03C9                                      l4534 03C7  
                                    l4526 0390                                      l4518 0FDD  
                                    l4710 018F                                      l4288 07CF  
                                    l4296 033E                                      l4392 05D9  
                                    l4384 05CC                                      l4376 06AE  
                                    l4368 06A7                                      l4448 040F  
                                    l4528 03AD                                      l4720 01C2  
                                    l4712 0192                                      l4704 012E  
                                    l4722 0656                                      l4298 0340  
                                    l4394 05DA                                      l4386 05CE  
                                    l4378 06B6                                      l4490 025D  
                                    l4466 05E6                                      l4714 019E  
                                    l4706 013B                                      l4724 065B  
                                    l4732 063C                                      l4396 05E2  
                                    l4388 05D0                                      l4492 026D  
                                    l4484 0241                                      l4468 05EC  
                                    l4740 01CD                                      l4572 0609  
                                    l4716 01AA                                      l4708 014D  
                                    l4726 065F                                      l4398 0715  
                                    l4734 0F14                                      l4494 0276  
                                    l4486 024A                                      l4478 05F0  
                                    l4750 01E7                                      l4742 01D1  
                                    l4574 0611                                      l4718 01B6  
                                    l4728 0667                                      l4496 0278  
                                    l4488 0255                                      l4760 01FD  
                                    l4752 01ED                                      l4744 01D7  
                                    l4736 01C6                                      l3880 07A3  
                                    l4576 0616                                      l4568 0604  
                                    l4690 0626                                      l4498 0281  
                                    l4770 021F                                      l4754 01F1  
                                    l4746 01DA                                      l4738 01C9  
                                    l3890 07AB                                      l3882 07A7  
                                    l4578 077F                                      l4692 0629  
                                    l3876 0670                                      l4772 0227  
                                    l4756 01F5                                      l4764 0202  
                                    l4748 01DF                                      l3884 07A8  
                                    l4694 062C                                      l4686 0620  
                                    l4774 022F                                      l4758 01F9  
                                    l4766 0215                                      l3886 07A9  
                                    l3878 079F                                      l4696 062F  
                                    l4688 0623                                      l4776 0234  
                                    l4768 021A                                      l3888 07AA  
                                    l4960 00AB                                      l4952 007E  
                                    l4698 0632                                      l4778 0238  
                                    l4970 00B7                                      l4962 00AD  
                                    l4954 00A1                                      l4980 00E9  
                                    l4972 00BF                                      l4964 00AF  
                                    l4956 00A1                                      l4990 0102  
                                    l4982 00EF                                      l4974 00CA  
                                    l4966 00B0                                      l4958 00A4  
                                    l4992 0105                                      l4984 00F3  
                                    l4976 00D1                                      l4968 00B1  
                                    l4986 00FB                                      l4994 010B  
                                    l4978 00E3                                      l4996 0111  
                                    l4988 0100                                      l4998 0117  
                                    u2300 0111                                      u2301 0110  
                                    _LATA 0016                                      u2310 0120  
                                    _LATB 0017                           __end_of_INT_ISR 0F59  
                                    u2311 011F                                      _LATC 0018  
                                    u2240 00B7                                      _LATD 0019  
                                    u1425 0681                                      u2241 00B6  
                                    _LATE 001A                                      u1530 05C5  
                                    u2250 00DC                                      u1531 05C4  
                                    u2251 00DA                                      u1620 03D8  
                                    u2260 00DD                                      u1621 03D7  
                                    u1630 03F5                                      u2270 00E9  
                                    u2407 0261                                      u1631 03F4  
                                    u2271 00E8                                      u1640 040F  
                                    u1480 057F                                      u2280 00EF  
                                    u2417 0271                                      u1641 040E  
                                    u1481 057E                                      u2281 00EE  
                                    u2290 0100                                      _T2PR 028D  
                                    u2427 027C                                      u1635 03F1  
                                    u2291 00FF                                      u1660 0390  
                                    u1900 021F                                      u2437 0287  
                                    u1645 040B                                      u1661 038F  
                                    u1901 021E                                      u1670 03AD  
                                    u1910 0227                                      u1750 061F  
                                    u2447 0292                                      u1671 03AC  
                                    u1911 0226                                      u1751 061E  
                                    u2367 0128                                      u1680 03C7  
                                    u1920 023E                                      u1840 013B  
                                    u2457 065C                                      u1681 03C6  
                                    u1921 023D                                      u2377 0235  
                                    u1841 013A                                      u1850 014D  
                                    u2387 0245                                      u1675 03A9  
                                    u1851 014C                                      u1860 0667  
                                    u1861 0666                                      u2397 0250  
                                    u1685 03C3                                      u1870 01D7  
                                    u1871 01D6                                      u1880 01DF  
                                    u1881 01DE                                      u1890 01E7  
                                    u1891 01E6                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                                      i1l73 07F3  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _clkh 0037  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0036  
                                    _main 007E                                      _tala 0054  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 0056                           _TMR0_StartTimer 0F14  
                                    _pmon 0055                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0EF4  
             _INT_DefaultInterruptHandler 0EF3                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0670           __end_of_INT_SetInterruptHandler 0F5F  
                           _i2c_setBuffer 078F                ??_TMR1_SetInterruptHandler 003D  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 04B9          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0044  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 072A  
                            _do_I2C_RESET 0F8D                   __size_of_select_routine 001E  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0FC8                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0F05  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0F2B  
                          __CFG_DEBUG$OFF 0000                                     i1l103 079E  
                                   i1l200 048B                                     i1l210 04B8  
                                   i1l131 0F34                                     i1l140 0F43  
                                   _T2TMR 028C                                     i1l125 0F94  
                                   i1l213 0F25                                     i1l134 0F39  
                                   i1l303 06D1                                     i1l143 0FB5  
                                   i1l224 0562                                     i1l216 0EFB  
                                   i1l128 0F2F                                     i1l152 0F48  
                                   i1l137 0F3E                                     i1l146 0F9C  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 075C                                     i1l155 0F4D  
                                   i1l164 04E4                                     i1l172 02ED  
                                   i1l149 0F7D                                     i1l334 0F58  
                                   i1l158 0F52                                     i1l344 0EF3  
                                   i1l264 074B                                     i1l169 02D1  
                                   i1l185 030B                                     i1l338 0FFF  
                                   i1l602 0EF7                                     i1l186 0337  
                                   i1l611 0F04                                     i1l291 076D  
                                   i1l620 0F0A                                     i1l380 001F  
                                   i1l614 0F8C                                     i1l279 073A  
                                   i1l383 0032                                     i1l608 0F01  
                                   i1l392 0059                                     i1l617 0F07  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0F1D  
                                   i1l387 004D                                     i1l629 0F2A  
                                   i1l902 0EF5                                     i1l638 0F21  
                                   i1l576 0F10                                     i1l672 0F13  
                                   i1l579 0F0D                                     i1l916 0714  
                                   i1l883 077E                                     i1l896 06E8  
                                   _OSCEN 0891                           __end_of_all_LED 029A  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0006  
                         _PWM6_Initialize 07DA                 ?_TMR0_SetInterruptHandler 003B  
                 ??_ADCC_IsConversionDone 003B                          __end_of_TMR0_ISR 07CC  
                        __end_of_TMR1_ISR 06E9                          __end_of_TMR2_ISR 07BD  
                         __end_of_sw1_EXT 053D                           __end_of_cksum_w 078F  
                         _DATAEE_ReadByte 079F                                     _alarm 002F  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0F8D  
                                   _cksum 05A7                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 0028  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 05E6  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 003B                        ??_checkDebounceSW2 003B  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 076E  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 0587                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 012E  
                 __end_of_TMR2_Initialize 06BA               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0F44                  _TMR2_SetInterruptHandler 0F6B  
                                  ??_main 0048                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 003D  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0F17               __size_ofi1_checkDebounceSW1 0048  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1044 0EF6                                    i1l1038 07BC  
                                  i1l1160 053C                                    i1l1154 0528  
                                  i1l1163 069C                                    i1l1164 06A1  
                                  i1l1244 0510                                    i1l1157 0537  
                                  i1l1248 07FF                                    i1l4000 074A  
                                  _ODCONA 0F3A                                    i1l1274 0458  
                                  _ODCONB 0F45                                    i1l1515 0EFE  
                                  _ODCONC 0F50                                    i1l4012 075D  
                                  i1l4004 072A                                    i1l4020 06BA  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1534 0EF4                                    i1l4014 0765  
                                  i1l4006 0732                                    i1l4022 06D0  
                                  i1l1528 07CB                                    i1l4016 076C  
                                  i1l4008 0739                                    i1l4120 0F90  
                                  i1l4200 02AA                                    i1l4122 0F92  
                                  i1l4130 0F2D                                    i1l4210 02DF  
                                  i1l4060 0521                                    i1l4052 0511  
                                  i1l4124 0F93                                    i1l4132 0F2E  
                                  i1l4140 0FB4                                    i1l4212 02EA  
                                  i1l4062 052C                                    i1l4054 0519  
                                  i1l4118 0F8D                                    i1l4214 02EC  
                                  i1l4206 02AE                                    i1l4230 0309  
                                  i1l4222 02EE                                    i1l4064 0531  
                                  i1l4056 051F                                    i1l4128 0F2B  
                                  i1l4136 0FAD                                    i1l4144 0F95  
                                  i1l4152 0F77                                    i1l4160 0F44  
                                  i1l4208 02D3                                    i1l4240 0311  
                                  i1l4224 02F8                                    i1l4066 0535  
                                  i1l4058 0520                                    i1l4138 0FAF  
                                  i1l4146 0F97                                    i1l4154 0F79  
                                  i1l4162 0F47                                    i1l4170 04C0  
                                  i1l5210 02C3                                    i1l4226 02FC  
                                  i1l4068 0EFC                                    i1l4260 0460  
                                  i1l4148 0F9B                                    i1l4156 0F7C  
                                  i1l5212 04DC                                    i1l4180 04C8  
                                  i1l4236 030D                                    i1l4228 0306  
                                  i1l4430 0776                                    i1l5214 047D  
                                  i1l4262 0463                                    i1l4254 0459  
                                  i1l4174 04C4                                    i1l4166 04B9  
                                  i1l4246 0315                                    i1l4432 0778  
                                  i1l4424 076E                                    i1l4256 045C  
                                  i1l4272 0469                                    i1l4168 04BB  
                                  i1l4192 02A2                                    i1l5208 0329  
                                  i1l4096 0F0E                                    i1l4280 0F11  
                                  u211_20 000B                                    u211_21 000A  
                                  i1l4282 0FF3                                    i1l4426 0773  
                                  i1l4434 077A                                    i1l4266 0465  
                                  i1l3900 043D                                    i1l4284 0FFA  
                                  i1l4460 0690                                    i1l4436 077C  
                                  i1l4428 0774                                    i1l4196 02A6  
                                  i1l4188 029A                                    i1l4462 0697  
                                  i1l4550 04FA                                    i1l3904 043F  
                                  i1l4464 069F                                    i1l4560 050F  
                                  i1l4552 0500                                    i1l4544 04E5  
                                  u140_20 0544                                    u220_20 0045  
                                  u212_20 000F                                    u140_21 0543  
                                  u220_21 0044                                    u212_21 000E  
                                  i1l3906 0457                                    i1l4458 0689  
                                  i1l4554 0504                                    i1l4546 04EB  
                                  i1l4562 07F4                                    i1l3930 0F33  
                                  i1l4650 048C                                    i1l4556 0505  
                                  i1l4548 04F6                                    i1l4564 07F8  
                                  i1l3860 0555                                    i1l3916 0EF8  
                                  i1l3940 0F3A                                    i1l4652 048F  
                                  i1l4660 0F22                                    i1l4662 0F53  
                                  i1l4670 07C6                                    i1l4558 050B  
                                  i1l4566 07FE                                    i1l3870 0EFF  
                                  i1l3862 07E7                                    i1l3934 0F35  
                                  i1l3942 0F3D                                    i1l4654 0494  
                                  i1l4664 0F55                                    i1l4672 06D2  
                                  i1l4680 07AE                                    i1l3872 0F02  
                                  u141_20 0795                                    i1l3864 0790  
                                  i1l3856 053E                                    i1l3952 0F27  
                                  i1l3928 0F30                                    i1l3936 0F38  
                                  i1l3960 0F4C                                    i1l4656 049B  
                                  u221_20 0049                                    u213_20 0017  
                                  u141_21 0794                                    u221_21 0048  
                                  u213_21 0016                                    i1l4666 07BD  
                                  i1l4674 06D4                                    i1l4682 07B0  
                                  i1l3866 0795                                    i1l3858 0544  
                                  i1l3954 0F05                                    i1l3874 0F1E  
                                  i1l3970 0F85                                    i1l3946 0F3F  
                                  i1l4658 04A1                                    i1l4930 001B  
                                  i1l4922 0006                                    i1l4668 07BF  
                                  i1l4676 06DC                                    i1l4684 07B7  
                                  i1l3956 0F1A                                    i1l3868 079D  
                                  i1l3980 0EFA                                    i1l3948 0F42  
                                  i1l3964 0F4E                                    i1l4940 003A  
                                  i1l4932 0023                                    i1l4924 000B  
                                  i1l3894 06FF                                    i1l4678 06E3  
                                  i1l3990 0754                                    i1l3974 0F08  
                                  i1l3958 0F49                                    i1l3966 0F51  
                                  i1l4942 0045                                    i1l4934 0027  
                                  i1l4926 000F                                    i1l3896 0411  
                                  u150_20 051F                                    i1l3984 0002  
                                  i1l3992 075B                                    u222_20 0051  
                                  i1l4944 0049                                    i1l4936 002B  
                                  u214_20 001B                                    i1l4928 0017  
                                  u150_21 051E                                    u222_21 0050  
                                  u214_21 001A                                    i1l3898 0420  
                                  i1l3978 0F0B                                    i1l4946 0051  
                                  i1l4938 0036                                    i1l3988 074C  
                                  i1l3996 073B                                    i1l4948 0055  
                                  i1l3998 0743                                    u151_20 052C  
                                  u223_20 0055                                    u215_20 0023  
                                  u151_21 052B                                    u223_21 0054  
                                  u215_21 0022                                    u143_25 070E  
                                  u144_20 0420                                    u152_20 0531  
                                  u160_20 0FFA                                    u216_20 0027  
                                  u144_21 041F                                    u152_21 0530  
                                  u160_21 0FF9                                    u216_21 0026  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u145_20 043D  
                                  u161_20 0773                                    u217_20 002B  
                                  u145_21 043C                                    u161_21 0772  
                                  u217_21 002A                                    u145_25 0439  
                                  u146_20 0457                                    u170_20 04F4  
                                  u218_20 0036                                    u146_21 0456  
                                  u170_21 04F1                                    u218_21 0035  
                                  u146_25 0453                                    u219_20 003A  
                                  u219_21 0039                                    u171_24 04F6  
                                  u172_20 0500                                    u180_20 049B  
                                  u172_21 04FF                                    u180_21 049A  
                                  u149_20 0519                                    u165_20 0690  
                                  u181_20 07C6                                    u173_20 050B  
                                  u157_20 02A1                                    u149_21 0518  
                                  u165_21 068F                                    u181_21 07C5  
                                  u173_21 050A                                    u157_21 02A0  
                                  u182_20 06E3                                    u174_20 07FE  
                                  u158_20 02EA                                    u182_21 06E2  
                                  u174_21 07FD                                    u158_21 02E9  
                                  u183_20 07B7                                    u159_20 0306  
                                  u183_21 07B6                                    u159_21 0305  
                                  _INTPPS 0E90                                    u169_20 04EB  
                                  u169_21 04EA                                    u179_20 0494  
                                  u179_21 0493                                    _OSCFRQ 0893  
                                  _ISR_3s 0689                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0038  
              ??_ADCC_GetConversionResult 003D                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0715                     _i2c1_driver_getRXData 0F08  
                        __end_of_mod1_LED 0FDD                          __end_of_mod2_LED 0FD2  
                        __end_of_mod3_LED 0FF3                          __end_of_mod4_LED 0FE8  
                  select_routine@mode_num 0041      __end_of_TMR1_DefaultInterruptHandler 0EF6  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0EF5  
                            _CCPTMRS1bits 021F               __end_of_do_I2C_DO_NACK_STOP 0F4E  
     __end_of_i2c_setDataCompleteCallback 07F4               _i2c_setDataCompleteCallback 07E7  
   __end_of_i2c1_driver_clearBusCollision 0F14    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0F11                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                 ??_all_LED 003F  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 07E7  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 003F  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 07AE  
                               ??_sw1_EXT 0077                                 ??_cksum_w 0045  
                         _ADCC_Initialize 06E9               __end_of_i2c1_driver_sendACK 0F1E  
                          _PMD_Initialize 0FA5            __end_of_do_I2C_DO_ADDRESS_NACK 04E5  
             __end_of_i2c1_driver_restart 0F02                              ?_returnReset 0079  
                               ?_ADC_read 003D                    ??_ADCC_StartConversion 003B  
             __end_of_i2c1_driver_startRX 0F08          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 003B  TMR2_SetInterruptHandler@InterruptHandler 003B  
TMR1_SetInterruptHandler@InterruptHandler 003B   INT_SetInterruptHandler@InterruptHandler 003B  
                 __end_of_TMR1_WriteTimer 077F                          ??_config_routine 0043  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0620  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0F3F                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                   _rdBlkRegCompleteHandler 06BA  
                          __pcstackCOMMON 0070                              __pidataBANK0 0F17  
                     ??_SYSTEM_Initialize 003D                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 05C7  
                        _DATAEE_WriteByte 0563                            _select_routine 05E6  
                        ?_TMR2_Initialize 0070                              LED_bin@value 003B  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0FAD  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 003F  
             ADCC_StartConversion@channel 003B                            setCallBack@idx 0074  
                                 ??_cksum 003D                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0F4E                 __end_of_SYSTEM_Initialize 063C  
                          _mssp1_clearIRQ 0F0E                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 073B  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 076E  
                   _rd1RegCompleteHandler 073B                    ?_i2c1_driver_getRXData 0070  
                   _wr1RegCompleteHandler 074C              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                    __end_of_select_routine 0604  
                           ??_do_I2C_RCEN 0070          __end_of_TMR0_SetInterruptHandler 0F65  
                 __size_of_TMR0_StopTimer 0003                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 06FF  
              __end_of_PWM6_LoadDutyValue 0689                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 003B  
                       __end_of_do_I2C_RX 0338                         __end_of_do_I2C_TX 02EE  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                    __size_of_recoverData 0098                                   _LED_bin 063C  
                        _handler_clock_ms 07F4                                   _INT_ISR 0F53  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 06FF                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0F11  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 0F85                   ??_do_I2C_SEND_ADR_WRITE 0071  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0F26                      DATAEE_WriteByte@bAdd 0041  
                      _i2c1_driver_i2cISR 002A                           __size_of_ISR_3s 0019  
                                 _i2c_ISR 048C                 ??_rdBlkRegCompleteHandler 007A  
                      _i2c1_driver_isNACK 0F85                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 003D                           ?_select_routine 003F  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 0048  
               __size_of_checkDebounceSW2 0048                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 023F                       ?_i2c1_driver_isNACK 0070  
                                 __ptext1 012E                                   __ptext2 0604  
                                 __ptext3 077F                                   __ptext4 05A7  
                                 __ptext5 079F                                   __ptext6 0563  
                                 __ptext7 01C6                                   __ptext8 05E6  
                                 __ptext9 0FE8                       __end_of_do_I2C_IDLE 0F30  
                     __end_of_do_I2C_RCEN 0F7E                                   _sw1_EXT 0511  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 077F  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0FBF  
                                 _last_ms 0034                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0F3F                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 0024                               reset_recv@i 0045  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                  ??_PIN_MANAGER_Initialize 003B  
               ?_TMR1_SetInterruptHandler 003B                                 _T2HLTbits 028F  
                                 _nreg_pt 002E                   _INT_SetInterruptHandler 0F59  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 003F  
                              ??_mod2_LED 003F                                ??_mod3_LED 003F  
                              ??_mod4_LED 003F                  _do_I2C_SEND_RESTART_READ 0F30  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0F72  
                    __size_of_returnReset 0002                      end_of_initialization 007A  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002              __end_of_i2c1_driver_sendNACK 0F22  
                  ?_rd1RegCompleteHandler 0079                      __end_of_INT_CallBack 1000  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0EF8  
                              _reset_recv 0604                 _do_I2C_SEND_RESTART_WRITE 0F35  
                        ?_ADCC_Initialize 0070                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0EFA                  _TMR0_SetInterruptHandler 0F5F  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 06D2                  __end_of_do_I2C_SEND_STOP 0F44  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 0459  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0587  
                      select_routine@mode 003F              i2c_setDataCompleteCallback@p 0077  
                          __end_of_ISR_3s 06A2             __size_of_do_I2C_SEND_ADR_READ 0009  
                          _TMR0_StopTimer 0EFC                               _do_I2C_IDLE 0F2B  
                             _do_I2C_RCEN 0F77      __end_of_TMR2_DefaultInterruptHandler 0EF7  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0EF6  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 003D  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 003B  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0F22  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 003B  
                   __end_of_i2c_setBuffer 079F              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0EFF                  __end_of_handler_clock_ms 0800  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0F0E  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 003B  
                        _checkDebounceSW1 03C9                          _checkDebounceSW2 0381  
                  wr1RegCompleteHandler@p 0079                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 0054                __end_of_EXT_INT_Initialize 07DA  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0079  
          __end_of_do_I2C_DO_NACK_RESTART 0F53                      _i2c1_driver_sendNACK 0F1E  
                                ?_LED_bin 003B                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 0EF7  
                                ?_INT_ISR 0070                             __pcstackBANK0 0038  
                      _PWM6_LoadDutyValue 0670                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 02EE                                 _do_I2C_TX 029A  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0F9D                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 003B  
                        _i2c_restartWrite 0EF8                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                          ??_select_routine 0041  
                         _do_I2C_TX_EMPTY 0459                     _TMR0_InterruptHandler 004A  
                           ??_setCallBack 0073                                 __pnvBANK0 004A  
                   _rd2RegCompleteHandler 072A                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 05A7                    _PIN_MANAGER_Initialize 0338  
                   _wr2RegCompleteHandler 075D             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 0079          __end_of_TMR1_SetInterruptHandler 0F6B  
                          ??_do_I2C_RESET 0070                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 002C                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0F49                      ??_PWM6_LoadDutyValue 003D  
                           ??_recoverData 0047              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0FF3                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0656                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                               _level_bin 0022                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0F7E  
                       ??_TMR0_Initialize 003D                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 0F71  
                                _PIE0bits 0716                         _handler_clock_hms 04E5  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0020                ??_TMR0_SetInterruptHandler 003D  
                                _PIR0bits 070C                               _config_mode 0030  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 07BD  
                                _TMR1_ISR 06D2                                  _TMR2_ISR 07AE  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0563                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 003D                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                               _bounce_time 0032  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 003B                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 0043                       __end_of_recoverData 01C6  
       __end_of_do_I2C_SEND_RESTART_WRITE 0F3A                          __size_of_INT_ISR 0006  
                 __end_of_do_I2C_TX_EMPTY 048C                  ?_rdBlkRegCompleteHandler 0079  
                       ?_DATAEE_WriteByte 0041              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                 __end_of_handler_clock_hms 0511  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 003D  
                  ?_rd2RegCompleteHandler 0079                        ??_DATAEE_WriteByte 0044  
                      i1_checkDebounceSW1 0411                       _do_I2C_DO_NACK_STOP 0F49  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0079  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 0FBF  
                            ?_do_I2C_IDLE 0070                       ?i1_checkDebounceSW1 0070  
                            ?_do_I2C_RCEN 0070                   ??_OSCILLATOR_Initialize 003B  
                       ??_TMR0_StartTimer 003B                       _i2c1_driver_sendACK 0F1A  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0EFF  
                _TMR1_SetInterruptHandler 0F65                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0F05              __end_of_do_I2C_SEND_ADR_READ 0FB6  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 004E  
                        __size_of_sw1_EXT 002C                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                            _mssp1_setIRQ 0F0B                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 0FDD                                  __ptext11 0FC8  
                                __ptext20 0F6B                                  __ptext12 0FD2  
                                __ptext21 05C7                                  __ptext13 0381  
                              _T1GCONbits 020F                                  __ptext30 0F59  
                                __ptext22 0F65                                  __ptext14 03C9  
                                __ptext31 06E9                                  __ptext23 0715  
                                __ptext15 023F                                  __ptext40 048C  
                                __ptext32 063C                                  __ptext24 0F5F  
                                __ptext16 0670                                  __ptext41 0F0E  
                                __ptext33 0656                                  __ptext25 07DA  
                                __ptext17 0F14                                  __ptext50 0FAD  
                                __ptext42 02EE                                  __ptext34 0F9D  
                                __ptext26 0FA5                                  __ptext18 0620  
                                __ptext51 0F3F                                  __ptext43 029A  
                                __ptext35 0F7E                                  __ptext27 0338  
                                __ptext19 06A2                                  __ptext60 0F26  
                                __ptext52 0F3A                                  __ptext44 04B9  
                                __ptext36 0FB6                                  __ptext28 0FBF  
                                __ptext61 0F08                                  __ptext53 0F35  
                                __ptext45 0F4E                                  __ptext29 07CC  
                                __ptext70 0EFA                                  __ptext62 0F1E  
                                __ptext54 0F30                                  __ptext46 0F49  
                                __ptext38 0F22                                  __ptext71 0EF8  
                                __ptext63 0EF7                                  __ptext55 0F2B  
                                __ptext47 0F44                                  __ptext39 0F11  
                                __ptext80 0EF6                                  __ptext72 075D  
                                __ptext64 0F05                                  __ptext56 0F8D  
                                __ptext48 0F77                                  __ptext81 07F4  
                                __ptext73 07E7                                  __ptext65 06BA  
                                __ptext57 0459                                  __ptext49 0F95  
                                __ptext90 0F53                                  __ptext82 06D2  
                                __ptext74 053D                                  __ptext66 072A  
                                __ptext58 0F0B                                  __ptext91 0FF3  
                                __ptext83 0EF5                                  __ptext75 078F  
                                __ptext67 073B                                  __ptext59 0F85  
                                __ptext92 0EF3                                  __ptext84 04E5  
                                __ptext76 0F02                                  __ptext68 074C  
                                __ptext93 0511                                  __ptext85 076E  
                                __ptext77 0EFF                                  __ptext69 0002  
                                __ptext94 0411                                  __ptext86 07BD  
                                __ptext78 0F1A                                  __ptext95 06FF  
                                __ptext87 0689                                  __ptext79 07AE  
                                __ptext88 0EF4                                  __ptext89 0EFC  
                                _mod1_LED 0FD2                              _SSP1CON1bits 0190  
                                _mod2_LED 0FC8                  __end_of_checkDebounceSW1 0411  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 03C9  
                                _mod3_LED 0FE8                                  _mod4_LED 0FDD  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0F95               DATAEE_WriteByte@GIEBitValue 0044  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 0033                         ??_PWM6_Initialize 003B  
                        _i2c1_driver_stop 0F02                             __size_of_main 00B0  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
           __end_of_i2c1_driver_getRXData 0F0B      __end_of_TMR0_DefaultInterruptHandler 0EF5  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0EF4  
                       ??_DATAEE_ReadByte 003D                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 053D                              ??_reset_recv 0045  
                       ?_handler_clock_ms 0070                                  _set_mode 0031  
                          _config_routine 01C6              __end_of_ADCC_StartConversion 0FA5  
                                int$flags 007E                        ??_handler_clock_ms 0070  
      __end_of_INTERRUPT_InterruptManager 005B                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 003E          __end_of_do_I2C_SEND_RESTART_READ 0F35  
                            ??_returnStop 007A                  __end_of_i2c_restartWrite 0EFA  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 012E  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0052  
                      __end_of_reset_recv 0620                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 07CC                          ?_do_I2C_TX_EMPTY 0070  
                  _do_I2C_DO_ADDRESS_NACK 04B9                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 002C                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0EFC  
                  __end_of_config_routine 023F             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 003B  
                _ADCC_GetConversionResult 0FB6                             __pstringtext1 0587  
                    ??_EXT_INT_Initialize 003D                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0715  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 003B            __end_of_PIN_MANAGER_Initialize 0381  
                       ??_ADCC_Initialize 003B               __end_of_i2c_busCollisionISR 0F26  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 074C  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 075D  
                   _TMR2_InterruptHandler 004C                     _do_I2C_SEND_ADR_WRITE 0F95  
                    _do_I2C_SEND_ADR_READ 0FAD                           ?_config_routine 0070  
                         _TMR1_Initialize 05C7  
