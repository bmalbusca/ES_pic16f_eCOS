

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 18:54:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	dabs	1,0x7E,2
   120  0000                     
   121                           ; Version 2.10
   122                           ; Generated 31/07/2019 GMT
   123                           ; 
   124                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC16F18875 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001C                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  008C                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0110                     	;# 
   215  0110                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0112                     	;# 
   219  0113                     	;# 
   220  0114                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0116                     	;# 
   225  0117                     	;# 
   226  0119                     	;# 
   227  0119                     	;# 
   228  0119                     	;# 
   229  011A                     	;# 
   230  011A                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011C                     	;# 
   238  011C                     	;# 
   239  011C                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  011E                     	;# 
   244  011E                     	;# 
   245  011E                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0196                     	;# 
   259  0197                     	;# 
   260  0198                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019C                     	;# 
   265  020C                     	;# 
   266  020C                     	;# 
   267  020D                     	;# 
   268  020E                     	;# 
   269  020F                     	;# 
   270  020F                     	;# 
   271  0210                     	;# 
   272  0210                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0218                     	;# 
   286  0218                     	;# 
   287  0219                     	;# 
   288  021A                     	;# 
   289  021B                     	;# 
   290  021B                     	;# 
   291  021C                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021D                     	;# 
   295  021E                     	;# 
   296  021F                     	;# 
   297  028C                     	;# 
   298  028C                     	;# 
   299  028D                     	;# 
   300  028D                     	;# 
   301  028E                     	;# 
   302  028F                     	;# 
   303  0290                     	;# 
   304  0290                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0296                     	;# 
   314  0297                     	;# 
   315  0298                     	;# 
   316  0298                     	;# 
   317  0299                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  030C                     	;# 
   325  030C                     	;# 
   326  030D                     	;# 
   327  030E                     	;# 
   328  030F                     	;# 
   329  0310                     	;# 
   330  0310                     	;# 
   331  0311                     	;# 
   332  0312                     	;# 
   333  0313                     	;# 
   334  0314                     	;# 
   335  0314                     	;# 
   336  0315                     	;# 
   337  0316                     	;# 
   338  0317                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  031B                     	;# 
   344  031C                     	;# 
   345  031C                     	;# 
   346  031D                     	;# 
   347  031E                     	;# 
   348  031F                     	;# 
   349  038C                     	;# 
   350  038C                     	;# 
   351  038D                     	;# 
   352  038E                     	;# 
   353  0390                     	;# 
   354  0390                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  040C                     	;# 
   358  040D                     	;# 
   359  040E                     	;# 
   360  040F                     	;# 
   361  0410                     	;# 
   362  0411                     	;# 
   363  0416                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  0418                     	;# 
   367  0418                     	;# 
   368  0419                     	;# 
   369  041A                     	;# 
   370  041A                     	;# 
   371  041B                     	;# 
   372  041C                     	;# 
   373  041C                     	;# 
   374  041D                     	;# 
   375  041E                     	;# 
   376  041F                     	;# 
   377  048C                     	;# 
   378  048C                     	;# 
   379  048D                     	;# 
   380  048E                     	;# 
   381  048F                     	;# 
   382  048F                     	;# 
   383  0490                     	;# 
   384  0491                     	;# 
   385  0492                     	;# 
   386  0492                     	;# 
   387  0493                     	;# 
   388  0494                     	;# 
   389  0495                     	;# 
   390  0495                     	;# 
   391  0496                     	;# 
   392  0497                     	;# 
   393  0498                     	;# 
   394  0499                     	;# 
   395  049A                     	;# 
   396  049B                     	;# 
   397  049C                     	;# 
   398  049D                     	;# 
   399  050C                     	;# 
   400  050C                     	;# 
   401  050D                     	;# 
   402  050E                     	;# 
   403  050F                     	;# 
   404  050F                     	;# 
   405  0510                     	;# 
   406  0511                     	;# 
   407  0512                     	;# 
   408  0512                     	;# 
   409  0513                     	;# 
   410  0514                     	;# 
   411  0515                     	;# 
   412  0515                     	;# 
   413  0516                     	;# 
   414  0517                     	;# 
   415  0518                     	;# 
   416  0519                     	;# 
   417  051A                     	;# 
   418  051B                     	;# 
   419  051C                     	;# 
   420  051D                     	;# 
   421  058C                     	;# 
   422  058C                     	;# 
   423  058D                     	;# 
   424  058E                     	;# 
   425  058F                     	;# 
   426  058F                     	;# 
   427  0590                     	;# 
   428  0591                     	;# 
   429  0592                     	;# 
   430  0593                     	;# 
   431  060C                     	;# 
   432  060D                     	;# 
   433  060E                     	;# 
   434  060F                     	;# 
   435  0610                     	;# 
   436  0611                     	;# 
   437  0612                     	;# 
   438  0613                     	;# 
   439  0614                     	;# 
   440  0616                     	;# 
   441  0617                     	;# 
   442  0618                     	;# 
   443  0619                     	;# 
   444  061A                     	;# 
   445  061B                     	;# 
   446  061C                     	;# 
   447  061D                     	;# 
   448  061E                     	;# 
   449  068C                     	;# 
   450  068D                     	;# 
   451  068E                     	;# 
   452  068F                     	;# 
   453  0690                     	;# 
   454  0691                     	;# 
   455  0692                     	;# 
   456  0693                     	;# 
   457  0694                     	;# 
   458  070C                     	;# 
   459  070D                     	;# 
   460  070E                     	;# 
   461  070F                     	;# 
   462  0710                     	;# 
   463  0711                     	;# 
   464  0712                     	;# 
   465  0713                     	;# 
   466  0714                     	;# 
   467  0716                     	;# 
   468  0717                     	;# 
   469  0718                     	;# 
   470  0719                     	;# 
   471  071A                     	;# 
   472  071B                     	;# 
   473  071C                     	;# 
   474  071D                     	;# 
   475  071E                     	;# 
   476  0796                     	;# 
   477  0797                     	;# 
   478  0798                     	;# 
   479  0799                     	;# 
   480  079A                     	;# 
   481  079B                     	;# 
   482  080C                     	;# 
   483  080D                     	;# 
   484  080E                     	;# 
   485  080F                     	;# 
   486  0810                     	;# 
   487  0811                     	;# 
   488  0812                     	;# 
   489  0813                     	;# 
   490  0814                     	;# 
   491  081A                     	;# 
   492  081B                     	;# 
   493  081C                     	;# 
   494  081D                     	;# 
   495  081E                     	;# 
   496  081F                     	;# 
   497  088C                     	;# 
   498  088D                     	;# 
   499  088E                     	;# 
   500  088F                     	;# 
   501  0890                     	;# 
   502  0891                     	;# 
   503  0892                     	;# 
   504  0893                     	;# 
   505  0895                     	;# 
   506  0896                     	;# 
   507  0897                     	;# 
   508  0898                     	;# 
   509  0899                     	;# 
   510  089A                     	;# 
   511  089B                     	;# 
   512  090C                     	;# 
   513  090E                     	;# 
   514  090F                     	;# 
   515  091F                     	;# 
   516  091F                     	;# 
   517  098F                     	;# 
   518  098F                     	;# 
   519  0990                     	;# 
   520  0991                     	;# 
   521  0992                     	;# 
   522  0993                     	;# 
   523  0994                     	;# 
   524  0995                     	;# 
   525  0996                     	;# 
   526  0997                     	;# 
   527  0E0F                     	;# 
   528  0E10                     	;# 
   529  0E11                     	;# 
   530  0E12                     	;# 
   531  0E13                     	;# 
   532  0E14                     	;# 
   533  0E15                     	;# 
   534  0E16                     	;# 
   535  0E17                     	;# 
   536  0E18                     	;# 
   537  0E19                     	;# 
   538  0E1A                     	;# 
   539  0E1B                     	;# 
   540  0E1C                     	;# 
   541  0E1D                     	;# 
   542  0E1E                     	;# 
   543  0E1F                     	;# 
   544  0E20                     	;# 
   545  0E21                     	;# 
   546  0E22                     	;# 
   547  0E23                     	;# 
   548  0E24                     	;# 
   549  0E25                     	;# 
   550  0E26                     	;# 
   551  0E27                     	;# 
   552  0E28                     	;# 
   553  0E29                     	;# 
   554  0E2A                     	;# 
   555  0E2B                     	;# 
   556  0E2C                     	;# 
   557  0E2D                     	;# 
   558  0E2E                     	;# 
   559  0E2F                     	;# 
   560  0E30                     	;# 
   561  0E31                     	;# 
   562  0E32                     	;# 
   563  0E33                     	;# 
   564  0E34                     	;# 
   565  0E35                     	;# 
   566  0E36                     	;# 
   567  0E37                     	;# 
   568  0E8F                     	;# 
   569  0E90                     	;# 
   570  0E91                     	;# 
   571  0E92                     	;# 
   572  0E93                     	;# 
   573  0E94                     	;# 
   574  0E95                     	;# 
   575  0E96                     	;# 
   576  0E97                     	;# 
   577  0E9C                     	;# 
   578  0E9D                     	;# 
   579  0E9E                     	;# 
   580  0EA1                     	;# 
   581  0EA2                     	;# 
   582  0EA3                     	;# 
   583  0EA4                     	;# 
   584  0EA5                     	;# 
   585  0EA9                     	;# 
   586  0EAA                     	;# 
   587  0EAB                     	;# 
   588  0EAC                     	;# 
   589  0EB1                     	;# 
   590  0EB2                     	;# 
   591  0EB3                     	;# 
   592  0EB8                     	;# 
   593  0EB9                     	;# 
   594  0EBA                     	;# 
   595  0EBB                     	;# 
   596  0EBC                     	;# 
   597  0EBD                     	;# 
   598  0EBE                     	;# 
   599  0EC3                     	;# 
   600  0EC5                     	;# 
   601  0EC6                     	;# 
   602  0EC7                     	;# 
   603  0EC8                     	;# 
   604  0EC9                     	;# 
   605  0ECA                     	;# 
   606  0ECB                     	;# 
   607  0ECC                     	;# 
   608  0F10                     	;# 
   609  0F11                     	;# 
   610  0F12                     	;# 
   611  0F13                     	;# 
   612  0F14                     	;# 
   613  0F15                     	;# 
   614  0F16                     	;# 
   615  0F17                     	;# 
   616  0F18                     	;# 
   617  0F19                     	;# 
   618  0F1A                     	;# 
   619  0F1B                     	;# 
   620  0F1C                     	;# 
   621  0F1D                     	;# 
   622  0F1E                     	;# 
   623  0F1F                     	;# 
   624  0F20                     	;# 
   625  0F21                     	;# 
   626  0F22                     	;# 
   627  0F23                     	;# 
   628  0F24                     	;# 
   629  0F25                     	;# 
   630  0F26                     	;# 
   631  0F27                     	;# 
   632  0F28                     	;# 
   633  0F29                     	;# 
   634  0F2A                     	;# 
   635  0F2B                     	;# 
   636  0F2C                     	;# 
   637  0F2D                     	;# 
   638  0F2E                     	;# 
   639  0F2F                     	;# 
   640  0F30                     	;# 
   641  0F31                     	;# 
   642  0F32                     	;# 
   643  0F38                     	;# 
   644  0F39                     	;# 
   645  0F3A                     	;# 
   646  0F3B                     	;# 
   647  0F3C                     	;# 
   648  0F3D                     	;# 
   649  0F3E                     	;# 
   650  0F3F                     	;# 
   651  0F40                     	;# 
   652  0F41                     	;# 
   653  0F43                     	;# 
   654  0F44                     	;# 
   655  0F45                     	;# 
   656  0F46                     	;# 
   657  0F47                     	;# 
   658  0F48                     	;# 
   659  0F49                     	;# 
   660  0F4A                     	;# 
   661  0F4B                     	;# 
   662  0F4C                     	;# 
   663  0F4E                     	;# 
   664  0F4F                     	;# 
   665  0F50                     	;# 
   666  0F51                     	;# 
   667  0F52                     	;# 
   668  0F53                     	;# 
   669  0F54                     	;# 
   670  0F55                     	;# 
   671  0F56                     	;# 
   672  0F57                     	;# 
   673  0F59                     	;# 
   674  0F5A                     	;# 
   675  0F5B                     	;# 
   676  0F5C                     	;# 
   677  0F5D                     	;# 
   678  0F61                     	;# 
   679  0F62                     	;# 
   680  0F64                     	;# 
   681  0F65                     	;# 
   682  0F66                     	;# 
   683  0F67                     	;# 
   684  0F68                     	;# 
   685  0F69                     	;# 
   686  0F6A                     	;# 
   687  0F6B                     	;# 
   688  0F6C                     	;# 
   689  0F6D                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000F                     	;# 
   717  0010                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0017                     	;# 
   725  0018                     	;# 
   726  0019                     	;# 
   727  001A                     	;# 
   728  001C                     	;# 
   729  001C                     	;# 
   730  001D                     	;# 
   731  001D                     	;# 
   732  001E                     	;# 
   733  001F                     	;# 
   734  008C                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0093                     	;# 
   744  0094                     	;# 
   745  0095                     	;# 
   746  0096                     	;# 
   747  0097                     	;# 
   748  0098                     	;# 
   749  0099                     	;# 
   750  009A                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0110                     	;# 
   761  0110                     	;# 
   762  0111                     	;# 
   763  0112                     	;# 
   764  0112                     	;# 
   765  0113                     	;# 
   766  0114                     	;# 
   767  0114                     	;# 
   768  0115                     	;# 
   769  0116                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  0119                     	;# 
   773  0119                     	;# 
   774  0119                     	;# 
   775  011A                     	;# 
   776  011A                     	;# 
   777  011A                     	;# 
   778  011B                     	;# 
   779  011B                     	;# 
   780  011B                     	;# 
   781  011B                     	;# 
   782  011B                     	;# 
   783  011C                     	;# 
   784  011C                     	;# 
   785  011C                     	;# 
   786  011D                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  011E                     	;# 
   790  011E                     	;# 
   791  011E                     	;# 
   792  011F                     	;# 
   793  011F                     	;# 
   794  011F                     	;# 
   795  011F                     	;# 
   796  011F                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  018E                     	;# 
   800  018F                     	;# 
   801  0190                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0196                     	;# 
   805  0197                     	;# 
   806  0198                     	;# 
   807  0199                     	;# 
   808  019A                     	;# 
   809  019B                     	;# 
   810  019C                     	;# 
   811  020C                     	;# 
   812  020C                     	;# 
   813  020D                     	;# 
   814  020E                     	;# 
   815  020F                     	;# 
   816  020F                     	;# 
   817  0210                     	;# 
   818  0210                     	;# 
   819  0211                     	;# 
   820  0211                     	;# 
   821  0212                     	;# 
   822  0212                     	;# 
   823  0213                     	;# 
   824  0214                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0216                     	;# 
   828  0216                     	;# 
   829  0217                     	;# 
   830  0217                     	;# 
   831  0218                     	;# 
   832  0218                     	;# 
   833  0219                     	;# 
   834  021A                     	;# 
   835  021B                     	;# 
   836  021B                     	;# 
   837  021C                     	;# 
   838  021C                     	;# 
   839  021D                     	;# 
   840  021D                     	;# 
   841  021E                     	;# 
   842  021F                     	;# 
   843  028C                     	;# 
   844  028C                     	;# 
   845  028D                     	;# 
   846  028D                     	;# 
   847  028E                     	;# 
   848  028F                     	;# 
   849  0290                     	;# 
   850  0290                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0292                     	;# 
   854  0293                     	;# 
   855  0293                     	;# 
   856  0294                     	;# 
   857  0295                     	;# 
   858  0296                     	;# 
   859  0296                     	;# 
   860  0297                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  029B                     	;# 
   867  029C                     	;# 
   868  029C                     	;# 
   869  029D                     	;# 
   870  030C                     	;# 
   871  030C                     	;# 
   872  030D                     	;# 
   873  030E                     	;# 
   874  030F                     	;# 
   875  0310                     	;# 
   876  0310                     	;# 
   877  0311                     	;# 
   878  0312                     	;# 
   879  0313                     	;# 
   880  0314                     	;# 
   881  0314                     	;# 
   882  0315                     	;# 
   883  0316                     	;# 
   884  0317                     	;# 
   885  0318                     	;# 
   886  0318                     	;# 
   887  0319                     	;# 
   888  031A                     	;# 
   889  031B                     	;# 
   890  031C                     	;# 
   891  031C                     	;# 
   892  031D                     	;# 
   893  031E                     	;# 
   894  031F                     	;# 
   895  038C                     	;# 
   896  038C                     	;# 
   897  038D                     	;# 
   898  038E                     	;# 
   899  0390                     	;# 
   900  0390                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  040C                     	;# 
   904  040D                     	;# 
   905  040E                     	;# 
   906  040F                     	;# 
   907  0410                     	;# 
   908  0411                     	;# 
   909  0416                     	;# 
   910  0416                     	;# 
   911  0417                     	;# 
   912  0418                     	;# 
   913  0418                     	;# 
   914  0419                     	;# 
   915  041A                     	;# 
   916  041A                     	;# 
   917  041B                     	;# 
   918  041C                     	;# 
   919  041C                     	;# 
   920  041D                     	;# 
   921  041E                     	;# 
   922  041F                     	;# 
   923  048C                     	;# 
   924  048C                     	;# 
   925  048D                     	;# 
   926  048E                     	;# 
   927  048F                     	;# 
   928  048F                     	;# 
   929  0490                     	;# 
   930  0491                     	;# 
   931  0492                     	;# 
   932  0492                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0495                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0497                     	;# 
   939  0498                     	;# 
   940  0499                     	;# 
   941  049A                     	;# 
   942  049B                     	;# 
   943  049C                     	;# 
   944  049D                     	;# 
   945  050C                     	;# 
   946  050C                     	;# 
   947  050D                     	;# 
   948  050E                     	;# 
   949  050F                     	;# 
   950  050F                     	;# 
   951  0510                     	;# 
   952  0511                     	;# 
   953  0512                     	;# 
   954  0512                     	;# 
   955  0513                     	;# 
   956  0514                     	;# 
   957  0515                     	;# 
   958  0515                     	;# 
   959  0516                     	;# 
   960  0517                     	;# 
   961  0518                     	;# 
   962  0519                     	;# 
   963  051A                     	;# 
   964  051B                     	;# 
   965  051C                     	;# 
   966  051D                     	;# 
   967  058C                     	;# 
   968  058C                     	;# 
   969  058D                     	;# 
   970  058E                     	;# 
   971  058F                     	;# 
   972  058F                     	;# 
   973  0590                     	;# 
   974  0591                     	;# 
   975  0592                     	;# 
   976  0593                     	;# 
   977  060C                     	;# 
   978  060D                     	;# 
   979  060E                     	;# 
   980  060F                     	;# 
   981  0610                     	;# 
   982  0611                     	;# 
   983  0612                     	;# 
   984  0613                     	;# 
   985  0614                     	;# 
   986  0616                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061D                     	;# 
   994  061E                     	;# 
   995  068C                     	;# 
   996  068D                     	;# 
   997  068E                     	;# 
   998  068F                     	;# 
   999  0690                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  070C                     	;# 
  1005  070D                     	;# 
  1006  070E                     	;# 
  1007  070F                     	;# 
  1008  0710                     	;# 
  1009  0711                     	;# 
  1010  0712                     	;# 
  1011  0713                     	;# 
  1012  0714                     	;# 
  1013  0716                     	;# 
  1014  0717                     	;# 
  1015  0718                     	;# 
  1016  0719                     	;# 
  1017  071A                     	;# 
  1018  071B                     	;# 
  1019  071C                     	;# 
  1020  071D                     	;# 
  1021  071E                     	;# 
  1022  0796                     	;# 
  1023  0797                     	;# 
  1024  0798                     	;# 
  1025  0799                     	;# 
  1026  079A                     	;# 
  1027  079B                     	;# 
  1028  080C                     	;# 
  1029  080D                     	;# 
  1030  080E                     	;# 
  1031  080F                     	;# 
  1032  0810                     	;# 
  1033  0811                     	;# 
  1034  0812                     	;# 
  1035  0813                     	;# 
  1036  0814                     	;# 
  1037  081A                     	;# 
  1038  081B                     	;# 
  1039  081C                     	;# 
  1040  081D                     	;# 
  1041  081E                     	;# 
  1042  081F                     	;# 
  1043  088C                     	;# 
  1044  088D                     	;# 
  1045  088E                     	;# 
  1046  088F                     	;# 
  1047  0890                     	;# 
  1048  0891                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0895                     	;# 
  1052  0896                     	;# 
  1053  0897                     	;# 
  1054  0898                     	;# 
  1055  0899                     	;# 
  1056  089A                     	;# 
  1057  089B                     	;# 
  1058  090C                     	;# 
  1059  090E                     	;# 
  1060  090F                     	;# 
  1061  091F                     	;# 
  1062  091F                     	;# 
  1063  098F                     	;# 
  1064  098F                     	;# 
  1065  0990                     	;# 
  1066  0991                     	;# 
  1067  0992                     	;# 
  1068  0993                     	;# 
  1069  0994                     	;# 
  1070  0995                     	;# 
  1071  0996                     	;# 
  1072  0997                     	;# 
  1073  0E0F                     	;# 
  1074  0E10                     	;# 
  1075  0E11                     	;# 
  1076  0E12                     	;# 
  1077  0E13                     	;# 
  1078  0E14                     	;# 
  1079  0E15                     	;# 
  1080  0E16                     	;# 
  1081  0E17                     	;# 
  1082  0E18                     	;# 
  1083  0E19                     	;# 
  1084  0E1A                     	;# 
  1085  0E1B                     	;# 
  1086  0E1C                     	;# 
  1087  0E1D                     	;# 
  1088  0E1E                     	;# 
  1089  0E1F                     	;# 
  1090  0E20                     	;# 
  1091  0E21                     	;# 
  1092  0E22                     	;# 
  1093  0E23                     	;# 
  1094  0E24                     	;# 
  1095  0E25                     	;# 
  1096  0E26                     	;# 
  1097  0E27                     	;# 
  1098  0E28                     	;# 
  1099  0E29                     	;# 
  1100  0E2A                     	;# 
  1101  0E2B                     	;# 
  1102  0E2C                     	;# 
  1103  0E2D                     	;# 
  1104  0E2E                     	;# 
  1105  0E2F                     	;# 
  1106  0E30                     	;# 
  1107  0E31                     	;# 
  1108  0E32                     	;# 
  1109  0E33                     	;# 
  1110  0E34                     	;# 
  1111  0E35                     	;# 
  1112  0E36                     	;# 
  1113  0E37                     	;# 
  1114  0E8F                     	;# 
  1115  0E90                     	;# 
  1116  0E91                     	;# 
  1117  0E92                     	;# 
  1118  0E93                     	;# 
  1119  0E94                     	;# 
  1120  0E95                     	;# 
  1121  0E96                     	;# 
  1122  0E97                     	;# 
  1123  0E9C                     	;# 
  1124  0E9D                     	;# 
  1125  0E9E                     	;# 
  1126  0EA1                     	;# 
  1127  0EA2                     	;# 
  1128  0EA3                     	;# 
  1129  0EA4                     	;# 
  1130  0EA5                     	;# 
  1131  0EA9                     	;# 
  1132  0EAA                     	;# 
  1133  0EAB                     	;# 
  1134  0EAC                     	;# 
  1135  0EB1                     	;# 
  1136  0EB2                     	;# 
  1137  0EB3                     	;# 
  1138  0EB8                     	;# 
  1139  0EB9                     	;# 
  1140  0EBA                     	;# 
  1141  0EBB                     	;# 
  1142  0EBC                     	;# 
  1143  0EBD                     	;# 
  1144  0EBE                     	;# 
  1145  0EC3                     	;# 
  1146  0EC5                     	;# 
  1147  0EC6                     	;# 
  1148  0EC7                     	;# 
  1149  0EC8                     	;# 
  1150  0EC9                     	;# 
  1151  0ECA                     	;# 
  1152  0ECB                     	;# 
  1153  0ECC                     	;# 
  1154  0F10                     	;# 
  1155  0F11                     	;# 
  1156  0F12                     	;# 
  1157  0F13                     	;# 
  1158  0F14                     	;# 
  1159  0F15                     	;# 
  1160  0F16                     	;# 
  1161  0F17                     	;# 
  1162  0F18                     	;# 
  1163  0F19                     	;# 
  1164  0F1A                     	;# 
  1165  0F1B                     	;# 
  1166  0F1C                     	;# 
  1167  0F1D                     	;# 
  1168  0F1E                     	;# 
  1169  0F1F                     	;# 
  1170  0F20                     	;# 
  1171  0F21                     	;# 
  1172  0F22                     	;# 
  1173  0F23                     	;# 
  1174  0F24                     	;# 
  1175  0F25                     	;# 
  1176  0F26                     	;# 
  1177  0F27                     	;# 
  1178  0F28                     	;# 
  1179  0F29                     	;# 
  1180  0F2A                     	;# 
  1181  0F2B                     	;# 
  1182  0F2C                     	;# 
  1183  0F2D                     	;# 
  1184  0F2E                     	;# 
  1185  0F2F                     	;# 
  1186  0F30                     	;# 
  1187  0F31                     	;# 
  1188  0F32                     	;# 
  1189  0F38                     	;# 
  1190  0F39                     	;# 
  1191  0F3A                     	;# 
  1192  0F3B                     	;# 
  1193  0F3C                     	;# 
  1194  0F3D                     	;# 
  1195  0F3E                     	;# 
  1196  0F3F                     	;# 
  1197  0F40                     	;# 
  1198  0F41                     	;# 
  1199  0F43                     	;# 
  1200  0F44                     	;# 
  1201  0F45                     	;# 
  1202  0F46                     	;# 
  1203  0F47                     	;# 
  1204  0F48                     	;# 
  1205  0F49                     	;# 
  1206  0F4A                     	;# 
  1207  0F4B                     	;# 
  1208  0F4C                     	;# 
  1209  0F4E                     	;# 
  1210  0F4F                     	;# 
  1211  0F50                     	;# 
  1212  0F51                     	;# 
  1213  0F52                     	;# 
  1214  0F53                     	;# 
  1215  0F54                     	;# 
  1216  0F55                     	;# 
  1217  0F56                     	;# 
  1218  0F57                     	;# 
  1219  0F59                     	;# 
  1220  0F5A                     	;# 
  1221  0F5B                     	;# 
  1222  0F5C                     	;# 
  1223  0F5D                     	;# 
  1224  0F61                     	;# 
  1225  0F62                     	;# 
  1226  0F64                     	;# 
  1227  0F65                     	;# 
  1228  0F66                     	;# 
  1229  0F67                     	;# 
  1230  0F68                     	;# 
  1231  0F69                     	;# 
  1232  0F6A                     	;# 
  1233  0F6B                     	;# 
  1234  0F6C                     	;# 
  1235  0F6D                     	;# 
  1236  0FE4                     	;# 
  1237  0FE5                     	;# 
  1238  0FE6                     	;# 
  1239  0FE7                     	;# 
  1240  0FE8                     	;# 
  1241  0FE9                     	;# 
  1242  0FEA                     	;# 
  1243  0FEB                     	;# 
  1244  0FED                     	;# 
  1245  0FEE                     	;# 
  1246  0FEF                     	;# 
  1247  0000                     	;# 
  1248  0001                     	;# 
  1249  0002                     	;# 
  1250  0003                     	;# 
  1251  0004                     	;# 
  1252  0005                     	;# 
  1253  0006                     	;# 
  1254  0007                     	;# 
  1255  0008                     	;# 
  1256  0009                     	;# 
  1257  000A                     	;# 
  1258  000B                     	;# 
  1259  000C                     	;# 
  1260  000D                     	;# 
  1261  000E                     	;# 
  1262  000F                     	;# 
  1263  0010                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0013                     	;# 
  1267  0014                     	;# 
  1268  0015                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001C                     	;# 
  1275  001C                     	;# 
  1276  001D                     	;# 
  1277  001D                     	;# 
  1278  001E                     	;# 
  1279  001F                     	;# 
  1280  008C                     	;# 
  1281  008C                     	;# 
  1282  008D                     	;# 
  1283  008E                     	;# 
  1284  008E                     	;# 
  1285  008F                     	;# 
  1286  0090                     	;# 
  1287  0090                     	;# 
  1288  0091                     	;# 
  1289  0093                     	;# 
  1290  0094                     	;# 
  1291  0095                     	;# 
  1292  0096                     	;# 
  1293  0097                     	;# 
  1294  0098                     	;# 
  1295  0099                     	;# 
  1296  009A                     	;# 
  1297  009B                     	;# 
  1298  009C                     	;# 
  1299  009D                     	;# 
  1300  009E                     	;# 
  1301  010C                     	;# 
  1302  010D                     	;# 
  1303  010E                     	;# 
  1304  010E                     	;# 
  1305  010F                     	;# 
  1306  0110                     	;# 
  1307  0110                     	;# 
  1308  0111                     	;# 
  1309  0112                     	;# 
  1310  0112                     	;# 
  1311  0113                     	;# 
  1312  0114                     	;# 
  1313  0114                     	;# 
  1314  0115                     	;# 
  1315  0116                     	;# 
  1316  0116                     	;# 
  1317  0117                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  0119                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011A                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011B                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011C                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011D                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011E                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  011F                     	;# 
  1343  018C                     	;# 
  1344  018D                     	;# 
  1345  018E                     	;# 
  1346  018F                     	;# 
  1347  0190                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0196                     	;# 
  1351  0197                     	;# 
  1352  0198                     	;# 
  1353  0199                     	;# 
  1354  019A                     	;# 
  1355  019B                     	;# 
  1356  019C                     	;# 
  1357  020C                     	;# 
  1358  020C                     	;# 
  1359  020D                     	;# 
  1360  020E                     	;# 
  1361  020F                     	;# 
  1362  020F                     	;# 
  1363  0210                     	;# 
  1364  0210                     	;# 
  1365  0211                     	;# 
  1366  0211                     	;# 
  1367  0212                     	;# 
  1368  0212                     	;# 
  1369  0213                     	;# 
  1370  0214                     	;# 
  1371  0215                     	;# 
  1372  0215                     	;# 
  1373  0216                     	;# 
  1374  0216                     	;# 
  1375  0217                     	;# 
  1376  0217                     	;# 
  1377  0218                     	;# 
  1378  0218                     	;# 
  1379  0219                     	;# 
  1380  021A                     	;# 
  1381  021B                     	;# 
  1382  021B                     	;# 
  1383  021C                     	;# 
  1384  021C                     	;# 
  1385  021D                     	;# 
  1386  021D                     	;# 
  1387  021E                     	;# 
  1388  021F                     	;# 
  1389  028C                     	;# 
  1390  028C                     	;# 
  1391  028D                     	;# 
  1392  028D                     	;# 
  1393  028E                     	;# 
  1394  028F                     	;# 
  1395  0290                     	;# 
  1396  0290                     	;# 
  1397  0291                     	;# 
  1398  0292                     	;# 
  1399  0292                     	;# 
  1400  0293                     	;# 
  1401  0293                     	;# 
  1402  0294                     	;# 
  1403  0295                     	;# 
  1404  0296                     	;# 
  1405  0296                     	;# 
  1406  0297                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  0299                     	;# 
  1411  029A                     	;# 
  1412  029B                     	;# 
  1413  029C                     	;# 
  1414  029C                     	;# 
  1415  029D                     	;# 
  1416  030C                     	;# 
  1417  030C                     	;# 
  1418  030D                     	;# 
  1419  030E                     	;# 
  1420  030F                     	;# 
  1421  0310                     	;# 
  1422  0310                     	;# 
  1423  0311                     	;# 
  1424  0312                     	;# 
  1425  0313                     	;# 
  1426  0314                     	;# 
  1427  0314                     	;# 
  1428  0315                     	;# 
  1429  0316                     	;# 
  1430  0317                     	;# 
  1431  0318                     	;# 
  1432  0318                     	;# 
  1433  0319                     	;# 
  1434  031A                     	;# 
  1435  031B                     	;# 
  1436  031C                     	;# 
  1437  031C                     	;# 
  1438  031D                     	;# 
  1439  031E                     	;# 
  1440  031F                     	;# 
  1441  038C                     	;# 
  1442  038C                     	;# 
  1443  038D                     	;# 
  1444  038E                     	;# 
  1445  0390                     	;# 
  1446  0390                     	;# 
  1447  0391                     	;# 
  1448  0392                     	;# 
  1449  040C                     	;# 
  1450  040D                     	;# 
  1451  040E                     	;# 
  1452  040F                     	;# 
  1453  0410                     	;# 
  1454  0411                     	;# 
  1455  0416                     	;# 
  1456  0416                     	;# 
  1457  0417                     	;# 
  1458  0418                     	;# 
  1459  0418                     	;# 
  1460  0419                     	;# 
  1461  041A                     	;# 
  1462  041A                     	;# 
  1463  041B                     	;# 
  1464  041C                     	;# 
  1465  041C                     	;# 
  1466  041D                     	;# 
  1467  041E                     	;# 
  1468  041F                     	;# 
  1469  048C                     	;# 
  1470  048C                     	;# 
  1471  048D                     	;# 
  1472  048E                     	;# 
  1473  048F                     	;# 
  1474  048F                     	;# 
  1475  0490                     	;# 
  1476  0491                     	;# 
  1477  0492                     	;# 
  1478  0492                     	;# 
  1479  0493                     	;# 
  1480  0494                     	;# 
  1481  0495                     	;# 
  1482  0495                     	;# 
  1483  0496                     	;# 
  1484  0497                     	;# 
  1485  0498                     	;# 
  1486  0499                     	;# 
  1487  049A                     	;# 
  1488  049B                     	;# 
  1489  049C                     	;# 
  1490  049D                     	;# 
  1491  050C                     	;# 
  1492  050C                     	;# 
  1493  050D                     	;# 
  1494  050E                     	;# 
  1495  050F                     	;# 
  1496  050F                     	;# 
  1497  0510                     	;# 
  1498  0511                     	;# 
  1499  0512                     	;# 
  1500  0512                     	;# 
  1501  0513                     	;# 
  1502  0514                     	;# 
  1503  0515                     	;# 
  1504  0515                     	;# 
  1505  0516                     	;# 
  1506  0517                     	;# 
  1507  0518                     	;# 
  1508  0519                     	;# 
  1509  051A                     	;# 
  1510  051B                     	;# 
  1511  051C                     	;# 
  1512  051D                     	;# 
  1513  058C                     	;# 
  1514  058C                     	;# 
  1515  058D                     	;# 
  1516  058E                     	;# 
  1517  058F                     	;# 
  1518  058F                     	;# 
  1519  0590                     	;# 
  1520  0591                     	;# 
  1521  0592                     	;# 
  1522  0593                     	;# 
  1523  060C                     	;# 
  1524  060D                     	;# 
  1525  060E                     	;# 
  1526  060F                     	;# 
  1527  0610                     	;# 
  1528  0611                     	;# 
  1529  0612                     	;# 
  1530  0613                     	;# 
  1531  0614                     	;# 
  1532  0616                     	;# 
  1533  0617                     	;# 
  1534  0618                     	;# 
  1535  0619                     	;# 
  1536  061A                     	;# 
  1537  061B                     	;# 
  1538  061C                     	;# 
  1539  061D                     	;# 
  1540  061E                     	;# 
  1541  068C                     	;# 
  1542  068D                     	;# 
  1543  068E                     	;# 
  1544  068F                     	;# 
  1545  0690                     	;# 
  1546  0691                     	;# 
  1547  0692                     	;# 
  1548  0693                     	;# 
  1549  0694                     	;# 
  1550  070C                     	;# 
  1551  070D                     	;# 
  1552  070E                     	;# 
  1553  070F                     	;# 
  1554  0710                     	;# 
  1555  0711                     	;# 
  1556  0712                     	;# 
  1557  0713                     	;# 
  1558  0714                     	;# 
  1559  0716                     	;# 
  1560  0717                     	;# 
  1561  0718                     	;# 
  1562  0719                     	;# 
  1563  071A                     	;# 
  1564  071B                     	;# 
  1565  071C                     	;# 
  1566  071D                     	;# 
  1567  071E                     	;# 
  1568  0796                     	;# 
  1569  0797                     	;# 
  1570  0798                     	;# 
  1571  0799                     	;# 
  1572  079A                     	;# 
  1573  079B                     	;# 
  1574  080C                     	;# 
  1575  080D                     	;# 
  1576  080E                     	;# 
  1577  080F                     	;# 
  1578  0810                     	;# 
  1579  0811                     	;# 
  1580  0812                     	;# 
  1581  0813                     	;# 
  1582  0814                     	;# 
  1583  081A                     	;# 
  1584  081B                     	;# 
  1585  081C                     	;# 
  1586  081D                     	;# 
  1587  081E                     	;# 
  1588  081F                     	;# 
  1589  088C                     	;# 
  1590  088D                     	;# 
  1591  088E                     	;# 
  1592  088F                     	;# 
  1593  0890                     	;# 
  1594  0891                     	;# 
  1595  0892                     	;# 
  1596  0893                     	;# 
  1597  0895                     	;# 
  1598  0896                     	;# 
  1599  0897                     	;# 
  1600  0898                     	;# 
  1601  0899                     	;# 
  1602  089A                     	;# 
  1603  089B                     	;# 
  1604  090C                     	;# 
  1605  090E                     	;# 
  1606  090F                     	;# 
  1607  091F                     	;# 
  1608  091F                     	;# 
  1609  098F                     	;# 
  1610  098F                     	;# 
  1611  0990                     	;# 
  1612  0991                     	;# 
  1613  0992                     	;# 
  1614  0993                     	;# 
  1615  0994                     	;# 
  1616  0995                     	;# 
  1617  0996                     	;# 
  1618  0997                     	;# 
  1619  0E0F                     	;# 
  1620  0E10                     	;# 
  1621  0E11                     	;# 
  1622  0E12                     	;# 
  1623  0E13                     	;# 
  1624  0E14                     	;# 
  1625  0E15                     	;# 
  1626  0E16                     	;# 
  1627  0E17                     	;# 
  1628  0E18                     	;# 
  1629  0E19                     	;# 
  1630  0E1A                     	;# 
  1631  0E1B                     	;# 
  1632  0E1C                     	;# 
  1633  0E1D                     	;# 
  1634  0E1E                     	;# 
  1635  0E1F                     	;# 
  1636  0E20                     	;# 
  1637  0E21                     	;# 
  1638  0E22                     	;# 
  1639  0E23                     	;# 
  1640  0E24                     	;# 
  1641  0E25                     	;# 
  1642  0E26                     	;# 
  1643  0E27                     	;# 
  1644  0E28                     	;# 
  1645  0E29                     	;# 
  1646  0E2A                     	;# 
  1647  0E2B                     	;# 
  1648  0E2C                     	;# 
  1649  0E2D                     	;# 
  1650  0E2E                     	;# 
  1651  0E2F                     	;# 
  1652  0E30                     	;# 
  1653  0E31                     	;# 
  1654  0E32                     	;# 
  1655  0E33                     	;# 
  1656  0E34                     	;# 
  1657  0E35                     	;# 
  1658  0E36                     	;# 
  1659  0E37                     	;# 
  1660  0E8F                     	;# 
  1661  0E90                     	;# 
  1662  0E91                     	;# 
  1663  0E92                     	;# 
  1664  0E93                     	;# 
  1665  0E94                     	;# 
  1666  0E95                     	;# 
  1667  0E96                     	;# 
  1668  0E97                     	;# 
  1669  0E9C                     	;# 
  1670  0E9D                     	;# 
  1671  0E9E                     	;# 
  1672  0EA1                     	;# 
  1673  0EA2                     	;# 
  1674  0EA3                     	;# 
  1675  0EA4                     	;# 
  1676  0EA5                     	;# 
  1677  0EA9                     	;# 
  1678  0EAA                     	;# 
  1679  0EAB                     	;# 
  1680  0EAC                     	;# 
  1681  0EB1                     	;# 
  1682  0EB2                     	;# 
  1683  0EB3                     	;# 
  1684  0EB8                     	;# 
  1685  0EB9                     	;# 
  1686  0EBA                     	;# 
  1687  0EBB                     	;# 
  1688  0EBC                     	;# 
  1689  0EBD                     	;# 
  1690  0EBE                     	;# 
  1691  0EC3                     	;# 
  1692  0EC5                     	;# 
  1693  0EC6                     	;# 
  1694  0EC7                     	;# 
  1695  0EC8                     	;# 
  1696  0EC9                     	;# 
  1697  0ECA                     	;# 
  1698  0ECB                     	;# 
  1699  0ECC                     	;# 
  1700  0F10                     	;# 
  1701  0F11                     	;# 
  1702  0F12                     	;# 
  1703  0F13                     	;# 
  1704  0F14                     	;# 
  1705  0F15                     	;# 
  1706  0F16                     	;# 
  1707  0F17                     	;# 
  1708  0F18                     	;# 
  1709  0F19                     	;# 
  1710  0F1A                     	;# 
  1711  0F1B                     	;# 
  1712  0F1C                     	;# 
  1713  0F1D                     	;# 
  1714  0F1E                     	;# 
  1715  0F1F                     	;# 
  1716  0F20                     	;# 
  1717  0F21                     	;# 
  1718  0F22                     	;# 
  1719  0F23                     	;# 
  1720  0F24                     	;# 
  1721  0F25                     	;# 
  1722  0F26                     	;# 
  1723  0F27                     	;# 
  1724  0F28                     	;# 
  1725  0F29                     	;# 
  1726  0F2A                     	;# 
  1727  0F2B                     	;# 
  1728  0F2C                     	;# 
  1729  0F2D                     	;# 
  1730  0F2E                     	;# 
  1731  0F2F                     	;# 
  1732  0F30                     	;# 
  1733  0F31                     	;# 
  1734  0F32                     	;# 
  1735  0F38                     	;# 
  1736  0F39                     	;# 
  1737  0F3A                     	;# 
  1738  0F3B                     	;# 
  1739  0F3C                     	;# 
  1740  0F3D                     	;# 
  1741  0F3E                     	;# 
  1742  0F3F                     	;# 
  1743  0F40                     	;# 
  1744  0F41                     	;# 
  1745  0F43                     	;# 
  1746  0F44                     	;# 
  1747  0F45                     	;# 
  1748  0F46                     	;# 
  1749  0F47                     	;# 
  1750  0F48                     	;# 
  1751  0F49                     	;# 
  1752  0F4A                     	;# 
  1753  0F4B                     	;# 
  1754  0F4C                     	;# 
  1755  0F4E                     	;# 
  1756  0F4F                     	;# 
  1757  0F50                     	;# 
  1758  0F51                     	;# 
  1759  0F52                     	;# 
  1760  0F53                     	;# 
  1761  0F54                     	;# 
  1762  0F55                     	;# 
  1763  0F56                     	;# 
  1764  0F57                     	;# 
  1765  0F59                     	;# 
  1766  0F5A                     	;# 
  1767  0F5B                     	;# 
  1768  0F5C                     	;# 
  1769  0F5D                     	;# 
  1770  0F61                     	;# 
  1771  0F62                     	;# 
  1772  0F64                     	;# 
  1773  0F65                     	;# 
  1774  0F66                     	;# 
  1775  0F67                     	;# 
  1776  0F68                     	;# 
  1777  0F69                     	;# 
  1778  0F6A                     	;# 
  1779  0F6B                     	;# 
  1780  0F6C                     	;# 
  1781  0F6D                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  000F                     	;# 
  1809  0010                     	;# 
  1810  0011                     	;# 
  1811  0012                     	;# 
  1812  0013                     	;# 
  1813  0014                     	;# 
  1814  0015                     	;# 
  1815  0016                     	;# 
  1816  0017                     	;# 
  1817  0018                     	;# 
  1818  0019                     	;# 
  1819  001A                     	;# 
  1820  001C                     	;# 
  1821  001C                     	;# 
  1822  001D                     	;# 
  1823  001D                     	;# 
  1824  001E                     	;# 
  1825  001F                     	;# 
  1826  008C                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  008E                     	;# 
  1831  008F                     	;# 
  1832  0090                     	;# 
  1833  0090                     	;# 
  1834  0091                     	;# 
  1835  0093                     	;# 
  1836  0094                     	;# 
  1837  0095                     	;# 
  1838  0096                     	;# 
  1839  0097                     	;# 
  1840  0098                     	;# 
  1841  0099                     	;# 
  1842  009A                     	;# 
  1843  009B                     	;# 
  1844  009C                     	;# 
  1845  009D                     	;# 
  1846  009E                     	;# 
  1847  010C                     	;# 
  1848  010D                     	;# 
  1849  010E                     	;# 
  1850  010E                     	;# 
  1851  010F                     	;# 
  1852  0110                     	;# 
  1853  0110                     	;# 
  1854  0111                     	;# 
  1855  0112                     	;# 
  1856  0112                     	;# 
  1857  0113                     	;# 
  1858  0114                     	;# 
  1859  0114                     	;# 
  1860  0115                     	;# 
  1861  0116                     	;# 
  1862  0116                     	;# 
  1863  0117                     	;# 
  1864  0119                     	;# 
  1865  0119                     	;# 
  1866  0119                     	;# 
  1867  011A                     	;# 
  1868  011A                     	;# 
  1869  011A                     	;# 
  1870  011B                     	;# 
  1871  011B                     	;# 
  1872  011B                     	;# 
  1873  011B                     	;# 
  1874  011B                     	;# 
  1875  011C                     	;# 
  1876  011C                     	;# 
  1877  011C                     	;# 
  1878  011D                     	;# 
  1879  011D                     	;# 
  1880  011D                     	;# 
  1881  011E                     	;# 
  1882  011E                     	;# 
  1883  011E                     	;# 
  1884  011F                     	;# 
  1885  011F                     	;# 
  1886  011F                     	;# 
  1887  011F                     	;# 
  1888  011F                     	;# 
  1889  018C                     	;# 
  1890  018D                     	;# 
  1891  018E                     	;# 
  1892  018F                     	;# 
  1893  0190                     	;# 
  1894  0191                     	;# 
  1895  0192                     	;# 
  1896  0196                     	;# 
  1897  0197                     	;# 
  1898  0198                     	;# 
  1899  0199                     	;# 
  1900  019A                     	;# 
  1901  019B                     	;# 
  1902  019C                     	;# 
  1903  020C                     	;# 
  1904  020C                     	;# 
  1905  020D                     	;# 
  1906  020E                     	;# 
  1907  020F                     	;# 
  1908  020F                     	;# 
  1909  0210                     	;# 
  1910  0210                     	;# 
  1911  0211                     	;# 
  1912  0211                     	;# 
  1913  0212                     	;# 
  1914  0212                     	;# 
  1915  0213                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0216                     	;# 
  1920  0216                     	;# 
  1921  0217                     	;# 
  1922  0217                     	;# 
  1923  0218                     	;# 
  1924  0218                     	;# 
  1925  0219                     	;# 
  1926  021A                     	;# 
  1927  021B                     	;# 
  1928  021B                     	;# 
  1929  021C                     	;# 
  1930  021C                     	;# 
  1931  021D                     	;# 
  1932  021D                     	;# 
  1933  021E                     	;# 
  1934  021F                     	;# 
  1935  028C                     	;# 
  1936  028C                     	;# 
  1937  028D                     	;# 
  1938  028D                     	;# 
  1939  028E                     	;# 
  1940  028F                     	;# 
  1941  0290                     	;# 
  1942  0290                     	;# 
  1943  0291                     	;# 
  1944  0292                     	;# 
  1945  0292                     	;# 
  1946  0293                     	;# 
  1947  0293                     	;# 
  1948  0294                     	;# 
  1949  0295                     	;# 
  1950  0296                     	;# 
  1951  0296                     	;# 
  1952  0297                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  0299                     	;# 
  1957  029A                     	;# 
  1958  029B                     	;# 
  1959  029C                     	;# 
  1960  029C                     	;# 
  1961  029D                     	;# 
  1962  030C                     	;# 
  1963  030C                     	;# 
  1964  030D                     	;# 
  1965  030E                     	;# 
  1966  030F                     	;# 
  1967  0310                     	;# 
  1968  0310                     	;# 
  1969  0311                     	;# 
  1970  0312                     	;# 
  1971  0313                     	;# 
  1972  0314                     	;# 
  1973  0314                     	;# 
  1974  0315                     	;# 
  1975  0316                     	;# 
  1976  0317                     	;# 
  1977  0318                     	;# 
  1978  0318                     	;# 
  1979  0319                     	;# 
  1980  031A                     	;# 
  1981  031B                     	;# 
  1982  031C                     	;# 
  1983  031C                     	;# 
  1984  031D                     	;# 
  1985  031E                     	;# 
  1986  031F                     	;# 
  1987  038C                     	;# 
  1988  038C                     	;# 
  1989  038D                     	;# 
  1990  038E                     	;# 
  1991  0390                     	;# 
  1992  0390                     	;# 
  1993  0391                     	;# 
  1994  0392                     	;# 
  1995  040C                     	;# 
  1996  040D                     	;# 
  1997  040E                     	;# 
  1998  040F                     	;# 
  1999  0410                     	;# 
  2000  0411                     	;# 
  2001  0416                     	;# 
  2002  0416                     	;# 
  2003  0417                     	;# 
  2004  0418                     	;# 
  2005  0418                     	;# 
  2006  0419                     	;# 
  2007  041A                     	;# 
  2008  041A                     	;# 
  2009  041B                     	;# 
  2010  041C                     	;# 
  2011  041C                     	;# 
  2012  041D                     	;# 
  2013  041E                     	;# 
  2014  041F                     	;# 
  2015  048C                     	;# 
  2016  048C                     	;# 
  2017  048D                     	;# 
  2018  048E                     	;# 
  2019  048F                     	;# 
  2020  048F                     	;# 
  2021  0490                     	;# 
  2022  0491                     	;# 
  2023  0492                     	;# 
  2024  0492                     	;# 
  2025  0493                     	;# 
  2026  0494                     	;# 
  2027  0495                     	;# 
  2028  0495                     	;# 
  2029  0496                     	;# 
  2030  0497                     	;# 
  2031  0498                     	;# 
  2032  0499                     	;# 
  2033  049A                     	;# 
  2034  049B                     	;# 
  2035  049C                     	;# 
  2036  049D                     	;# 
  2037  050C                     	;# 
  2038  050C                     	;# 
  2039  050D                     	;# 
  2040  050E                     	;# 
  2041  050F                     	;# 
  2042  050F                     	;# 
  2043  0510                     	;# 
  2044  0511                     	;# 
  2045  0512                     	;# 
  2046  0512                     	;# 
  2047  0513                     	;# 
  2048  0514                     	;# 
  2049  0515                     	;# 
  2050  0515                     	;# 
  2051  0516                     	;# 
  2052  0517                     	;# 
  2053  0518                     	;# 
  2054  0519                     	;# 
  2055  051A                     	;# 
  2056  051B                     	;# 
  2057  051C                     	;# 
  2058  051D                     	;# 
  2059  058C                     	;# 
  2060  058C                     	;# 
  2061  058D                     	;# 
  2062  058E                     	;# 
  2063  058F                     	;# 
  2064  058F                     	;# 
  2065  0590                     	;# 
  2066  0591                     	;# 
  2067  0592                     	;# 
  2068  0593                     	;# 
  2069  060C                     	;# 
  2070  060D                     	;# 
  2071  060E                     	;# 
  2072  060F                     	;# 
  2073  0610                     	;# 
  2074  0611                     	;# 
  2075  0612                     	;# 
  2076  0613                     	;# 
  2077  0614                     	;# 
  2078  0616                     	;# 
  2079  0617                     	;# 
  2080  0618                     	;# 
  2081  0619                     	;# 
  2082  061A                     	;# 
  2083  061B                     	;# 
  2084  061C                     	;# 
  2085  061D                     	;# 
  2086  061E                     	;# 
  2087  068C                     	;# 
  2088  068D                     	;# 
  2089  068E                     	;# 
  2090  068F                     	;# 
  2091  0690                     	;# 
  2092  0691                     	;# 
  2093  0692                     	;# 
  2094  0693                     	;# 
  2095  0694                     	;# 
  2096  070C                     	;# 
  2097  070D                     	;# 
  2098  070E                     	;# 
  2099  070F                     	;# 
  2100  0710                     	;# 
  2101  0711                     	;# 
  2102  0712                     	;# 
  2103  0713                     	;# 
  2104  0714                     	;# 
  2105  0716                     	;# 
  2106  0717                     	;# 
  2107  0718                     	;# 
  2108  0719                     	;# 
  2109  071A                     	;# 
  2110  071B                     	;# 
  2111  071C                     	;# 
  2112  071D                     	;# 
  2113  071E                     	;# 
  2114  0796                     	;# 
  2115  0797                     	;# 
  2116  0798                     	;# 
  2117  0799                     	;# 
  2118  079A                     	;# 
  2119  079B                     	;# 
  2120  080C                     	;# 
  2121  080D                     	;# 
  2122  080E                     	;# 
  2123  080F                     	;# 
  2124  0810                     	;# 
  2125  0811                     	;# 
  2126  0812                     	;# 
  2127  0813                     	;# 
  2128  0814                     	;# 
  2129  081A                     	;# 
  2130  081B                     	;# 
  2131  081C                     	;# 
  2132  081D                     	;# 
  2133  081E                     	;# 
  2134  081F                     	;# 
  2135  088C                     	;# 
  2136  088D                     	;# 
  2137  088E                     	;# 
  2138  088F                     	;# 
  2139  0890                     	;# 
  2140  0891                     	;# 
  2141  0892                     	;# 
  2142  0893                     	;# 
  2143  0895                     	;# 
  2144  0896                     	;# 
  2145  0897                     	;# 
  2146  0898                     	;# 
  2147  0899                     	;# 
  2148  089A                     	;# 
  2149  089B                     	;# 
  2150  090C                     	;# 
  2151  090E                     	;# 
  2152  090F                     	;# 
  2153  091F                     	;# 
  2154  091F                     	;# 
  2155  098F                     	;# 
  2156  098F                     	;# 
  2157  0990                     	;# 
  2158  0991                     	;# 
  2159  0992                     	;# 
  2160  0993                     	;# 
  2161  0994                     	;# 
  2162  0995                     	;# 
  2163  0996                     	;# 
  2164  0997                     	;# 
  2165  0E0F                     	;# 
  2166  0E10                     	;# 
  2167  0E11                     	;# 
  2168  0E12                     	;# 
  2169  0E13                     	;# 
  2170  0E14                     	;# 
  2171  0E15                     	;# 
  2172  0E16                     	;# 
  2173  0E17                     	;# 
  2174  0E18                     	;# 
  2175  0E19                     	;# 
  2176  0E1A                     	;# 
  2177  0E1B                     	;# 
  2178  0E1C                     	;# 
  2179  0E1D                     	;# 
  2180  0E1E                     	;# 
  2181  0E1F                     	;# 
  2182  0E20                     	;# 
  2183  0E21                     	;# 
  2184  0E22                     	;# 
  2185  0E23                     	;# 
  2186  0E24                     	;# 
  2187  0E25                     	;# 
  2188  0E26                     	;# 
  2189  0E27                     	;# 
  2190  0E28                     	;# 
  2191  0E29                     	;# 
  2192  0E2A                     	;# 
  2193  0E2B                     	;# 
  2194  0E2C                     	;# 
  2195  0E2D                     	;# 
  2196  0E2E                     	;# 
  2197  0E2F                     	;# 
  2198  0E30                     	;# 
  2199  0E31                     	;# 
  2200  0E32                     	;# 
  2201  0E33                     	;# 
  2202  0E34                     	;# 
  2203  0E35                     	;# 
  2204  0E36                     	;# 
  2205  0E37                     	;# 
  2206  0E8F                     	;# 
  2207  0E90                     	;# 
  2208  0E91                     	;# 
  2209  0E92                     	;# 
  2210  0E93                     	;# 
  2211  0E94                     	;# 
  2212  0E95                     	;# 
  2213  0E96                     	;# 
  2214  0E97                     	;# 
  2215  0E9C                     	;# 
  2216  0E9D                     	;# 
  2217  0E9E                     	;# 
  2218  0EA1                     	;# 
  2219  0EA2                     	;# 
  2220  0EA3                     	;# 
  2221  0EA4                     	;# 
  2222  0EA5                     	;# 
  2223  0EA9                     	;# 
  2224  0EAA                     	;# 
  2225  0EAB                     	;# 
  2226  0EAC                     	;# 
  2227  0EB1                     	;# 
  2228  0EB2                     	;# 
  2229  0EB3                     	;# 
  2230  0EB8                     	;# 
  2231  0EB9                     	;# 
  2232  0EBA                     	;# 
  2233  0EBB                     	;# 
  2234  0EBC                     	;# 
  2235  0EBD                     	;# 
  2236  0EBE                     	;# 
  2237  0EC3                     	;# 
  2238  0EC5                     	;# 
  2239  0EC6                     	;# 
  2240  0EC7                     	;# 
  2241  0EC8                     	;# 
  2242  0EC9                     	;# 
  2243  0ECA                     	;# 
  2244  0ECB                     	;# 
  2245  0ECC                     	;# 
  2246  0F10                     	;# 
  2247  0F11                     	;# 
  2248  0F12                     	;# 
  2249  0F13                     	;# 
  2250  0F14                     	;# 
  2251  0F15                     	;# 
  2252  0F16                     	;# 
  2253  0F17                     	;# 
  2254  0F18                     	;# 
  2255  0F19                     	;# 
  2256  0F1A                     	;# 
  2257  0F1B                     	;# 
  2258  0F1C                     	;# 
  2259  0F1D                     	;# 
  2260  0F1E                     	;# 
  2261  0F1F                     	;# 
  2262  0F20                     	;# 
  2263  0F21                     	;# 
  2264  0F22                     	;# 
  2265  0F23                     	;# 
  2266  0F24                     	;# 
  2267  0F25                     	;# 
  2268  0F26                     	;# 
  2269  0F27                     	;# 
  2270  0F28                     	;# 
  2271  0F29                     	;# 
  2272  0F2A                     	;# 
  2273  0F2B                     	;# 
  2274  0F2C                     	;# 
  2275  0F2D                     	;# 
  2276  0F2E                     	;# 
  2277  0F2F                     	;# 
  2278  0F30                     	;# 
  2279  0F31                     	;# 
  2280  0F32                     	;# 
  2281  0F38                     	;# 
  2282  0F39                     	;# 
  2283  0F3A                     	;# 
  2284  0F3B                     	;# 
  2285  0F3C                     	;# 
  2286  0F3D                     	;# 
  2287  0F3E                     	;# 
  2288  0F3F                     	;# 
  2289  0F40                     	;# 
  2290  0F41                     	;# 
  2291  0F43                     	;# 
  2292  0F44                     	;# 
  2293  0F45                     	;# 
  2294  0F46                     	;# 
  2295  0F47                     	;# 
  2296  0F48                     	;# 
  2297  0F49                     	;# 
  2298  0F4A                     	;# 
  2299  0F4B                     	;# 
  2300  0F4C                     	;# 
  2301  0F4E                     	;# 
  2302  0F4F                     	;# 
  2303  0F50                     	;# 
  2304  0F51                     	;# 
  2305  0F52                     	;# 
  2306  0F53                     	;# 
  2307  0F54                     	;# 
  2308  0F55                     	;# 
  2309  0F56                     	;# 
  2310  0F57                     	;# 
  2311  0F59                     	;# 
  2312  0F5A                     	;# 
  2313  0F5B                     	;# 
  2314  0F5C                     	;# 
  2315  0F5D                     	;# 
  2316  0F61                     	;# 
  2317  0F62                     	;# 
  2318  0F64                     	;# 
  2319  0F65                     	;# 
  2320  0F66                     	;# 
  2321  0F67                     	;# 
  2322  0F68                     	;# 
  2323  0F69                     	;# 
  2324  0F6A                     	;# 
  2325  0F6B                     	;# 
  2326  0F6C                     	;# 
  2327  0F6D                     	;# 
  2328  0FE4                     	;# 
  2329  0FE5                     	;# 
  2330  0FE6                     	;# 
  2331  0FE7                     	;# 
  2332  0FE8                     	;# 
  2333  0FE9                     	;# 
  2334  0FEA                     	;# 
  2335  0FEB                     	;# 
  2336  0FED                     	;# 
  2337  0FEE                     	;# 
  2338  0FEF                     	;# 
  2339  0000                     	;# 
  2340  0001                     	;# 
  2341  0002                     	;# 
  2342  0003                     	;# 
  2343  0004                     	;# 
  2344  0005                     	;# 
  2345  0006                     	;# 
  2346  0007                     	;# 
  2347  0008                     	;# 
  2348  0009                     	;# 
  2349  000A                     	;# 
  2350  000B                     	;# 
  2351  000C                     	;# 
  2352  000D                     	;# 
  2353  000E                     	;# 
  2354  000F                     	;# 
  2355  0010                     	;# 
  2356  0011                     	;# 
  2357  0012                     	;# 
  2358  0013                     	;# 
  2359  0014                     	;# 
  2360  0015                     	;# 
  2361  0016                     	;# 
  2362  0017                     	;# 
  2363  0018                     	;# 
  2364  0019                     	;# 
  2365  001A                     	;# 
  2366  001C                     	;# 
  2367  001C                     	;# 
  2368  001D                     	;# 
  2369  001D                     	;# 
  2370  001E                     	;# 
  2371  001F                     	;# 
  2372  008C                     	;# 
  2373  008C                     	;# 
  2374  008D                     	;# 
  2375  008E                     	;# 
  2376  008E                     	;# 
  2377  008F                     	;# 
  2378  0090                     	;# 
  2379  0090                     	;# 
  2380  0091                     	;# 
  2381  0093                     	;# 
  2382  0094                     	;# 
  2383  0095                     	;# 
  2384  0096                     	;# 
  2385  0097                     	;# 
  2386  0098                     	;# 
  2387  0099                     	;# 
  2388  009A                     	;# 
  2389  009B                     	;# 
  2390  009C                     	;# 
  2391  009D                     	;# 
  2392  009E                     	;# 
  2393  010C                     	;# 
  2394  010D                     	;# 
  2395  010E                     	;# 
  2396  010E                     	;# 
  2397  010F                     	;# 
  2398  0110                     	;# 
  2399  0110                     	;# 
  2400  0111                     	;# 
  2401  0112                     	;# 
  2402  0112                     	;# 
  2403  0113                     	;# 
  2404  0114                     	;# 
  2405  0114                     	;# 
  2406  0115                     	;# 
  2407  0116                     	;# 
  2408  0116                     	;# 
  2409  0117                     	;# 
  2410  0119                     	;# 
  2411  0119                     	;# 
  2412  0119                     	;# 
  2413  011A                     	;# 
  2414  011A                     	;# 
  2415  011A                     	;# 
  2416  011B                     	;# 
  2417  011B                     	;# 
  2418  011B                     	;# 
  2419  011B                     	;# 
  2420  011B                     	;# 
  2421  011C                     	;# 
  2422  011C                     	;# 
  2423  011C                     	;# 
  2424  011D                     	;# 
  2425  011D                     	;# 
  2426  011D                     	;# 
  2427  011E                     	;# 
  2428  011E                     	;# 
  2429  011E                     	;# 
  2430  011F                     	;# 
  2431  011F                     	;# 
  2432  011F                     	;# 
  2433  011F                     	;# 
  2434  011F                     	;# 
  2435  018C                     	;# 
  2436  018D                     	;# 
  2437  018E                     	;# 
  2438  018F                     	;# 
  2439  0190                     	;# 
  2440  0191                     	;# 
  2441  0192                     	;# 
  2442  0196                     	;# 
  2443  0197                     	;# 
  2444  0198                     	;# 
  2445  0199                     	;# 
  2446  019A                     	;# 
  2447  019B                     	;# 
  2448  019C                     	;# 
  2449  020C                     	;# 
  2450  020C                     	;# 
  2451  020D                     	;# 
  2452  020E                     	;# 
  2453  020F                     	;# 
  2454  020F                     	;# 
  2455  0210                     	;# 
  2456  0210                     	;# 
  2457  0211                     	;# 
  2458  0211                     	;# 
  2459  0212                     	;# 
  2460  0212                     	;# 
  2461  0213                     	;# 
  2462  0214                     	;# 
  2463  0215                     	;# 
  2464  0215                     	;# 
  2465  0216                     	;# 
  2466  0216                     	;# 
  2467  0217                     	;# 
  2468  0217                     	;# 
  2469  0218                     	;# 
  2470  0218                     	;# 
  2471  0219                     	;# 
  2472  021A                     	;# 
  2473  021B                     	;# 
  2474  021B                     	;# 
  2475  021C                     	;# 
  2476  021C                     	;# 
  2477  021D                     	;# 
  2478  021D                     	;# 
  2479  021E                     	;# 
  2480  021F                     	;# 
  2481  028C                     	;# 
  2482  028C                     	;# 
  2483  028D                     	;# 
  2484  028D                     	;# 
  2485  028E                     	;# 
  2486  028F                     	;# 
  2487  0290                     	;# 
  2488  0290                     	;# 
  2489  0291                     	;# 
  2490  0292                     	;# 
  2491  0292                     	;# 
  2492  0293                     	;# 
  2493  0293                     	;# 
  2494  0294                     	;# 
  2495  0295                     	;# 
  2496  0296                     	;# 
  2497  0296                     	;# 
  2498  0297                     	;# 
  2499  0298                     	;# 
  2500  0298                     	;# 
  2501  0299                     	;# 
  2502  0299                     	;# 
  2503  029A                     	;# 
  2504  029B                     	;# 
  2505  029C                     	;# 
  2506  029C                     	;# 
  2507  029D                     	;# 
  2508  030C                     	;# 
  2509  030C                     	;# 
  2510  030D                     	;# 
  2511  030E                     	;# 
  2512  030F                     	;# 
  2513  0310                     	;# 
  2514  0310                     	;# 
  2515  0311                     	;# 
  2516  0312                     	;# 
  2517  0313                     	;# 
  2518  0314                     	;# 
  2519  0314                     	;# 
  2520  0315                     	;# 
  2521  0316                     	;# 
  2522  0317                     	;# 
  2523  0318                     	;# 
  2524  0318                     	;# 
  2525  0319                     	;# 
  2526  031A                     	;# 
  2527  031B                     	;# 
  2528  031C                     	;# 
  2529  031C                     	;# 
  2530  031D                     	;# 
  2531  031E                     	;# 
  2532  031F                     	;# 
  2533  038C                     	;# 
  2534  038C                     	;# 
  2535  038D                     	;# 
  2536  038E                     	;# 
  2537  0390                     	;# 
  2538  0390                     	;# 
  2539  0391                     	;# 
  2540  0392                     	;# 
  2541  040C                     	;# 
  2542  040D                     	;# 
  2543  040E                     	;# 
  2544  040F                     	;# 
  2545  0410                     	;# 
  2546  0411                     	;# 
  2547  0416                     	;# 
  2548  0416                     	;# 
  2549  0417                     	;# 
  2550  0418                     	;# 
  2551  0418                     	;# 
  2552  0419                     	;# 
  2553  041A                     	;# 
  2554  041A                     	;# 
  2555  041B                     	;# 
  2556  041C                     	;# 
  2557  041C                     	;# 
  2558  041D                     	;# 
  2559  041E                     	;# 
  2560  041F                     	;# 
  2561  048C                     	;# 
  2562  048C                     	;# 
  2563  048D                     	;# 
  2564  048E                     	;# 
  2565  048F                     	;# 
  2566  048F                     	;# 
  2567  0490                     	;# 
  2568  0491                     	;# 
  2569  0492                     	;# 
  2570  0492                     	;# 
  2571  0493                     	;# 
  2572  0494                     	;# 
  2573  0495                     	;# 
  2574  0495                     	;# 
  2575  0496                     	;# 
  2576  0497                     	;# 
  2577  0498                     	;# 
  2578  0499                     	;# 
  2579  049A                     	;# 
  2580  049B                     	;# 
  2581  049C                     	;# 
  2582  049D                     	;# 
  2583  050C                     	;# 
  2584  050C                     	;# 
  2585  050D                     	;# 
  2586  050E                     	;# 
  2587  050F                     	;# 
  2588  050F                     	;# 
  2589  0510                     	;# 
  2590  0511                     	;# 
  2591  0512                     	;# 
  2592  0512                     	;# 
  2593  0513                     	;# 
  2594  0514                     	;# 
  2595  0515                     	;# 
  2596  0515                     	;# 
  2597  0516                     	;# 
  2598  0517                     	;# 
  2599  0518                     	;# 
  2600  0519                     	;# 
  2601  051A                     	;# 
  2602  051B                     	;# 
  2603  051C                     	;# 
  2604  051D                     	;# 
  2605  058C                     	;# 
  2606  058C                     	;# 
  2607  058D                     	;# 
  2608  058E                     	;# 
  2609  058F                     	;# 
  2610  058F                     	;# 
  2611  0590                     	;# 
  2612  0591                     	;# 
  2613  0592                     	;# 
  2614  0593                     	;# 
  2615  060C                     	;# 
  2616  060D                     	;# 
  2617  060E                     	;# 
  2618  060F                     	;# 
  2619  0610                     	;# 
  2620  0611                     	;# 
  2621  0612                     	;# 
  2622  0613                     	;# 
  2623  0614                     	;# 
  2624  0616                     	;# 
  2625  0617                     	;# 
  2626  0618                     	;# 
  2627  0619                     	;# 
  2628  061A                     	;# 
  2629  061B                     	;# 
  2630  061C                     	;# 
  2631  061D                     	;# 
  2632  061E                     	;# 
  2633  068C                     	;# 
  2634  068D                     	;# 
  2635  068E                     	;# 
  2636  068F                     	;# 
  2637  0690                     	;# 
  2638  0691                     	;# 
  2639  0692                     	;# 
  2640  0693                     	;# 
  2641  0694                     	;# 
  2642  070C                     	;# 
  2643  070D                     	;# 
  2644  070E                     	;# 
  2645  070F                     	;# 
  2646  0710                     	;# 
  2647  0711                     	;# 
  2648  0712                     	;# 
  2649  0713                     	;# 
  2650  0714                     	;# 
  2651  0716                     	;# 
  2652  0717                     	;# 
  2653  0718                     	;# 
  2654  0719                     	;# 
  2655  071A                     	;# 
  2656  071B                     	;# 
  2657  071C                     	;# 
  2658  071D                     	;# 
  2659  071E                     	;# 
  2660  0796                     	;# 
  2661  0797                     	;# 
  2662  0798                     	;# 
  2663  0799                     	;# 
  2664  079A                     	;# 
  2665  079B                     	;# 
  2666  080C                     	;# 
  2667  080D                     	;# 
  2668  080E                     	;# 
  2669  080F                     	;# 
  2670  0810                     	;# 
  2671  0811                     	;# 
  2672  0812                     	;# 
  2673  0813                     	;# 
  2674  0814                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081D                     	;# 
  2679  081E                     	;# 
  2680  081F                     	;# 
  2681  088C                     	;# 
  2682  088D                     	;# 
  2683  088E                     	;# 
  2684  088F                     	;# 
  2685  0890                     	;# 
  2686  0891                     	;# 
  2687  0892                     	;# 
  2688  0893                     	;# 
  2689  0895                     	;# 
  2690  0896                     	;# 
  2691  0897                     	;# 
  2692  0898                     	;# 
  2693  0899                     	;# 
  2694  089A                     	;# 
  2695  089B                     	;# 
  2696  090C                     	;# 
  2697  090E                     	;# 
  2698  090F                     	;# 
  2699  091F                     	;# 
  2700  091F                     	;# 
  2701  098F                     	;# 
  2702  098F                     	;# 
  2703  0990                     	;# 
  2704  0991                     	;# 
  2705  0992                     	;# 
  2706  0993                     	;# 
  2707  0994                     	;# 
  2708  0995                     	;# 
  2709  0996                     	;# 
  2710  0997                     	;# 
  2711  0E0F                     	;# 
  2712  0E10                     	;# 
  2713  0E11                     	;# 
  2714  0E12                     	;# 
  2715  0E13                     	;# 
  2716  0E14                     	;# 
  2717  0E15                     	;# 
  2718  0E16                     	;# 
  2719  0E17                     	;# 
  2720  0E18                     	;# 
  2721  0E19                     	;# 
  2722  0E1A                     	;# 
  2723  0E1B                     	;# 
  2724  0E1C                     	;# 
  2725  0E1D                     	;# 
  2726  0E1E                     	;# 
  2727  0E1F                     	;# 
  2728  0E20                     	;# 
  2729  0E21                     	;# 
  2730  0E22                     	;# 
  2731  0E23                     	;# 
  2732  0E24                     	;# 
  2733  0E25                     	;# 
  2734  0E26                     	;# 
  2735  0E27                     	;# 
  2736  0E28                     	;# 
  2737  0E29                     	;# 
  2738  0E2A                     	;# 
  2739  0E2B                     	;# 
  2740  0E2C                     	;# 
  2741  0E2D                     	;# 
  2742  0E2E                     	;# 
  2743  0E2F                     	;# 
  2744  0E30                     	;# 
  2745  0E31                     	;# 
  2746  0E32                     	;# 
  2747  0E33                     	;# 
  2748  0E34                     	;# 
  2749  0E35                     	;# 
  2750  0E36                     	;# 
  2751  0E37                     	;# 
  2752  0E8F                     	;# 
  2753  0E90                     	;# 
  2754  0E91                     	;# 
  2755  0E92                     	;# 
  2756  0E93                     	;# 
  2757  0E94                     	;# 
  2758  0E95                     	;# 
  2759  0E96                     	;# 
  2760  0E97                     	;# 
  2761  0E9C                     	;# 
  2762  0E9D                     	;# 
  2763  0E9E                     	;# 
  2764  0EA1                     	;# 
  2765  0EA2                     	;# 
  2766  0EA3                     	;# 
  2767  0EA4                     	;# 
  2768  0EA5                     	;# 
  2769  0EA9                     	;# 
  2770  0EAA                     	;# 
  2771  0EAB                     	;# 
  2772  0EAC                     	;# 
  2773  0EB1                     	;# 
  2774  0EB2                     	;# 
  2775  0EB3                     	;# 
  2776  0EB8                     	;# 
  2777  0EB9                     	;# 
  2778  0EBA                     	;# 
  2779  0EBB                     	;# 
  2780  0EBC                     	;# 
  2781  0EBD                     	;# 
  2782  0EBE                     	;# 
  2783  0EC3                     	;# 
  2784  0EC5                     	;# 
  2785  0EC6                     	;# 
  2786  0EC7                     	;# 
  2787  0EC8                     	;# 
  2788  0EC9                     	;# 
  2789  0ECA                     	;# 
  2790  0ECB                     	;# 
  2791  0ECC                     	;# 
  2792  0F10                     	;# 
  2793  0F11                     	;# 
  2794  0F12                     	;# 
  2795  0F13                     	;# 
  2796  0F14                     	;# 
  2797  0F15                     	;# 
  2798  0F16                     	;# 
  2799  0F17                     	;# 
  2800  0F18                     	;# 
  2801  0F19                     	;# 
  2802  0F1A                     	;# 
  2803  0F1B                     	;# 
  2804  0F1C                     	;# 
  2805  0F1D                     	;# 
  2806  0F1E                     	;# 
  2807  0F1F                     	;# 
  2808  0F20                     	;# 
  2809  0F21                     	;# 
  2810  0F22                     	;# 
  2811  0F23                     	;# 
  2812  0F24                     	;# 
  2813  0F25                     	;# 
  2814  0F26                     	;# 
  2815  0F27                     	;# 
  2816  0F28                     	;# 
  2817  0F29                     	;# 
  2818  0F2A                     	;# 
  2819  0F2B                     	;# 
  2820  0F2C                     	;# 
  2821  0F2D                     	;# 
  2822  0F2E                     	;# 
  2823  0F2F                     	;# 
  2824  0F30                     	;# 
  2825  0F31                     	;# 
  2826  0F32                     	;# 
  2827  0F38                     	;# 
  2828  0F39                     	;# 
  2829  0F3A                     	;# 
  2830  0F3B                     	;# 
  2831  0F3C                     	;# 
  2832  0F3D                     	;# 
  2833  0F3E                     	;# 
  2834  0F3F                     	;# 
  2835  0F40                     	;# 
  2836  0F41                     	;# 
  2837  0F43                     	;# 
  2838  0F44                     	;# 
  2839  0F45                     	;# 
  2840  0F46                     	;# 
  2841  0F47                     	;# 
  2842  0F48                     	;# 
  2843  0F49                     	;# 
  2844  0F4A                     	;# 
  2845  0F4B                     	;# 
  2846  0F4C                     	;# 
  2847  0F4E                     	;# 
  2848  0F4F                     	;# 
  2849  0F50                     	;# 
  2850  0F51                     	;# 
  2851  0F52                     	;# 
  2852  0F53                     	;# 
  2853  0F54                     	;# 
  2854  0F55                     	;# 
  2855  0F56                     	;# 
  2856  0F57                     	;# 
  2857  0F59                     	;# 
  2858  0F5A                     	;# 
  2859  0F5B                     	;# 
  2860  0F5C                     	;# 
  2861  0F5D                     	;# 
  2862  0F61                     	;# 
  2863  0F62                     	;# 
  2864  0F64                     	;# 
  2865  0F65                     	;# 
  2866  0F66                     	;# 
  2867  0F67                     	;# 
  2868  0F68                     	;# 
  2869  0F69                     	;# 
  2870  0F6A                     	;# 
  2871  0F6B                     	;# 
  2872  0F6C                     	;# 
  2873  0F6D                     	;# 
  2874  0FE4                     	;# 
  2875  0FE5                     	;# 
  2876  0FE6                     	;# 
  2877  0FE7                     	;# 
  2878  0FE8                     	;# 
  2879  0FE9                     	;# 
  2880  0FEA                     	;# 
  2881  0FEB                     	;# 
  2882  0FED                     	;# 
  2883  0FEE                     	;# 
  2884  0FEF                     	;# 
  2885  0000                     	;# 
  2886  0001                     	;# 
  2887  0002                     	;# 
  2888  0003                     	;# 
  2889  0004                     	;# 
  2890  0005                     	;# 
  2891  0006                     	;# 
  2892  0007                     	;# 
  2893  0008                     	;# 
  2894  0009                     	;# 
  2895  000A                     	;# 
  2896  000B                     	;# 
  2897  000C                     	;# 
  2898  000D                     	;# 
  2899  000E                     	;# 
  2900  000F                     	;# 
  2901  0010                     	;# 
  2902  0011                     	;# 
  2903  0012                     	;# 
  2904  0013                     	;# 
  2905  0014                     	;# 
  2906  0015                     	;# 
  2907  0016                     	;# 
  2908  0017                     	;# 
  2909  0018                     	;# 
  2910  0019                     	;# 
  2911  001A                     	;# 
  2912  001C                     	;# 
  2913  001C                     	;# 
  2914  001D                     	;# 
  2915  001D                     	;# 
  2916  001E                     	;# 
  2917  001F                     	;# 
  2918  008C                     	;# 
  2919  008C                     	;# 
  2920  008D                     	;# 
  2921  008E                     	;# 
  2922  008E                     	;# 
  2923  008F                     	;# 
  2924  0090                     	;# 
  2925  0090                     	;# 
  2926  0091                     	;# 
  2927  0093                     	;# 
  2928  0094                     	;# 
  2929  0095                     	;# 
  2930  0096                     	;# 
  2931  0097                     	;# 
  2932  0098                     	;# 
  2933  0099                     	;# 
  2934  009A                     	;# 
  2935  009B                     	;# 
  2936  009C                     	;# 
  2937  009D                     	;# 
  2938  009E                     	;# 
  2939  010C                     	;# 
  2940  010D                     	;# 
  2941  010E                     	;# 
  2942  010E                     	;# 
  2943  010F                     	;# 
  2944  0110                     	;# 
  2945  0110                     	;# 
  2946  0111                     	;# 
  2947  0112                     	;# 
  2948  0112                     	;# 
  2949  0113                     	;# 
  2950  0114                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0116                     	;# 
  2955  0117                     	;# 
  2956  0119                     	;# 
  2957  0119                     	;# 
  2958  0119                     	;# 
  2959  011A                     	;# 
  2960  011A                     	;# 
  2961  011A                     	;# 
  2962  011B                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011B                     	;# 
  2967  011C                     	;# 
  2968  011C                     	;# 
  2969  011C                     	;# 
  2970  011D                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011E                     	;# 
  2974  011E                     	;# 
  2975  011E                     	;# 
  2976  011F                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  011F                     	;# 
  2981  018C                     	;# 
  2982  018D                     	;# 
  2983  018E                     	;# 
  2984  018F                     	;# 
  2985  0190                     	;# 
  2986  0191                     	;# 
  2987  0192                     	;# 
  2988  0196                     	;# 
  2989  0197                     	;# 
  2990  0198                     	;# 
  2991  0199                     	;# 
  2992  019A                     	;# 
  2993  019B                     	;# 
  2994  019C                     	;# 
  2995  020C                     	;# 
  2996  020C                     	;# 
  2997  020D                     	;# 
  2998  020E                     	;# 
  2999  020F                     	;# 
  3000  020F                     	;# 
  3001  0210                     	;# 
  3002  0210                     	;# 
  3003  0211                     	;# 
  3004  0211                     	;# 
  3005  0212                     	;# 
  3006  0212                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0215                     	;# 
  3010  0215                     	;# 
  3011  0216                     	;# 
  3012  0216                     	;# 
  3013  0217                     	;# 
  3014  0217                     	;# 
  3015  0218                     	;# 
  3016  0218                     	;# 
  3017  0219                     	;# 
  3018  021A                     	;# 
  3019  021B                     	;# 
  3020  021B                     	;# 
  3021  021C                     	;# 
  3022  021C                     	;# 
  3023  021D                     	;# 
  3024  021D                     	;# 
  3025  021E                     	;# 
  3026  021F                     	;# 
  3027  028C                     	;# 
  3028  028C                     	;# 
  3029  028D                     	;# 
  3030  028D                     	;# 
  3031  028E                     	;# 
  3032  028F                     	;# 
  3033  0290                     	;# 
  3034  0290                     	;# 
  3035  0291                     	;# 
  3036  0292                     	;# 
  3037  0292                     	;# 
  3038  0293                     	;# 
  3039  0293                     	;# 
  3040  0294                     	;# 
  3041  0295                     	;# 
  3042  0296                     	;# 
  3043  0296                     	;# 
  3044  0297                     	;# 
  3045  0298                     	;# 
  3046  0298                     	;# 
  3047  0299                     	;# 
  3048  0299                     	;# 
  3049  029A                     	;# 
  3050  029B                     	;# 
  3051  029C                     	;# 
  3052  029C                     	;# 
  3053  029D                     	;# 
  3054  030C                     	;# 
  3055  030C                     	;# 
  3056  030D                     	;# 
  3057  030E                     	;# 
  3058  030F                     	;# 
  3059  0310                     	;# 
  3060  0310                     	;# 
  3061  0311                     	;# 
  3062  0312                     	;# 
  3063  0313                     	;# 
  3064  0314                     	;# 
  3065  0314                     	;# 
  3066  0315                     	;# 
  3067  0316                     	;# 
  3068  0317                     	;# 
  3069  0318                     	;# 
  3070  0318                     	;# 
  3071  0319                     	;# 
  3072  031A                     	;# 
  3073  031B                     	;# 
  3074  031C                     	;# 
  3075  031C                     	;# 
  3076  031D                     	;# 
  3077  031E                     	;# 
  3078  031F                     	;# 
  3079  038C                     	;# 
  3080  038C                     	;# 
  3081  038D                     	;# 
  3082  038E                     	;# 
  3083  0390                     	;# 
  3084  0390                     	;# 
  3085  0391                     	;# 
  3086  0392                     	;# 
  3087  040C                     	;# 
  3088  040D                     	;# 
  3089  040E                     	;# 
  3090  040F                     	;# 
  3091  0410                     	;# 
  3092  0411                     	;# 
  3093  0416                     	;# 
  3094  0416                     	;# 
  3095  0417                     	;# 
  3096  0418                     	;# 
  3097  0418                     	;# 
  3098  0419                     	;# 
  3099  041A                     	;# 
  3100  041A                     	;# 
  3101  041B                     	;# 
  3102  041C                     	;# 
  3103  041C                     	;# 
  3104  041D                     	;# 
  3105  041E                     	;# 
  3106  041F                     	;# 
  3107  048C                     	;# 
  3108  048C                     	;# 
  3109  048D                     	;# 
  3110  048E                     	;# 
  3111  048F                     	;# 
  3112  048F                     	;# 
  3113  0490                     	;# 
  3114  0491                     	;# 
  3115  0492                     	;# 
  3116  0492                     	;# 
  3117  0493                     	;# 
  3118  0494                     	;# 
  3119  0495                     	;# 
  3120  0495                     	;# 
  3121  0496                     	;# 
  3122  0497                     	;# 
  3123  0498                     	;# 
  3124  0499                     	;# 
  3125  049A                     	;# 
  3126  049B                     	;# 
  3127  049C                     	;# 
  3128  049D                     	;# 
  3129  050C                     	;# 
  3130  050C                     	;# 
  3131  050D                     	;# 
  3132  050E                     	;# 
  3133  050F                     	;# 
  3134  050F                     	;# 
  3135  0510                     	;# 
  3136  0511                     	;# 
  3137  0512                     	;# 
  3138  0512                     	;# 
  3139  0513                     	;# 
  3140  0514                     	;# 
  3141  0515                     	;# 
  3142  0515                     	;# 
  3143  0516                     	;# 
  3144  0517                     	;# 
  3145  0518                     	;# 
  3146  0519                     	;# 
  3147  051A                     	;# 
  3148  051B                     	;# 
  3149  051C                     	;# 
  3150  051D                     	;# 
  3151  058C                     	;# 
  3152  058C                     	;# 
  3153  058D                     	;# 
  3154  058E                     	;# 
  3155  058F                     	;# 
  3156  058F                     	;# 
  3157  0590                     	;# 
  3158  0591                     	;# 
  3159  0592                     	;# 
  3160  0593                     	;# 
  3161  060C                     	;# 
  3162  060D                     	;# 
  3163  060E                     	;# 
  3164  060F                     	;# 
  3165  0610                     	;# 
  3166  0611                     	;# 
  3167  0612                     	;# 
  3168  0613                     	;# 
  3169  0614                     	;# 
  3170  0616                     	;# 
  3171  0617                     	;# 
  3172  0618                     	;# 
  3173  0619                     	;# 
  3174  061A                     	;# 
  3175  061B                     	;# 
  3176  061C                     	;# 
  3177  061D                     	;# 
  3178  061E                     	;# 
  3179  068C                     	;# 
  3180  068D                     	;# 
  3181  068E                     	;# 
  3182  068F                     	;# 
  3183  0690                     	;# 
  3184  0691                     	;# 
  3185  0692                     	;# 
  3186  0693                     	;# 
  3187  0694                     	;# 
  3188  070C                     	;# 
  3189  070D                     	;# 
  3190  070E                     	;# 
  3191  070F                     	;# 
  3192  0710                     	;# 
  3193  0711                     	;# 
  3194  0712                     	;# 
  3195  0713                     	;# 
  3196  0714                     	;# 
  3197  0716                     	;# 
  3198  0717                     	;# 
  3199  0718                     	;# 
  3200  0719                     	;# 
  3201  071A                     	;# 
  3202  071B                     	;# 
  3203  071C                     	;# 
  3204  071D                     	;# 
  3205  071E                     	;# 
  3206  0796                     	;# 
  3207  0797                     	;# 
  3208  0798                     	;# 
  3209  0799                     	;# 
  3210  079A                     	;# 
  3211  079B                     	;# 
  3212  080C                     	;# 
  3213  080D                     	;# 
  3214  080E                     	;# 
  3215  080F                     	;# 
  3216  0810                     	;# 
  3217  0811                     	;# 
  3218  0812                     	;# 
  3219  0813                     	;# 
  3220  0814                     	;# 
  3221  081A                     	;# 
  3222  081B                     	;# 
  3223  081C                     	;# 
  3224  081D                     	;# 
  3225  081E                     	;# 
  3226  081F                     	;# 
  3227  088C                     	;# 
  3228  088D                     	;# 
  3229  088E                     	;# 
  3230  088F                     	;# 
  3231  0890                     	;# 
  3232  0891                     	;# 
  3233  0892                     	;# 
  3234  0893                     	;# 
  3235  0895                     	;# 
  3236  0896                     	;# 
  3237  0897                     	;# 
  3238  0898                     	;# 
  3239  0899                     	;# 
  3240  089A                     	;# 
  3241  089B                     	;# 
  3242  090C                     	;# 
  3243  090E                     	;# 
  3244  090F                     	;# 
  3245  091F                     	;# 
  3246  091F                     	;# 
  3247  098F                     	;# 
  3248  098F                     	;# 
  3249  0990                     	;# 
  3250  0991                     	;# 
  3251  0992                     	;# 
  3252  0993                     	;# 
  3253  0994                     	;# 
  3254  0995                     	;# 
  3255  0996                     	;# 
  3256  0997                     	;# 
  3257  0E0F                     	;# 
  3258  0E10                     	;# 
  3259  0E11                     	;# 
  3260  0E12                     	;# 
  3261  0E13                     	;# 
  3262  0E14                     	;# 
  3263  0E15                     	;# 
  3264  0E16                     	;# 
  3265  0E17                     	;# 
  3266  0E18                     	;# 
  3267  0E19                     	;# 
  3268  0E1A                     	;# 
  3269  0E1B                     	;# 
  3270  0E1C                     	;# 
  3271  0E1D                     	;# 
  3272  0E1E                     	;# 
  3273  0E1F                     	;# 
  3274  0E20                     	;# 
  3275  0E21                     	;# 
  3276  0E22                     	;# 
  3277  0E23                     	;# 
  3278  0E24                     	;# 
  3279  0E25                     	;# 
  3280  0E26                     	;# 
  3281  0E27                     	;# 
  3282  0E28                     	;# 
  3283  0E29                     	;# 
  3284  0E2A                     	;# 
  3285  0E2B                     	;# 
  3286  0E2C                     	;# 
  3287  0E2D                     	;# 
  3288  0E2E                     	;# 
  3289  0E2F                     	;# 
  3290  0E30                     	;# 
  3291  0E31                     	;# 
  3292  0E32                     	;# 
  3293  0E33                     	;# 
  3294  0E34                     	;# 
  3295  0E35                     	;# 
  3296  0E36                     	;# 
  3297  0E37                     	;# 
  3298  0E8F                     	;# 
  3299  0E90                     	;# 
  3300  0E91                     	;# 
  3301  0E92                     	;# 
  3302  0E93                     	;# 
  3303  0E94                     	;# 
  3304  0E95                     	;# 
  3305  0E96                     	;# 
  3306  0E97                     	;# 
  3307  0E9C                     	;# 
  3308  0E9D                     	;# 
  3309  0E9E                     	;# 
  3310  0EA1                     	;# 
  3311  0EA2                     	;# 
  3312  0EA3                     	;# 
  3313  0EA4                     	;# 
  3314  0EA5                     	;# 
  3315  0EA9                     	;# 
  3316  0EAA                     	;# 
  3317  0EAB                     	;# 
  3318  0EAC                     	;# 
  3319  0EB1                     	;# 
  3320  0EB2                     	;# 
  3321  0EB3                     	;# 
  3322  0EB8                     	;# 
  3323  0EB9                     	;# 
  3324  0EBA                     	;# 
  3325  0EBB                     	;# 
  3326  0EBC                     	;# 
  3327  0EBD                     	;# 
  3328  0EBE                     	;# 
  3329  0EC3                     	;# 
  3330  0EC5                     	;# 
  3331  0EC6                     	;# 
  3332  0EC7                     	;# 
  3333  0EC8                     	;# 
  3334  0EC9                     	;# 
  3335  0ECA                     	;# 
  3336  0ECB                     	;# 
  3337  0ECC                     	;# 
  3338  0F10                     	;# 
  3339  0F11                     	;# 
  3340  0F12                     	;# 
  3341  0F13                     	;# 
  3342  0F14                     	;# 
  3343  0F15                     	;# 
  3344  0F16                     	;# 
  3345  0F17                     	;# 
  3346  0F18                     	;# 
  3347  0F19                     	;# 
  3348  0F1A                     	;# 
  3349  0F1B                     	;# 
  3350  0F1C                     	;# 
  3351  0F1D                     	;# 
  3352  0F1E                     	;# 
  3353  0F1F                     	;# 
  3354  0F20                     	;# 
  3355  0F21                     	;# 
  3356  0F22                     	;# 
  3357  0F23                     	;# 
  3358  0F24                     	;# 
  3359  0F25                     	;# 
  3360  0F26                     	;# 
  3361  0F27                     	;# 
  3362  0F28                     	;# 
  3363  0F29                     	;# 
  3364  0F2A                     	;# 
  3365  0F2B                     	;# 
  3366  0F2C                     	;# 
  3367  0F2D                     	;# 
  3368  0F2E                     	;# 
  3369  0F2F                     	;# 
  3370  0F30                     	;# 
  3371  0F31                     	;# 
  3372  0F32                     	;# 
  3373  0F38                     	;# 
  3374  0F39                     	;# 
  3375  0F3A                     	;# 
  3376  0F3B                     	;# 
  3377  0F3C                     	;# 
  3378  0F3D                     	;# 
  3379  0F3E                     	;# 
  3380  0F3F                     	;# 
  3381  0F40                     	;# 
  3382  0F41                     	;# 
  3383  0F43                     	;# 
  3384  0F44                     	;# 
  3385  0F45                     	;# 
  3386  0F46                     	;# 
  3387  0F47                     	;# 
  3388  0F48                     	;# 
  3389  0F49                     	;# 
  3390  0F4A                     	;# 
  3391  0F4B                     	;# 
  3392  0F4C                     	;# 
  3393  0F4E                     	;# 
  3394  0F4F                     	;# 
  3395  0F50                     	;# 
  3396  0F51                     	;# 
  3397  0F52                     	;# 
  3398  0F53                     	;# 
  3399  0F54                     	;# 
  3400  0F55                     	;# 
  3401  0F56                     	;# 
  3402  0F57                     	;# 
  3403  0F59                     	;# 
  3404  0F5A                     	;# 
  3405  0F5B                     	;# 
  3406  0F5C                     	;# 
  3407  0F5D                     	;# 
  3408  0F61                     	;# 
  3409  0F62                     	;# 
  3410  0F64                     	;# 
  3411  0F65                     	;# 
  3412  0F66                     	;# 
  3413  0F67                     	;# 
  3414  0F68                     	;# 
  3415  0F69                     	;# 
  3416  0F6A                     	;# 
  3417  0F6B                     	;# 
  3418  0F6C                     	;# 
  3419  0F6D                     	;# 
  3420  0FE4                     	;# 
  3421  0FE5                     	;# 
  3422  0FE6                     	;# 
  3423  0FE7                     	;# 
  3424  0FE8                     	;# 
  3425  0FE9                     	;# 
  3426  0FEA                     	;# 
  3427  0FEB                     	;# 
  3428  0FED                     	;# 
  3429  0FEE                     	;# 
  3430  0FEF                     	;# 
  3431  0000                     	;# 
  3432  0001                     	;# 
  3433  0002                     	;# 
  3434  0003                     	;# 
  3435  0004                     	;# 
  3436  0005                     	;# 
  3437  0006                     	;# 
  3438  0007                     	;# 
  3439  0008                     	;# 
  3440  0009                     	;# 
  3441  000A                     	;# 
  3442  000B                     	;# 
  3443  000C                     	;# 
  3444  000D                     	;# 
  3445  000E                     	;# 
  3446  000F                     	;# 
  3447  0010                     	;# 
  3448  0011                     	;# 
  3449  0012                     	;# 
  3450  0013                     	;# 
  3451  0014                     	;# 
  3452  0015                     	;# 
  3453  0016                     	;# 
  3454  0017                     	;# 
  3455  0018                     	;# 
  3456  0019                     	;# 
  3457  001A                     	;# 
  3458  001C                     	;# 
  3459  001C                     	;# 
  3460  001D                     	;# 
  3461  001D                     	;# 
  3462  001E                     	;# 
  3463  001F                     	;# 
  3464  008C                     	;# 
  3465  008C                     	;# 
  3466  008D                     	;# 
  3467  008E                     	;# 
  3468  008E                     	;# 
  3469  008F                     	;# 
  3470  0090                     	;# 
  3471  0090                     	;# 
  3472  0091                     	;# 
  3473  0093                     	;# 
  3474  0094                     	;# 
  3475  0095                     	;# 
  3476  0096                     	;# 
  3477  0097                     	;# 
  3478  0098                     	;# 
  3479  0099                     	;# 
  3480  009A                     	;# 
  3481  009B                     	;# 
  3482  009C                     	;# 
  3483  009D                     	;# 
  3484  009E                     	;# 
  3485  010C                     	;# 
  3486  010D                     	;# 
  3487  010E                     	;# 
  3488  010E                     	;# 
  3489  010F                     	;# 
  3490  0110                     	;# 
  3491  0110                     	;# 
  3492  0111                     	;# 
  3493  0112                     	;# 
  3494  0112                     	;# 
  3495  0113                     	;# 
  3496  0114                     	;# 
  3497  0114                     	;# 
  3498  0115                     	;# 
  3499  0116                     	;# 
  3500  0116                     	;# 
  3501  0117                     	;# 
  3502  0119                     	;# 
  3503  0119                     	;# 
  3504  0119                     	;# 
  3505  011A                     	;# 
  3506  011A                     	;# 
  3507  011A                     	;# 
  3508  011B                     	;# 
  3509  011B                     	;# 
  3510  011B                     	;# 
  3511  011B                     	;# 
  3512  011B                     	;# 
  3513  011C                     	;# 
  3514  011C                     	;# 
  3515  011C                     	;# 
  3516  011D                     	;# 
  3517  011D                     	;# 
  3518  011D                     	;# 
  3519  011E                     	;# 
  3520  011E                     	;# 
  3521  011E                     	;# 
  3522  011F                     	;# 
  3523  011F                     	;# 
  3524  011F                     	;# 
  3525  011F                     	;# 
  3526  011F                     	;# 
  3527  018C                     	;# 
  3528  018D                     	;# 
  3529  018E                     	;# 
  3530  018F                     	;# 
  3531  0190                     	;# 
  3532  0191                     	;# 
  3533  0192                     	;# 
  3534  0196                     	;# 
  3535  0197                     	;# 
  3536  0198                     	;# 
  3537  0199                     	;# 
  3538  019A                     	;# 
  3539  019B                     	;# 
  3540  019C                     	;# 
  3541  020C                     	;# 
  3542  020C                     	;# 
  3543  020D                     	;# 
  3544  020E                     	;# 
  3545  020F                     	;# 
  3546  020F                     	;# 
  3547  0210                     	;# 
  3548  0210                     	;# 
  3549  0211                     	;# 
  3550  0211                     	;# 
  3551  0212                     	;# 
  3552  0212                     	;# 
  3553  0213                     	;# 
  3554  0214                     	;# 
  3555  0215                     	;# 
  3556  0215                     	;# 
  3557  0216                     	;# 
  3558  0216                     	;# 
  3559  0217                     	;# 
  3560  0217                     	;# 
  3561  0218                     	;# 
  3562  0218                     	;# 
  3563  0219                     	;# 
  3564  021A                     	;# 
  3565  021B                     	;# 
  3566  021B                     	;# 
  3567  021C                     	;# 
  3568  021C                     	;# 
  3569  021D                     	;# 
  3570  021D                     	;# 
  3571  021E                     	;# 
  3572  021F                     	;# 
  3573  028C                     	;# 
  3574  028C                     	;# 
  3575  028D                     	;# 
  3576  028D                     	;# 
  3577  028E                     	;# 
  3578  028F                     	;# 
  3579  0290                     	;# 
  3580  0290                     	;# 
  3581  0291                     	;# 
  3582  0292                     	;# 
  3583  0292                     	;# 
  3584  0293                     	;# 
  3585  0293                     	;# 
  3586  0294                     	;# 
  3587  0295                     	;# 
  3588  0296                     	;# 
  3589  0296                     	;# 
  3590  0297                     	;# 
  3591  0298                     	;# 
  3592  0298                     	;# 
  3593  0299                     	;# 
  3594  0299                     	;# 
  3595  029A                     	;# 
  3596  029B                     	;# 
  3597  029C                     	;# 
  3598  029C                     	;# 
  3599  029D                     	;# 
  3600  030C                     	;# 
  3601  030C                     	;# 
  3602  030D                     	;# 
  3603  030E                     	;# 
  3604  030F                     	;# 
  3605  0310                     	;# 
  3606  0310                     	;# 
  3607  0311                     	;# 
  3608  0312                     	;# 
  3609  0313                     	;# 
  3610  0314                     	;# 
  3611  0314                     	;# 
  3612  0315                     	;# 
  3613  0316                     	;# 
  3614  0317                     	;# 
  3615  0318                     	;# 
  3616  0318                     	;# 
  3617  0319                     	;# 
  3618  031A                     	;# 
  3619  031B                     	;# 
  3620  031C                     	;# 
  3621  031C                     	;# 
  3622  031D                     	;# 
  3623  031E                     	;# 
  3624  031F                     	;# 
  3625  038C                     	;# 
  3626  038C                     	;# 
  3627  038D                     	;# 
  3628  038E                     	;# 
  3629  0390                     	;# 
  3630  0390                     	;# 
  3631  0391                     	;# 
  3632  0392                     	;# 
  3633  040C                     	;# 
  3634  040D                     	;# 
  3635  040E                     	;# 
  3636  040F                     	;# 
  3637  0410                     	;# 
  3638  0411                     	;# 
  3639  0416                     	;# 
  3640  0416                     	;# 
  3641  0417                     	;# 
  3642  0418                     	;# 
  3643  0418                     	;# 
  3644  0419                     	;# 
  3645  041A                     	;# 
  3646  041A                     	;# 
  3647  041B                     	;# 
  3648  041C                     	;# 
  3649  041C                     	;# 
  3650  041D                     	;# 
  3651  041E                     	;# 
  3652  041F                     	;# 
  3653  048C                     	;# 
  3654  048C                     	;# 
  3655  048D                     	;# 
  3656  048E                     	;# 
  3657  048F                     	;# 
  3658  048F                     	;# 
  3659  0490                     	;# 
  3660  0491                     	;# 
  3661  0492                     	;# 
  3662  0492                     	;# 
  3663  0493                     	;# 
  3664  0494                     	;# 
  3665  0495                     	;# 
  3666  0495                     	;# 
  3667  0496                     	;# 
  3668  0497                     	;# 
  3669  0498                     	;# 
  3670  0499                     	;# 
  3671  049A                     	;# 
  3672  049B                     	;# 
  3673  049C                     	;# 
  3674  049D                     	;# 
  3675  050C                     	;# 
  3676  050C                     	;# 
  3677  050D                     	;# 
  3678  050E                     	;# 
  3679  050F                     	;# 
  3680  050F                     	;# 
  3681  0510                     	;# 
  3682  0511                     	;# 
  3683  0512                     	;# 
  3684  0512                     	;# 
  3685  0513                     	;# 
  3686  0514                     	;# 
  3687  0515                     	;# 
  3688  0515                     	;# 
  3689  0516                     	;# 
  3690  0517                     	;# 
  3691  0518                     	;# 
  3692  0519                     	;# 
  3693  051A                     	;# 
  3694  051B                     	;# 
  3695  051C                     	;# 
  3696  051D                     	;# 
  3697  058C                     	;# 
  3698  058C                     	;# 
  3699  058D                     	;# 
  3700  058E                     	;# 
  3701  058F                     	;# 
  3702  058F                     	;# 
  3703  0590                     	;# 
  3704  0591                     	;# 
  3705  0592                     	;# 
  3706  0593                     	;# 
  3707  060C                     	;# 
  3708  060D                     	;# 
  3709  060E                     	;# 
  3710  060F                     	;# 
  3711  0610                     	;# 
  3712  0611                     	;# 
  3713  0612                     	;# 
  3714  0613                     	;# 
  3715  0614                     	;# 
  3716  0616                     	;# 
  3717  0617                     	;# 
  3718  0618                     	;# 
  3719  0619                     	;# 
  3720  061A                     	;# 
  3721  061B                     	;# 
  3722  061C                     	;# 
  3723  061D                     	;# 
  3724  061E                     	;# 
  3725  068C                     	;# 
  3726  068D                     	;# 
  3727  068E                     	;# 
  3728  068F                     	;# 
  3729  0690                     	;# 
  3730  0691                     	;# 
  3731  0692                     	;# 
  3732  0693                     	;# 
  3733  0694                     	;# 
  3734  070C                     	;# 
  3735  070D                     	;# 
  3736  070E                     	;# 
  3737  070F                     	;# 
  3738  0710                     	;# 
  3739  0711                     	;# 
  3740  0712                     	;# 
  3741  0713                     	;# 
  3742  0714                     	;# 
  3743  0716                     	;# 
  3744  0717                     	;# 
  3745  0718                     	;# 
  3746  0719                     	;# 
  3747  071A                     	;# 
  3748  071B                     	;# 
  3749  071C                     	;# 
  3750  071D                     	;# 
  3751  071E                     	;# 
  3752  0796                     	;# 
  3753  0797                     	;# 
  3754  0798                     	;# 
  3755  0799                     	;# 
  3756  079A                     	;# 
  3757  079B                     	;# 
  3758  080C                     	;# 
  3759  080D                     	;# 
  3760  080E                     	;# 
  3761  080F                     	;# 
  3762  0810                     	;# 
  3763  0811                     	;# 
  3764  0812                     	;# 
  3765  0813                     	;# 
  3766  0814                     	;# 
  3767  081A                     	;# 
  3768  081B                     	;# 
  3769  081C                     	;# 
  3770  081D                     	;# 
  3771  081E                     	;# 
  3772  081F                     	;# 
  3773  088C                     	;# 
  3774  088D                     	;# 
  3775  088E                     	;# 
  3776  088F                     	;# 
  3777  0890                     	;# 
  3778  0891                     	;# 
  3779  0892                     	;# 
  3780  0893                     	;# 
  3781  0895                     	;# 
  3782  0896                     	;# 
  3783  0897                     	;# 
  3784  0898                     	;# 
  3785  0899                     	;# 
  3786  089A                     	;# 
  3787  089B                     	;# 
  3788  090C                     	;# 
  3789  090E                     	;# 
  3790  090F                     	;# 
  3791  091F                     	;# 
  3792  091F                     	;# 
  3793  098F                     	;# 
  3794  098F                     	;# 
  3795  0990                     	;# 
  3796  0991                     	;# 
  3797  0992                     	;# 
  3798  0993                     	;# 
  3799  0994                     	;# 
  3800  0995                     	;# 
  3801  0996                     	;# 
  3802  0997                     	;# 
  3803  0E0F                     	;# 
  3804  0E10                     	;# 
  3805  0E11                     	;# 
  3806  0E12                     	;# 
  3807  0E13                     	;# 
  3808  0E14                     	;# 
  3809  0E15                     	;# 
  3810  0E16                     	;# 
  3811  0E17                     	;# 
  3812  0E18                     	;# 
  3813  0E19                     	;# 
  3814  0E1A                     	;# 
  3815  0E1B                     	;# 
  3816  0E1C                     	;# 
  3817  0E1D                     	;# 
  3818  0E1E                     	;# 
  3819  0E1F                     	;# 
  3820  0E20                     	;# 
  3821  0E21                     	;# 
  3822  0E22                     	;# 
  3823  0E23                     	;# 
  3824  0E24                     	;# 
  3825  0E25                     	;# 
  3826  0E26                     	;# 
  3827  0E27                     	;# 
  3828  0E28                     	;# 
  3829  0E29                     	;# 
  3830  0E2A                     	;# 
  3831  0E2B                     	;# 
  3832  0E2C                     	;# 
  3833  0E2D                     	;# 
  3834  0E2E                     	;# 
  3835  0E2F                     	;# 
  3836  0E30                     	;# 
  3837  0E31                     	;# 
  3838  0E32                     	;# 
  3839  0E33                     	;# 
  3840  0E34                     	;# 
  3841  0E35                     	;# 
  3842  0E36                     	;# 
  3843  0E37                     	;# 
  3844  0E8F                     	;# 
  3845  0E90                     	;# 
  3846  0E91                     	;# 
  3847  0E92                     	;# 
  3848  0E93                     	;# 
  3849  0E94                     	;# 
  3850  0E95                     	;# 
  3851  0E96                     	;# 
  3852  0E97                     	;# 
  3853  0E9C                     	;# 
  3854  0E9D                     	;# 
  3855  0E9E                     	;# 
  3856  0EA1                     	;# 
  3857  0EA2                     	;# 
  3858  0EA3                     	;# 
  3859  0EA4                     	;# 
  3860  0EA5                     	;# 
  3861  0EA9                     	;# 
  3862  0EAA                     	;# 
  3863  0EAB                     	;# 
  3864  0EAC                     	;# 
  3865  0EB1                     	;# 
  3866  0EB2                     	;# 
  3867  0EB3                     	;# 
  3868  0EB8                     	;# 
  3869  0EB9                     	;# 
  3870  0EBA                     	;# 
  3871  0EBB                     	;# 
  3872  0EBC                     	;# 
  3873  0EBD                     	;# 
  3874  0EBE                     	;# 
  3875  0EC3                     	;# 
  3876  0EC5                     	;# 
  3877  0EC6                     	;# 
  3878  0EC7                     	;# 
  3879  0EC8                     	;# 
  3880  0EC9                     	;# 
  3881  0ECA                     	;# 
  3882  0ECB                     	;# 
  3883  0ECC                     	;# 
  3884  0F10                     	;# 
  3885  0F11                     	;# 
  3886  0F12                     	;# 
  3887  0F13                     	;# 
  3888  0F14                     	;# 
  3889  0F15                     	;# 
  3890  0F16                     	;# 
  3891  0F17                     	;# 
  3892  0F18                     	;# 
  3893  0F19                     	;# 
  3894  0F1A                     	;# 
  3895  0F1B                     	;# 
  3896  0F1C                     	;# 
  3897  0F1D                     	;# 
  3898  0F1E                     	;# 
  3899  0F1F                     	;# 
  3900  0F20                     	;# 
  3901  0F21                     	;# 
  3902  0F22                     	;# 
  3903  0F23                     	;# 
  3904  0F24                     	;# 
  3905  0F25                     	;# 
  3906  0F26                     	;# 
  3907  0F27                     	;# 
  3908  0F28                     	;# 
  3909  0F29                     	;# 
  3910  0F2A                     	;# 
  3911  0F2B                     	;# 
  3912  0F2C                     	;# 
  3913  0F2D                     	;# 
  3914  0F2E                     	;# 
  3915  0F2F                     	;# 
  3916  0F30                     	;# 
  3917  0F31                     	;# 
  3918  0F32                     	;# 
  3919  0F38                     	;# 
  3920  0F39                     	;# 
  3921  0F3A                     	;# 
  3922  0F3B                     	;# 
  3923  0F3C                     	;# 
  3924  0F3D                     	;# 
  3925  0F3E                     	;# 
  3926  0F3F                     	;# 
  3927  0F40                     	;# 
  3928  0F41                     	;# 
  3929  0F43                     	;# 
  3930  0F44                     	;# 
  3931  0F45                     	;# 
  3932  0F46                     	;# 
  3933  0F47                     	;# 
  3934  0F48                     	;# 
  3935  0F49                     	;# 
  3936  0F4A                     	;# 
  3937  0F4B                     	;# 
  3938  0F4C                     	;# 
  3939  0F4E                     	;# 
  3940  0F4F                     	;# 
  3941  0F50                     	;# 
  3942  0F51                     	;# 
  3943  0F52                     	;# 
  3944  0F53                     	;# 
  3945  0F54                     	;# 
  3946  0F55                     	;# 
  3947  0F56                     	;# 
  3948  0F57                     	;# 
  3949  0F59                     	;# 
  3950  0F5A                     	;# 
  3951  0F5B                     	;# 
  3952  0F5C                     	;# 
  3953  0F5D                     	;# 
  3954  0F61                     	;# 
  3955  0F62                     	;# 
  3956  0F64                     	;# 
  3957  0F65                     	;# 
  3958  0F66                     	;# 
  3959  0F67                     	;# 
  3960  0F68                     	;# 
  3961  0F69                     	;# 
  3962  0F6A                     	;# 
  3963  0F6B                     	;# 
  3964  0F6C                     	;# 
  3965  0F6D                     	;# 
  3966  0FE4                     	;# 
  3967  0FE5                     	;# 
  3968  0FE6                     	;# 
  3969  0FE7                     	;# 
  3970  0FE8                     	;# 
  3971  0FE9                     	;# 
  3972  0FEA                     	;# 
  3973  0FEB                     	;# 
  3974  0FED                     	;# 
  3975  0FEE                     	;# 
  3976  0FEF                     	;# 
  3977  0000                     	;# 
  3978  0001                     	;# 
  3979  0002                     	;# 
  3980  0003                     	;# 
  3981  0004                     	;# 
  3982  0005                     	;# 
  3983  0006                     	;# 
  3984  0007                     	;# 
  3985  0008                     	;# 
  3986  0009                     	;# 
  3987  000A                     	;# 
  3988  000B                     	;# 
  3989  000C                     	;# 
  3990  000D                     	;# 
  3991  000E                     	;# 
  3992  000F                     	;# 
  3993  0010                     	;# 
  3994  0011                     	;# 
  3995  0012                     	;# 
  3996  0013                     	;# 
  3997  0014                     	;# 
  3998  0015                     	;# 
  3999  0016                     	;# 
  4000  0017                     	;# 
  4001  0018                     	;# 
  4002  0019                     	;# 
  4003  001A                     	;# 
  4004  001C                     	;# 
  4005  001C                     	;# 
  4006  001D                     	;# 
  4007  001D                     	;# 
  4008  001E                     	;# 
  4009  001F                     	;# 
  4010  008C                     	;# 
  4011  008C                     	;# 
  4012  008D                     	;# 
  4013  008E                     	;# 
  4014  008E                     	;# 
  4015  008F                     	;# 
  4016  0090                     	;# 
  4017  0090                     	;# 
  4018  0091                     	;# 
  4019  0093                     	;# 
  4020  0094                     	;# 
  4021  0095                     	;# 
  4022  0096                     	;# 
  4023  0097                     	;# 
  4024  0098                     	;# 
  4025  0099                     	;# 
  4026  009A                     	;# 
  4027  009B                     	;# 
  4028  009C                     	;# 
  4029  009D                     	;# 
  4030  009E                     	;# 
  4031  010C                     	;# 
  4032  010D                     	;# 
  4033  010E                     	;# 
  4034  010E                     	;# 
  4035  010F                     	;# 
  4036  0110                     	;# 
  4037  0110                     	;# 
  4038  0111                     	;# 
  4039  0112                     	;# 
  4040  0112                     	;# 
  4041  0113                     	;# 
  4042  0114                     	;# 
  4043  0114                     	;# 
  4044  0115                     	;# 
  4045  0116                     	;# 
  4046  0116                     	;# 
  4047  0117                     	;# 
  4048  0119                     	;# 
  4049  0119                     	;# 
  4050  0119                     	;# 
  4051  011A                     	;# 
  4052  011A                     	;# 
  4053  011A                     	;# 
  4054  011B                     	;# 
  4055  011B                     	;# 
  4056  011B                     	;# 
  4057  011B                     	;# 
  4058  011B                     	;# 
  4059  011C                     	;# 
  4060  011C                     	;# 
  4061  011C                     	;# 
  4062  011D                     	;# 
  4063  011D                     	;# 
  4064  011D                     	;# 
  4065  011E                     	;# 
  4066  011E                     	;# 
  4067  011E                     	;# 
  4068  011F                     	;# 
  4069  011F                     	;# 
  4070  011F                     	;# 
  4071  011F                     	;# 
  4072  011F                     	;# 
  4073  018C                     	;# 
  4074  018D                     	;# 
  4075  018E                     	;# 
  4076  018F                     	;# 
  4077  0190                     	;# 
  4078  0191                     	;# 
  4079  0192                     	;# 
  4080  0196                     	;# 
  4081  0197                     	;# 
  4082  0198                     	;# 
  4083  0199                     	;# 
  4084  019A                     	;# 
  4085  019B                     	;# 
  4086  019C                     	;# 
  4087  020C                     	;# 
  4088  020C                     	;# 
  4089  020D                     	;# 
  4090  020E                     	;# 
  4091  020F                     	;# 
  4092  020F                     	;# 
  4093  0210                     	;# 
  4094  0210                     	;# 
  4095  0211                     	;# 
  4096  0211                     	;# 
  4097  0212                     	;# 
  4098  0212                     	;# 
  4099  0213                     	;# 
  4100  0214                     	;# 
  4101  0215                     	;# 
  4102  0215                     	;# 
  4103  0216                     	;# 
  4104  0216                     	;# 
  4105  0217                     	;# 
  4106  0217                     	;# 
  4107  0218                     	;# 
  4108  0218                     	;# 
  4109  0219                     	;# 
  4110  021A                     	;# 
  4111  021B                     	;# 
  4112  021B                     	;# 
  4113  021C                     	;# 
  4114  021C                     	;# 
  4115  021D                     	;# 
  4116  021D                     	;# 
  4117  021E                     	;# 
  4118  021F                     	;# 
  4119  028C                     	;# 
  4120  028C                     	;# 
  4121  028D                     	;# 
  4122  028D                     	;# 
  4123  028E                     	;# 
  4124  028F                     	;# 
  4125  0290                     	;# 
  4126  0290                     	;# 
  4127  0291                     	;# 
  4128  0292                     	;# 
  4129  0292                     	;# 
  4130  0293                     	;# 
  4131  0293                     	;# 
  4132  0294                     	;# 
  4133  0295                     	;# 
  4134  0296                     	;# 
  4135  0296                     	;# 
  4136  0297                     	;# 
  4137  0298                     	;# 
  4138  0298                     	;# 
  4139  0299                     	;# 
  4140  0299                     	;# 
  4141  029A                     	;# 
  4142  029B                     	;# 
  4143  029C                     	;# 
  4144  029C                     	;# 
  4145  029D                     	;# 
  4146  030C                     	;# 
  4147  030C                     	;# 
  4148  030D                     	;# 
  4149  030E                     	;# 
  4150  030F                     	;# 
  4151  0310                     	;# 
  4152  0310                     	;# 
  4153  0311                     	;# 
  4154  0312                     	;# 
  4155  0313                     	;# 
  4156  0314                     	;# 
  4157  0314                     	;# 
  4158  0315                     	;# 
  4159  0316                     	;# 
  4160  0317                     	;# 
  4161  0318                     	;# 
  4162  0318                     	;# 
  4163  0319                     	;# 
  4164  031A                     	;# 
  4165  031B                     	;# 
  4166  031C                     	;# 
  4167  031C                     	;# 
  4168  031D                     	;# 
  4169  031E                     	;# 
  4170  031F                     	;# 
  4171  038C                     	;# 
  4172  038C                     	;# 
  4173  038D                     	;# 
  4174  038E                     	;# 
  4175  0390                     	;# 
  4176  0390                     	;# 
  4177  0391                     	;# 
  4178  0392                     	;# 
  4179  040C                     	;# 
  4180  040D                     	;# 
  4181  040E                     	;# 
  4182  040F                     	;# 
  4183  0410                     	;# 
  4184  0411                     	;# 
  4185  0416                     	;# 
  4186  0416                     	;# 
  4187  0417                     	;# 
  4188  0418                     	;# 
  4189  0418                     	;# 
  4190  0419                     	;# 
  4191  041A                     	;# 
  4192  041A                     	;# 
  4193  041B                     	;# 
  4194  041C                     	;# 
  4195  041C                     	;# 
  4196  041D                     	;# 
  4197  041E                     	;# 
  4198  041F                     	;# 
  4199  048C                     	;# 
  4200  048C                     	;# 
  4201  048D                     	;# 
  4202  048E                     	;# 
  4203  048F                     	;# 
  4204  048F                     	;# 
  4205  0490                     	;# 
  4206  0491                     	;# 
  4207  0492                     	;# 
  4208  0492                     	;# 
  4209  0493                     	;# 
  4210  0494                     	;# 
  4211  0495                     	;# 
  4212  0495                     	;# 
  4213  0496                     	;# 
  4214  0497                     	;# 
  4215  0498                     	;# 
  4216  0499                     	;# 
  4217  049A                     	;# 
  4218  049B                     	;# 
  4219  049C                     	;# 
  4220  049D                     	;# 
  4221  050C                     	;# 
  4222  050C                     	;# 
  4223  050D                     	;# 
  4224  050E                     	;# 
  4225  050F                     	;# 
  4226  050F                     	;# 
  4227  0510                     	;# 
  4228  0511                     	;# 
  4229  0512                     	;# 
  4230  0512                     	;# 
  4231  0513                     	;# 
  4232  0514                     	;# 
  4233  0515                     	;# 
  4234  0515                     	;# 
  4235  0516                     	;# 
  4236  0517                     	;# 
  4237  0518                     	;# 
  4238  0519                     	;# 
  4239  051A                     	;# 
  4240  051B                     	;# 
  4241  051C                     	;# 
  4242  051D                     	;# 
  4243  058C                     	;# 
  4244  058C                     	;# 
  4245  058D                     	;# 
  4246  058E                     	;# 
  4247  058F                     	;# 
  4248  058F                     	;# 
  4249  0590                     	;# 
  4250  0591                     	;# 
  4251  0592                     	;# 
  4252  0593                     	;# 
  4253  060C                     	;# 
  4254  060D                     	;# 
  4255  060E                     	;# 
  4256  060F                     	;# 
  4257  0610                     	;# 
  4258  0611                     	;# 
  4259  0612                     	;# 
  4260  0613                     	;# 
  4261  0614                     	;# 
  4262  0616                     	;# 
  4263  0617                     	;# 
  4264  0618                     	;# 
  4265  0619                     	;# 
  4266  061A                     	;# 
  4267  061B                     	;# 
  4268  061C                     	;# 
  4269  061D                     	;# 
  4270  061E                     	;# 
  4271  068C                     	;# 
  4272  068D                     	;# 
  4273  068E                     	;# 
  4274  068F                     	;# 
  4275  0690                     	;# 
  4276  0691                     	;# 
  4277  0692                     	;# 
  4278  0693                     	;# 
  4279  0694                     	;# 
  4280  070C                     	;# 
  4281  070D                     	;# 
  4282  070E                     	;# 
  4283  070F                     	;# 
  4284  0710                     	;# 
  4285  0711                     	;# 
  4286  0712                     	;# 
  4287  0713                     	;# 
  4288  0714                     	;# 
  4289  0716                     	;# 
  4290  0717                     	;# 
  4291  0718                     	;# 
  4292  0719                     	;# 
  4293  071A                     	;# 
  4294  071B                     	;# 
  4295  071C                     	;# 
  4296  071D                     	;# 
  4297  071E                     	;# 
  4298  0796                     	;# 
  4299  0797                     	;# 
  4300  0798                     	;# 
  4301  0799                     	;# 
  4302  079A                     	;# 
  4303  079B                     	;# 
  4304  080C                     	;# 
  4305  080D                     	;# 
  4306  080E                     	;# 
  4307  080F                     	;# 
  4308  0810                     	;# 
  4309  0811                     	;# 
  4310  0812                     	;# 
  4311  0813                     	;# 
  4312  0814                     	;# 
  4313  081A                     	;# 
  4314  081B                     	;# 
  4315  081C                     	;# 
  4316  081D                     	;# 
  4317  081E                     	;# 
  4318  081F                     	;# 
  4319  088C                     	;# 
  4320  088D                     	;# 
  4321  088E                     	;# 
  4322  088F                     	;# 
  4323  0890                     	;# 
  4324  0891                     	;# 
  4325  0892                     	;# 
  4326  0893                     	;# 
  4327  0895                     	;# 
  4328  0896                     	;# 
  4329  0897                     	;# 
  4330  0898                     	;# 
  4331  0899                     	;# 
  4332  089A                     	;# 
  4333  089B                     	;# 
  4334  090C                     	;# 
  4335  090E                     	;# 
  4336  090F                     	;# 
  4337  091F                     	;# 
  4338  091F                     	;# 
  4339  098F                     	;# 
  4340  098F                     	;# 
  4341  0990                     	;# 
  4342  0991                     	;# 
  4343  0992                     	;# 
  4344  0993                     	;# 
  4345  0994                     	;# 
  4346  0995                     	;# 
  4347  0996                     	;# 
  4348  0997                     	;# 
  4349  0E0F                     	;# 
  4350  0E10                     	;# 
  4351  0E11                     	;# 
  4352  0E12                     	;# 
  4353  0E13                     	;# 
  4354  0E14                     	;# 
  4355  0E15                     	;# 
  4356  0E16                     	;# 
  4357  0E17                     	;# 
  4358  0E18                     	;# 
  4359  0E19                     	;# 
  4360  0E1A                     	;# 
  4361  0E1B                     	;# 
  4362  0E1C                     	;# 
  4363  0E1D                     	;# 
  4364  0E1E                     	;# 
  4365  0E1F                     	;# 
  4366  0E20                     	;# 
  4367  0E21                     	;# 
  4368  0E22                     	;# 
  4369  0E23                     	;# 
  4370  0E24                     	;# 
  4371  0E25                     	;# 
  4372  0E26                     	;# 
  4373  0E27                     	;# 
  4374  0E28                     	;# 
  4375  0E29                     	;# 
  4376  0E2A                     	;# 
  4377  0E2B                     	;# 
  4378  0E2C                     	;# 
  4379  0E2D                     	;# 
  4380  0E2E                     	;# 
  4381  0E2F                     	;# 
  4382  0E30                     	;# 
  4383  0E31                     	;# 
  4384  0E32                     	;# 
  4385  0E33                     	;# 
  4386  0E34                     	;# 
  4387  0E35                     	;# 
  4388  0E36                     	;# 
  4389  0E37                     	;# 
  4390  0E8F                     	;# 
  4391  0E90                     	;# 
  4392  0E91                     	;# 
  4393  0E92                     	;# 
  4394  0E93                     	;# 
  4395  0E94                     	;# 
  4396  0E95                     	;# 
  4397  0E96                     	;# 
  4398  0E97                     	;# 
  4399  0E9C                     	;# 
  4400  0E9D                     	;# 
  4401  0E9E                     	;# 
  4402  0EA1                     	;# 
  4403  0EA2                     	;# 
  4404  0EA3                     	;# 
  4405  0EA4                     	;# 
  4406  0EA5                     	;# 
  4407  0EA9                     	;# 
  4408  0EAA                     	;# 
  4409  0EAB                     	;# 
  4410  0EAC                     	;# 
  4411  0EB1                     	;# 
  4412  0EB2                     	;# 
  4413  0EB3                     	;# 
  4414  0EB8                     	;# 
  4415  0EB9                     	;# 
  4416  0EBA                     	;# 
  4417  0EBB                     	;# 
  4418  0EBC                     	;# 
  4419  0EBD                     	;# 
  4420  0EBE                     	;# 
  4421  0EC3                     	;# 
  4422  0EC5                     	;# 
  4423  0EC6                     	;# 
  4424  0EC7                     	;# 
  4425  0EC8                     	;# 
  4426  0EC9                     	;# 
  4427  0ECA                     	;# 
  4428  0ECB                     	;# 
  4429  0ECC                     	;# 
  4430  0F10                     	;# 
  4431  0F11                     	;# 
  4432  0F12                     	;# 
  4433  0F13                     	;# 
  4434  0F14                     	;# 
  4435  0F15                     	;# 
  4436  0F16                     	;# 
  4437  0F17                     	;# 
  4438  0F18                     	;# 
  4439  0F19                     	;# 
  4440  0F1A                     	;# 
  4441  0F1B                     	;# 
  4442  0F1C                     	;# 
  4443  0F1D                     	;# 
  4444  0F1E                     	;# 
  4445  0F1F                     	;# 
  4446  0F20                     	;# 
  4447  0F21                     	;# 
  4448  0F22                     	;# 
  4449  0F23                     	;# 
  4450  0F24                     	;# 
  4451  0F25                     	;# 
  4452  0F26                     	;# 
  4453  0F27                     	;# 
  4454  0F28                     	;# 
  4455  0F29                     	;# 
  4456  0F2A                     	;# 
  4457  0F2B                     	;# 
  4458  0F2C                     	;# 
  4459  0F2D                     	;# 
  4460  0F2E                     	;# 
  4461  0F2F                     	;# 
  4462  0F30                     	;# 
  4463  0F31                     	;# 
  4464  0F32                     	;# 
  4465  0F38                     	;# 
  4466  0F39                     	;# 
  4467  0F3A                     	;# 
  4468  0F3B                     	;# 
  4469  0F3C                     	;# 
  4470  0F3D                     	;# 
  4471  0F3E                     	;# 
  4472  0F3F                     	;# 
  4473  0F40                     	;# 
  4474  0F41                     	;# 
  4475  0F43                     	;# 
  4476  0F44                     	;# 
  4477  0F45                     	;# 
  4478  0F46                     	;# 
  4479  0F47                     	;# 
  4480  0F48                     	;# 
  4481  0F49                     	;# 
  4482  0F4A                     	;# 
  4483  0F4B                     	;# 
  4484  0F4C                     	;# 
  4485  0F4E                     	;# 
  4486  0F4F                     	;# 
  4487  0F50                     	;# 
  4488  0F51                     	;# 
  4489  0F52                     	;# 
  4490  0F53                     	;# 
  4491  0F54                     	;# 
  4492  0F55                     	;# 
  4493  0F56                     	;# 
  4494  0F57                     	;# 
  4495  0F59                     	;# 
  4496  0F5A                     	;# 
  4497  0F5B                     	;# 
  4498  0F5C                     	;# 
  4499  0F5D                     	;# 
  4500  0F61                     	;# 
  4501  0F62                     	;# 
  4502  0F64                     	;# 
  4503  0F65                     	;# 
  4504  0F66                     	;# 
  4505  0F67                     	;# 
  4506  0F68                     	;# 
  4507  0F69                     	;# 
  4508  0F6A                     	;# 
  4509  0F6B                     	;# 
  4510  0F6C                     	;# 
  4511  0F6D                     	;# 
  4512  0FE4                     	;# 
  4513  0FE5                     	;# 
  4514  0FE6                     	;# 
  4515  0FE7                     	;# 
  4516  0FE8                     	;# 
  4517  0FE9                     	;# 
  4518  0FEA                     	;# 
  4519  0FEB                     	;# 
  4520  0FED                     	;# 
  4521  0FEE                     	;# 
  4522  0FEF                     	;# 
  4523  0000                     	;# 
  4524  0001                     	;# 
  4525  0002                     	;# 
  4526  0003                     	;# 
  4527  0004                     	;# 
  4528  0005                     	;# 
  4529  0006                     	;# 
  4530  0007                     	;# 
  4531  0008                     	;# 
  4532  0009                     	;# 
  4533  000A                     	;# 
  4534  000B                     	;# 
  4535  000C                     	;# 
  4536  000D                     	;# 
  4537  000E                     	;# 
  4538  000F                     	;# 
  4539  0010                     	;# 
  4540  0011                     	;# 
  4541  0012                     	;# 
  4542  0013                     	;# 
  4543  0014                     	;# 
  4544  0015                     	;# 
  4545  0016                     	;# 
  4546  0017                     	;# 
  4547  0018                     	;# 
  4548  0019                     	;# 
  4549  001A                     	;# 
  4550  001C                     	;# 
  4551  001C                     	;# 
  4552  001D                     	;# 
  4553  001D                     	;# 
  4554  001E                     	;# 
  4555  001F                     	;# 
  4556  008C                     	;# 
  4557  008C                     	;# 
  4558  008D                     	;# 
  4559  008E                     	;# 
  4560  008E                     	;# 
  4561  008F                     	;# 
  4562  0090                     	;# 
  4563  0090                     	;# 
  4564  0091                     	;# 
  4565  0093                     	;# 
  4566  0094                     	;# 
  4567  0095                     	;# 
  4568  0096                     	;# 
  4569  0097                     	;# 
  4570  0098                     	;# 
  4571  0099                     	;# 
  4572  009A                     	;# 
  4573  009B                     	;# 
  4574  009C                     	;# 
  4575  009D                     	;# 
  4576  009E                     	;# 
  4577  010C                     	;# 
  4578  010D                     	;# 
  4579  010E                     	;# 
  4580  010E                     	;# 
  4581  010F                     	;# 
  4582  0110                     	;# 
  4583  0110                     	;# 
  4584  0111                     	;# 
  4585  0112                     	;# 
  4586  0112                     	;# 
  4587  0113                     	;# 
  4588  0114                     	;# 
  4589  0114                     	;# 
  4590  0115                     	;# 
  4591  0116                     	;# 
  4592  0116                     	;# 
  4593  0117                     	;# 
  4594  0119                     	;# 
  4595  0119                     	;# 
  4596  0119                     	;# 
  4597  011A                     	;# 
  4598  011A                     	;# 
  4599  011A                     	;# 
  4600  011B                     	;# 
  4601  011B                     	;# 
  4602  011B                     	;# 
  4603  011B                     	;# 
  4604  011B                     	;# 
  4605  011C                     	;# 
  4606  011C                     	;# 
  4607  011C                     	;# 
  4608  011D                     	;# 
  4609  011D                     	;# 
  4610  011D                     	;# 
  4611  011E                     	;# 
  4612  011E                     	;# 
  4613  011E                     	;# 
  4614  011F                     	;# 
  4615  011F                     	;# 
  4616  011F                     	;# 
  4617  011F                     	;# 
  4618  011F                     	;# 
  4619  018C                     	;# 
  4620  018D                     	;# 
  4621  018E                     	;# 
  4622  018F                     	;# 
  4623  0190                     	;# 
  4624  0191                     	;# 
  4625  0192                     	;# 
  4626  0196                     	;# 
  4627  0197                     	;# 
  4628  0198                     	;# 
  4629  0199                     	;# 
  4630  019A                     	;# 
  4631  019B                     	;# 
  4632  019C                     	;# 
  4633  020C                     	;# 
  4634  020C                     	;# 
  4635  020D                     	;# 
  4636  020E                     	;# 
  4637  020F                     	;# 
  4638  020F                     	;# 
  4639  0210                     	;# 
  4640  0210                     	;# 
  4641  0211                     	;# 
  4642  0211                     	;# 
  4643  0212                     	;# 
  4644  0212                     	;# 
  4645  0213                     	;# 
  4646  0214                     	;# 
  4647  0215                     	;# 
  4648  0215                     	;# 
  4649  0216                     	;# 
  4650  0216                     	;# 
  4651  0217                     	;# 
  4652  0217                     	;# 
  4653  0218                     	;# 
  4654  0218                     	;# 
  4655  0219                     	;# 
  4656  021A                     	;# 
  4657  021B                     	;# 
  4658  021B                     	;# 
  4659  021C                     	;# 
  4660  021C                     	;# 
  4661  021D                     	;# 
  4662  021D                     	;# 
  4663  021E                     	;# 
  4664  021F                     	;# 
  4665  028C                     	;# 
  4666  028C                     	;# 
  4667  028D                     	;# 
  4668  028D                     	;# 
  4669  028E                     	;# 
  4670  028F                     	;# 
  4671  0290                     	;# 
  4672  0290                     	;# 
  4673  0291                     	;# 
  4674  0292                     	;# 
  4675  0292                     	;# 
  4676  0293                     	;# 
  4677  0293                     	;# 
  4678  0294                     	;# 
  4679  0295                     	;# 
  4680  0296                     	;# 
  4681  0296                     	;# 
  4682  0297                     	;# 
  4683  0298                     	;# 
  4684  0298                     	;# 
  4685  0299                     	;# 
  4686  0299                     	;# 
  4687  029A                     	;# 
  4688  029B                     	;# 
  4689  029C                     	;# 
  4690  029C                     	;# 
  4691  029D                     	;# 
  4692  030C                     	;# 
  4693  030C                     	;# 
  4694  030D                     	;# 
  4695  030E                     	;# 
  4696  030F                     	;# 
  4697  0310                     	;# 
  4698  0310                     	;# 
  4699  0311                     	;# 
  4700  0312                     	;# 
  4701  0313                     	;# 
  4702  0314                     	;# 
  4703  0314                     	;# 
  4704  0315                     	;# 
  4705  0316                     	;# 
  4706  0317                     	;# 
  4707  0318                     	;# 
  4708  0318                     	;# 
  4709  0319                     	;# 
  4710  031A                     	;# 
  4711  031B                     	;# 
  4712  031C                     	;# 
  4713  031C                     	;# 
  4714  031D                     	;# 
  4715  031E                     	;# 
  4716  031F                     	;# 
  4717  038C                     	;# 
  4718  038C                     	;# 
  4719  038D                     	;# 
  4720  038E                     	;# 
  4721  0390                     	;# 
  4722  0390                     	;# 
  4723  0391                     	;# 
  4724  0392                     	;# 
  4725  040C                     	;# 
  4726  040D                     	;# 
  4727  040E                     	;# 
  4728  040F                     	;# 
  4729  0410                     	;# 
  4730  0411                     	;# 
  4731  0416                     	;# 
  4732  0416                     	;# 
  4733  0417                     	;# 
  4734  0418                     	;# 
  4735  0418                     	;# 
  4736  0419                     	;# 
  4737  041A                     	;# 
  4738  041A                     	;# 
  4739  041B                     	;# 
  4740  041C                     	;# 
  4741  041C                     	;# 
  4742  041D                     	;# 
  4743  041E                     	;# 
  4744  041F                     	;# 
  4745  048C                     	;# 
  4746  048C                     	;# 
  4747  048D                     	;# 
  4748  048E                     	;# 
  4749  048F                     	;# 
  4750  048F                     	;# 
  4751  0490                     	;# 
  4752  0491                     	;# 
  4753  0492                     	;# 
  4754  0492                     	;# 
  4755  0493                     	;# 
  4756  0494                     	;# 
  4757  0495                     	;# 
  4758  0495                     	;# 
  4759  0496                     	;# 
  4760  0497                     	;# 
  4761  0498                     	;# 
  4762  0499                     	;# 
  4763  049A                     	;# 
  4764  049B                     	;# 
  4765  049C                     	;# 
  4766  049D                     	;# 
  4767  050C                     	;# 
  4768  050C                     	;# 
  4769  050D                     	;# 
  4770  050E                     	;# 
  4771  050F                     	;# 
  4772  050F                     	;# 
  4773  0510                     	;# 
  4774  0511                     	;# 
  4775  0512                     	;# 
  4776  0512                     	;# 
  4777  0513                     	;# 
  4778  0514                     	;# 
  4779  0515                     	;# 
  4780  0515                     	;# 
  4781  0516                     	;# 
  4782  0517                     	;# 
  4783  0518                     	;# 
  4784  0519                     	;# 
  4785  051A                     	;# 
  4786  051B                     	;# 
  4787  051C                     	;# 
  4788  051D                     	;# 
  4789  058C                     	;# 
  4790  058C                     	;# 
  4791  058D                     	;# 
  4792  058E                     	;# 
  4793  058F                     	;# 
  4794  058F                     	;# 
  4795  0590                     	;# 
  4796  0591                     	;# 
  4797  0592                     	;# 
  4798  0593                     	;# 
  4799  060C                     	;# 
  4800  060D                     	;# 
  4801  060E                     	;# 
  4802  060F                     	;# 
  4803  0610                     	;# 
  4804  0611                     	;# 
  4805  0612                     	;# 
  4806  0613                     	;# 
  4807  0614                     	;# 
  4808  0616                     	;# 
  4809  0617                     	;# 
  4810  0618                     	;# 
  4811  0619                     	;# 
  4812  061A                     	;# 
  4813  061B                     	;# 
  4814  061C                     	;# 
  4815  061D                     	;# 
  4816  061E                     	;# 
  4817  068C                     	;# 
  4818  068D                     	;# 
  4819  068E                     	;# 
  4820  068F                     	;# 
  4821  0690                     	;# 
  4822  0691                     	;# 
  4823  0692                     	;# 
  4824  0693                     	;# 
  4825  0694                     	;# 
  4826  070C                     	;# 
  4827  070D                     	;# 
  4828  070E                     	;# 
  4829  070F                     	;# 
  4830  0710                     	;# 
  4831  0711                     	;# 
  4832  0712                     	;# 
  4833  0713                     	;# 
  4834  0714                     	;# 
  4835  0716                     	;# 
  4836  0717                     	;# 
  4837  0718                     	;# 
  4838  0719                     	;# 
  4839  071A                     	;# 
  4840  071B                     	;# 
  4841  071C                     	;# 
  4842  071D                     	;# 
  4843  071E                     	;# 
  4844  0796                     	;# 
  4845  0797                     	;# 
  4846  0798                     	;# 
  4847  0799                     	;# 
  4848  079A                     	;# 
  4849  079B                     	;# 
  4850  080C                     	;# 
  4851  080D                     	;# 
  4852  080E                     	;# 
  4853  080F                     	;# 
  4854  0810                     	;# 
  4855  0811                     	;# 
  4856  0812                     	;# 
  4857  0813                     	;# 
  4858  0814                     	;# 
  4859  081A                     	;# 
  4860  081B                     	;# 
  4861  081C                     	;# 
  4862  081D                     	;# 
  4863  081E                     	;# 
  4864  081F                     	;# 
  4865  088C                     	;# 
  4866  088D                     	;# 
  4867  088E                     	;# 
  4868  088F                     	;# 
  4869  0890                     	;# 
  4870  0891                     	;# 
  4871  0892                     	;# 
  4872  0893                     	;# 
  4873  0895                     	;# 
  4874  0896                     	;# 
  4875  0897                     	;# 
  4876  0898                     	;# 
  4877  0899                     	;# 
  4878  089A                     	;# 
  4879  089B                     	;# 
  4880  090C                     	;# 
  4881  090E                     	;# 
  4882  090F                     	;# 
  4883  091F                     	;# 
  4884  091F                     	;# 
  4885  098F                     	;# 
  4886  098F                     	;# 
  4887  0990                     	;# 
  4888  0991                     	;# 
  4889  0992                     	;# 
  4890  0993                     	;# 
  4891  0994                     	;# 
  4892  0995                     	;# 
  4893  0996                     	;# 
  4894  0997                     	;# 
  4895  0E0F                     	;# 
  4896  0E10                     	;# 
  4897  0E11                     	;# 
  4898  0E12                     	;# 
  4899  0E13                     	;# 
  4900  0E14                     	;# 
  4901  0E15                     	;# 
  4902  0E16                     	;# 
  4903  0E17                     	;# 
  4904  0E18                     	;# 
  4905  0E19                     	;# 
  4906  0E1A                     	;# 
  4907  0E1B                     	;# 
  4908  0E1C                     	;# 
  4909  0E1D                     	;# 
  4910  0E1E                     	;# 
  4911  0E1F                     	;# 
  4912  0E20                     	;# 
  4913  0E21                     	;# 
  4914  0E22                     	;# 
  4915  0E23                     	;# 
  4916  0E24                     	;# 
  4917  0E25                     	;# 
  4918  0E26                     	;# 
  4919  0E27                     	;# 
  4920  0E28                     	;# 
  4921  0E29                     	;# 
  4922  0E2A                     	;# 
  4923  0E2B                     	;# 
  4924  0E2C                     	;# 
  4925  0E2D                     	;# 
  4926  0E2E                     	;# 
  4927  0E2F                     	;# 
  4928  0E30                     	;# 
  4929  0E31                     	;# 
  4930  0E32                     	;# 
  4931  0E33                     	;# 
  4932  0E34                     	;# 
  4933  0E35                     	;# 
  4934  0E36                     	;# 
  4935  0E37                     	;# 
  4936  0E8F                     	;# 
  4937  0E90                     	;# 
  4938  0E91                     	;# 
  4939  0E92                     	;# 
  4940  0E93                     	;# 
  4941  0E94                     	;# 
  4942  0E95                     	;# 
  4943  0E96                     	;# 
  4944  0E97                     	;# 
  4945  0E9C                     	;# 
  4946  0E9D                     	;# 
  4947  0E9E                     	;# 
  4948  0EA1                     	;# 
  4949  0EA2                     	;# 
  4950  0EA3                     	;# 
  4951  0EA4                     	;# 
  4952  0EA5                     	;# 
  4953  0EA9                     	;# 
  4954  0EAA                     	;# 
  4955  0EAB                     	;# 
  4956  0EAC                     	;# 
  4957  0EB1                     	;# 
  4958  0EB2                     	;# 
  4959  0EB3                     	;# 
  4960  0EB8                     	;# 
  4961  0EB9                     	;# 
  4962  0EBA                     	;# 
  4963  0EBB                     	;# 
  4964  0EBC                     	;# 
  4965  0EBD                     	;# 
  4966  0EBE                     	;# 
  4967  0EC3                     	;# 
  4968  0EC5                     	;# 
  4969  0EC6                     	;# 
  4970  0EC7                     	;# 
  4971  0EC8                     	;# 
  4972  0EC9                     	;# 
  4973  0ECA                     	;# 
  4974  0ECB                     	;# 
  4975  0ECC                     	;# 
  4976  0F10                     	;# 
  4977  0F11                     	;# 
  4978  0F12                     	;# 
  4979  0F13                     	;# 
  4980  0F14                     	;# 
  4981  0F15                     	;# 
  4982  0F16                     	;# 
  4983  0F17                     	;# 
  4984  0F18                     	;# 
  4985  0F19                     	;# 
  4986  0F1A                     	;# 
  4987  0F1B                     	;# 
  4988  0F1C                     	;# 
  4989  0F1D                     	;# 
  4990  0F1E                     	;# 
  4991  0F1F                     	;# 
  4992  0F20                     	;# 
  4993  0F21                     	;# 
  4994  0F22                     	;# 
  4995  0F23                     	;# 
  4996  0F24                     	;# 
  4997  0F25                     	;# 
  4998  0F26                     	;# 
  4999  0F27                     	;# 
  5000  0F28                     	;# 
  5001  0F29                     	;# 
  5002  0F2A                     	;# 
  5003  0F2B                     	;# 
  5004  0F2C                     	;# 
  5005  0F2D                     	;# 
  5006  0F2E                     	;# 
  5007  0F2F                     	;# 
  5008  0F30                     	;# 
  5009  0F31                     	;# 
  5010  0F32                     	;# 
  5011  0F38                     	;# 
  5012  0F39                     	;# 
  5013  0F3A                     	;# 
  5014  0F3B                     	;# 
  5015  0F3C                     	;# 
  5016  0F3D                     	;# 
  5017  0F3E                     	;# 
  5018  0F3F                     	;# 
  5019  0F40                     	;# 
  5020  0F41                     	;# 
  5021  0F43                     	;# 
  5022  0F44                     	;# 
  5023  0F45                     	;# 
  5024  0F46                     	;# 
  5025  0F47                     	;# 
  5026  0F48                     	;# 
  5027  0F49                     	;# 
  5028  0F4A                     	;# 
  5029  0F4B                     	;# 
  5030  0F4C                     	;# 
  5031  0F4E                     	;# 
  5032  0F4F                     	;# 
  5033  0F50                     	;# 
  5034  0F51                     	;# 
  5035  0F52                     	;# 
  5036  0F53                     	;# 
  5037  0F54                     	;# 
  5038  0F55                     	;# 
  5039  0F56                     	;# 
  5040  0F57                     	;# 
  5041  0F59                     	;# 
  5042  0F5A                     	;# 
  5043  0F5B                     	;# 
  5044  0F5C                     	;# 
  5045  0F5D                     	;# 
  5046  0F61                     	;# 
  5047  0F62                     	;# 
  5048  0F64                     	;# 
  5049  0F65                     	;# 
  5050  0F66                     	;# 
  5051  0F67                     	;# 
  5052  0F68                     	;# 
  5053  0F69                     	;# 
  5054  0F6A                     	;# 
  5055  0F6B                     	;# 
  5056  0F6C                     	;# 
  5057  0F6D                     	;# 
  5058  0FE4                     	;# 
  5059  0FE5                     	;# 
  5060  0FE6                     	;# 
  5061  0FE7                     	;# 
  5062  0FE8                     	;# 
  5063  0FE9                     	;# 
  5064  0FEA                     	;# 
  5065  0FEB                     	;# 
  5066  0FED                     	;# 
  5067  0FEE                     	;# 
  5068  0FEF                     	;# 
  5069  0000                     	;# 
  5070  0001                     	;# 
  5071  0002                     	;# 
  5072  0003                     	;# 
  5073  0004                     	;# 
  5074  0005                     	;# 
  5075  0006                     	;# 
  5076  0007                     	;# 
  5077  0008                     	;# 
  5078  0009                     	;# 
  5079  000A                     	;# 
  5080  000B                     	;# 
  5081  000C                     	;# 
  5082  000D                     	;# 
  5083  000E                     	;# 
  5084  000F                     	;# 
  5085  0010                     	;# 
  5086  0011                     	;# 
  5087  0012                     	;# 
  5088  0013                     	;# 
  5089  0014                     	;# 
  5090  0015                     	;# 
  5091  0016                     	;# 
  5092  0017                     	;# 
  5093  0018                     	;# 
  5094  0019                     	;# 
  5095  001A                     	;# 
  5096  001C                     	;# 
  5097  001C                     	;# 
  5098  001D                     	;# 
  5099  001D                     	;# 
  5100  001E                     	;# 
  5101  001F                     	;# 
  5102  008C                     	;# 
  5103  008C                     	;# 
  5104  008D                     	;# 
  5105  008E                     	;# 
  5106  008E                     	;# 
  5107  008F                     	;# 
  5108  0090                     	;# 
  5109  0090                     	;# 
  5110  0091                     	;# 
  5111  0093                     	;# 
  5112  0094                     	;# 
  5113  0095                     	;# 
  5114  0096                     	;# 
  5115  0097                     	;# 
  5116  0098                     	;# 
  5117  0099                     	;# 
  5118  009A                     	;# 
  5119  009B                     	;# 
  5120  009C                     	;# 
  5121  009D                     	;# 
  5122  009E                     	;# 
  5123  010C                     	;# 
  5124  010D                     	;# 
  5125  010E                     	;# 
  5126  010E                     	;# 
  5127  010F                     	;# 
  5128  0110                     	;# 
  5129  0110                     	;# 
  5130  0111                     	;# 
  5131  0112                     	;# 
  5132  0112                     	;# 
  5133  0113                     	;# 
  5134  0114                     	;# 
  5135  0114                     	;# 
  5136  0115                     	;# 
  5137  0116                     	;# 
  5138  0116                     	;# 
  5139  0117                     	;# 
  5140  0119                     	;# 
  5141  0119                     	;# 
  5142  0119                     	;# 
  5143  011A                     	;# 
  5144  011A                     	;# 
  5145  011A                     	;# 
  5146  011B                     	;# 
  5147  011B                     	;# 
  5148  011B                     	;# 
  5149  011B                     	;# 
  5150  011B                     	;# 
  5151  011C                     	;# 
  5152  011C                     	;# 
  5153  011C                     	;# 
  5154  011D                     	;# 
  5155  011D                     	;# 
  5156  011D                     	;# 
  5157  011E                     	;# 
  5158  011E                     	;# 
  5159  011E                     	;# 
  5160  011F                     	;# 
  5161  011F                     	;# 
  5162  011F                     	;# 
  5163  011F                     	;# 
  5164  011F                     	;# 
  5165  018C                     	;# 
  5166  018D                     	;# 
  5167  018E                     	;# 
  5168  018F                     	;# 
  5169  0190                     	;# 
  5170  0191                     	;# 
  5171  0192                     	;# 
  5172  0196                     	;# 
  5173  0197                     	;# 
  5174  0198                     	;# 
  5175  0199                     	;# 
  5176  019A                     	;# 
  5177  019B                     	;# 
  5178  019C                     	;# 
  5179  020C                     	;# 
  5180  020C                     	;# 
  5181  020D                     	;# 
  5182  020E                     	;# 
  5183  020F                     	;# 
  5184  020F                     	;# 
  5185  0210                     	;# 
  5186  0210                     	;# 
  5187  0211                     	;# 
  5188  0211                     	;# 
  5189  0212                     	;# 
  5190  0212                     	;# 
  5191  0213                     	;# 
  5192  0214                     	;# 
  5193  0215                     	;# 
  5194  0215                     	;# 
  5195  0216                     	;# 
  5196  0216                     	;# 
  5197  0217                     	;# 
  5198  0217                     	;# 
  5199  0218                     	;# 
  5200  0218                     	;# 
  5201  0219                     	;# 
  5202  021A                     	;# 
  5203  021B                     	;# 
  5204  021B                     	;# 
  5205  021C                     	;# 
  5206  021C                     	;# 
  5207  021D                     	;# 
  5208  021D                     	;# 
  5209  021E                     	;# 
  5210  021F                     	;# 
  5211  028C                     	;# 
  5212  028C                     	;# 
  5213  028D                     	;# 
  5214  028D                     	;# 
  5215  028E                     	;# 
  5216  028F                     	;# 
  5217  0290                     	;# 
  5218  0290                     	;# 
  5219  0291                     	;# 
  5220  0292                     	;# 
  5221  0292                     	;# 
  5222  0293                     	;# 
  5223  0293                     	;# 
  5224  0294                     	;# 
  5225  0295                     	;# 
  5226  0296                     	;# 
  5227  0296                     	;# 
  5228  0297                     	;# 
  5229  0298                     	;# 
  5230  0298                     	;# 
  5231  0299                     	;# 
  5232  0299                     	;# 
  5233  029A                     	;# 
  5234  029B                     	;# 
  5235  029C                     	;# 
  5236  029C                     	;# 
  5237  029D                     	;# 
  5238  030C                     	;# 
  5239  030C                     	;# 
  5240  030D                     	;# 
  5241  030E                     	;# 
  5242  030F                     	;# 
  5243  0310                     	;# 
  5244  0310                     	;# 
  5245  0311                     	;# 
  5246  0312                     	;# 
  5247  0313                     	;# 
  5248  0314                     	;# 
  5249  0314                     	;# 
  5250  0315                     	;# 
  5251  0316                     	;# 
  5252  0317                     	;# 
  5253  0318                     	;# 
  5254  0318                     	;# 
  5255  0319                     	;# 
  5256  031A                     	;# 
  5257  031B                     	;# 
  5258  031C                     	;# 
  5259  031C                     	;# 
  5260  031D                     	;# 
  5261  031E                     	;# 
  5262  031F                     	;# 
  5263  038C                     	;# 
  5264  038C                     	;# 
  5265  038D                     	;# 
  5266  038E                     	;# 
  5267  0390                     	;# 
  5268  0390                     	;# 
  5269  0391                     	;# 
  5270  0392                     	;# 
  5271  040C                     	;# 
  5272  040D                     	;# 
  5273  040E                     	;# 
  5274  040F                     	;# 
  5275  0410                     	;# 
  5276  0411                     	;# 
  5277  0416                     	;# 
  5278  0416                     	;# 
  5279  0417                     	;# 
  5280  0418                     	;# 
  5281  0418                     	;# 
  5282  0419                     	;# 
  5283  041A                     	;# 
  5284  041A                     	;# 
  5285  041B                     	;# 
  5286  041C                     	;# 
  5287  041C                     	;# 
  5288  041D                     	;# 
  5289  041E                     	;# 
  5290  041F                     	;# 
  5291  048C                     	;# 
  5292  048C                     	;# 
  5293  048D                     	;# 
  5294  048E                     	;# 
  5295  048F                     	;# 
  5296  048F                     	;# 
  5297  0490                     	;# 
  5298  0491                     	;# 
  5299  0492                     	;# 
  5300  0492                     	;# 
  5301  0493                     	;# 
  5302  0494                     	;# 
  5303  0495                     	;# 
  5304  0495                     	;# 
  5305  0496                     	;# 
  5306  0497                     	;# 
  5307  0498                     	;# 
  5308  0499                     	;# 
  5309  049A                     	;# 
  5310  049B                     	;# 
  5311  049C                     	;# 
  5312  049D                     	;# 
  5313  050C                     	;# 
  5314  050C                     	;# 
  5315  050D                     	;# 
  5316  050E                     	;# 
  5317  050F                     	;# 
  5318  050F                     	;# 
  5319  0510                     	;# 
  5320  0511                     	;# 
  5321  0512                     	;# 
  5322  0512                     	;# 
  5323  0513                     	;# 
  5324  0514                     	;# 
  5325  0515                     	;# 
  5326  0515                     	;# 
  5327  0516                     	;# 
  5328  0517                     	;# 
  5329  0518                     	;# 
  5330  0519                     	;# 
  5331  051A                     	;# 
  5332  051B                     	;# 
  5333  051C                     	;# 
  5334  051D                     	;# 
  5335  058C                     	;# 
  5336  058C                     	;# 
  5337  058D                     	;# 
  5338  058E                     	;# 
  5339  058F                     	;# 
  5340  058F                     	;# 
  5341  0590                     	;# 
  5342  0591                     	;# 
  5343  0592                     	;# 
  5344  0593                     	;# 
  5345  060C                     	;# 
  5346  060D                     	;# 
  5347  060E                     	;# 
  5348  060F                     	;# 
  5349  0610                     	;# 
  5350  0611                     	;# 
  5351  0612                     	;# 
  5352  0613                     	;# 
  5353  0614                     	;# 
  5354  0616                     	;# 
  5355  0617                     	;# 
  5356  0618                     	;# 
  5357  0619                     	;# 
  5358  061A                     	;# 
  5359  061B                     	;# 
  5360  061C                     	;# 
  5361  061D                     	;# 
  5362  061E                     	;# 
  5363  068C                     	;# 
  5364  068D                     	;# 
  5365  068E                     	;# 
  5366  068F                     	;# 
  5367  0690                     	;# 
  5368  0691                     	;# 
  5369  0692                     	;# 
  5370  0693                     	;# 
  5371  0694                     	;# 
  5372  070C                     	;# 
  5373  070D                     	;# 
  5374  070E                     	;# 
  5375  070F                     	;# 
  5376  0710                     	;# 
  5377  0711                     	;# 
  5378  0712                     	;# 
  5379  0713                     	;# 
  5380  0714                     	;# 
  5381  0716                     	;# 
  5382  0717                     	;# 
  5383  0718                     	;# 
  5384  0719                     	;# 
  5385  071A                     	;# 
  5386  071B                     	;# 
  5387  071C                     	;# 
  5388  071D                     	;# 
  5389  071E                     	;# 
  5390  0796                     	;# 
  5391  0797                     	;# 
  5392  0798                     	;# 
  5393  0799                     	;# 
  5394  079A                     	;# 
  5395  079B                     	;# 
  5396  080C                     	;# 
  5397  080D                     	;# 
  5398  080E                     	;# 
  5399  080F                     	;# 
  5400  0810                     	;# 
  5401  0811                     	;# 
  5402  0812                     	;# 
  5403  0813                     	;# 
  5404  0814                     	;# 
  5405  081A                     	;# 
  5406  081B                     	;# 
  5407  081C                     	;# 
  5408  081D                     	;# 
  5409  081E                     	;# 
  5410  081F                     	;# 
  5411  088C                     	;# 
  5412  088D                     	;# 
  5413  088E                     	;# 
  5414  088F                     	;# 
  5415  0890                     	;# 
  5416  0891                     	;# 
  5417  0892                     	;# 
  5418  0893                     	;# 
  5419  0895                     	;# 
  5420  0896                     	;# 
  5421  0897                     	;# 
  5422  0898                     	;# 
  5423  0899                     	;# 
  5424  089A                     	;# 
  5425  089B                     	;# 
  5426  090C                     	;# 
  5427  090E                     	;# 
  5428  090F                     	;# 
  5429  091F                     	;# 
  5430  091F                     	;# 
  5431  098F                     	;# 
  5432  098F                     	;# 
  5433  0990                     	;# 
  5434  0991                     	;# 
  5435  0992                     	;# 
  5436  0993                     	;# 
  5437  0994                     	;# 
  5438  0995                     	;# 
  5439  0996                     	;# 
  5440  0997                     	;# 
  5441  0E0F                     	;# 
  5442  0E10                     	;# 
  5443  0E11                     	;# 
  5444  0E12                     	;# 
  5445  0E13                     	;# 
  5446  0E14                     	;# 
  5447  0E15                     	;# 
  5448  0E16                     	;# 
  5449  0E17                     	;# 
  5450  0E18                     	;# 
  5451  0E19                     	;# 
  5452  0E1A                     	;# 
  5453  0E1B                     	;# 
  5454  0E1C                     	;# 
  5455  0E1D                     	;# 
  5456  0E1E                     	;# 
  5457  0E1F                     	;# 
  5458  0E20                     	;# 
  5459  0E21                     	;# 
  5460  0E22                     	;# 
  5461  0E23                     	;# 
  5462  0E24                     	;# 
  5463  0E25                     	;# 
  5464  0E26                     	;# 
  5465  0E27                     	;# 
  5466  0E28                     	;# 
  5467  0E29                     	;# 
  5468  0E2A                     	;# 
  5469  0E2B                     	;# 
  5470  0E2C                     	;# 
  5471  0E2D                     	;# 
  5472  0E2E                     	;# 
  5473  0E2F                     	;# 
  5474  0E30                     	;# 
  5475  0E31                     	;# 
  5476  0E32                     	;# 
  5477  0E33                     	;# 
  5478  0E34                     	;# 
  5479  0E35                     	;# 
  5480  0E36                     	;# 
  5481  0E37                     	;# 
  5482  0E8F                     	;# 
  5483  0E90                     	;# 
  5484  0E91                     	;# 
  5485  0E92                     	;# 
  5486  0E93                     	;# 
  5487  0E94                     	;# 
  5488  0E95                     	;# 
  5489  0E96                     	;# 
  5490  0E97                     	;# 
  5491  0E9C                     	;# 
  5492  0E9D                     	;# 
  5493  0E9E                     	;# 
  5494  0EA1                     	;# 
  5495  0EA2                     	;# 
  5496  0EA3                     	;# 
  5497  0EA4                     	;# 
  5498  0EA5                     	;# 
  5499  0EA9                     	;# 
  5500  0EAA                     	;# 
  5501  0EAB                     	;# 
  5502  0EAC                     	;# 
  5503  0EB1                     	;# 
  5504  0EB2                     	;# 
  5505  0EB3                     	;# 
  5506  0EB8                     	;# 
  5507  0EB9                     	;# 
  5508  0EBA                     	;# 
  5509  0EBB                     	;# 
  5510  0EBC                     	;# 
  5511  0EBD                     	;# 
  5512  0EBE                     	;# 
  5513  0EC3                     	;# 
  5514  0EC5                     	;# 
  5515  0EC6                     	;# 
  5516  0EC7                     	;# 
  5517  0EC8                     	;# 
  5518  0EC9                     	;# 
  5519  0ECA                     	;# 
  5520  0ECB                     	;# 
  5521  0ECC                     	;# 
  5522  0F10                     	;# 
  5523  0F11                     	;# 
  5524  0F12                     	;# 
  5525  0F13                     	;# 
  5526  0F14                     	;# 
  5527  0F15                     	;# 
  5528  0F16                     	;# 
  5529  0F17                     	;# 
  5530  0F18                     	;# 
  5531  0F19                     	;# 
  5532  0F1A                     	;# 
  5533  0F1B                     	;# 
  5534  0F1C                     	;# 
  5535  0F1D                     	;# 
  5536  0F1E                     	;# 
  5537  0F1F                     	;# 
  5538  0F20                     	;# 
  5539  0F21                     	;# 
  5540  0F22                     	;# 
  5541  0F23                     	;# 
  5542  0F24                     	;# 
  5543  0F25                     	;# 
  5544  0F26                     	;# 
  5545  0F27                     	;# 
  5546  0F28                     	;# 
  5547  0F29                     	;# 
  5548  0F2A                     	;# 
  5549  0F2B                     	;# 
  5550  0F2C                     	;# 
  5551  0F2D                     	;# 
  5552  0F2E                     	;# 
  5553  0F2F                     	;# 
  5554  0F30                     	;# 
  5555  0F31                     	;# 
  5556  0F32                     	;# 
  5557  0F38                     	;# 
  5558  0F39                     	;# 
  5559  0F3A                     	;# 
  5560  0F3B                     	;# 
  5561  0F3C                     	;# 
  5562  0F3D                     	;# 
  5563  0F3E                     	;# 
  5564  0F3F                     	;# 
  5565  0F40                     	;# 
  5566  0F41                     	;# 
  5567  0F43                     	;# 
  5568  0F44                     	;# 
  5569  0F45                     	;# 
  5570  0F46                     	;# 
  5571  0F47                     	;# 
  5572  0F48                     	;# 
  5573  0F49                     	;# 
  5574  0F4A                     	;# 
  5575  0F4B                     	;# 
  5576  0F4C                     	;# 
  5577  0F4E                     	;# 
  5578  0F4F                     	;# 
  5579  0F50                     	;# 
  5580  0F51                     	;# 
  5581  0F52                     	;# 
  5582  0F53                     	;# 
  5583  0F54                     	;# 
  5584  0F55                     	;# 
  5585  0F56                     	;# 
  5586  0F57                     	;# 
  5587  0F59                     	;# 
  5588  0F5A                     	;# 
  5589  0F5B                     	;# 
  5590  0F5C                     	;# 
  5591  0F5D                     	;# 
  5592  0F61                     	;# 
  5593  0F62                     	;# 
  5594  0F64                     	;# 
  5595  0F65                     	;# 
  5596  0F66                     	;# 
  5597  0F67                     	;# 
  5598  0F68                     	;# 
  5599  0F69                     	;# 
  5600  0F6A                     	;# 
  5601  0F6B                     	;# 
  5602  0F6C                     	;# 
  5603  0F6D                     	;# 
  5604  0FE4                     	;# 
  5605  0FE5                     	;# 
  5606  0FE6                     	;# 
  5607  0FE7                     	;# 
  5608  0FE8                     	;# 
  5609  0FE9                     	;# 
  5610  0FEA                     	;# 
  5611  0FEB                     	;# 
  5612  0FED                     	;# 
  5613  0FEE                     	;# 
  5614  0FEF                     	;# 
  5615  0000                     	;# 
  5616  0001                     	;# 
  5617  0002                     	;# 
  5618  0003                     	;# 
  5619  0004                     	;# 
  5620  0005                     	;# 
  5621  0006                     	;# 
  5622  0007                     	;# 
  5623  0008                     	;# 
  5624  0009                     	;# 
  5625  000A                     	;# 
  5626  000B                     	;# 
  5627  000C                     	;# 
  5628  000D                     	;# 
  5629  000E                     	;# 
  5630  000F                     	;# 
  5631  0010                     	;# 
  5632  0011                     	;# 
  5633  0012                     	;# 
  5634  0013                     	;# 
  5635  0014                     	;# 
  5636  0015                     	;# 
  5637  0016                     	;# 
  5638  0017                     	;# 
  5639  0018                     	;# 
  5640  0019                     	;# 
  5641  001A                     	;# 
  5642  001C                     	;# 
  5643  001C                     	;# 
  5644  001D                     	;# 
  5645  001D                     	;# 
  5646  001E                     	;# 
  5647  001F                     	;# 
  5648  008C                     	;# 
  5649  008C                     	;# 
  5650  008D                     	;# 
  5651  008E                     	;# 
  5652  008E                     	;# 
  5653  008F                     	;# 
  5654  0090                     	;# 
  5655  0090                     	;# 
  5656  0091                     	;# 
  5657  0093                     	;# 
  5658  0094                     	;# 
  5659  0095                     	;# 
  5660  0096                     	;# 
  5661  0097                     	;# 
  5662  0098                     	;# 
  5663  0099                     	;# 
  5664  009A                     	;# 
  5665  009B                     	;# 
  5666  009C                     	;# 
  5667  009D                     	;# 
  5668  009E                     	;# 
  5669  010C                     	;# 
  5670  010D                     	;# 
  5671  010E                     	;# 
  5672  010E                     	;# 
  5673  010F                     	;# 
  5674  0110                     	;# 
  5675  0110                     	;# 
  5676  0111                     	;# 
  5677  0112                     	;# 
  5678  0112                     	;# 
  5679  0113                     	;# 
  5680  0114                     	;# 
  5681  0114                     	;# 
  5682  0115                     	;# 
  5683  0116                     	;# 
  5684  0116                     	;# 
  5685  0117                     	;# 
  5686  0119                     	;# 
  5687  0119                     	;# 
  5688  0119                     	;# 
  5689  011A                     	;# 
  5690  011A                     	;# 
  5691  011A                     	;# 
  5692  011B                     	;# 
  5693  011B                     	;# 
  5694  011B                     	;# 
  5695  011B                     	;# 
  5696  011B                     	;# 
  5697  011C                     	;# 
  5698  011C                     	;# 
  5699  011C                     	;# 
  5700  011D                     	;# 
  5701  011D                     	;# 
  5702  011D                     	;# 
  5703  011E                     	;# 
  5704  011E                     	;# 
  5705  011E                     	;# 
  5706  011F                     	;# 
  5707  011F                     	;# 
  5708  011F                     	;# 
  5709  011F                     	;# 
  5710  011F                     	;# 
  5711  018C                     	;# 
  5712  018D                     	;# 
  5713  018E                     	;# 
  5714  018F                     	;# 
  5715  0190                     	;# 
  5716  0191                     	;# 
  5717  0192                     	;# 
  5718  0196                     	;# 
  5719  0197                     	;# 
  5720  0198                     	;# 
  5721  0199                     	;# 
  5722  019A                     	;# 
  5723  019B                     	;# 
  5724  019C                     	;# 
  5725  020C                     	;# 
  5726  020C                     	;# 
  5727  020D                     	;# 
  5728  020E                     	;# 
  5729  020F                     	;# 
  5730  020F                     	;# 
  5731  0210                     	;# 
  5732  0210                     	;# 
  5733  0211                     	;# 
  5734  0211                     	;# 
  5735  0212                     	;# 
  5736  0212                     	;# 
  5737  0213                     	;# 
  5738  0214                     	;# 
  5739  0215                     	;# 
  5740  0215                     	;# 
  5741  0216                     	;# 
  5742  0216                     	;# 
  5743  0217                     	;# 
  5744  0217                     	;# 
  5745  0218                     	;# 
  5746  0218                     	;# 
  5747  0219                     	;# 
  5748  021A                     	;# 
  5749  021B                     	;# 
  5750  021B                     	;# 
  5751  021C                     	;# 
  5752  021C                     	;# 
  5753  021D                     	;# 
  5754  021D                     	;# 
  5755  021E                     	;# 
  5756  021F                     	;# 
  5757  028C                     	;# 
  5758  028C                     	;# 
  5759  028D                     	;# 
  5760  028D                     	;# 
  5761  028E                     	;# 
  5762  028F                     	;# 
  5763  0290                     	;# 
  5764  0290                     	;# 
  5765  0291                     	;# 
  5766  0292                     	;# 
  5767  0292                     	;# 
  5768  0293                     	;# 
  5769  0293                     	;# 
  5770  0294                     	;# 
  5771  0295                     	;# 
  5772  0296                     	;# 
  5773  0296                     	;# 
  5774  0297                     	;# 
  5775  0298                     	;# 
  5776  0298                     	;# 
  5777  0299                     	;# 
  5778  0299                     	;# 
  5779  029A                     	;# 
  5780  029B                     	;# 
  5781  029C                     	;# 
  5782  029C                     	;# 
  5783  029D                     	;# 
  5784  030C                     	;# 
  5785  030C                     	;# 
  5786  030D                     	;# 
  5787  030E                     	;# 
  5788  030F                     	;# 
  5789  0310                     	;# 
  5790  0310                     	;# 
  5791  0311                     	;# 
  5792  0312                     	;# 
  5793  0313                     	;# 
  5794  0314                     	;# 
  5795  0314                     	;# 
  5796  0315                     	;# 
  5797  0316                     	;# 
  5798  0317                     	;# 
  5799  0318                     	;# 
  5800  0318                     	;# 
  5801  0319                     	;# 
  5802  031A                     	;# 
  5803  031B                     	;# 
  5804  031C                     	;# 
  5805  031C                     	;# 
  5806  031D                     	;# 
  5807  031E                     	;# 
  5808  031F                     	;# 
  5809  038C                     	;# 
  5810  038C                     	;# 
  5811  038D                     	;# 
  5812  038E                     	;# 
  5813  0390                     	;# 
  5814  0390                     	;# 
  5815  0391                     	;# 
  5816  0392                     	;# 
  5817  040C                     	;# 
  5818  040D                     	;# 
  5819  040E                     	;# 
  5820  040F                     	;# 
  5821  0410                     	;# 
  5822  0411                     	;# 
  5823  0416                     	;# 
  5824  0416                     	;# 
  5825  0417                     	;# 
  5826  0418                     	;# 
  5827  0418                     	;# 
  5828  0419                     	;# 
  5829  041A                     	;# 
  5830  041A                     	;# 
  5831  041B                     	;# 
  5832  041C                     	;# 
  5833  041C                     	;# 
  5834  041D                     	;# 
  5835  041E                     	;# 
  5836  041F                     	;# 
  5837  048C                     	;# 
  5838  048C                     	;# 
  5839  048D                     	;# 
  5840  048E                     	;# 
  5841  048F                     	;# 
  5842  048F                     	;# 
  5843  0490                     	;# 
  5844  0491                     	;# 
  5845  0492                     	;# 
  5846  0492                     	;# 
  5847  0493                     	;# 
  5848  0494                     	;# 
  5849  0495                     	;# 
  5850  0495                     	;# 
  5851  0496                     	;# 
  5852  0497                     	;# 
  5853  0498                     	;# 
  5854  0499                     	;# 
  5855  049A                     	;# 
  5856  049B                     	;# 
  5857  049C                     	;# 
  5858  049D                     	;# 
  5859  050C                     	;# 
  5860  050C                     	;# 
  5861  050D                     	;# 
  5862  050E                     	;# 
  5863  050F                     	;# 
  5864  050F                     	;# 
  5865  0510                     	;# 
  5866  0511                     	;# 
  5867  0512                     	;# 
  5868  0512                     	;# 
  5869  0513                     	;# 
  5870  0514                     	;# 
  5871  0515                     	;# 
  5872  0515                     	;# 
  5873  0516                     	;# 
  5874  0517                     	;# 
  5875  0518                     	;# 
  5876  0519                     	;# 
  5877  051A                     	;# 
  5878  051B                     	;# 
  5879  051C                     	;# 
  5880  051D                     	;# 
  5881  058C                     	;# 
  5882  058C                     	;# 
  5883  058D                     	;# 
  5884  058E                     	;# 
  5885  058F                     	;# 
  5886  058F                     	;# 
  5887  0590                     	;# 
  5888  0591                     	;# 
  5889  0592                     	;# 
  5890  0593                     	;# 
  5891  060C                     	;# 
  5892  060D                     	;# 
  5893  060E                     	;# 
  5894  060F                     	;# 
  5895  0610                     	;# 
  5896  0611                     	;# 
  5897  0612                     	;# 
  5898  0613                     	;# 
  5899  0614                     	;# 
  5900  0616                     	;# 
  5901  0617                     	;# 
  5902  0618                     	;# 
  5903  0619                     	;# 
  5904  061A                     	;# 
  5905  061B                     	;# 
  5906  061C                     	;# 
  5907  061D                     	;# 
  5908  061E                     	;# 
  5909  068C                     	;# 
  5910  068D                     	;# 
  5911  068E                     	;# 
  5912  068F                     	;# 
  5913  0690                     	;# 
  5914  0691                     	;# 
  5915  0692                     	;# 
  5916  0693                     	;# 
  5917  0694                     	;# 
  5918  070C                     	;# 
  5919  070D                     	;# 
  5920  070E                     	;# 
  5921  070F                     	;# 
  5922  0710                     	;# 
  5923  0711                     	;# 
  5924  0712                     	;# 
  5925  0713                     	;# 
  5926  0714                     	;# 
  5927  0716                     	;# 
  5928  0717                     	;# 
  5929  0718                     	;# 
  5930  0719                     	;# 
  5931  071A                     	;# 
  5932  071B                     	;# 
  5933  071C                     	;# 
  5934  071D                     	;# 
  5935  071E                     	;# 
  5936  0796                     	;# 
  5937  0797                     	;# 
  5938  0798                     	;# 
  5939  0799                     	;# 
  5940  079A                     	;# 
  5941  079B                     	;# 
  5942  080C                     	;# 
  5943  080D                     	;# 
  5944  080E                     	;# 
  5945  080F                     	;# 
  5946  0810                     	;# 
  5947  0811                     	;# 
  5948  0812                     	;# 
  5949  0813                     	;# 
  5950  0814                     	;# 
  5951  081A                     	;# 
  5952  081B                     	;# 
  5953  081C                     	;# 
  5954  081D                     	;# 
  5955  081E                     	;# 
  5956  081F                     	;# 
  5957  088C                     	;# 
  5958  088D                     	;# 
  5959  088E                     	;# 
  5960  088F                     	;# 
  5961  0890                     	;# 
  5962  0891                     	;# 
  5963  0892                     	;# 
  5964  0893                     	;# 
  5965  0895                     	;# 
  5966  0896                     	;# 
  5967  0897                     	;# 
  5968  0898                     	;# 
  5969  0899                     	;# 
  5970  089A                     	;# 
  5971  089B                     	;# 
  5972  090C                     	;# 
  5973  090E                     	;# 
  5974  090F                     	;# 
  5975  091F                     	;# 
  5976  091F                     	;# 
  5977  098F                     	;# 
  5978  098F                     	;# 
  5979  0990                     	;# 
  5980  0991                     	;# 
  5981  0992                     	;# 
  5982  0993                     	;# 
  5983  0994                     	;# 
  5984  0995                     	;# 
  5985  0996                     	;# 
  5986  0997                     	;# 
  5987  0E0F                     	;# 
  5988  0E10                     	;# 
  5989  0E11                     	;# 
  5990  0E12                     	;# 
  5991  0E13                     	;# 
  5992  0E14                     	;# 
  5993  0E15                     	;# 
  5994  0E16                     	;# 
  5995  0E17                     	;# 
  5996  0E18                     	;# 
  5997  0E19                     	;# 
  5998  0E1A                     	;# 
  5999  0E1B                     	;# 
  6000  0E1C                     	;# 
  6001  0E1D                     	;# 
  6002  0E1E                     	;# 
  6003  0E1F                     	;# 
  6004  0E20                     	;# 
  6005  0E21                     	;# 
  6006  0E22                     	;# 
  6007  0E23                     	;# 
  6008  0E24                     	;# 
  6009  0E25                     	;# 
  6010  0E26                     	;# 
  6011  0E27                     	;# 
  6012  0E28                     	;# 
  6013  0E29                     	;# 
  6014  0E2A                     	;# 
  6015  0E2B                     	;# 
  6016  0E2C                     	;# 
  6017  0E2D                     	;# 
  6018  0E2E                     	;# 
  6019  0E2F                     	;# 
  6020  0E30                     	;# 
  6021  0E31                     	;# 
  6022  0E32                     	;# 
  6023  0E33                     	;# 
  6024  0E34                     	;# 
  6025  0E35                     	;# 
  6026  0E36                     	;# 
  6027  0E37                     	;# 
  6028  0E8F                     	;# 
  6029  0E90                     	;# 
  6030  0E91                     	;# 
  6031  0E92                     	;# 
  6032  0E93                     	;# 
  6033  0E94                     	;# 
  6034  0E95                     	;# 
  6035  0E96                     	;# 
  6036  0E97                     	;# 
  6037  0E9C                     	;# 
  6038  0E9D                     	;# 
  6039  0E9E                     	;# 
  6040  0EA1                     	;# 
  6041  0EA2                     	;# 
  6042  0EA3                     	;# 
  6043  0EA4                     	;# 
  6044  0EA5                     	;# 
  6045  0EA9                     	;# 
  6046  0EAA                     	;# 
  6047  0EAB                     	;# 
  6048  0EAC                     	;# 
  6049  0EB1                     	;# 
  6050  0EB2                     	;# 
  6051  0EB3                     	;# 
  6052  0EB8                     	;# 
  6053  0EB9                     	;# 
  6054  0EBA                     	;# 
  6055  0EBB                     	;# 
  6056  0EBC                     	;# 
  6057  0EBD                     	;# 
  6058  0EBE                     	;# 
  6059  0EC3                     	;# 
  6060  0EC5                     	;# 
  6061  0EC6                     	;# 
  6062  0EC7                     	;# 
  6063  0EC8                     	;# 
  6064  0EC9                     	;# 
  6065  0ECA                     	;# 
  6066  0ECB                     	;# 
  6067  0ECC                     	;# 
  6068  0F10                     	;# 
  6069  0F11                     	;# 
  6070  0F12                     	;# 
  6071  0F13                     	;# 
  6072  0F14                     	;# 
  6073  0F15                     	;# 
  6074  0F16                     	;# 
  6075  0F17                     	;# 
  6076  0F18                     	;# 
  6077  0F19                     	;# 
  6078  0F1A                     	;# 
  6079  0F1B                     	;# 
  6080  0F1C                     	;# 
  6081  0F1D                     	;# 
  6082  0F1E                     	;# 
  6083  0F1F                     	;# 
  6084  0F20                     	;# 
  6085  0F21                     	;# 
  6086  0F22                     	;# 
  6087  0F23                     	;# 
  6088  0F24                     	;# 
  6089  0F25                     	;# 
  6090  0F26                     	;# 
  6091  0F27                     	;# 
  6092  0F28                     	;# 
  6093  0F29                     	;# 
  6094  0F2A                     	;# 
  6095  0F2B                     	;# 
  6096  0F2C                     	;# 
  6097  0F2D                     	;# 
  6098  0F2E                     	;# 
  6099  0F2F                     	;# 
  6100  0F30                     	;# 
  6101  0F31                     	;# 
  6102  0F32                     	;# 
  6103  0F38                     	;# 
  6104  0F39                     	;# 
  6105  0F3A                     	;# 
  6106  0F3B                     	;# 
  6107  0F3C                     	;# 
  6108  0F3D                     	;# 
  6109  0F3E                     	;# 
  6110  0F3F                     	;# 
  6111  0F40                     	;# 
  6112  0F41                     	;# 
  6113  0F43                     	;# 
  6114  0F44                     	;# 
  6115  0F45                     	;# 
  6116  0F46                     	;# 
  6117  0F47                     	;# 
  6118  0F48                     	;# 
  6119  0F49                     	;# 
  6120  0F4A                     	;# 
  6121  0F4B                     	;# 
  6122  0F4C                     	;# 
  6123  0F4E                     	;# 
  6124  0F4F                     	;# 
  6125  0F50                     	;# 
  6126  0F51                     	;# 
  6127  0F52                     	;# 
  6128  0F53                     	;# 
  6129  0F54                     	;# 
  6130  0F55                     	;# 
  6131  0F56                     	;# 
  6132  0F57                     	;# 
  6133  0F59                     	;# 
  6134  0F5A                     	;# 
  6135  0F5B                     	;# 
  6136  0F5C                     	;# 
  6137  0F5D                     	;# 
  6138  0F61                     	;# 
  6139  0F62                     	;# 
  6140  0F64                     	;# 
  6141  0F65                     	;# 
  6142  0F66                     	;# 
  6143  0F67                     	;# 
  6144  0F68                     	;# 
  6145  0F69                     	;# 
  6146  0F6A                     	;# 
  6147  0F6B                     	;# 
  6148  0F6C                     	;# 
  6149  0F6D                     	;# 
  6150  0FE4                     	;# 
  6151  0FE5                     	;# 
  6152  0FE6                     	;# 
  6153  0FE7                     	;# 
  6154  0FE8                     	;# 
  6155  0FE9                     	;# 
  6156  0FEA                     	;# 
  6157  0FEB                     	;# 
  6158  0FED                     	;# 
  6159  0FEE                     	;# 
  6160  0FEF                     	;# 
  6161  0000                     	;# 
  6162  0001                     	;# 
  6163  0002                     	;# 
  6164  0003                     	;# 
  6165  0004                     	;# 
  6166  0005                     	;# 
  6167  0006                     	;# 
  6168  0007                     	;# 
  6169  0008                     	;# 
  6170  0009                     	;# 
  6171  000A                     	;# 
  6172  000B                     	;# 
  6173  000C                     	;# 
  6174  000D                     	;# 
  6175  000E                     	;# 
  6176  000F                     	;# 
  6177  0010                     	;# 
  6178  0011                     	;# 
  6179  0012                     	;# 
  6180  0013                     	;# 
  6181  0014                     	;# 
  6182  0015                     	;# 
  6183  0016                     	;# 
  6184  0017                     	;# 
  6185  0018                     	;# 
  6186  0019                     	;# 
  6187  001A                     	;# 
  6188  001C                     	;# 
  6189  001C                     	;# 
  6190  001D                     	;# 
  6191  001D                     	;# 
  6192  001E                     	;# 
  6193  001F                     	;# 
  6194  008C                     	;# 
  6195  008C                     	;# 
  6196  008D                     	;# 
  6197  008E                     	;# 
  6198  008E                     	;# 
  6199  008F                     	;# 
  6200  0090                     	;# 
  6201  0090                     	;# 
  6202  0091                     	;# 
  6203  0093                     	;# 
  6204  0094                     	;# 
  6205  0095                     	;# 
  6206  0096                     	;# 
  6207  0097                     	;# 
  6208  0098                     	;# 
  6209  0099                     	;# 
  6210  009A                     	;# 
  6211  009B                     	;# 
  6212  009C                     	;# 
  6213  009D                     	;# 
  6214  009E                     	;# 
  6215  010C                     	;# 
  6216  010D                     	;# 
  6217  010E                     	;# 
  6218  010E                     	;# 
  6219  010F                     	;# 
  6220  0110                     	;# 
  6221  0110                     	;# 
  6222  0111                     	;# 
  6223  0112                     	;# 
  6224  0112                     	;# 
  6225  0113                     	;# 
  6226  0114                     	;# 
  6227  0114                     	;# 
  6228  0115                     	;# 
  6229  0116                     	;# 
  6230  0116                     	;# 
  6231  0117                     	;# 
  6232  0119                     	;# 
  6233  0119                     	;# 
  6234  0119                     	;# 
  6235  011A                     	;# 
  6236  011A                     	;# 
  6237  011A                     	;# 
  6238  011B                     	;# 
  6239  011B                     	;# 
  6240  011B                     	;# 
  6241  011B                     	;# 
  6242  011B                     	;# 
  6243  011C                     	;# 
  6244  011C                     	;# 
  6245  011C                     	;# 
  6246  011D                     	;# 
  6247  011D                     	;# 
  6248  011D                     	;# 
  6249  011E                     	;# 
  6250  011E                     	;# 
  6251  011E                     	;# 
  6252  011F                     	;# 
  6253  011F                     	;# 
  6254  011F                     	;# 
  6255  011F                     	;# 
  6256  011F                     	;# 
  6257  018C                     	;# 
  6258  018D                     	;# 
  6259  018E                     	;# 
  6260  018F                     	;# 
  6261  0190                     	;# 
  6262  0191                     	;# 
  6263  0192                     	;# 
  6264  0196                     	;# 
  6265  0197                     	;# 
  6266  0198                     	;# 
  6267  0199                     	;# 
  6268  019A                     	;# 
  6269  019B                     	;# 
  6270  019C                     	;# 
  6271  020C                     	;# 
  6272  020C                     	;# 
  6273  020D                     	;# 
  6274  020E                     	;# 
  6275  020F                     	;# 
  6276  020F                     	;# 
  6277  0210                     	;# 
  6278  0210                     	;# 
  6279  0211                     	;# 
  6280  0211                     	;# 
  6281  0212                     	;# 
  6282  0212                     	;# 
  6283  0213                     	;# 
  6284  0214                     	;# 
  6285  0215                     	;# 
  6286  0215                     	;# 
  6287  0216                     	;# 
  6288  0216                     	;# 
  6289  0217                     	;# 
  6290  0217                     	;# 
  6291  0218                     	;# 
  6292  0218                     	;# 
  6293  0219                     	;# 
  6294  021A                     	;# 
  6295  021B                     	;# 
  6296  021B                     	;# 
  6297  021C                     	;# 
  6298  021C                     	;# 
  6299  021D                     	;# 
  6300  021D                     	;# 
  6301  021E                     	;# 
  6302  021F                     	;# 
  6303  028C                     	;# 
  6304  028C                     	;# 
  6305  028D                     	;# 
  6306  028D                     	;# 
  6307  028E                     	;# 
  6308  028F                     	;# 
  6309  0290                     	;# 
  6310  0290                     	;# 
  6311  0291                     	;# 
  6312  0292                     	;# 
  6313  0292                     	;# 
  6314  0293                     	;# 
  6315  0293                     	;# 
  6316  0294                     	;# 
  6317  0295                     	;# 
  6318  0296                     	;# 
  6319  0296                     	;# 
  6320  0297                     	;# 
  6321  0298                     	;# 
  6322  0298                     	;# 
  6323  0299                     	;# 
  6324  0299                     	;# 
  6325  029A                     	;# 
  6326  029B                     	;# 
  6327  029C                     	;# 
  6328  029C                     	;# 
  6329  029D                     	;# 
  6330  030C                     	;# 
  6331  030C                     	;# 
  6332  030D                     	;# 
  6333  030E                     	;# 
  6334  030F                     	;# 
  6335  0310                     	;# 
  6336  0310                     	;# 
  6337  0311                     	;# 
  6338  0312                     	;# 
  6339  0313                     	;# 
  6340  0314                     	;# 
  6341  0314                     	;# 
  6342  0315                     	;# 
  6343  0316                     	;# 
  6344  0317                     	;# 
  6345  0318                     	;# 
  6346  0318                     	;# 
  6347  0319                     	;# 
  6348  031A                     	;# 
  6349  031B                     	;# 
  6350  031C                     	;# 
  6351  031C                     	;# 
  6352  031D                     	;# 
  6353  031E                     	;# 
  6354  031F                     	;# 
  6355  038C                     	;# 
  6356  038C                     	;# 
  6357  038D                     	;# 
  6358  038E                     	;# 
  6359  0390                     	;# 
  6360  0390                     	;# 
  6361  0391                     	;# 
  6362  0392                     	;# 
  6363  040C                     	;# 
  6364  040D                     	;# 
  6365  040E                     	;# 
  6366  040F                     	;# 
  6367  0410                     	;# 
  6368  0411                     	;# 
  6369  0416                     	;# 
  6370  0416                     	;# 
  6371  0417                     	;# 
  6372  0418                     	;# 
  6373  0418                     	;# 
  6374  0419                     	;# 
  6375  041A                     	;# 
  6376  041A                     	;# 
  6377  041B                     	;# 
  6378  041C                     	;# 
  6379  041C                     	;# 
  6380  041D                     	;# 
  6381  041E                     	;# 
  6382  041F                     	;# 
  6383  048C                     	;# 
  6384  048C                     	;# 
  6385  048D                     	;# 
  6386  048E                     	;# 
  6387  048F                     	;# 
  6388  048F                     	;# 
  6389  0490                     	;# 
  6390  0491                     	;# 
  6391  0492                     	;# 
  6392  0492                     	;# 
  6393  0493                     	;# 
  6394  0494                     	;# 
  6395  0495                     	;# 
  6396  0495                     	;# 
  6397  0496                     	;# 
  6398  0497                     	;# 
  6399  0498                     	;# 
  6400  0499                     	;# 
  6401  049A                     	;# 
  6402  049B                     	;# 
  6403  049C                     	;# 
  6404  049D                     	;# 
  6405  050C                     	;# 
  6406  050C                     	;# 
  6407  050D                     	;# 
  6408  050E                     	;# 
  6409  050F                     	;# 
  6410  050F                     	;# 
  6411  0510                     	;# 
  6412  0511                     	;# 
  6413  0512                     	;# 
  6414  0512                     	;# 
  6415  0513                     	;# 
  6416  0514                     	;# 
  6417  0515                     	;# 
  6418  0515                     	;# 
  6419  0516                     	;# 
  6420  0517                     	;# 
  6421  0518                     	;# 
  6422  0519                     	;# 
  6423  051A                     	;# 
  6424  051B                     	;# 
  6425  051C                     	;# 
  6426  051D                     	;# 
  6427  058C                     	;# 
  6428  058C                     	;# 
  6429  058D                     	;# 
  6430  058E                     	;# 
  6431  058F                     	;# 
  6432  058F                     	;# 
  6433  0590                     	;# 
  6434  0591                     	;# 
  6435  0592                     	;# 
  6436  0593                     	;# 
  6437  060C                     	;# 
  6438  060D                     	;# 
  6439  060E                     	;# 
  6440  060F                     	;# 
  6441  0610                     	;# 
  6442  0611                     	;# 
  6443  0612                     	;# 
  6444  0613                     	;# 
  6445  0614                     	;# 
  6446  0616                     	;# 
  6447  0617                     	;# 
  6448  0618                     	;# 
  6449  0619                     	;# 
  6450  061A                     	;# 
  6451  061B                     	;# 
  6452  061C                     	;# 
  6453  061D                     	;# 
  6454  061E                     	;# 
  6455  068C                     	;# 
  6456  068D                     	;# 
  6457  068E                     	;# 
  6458  068F                     	;# 
  6459  0690                     	;# 
  6460  0691                     	;# 
  6461  0692                     	;# 
  6462  0693                     	;# 
  6463  0694                     	;# 
  6464  070C                     	;# 
  6465  070D                     	;# 
  6466  070E                     	;# 
  6467  070F                     	;# 
  6468  0710                     	;# 
  6469  0711                     	;# 
  6470  0712                     	;# 
  6471  0713                     	;# 
  6472  0714                     	;# 
  6473  0716                     	;# 
  6474  0717                     	;# 
  6475  0718                     	;# 
  6476  0719                     	;# 
  6477  071A                     	;# 
  6478  071B                     	;# 
  6479  071C                     	;# 
  6480  071D                     	;# 
  6481  071E                     	;# 
  6482  0796                     	;# 
  6483  0797                     	;# 
  6484  0798                     	;# 
  6485  0799                     	;# 
  6486  079A                     	;# 
  6487  079B                     	;# 
  6488  080C                     	;# 
  6489  080D                     	;# 
  6490  080E                     	;# 
  6491  080F                     	;# 
  6492  0810                     	;# 
  6493  0811                     	;# 
  6494  0812                     	;# 
  6495  0813                     	;# 
  6496  0814                     	;# 
  6497  081A                     	;# 
  6498  081B                     	;# 
  6499  081C                     	;# 
  6500  081D                     	;# 
  6501  081E                     	;# 
  6502  081F                     	;# 
  6503  088C                     	;# 
  6504  088D                     	;# 
  6505  088E                     	;# 
  6506  088F                     	;# 
  6507  0890                     	;# 
  6508  0891                     	;# 
  6509  0892                     	;# 
  6510  0893                     	;# 
  6511  0895                     	;# 
  6512  0896                     	;# 
  6513  0897                     	;# 
  6514  0898                     	;# 
  6515  0899                     	;# 
  6516  089A                     	;# 
  6517  089B                     	;# 
  6518  090C                     	;# 
  6519  090E                     	;# 
  6520  090F                     	;# 
  6521  091F                     	;# 
  6522  091F                     	;# 
  6523  098F                     	;# 
  6524  098F                     	;# 
  6525  0990                     	;# 
  6526  0991                     	;# 
  6527  0992                     	;# 
  6528  0993                     	;# 
  6529  0994                     	;# 
  6530  0995                     	;# 
  6531  0996                     	;# 
  6532  0997                     	;# 
  6533  0E0F                     	;# 
  6534  0E10                     	;# 
  6535  0E11                     	;# 
  6536  0E12                     	;# 
  6537  0E13                     	;# 
  6538  0E14                     	;# 
  6539  0E15                     	;# 
  6540  0E16                     	;# 
  6541  0E17                     	;# 
  6542  0E18                     	;# 
  6543  0E19                     	;# 
  6544  0E1A                     	;# 
  6545  0E1B                     	;# 
  6546  0E1C                     	;# 
  6547  0E1D                     	;# 
  6548  0E1E                     	;# 
  6549  0E1F                     	;# 
  6550  0E20                     	;# 
  6551  0E21                     	;# 
  6552  0E22                     	;# 
  6553  0E23                     	;# 
  6554  0E24                     	;# 
  6555  0E25                     	;# 
  6556  0E26                     	;# 
  6557  0E27                     	;# 
  6558  0E28                     	;# 
  6559  0E29                     	;# 
  6560  0E2A                     	;# 
  6561  0E2B                     	;# 
  6562  0E2C                     	;# 
  6563  0E2D                     	;# 
  6564  0E2E                     	;# 
  6565  0E2F                     	;# 
  6566  0E30                     	;# 
  6567  0E31                     	;# 
  6568  0E32                     	;# 
  6569  0E33                     	;# 
  6570  0E34                     	;# 
  6571  0E35                     	;# 
  6572  0E36                     	;# 
  6573  0E37                     	;# 
  6574  0E8F                     	;# 
  6575  0E90                     	;# 
  6576  0E91                     	;# 
  6577  0E92                     	;# 
  6578  0E93                     	;# 
  6579  0E94                     	;# 
  6580  0E95                     	;# 
  6581  0E96                     	;# 
  6582  0E97                     	;# 
  6583  0E9C                     	;# 
  6584  0E9D                     	;# 
  6585  0E9E                     	;# 
  6586  0EA1                     	;# 
  6587  0EA2                     	;# 
  6588  0EA3                     	;# 
  6589  0EA4                     	;# 
  6590  0EA5                     	;# 
  6591  0EA9                     	;# 
  6592  0EAA                     	;# 
  6593  0EAB                     	;# 
  6594  0EAC                     	;# 
  6595  0EB1                     	;# 
  6596  0EB2                     	;# 
  6597  0EB3                     	;# 
  6598  0EB8                     	;# 
  6599  0EB9                     	;# 
  6600  0EBA                     	;# 
  6601  0EBB                     	;# 
  6602  0EBC                     	;# 
  6603  0EBD                     	;# 
  6604  0EBE                     	;# 
  6605  0EC3                     	;# 
  6606  0EC5                     	;# 
  6607  0EC6                     	;# 
  6608  0EC7                     	;# 
  6609  0EC8                     	;# 
  6610  0EC9                     	;# 
  6611  0ECA                     	;# 
  6612  0ECB                     	;# 
  6613  0ECC                     	;# 
  6614  0F10                     	;# 
  6615  0F11                     	;# 
  6616  0F12                     	;# 
  6617  0F13                     	;# 
  6618  0F14                     	;# 
  6619  0F15                     	;# 
  6620  0F16                     	;# 
  6621  0F17                     	;# 
  6622  0F18                     	;# 
  6623  0F19                     	;# 
  6624  0F1A                     	;# 
  6625  0F1B                     	;# 
  6626  0F1C                     	;# 
  6627  0F1D                     	;# 
  6628  0F1E                     	;# 
  6629  0F1F                     	;# 
  6630  0F20                     	;# 
  6631  0F21                     	;# 
  6632  0F22                     	;# 
  6633  0F23                     	;# 
  6634  0F24                     	;# 
  6635  0F25                     	;# 
  6636  0F26                     	;# 
  6637  0F27                     	;# 
  6638  0F28                     	;# 
  6639  0F29                     	;# 
  6640  0F2A                     	;# 
  6641  0F2B                     	;# 
  6642  0F2C                     	;# 
  6643  0F2D                     	;# 
  6644  0F2E                     	;# 
  6645  0F2F                     	;# 
  6646  0F30                     	;# 
  6647  0F31                     	;# 
  6648  0F32                     	;# 
  6649  0F38                     	;# 
  6650  0F39                     	;# 
  6651  0F3A                     	;# 
  6652  0F3B                     	;# 
  6653  0F3C                     	;# 
  6654  0F3D                     	;# 
  6655  0F3E                     	;# 
  6656  0F3F                     	;# 
  6657  0F40                     	;# 
  6658  0F41                     	;# 
  6659  0F43                     	;# 
  6660  0F44                     	;# 
  6661  0F45                     	;# 
  6662  0F46                     	;# 
  6663  0F47                     	;# 
  6664  0F48                     	;# 
  6665  0F49                     	;# 
  6666  0F4A                     	;# 
  6667  0F4B                     	;# 
  6668  0F4C                     	;# 
  6669  0F4E                     	;# 
  6670  0F4F                     	;# 
  6671  0F50                     	;# 
  6672  0F51                     	;# 
  6673  0F52                     	;# 
  6674  0F53                     	;# 
  6675  0F54                     	;# 
  6676  0F55                     	;# 
  6677  0F56                     	;# 
  6678  0F57                     	;# 
  6679  0F59                     	;# 
  6680  0F5A                     	;# 
  6681  0F5B                     	;# 
  6682  0F5C                     	;# 
  6683  0F5D                     	;# 
  6684  0F61                     	;# 
  6685  0F62                     	;# 
  6686  0F64                     	;# 
  6687  0F65                     	;# 
  6688  0F66                     	;# 
  6689  0F67                     	;# 
  6690  0F68                     	;# 
  6691  0F69                     	;# 
  6692  0F6A                     	;# 
  6693  0F6B                     	;# 
  6694  0F6C                     	;# 
  6695  0F6D                     	;# 
  6696  0FE4                     	;# 
  6697  0FE5                     	;# 
  6698  0FE6                     	;# 
  6699  0FE7                     	;# 
  6700  0FE8                     	;# 
  6701  0FE9                     	;# 
  6702  0FEA                     	;# 
  6703  0FEB                     	;# 
  6704  0FED                     	;# 
  6705  0FEE                     	;# 
  6706  0FEF                     	;# 
  6707  0000                     	;# 
  6708  0001                     	;# 
  6709  0002                     	;# 
  6710  0003                     	;# 
  6711  0004                     	;# 
  6712  0005                     	;# 
  6713  0006                     	;# 
  6714  0007                     	;# 
  6715  0008                     	;# 
  6716  0009                     	;# 
  6717  000A                     	;# 
  6718  000B                     	;# 
  6719  000C                     	;# 
  6720  000D                     	;# 
  6721  000E                     	;# 
  6722  000F                     	;# 
  6723  0010                     	;# 
  6724  0011                     	;# 
  6725  0012                     	;# 
  6726  0013                     	;# 
  6727  0014                     	;# 
  6728  0015                     	;# 
  6729  0016                     	;# 
  6730  0017                     	;# 
  6731  0018                     	;# 
  6732  0019                     	;# 
  6733  001A                     	;# 
  6734  001C                     	;# 
  6735  001C                     	;# 
  6736  001D                     	;# 
  6737  001D                     	;# 
  6738  001E                     	;# 
  6739  001F                     	;# 
  6740  008C                     	;# 
  6741  008C                     	;# 
  6742  008D                     	;# 
  6743  008E                     	;# 
  6744  008E                     	;# 
  6745  008F                     	;# 
  6746  0090                     	;# 
  6747  0090                     	;# 
  6748  0091                     	;# 
  6749  0093                     	;# 
  6750  0094                     	;# 
  6751  0095                     	;# 
  6752  0096                     	;# 
  6753  0097                     	;# 
  6754  0098                     	;# 
  6755  0099                     	;# 
  6756  009A                     	;# 
  6757  009B                     	;# 
  6758  009C                     	;# 
  6759  009D                     	;# 
  6760  009E                     	;# 
  6761  010C                     	;# 
  6762  010D                     	;# 
  6763  010E                     	;# 
  6764  010E                     	;# 
  6765  010F                     	;# 
  6766  0110                     	;# 
  6767  0110                     	;# 
  6768  0111                     	;# 
  6769  0112                     	;# 
  6770  0112                     	;# 
  6771  0113                     	;# 
  6772  0114                     	;# 
  6773  0114                     	;# 
  6774  0115                     	;# 
  6775  0116                     	;# 
  6776  0116                     	;# 
  6777  0117                     	;# 
  6778  0119                     	;# 
  6779  0119                     	;# 
  6780  0119                     	;# 
  6781  011A                     	;# 
  6782  011A                     	;# 
  6783  011A                     	;# 
  6784  011B                     	;# 
  6785  011B                     	;# 
  6786  011B                     	;# 
  6787  011B                     	;# 
  6788  011B                     	;# 
  6789  011C                     	;# 
  6790  011C                     	;# 
  6791  011C                     	;# 
  6792  011D                     	;# 
  6793  011D                     	;# 
  6794  011D                     	;# 
  6795  011E                     	;# 
  6796  011E                     	;# 
  6797  011E                     	;# 
  6798  011F                     	;# 
  6799  011F                     	;# 
  6800  011F                     	;# 
  6801  011F                     	;# 
  6802  011F                     	;# 
  6803  018C                     	;# 
  6804  018D                     	;# 
  6805  018E                     	;# 
  6806  018F                     	;# 
  6807  0190                     	;# 
  6808  0191                     	;# 
  6809  0192                     	;# 
  6810  0196                     	;# 
  6811  0197                     	;# 
  6812  0198                     	;# 
  6813  0199                     	;# 
  6814  019A                     	;# 
  6815  019B                     	;# 
  6816  019C                     	;# 
  6817  020C                     	;# 
  6818  020C                     	;# 
  6819  020D                     	;# 
  6820  020E                     	;# 
  6821  020F                     	;# 
  6822  020F                     	;# 
  6823  0210                     	;# 
  6824  0210                     	;# 
  6825  0211                     	;# 
  6826  0211                     	;# 
  6827  0212                     	;# 
  6828  0212                     	;# 
  6829  0213                     	;# 
  6830  0214                     	;# 
  6831  0215                     	;# 
  6832  0215                     	;# 
  6833  0216                     	;# 
  6834  0216                     	;# 
  6835  0217                     	;# 
  6836  0217                     	;# 
  6837  0218                     	;# 
  6838  0218                     	;# 
  6839  0219                     	;# 
  6840  021A                     	;# 
  6841  021B                     	;# 
  6842  021B                     	;# 
  6843  021C                     	;# 
  6844  021C                     	;# 
  6845  021D                     	;# 
  6846  021D                     	;# 
  6847  021E                     	;# 
  6848  021F                     	;# 
  6849  028C                     	;# 
  6850  028C                     	;# 
  6851  028D                     	;# 
  6852  028D                     	;# 
  6853  028E                     	;# 
  6854  028F                     	;# 
  6855  0290                     	;# 
  6856  0290                     	;# 
  6857  0291                     	;# 
  6858  0292                     	;# 
  6859  0292                     	;# 
  6860  0293                     	;# 
  6861  0293                     	;# 
  6862  0294                     	;# 
  6863  0295                     	;# 
  6864  0296                     	;# 
  6865  0296                     	;# 
  6866  0297                     	;# 
  6867  0298                     	;# 
  6868  0298                     	;# 
  6869  0299                     	;# 
  6870  0299                     	;# 
  6871  029A                     	;# 
  6872  029B                     	;# 
  6873  029C                     	;# 
  6874  029C                     	;# 
  6875  029D                     	;# 
  6876  030C                     	;# 
  6877  030C                     	;# 
  6878  030D                     	;# 
  6879  030E                     	;# 
  6880  030F                     	;# 
  6881  0310                     	;# 
  6882  0310                     	;# 
  6883  0311                     	;# 
  6884  0312                     	;# 
  6885  0313                     	;# 
  6886  0314                     	;# 
  6887  0314                     	;# 
  6888  0315                     	;# 
  6889  0316                     	;# 
  6890  0317                     	;# 
  6891  0318                     	;# 
  6892  0318                     	;# 
  6893  0319                     	;# 
  6894  031A                     	;# 
  6895  031B                     	;# 
  6896  031C                     	;# 
  6897  031C                     	;# 
  6898  031D                     	;# 
  6899  031E                     	;# 
  6900  031F                     	;# 
  6901  038C                     	;# 
  6902  038C                     	;# 
  6903  038D                     	;# 
  6904  038E                     	;# 
  6905  0390                     	;# 
  6906  0390                     	;# 
  6907  0391                     	;# 
  6908  0392                     	;# 
  6909  040C                     	;# 
  6910  040D                     	;# 
  6911  040E                     	;# 
  6912  040F                     	;# 
  6913  0410                     	;# 
  6914  0411                     	;# 
  6915  0416                     	;# 
  6916  0416                     	;# 
  6917  0417                     	;# 
  6918  0418                     	;# 
  6919  0418                     	;# 
  6920  0419                     	;# 
  6921  041A                     	;# 
  6922  041A                     	;# 
  6923  041B                     	;# 
  6924  041C                     	;# 
  6925  041C                     	;# 
  6926  041D                     	;# 
  6927  041E                     	;# 
  6928  041F                     	;# 
  6929  048C                     	;# 
  6930  048C                     	;# 
  6931  048D                     	;# 
  6932  048E                     	;# 
  6933  048F                     	;# 
  6934  048F                     	;# 
  6935  0490                     	;# 
  6936  0491                     	;# 
  6937  0492                     	;# 
  6938  0492                     	;# 
  6939  0493                     	;# 
  6940  0494                     	;# 
  6941  0495                     	;# 
  6942  0495                     	;# 
  6943  0496                     	;# 
  6944  0497                     	;# 
  6945  0498                     	;# 
  6946  0499                     	;# 
  6947  049A                     	;# 
  6948  049B                     	;# 
  6949  049C                     	;# 
  6950  049D                     	;# 
  6951  050C                     	;# 
  6952  050C                     	;# 
  6953  050D                     	;# 
  6954  050E                     	;# 
  6955  050F                     	;# 
  6956  050F                     	;# 
  6957  0510                     	;# 
  6958  0511                     	;# 
  6959  0512                     	;# 
  6960  0512                     	;# 
  6961  0513                     	;# 
  6962  0514                     	;# 
  6963  0515                     	;# 
  6964  0515                     	;# 
  6965  0516                     	;# 
  6966  0517                     	;# 
  6967  0518                     	;# 
  6968  0519                     	;# 
  6969  051A                     	;# 
  6970  051B                     	;# 
  6971  051C                     	;# 
  6972  051D                     	;# 
  6973  058C                     	;# 
  6974  058C                     	;# 
  6975  058D                     	;# 
  6976  058E                     	;# 
  6977  058F                     	;# 
  6978  058F                     	;# 
  6979  0590                     	;# 
  6980  0591                     	;# 
  6981  0592                     	;# 
  6982  0593                     	;# 
  6983  060C                     	;# 
  6984  060D                     	;# 
  6985  060E                     	;# 
  6986  060F                     	;# 
  6987  0610                     	;# 
  6988  0611                     	;# 
  6989  0612                     	;# 
  6990  0613                     	;# 
  6991  0614                     	;# 
  6992  0616                     	;# 
  6993  0617                     	;# 
  6994  0618                     	;# 
  6995  0619                     	;# 
  6996  061A                     	;# 
  6997  061B                     	;# 
  6998  061C                     	;# 
  6999  061D                     	;# 
  7000  061E                     	;# 
  7001  068C                     	;# 
  7002  068D                     	;# 
  7003  068E                     	;# 
  7004  068F                     	;# 
  7005  0690                     	;# 
  7006  0691                     	;# 
  7007  0692                     	;# 
  7008  0693                     	;# 
  7009  0694                     	;# 
  7010  070C                     	;# 
  7011  070D                     	;# 
  7012  070E                     	;# 
  7013  070F                     	;# 
  7014  0710                     	;# 
  7015  0711                     	;# 
  7016  0712                     	;# 
  7017  0713                     	;# 
  7018  0714                     	;# 
  7019  0716                     	;# 
  7020  0717                     	;# 
  7021  0718                     	;# 
  7022  0719                     	;# 
  7023  071A                     	;# 
  7024  071B                     	;# 
  7025  071C                     	;# 
  7026  071D                     	;# 
  7027  071E                     	;# 
  7028  0796                     	;# 
  7029  0797                     	;# 
  7030  0798                     	;# 
  7031  0799                     	;# 
  7032  079A                     	;# 
  7033  079B                     	;# 
  7034  080C                     	;# 
  7035  080D                     	;# 
  7036  080E                     	;# 
  7037  080F                     	;# 
  7038  0810                     	;# 
  7039  0811                     	;# 
  7040  0812                     	;# 
  7041  0813                     	;# 
  7042  0814                     	;# 
  7043  081A                     	;# 
  7044  081B                     	;# 
  7045  081C                     	;# 
  7046  081D                     	;# 
  7047  081E                     	;# 
  7048  081F                     	;# 
  7049  088C                     	;# 
  7050  088D                     	;# 
  7051  088E                     	;# 
  7052  088F                     	;# 
  7053  0890                     	;# 
  7054  0891                     	;# 
  7055  0892                     	;# 
  7056  0893                     	;# 
  7057  0895                     	;# 
  7058  0896                     	;# 
  7059  0897                     	;# 
  7060  0898                     	;# 
  7061  0899                     	;# 
  7062  089A                     	;# 
  7063  089B                     	;# 
  7064  090C                     	;# 
  7065  090E                     	;# 
  7066  090F                     	;# 
  7067  091F                     	;# 
  7068  091F                     	;# 
  7069  098F                     	;# 
  7070  098F                     	;# 
  7071  0990                     	;# 
  7072  0991                     	;# 
  7073  0992                     	;# 
  7074  0993                     	;# 
  7075  0994                     	;# 
  7076  0995                     	;# 
  7077  0996                     	;# 
  7078  0997                     	;# 
  7079  0E0F                     	;# 
  7080  0E10                     	;# 
  7081  0E11                     	;# 
  7082  0E12                     	;# 
  7083  0E13                     	;# 
  7084  0E14                     	;# 
  7085  0E15                     	;# 
  7086  0E16                     	;# 
  7087  0E17                     	;# 
  7088  0E18                     	;# 
  7089  0E19                     	;# 
  7090  0E1A                     	;# 
  7091  0E1B                     	;# 
  7092  0E1C                     	;# 
  7093  0E1D                     	;# 
  7094  0E1E                     	;# 
  7095  0E1F                     	;# 
  7096  0E20                     	;# 
  7097  0E21                     	;# 
  7098  0E22                     	;# 
  7099  0E23                     	;# 
  7100  0E24                     	;# 
  7101  0E25                     	;# 
  7102  0E26                     	;# 
  7103  0E27                     	;# 
  7104  0E28                     	;# 
  7105  0E29                     	;# 
  7106  0E2A                     	;# 
  7107  0E2B                     	;# 
  7108  0E2C                     	;# 
  7109  0E2D                     	;# 
  7110  0E2E                     	;# 
  7111  0E2F                     	;# 
  7112  0E30                     	;# 
  7113  0E31                     	;# 
  7114  0E32                     	;# 
  7115  0E33                     	;# 
  7116  0E34                     	;# 
  7117  0E35                     	;# 
  7118  0E36                     	;# 
  7119  0E37                     	;# 
  7120  0E8F                     	;# 
  7121  0E90                     	;# 
  7122  0E91                     	;# 
  7123  0E92                     	;# 
  7124  0E93                     	;# 
  7125  0E94                     	;# 
  7126  0E95                     	;# 
  7127  0E96                     	;# 
  7128  0E97                     	;# 
  7129  0E9C                     	;# 
  7130  0E9D                     	;# 
  7131  0E9E                     	;# 
  7132  0EA1                     	;# 
  7133  0EA2                     	;# 
  7134  0EA3                     	;# 
  7135  0EA4                     	;# 
  7136  0EA5                     	;# 
  7137  0EA9                     	;# 
  7138  0EAA                     	;# 
  7139  0EAB                     	;# 
  7140  0EAC                     	;# 
  7141  0EB1                     	;# 
  7142  0EB2                     	;# 
  7143  0EB3                     	;# 
  7144  0EB8                     	;# 
  7145  0EB9                     	;# 
  7146  0EBA                     	;# 
  7147  0EBB                     	;# 
  7148  0EBC                     	;# 
  7149  0EBD                     	;# 
  7150  0EBE                     	;# 
  7151  0EC3                     	;# 
  7152  0EC5                     	;# 
  7153  0EC6                     	;# 
  7154  0EC7                     	;# 
  7155  0EC8                     	;# 
  7156  0EC9                     	;# 
  7157  0ECA                     	;# 
  7158  0ECB                     	;# 
  7159  0ECC                     	;# 
  7160  0F10                     	;# 
  7161  0F11                     	;# 
  7162  0F12                     	;# 
  7163  0F13                     	;# 
  7164  0F14                     	;# 
  7165  0F15                     	;# 
  7166  0F16                     	;# 
  7167  0F17                     	;# 
  7168  0F18                     	;# 
  7169  0F19                     	;# 
  7170  0F1A                     	;# 
  7171  0F1B                     	;# 
  7172  0F1C                     	;# 
  7173  0F1D                     	;# 
  7174  0F1E                     	;# 
  7175  0F1F                     	;# 
  7176  0F20                     	;# 
  7177  0F21                     	;# 
  7178  0F22                     	;# 
  7179  0F23                     	;# 
  7180  0F24                     	;# 
  7181  0F25                     	;# 
  7182  0F26                     	;# 
  7183  0F27                     	;# 
  7184  0F28                     	;# 
  7185  0F29                     	;# 
  7186  0F2A                     	;# 
  7187  0F2B                     	;# 
  7188  0F2C                     	;# 
  7189  0F2D                     	;# 
  7190  0F2E                     	;# 
  7191  0F2F                     	;# 
  7192  0F30                     	;# 
  7193  0F31                     	;# 
  7194  0F32                     	;# 
  7195  0F38                     	;# 
  7196  0F39                     	;# 
  7197  0F3A                     	;# 
  7198  0F3B                     	;# 
  7199  0F3C                     	;# 
  7200  0F3D                     	;# 
  7201  0F3E                     	;# 
  7202  0F3F                     	;# 
  7203  0F40                     	;# 
  7204  0F41                     	;# 
  7205  0F43                     	;# 
  7206  0F44                     	;# 
  7207  0F45                     	;# 
  7208  0F46                     	;# 
  7209  0F47                     	;# 
  7210  0F48                     	;# 
  7211  0F49                     	;# 
  7212  0F4A                     	;# 
  7213  0F4B                     	;# 
  7214  0F4C                     	;# 
  7215  0F4E                     	;# 
  7216  0F4F                     	;# 
  7217  0F50                     	;# 
  7218  0F51                     	;# 
  7219  0F52                     	;# 
  7220  0F53                     	;# 
  7221  0F54                     	;# 
  7222  0F55                     	;# 
  7223  0F56                     	;# 
  7224  0F57                     	;# 
  7225  0F59                     	;# 
  7226  0F5A                     	;# 
  7227  0F5B                     	;# 
  7228  0F5C                     	;# 
  7229  0F5D                     	;# 
  7230  0F61                     	;# 
  7231  0F62                     	;# 
  7232  0F64                     	;# 
  7233  0F65                     	;# 
  7234  0F66                     	;# 
  7235  0F67                     	;# 
  7236  0F68                     	;# 
  7237  0F69                     	;# 
  7238  0F6A                     	;# 
  7239  0F6B                     	;# 
  7240  0F6C                     	;# 
  7241  0F6D                     	;# 
  7242  0FE4                     	;# 
  7243  0FE5                     	;# 
  7244  0FE6                     	;# 
  7245  0FE7                     	;# 
  7246  0FE8                     	;# 
  7247  0FE9                     	;# 
  7248  0FEA                     	;# 
  7249  0FEB                     	;# 
  7250  0FED                     	;# 
  7251  0FEE                     	;# 
  7252  0FEF                     	;# 
  7253  0000                     	;# 
  7254  0001                     	;# 
  7255  0002                     	;# 
  7256  0003                     	;# 
  7257  0004                     	;# 
  7258  0005                     	;# 
  7259  0006                     	;# 
  7260  0007                     	;# 
  7261  0008                     	;# 
  7262  0009                     	;# 
  7263  000A                     	;# 
  7264  000B                     	;# 
  7265  000C                     	;# 
  7266  000D                     	;# 
  7267  000E                     	;# 
  7268  000F                     	;# 
  7269  0010                     	;# 
  7270  0011                     	;# 
  7271  0012                     	;# 
  7272  0013                     	;# 
  7273  0014                     	;# 
  7274  0015                     	;# 
  7275  0016                     	;# 
  7276  0017                     	;# 
  7277  0018                     	;# 
  7278  0019                     	;# 
  7279  001A                     	;# 
  7280  001C                     	;# 
  7281  001C                     	;# 
  7282  001D                     	;# 
  7283  001D                     	;# 
  7284  001E                     	;# 
  7285  001F                     	;# 
  7286  008C                     	;# 
  7287  008C                     	;# 
  7288  008D                     	;# 
  7289  008E                     	;# 
  7290  008E                     	;# 
  7291  008F                     	;# 
  7292  0090                     	;# 
  7293  0090                     	;# 
  7294  0091                     	;# 
  7295  0093                     	;# 
  7296  0094                     	;# 
  7297  0095                     	;# 
  7298  0096                     	;# 
  7299  0097                     	;# 
  7300  0098                     	;# 
  7301  0099                     	;# 
  7302  009A                     	;# 
  7303  009B                     	;# 
  7304  009C                     	;# 
  7305  009D                     	;# 
  7306  009E                     	;# 
  7307  010C                     	;# 
  7308  010D                     	;# 
  7309  010E                     	;# 
  7310  010E                     	;# 
  7311  010F                     	;# 
  7312  0110                     	;# 
  7313  0110                     	;# 
  7314  0111                     	;# 
  7315  0112                     	;# 
  7316  0112                     	;# 
  7317  0113                     	;# 
  7318  0114                     	;# 
  7319  0114                     	;# 
  7320  0115                     	;# 
  7321  0116                     	;# 
  7322  0116                     	;# 
  7323  0117                     	;# 
  7324  0119                     	;# 
  7325  0119                     	;# 
  7326  0119                     	;# 
  7327  011A                     	;# 
  7328  011A                     	;# 
  7329  011A                     	;# 
  7330  011B                     	;# 
  7331  011B                     	;# 
  7332  011B                     	;# 
  7333  011B                     	;# 
  7334  011B                     	;# 
  7335  011C                     	;# 
  7336  011C                     	;# 
  7337  011C                     	;# 
  7338  011D                     	;# 
  7339  011D                     	;# 
  7340  011D                     	;# 
  7341  011E                     	;# 
  7342  011E                     	;# 
  7343  011E                     	;# 
  7344  011F                     	;# 
  7345  011F                     	;# 
  7346  011F                     	;# 
  7347  011F                     	;# 
  7348  011F                     	;# 
  7349  018C                     	;# 
  7350  018D                     	;# 
  7351  018E                     	;# 
  7352  018F                     	;# 
  7353  0190                     	;# 
  7354  0191                     	;# 
  7355  0192                     	;# 
  7356  0196                     	;# 
  7357  0197                     	;# 
  7358  0198                     	;# 
  7359  0199                     	;# 
  7360  019A                     	;# 
  7361  019B                     	;# 
  7362  019C                     	;# 
  7363  020C                     	;# 
  7364  020C                     	;# 
  7365  020D                     	;# 
  7366  020E                     	;# 
  7367  020F                     	;# 
  7368  020F                     	;# 
  7369  0210                     	;# 
  7370  0210                     	;# 
  7371  0211                     	;# 
  7372  0211                     	;# 
  7373  0212                     	;# 
  7374  0212                     	;# 
  7375  0213                     	;# 
  7376  0214                     	;# 
  7377  0215                     	;# 
  7378  0215                     	;# 
  7379  0216                     	;# 
  7380  0216                     	;# 
  7381  0217                     	;# 
  7382  0217                     	;# 
  7383  0218                     	;# 
  7384  0218                     	;# 
  7385  0219                     	;# 
  7386  021A                     	;# 
  7387  021B                     	;# 
  7388  021B                     	;# 
  7389  021C                     	;# 
  7390  021C                     	;# 
  7391  021D                     	;# 
  7392  021D                     	;# 
  7393  021E                     	;# 
  7394  021F                     	;# 
  7395  028C                     	;# 
  7396  028C                     	;# 
  7397  028D                     	;# 
  7398  028D                     	;# 
  7399  028E                     	;# 
  7400  028F                     	;# 
  7401  0290                     	;# 
  7402  0290                     	;# 
  7403  0291                     	;# 
  7404  0292                     	;# 
  7405  0292                     	;# 
  7406  0293                     	;# 
  7407  0293                     	;# 
  7408  0294                     	;# 
  7409  0295                     	;# 
  7410  0296                     	;# 
  7411  0296                     	;# 
  7412  0297                     	;# 
  7413  0298                     	;# 
  7414  0298                     	;# 
  7415  0299                     	;# 
  7416  0299                     	;# 
  7417  029A                     	;# 
  7418  029B                     	;# 
  7419  029C                     	;# 
  7420  029C                     	;# 
  7421  029D                     	;# 
  7422  030C                     	;# 
  7423  030C                     	;# 
  7424  030D                     	;# 
  7425  030E                     	;# 
  7426  030F                     	;# 
  7427  0310                     	;# 
  7428  0310                     	;# 
  7429  0311                     	;# 
  7430  0312                     	;# 
  7431  0313                     	;# 
  7432  0314                     	;# 
  7433  0314                     	;# 
  7434  0315                     	;# 
  7435  0316                     	;# 
  7436  0317                     	;# 
  7437  0318                     	;# 
  7438  0318                     	;# 
  7439  0319                     	;# 
  7440  031A                     	;# 
  7441  031B                     	;# 
  7442  031C                     	;# 
  7443  031C                     	;# 
  7444  031D                     	;# 
  7445  031E                     	;# 
  7446  031F                     	;# 
  7447  038C                     	;# 
  7448  038C                     	;# 
  7449  038D                     	;# 
  7450  038E                     	;# 
  7451  0390                     	;# 
  7452  0390                     	;# 
  7453  0391                     	;# 
  7454  0392                     	;# 
  7455  040C                     	;# 
  7456  040D                     	;# 
  7457  040E                     	;# 
  7458  040F                     	;# 
  7459  0410                     	;# 
  7460  0411                     	;# 
  7461  0416                     	;# 
  7462  0416                     	;# 
  7463  0417                     	;# 
  7464  0418                     	;# 
  7465  0418                     	;# 
  7466  0419                     	;# 
  7467  041A                     	;# 
  7468  041A                     	;# 
  7469  041B                     	;# 
  7470  041C                     	;# 
  7471  041C                     	;# 
  7472  041D                     	;# 
  7473  041E                     	;# 
  7474  041F                     	;# 
  7475  048C                     	;# 
  7476  048C                     	;# 
  7477  048D                     	;# 
  7478  048E                     	;# 
  7479  048F                     	;# 
  7480  048F                     	;# 
  7481  0490                     	;# 
  7482  0491                     	;# 
  7483  0492                     	;# 
  7484  0492                     	;# 
  7485  0493                     	;# 
  7486  0494                     	;# 
  7487  0495                     	;# 
  7488  0495                     	;# 
  7489  0496                     	;# 
  7490  0497                     	;# 
  7491  0498                     	;# 
  7492  0499                     	;# 
  7493  049A                     	;# 
  7494  049B                     	;# 
  7495  049C                     	;# 
  7496  049D                     	;# 
  7497  050C                     	;# 
  7498  050C                     	;# 
  7499  050D                     	;# 
  7500  050E                     	;# 
  7501  050F                     	;# 
  7502  050F                     	;# 
  7503  0510                     	;# 
  7504  0511                     	;# 
  7505  0512                     	;# 
  7506  0512                     	;# 
  7507  0513                     	;# 
  7508  0514                     	;# 
  7509  0515                     	;# 
  7510  0515                     	;# 
  7511  0516                     	;# 
  7512  0517                     	;# 
  7513  0518                     	;# 
  7514  0519                     	;# 
  7515  051A                     	;# 
  7516  051B                     	;# 
  7517  051C                     	;# 
  7518  051D                     	;# 
  7519  058C                     	;# 
  7520  058C                     	;# 
  7521  058D                     	;# 
  7522  058E                     	;# 
  7523  058F                     	;# 
  7524  058F                     	;# 
  7525  0590                     	;# 
  7526  0591                     	;# 
  7527  0592                     	;# 
  7528  0593                     	;# 
  7529  060C                     	;# 
  7530  060D                     	;# 
  7531  060E                     	;# 
  7532  060F                     	;# 
  7533  0610                     	;# 
  7534  0611                     	;# 
  7535  0612                     	;# 
  7536  0613                     	;# 
  7537  0614                     	;# 
  7538  0616                     	;# 
  7539  0617                     	;# 
  7540  0618                     	;# 
  7541  0619                     	;# 
  7542  061A                     	;# 
  7543  061B                     	;# 
  7544  061C                     	;# 
  7545  061D                     	;# 
  7546  061E                     	;# 
  7547  068C                     	;# 
  7548  068D                     	;# 
  7549  068E                     	;# 
  7550  068F                     	;# 
  7551  0690                     	;# 
  7552  0691                     	;# 
  7553  0692                     	;# 
  7554  0693                     	;# 
  7555  0694                     	;# 
  7556  070C                     	;# 
  7557  070D                     	;# 
  7558  070E                     	;# 
  7559  070F                     	;# 
  7560  0710                     	;# 
  7561  0711                     	;# 
  7562  0712                     	;# 
  7563  0713                     	;# 
  7564  0714                     	;# 
  7565  0716                     	;# 
  7566  0717                     	;# 
  7567  0718                     	;# 
  7568  0719                     	;# 
  7569  071A                     	;# 
  7570  071B                     	;# 
  7571  071C                     	;# 
  7572  071D                     	;# 
  7573  071E                     	;# 
  7574  0796                     	;# 
  7575  0797                     	;# 
  7576  0798                     	;# 
  7577  0799                     	;# 
  7578  079A                     	;# 
  7579  079B                     	;# 
  7580  080C                     	;# 
  7581  080D                     	;# 
  7582  080E                     	;# 
  7583  080F                     	;# 
  7584  0810                     	;# 
  7585  0811                     	;# 
  7586  0812                     	;# 
  7587  0813                     	;# 
  7588  0814                     	;# 
  7589  081A                     	;# 
  7590  081B                     	;# 
  7591  081C                     	;# 
  7592  081D                     	;# 
  7593  081E                     	;# 
  7594  081F                     	;# 
  7595  088C                     	;# 
  7596  088D                     	;# 
  7597  088E                     	;# 
  7598  088F                     	;# 
  7599  0890                     	;# 
  7600  0891                     	;# 
  7601  0892                     	;# 
  7602  0893                     	;# 
  7603  0895                     	;# 
  7604  0896                     	;# 
  7605  0897                     	;# 
  7606  0898                     	;# 
  7607  0899                     	;# 
  7608  089A                     	;# 
  7609  089B                     	;# 
  7610  090C                     	;# 
  7611  090E                     	;# 
  7612  090F                     	;# 
  7613  091F                     	;# 
  7614  091F                     	;# 
  7615  098F                     	;# 
  7616  098F                     	;# 
  7617  0990                     	;# 
  7618  0991                     	;# 
  7619  0992                     	;# 
  7620  0993                     	;# 
  7621  0994                     	;# 
  7622  0995                     	;# 
  7623  0996                     	;# 
  7624  0997                     	;# 
  7625  0E0F                     	;# 
  7626  0E10                     	;# 
  7627  0E11                     	;# 
  7628  0E12                     	;# 
  7629  0E13                     	;# 
  7630  0E14                     	;# 
  7631  0E15                     	;# 
  7632  0E16                     	;# 
  7633  0E17                     	;# 
  7634  0E18                     	;# 
  7635  0E19                     	;# 
  7636  0E1A                     	;# 
  7637  0E1B                     	;# 
  7638  0E1C                     	;# 
  7639  0E1D                     	;# 
  7640  0E1E                     	;# 
  7641  0E1F                     	;# 
  7642  0E20                     	;# 
  7643  0E21                     	;# 
  7644  0E22                     	;# 
  7645  0E23                     	;# 
  7646  0E24                     	;# 
  7647  0E25                     	;# 
  7648  0E26                     	;# 
  7649  0E27                     	;# 
  7650  0E28                     	;# 
  7651  0E29                     	;# 
  7652  0E2A                     	;# 
  7653  0E2B                     	;# 
  7654  0E2C                     	;# 
  7655  0E2D                     	;# 
  7656  0E2E                     	;# 
  7657  0E2F                     	;# 
  7658  0E30                     	;# 
  7659  0E31                     	;# 
  7660  0E32                     	;# 
  7661  0E33                     	;# 
  7662  0E34                     	;# 
  7663  0E35                     	;# 
  7664  0E36                     	;# 
  7665  0E37                     	;# 
  7666  0E8F                     	;# 
  7667  0E90                     	;# 
  7668  0E91                     	;# 
  7669  0E92                     	;# 
  7670  0E93                     	;# 
  7671  0E94                     	;# 
  7672  0E95                     	;# 
  7673  0E96                     	;# 
  7674  0E97                     	;# 
  7675  0E9C                     	;# 
  7676  0E9D                     	;# 
  7677  0E9E                     	;# 
  7678  0EA1                     	;# 
  7679  0EA2                     	;# 
  7680  0EA3                     	;# 
  7681  0EA4                     	;# 
  7682  0EA5                     	;# 
  7683  0EA9                     	;# 
  7684  0EAA                     	;# 
  7685  0EAB                     	;# 
  7686  0EAC                     	;# 
  7687  0EB1                     	;# 
  7688  0EB2                     	;# 
  7689  0EB3                     	;# 
  7690  0EB8                     	;# 
  7691  0EB9                     	;# 
  7692  0EBA                     	;# 
  7693  0EBB                     	;# 
  7694  0EBC                     	;# 
  7695  0EBD                     	;# 
  7696  0EBE                     	;# 
  7697  0EC3                     	;# 
  7698  0EC5                     	;# 
  7699  0EC6                     	;# 
  7700  0EC7                     	;# 
  7701  0EC8                     	;# 
  7702  0EC9                     	;# 
  7703  0ECA                     	;# 
  7704  0ECB                     	;# 
  7705  0ECC                     	;# 
  7706  0F10                     	;# 
  7707  0F11                     	;# 
  7708  0F12                     	;# 
  7709  0F13                     	;# 
  7710  0F14                     	;# 
  7711  0F15                     	;# 
  7712  0F16                     	;# 
  7713  0F17                     	;# 
  7714  0F18                     	;# 
  7715  0F19                     	;# 
  7716  0F1A                     	;# 
  7717  0F1B                     	;# 
  7718  0F1C                     	;# 
  7719  0F1D                     	;# 
  7720  0F1E                     	;# 
  7721  0F1F                     	;# 
  7722  0F20                     	;# 
  7723  0F21                     	;# 
  7724  0F22                     	;# 
  7725  0F23                     	;# 
  7726  0F24                     	;# 
  7727  0F25                     	;# 
  7728  0F26                     	;# 
  7729  0F27                     	;# 
  7730  0F28                     	;# 
  7731  0F29                     	;# 
  7732  0F2A                     	;# 
  7733  0F2B                     	;# 
  7734  0F2C                     	;# 
  7735  0F2D                     	;# 
  7736  0F2E                     	;# 
  7737  0F2F                     	;# 
  7738  0F30                     	;# 
  7739  0F31                     	;# 
  7740  0F32                     	;# 
  7741  0F38                     	;# 
  7742  0F39                     	;# 
  7743  0F3A                     	;# 
  7744  0F3B                     	;# 
  7745  0F3C                     	;# 
  7746  0F3D                     	;# 
  7747  0F3E                     	;# 
  7748  0F3F                     	;# 
  7749  0F40                     	;# 
  7750  0F41                     	;# 
  7751  0F43                     	;# 
  7752  0F44                     	;# 
  7753  0F45                     	;# 
  7754  0F46                     	;# 
  7755  0F47                     	;# 
  7756  0F48                     	;# 
  7757  0F49                     	;# 
  7758  0F4A                     	;# 
  7759  0F4B                     	;# 
  7760  0F4C                     	;# 
  7761  0F4E                     	;# 
  7762  0F4F                     	;# 
  7763  0F50                     	;# 
  7764  0F51                     	;# 
  7765  0F52                     	;# 
  7766  0F53                     	;# 
  7767  0F54                     	;# 
  7768  0F55                     	;# 
  7769  0F56                     	;# 
  7770  0F57                     	;# 
  7771  0F59                     	;# 
  7772  0F5A                     	;# 
  7773  0F5B                     	;# 
  7774  0F5C                     	;# 
  7775  0F5D                     	;# 
  7776  0F61                     	;# 
  7777  0F62                     	;# 
  7778  0F64                     	;# 
  7779  0F65                     	;# 
  7780  0F66                     	;# 
  7781  0F67                     	;# 
  7782  0F68                     	;# 
  7783  0F69                     	;# 
  7784  0F6A                     	;# 
  7785  0F6B                     	;# 
  7786  0F6C                     	;# 
  7787  0F6D                     	;# 
  7788  0FE4                     	;# 
  7789  0FE5                     	;# 
  7790  0FE6                     	;# 
  7791  0FE7                     	;# 
  7792  0FE8                     	;# 
  7793  0FE9                     	;# 
  7794  0FEA                     	;# 
  7795  0FEB                     	;# 
  7796  0FED                     	;# 
  7797  0FEE                     	;# 
  7798  0FEF                     	;# 
  7799  0000                     	;# 
  7800  0001                     	;# 
  7801  0002                     	;# 
  7802  0003                     	;# 
  7803  0004                     	;# 
  7804  0005                     	;# 
  7805  0006                     	;# 
  7806  0007                     	;# 
  7807  0008                     	;# 
  7808  0009                     	;# 
  7809  000A                     	;# 
  7810  000B                     	;# 
  7811  000C                     	;# 
  7812  000D                     	;# 
  7813  000E                     	;# 
  7814  000F                     	;# 
  7815  0010                     	;# 
  7816  0011                     	;# 
  7817  0012                     	;# 
  7818  0013                     	;# 
  7819  0014                     	;# 
  7820  0015                     	;# 
  7821  0016                     	;# 
  7822  0017                     	;# 
  7823  0018                     	;# 
  7824  0019                     	;# 
  7825  001A                     	;# 
  7826  001C                     	;# 
  7827  001C                     	;# 
  7828  001D                     	;# 
  7829  001D                     	;# 
  7830  001E                     	;# 
  7831  001F                     	;# 
  7832  008C                     	;# 
  7833  008C                     	;# 
  7834  008D                     	;# 
  7835  008E                     	;# 
  7836  008E                     	;# 
  7837  008F                     	;# 
  7838  0090                     	;# 
  7839  0090                     	;# 
  7840  0091                     	;# 
  7841  0093                     	;# 
  7842  0094                     	;# 
  7843  0095                     	;# 
  7844  0096                     	;# 
  7845  0097                     	;# 
  7846  0098                     	;# 
  7847  0099                     	;# 
  7848  009A                     	;# 
  7849  009B                     	;# 
  7850  009C                     	;# 
  7851  009D                     	;# 
  7852  009E                     	;# 
  7853  010C                     	;# 
  7854  010D                     	;# 
  7855  010E                     	;# 
  7856  010E                     	;# 
  7857  010F                     	;# 
  7858  0110                     	;# 
  7859  0110                     	;# 
  7860  0111                     	;# 
  7861  0112                     	;# 
  7862  0112                     	;# 
  7863  0113                     	;# 
  7864  0114                     	;# 
  7865  0114                     	;# 
  7866  0115                     	;# 
  7867  0116                     	;# 
  7868  0116                     	;# 
  7869  0117                     	;# 
  7870  0119                     	;# 
  7871  0119                     	;# 
  7872  0119                     	;# 
  7873  011A                     	;# 
  7874  011A                     	;# 
  7875  011A                     	;# 
  7876  011B                     	;# 
  7877  011B                     	;# 
  7878  011B                     	;# 
  7879  011B                     	;# 
  7880  011B                     	;# 
  7881  011C                     	;# 
  7882  011C                     	;# 
  7883  011C                     	;# 
  7884  011D                     	;# 
  7885  011D                     	;# 
  7886  011D                     	;# 
  7887  011E                     	;# 
  7888  011E                     	;# 
  7889  011E                     	;# 
  7890  011F                     	;# 
  7891  011F                     	;# 
  7892  011F                     	;# 
  7893  011F                     	;# 
  7894  011F                     	;# 
  7895  018C                     	;# 
  7896  018D                     	;# 
  7897  018E                     	;# 
  7898  018F                     	;# 
  7899  0190                     	;# 
  7900  0191                     	;# 
  7901  0192                     	;# 
  7902  0196                     	;# 
  7903  0197                     	;# 
  7904  0198                     	;# 
  7905  0199                     	;# 
  7906  019A                     	;# 
  7907  019B                     	;# 
  7908  019C                     	;# 
  7909  020C                     	;# 
  7910  020C                     	;# 
  7911  020D                     	;# 
  7912  020E                     	;# 
  7913  020F                     	;# 
  7914  020F                     	;# 
  7915  0210                     	;# 
  7916  0210                     	;# 
  7917  0211                     	;# 
  7918  0211                     	;# 
  7919  0212                     	;# 
  7920  0212                     	;# 
  7921  0213                     	;# 
  7922  0214                     	;# 
  7923  0215                     	;# 
  7924  0215                     	;# 
  7925  0216                     	;# 
  7926  0216                     	;# 
  7927  0217                     	;# 
  7928  0217                     	;# 
  7929  0218                     	;# 
  7930  0218                     	;# 
  7931  0219                     	;# 
  7932  021A                     	;# 
  7933  021B                     	;# 
  7934  021B                     	;# 
  7935  021C                     	;# 
  7936  021C                     	;# 
  7937  021D                     	;# 
  7938  021D                     	;# 
  7939  021E                     	;# 
  7940  021F                     	;# 
  7941  028C                     	;# 
  7942  028C                     	;# 
  7943  028D                     	;# 
  7944  028D                     	;# 
  7945  028E                     	;# 
  7946  028F                     	;# 
  7947  0290                     	;# 
  7948  0290                     	;# 
  7949  0291                     	;# 
  7950  0292                     	;# 
  7951  0292                     	;# 
  7952  0293                     	;# 
  7953  0293                     	;# 
  7954  0294                     	;# 
  7955  0295                     	;# 
  7956  0296                     	;# 
  7957  0296                     	;# 
  7958  0297                     	;# 
  7959  0298                     	;# 
  7960  0298                     	;# 
  7961  0299                     	;# 
  7962  0299                     	;# 
  7963  029A                     	;# 
  7964  029B                     	;# 
  7965  029C                     	;# 
  7966  029C                     	;# 
  7967  029D                     	;# 
  7968  030C                     	;# 
  7969  030C                     	;# 
  7970  030D                     	;# 
  7971  030E                     	;# 
  7972  030F                     	;# 
  7973  0310                     	;# 
  7974  0310                     	;# 
  7975  0311                     	;# 
  7976  0312                     	;# 
  7977  0313                     	;# 
  7978  0314                     	;# 
  7979  0314                     	;# 
  7980  0315                     	;# 
  7981  0316                     	;# 
  7982  0317                     	;# 
  7983  0318                     	;# 
  7984  0318                     	;# 
  7985  0319                     	;# 
  7986  031A                     	;# 
  7987  031B                     	;# 
  7988  031C                     	;# 
  7989  031C                     	;# 
  7990  031D                     	;# 
  7991  031E                     	;# 
  7992  031F                     	;# 
  7993  038C                     	;# 
  7994  038C                     	;# 
  7995  038D                     	;# 
  7996  038E                     	;# 
  7997  0390                     	;# 
  7998  0390                     	;# 
  7999  0391                     	;# 
  8000  0392                     	;# 
  8001  040C                     	;# 
  8002  040D                     	;# 
  8003  040E                     	;# 
  8004  040F                     	;# 
  8005  0410                     	;# 
  8006  0411                     	;# 
  8007  0416                     	;# 
  8008  0416                     	;# 
  8009  0417                     	;# 
  8010  0418                     	;# 
  8011  0418                     	;# 
  8012  0419                     	;# 
  8013  041A                     	;# 
  8014  041A                     	;# 
  8015  041B                     	;# 
  8016  041C                     	;# 
  8017  041C                     	;# 
  8018  041D                     	;# 
  8019  041E                     	;# 
  8020  041F                     	;# 
  8021  048C                     	;# 
  8022  048C                     	;# 
  8023  048D                     	;# 
  8024  048E                     	;# 
  8025  048F                     	;# 
  8026  048F                     	;# 
  8027  0490                     	;# 
  8028  0491                     	;# 
  8029  0492                     	;# 
  8030  0492                     	;# 
  8031  0493                     	;# 
  8032  0494                     	;# 
  8033  0495                     	;# 
  8034  0495                     	;# 
  8035  0496                     	;# 
  8036  0497                     	;# 
  8037  0498                     	;# 
  8038  0499                     	;# 
  8039  049A                     	;# 
  8040  049B                     	;# 
  8041  049C                     	;# 
  8042  049D                     	;# 
  8043  050C                     	;# 
  8044  050C                     	;# 
  8045  050D                     	;# 
  8046  050E                     	;# 
  8047  050F                     	;# 
  8048  050F                     	;# 
  8049  0510                     	;# 
  8050  0511                     	;# 
  8051  0512                     	;# 
  8052  0512                     	;# 
  8053  0513                     	;# 
  8054  0514                     	;# 
  8055  0515                     	;# 
  8056  0515                     	;# 
  8057  0516                     	;# 
  8058  0517                     	;# 
  8059  0518                     	;# 
  8060  0519                     	;# 
  8061  051A                     	;# 
  8062  051B                     	;# 
  8063  051C                     	;# 
  8064  051D                     	;# 
  8065  058C                     	;# 
  8066  058C                     	;# 
  8067  058D                     	;# 
  8068  058E                     	;# 
  8069  058F                     	;# 
  8070  058F                     	;# 
  8071  0590                     	;# 
  8072  0591                     	;# 
  8073  0592                     	;# 
  8074  0593                     	;# 
  8075  060C                     	;# 
  8076  060D                     	;# 
  8077  060E                     	;# 
  8078  060F                     	;# 
  8079  0610                     	;# 
  8080  0611                     	;# 
  8081  0612                     	;# 
  8082  0613                     	;# 
  8083  0614                     	;# 
  8084  0616                     	;# 
  8085  0617                     	;# 
  8086  0618                     	;# 
  8087  0619                     	;# 
  8088  061A                     	;# 
  8089  061B                     	;# 
  8090  061C                     	;# 
  8091  061D                     	;# 
  8092  061E                     	;# 
  8093  068C                     	;# 
  8094  068D                     	;# 
  8095  068E                     	;# 
  8096  068F                     	;# 
  8097  0690                     	;# 
  8098  0691                     	;# 
  8099  0692                     	;# 
  8100  0693                     	;# 
  8101  0694                     	;# 
  8102  070C                     	;# 
  8103  070D                     	;# 
  8104  070E                     	;# 
  8105  070F                     	;# 
  8106  0710                     	;# 
  8107  0711                     	;# 
  8108  0712                     	;# 
  8109  0713                     	;# 
  8110  0714                     	;# 
  8111  0716                     	;# 
  8112  0717                     	;# 
  8113  0718                     	;# 
  8114  0719                     	;# 
  8115  071A                     	;# 
  8116  071B                     	;# 
  8117  071C                     	;# 
  8118  071D                     	;# 
  8119  071E                     	;# 
  8120  0796                     	;# 
  8121  0797                     	;# 
  8122  0798                     	;# 
  8123  0799                     	;# 
  8124  079A                     	;# 
  8125  079B                     	;# 
  8126  080C                     	;# 
  8127  080D                     	;# 
  8128  080E                     	;# 
  8129  080F                     	;# 
  8130  0810                     	;# 
  8131  0811                     	;# 
  8132  0812                     	;# 
  8133  0813                     	;# 
  8134  0814                     	;# 
  8135  081A                     	;# 
  8136  081B                     	;# 
  8137  081C                     	;# 
  8138  081D                     	;# 
  8139  081E                     	;# 
  8140  081F                     	;# 
  8141  088C                     	;# 
  8142  088D                     	;# 
  8143  088E                     	;# 
  8144  088F                     	;# 
  8145  0890                     	;# 
  8146  0891                     	;# 
  8147  0892                     	;# 
  8148  0893                     	;# 
  8149  0895                     	;# 
  8150  0896                     	;# 
  8151  0897                     	;# 
  8152  0898                     	;# 
  8153  0899                     	;# 
  8154  089A                     	;# 
  8155  089B                     	;# 
  8156  090C                     	;# 
  8157  090E                     	;# 
  8158  090F                     	;# 
  8159  091F                     	;# 
  8160  091F                     	;# 
  8161  098F                     	;# 
  8162  098F                     	;# 
  8163  0990                     	;# 
  8164  0991                     	;# 
  8165  0992                     	;# 
  8166  0993                     	;# 
  8167  0994                     	;# 
  8168  0995                     	;# 
  8169  0996                     	;# 
  8170  0997                     	;# 
  8171  0E0F                     	;# 
  8172  0E10                     	;# 
  8173  0E11                     	;# 
  8174  0E12                     	;# 
  8175  0E13                     	;# 
  8176  0E14                     	;# 
  8177  0E15                     	;# 
  8178  0E16                     	;# 
  8179  0E17                     	;# 
  8180  0E18                     	;# 
  8181  0E19                     	;# 
  8182  0E1A                     	;# 
  8183  0E1B                     	;# 
  8184  0E1C                     	;# 
  8185  0E1D                     	;# 
  8186  0E1E                     	;# 
  8187  0E1F                     	;# 
  8188  0E20                     	;# 
  8189  0E21                     	;# 
  8190  0E22                     	;# 
  8191  0E23                     	;# 
  8192  0E24                     	;# 
  8193  0E25                     	;# 
  8194  0E26                     	;# 
  8195  0E27                     	;# 
  8196  0E28                     	;# 
  8197  0E29                     	;# 
  8198  0E2A                     	;# 
  8199  0E2B                     	;# 
  8200  0E2C                     	;# 
  8201  0E2D                     	;# 
  8202  0E2E                     	;# 
  8203  0E2F                     	;# 
  8204  0E30                     	;# 
  8205  0E31                     	;# 
  8206  0E32                     	;# 
  8207  0E33                     	;# 
  8208  0E34                     	;# 
  8209  0E35                     	;# 
  8210  0E36                     	;# 
  8211  0E37                     	;# 
  8212  0E8F                     	;# 
  8213  0E90                     	;# 
  8214  0E91                     	;# 
  8215  0E92                     	;# 
  8216  0E93                     	;# 
  8217  0E94                     	;# 
  8218  0E95                     	;# 
  8219  0E96                     	;# 
  8220  0E97                     	;# 
  8221  0E9C                     	;# 
  8222  0E9D                     	;# 
  8223  0E9E                     	;# 
  8224  0EA1                     	;# 
  8225  0EA2                     	;# 
  8226  0EA3                     	;# 
  8227  0EA4                     	;# 
  8228  0EA5                     	;# 
  8229  0EA9                     	;# 
  8230  0EAA                     	;# 
  8231  0EAB                     	;# 
  8232  0EAC                     	;# 
  8233  0EB1                     	;# 
  8234  0EB2                     	;# 
  8235  0EB3                     	;# 
  8236  0EB8                     	;# 
  8237  0EB9                     	;# 
  8238  0EBA                     	;# 
  8239  0EBB                     	;# 
  8240  0EBC                     	;# 
  8241  0EBD                     	;# 
  8242  0EBE                     	;# 
  8243  0EC3                     	;# 
  8244  0EC5                     	;# 
  8245  0EC6                     	;# 
  8246  0EC7                     	;# 
  8247  0EC8                     	;# 
  8248  0EC9                     	;# 
  8249  0ECA                     	;# 
  8250  0ECB                     	;# 
  8251  0ECC                     	;# 
  8252  0F10                     	;# 
  8253  0F11                     	;# 
  8254  0F12                     	;# 
  8255  0F13                     	;# 
  8256  0F14                     	;# 
  8257  0F15                     	;# 
  8258  0F16                     	;# 
  8259  0F17                     	;# 
  8260  0F18                     	;# 
  8261  0F19                     	;# 
  8262  0F1A                     	;# 
  8263  0F1B                     	;# 
  8264  0F1C                     	;# 
  8265  0F1D                     	;# 
  8266  0F1E                     	;# 
  8267  0F1F                     	;# 
  8268  0F20                     	;# 
  8269  0F21                     	;# 
  8270  0F22                     	;# 
  8271  0F23                     	;# 
  8272  0F24                     	;# 
  8273  0F25                     	;# 
  8274  0F26                     	;# 
  8275  0F27                     	;# 
  8276  0F28                     	;# 
  8277  0F29                     	;# 
  8278  0F2A                     	;# 
  8279  0F2B                     	;# 
  8280  0F2C                     	;# 
  8281  0F2D                     	;# 
  8282  0F2E                     	;# 
  8283  0F2F                     	;# 
  8284  0F30                     	;# 
  8285  0F31                     	;# 
  8286  0F32                     	;# 
  8287  0F38                     	;# 
  8288  0F39                     	;# 
  8289  0F3A                     	;# 
  8290  0F3B                     	;# 
  8291  0F3C                     	;# 
  8292  0F3D                     	;# 
  8293  0F3E                     	;# 
  8294  0F3F                     	;# 
  8295  0F40                     	;# 
  8296  0F41                     	;# 
  8297  0F43                     	;# 
  8298  0F44                     	;# 
  8299  0F45                     	;# 
  8300  0F46                     	;# 
  8301  0F47                     	;# 
  8302  0F48                     	;# 
  8303  0F49                     	;# 
  8304  0F4A                     	;# 
  8305  0F4B                     	;# 
  8306  0F4C                     	;# 
  8307  0F4E                     	;# 
  8308  0F4F                     	;# 
  8309  0F50                     	;# 
  8310  0F51                     	;# 
  8311  0F52                     	;# 
  8312  0F53                     	;# 
  8313  0F54                     	;# 
  8314  0F55                     	;# 
  8315  0F56                     	;# 
  8316  0F57                     	;# 
  8317  0F59                     	;# 
  8318  0F5A                     	;# 
  8319  0F5B                     	;# 
  8320  0F5C                     	;# 
  8321  0F5D                     	;# 
  8322  0F61                     	;# 
  8323  0F62                     	;# 
  8324  0F64                     	;# 
  8325  0F65                     	;# 
  8326  0F66                     	;# 
  8327  0F67                     	;# 
  8328  0F68                     	;# 
  8329  0F69                     	;# 
  8330  0F6A                     	;# 
  8331  0F6B                     	;# 
  8332  0F6C                     	;# 
  8333  0F6D                     	;# 
  8334  0FE4                     	;# 
  8335  0FE5                     	;# 
  8336  0FE6                     	;# 
  8337  0FE7                     	;# 
  8338  0FE8                     	;# 
  8339  0FE9                     	;# 
  8340  0FEA                     	;# 
  8341  0FEB                     	;# 
  8342  0FED                     	;# 
  8343  0FEE                     	;# 
  8344  0FEF                     	;# 
  8345  0000                     	;# 
  8346  0001                     	;# 
  8347  0002                     	;# 
  8348  0003                     	;# 
  8349  0004                     	;# 
  8350  0005                     	;# 
  8351  0006                     	;# 
  8352  0007                     	;# 
  8353  0008                     	;# 
  8354  0009                     	;# 
  8355  000A                     	;# 
  8356  000B                     	;# 
  8357  000C                     	;# 
  8358  000D                     	;# 
  8359  000E                     	;# 
  8360  000F                     	;# 
  8361  0010                     	;# 
  8362  0011                     	;# 
  8363  0012                     	;# 
  8364  0013                     	;# 
  8365  0014                     	;# 
  8366  0015                     	;# 
  8367  0016                     	;# 
  8368  0017                     	;# 
  8369  0018                     	;# 
  8370  0019                     	;# 
  8371  001A                     	;# 
  8372  001C                     	;# 
  8373  001C                     	;# 
  8374  001D                     	;# 
  8375  001D                     	;# 
  8376  001E                     	;# 
  8377  001F                     	;# 
  8378  008C                     	;# 
  8379  008C                     	;# 
  8380  008D                     	;# 
  8381  008E                     	;# 
  8382  008E                     	;# 
  8383  008F                     	;# 
  8384  0090                     	;# 
  8385  0090                     	;# 
  8386  0091                     	;# 
  8387  0093                     	;# 
  8388  0094                     	;# 
  8389  0095                     	;# 
  8390  0096                     	;# 
  8391  0097                     	;# 
  8392  0098                     	;# 
  8393  0099                     	;# 
  8394  009A                     	;# 
  8395  009B                     	;# 
  8396  009C                     	;# 
  8397  009D                     	;# 
  8398  009E                     	;# 
  8399  010C                     	;# 
  8400  010D                     	;# 
  8401  010E                     	;# 
  8402  010E                     	;# 
  8403  010F                     	;# 
  8404  0110                     	;# 
  8405  0110                     	;# 
  8406  0111                     	;# 
  8407  0112                     	;# 
  8408  0112                     	;# 
  8409  0113                     	;# 
  8410  0114                     	;# 
  8411  0114                     	;# 
  8412  0115                     	;# 
  8413  0116                     	;# 
  8414  0116                     	;# 
  8415  0117                     	;# 
  8416  0119                     	;# 
  8417  0119                     	;# 
  8418  0119                     	;# 
  8419  011A                     	;# 
  8420  011A                     	;# 
  8421  011A                     	;# 
  8422  011B                     	;# 
  8423  011B                     	;# 
  8424  011B                     	;# 
  8425  011B                     	;# 
  8426  011B                     	;# 
  8427  011C                     	;# 
  8428  011C                     	;# 
  8429  011C                     	;# 
  8430  011D                     	;# 
  8431  011D                     	;# 
  8432  011D                     	;# 
  8433  011E                     	;# 
  8434  011E                     	;# 
  8435  011E                     	;# 
  8436  011F                     	;# 
  8437  011F                     	;# 
  8438  011F                     	;# 
  8439  011F                     	;# 
  8440  011F                     	;# 
  8441  018C                     	;# 
  8442  018D                     	;# 
  8443  018E                     	;# 
  8444  018F                     	;# 
  8445  0190                     	;# 
  8446  0191                     	;# 
  8447  0192                     	;# 
  8448  0196                     	;# 
  8449  0197                     	;# 
  8450  0198                     	;# 
  8451  0199                     	;# 
  8452  019A                     	;# 
  8453  019B                     	;# 
  8454  019C                     	;# 
  8455  020C                     	;# 
  8456  020C                     	;# 
  8457  020D                     	;# 
  8458  020E                     	;# 
  8459  020F                     	;# 
  8460  020F                     	;# 
  8461  0210                     	;# 
  8462  0210                     	;# 
  8463  0211                     	;# 
  8464  0211                     	;# 
  8465  0212                     	;# 
  8466  0212                     	;# 
  8467  0213                     	;# 
  8468  0214                     	;# 
  8469  0215                     	;# 
  8470  0215                     	;# 
  8471  0216                     	;# 
  8472  0216                     	;# 
  8473  0217                     	;# 
  8474  0217                     	;# 
  8475  0218                     	;# 
  8476  0218                     	;# 
  8477  0219                     	;# 
  8478  021A                     	;# 
  8479  021B                     	;# 
  8480  021B                     	;# 
  8481  021C                     	;# 
  8482  021C                     	;# 
  8483  021D                     	;# 
  8484  021D                     	;# 
  8485  021E                     	;# 
  8486  021F                     	;# 
  8487  028C                     	;# 
  8488  028C                     	;# 
  8489  028D                     	;# 
  8490  028D                     	;# 
  8491  028E                     	;# 
  8492  028F                     	;# 
  8493  0290                     	;# 
  8494  0290                     	;# 
  8495  0291                     	;# 
  8496  0292                     	;# 
  8497  0292                     	;# 
  8498  0293                     	;# 
  8499  0293                     	;# 
  8500  0294                     	;# 
  8501  0295                     	;# 
  8502  0296                     	;# 
  8503  0296                     	;# 
  8504  0297                     	;# 
  8505  0298                     	;# 
  8506  0298                     	;# 
  8507  0299                     	;# 
  8508  0299                     	;# 
  8509  029A                     	;# 
  8510  029B                     	;# 
  8511  029C                     	;# 
  8512  029C                     	;# 
  8513  029D                     	;# 
  8514  030C                     	;# 
  8515  030C                     	;# 
  8516  030D                     	;# 
  8517  030E                     	;# 
  8518  030F                     	;# 
  8519  0310                     	;# 
  8520  0310                     	;# 
  8521  0311                     	;# 
  8522  0312                     	;# 
  8523  0313                     	;# 
  8524  0314                     	;# 
  8525  0314                     	;# 
  8526  0315                     	;# 
  8527  0316                     	;# 
  8528  0317                     	;# 
  8529  0318                     	;# 
  8530  0318                     	;# 
  8531  0319                     	;# 
  8532  031A                     	;# 
  8533  031B                     	;# 
  8534  031C                     	;# 
  8535  031C                     	;# 
  8536  031D                     	;# 
  8537  031E                     	;# 
  8538  031F                     	;# 
  8539  038C                     	;# 
  8540  038C                     	;# 
  8541  038D                     	;# 
  8542  038E                     	;# 
  8543  0390                     	;# 
  8544  0390                     	;# 
  8545  0391                     	;# 
  8546  0392                     	;# 
  8547  040C                     	;# 
  8548  040D                     	;# 
  8549  040E                     	;# 
  8550  040F                     	;# 
  8551  0410                     	;# 
  8552  0411                     	;# 
  8553  0416                     	;# 
  8554  0416                     	;# 
  8555  0417                     	;# 
  8556  0418                     	;# 
  8557  0418                     	;# 
  8558  0419                     	;# 
  8559  041A                     	;# 
  8560  041A                     	;# 
  8561  041B                     	;# 
  8562  041C                     	;# 
  8563  041C                     	;# 
  8564  041D                     	;# 
  8565  041E                     	;# 
  8566  041F                     	;# 
  8567  048C                     	;# 
  8568  048C                     	;# 
  8569  048D                     	;# 
  8570  048E                     	;# 
  8571  048F                     	;# 
  8572  048F                     	;# 
  8573  0490                     	;# 
  8574  0491                     	;# 
  8575  0492                     	;# 
  8576  0492                     	;# 
  8577  0493                     	;# 
  8578  0494                     	;# 
  8579  0495                     	;# 
  8580  0495                     	;# 
  8581  0496                     	;# 
  8582  0497                     	;# 
  8583  0498                     	;# 
  8584  0499                     	;# 
  8585  049A                     	;# 
  8586  049B                     	;# 
  8587  049C                     	;# 
  8588  049D                     	;# 
  8589  050C                     	;# 
  8590  050C                     	;# 
  8591  050D                     	;# 
  8592  050E                     	;# 
  8593  050F                     	;# 
  8594  050F                     	;# 
  8595  0510                     	;# 
  8596  0511                     	;# 
  8597  0512                     	;# 
  8598  0512                     	;# 
  8599  0513                     	;# 
  8600  0514                     	;# 
  8601  0515                     	;# 
  8602  0515                     	;# 
  8603  0516                     	;# 
  8604  0517                     	;# 
  8605  0518                     	;# 
  8606  0519                     	;# 
  8607  051A                     	;# 
  8608  051B                     	;# 
  8609  051C                     	;# 
  8610  051D                     	;# 
  8611  058C                     	;# 
  8612  058C                     	;# 
  8613  058D                     	;# 
  8614  058E                     	;# 
  8615  058F                     	;# 
  8616  058F                     	;# 
  8617  0590                     	;# 
  8618  0591                     	;# 
  8619  0592                     	;# 
  8620  0593                     	;# 
  8621  060C                     	;# 
  8622  060D                     	;# 
  8623  060E                     	;# 
  8624  060F                     	;# 
  8625  0610                     	;# 
  8626  0611                     	;# 
  8627  0612                     	;# 
  8628  0613                     	;# 
  8629  0614                     	;# 
  8630  0616                     	;# 
  8631  0617                     	;# 
  8632  0618                     	;# 
  8633  0619                     	;# 
  8634  061A                     	;# 
  8635  061B                     	;# 
  8636  061C                     	;# 
  8637  061D                     	;# 
  8638  061E                     	;# 
  8639  068C                     	;# 
  8640  068D                     	;# 
  8641  068E                     	;# 
  8642  068F                     	;# 
  8643  0690                     	;# 
  8644  0691                     	;# 
  8645  0692                     	;# 
  8646  0693                     	;# 
  8647  0694                     	;# 
  8648  070C                     	;# 
  8649  070D                     	;# 
  8650  070E                     	;# 
  8651  070F                     	;# 
  8652  0710                     	;# 
  8653  0711                     	;# 
  8654  0712                     	;# 
  8655  0713                     	;# 
  8656  0714                     	;# 
  8657  0716                     	;# 
  8658  0717                     	;# 
  8659  0718                     	;# 
  8660  0719                     	;# 
  8661  071A                     	;# 
  8662  071B                     	;# 
  8663  071C                     	;# 
  8664  071D                     	;# 
  8665  071E                     	;# 
  8666  0796                     	;# 
  8667  0797                     	;# 
  8668  0798                     	;# 
  8669  0799                     	;# 
  8670  079A                     	;# 
  8671  079B                     	;# 
  8672  080C                     	;# 
  8673  080D                     	;# 
  8674  080E                     	;# 
  8675  080F                     	;# 
  8676  0810                     	;# 
  8677  0811                     	;# 
  8678  0812                     	;# 
  8679  0813                     	;# 
  8680  0814                     	;# 
  8681  081A                     	;# 
  8682  081B                     	;# 
  8683  081C                     	;# 
  8684  081D                     	;# 
  8685  081E                     	;# 
  8686  081F                     	;# 
  8687  088C                     	;# 
  8688  088D                     	;# 
  8689  088E                     	;# 
  8690  088F                     	;# 
  8691  0890                     	;# 
  8692  0891                     	;# 
  8693  0892                     	;# 
  8694  0893                     	;# 
  8695  0895                     	;# 
  8696  0896                     	;# 
  8697  0897                     	;# 
  8698  0898                     	;# 
  8699  0899                     	;# 
  8700  089A                     	;# 
  8701  089B                     	;# 
  8702  090C                     	;# 
  8703  090E                     	;# 
  8704  090F                     	;# 
  8705  091F                     	;# 
  8706  091F                     	;# 
  8707  098F                     	;# 
  8708  098F                     	;# 
  8709  0990                     	;# 
  8710  0991                     	;# 
  8711  0992                     	;# 
  8712  0993                     	;# 
  8713  0994                     	;# 
  8714  0995                     	;# 
  8715  0996                     	;# 
  8716  0997                     	;# 
  8717  0E0F                     	;# 
  8718  0E10                     	;# 
  8719  0E11                     	;# 
  8720  0E12                     	;# 
  8721  0E13                     	;# 
  8722  0E14                     	;# 
  8723  0E15                     	;# 
  8724  0E16                     	;# 
  8725  0E17                     	;# 
  8726  0E18                     	;# 
  8727  0E19                     	;# 
  8728  0E1A                     	;# 
  8729  0E1B                     	;# 
  8730  0E1C                     	;# 
  8731  0E1D                     	;# 
  8732  0E1E                     	;# 
  8733  0E1F                     	;# 
  8734  0E20                     	;# 
  8735  0E21                     	;# 
  8736  0E22                     	;# 
  8737  0E23                     	;# 
  8738  0E24                     	;# 
  8739  0E25                     	;# 
  8740  0E26                     	;# 
  8741  0E27                     	;# 
  8742  0E28                     	;# 
  8743  0E29                     	;# 
  8744  0E2A                     	;# 
  8745  0E2B                     	;# 
  8746  0E2C                     	;# 
  8747  0E2D                     	;# 
  8748  0E2E                     	;# 
  8749  0E2F                     	;# 
  8750  0E30                     	;# 
  8751  0E31                     	;# 
  8752  0E32                     	;# 
  8753  0E33                     	;# 
  8754  0E34                     	;# 
  8755  0E35                     	;# 
  8756  0E36                     	;# 
  8757  0E37                     	;# 
  8758  0E8F                     	;# 
  8759  0E90                     	;# 
  8760  0E91                     	;# 
  8761  0E92                     	;# 
  8762  0E93                     	;# 
  8763  0E94                     	;# 
  8764  0E95                     	;# 
  8765  0E96                     	;# 
  8766  0E97                     	;# 
  8767  0E9C                     	;# 
  8768  0E9D                     	;# 
  8769  0E9E                     	;# 
  8770  0EA1                     	;# 
  8771  0EA2                     	;# 
  8772  0EA3                     	;# 
  8773  0EA4                     	;# 
  8774  0EA5                     	;# 
  8775  0EA9                     	;# 
  8776  0EAA                     	;# 
  8777  0EAB                     	;# 
  8778  0EAC                     	;# 
  8779  0EB1                     	;# 
  8780  0EB2                     	;# 
  8781  0EB3                     	;# 
  8782  0EB8                     	;# 
  8783  0EB9                     	;# 
  8784  0EBA                     	;# 
  8785  0EBB                     	;# 
  8786  0EBC                     	;# 
  8787  0EBD                     	;# 
  8788  0EBE                     	;# 
  8789  0EC3                     	;# 
  8790  0EC5                     	;# 
  8791  0EC6                     	;# 
  8792  0EC7                     	;# 
  8793  0EC8                     	;# 
  8794  0EC9                     	;# 
  8795  0ECA                     	;# 
  8796  0ECB                     	;# 
  8797  0ECC                     	;# 
  8798  0F10                     	;# 
  8799  0F11                     	;# 
  8800  0F12                     	;# 
  8801  0F13                     	;# 
  8802  0F14                     	;# 
  8803  0F15                     	;# 
  8804  0F16                     	;# 
  8805  0F17                     	;# 
  8806  0F18                     	;# 
  8807  0F19                     	;# 
  8808  0F1A                     	;# 
  8809  0F1B                     	;# 
  8810  0F1C                     	;# 
  8811  0F1D                     	;# 
  8812  0F1E                     	;# 
  8813  0F1F                     	;# 
  8814  0F20                     	;# 
  8815  0F21                     	;# 
  8816  0F22                     	;# 
  8817  0F23                     	;# 
  8818  0F24                     	;# 
  8819  0F25                     	;# 
  8820  0F26                     	;# 
  8821  0F27                     	;# 
  8822  0F28                     	;# 
  8823  0F29                     	;# 
  8824  0F2A                     	;# 
  8825  0F2B                     	;# 
  8826  0F2C                     	;# 
  8827  0F2D                     	;# 
  8828  0F2E                     	;# 
  8829  0F2F                     	;# 
  8830  0F30                     	;# 
  8831  0F31                     	;# 
  8832  0F32                     	;# 
  8833  0F38                     	;# 
  8834  0F39                     	;# 
  8835  0F3A                     	;# 
  8836  0F3B                     	;# 
  8837  0F3C                     	;# 
  8838  0F3D                     	;# 
  8839  0F3E                     	;# 
  8840  0F3F                     	;# 
  8841  0F40                     	;# 
  8842  0F41                     	;# 
  8843  0F43                     	;# 
  8844  0F44                     	;# 
  8845  0F45                     	;# 
  8846  0F46                     	;# 
  8847  0F47                     	;# 
  8848  0F48                     	;# 
  8849  0F49                     	;# 
  8850  0F4A                     	;# 
  8851  0F4B                     	;# 
  8852  0F4C                     	;# 
  8853  0F4E                     	;# 
  8854  0F4F                     	;# 
  8855  0F50                     	;# 
  8856  0F51                     	;# 
  8857  0F52                     	;# 
  8858  0F53                     	;# 
  8859  0F54                     	;# 
  8860  0F55                     	;# 
  8861  0F56                     	;# 
  8862  0F57                     	;# 
  8863  0F59                     	;# 
  8864  0F5A                     	;# 
  8865  0F5B                     	;# 
  8866  0F5C                     	;# 
  8867  0F5D                     	;# 
  8868  0F61                     	;# 
  8869  0F62                     	;# 
  8870  0F64                     	;# 
  8871  0F65                     	;# 
  8872  0F66                     	;# 
  8873  0F67                     	;# 
  8874  0F68                     	;# 
  8875  0F69                     	;# 
  8876  0F6A                     	;# 
  8877  0F6B                     	;# 
  8878  0F6C                     	;# 
  8879  0F6D                     	;# 
  8880  0FE4                     	;# 
  8881  0FE5                     	;# 
  8882  0FE6                     	;# 
  8883  0FE7                     	;# 
  8884  0FE8                     	;# 
  8885  0FE9                     	;# 
  8886  0FEA                     	;# 
  8887  0FEB                     	;# 
  8888  0FED                     	;# 
  8889  0FEE                     	;# 
  8890  0FEF                     	;# 
  8891                           
  8892                           	psect	idataBANK0
  8893  0D07                     __pidataBANK0:	
  8894                           
  8895                           ;initializer for _mode_field_subfield
  8896  0D07  34FF               	retlw	255
  8897  0D08  34FF               	retlw	255
  8898  0D09  34FF               	retlw	255
  8899  0D0A  34FF               	retlw	255
  8900                           
  8901                           ;initializer for _tala
  8902  0D0B  3403               	retlw	3
  8903                           
  8904                           ;initializer for _pmon
  8905  0D0C  3405               	retlw	5
  8906                           
  8907                           ;initializer for _nreg
  8908  0D0D  341E               	retlw	30
  8909                           
  8910                           	psect	stringtext1
  8911  07E6                     __pstringtext1:	
  8912  07E6                     _fsmStateTable:	
  8913  07E6  34B3               	retlw	low _do_I2C_IDLE
  8914  07E7  340C               	retlw	high _do_I2C_IDLE
  8915  07E8  3436               	retlw	low _do_I2C_SEND_ADR_READ
  8916  07E9  340D               	retlw	high _do_I2C_SEND_ADR_READ
  8917  07EA  341E               	retlw	low _do_I2C_SEND_ADR_WRITE
  8918  07EB  340D               	retlw	high _do_I2C_SEND_ADR_WRITE
  8919  07EC  34B4               	retlw	low _do_I2C_TX
  8920  07ED  3404               	retlw	high _do_I2C_TX
  8921  07EE  3455               	retlw	low _do_I2C_RX
  8922  07EF  3405               	retlw	high _do_I2C_RX
  8923  07F0  34F9               	retlw	low _do_I2C_RCEN
  8924  07F1  340C               	retlw	high _do_I2C_RCEN
  8925  07F2  34E2               	retlw	low _do_I2C_TX_EMPTY
  8926  07F3  3406               	retlw	high _do_I2C_TX_EMPTY
  8927  07F4  34B8               	retlw	low _do_I2C_SEND_RESTART_READ
  8928  07F5  340C               	retlw	high _do_I2C_SEND_RESTART_READ
  8929  07F6  34BD               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8930  07F7  340C               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8931  07F8  34C2               	retlw	low _do_I2C_SEND_RESTART
  8932  07F9  340C               	retlw	high _do_I2C_SEND_RESTART
  8933  07FA  34C7               	retlw	low _do_I2C_SEND_STOP
  8934  07FB  340C               	retlw	high _do_I2C_SEND_STOP
  8935  07FC  34CC               	retlw	low _do_I2C_DO_ACK
  8936  07FD  340C               	retlw	high _do_I2C_DO_ACK
  8937  07FE  34D1               	retlw	low _do_I2C_DO_NACK_STOP
  8938  07FF  340C               	retlw	high _do_I2C_DO_NACK_STOP
  8939  0800  34D6               	retlw	low _do_I2C_DO_NACK_RESTART
  8940  0801  340C               	retlw	high _do_I2C_DO_NACK_RESTART
  8941  0802  3416               	retlw	low _do_I2C_RESET
  8942  0803  340D               	retlw	high _do_I2C_RESET
  8943  0804  3470               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8944  0805  3407               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8945  0806                     __end_of_fsmStateTable:	
  8946                           
  8947                           	psect	nvBANK0
  8948  0064                     __pnvBANK0:	
  8949  0064                     _TMR1_InterruptHandler:	
  8950  0064                     	ds	2
  8951  0066                     _timer1ReloadVal:	
  8952  0066                     	ds	2
  8953  0068                     _INT_InterruptHandler:	
  8954  0068                     	ds	2
  8955                           
  8956                           	psect	nvBANK1
  8957  00C8                     __pnvBANK1:	
  8958  00C8                     _TMR0_InterruptHandler:	
  8959  00C8                     	ds	2
  8960  00CA                     _TMR2_InterruptHandler:	
  8961  00CA                     	ds	2
  8962  001E                     _T0CON0bits	set	30
  8963  001E                     _T0CON0	set	30
  8964  001C                     _TMR0L	set	28
  8965  001D                     _TMR0H	set	29
  8966  001F                     _T0CON1	set	31
  8967  0013                     _TRISCbits	set	19
  8968  000E                     _PORTCbits	set	14
  8969  000D                     _PORTBbits	set	13
  8970  0016                     _LATAbits	set	22
  8971  0014                     _TRISD	set	20
  8972  0013                     _TRISC	set	19
  8973  0012                     _TRISB	set	18
  8974  0011                     _TRISA	set	17
  8975  0015                     _TRISE	set	21
  8976  0018                     _LATC	set	24
  8977  0017                     _LATB	set	23
  8978  0016                     _LATA	set	22
  8979  0019                     _LATD	set	25
  8980  001A                     _LATE	set	26
  8981  000B                     _INTCONbits	set	11
  8982  0094                     _ADCON1bits	set	148
  8983  008E                     _ADPREVL	set	142
  8984  008F                     _ADPREVH	set	143
  8985  0097                     _ADSTATbits	set	151
  8986  0090                     _ADACCL	set	144
  8987  0091                     _ADACCH	set	145
  8988  0095                     _ADCON2bits	set	149
  8989  009C                     _ADPRE	set	156
  8990  0096                     _ADCON3bits	set	150
  8991  008C                     _ADRESL	set	140
  8992  008D                     _ADRESH	set	141
  8993  0093                     _ADCON0bits	set	147
  8994  009D                     _ADACQ	set	157
  8995  0093                     _ADCON0	set	147
  8996  0098                     _ADCLK	set	152
  8997  0099                     _ADACT	set	153
  8998  009A                     _ADREF	set	154
  8999  0097                     _ADSTAT	set	151
  9000  0096                     _ADCON3	set	150
  9001  0095                     _ADCON2	set	149
  9002  0094                     _ADCON1	set	148
  9003  009B                     _ADCAP	set	155
  9004  009E                     _ADPCH	set	158
  9005  0116                     _ADERRL	set	278
  9006  0117                     _ADERRH	set	279
  9007  0114                     _ADFLTRL	set	276
  9008  0115                     _ADFLTRH	set	277
  9009  010C                     _ADCNT	set	268
  9010  010D                     _ADRPT	set	269
  9011  0113                     _ADSTPTH	set	275
  9012  0112                     _ADSTPTL	set	274
  9013  0111                     _ADUTHH	set	273
  9014  0110                     _ADUTHL	set	272
  9015  010F                     _ADLTHH	set	271
  9016  010E                     _ADLTHL	set	270
  9017  018F                     _SSP1STATbits	set	399
  9018  018E                     _SSP1MSK	set	398
  9019  018C                     _SSP1BUF	set	396
  9020  0191                     _SSP1CON2bits	set	401
  9021  018D                     _SSP1ADD	set	397
  9022  0191                     _SSP1CON2	set	401
  9023  0190                     _SSP1CON1	set	400
  9024  018F                     _SSP1STAT	set	399
  9025  0190                     _SSP1CON1bits	set	400
  9026  021F                     _CCPTMRS1bits	set	543
  9027  020F                     _T1GCONbits	set	527
  9028  020E                     _T1CONbits	set	526
  9029  020E                     _T1CON	set	526
  9030  020C                     _TMR1L	set	524
  9031  020D                     _TMR1H	set	525
  9032  0211                     _T1CLK	set	529
  9033  0210                     _T1GATE	set	528
  9034  020F                     _T1GCON	set	527
  9035  028D                     _PR2	set	653
  9036  028C                     _TMR2	set	652
  9037  028E                     _T2CONbits	set	654
  9038  0291                     _T2RSTbits	set	657
  9039  028F                     _T2HLTbits	set	655
  9040  028E                     _T2CON	set	654
  9041  028C                     _T2TMR	set	652
  9042  028D                     _T2PR	set	653
  9043  0291                     _T2RST	set	657
  9044  028F                     _T2HLT	set	655
  9045  0290                     _T2CLKCON	set	656
  9046  038C                     _PWM6DCL	set	908
  9047  038D                     _PWM6DCH	set	909
  9048  038E                     _PWM6CON	set	910
  9049  070F                     _PIR3bits	set	1807
  9050  0719                     _PIE3bits	set	1817
  9051  0710                     _PIR4bits	set	1808
  9052  071A                     _PIE4bits	set	1818
  9053  0716                     _PIE0bits	set	1814
  9054  070C                     _PIR0bits	set	1804
  9055  079B                     _PMD5	set	1947
  9056  079A                     _PMD4	set	1946
  9057  0799                     _PMD3	set	1945
  9058  0798                     _PMD2	set	1944
  9059  0797                     _PMD1	set	1943
  9060  0796                     _PMD0	set	1942
  9061  081F                     _NVMCON2	set	2079
  9062  081C                     _NVMDATL	set	2076
  9063  081D                     _NVMDATH	set	2077
  9064  081E                     _NVMCON1bits	set	2078
  9065  081B                     _NVMADRH	set	2075
  9066  081A                     _NVMADRL	set	2074
  9067  0892                     _OSCTUNE	set	2194
  9068  0893                     _OSCFRQ	set	2195
  9069  0891                     _OSCEN	set	2193
  9070  088F                     _OSCCON3	set	2191
  9071  088D                     _OSCCON1	set	2189
  9072  0EC6                     _SSP1DATPPS	set	3782
  9073  0EC5                     _SSP1CLKPPS	set	3781
  9074  0E90                     _INTPPS	set	3728
  9075  0F44                     _WPUBbits	set	3908
  9076  0F16                     _RA6PPS	set	3862
  9077  0F24                     _RC4PPS	set	3876
  9078  0F23                     _RC3PPS	set	3875
  9079  0F68                     _INLVLE	set	3944
  9080  0F5D                     _INLVLD	set	3933
  9081  0F52                     _INLVLC	set	3922
  9082  0F47                     _INLVLB	set	3911
  9083  0F3C                     _INLVLA	set	3900
  9084  0F67                     _SLRCONE	set	3943
  9085  0F5C                     _SLRCOND	set	3932
  9086  0F51                     _SLRCONC	set	3921
  9087  0F46                     _SLRCONB	set	3910
  9088  0F3B                     _SLRCONA	set	3899
  9089  0F5B                     _ODCOND	set	3931
  9090  0F50                     _ODCONC	set	3920
  9091  0F45                     _ODCONB	set	3909
  9092  0F3A                     _ODCONA	set	3898
  9093  0F66                     _ODCONE	set	3942
  9094  0F4F                     _WPUC	set	3919
  9095  0F39                     _WPUA	set	3897
  9096  0F44                     _WPUB	set	3908
  9097  0F65                     _WPUE	set	3941
  9098  0F5A                     _WPUD	set	3930
  9099  0F38                     _ANSELA	set	3896
  9100  0F64                     _ANSELE	set	3940
  9101  0F43                     _ANSELB	set	3907
  9102  0F4E                     _ANSELC	set	3918
  9103  0F59                     _ANSELD	set	3929
  9104  7A7C                     _WPUC4	set	31356
  9105  7A7B                     _WPUC3	set	31355
  9106                           
  9107                           ; #config settings
  9108  0000                     
  9109                           	psect	cinit
  9110  005D                     start_initialization:	
  9111  005D                     __initialization:	
  9112                           
  9113                           ; Initialize objects allocated to BANK0
  9114  005D  3007               	movlw	low __pidataBANK0
  9115  005E  0084               	movwf	4
  9116  005F  308D               	movlw	(high __pidataBANK0)| (0+128)
  9117  0060  0085               	movwf	5
  9118  0061  305D               	movlw	low __pdataBANK0
  9119  0062  0086               	movwf	6
  9120  0063  3000               	movlw	high __pdataBANK0
  9121  0064  0087               	movwf	7
  9122  0065  3007               	movlw	7
  9123  0066  318C  24F3  3180   	fcall	init_ram
  9124                           
  9125                           ; Clear objects allocated to COMMON
  9126  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9127                           
  9128                           ; Clear objects allocated to BANK0
  9129  006A  3020               	movlw	low __pbssBANK0
  9130  006B  0084               	movwf	4
  9131  006C  3000               	movlw	high __pbssBANK0
  9132  006D  0085               	movwf	5
  9133  006E  3024               	movlw	36
  9134  006F  318C  24ED  3180   	fcall	clear_ram0
  9135                           
  9136                           ; Clear objects allocated to BANK1
  9137  0072  30A0               	movlw	low __pbssBANK1
  9138  0073  0084               	movwf	4
  9139  0074  3000               	movlw	high __pbssBANK1
  9140  0075  0085               	movwf	5
  9141  0076  3022               	movlw	34
  9142  0077  318C  24ED  3180   	fcall	clear_ram0
  9143  007A                     end_of_initialization:	
  9144                           ;End of C runtime variable initialization code
  9145                           
  9146  007A                     __end_of__initialization:	
  9147  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9148  007B  0020               	movlb	0
  9149  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9150                           
  9151                           	psect	bssCOMMON
  9152  007D                     __pbssCOMMON:	
  9153  007D                     _clkms:	
  9154  007D                     	ds	1
  9155                           
  9156                           	psect	bssBANK0
  9157  0020                     __pbssBANK0:	
  9158  0020                     _lum_threshold:	
  9159  0020                     	ds	2
  9160  0022                     _lum_bin:	
  9161  0022                     	ds	2
  9162  0024                     _duty_cycle:	
  9163  0024                     	ds	2
  9164  0026                     _convertedValue:	
  9165  0026                     	ds	2
  9166  0028                     _min_units:	
  9167  0028                     	ds	2
  9168  002A                     _min_tens:	
  9169  002A                     	ds	2
  9170  002C                     _hours_units:	
  9171  002C                     	ds	2
  9172  002E                     _hours_tens:	
  9173  002E                     	ds	2
  9174  0030                     _value:	
  9175  0030                     	ds	2
  9176  0032                     _i2c1_driver_i2cISR:	
  9177  0032                     	ds	2
  9178  0034                     _i2c1_driver_busCollisionISR:	
  9179  0034                     	ds	2
  9180  0036                     _alaf:	
  9181  0036                     	ds	1
  9182  0037                     _temp:	
  9183  0037                     	ds	1
  9184  0038                     _alarm:	
  9185  0038                     	ds	1
  9186  0039                     _config_mode:	
  9187  0039                     	ds	1
  9188  003A                     _set_mode:	
  9189  003A                     	ds	1
  9190  003B                     _last1m:	
  9191  003B                     	ds	1
  9192  003C                     _last5s:	
  9193  003C                     	ds	1
  9194  003D                     _last_ms2:	
  9195  003D                     	ds	1
  9196  003E                     _last_ms:	
  9197  003E                     	ds	1
  9198  003F                     _seg:	
  9199  003F                     	ds	1
  9200  0040                     _clkm:	
  9201  0040                     	ds	1
  9202  0041                     _clkh:	
  9203  0041                     	ds	1
  9204  0042                     _nreg_pt:	
  9205  0042                     	ds	1
  9206  0043                     _nreg_init:	
  9207  0043                     	ds	1
  9208                           
  9209                           	psect	dataBANK0
  9210  005D                     __pdataBANK0:	
  9211  005D                     _mode_field_subfield:	
  9212  005D                     	ds	4
  9213  0061                     _tala:	
  9214  0061                     	ds	1
  9215  0062                     _pmon:	
  9216  0062                     	ds	1
  9217  0063                     _nreg:	
  9218  0063                     	ds	1
  9219                           
  9220                           	psect	bssBANK1
  9221  00A0                     __pbssBANK1:	
  9222  00A0                     _i2c_status:	
  9223  00A0                     	ds	29
  9224  00BD                     _ring_byte:	
  9225  00BD                     	ds	5
  9226                           
  9227                           	psect	inittext
  9228  0CF3                     init_ram:	
  9229  0CF3  00FE               	movwf	btemp
  9230  0CF4                     initloop:	
  9231  0CF4  0012               	moviw fsr0++
  9232  0CF5  001E               	movwi fsr1++
  9233  0CF6  0BFE               	decfsz	btemp,f
  9234  0CF7  2CF4               	goto	initloop
  9235  0CF8  3400               	retlw	0
  9236                           
  9237                           	psect	clrtext
  9238  0CED                     clear_ram0:	
  9239                           ;	Called with FSR0 containing the base address, and
  9240                           ;	WREG with the size to clear
  9241                           
  9242  0CED  0064               	clrwdt	;clear the watchdog before getting into this loop
  9243  0CEE                     clrloop0:	
  9244  0CEE  0180               	clrf	0	;clear RAM location pointed to by FSR
  9245  0CEF  3101               	addfsr 0,1
  9246  0CF0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9247  0CF1  2CEE               	goto	clrloop0	;have we reached the end yet?
  9248  0CF2  3400               	retlw	0	;all done for this memory range, return
  9249                           
  9250                           	psect	cstackBANK1
  9251  00C2                     __pcstackBANK1:	
  9252  00C2                     main@aux:	
  9253                           
  9254                           ; 1 bytes @ 0x0
  9255  00C2                     	ds	1
  9256  00C3                     main@aux1:	
  9257                           
  9258                           ; 1 bytes @ 0x1
  9259  00C3                     	ds	3
  9260  00C6                     main@t5s:	
  9261                           
  9262                           ; 1 bytes @ 0x4
  9263  00C6                     	ds	1
  9264  00C7                     _main$2305:	
  9265                           
  9266                           ; 1 bytes @ 0x5
  9267  00C7                     	ds	1
  9268                           
  9269                           	psect	cstackCOMMON
  9270  0070                     __pcstackCOMMON:	
  9271  0070                     ?_i2c1_driver_isNACK:	
  9272  0070                     ?_setCallBack:	
  9273                           ; 1 bit 
  9274                           
  9275  0070                     ?_mssp1_clearIRQ:	
  9276                           ; 1 bytes @ 0x0
  9277                           
  9278  0070                     ??_mssp1_clearIRQ:	
  9279                           ; 1 bytes @ 0x0
  9280                           
  9281  0070                     ?_i2c_busCollisionISR:	
  9282                           ; 1 bytes @ 0x0
  9283                           
  9284  0070                     ??_i2c_busCollisionISR:	
  9285                           ; 1 bytes @ 0x0
  9286                           
  9287  0070                     ?_i2c_ISR:	
  9288                           ; 1 bytes @ 0x0
  9289                           
  9290  0070                     ?_i2c1_driver_resetBus:	
  9291                           ; 1 bytes @ 0x0
  9292                           
  9293  0070                     ??_i2c1_driver_resetBus:	
  9294                           ; 1 bytes @ 0x0
  9295                           
  9296  0070                     ?_i2c1_driver_restart:	
  9297                           ; 1 bytes @ 0x0
  9298                           
  9299  0070                     ??_i2c1_driver_restart:	
  9300                           ; 1 bytes @ 0x0
  9301                           
  9302  0070                     ?_i2c1_driver_stop:	
  9303                           ; 1 bytes @ 0x0
  9304                           
  9305  0070                     ??_i2c1_driver_stop:	
  9306                           ; 1 bytes @ 0x0
  9307                           
  9308  0070                     ?_i2c1_driver_TXData:	
  9309                           ; 1 bytes @ 0x0
  9310                           
  9311  0070                     ??_i2c1_driver_TXData:	
  9312                           ; 1 bytes @ 0x0
  9313                           
  9314  0070                     ?_i2c1_driver_startRX:	
  9315                           ; 1 bytes @ 0x0
  9316                           
  9317  0070                     ??_i2c1_driver_startRX:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  0070                     ?_i2c1_driver_sendACK:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  0070                     ??_i2c1_driver_sendACK:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  0070                     ?_i2c1_driver_sendNACK:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  0070                     ??_i2c1_driver_sendNACK:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  0070                     ??_i2c1_driver_isNACK:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  0070                     ?_i2c1_driver_getRXData:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  0070                     ??_i2c1_driver_getRXData:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  0070                     ?_mssp1_setIRQ:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  0070                     ??_mssp1_setIRQ:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  0070                     ?_i2c1_driver_clearBusCollision:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  0070                     ??_i2c1_driver_clearBusCollision:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  0070                     ?_INT_CallBack:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  0070                     ?_TMR0_ISR:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  0070                     ?_TMR1_ISR:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  0070                     ?_TMR2_ISR:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  0070                     ?_PMD_Initialize:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  0070                     ?_PIN_MANAGER_Initialize:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  0070                     ?_OSCILLATOR_Initialize:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  0070                     ?_PWM6_Initialize:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  0070                     ?_ADCC_Initialize:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  0070                     ?_TMR2_Initialize:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  0070                     ?_TMR1_Initialize:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  0070                     ?_TMR0_Initialize:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  0070                     ?_TMR1_DefaultInterruptHandler:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  0070                     ??_TMR1_DefaultInterruptHandler:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  0070                     ?_TMR2_DefaultInterruptHandler:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  0070                     ??_TMR2_DefaultInterruptHandler:	
  9399                           ; 1 bytes @ 0x0
  9400                           
  9401  0070                     ?_checkDebounceSW1:	
  9402                           ; 1 bytes @ 0x0
  9403                           
  9404  0070                     ?_TMR0_StopTimer:	
  9405                           ; 1 bytes @ 0x0
  9406                           
  9407  0070                     ??_TMR0_StopTimer:	
  9408                           ; 1 bytes @ 0x0
  9409                           
  9410  0070                     ?_handler_clock_hms:	
  9411                           ; 1 bytes @ 0x0
  9412                           
  9413  0070                     ??_handler_clock_hms:	
  9414                           ; 1 bytes @ 0x0
  9415                           
  9416  0070                     ?_handler_clock_ms:	
  9417                           ; 1 bytes @ 0x0
  9418                           
  9419  0070                     ??_handler_clock_ms:	
  9420                           ; 1 bytes @ 0x0
  9421                           
  9422  0070                     ?_recoverData:	
  9423                           ; 1 bytes @ 0x0
  9424                           
  9425  0070                     ?_cksum_w:	
  9426                           ; 1 bytes @ 0x0
  9427                           
  9428  0070                     ?_TMR0_StartTimer:	
  9429                           ; 1 bytes @ 0x0
  9430                           
  9431  0070                     ?_config_routine:	
  9432                           ; 1 bytes @ 0x0
  9433                           
  9434  0070                     ?_all_LED:	
  9435                           ; 1 bytes @ 0x0
  9436                           
  9437  0070                     ?_mod1_LED:	
  9438                           ; 1 bytes @ 0x0
  9439                           
  9440  0070                     ?_mod2_LED:	
  9441                           ; 1 bytes @ 0x0
  9442                           
  9443  0070                     ?_mod3_LED:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0070                     ?_mod4_LED:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0070                     ?_checkDebounceSW2:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0070                     ?_mode_select_LED:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0070                     ?_clock_subfields:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0070                     ?_cksum:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0070                     ?_reset_recv:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0070                     ?_TMR0_DefaultInterruptHandler:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0070                     ??_TMR0_DefaultInterruptHandler:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0070                     ?_i2c_setBuffer:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0070                     ?_do_I2C_RESET:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0070                     ??_do_I2C_RESET:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0070                     ?_do_I2C_IDLE:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0070                     ??_do_I2C_IDLE:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ?_do_I2C_SEND_RESTART:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ??_do_I2C_SEND_RESTART:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ?_do_I2C_SEND_STOP:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ??_do_I2C_SEND_STOP:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ?_do_I2C_SEND_ADR_READ:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ??_do_I2C_SEND_ADR_READ:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     ?_do_I2C_RCEN:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     ??_do_I2C_RCEN:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     ?_do_I2C_DO_ACK:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0070                     ??_do_I2C_DO_ACK:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0070                     ?_do_I2C_DO_NACK_STOP:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0070                     ??_do_I2C_DO_NACK_STOP:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0070                     ?_do_I2C_TX:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0070                     ?_do_I2C_RX:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0070                     ?_do_I2C_TX_EMPTY:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0070                     ?_INT_ISR:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0070                     ?_INT_DefaultInterruptHandler:	
  9558                           ; 1 bytes @ 0x0
  9559                           
  9560  0070                     ??_INT_DefaultInterruptHandler:	
  9561                           ; 1 bytes @ 0x0
  9562                           
  9563  0070                     ?_EXT_INT_Initialize:	
  9564                           ; 1 bytes @ 0x0
  9565                           
  9566  0070                     ?_INTERRUPT_InterruptManager:	
  9567                           ; 1 bytes @ 0x0
  9568                           
  9569  0070                     ?_SYSTEM_Initialize:	
  9570                           ; 1 bytes @ 0x0
  9571                           
  9572  0070                     ?_ADCC_StartConversion:	
  9573                           ; 1 bytes @ 0x0
  9574                           
  9575  0070                     ?_ADCC_IsConversionDone:	
  9576                           ; 1 bytes @ 0x0
  9577                           
  9578  0070                     ?_TMR1_WriteTimer:	
  9579                           ; 1 bytes @ 0x0
  9580                           
  9581  0070                     ?_sw1_EXT:	
  9582                           ; 1 bytes @ 0x0
  9583                           
  9584  0070                     ?_ISR_3s:	
  9585                           ; 1 bytes @ 0x0
  9586                           
  9587  0070                     ?_main:	
  9588                           ; 1 bytes @ 0x0
  9589                           
  9590  0070                     ?_increment_subfield:	
  9591                           ; 1 bytes @ 0x0
  9592                           
  9593  0070                     ?i1_PWM6_LoadDutyValue:	
  9594                           ; 1 bytes @ 0x0
  9595                           
  9596  0070                     ?i1_checkDebounceSW1:	
  9597                           ; 1 bytes @ 0x0
  9598                           
  9599  0070                     ??i1_checkDebounceSW1:	
  9600                           ; 1 bytes @ 0x0
  9601                           
  9602  0070                     i2c1_driver_TXData@d:	
  9603                           ; 1 bytes @ 0x0
  9604                           
  9605  0070                     i2c_setBuffer@bufferSize:	
  9606                           ; 1 bytes @ 0x0
  9607                           
  9608  0070                     setCallBack@cb:	
  9609                           ; 2 bytes @ 0x0
  9610                           
  9611  0070                     TMR1_WriteTimer@timerVal:	
  9612                           ; 2 bytes @ 0x0
  9613                           
  9614  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9615                           ; 2 bytes @ 0x0
  9616                           
  9617                           
  9618                           ; 2 bytes @ 0x0
  9619  0070                     	ds	1
  9620  0071                     ??_TMR2_ISR:	
  9621  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9622                           ; 1 bytes @ 0x1
  9623                           
  9624                           
  9625                           ; 1 bytes @ 0x1
  9626  0071                     	ds	1
  9627  0072                     ??_TMR1_ISR:	
  9628  0072                     ??_i2c_setBuffer:	
  9629                           ; 1 bytes @ 0x2
  9630                           
  9631  0072                     ??_TMR1_WriteTimer:	
  9632                           ; 1 bytes @ 0x2
  9633                           
  9634  0072                     ??i1_PWM6_LoadDutyValue:	
  9635                           ; 1 bytes @ 0x2
  9636                           
  9637  0072                     setCallBack@p:	
  9638                           ; 1 bytes @ 0x2
  9639                           
  9640                           
  9641                           ; 1 bytes @ 0x2
  9642  0072                     	ds	1
  9643  0073                     ??_setCallBack:	
  9644  0073                     i2c_setBuffer@buffer:	
  9645                           ; 1 bytes @ 0x3
  9646                           
  9647                           
  9648                           ; 1 bytes @ 0x3
  9649  0073                     	ds	1
  9650  0074                     ??_ISR_3s:	
  9651  0074                     setCallBack@idx:	
  9652                           ; 1 bytes @ 0x4
  9653                           
  9654                           
  9655                           ; 1 bytes @ 0x4
  9656  0074                     	ds	1
  9657  0075                     ??_TMR0_ISR:	
  9658  0075                     ?_i2c_setDataCompleteCallback:	
  9659                           ; 1 bytes @ 0x5
  9660                           
  9661  0075                     i2c_setDataCompleteCallback@cb:	
  9662                           ; 1 bytes @ 0x5
  9663                           
  9664                           
  9665                           ; 2 bytes @ 0x5
  9666  0075                     	ds	2
  9667  0077                     ??_sw1_EXT:	
  9668  0077                     i2c_setDataCompleteCallback@p:	
  9669                           ; 1 bytes @ 0x7
  9670                           
  9671                           
  9672                           ; 1 bytes @ 0x7
  9673  0077                     	ds	1
  9674  0078                     ??_INT_CallBack:	
  9675  0078                     ??_i2c_setDataCompleteCallback:	
  9676                           ; 1 bytes @ 0x8
  9677                           
  9678  0078                     ??_INT_ISR:	
  9679                           ; 1 bytes @ 0x8
  9680                           
  9681                           
  9682                           ; 1 bytes @ 0x8
  9683  0078                     	ds	1
  9684  0079                     ?_returnStop:	
  9685  0079                     ?_returnReset:	
  9686                           ; 1 bytes @ 0x9
  9687                           
  9688  0079                     ?_i2c_restartWrite:	
  9689                           ; 1 bytes @ 0x9
  9690                           
  9691  0079                     ?_wr1RegCompleteHandler:	
  9692                           ; 1 bytes @ 0x9
  9693                           
  9694  0079                     ?_rd1RegCompleteHandler:	
  9695                           ; 1 bytes @ 0x9
  9696                           
  9697  0079                     ?_rd2RegCompleteHandler:	
  9698                           ; 1 bytes @ 0x9
  9699                           
  9700  0079                     ?_wr2RegCompleteHandler:	
  9701                           ; 1 bytes @ 0x9
  9702                           
  9703  0079                     ?_rdBlkRegCompleteHandler:	
  9704                           ; 1 bytes @ 0x9
  9705                           
  9706  0079                     i2c_restartWrite@p:	
  9707                           ; 1 bytes @ 0x9
  9708                           
  9709  0079                     returnStop@p:	
  9710                           ; 1 bytes @ 0x9
  9711                           
  9712  0079                     returnReset@p:	
  9713                           ; 1 bytes @ 0x9
  9714                           
  9715  0079                     wr1RegCompleteHandler@p:	
  9716                           ; 1 bytes @ 0x9
  9717                           
  9718  0079                     rd1RegCompleteHandler@p:	
  9719                           ; 1 bytes @ 0x9
  9720                           
  9721  0079                     rd2RegCompleteHandler@p:	
  9722                           ; 1 bytes @ 0x9
  9723                           
  9724  0079                     wr2RegCompleteHandler@p:	
  9725                           ; 1 bytes @ 0x9
  9726                           
  9727  0079                     rdBlkRegCompleteHandler@p:	
  9728                           ; 1 bytes @ 0x9
  9729                           
  9730                           
  9731                           ; 1 bytes @ 0x9
  9732  0079                     	ds	1
  9733  007A                     ??_returnStop:	
  9734  007A                     ??_returnReset:	
  9735                           ; 1 bytes @ 0xA
  9736                           
  9737  007A                     ??_i2c_restartWrite:	
  9738                           ; 1 bytes @ 0xA
  9739                           
  9740  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9741                           ; 1 bytes @ 0xA
  9742                           
  9743  007A                     ??_do_I2C_TX:	
  9744                           ; 1 bytes @ 0xA
  9745                           
  9746  007A                     ??_do_I2C_RX:	
  9747                           ; 1 bytes @ 0xA
  9748                           
  9749  007A                     ??_do_I2C_TX_EMPTY:	
  9750                           ; 1 bytes @ 0xA
  9751                           
  9752  007A                     ??_wr1RegCompleteHandler:	
  9753                           ; 1 bytes @ 0xA
  9754                           
  9755  007A                     ??_rd1RegCompleteHandler:	
  9756                           ; 1 bytes @ 0xA
  9757                           
  9758  007A                     ??_rd2RegCompleteHandler:	
  9759                           ; 1 bytes @ 0xA
  9760                           
  9761  007A                     ??_wr2RegCompleteHandler:	
  9762                           ; 1 bytes @ 0xA
  9763                           
  9764  007A                     ??_rdBlkRegCompleteHandler:	
  9765                           ; 1 bytes @ 0xA
  9766                           
  9767                           
  9768                           ; 1 bytes @ 0xA
  9769  007A                     	ds	3
  9770  007D                     ??_INTERRUPT_InterruptManager:	
  9771                           
  9772                           	psect	cstackBANK0
  9773  0044                     __pcstackBANK0:	
  9774                           ; 1 bytes @ 0xD
  9775                           
  9776  0044                     ??_i2c_ISR:	
  9777                           
  9778                           ; 1 bytes @ 0x0
  9779  0044                     	ds	3
  9780  0047                     ??_PMD_Initialize:	
  9781  0047                     ??_PIN_MANAGER_Initialize:	
  9782                           ; 1 bytes @ 0x3
  9783                           
  9784  0047                     ??_OSCILLATOR_Initialize:	
  9785                           ; 1 bytes @ 0x3
  9786                           
  9787  0047                     ??_PWM6_Initialize:	
  9788                           ; 1 bytes @ 0x3
  9789                           
  9790  0047                     ??_ADCC_Initialize:	
  9791                           ; 1 bytes @ 0x3
  9792                           
  9793  0047                     ?_TMR1_SetInterruptHandler:	
  9794                           ; 1 bytes @ 0x3
  9795                           
  9796  0047                     ?_TMR2_SetInterruptHandler:	
  9797                           ; 1 bytes @ 0x3
  9798                           
  9799  0047                     ??_checkDebounceSW1:	
  9800                           ; 1 bytes @ 0x3
  9801                           
  9802  0047                     ?_TMR0_SetInterruptHandler:	
  9803                           ; 1 bytes @ 0x3
  9804                           
  9805  0047                     ?_LED_bin:	
  9806                           ; 1 bytes @ 0x3
  9807                           
  9808  0047                     ??_TMR0_StartTimer:	
  9809                           ; 1 bytes @ 0x3
  9810                           
  9811  0047                     ??_checkDebounceSW2:	
  9812                           ; 1 bytes @ 0x3
  9813                           
  9814  0047                     ?_INT_SetInterruptHandler:	
  9815                           ; 1 bytes @ 0x3
  9816                           
  9817  0047                     ??_ADCC_StartConversion:	
  9818                           ; 1 bytes @ 0x3
  9819                           
  9820  0047                     ??_ADCC_IsConversionDone:	
  9821                           ; 1 bytes @ 0x3
  9822                           
  9823  0047                     ?_PWM6_LoadDutyValue:	
  9824                           ; 1 bytes @ 0x3
  9825                           
  9826  0047                     ?_DATAEE_ReadByte:	
  9827                           ; 1 bytes @ 0x3
  9828                           
  9829  0047                     ?___bmul:	
  9830                           ; 1 bytes @ 0x3
  9831                           
  9832  0047                     ?_ADCC_GetConversionResult:	
  9833                           ; 1 bytes @ 0x3
  9834                           
  9835  0047                     ADCC_StartConversion@channel:	
  9836                           ; 2 bytes @ 0x3
  9837                           
  9838  0047                     ___bmul@multiplicand:	
  9839                           ; 1 bytes @ 0x3
  9840                           
  9841  0047                     INT_SetInterruptHandler@InterruptHandler:	
  9842                           ; 1 bytes @ 0x3
  9843                           
  9844  0047                     TMR1_SetInterruptHandler@InterruptHandler:	
  9845                           ; 2 bytes @ 0x3
  9846                           
  9847  0047                     PWM6_LoadDutyValue@dutyValue:	
  9848                           ; 2 bytes @ 0x3
  9849                           
  9850  0047                     DATAEE_ReadByte@bAdd:	
  9851                           ; 2 bytes @ 0x3
  9852                           
  9853  0047                     TMR2_SetInterruptHandler@InterruptHandler:	
  9854                           ; 2 bytes @ 0x3
  9855                           
  9856  0047                     LED_bin@value:	
  9857                           ; 2 bytes @ 0x3
  9858                           
  9859  0047                     TMR0_SetInterruptHandler@InterruptHandler:	
  9860                           ; 2 bytes @ 0x3
  9861                           
  9862                           
  9863                           ; 2 bytes @ 0x3
  9864  0047                     	ds	1
  9865  0048                     ??___bmul:	
  9866                           
  9867                           ; 1 bytes @ 0x4
  9868  0048                     	ds	1
  9869  0049                     ??_TMR2_Initialize:	
  9870  0049                     ??_TMR1_Initialize:	
  9871                           ; 1 bytes @ 0x5
  9872                           
  9873  0049                     ??_TMR0_Initialize:	
  9874                           ; 1 bytes @ 0x5
  9875                           
  9876  0049                     ??_TMR1_SetInterruptHandler:	
  9877                           ; 1 bytes @ 0x5
  9878                           
  9879  0049                     ??_TMR2_SetInterruptHandler:	
  9880                           ; 1 bytes @ 0x5
  9881                           
  9882  0049                     ??_TMR0_SetInterruptHandler:	
  9883                           ; 1 bytes @ 0x5
  9884                           
  9885  0049                     ??_LED_bin:	
  9886                           ; 1 bytes @ 0x5
  9887                           
  9888  0049                     ??_cksum:	
  9889                           ; 1 bytes @ 0x5
  9890                           
  9891  0049                     ??_INT_SetInterruptHandler:	
  9892                           ; 1 bytes @ 0x5
  9893                           
  9894  0049                     ??_EXT_INT_Initialize:	
  9895                           ; 1 bytes @ 0x5
  9896                           
  9897  0049                     ??_SYSTEM_Initialize:	
  9898                           ; 1 bytes @ 0x5
  9899                           
  9900  0049                     ??_ADCC_GetConversionResult:	
  9901                           ; 1 bytes @ 0x5
  9902                           
  9903  0049                     ??_PWM6_LoadDutyValue:	
  9904                           ; 1 bytes @ 0x5
  9905                           
  9906  0049                     ??_DATAEE_ReadByte:	
  9907                           ; 1 bytes @ 0x5
  9908                           
  9909  0049                     ?_ADC_read:	
  9910                           ; 1 bytes @ 0x5
  9911                           
  9912  0049                     ___bmul@product:	
  9913                           ; 2 bytes @ 0x5
  9914                           
  9915                           
  9916                           ; 1 bytes @ 0x5
  9917  0049                     	ds	1
  9918  004A                     cksum@res:	
  9919  004A                     ___bmul@multiplier:	
  9920                           ; 1 bytes @ 0x6
  9921                           
  9922                           
  9923                           ; 1 bytes @ 0x6
  9924  004A                     	ds	1
  9925  004B                     ??_ADC_read:	
  9926  004B                     ?_read_ring:	
  9927                           ; 1 bytes @ 0x7
  9928                           
  9929  004B                     ??_all_LED:	
  9930                           ; 1 bytes @ 0x7
  9931                           
  9932  004B                     ??_mod1_LED:	
  9933                           ; 1 bytes @ 0x7
  9934                           
  9935  004B                     ??_mod2_LED:	
  9936                           ; 1 bytes @ 0x7
  9937                           
  9938  004B                     ??_mod3_LED:	
  9939                           ; 1 bytes @ 0x7
  9940                           
  9941  004B                     ??_mod4_LED:	
  9942                           ; 1 bytes @ 0x7
  9943                           
  9944  004B                     ??_mode_select_LED:	
  9945                           ; 1 bytes @ 0x7
  9946                           
  9947  004B                     read_ring@nreg:	
  9948                           ; 1 bytes @ 0x7
  9949                           
  9950  004B                     cksum@i:	
  9951                           ; 1 bytes @ 0x7
  9952                           
  9953                           
  9954                           ; 2 bytes @ 0x7
  9955  004B                     	ds	1
  9956  004C                     read_ring@nreg_init:	
  9957                           
  9958                           ; 1 bytes @ 0x8
  9959  004C                     	ds	1
  9960  004D                     ?_DATAEE_WriteByte:	
  9961  004D                     read_ring@index:	
  9962                           ; 1 bytes @ 0x9
  9963                           
  9964  004D                     DATAEE_WriteByte@bAdd:	
  9965                           ; 1 bytes @ 0x9
  9966                           
  9967                           
  9968                           ; 2 bytes @ 0x9
  9969  004D                     	ds	1
  9970  004E                     ??_increment_subfield:	
  9971  004E                     read_ring@subindex:	
  9972                           ; 1 bytes @ 0xA
  9973                           
  9974  004E                     increment_subfield@plus:	
  9975                           ; 1 bytes @ 0xA
  9976                           
  9977                           
  9978                           ; 2 bytes @ 0xA
  9979  004E                     	ds	1
  9980  004F                     ??_read_ring:	
  9981  004F                     DATAEE_WriteByte@bData:	
  9982                           ; 1 bytes @ 0xB
  9983                           
  9984                           
  9985                           ; 1 bytes @ 0xB
  9986  004F                     	ds	1
  9987  0050                     ??_DATAEE_WriteByte:	
  9988  0050                     DATAEE_WriteByte@GIEBitValue:	
  9989                           ; 1 bytes @ 0xC
  9990                           
  9991  0050                     increment_subfield@exit:	
  9992                           ; 1 bytes @ 0xC
  9993                           
  9994                           
  9995                           ; 2 bytes @ 0xC
  9996  0050                     	ds	1
  9997  0051                     ?_push_ring:	
  9998  0051                     ??_cksum_w:	
  9999                           ; 1 bytes @ 0xD
 10000                           
 10001  0051                     ??_reset_recv:	
 10002                           ; 1 bytes @ 0xD
 10003                           
 10004  0051                     push_ring@nreg:	
 10005                           ; 1 bytes @ 0xD
 10006                           
 10007  0051                     read_ring@i:	
 10008                           ; 1 bytes @ 0xD
 10009                           
 10010  0051                     reset_recv@i:	
 10011                           ; 1 bytes @ 0xD
 10012                           
 10013                           
 10014                           ; 2 bytes @ 0xD
 10015  0051                     	ds	1
 10016  0052                     ??_clock_subfields:	
 10017  0052                     push_ring@nreg_init:	
 10018                           ; 1 bytes @ 0xE
 10019                           
 10020  0052                     read_ring@nreg_pt:	
 10021                           ; 1 bytes @ 0xE
 10022                           
 10023                           
 10024                           ; 1 bytes @ 0xE
 10025  0052                     	ds	1
 10026  0053                     ??_recoverData:	
 10027  0053                     push_ring@ring_byte:	
 10028                           ; 1 bytes @ 0xF
 10029                           
 10030  0053                     read_ring@absindex:	
 10031                           ; 1 bytes @ 0xF
 10032                           
 10033  0053                     clock_subfields@subfield:	
 10034                           ; 1 bytes @ 0xF
 10035                           
 10036                           
 10037                           ; 2 bytes @ 0xF
 10038  0053                     	ds	1
 10039  0054                     ??_push_ring:	
 10040                           
 10041                           ; 1 bytes @ 0x10
 10042  0054                     	ds	1
 10043  0055                     ??_config_routine:	
 10044                           
 10045                           ; 1 bytes @ 0x11
 10046  0055                     	ds	1
 10047  0056                     push_ring@i:	
 10048  0056                     config_routine@select_mode:	
 10049                           ; 1 bytes @ 0x12
 10050                           
 10051                           
 10052                           ; 2 bytes @ 0x12
 10053  0056                     	ds	1
 10054  0057                     push_ring@nreg_pt:	
 10055                           
 10056                           ; 1 bytes @ 0x13
 10057  0057                     	ds	1
 10058  0058                     ??_main:	
 10059                           
 10060                           ; 1 bytes @ 0x14
 10061  0058                     	ds	5
 10062                           
 10063                           	psect	maintext
 10064  007E                     __pmaintext:	
 10065 ;;
 10066 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10067 ;;
 10068 ;; *************** function _main *****************
 10069 ;; Defined at:
 10070 ;;		line 144 in file "main.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;		None
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  t5s             1    4[BANK1 ] unsigned char 
 10075 ;;  aux1            1    1[BANK1 ] unsigned char 
 10076 ;;  aux             1    0[BANK1 ] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : B1F/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Totals:         0       5       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;Total ram usage:       11 bytes
 10091 ;; Hardware stack levels required when called:   10
 10092 ;; This function calls:
 10093 ;;		_ADC_read
 10094 ;;		_DATAEE_WriteByte
 10095 ;;		_INT_SetInterruptHandler
 10096 ;;		_LED_bin
 10097 ;;		_PWM6_LoadDutyValue
 10098 ;;		_SYSTEM_Initialize
 10099 ;;		_TMR0_SetInterruptHandler
 10100 ;;		_TMR0_StartTimer
 10101 ;;		_TMR1_SetInterruptHandler
 10102 ;;		_TMR2_SetInterruptHandler
 10103 ;;		_cksum_w
 10104 ;;		_config_routine
 10105 ;;		_push_ring
 10106 ;;		_read_ring
 10107 ;;		_recoverData
 10108 ;; This function is called by:
 10109 ;;		Startup code after reset
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           
 10114                           ;psect for function _main
 10115  007E                     _main:	
 10116  007E                     l6201:	
 10117                           ;incstack = 0
 10118                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10119                           
 10120                           
 10121                           ;main.c: 145:     SYSTEM_Initialize();
 10122  007E  318F  2769  3180   	fcall	_SYSTEM_Initialize
 10123                           
 10124                           ;main.c: 147:     TMR0_SetInterruptHandler(ISR_3s);
 10125  0081  3003               	movlw	low _ISR_3s
 10126  0082  0020               	movlb	0	; select bank0
 10127  0083  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10128  0084  300F               	movlw	high _ISR_3s
 10129  0085  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10130  0086  318D  2551  3180   	fcall	_TMR0_SetInterruptHandler
 10131                           
 10132                           ;main.c: 148:     TMR1_SetInterruptHandler(handler_clock_hms);
 10133  0089  30AE               	movlw	low _handler_clock_hms
 10134  008A  0020               	movlb	0	; select bank0
 10135  008B  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10136  008C  3006               	movlw	high _handler_clock_hms
 10137  008D  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10138  008E  318C  24E7  3180   	fcall	_TMR1_SetInterruptHandler
 10139                           
 10140                           ;main.c: 149:     INT_SetInterruptHandler(sw1_EXT);
 10141  0091  3015               	movlw	low _sw1_EXT
 10142  0092  0020               	movlb	0	; select bank0
 10143  0093  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 10144  0094  3007               	movlw	high _sw1_EXT
 10145  0095  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10146  0096  318C  24E1  3180   	fcall	_INT_SetInterruptHandler
 10147                           
 10148                           ;main.c: 150:     TMR2_SetInterruptHandler(handler_clock_ms);
 10149  0099  30A9               	movlw	low _handler_clock_ms
 10150  009A  0020               	movlb	0	; select bank0
 10151  009B  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10152  009C  300C               	movlw	high _handler_clock_ms
 10153  009D  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10154  009E  318D  255A  3180   	fcall	_TMR2_SetInterruptHandler
 10155  00A1                     l6203:	
 10156  00A1                     l6205:	
 10157  00A1                     l1214:	
 10158  00A1  3096               	movlw	150
 10159  00A2  0020               	movlb	0	; select bank0
 10160  00A3  00D8               	movwf	??_main
 10161  00A4  0858               	movf	??_main,w
 10162  00A5  00E3               	movwf	_nreg
 10163  00A6                     l6209:	
 10164                           
 10165                           ;main.c: 157:     nreg_pt = 0;
 10166  00A6  01C2               	clrf	_nreg_pt
 10167  00A7                     l6211:	
 10168                           
 10169                           ;main.c: 158:     nreg_init = 0;
 10170  00A7  01C3               	clrf	_nreg_init
 10171  00A8                     l6213:	
 10172                           
 10173                           ;main.c: 159:     alaf = 1;
 10174  00A8  01B6               	clrf	_alaf
 10175  00A9  0AB6               	incf	_alaf,f
 10176  00AA                     l6215:	
 10177                           
 10178                           ;main.c: 160:     temp = 0;
 10179  00AA  01B7               	clrf	_temp
 10180  00AB                     l6217:	
 10181                           
 10182                           ;main.c: 162:     recoverData();
 10183  00AB  3182  221D  3180   	fcall	_recoverData
 10184  00AE                     l6219:	
 10185                           
 10186                           ;main.c: 164:     PWM6_LoadDutyValue(0);
 10187  00AE  3000               	movlw	0
 10188  00AF  0020               	movlb	0	; select bank0
 10189  00B0  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10190  00B1  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10191  00B2  318F  271C  3180   	fcall	_PWM6_LoadDutyValue
 10192  00B5                     l6221:	
 10193                           
 10194                           ;main.c: 165:     alarm = 0 ;
 10195  00B5  0020               	movlb	0	; select bank0
 10196  00B6  01B8               	clrf	_alarm	;volatile
 10197  00B7                     l6223:	
 10198  00B7  003E               	movlb	30	; select bank30
 10199  00B8  1644               	bsf	68,4	;volatile
 10200  00B9                     l6225:	
 10201                           
 10202                           ;main.c: 169:     (INTCONbits.GIE = 1);
 10203  00B9  178B               	bsf	11,7	;volatile
 10204  00BA                     l6227:	
 10205                           
 10206                           ;main.c: 172:     (INTCONbits.PEIE = 1);
 10207  00BA  170B               	bsf	11,6	;volatile
 10208  00BB                     l1217:	
 10209                           ;main.c: 175:     while (1)
 10210                           
 10211  00BB  0063               	sleep	;# 
 10212  00BC                     l6229:	
 10213                           
 10214                           ;main.c: 179:             __nop();
 10215  00BC  0000               	nop
 10216  00BD                     l6231:	
 10217                           
 10218                           ;main.c: 181:              PIE4bits.TMR1IE = 0;
 10219  00BD  002E               	movlb	14	; select bank14
 10220  00BE  101A               	bcf	26,0	;volatile
 10221                           
 10222                           ;main.c: 182:              t5s = last5s;
 10223  00BF  0020               	movlb	0	; select bank0
 10224  00C0  083C               	movf	_last5s,w	;volatile
 10225  00C1  00D8               	movwf	??_main
 10226  00C2  0858               	movf	??_main,w
 10227  00C3  0021               	movlb	1	; select bank1
 10228  00C4  00C6               	movwf	main@t5s^(0+128)
 10229  00C5                     l6233:	
 10230                           
 10231                           ;main.c: 183:              PIE4bits.TMR1IE = 1;
 10232  00C5  002E               	movlb	14	; select bank14
 10233  00C6  141A               	bsf	26,0	;volatile
 10234                           
 10235                           ;main.c: 185:              if(t5s >= pmon){
 10236  00C7  0020               	movlb	0	; select bank0
 10237  00C8  0862               	movf	_pmon,w
 10238  00C9  0021               	movlb	1	; select bank1
 10239  00CA  0246               	subwf	main@t5s^(0+128),w
 10240  00CB  1C03               	skipc
 10241  00CC  28CE               	goto	u3211
 10242  00CD  28CF               	goto	u3210
 10243  00CE                     u3211:	
 10244  00CE  28BB               	goto	l1217
 10245  00CF                     u3210:	
 10246  00CF                     l6235:	
 10247                           
 10248                           ;main.c: 186:                     PIE4bits.TMR1IE = 0;
 10249  00CF  002E               	movlb	14	; select bank14
 10250  00D0  101A               	bcf	26,0	;volatile
 10251  00D1                     l6237:	
 10252                           
 10253                           ;main.c: 187:                     last5s =0;
 10254  00D1  0020               	movlb	0	; select bank0
 10255  00D2  01BC               	clrf	_last5s	;volatile
 10256  00D3                     l6239:	
 10257                           
 10258                           ;main.c: 188:                     PIE4bits.TMR1IE = 1;
 10259  00D3  002E               	movlb	14	; select bank14
 10260  00D4  141A               	bsf	26,0	;volatile
 10261  00D5                     l6241:	
 10262                           
 10263                           ;main.c: 191:                          if(!config_mode){
 10264  00D5  0020               	movlb	0	; select bank0
 10265  00D6  0839               	movf	_config_mode,w	;volatile
 10266  00D7  1D03               	btfss	3,2
 10267  00D8  28DA               	goto	u3221
 10268  00D9  28DB               	goto	u3220
 10269  00DA                     u3221:	
 10270  00DA  29C6               	goto	l6299
 10271  00DB                     u3220:	
 10272  00DB                     l6243:	
 10273                           
 10274                           ;main.c: 193:                              convertedValue = ADC_read();
 10275  00DB  318F  2735  3180   	fcall	_ADC_read
 10276  00DE  0020               	movlb	0	; select bank0
 10277  00DF  084A               	movf	?_ADC_read+1,w
 10278  00E0  00A7               	movwf	_convertedValue+1
 10279  00E1  0849               	movf	?_ADC_read,w
 10280  00E2  00A6               	movwf	_convertedValue
 10281  00E3                     l6245:	
 10282                           
 10283                           ;main.c: 194:                              lum_bin = (convertedValue >> 8);
 10284  00E3  0827               	movf	_convertedValue+1,w
 10285  00E4  00D9               	movwf	??_main+1
 10286  00E5  0826               	movf	_convertedValue,w
 10287  00E6  00D8               	movwf	??_main
 10288  00E7  0859               	movf	??_main+1,w
 10289  00E8  00D8               	movwf	??_main
 10290  00E9  01D9               	clrf	??_main+1
 10291  00EA  0858               	movf	??_main,w
 10292  00EB  00A2               	movwf	_lum_bin
 10293  00EC  0859               	movf	??_main+1,w
 10294  00ED  00A3               	movwf	_lum_bin+1
 10295  00EE                     l6247:	
 10296                           
 10297                           ;main.c: 195:                              LED_bin(lum_bin);
 10298  00EE  0823               	movf	_lum_bin+1,w
 10299  00EF  00C8               	movwf	LED_bin@value+1
 10300  00F0  0822               	movf	_lum_bin,w
 10301  00F1  00C7               	movwf	LED_bin@value
 10302  00F2  318F  274F  3180   	fcall	_LED_bin
 10303  00F5                     l6249:	
 10304                           
 10305                           ;main.c: 197:                              __nop();
 10306  00F5  0000               	nop
 10307  00F6                     l6251:	
 10308                           
 10309                           ;main.c: 199:                              __nop();
 10310  00F6  0000               	nop
 10311  00F7                     l6253:	
 10312                           
 10313                           ;main.c: 201:                              lum_threshold = (lum_bin > 2 || temp > 25 ) &
      +                           alaf;
 10314  00F7  0021               	movlb	1	; select bank1
 10315  00F8  01C7               	clrf	_main$2305^(0+128)
 10316  00F9  0AC7               	incf	_main$2305^(0+128),f
 10317  00FA                     l6255:	
 10318  00FA  3000               	movlw	0
 10319  00FB  0020               	movlb	0	; select bank0
 10320  00FC  0223               	subwf	_lum_bin+1,w
 10321  00FD  3003               	movlw	3
 10322  00FE  1903               	skipnz
 10323  00FF  0222               	subwf	_lum_bin,w
 10324  0100  1803               	skipnc
 10325  0101  2903               	goto	u3231
 10326  0102  2904               	goto	u3230
 10327  0103                     u3231:	
 10328  0103  290C               	goto	l6261
 10329  0104                     u3230:	
 10330  0104                     l6257:	
 10331  0104  301A               	movlw	26
 10332  0105  0237               	subwf	_temp,w
 10333  0106  1803               	skipnc
 10334  0107  2909               	goto	u3241
 10335  0108  290A               	goto	u3240
 10336  0109                     u3241:	
 10337  0109  290C               	goto	l6261
 10338  010A                     u3240:	
 10339  010A                     l6259:	
 10340  010A  0021               	movlb	1	; select bank1
 10341  010B  01C7               	clrf	_main$2305^(0+128)
 10342  010C                     l6261:	
 10343  010C  0021               	movlb	1	; select bank1
 10344  010D  0847               	movf	_main$2305^(0+128),w
 10345  010E  0020               	movlb	0	; select bank0
 10346  010F  0536               	andwf	_alaf,w
 10347  0110  00D8               	movwf	??_main
 10348  0111  01D9               	clrf	??_main+1
 10349  0112  0858               	movf	??_main,w
 10350  0113  00A0               	movwf	_lum_threshold
 10351  0114  0859               	movf	??_main+1,w
 10352  0115  00A1               	movwf	_lum_threshold+1
 10353  0116                     l6263:	
 10354                           
 10355                           ;main.c: 203:                            if (temp != read_ring(nreg_pt, nreg, nreg_init,
      +                           0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10356  0116  0863               	movf	_nreg,w
 10357  0117  00D8               	movwf	??_main
 10358  0118  0858               	movf	??_main,w
 10359  0119  00CB               	movwf	read_ring@nreg
 10360  011A  0843               	movf	_nreg_init,w
 10361  011B  00D9               	movwf	??_main+1
 10362  011C  0859               	movf	??_main+1,w
 10363  011D  00CC               	movwf	read_ring@nreg_init
 10364  011E  01CD               	clrf	read_ring@index
 10365  011F  3003               	movlw	3
 10366  0120  00DA               	movwf	??_main+2
 10367  0121  085A               	movf	??_main+2,w
 10368  0122  00CE               	movwf	read_ring@subindex
 10369  0123  0842               	movf	_nreg_pt,w
 10370  0124  3186  266F  3180   	fcall	_read_ring
 10371  0127  0020               	movlb	0	; select bank0
 10372  0128  0637               	xorwf	_temp,w
 10373  0129  1D03               	skipz
 10374  012A  292C               	goto	u3251
 10375  012B  292D               	goto	u3250
 10376  012C                     u3251:	
 10377  012C  294B               	goto	l1225
 10378  012D                     u3250:	
 10379  012D                     l6265:	
 10380  012D  0863               	movf	_nreg,w
 10381  012E  00D8               	movwf	??_main
 10382  012F  0858               	movf	??_main,w
 10383  0130  00CB               	movwf	read_ring@nreg
 10384  0131  0843               	movf	_nreg_init,w
 10385  0132  00D9               	movwf	??_main+1
 10386  0133  0859               	movf	??_main+1,w
 10387  0134  00CC               	movwf	read_ring@nreg_init
 10388  0135  01CD               	clrf	read_ring@index
 10389  0136  3004               	movlw	4
 10390  0137  00DA               	movwf	??_main+2
 10391  0138  085A               	movf	??_main+2,w
 10392  0139  00CE               	movwf	read_ring@subindex
 10393  013A  0842               	movf	_nreg_pt,w
 10394  013B  3186  266F  3180   	fcall	_read_ring
 10395  013E  0020               	movlb	0	; select bank0
 10396  013F  00DB               	movwf	??_main+3
 10397  0140  01DC               	clrf	??_main+4
 10398  0141  0823               	movf	_lum_bin+1,w
 10399  0142  065C               	xorwf	??_main+4,w
 10400  0143  1D03               	skipz
 10401  0144  2947               	goto	u3265
 10402  0145  0822               	movf	_lum_bin,w
 10403  0146  065B               	xorwf	??_main+3,w
 10404  0147                     u3265:	
 10405  0147  1903               	skipnz
 10406  0148  294A               	goto	u3261
 10407  0149  294B               	goto	u3260
 10408  014A                     u3261:	
 10409  014A  298D               	goto	l6277
 10410  014B                     u3260:	
 10411  014B                     l1225:	
 10412                           
 10413                           ;main.c: 205:                                  PIE4bits.TMR1IE = 0;
 10414  014B  002E               	movlb	14	; select bank14
 10415  014C  101A               	bcf	26,0	;volatile
 10416  014D                     l6267:	
 10417                           
 10418                           ;main.c: 206:                                  ring_byte[0] = clkh;
 10419  014D  0020               	movlb	0	; select bank0
 10420  014E  0841               	movf	_clkh,w	;volatile
 10421  014F  00D8               	movwf	??_main
 10422  0150  0858               	movf	??_main,w
 10423  0151  0021               	movlb	1	; select bank1
 10424  0152  00BD               	movwf	_ring_byte^(0+128)
 10425                           
 10426                           ;main.c: 207:                                  ring_byte[1] = clkm;
 10427  0153  0020               	movlb	0	; select bank0
 10428  0154  0840               	movf	_clkm,w	;volatile
 10429  0155  00D8               	movwf	??_main
 10430  0156  0858               	movf	??_main,w
 10431  0157  0021               	movlb	1	; select bank1
 10432  0158  00BE               	movwf	(_ring_byte^(0+128)+1)
 10433                           
 10434                           ;main.c: 208:                                  ring_byte[2] = seg;
 10435  0159  0020               	movlb	0	; select bank0
 10436  015A  083F               	movf	_seg,w	;volatile
 10437  015B  00D8               	movwf	??_main
 10438  015C  0858               	movf	??_main,w
 10439  015D  0021               	movlb	1	; select bank1
 10440  015E  00BF               	movwf	(_ring_byte^(0+128)+2)
 10441  015F                     l6269:	
 10442                           
 10443                           ;main.c: 209:                                   PIE4bits.TMR1IE = 1;
 10444  015F  002E               	movlb	14	; select bank14
 10445  0160  141A               	bsf	26,0	;volatile
 10446                           
 10447                           ;main.c: 210:                                  ring_byte[3] = temp;
 10448  0161  0020               	movlb	0	; select bank0
 10449  0162  0837               	movf	_temp,w
 10450  0163  00D8               	movwf	??_main
 10451  0164  0858               	movf	??_main,w
 10452  0165  0021               	movlb	1	; select bank1
 10453  0166  00C0               	movwf	(_ring_byte^(0+128)+3)
 10454                           
 10455                           ;main.c: 211:                                  ring_byte[4] = lum_bin;
 10456  0167  0020               	movlb	0	; select bank0
 10457  0168  0822               	movf	_lum_bin,w
 10458  0169  00D8               	movwf	??_main
 10459  016A  0858               	movf	??_main,w
 10460  016B  0021               	movlb	1	; select bank1
 10461  016C  00C1               	movwf	(_ring_byte^(0+128)+4)
 10462  016D                     l6271:	
 10463                           
 10464                           ;main.c: 212:                                  push_ring(&nreg_pt, nreg, &nreg_init, rin
      +                          g_byte);
 10465  016D  0020               	movlb	0	; select bank0
 10466  016E  0863               	movf	_nreg,w
 10467  016F  00D8               	movwf	??_main
 10468  0170  0858               	movf	??_main,w
 10469  0171  00D1               	movwf	push_ring@nreg
 10470  0172  3043               	movlw	(low (_nreg_init| 0))& (0+255)
 10471  0173  00D9               	movwf	??_main+1
 10472  0174  0859               	movf	??_main+1,w
 10473  0175  00D2               	movwf	push_ring@nreg_init
 10474  0176  30BD               	movlw	(low (_ring_byte| 0))& (0+255)
 10475  0177  00DA               	movwf	??_main+2
 10476  0178  085A               	movf	??_main+2,w
 10477  0179  00D3               	movwf	push_ring@ring_byte
 10478  017A  3042               	movlw	(low (_nreg_pt| 0))& (0+255)
 10479  017B  3185  25E8  3180   	fcall	_push_ring
 10480  017E                     l6273:	
 10481                           
 10482                           ;main.c: 214:                                  DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt
      +                          );
 10483  017E  30F9               	movlw	249
 10484  017F  0020               	movlb	0	; select bank0
 10485  0180  00CD               	movwf	DATAEE_WriteByte@bAdd
 10486  0181  30F0               	movlw	240
 10487  0182  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10488  0183  0842               	movf	_nreg_pt,w
 10489  0184  00D8               	movwf	??_main
 10490  0185  0858               	movf	??_main,w
 10491  0186  00CF               	movwf	DATAEE_WriteByte@bData
 10492  0187  3187  27C2  3180   	fcall	_DATAEE_WriteByte
 10493  018A                     l6275:	
 10494                           
 10495                           ;main.c: 215:                                  cksum_w();
 10496  018A  318E  2600  3180   	fcall	_cksum_w
 10497  018D                     l6277:	
 10498                           
 10499                           ;main.c: 220:                              if(lum_threshold){
 10500  018D  0020               	movlb	0	; select bank0
 10501  018E  0820               	movf	_lum_threshold,w
 10502  018F  0421               	iorwf	_lum_threshold+1,w
 10503  0190  1903               	btfsc	3,2
 10504  0191  2993               	goto	u3271
 10505  0192  2994               	goto	u3270
 10506  0193                     u3271:	
 10507  0193  29B6               	goto	l6293
 10508  0194                     u3270:	
 10509  0194                     l6279:	
 10510                           
 10511                           ;main.c: 221:                                  if(alarm == 2){
 10512  0194  3002               	movlw	2
 10513  0195  0638               	xorwf	_alarm,w	;volatile
 10514  0196  1D03               	btfss	3,2
 10515  0197  2999               	goto	u3281
 10516  0198  299A               	goto	u3280
 10517  0199                     u3281:	
 10518  0199  29A6               	goto	l6285
 10519  019A                     u3280:	
 10520  019A                     l6281:	
 10521                           
 10522                           ;main.c: 222:                                      duty_cycle +=1 ;
 10523  019A  3001               	movlw	1
 10524  019B  07A4               	addwf	_duty_cycle,f
 10525  019C  3000               	movlw	0
 10526  019D  3DA5               	addwfc	_duty_cycle+1,f
 10527  019E                     l6283:	
 10528                           
 10529                           ;main.c: 223:                                      PWM6_LoadDutyValue(duty_cycle);
 10530  019E  0825               	movf	_duty_cycle+1,w
 10531  019F  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10532  01A0  0824               	movf	_duty_cycle,w
 10533  01A1  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10534  01A2  318F  271C  3180   	fcall	_PWM6_LoadDutyValue
 10535                           
 10536                           ;main.c: 224:                                  }
 10537  01A5  29D2               	goto	l6307
 10538  01A6                     l6285:	
 10539  01A6  0838               	movf	_alarm,w	;volatile
 10540  01A7  1D03               	btfss	3,2
 10541  01A8  29AA               	goto	u3291
 10542  01A9  29AB               	goto	u3290
 10543  01AA                     u3291:	
 10544  01AA  29C5               	goto	l1230
 10545  01AB                     u3290:	
 10546  01AB                     l6287:	
 10547                           
 10548                           ;main.c: 226:                                      PIE0bits.TMR0IE = 1;
 10549  01AB  002E               	movlb	14	; select bank14
 10550  01AC  1696               	bsf	22,5	;volatile
 10551  01AD                     l6289:	
 10552                           
 10553                           ;main.c: 227:                                      TMR0_StartTimer();
 10554  01AD  318C  249A  3180   	fcall	_TMR0_StartTimer
 10555  01B0                     l6291:	
 10556                           
 10557                           ;main.c: 228:                                      alarm = 2 ;
 10558  01B0  3002               	movlw	2
 10559  01B1  0020               	movlb	0	; select bank0
 10560  01B2  00D8               	movwf	??_main
 10561  01B3  0858               	movf	??_main,w
 10562  01B4  00B8               	movwf	_alarm	;volatile
 10563  01B5  29D2               	goto	l6307
 10564  01B6                     l6293:	
 10565                           
 10566                           ;main.c: 232:                                  if(alarm == 2){
 10567  01B6  3002               	movlw	2
 10568  01B7  0638               	xorwf	_alarm,w	;volatile
 10569  01B8  1D03               	btfss	3,2
 10570  01B9  29BB               	goto	u3301
 10571  01BA  29BC               	goto	u3300
 10572  01BB                     u3301:	
 10573  01BB  29D2               	goto	l6307
 10574  01BC                     u3300:	
 10575  01BC                     l6295:	
 10576                           
 10577                           ;main.c: 233:                                      PWM6_LoadDutyValue(0);
 10578  01BC  3000               	movlw	0
 10579  01BD  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 10580  01BE  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10581  01BF  318F  271C  3180   	fcall	_PWM6_LoadDutyValue
 10582  01C2                     l6297:	
 10583                           
 10584                           ;main.c: 234:                                      alarm = 0 ;
 10585  01C2  0020               	movlb	0	; select bank0
 10586  01C3  01B8               	clrf	_alarm	;volatile
 10587  01C4  29D2               	goto	l6307
 10588  01C5                     l1230:	
 10589                           ;main.c: 236:                              }
 10590                           
 10591                           
 10592                           ;main.c: 238:                           }
 10593  01C5  29D2               	goto	l6307
 10594  01C6                     l6299:	
 10595  01C6  0339               	decf	_config_mode,w	;volatile
 10596  01C7  1D03               	btfss	3,2
 10597  01C8  29CA               	goto	u3311
 10598  01C9  29CB               	goto	u3310
 10599  01CA                     u3311:	
 10600  01CA  29D2               	goto	l6307
 10601  01CB                     u3310:	
 10602  01CB                     l6301:	
 10603                           
 10604                           ;main.c: 242:                            (PIE0bits.INTE = 0);
 10605  01CB  002E               	movlb	14	; select bank14
 10606  01CC  1016               	bcf	22,0	;volatile
 10607  01CD                     l6303:	
 10608                           
 10609                           ;main.c: 243:                            config_routine();
 10610  01CD  3182  22B5  3180   	fcall	_config_routine
 10611  01D0                     l6305:	
 10612                           
 10613                           ;main.c: 244:                            (PIE0bits.INTE = 1);
 10614  01D0  002E               	movlb	14	; select bank14
 10615  01D1  1416               	bsf	22,0	;volatile
 10616  01D2                     l6307:	
 10617                           
 10618                           ;main.c: 247:                      _delay((unsigned long)((10)*(1000000/4000.0)));
 10619  01D2  3004               	movlw	4
 10620  01D3  0020               	movlb	0	; select bank0
 10621  01D4  00D8               	movwf	??_main
 10622  01D5  303D               	movlw	61
 10623  01D6                     u3367:	
 10624  01D6  0B89               	decfsz	9,f
 10625  01D7  29D6               	goto	u3367
 10626  01D8  0BD8               	decfsz	??_main,f
 10627  01D9  29D6               	goto	u3367
 10628  01DA  3200               	nop2
 10629  01DB                     l6309:	
 10630                           
 10631                           ;main.c: 249:                     }while(alarm == 2);
 10632  01DB  3002               	movlw	2
 10633  01DC  0020               	movlb	0	; select bank0
 10634  01DD  0638               	xorwf	_alarm,w	;volatile
 10635  01DE  1903               	btfsc	3,2
 10636  01DF  29E1               	goto	u3321
 10637  01E0  29E2               	goto	u3320
 10638  01E1                     u3321:	
 10639  01E1  28D5               	goto	l6241
 10640  01E2                     u3320:	
 10641  01E2                     l1234:	
 10642                           
 10643                           ;main.c: 251:                         PIE4bits.TMR1IE = 0;
 10644  01E2  002E               	movlb	14	; select bank14
 10645  01E3  101A               	bcf	26,0	;volatile
 10646  01E4                     l6311:	
 10647                           
 10648                           ;main.c: 252:                         if (last1m >= 1) {
 10649  01E4  0020               	movlb	0	; select bank0
 10650  01E5  083B               	movf	_last1m,w	;volatile
 10651  01E6  1903               	btfsc	3,2
 10652  01E7  29E9               	goto	u3331
 10653  01E8  29EA               	goto	u3330
 10654  01E9                     u3331:	
 10655  01E9  2A18               	goto	l1235
 10656  01EA                     u3330:	
 10657  01EA                     l6313:	
 10658                           
 10659                           ;main.c: 254:                             last1m = 0;
 10660  01EA  01BB               	clrf	_last1m	;volatile
 10661  01EB                     l6315:	
 10662                           
 10663                           ;main.c: 255:                             aux = clkh;
 10664  01EB  0841               	movf	_clkh,w	;volatile
 10665  01EC  00D8               	movwf	??_main
 10666  01ED  0858               	movf	??_main,w
 10667  01EE  0021               	movlb	1	; select bank1
 10668  01EF  00C2               	movwf	main@aux^(0+128)
 10669  01F0                     l6317:	
 10670                           
 10671                           ;main.c: 256:                             aux1 = clkm;
 10672  01F0  0020               	movlb	0	; select bank0
 10673  01F1  0840               	movf	_clkm,w	;volatile
 10674  01F2  00D8               	movwf	??_main
 10675  01F3  0858               	movf	??_main,w
 10676  01F4  0021               	movlb	1	; select bank1
 10677  01F5  00C3               	movwf	main@aux1^(0+128)
 10678  01F6                     l6319:	
 10679                           
 10680                           ;main.c: 257:                             PIE4bits.TMR1IE = 1;
 10681  01F6  002E               	movlb	14	; select bank14
 10682  01F7  141A               	bsf	26,0	;volatile
 10683  01F8                     l6321:	
 10684                           
 10685                           ;main.c: 258:                             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10686  01F8  30F6               	movlw	246
 10687  01F9  0020               	movlb	0	; select bank0
 10688  01FA  00CD               	movwf	DATAEE_WriteByte@bAdd
 10689  01FB  30F0               	movlw	240
 10690  01FC  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10691  01FD  0021               	movlb	1	; select bank1
 10692  01FE  0842               	movf	main@aux^(0+128),w
 10693  01FF  0020               	movlb	0	; select bank0
 10694  0200  00D8               	movwf	??_main
 10695  0201  0858               	movf	??_main,w
 10696  0202  00CF               	movwf	DATAEE_WriteByte@bData
 10697  0203  3187  27C2  3180   	fcall	_DATAEE_WriteByte
 10698  0206                     l6323:	
 10699                           
 10700                           ;main.c: 259:                             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10701  0206  30F7               	movlw	247
 10702  0207  0020               	movlb	0	; select bank0
 10703  0208  00CD               	movwf	DATAEE_WriteByte@bAdd
 10704  0209  30F0               	movlw	240
 10705  020A  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10706  020B  0021               	movlb	1	; select bank1
 10707  020C  0843               	movf	main@aux1^(0+128),w
 10708  020D  0020               	movlb	0	; select bank0
 10709  020E  00D8               	movwf	??_main
 10710  020F  0858               	movf	??_main,w
 10711  0210  00CF               	movwf	DATAEE_WriteByte@bData
 10712  0211  3187  27C2  3180   	fcall	_DATAEE_WriteByte
 10713  0214                     l6325:	
 10714                           
 10715                           ;main.c: 260:                             cksum_w();
 10716  0214  318E  2600  3180   	fcall	_cksum_w
 10717                           
 10718                           ;main.c: 262:                         }else{
 10719  0217  28BB               	goto	l1217
 10720  0218                     l1235:	
 10721                           
 10722                           ;main.c: 263:                           PIE4bits.TMR1IE = 1;}
 10723  0218  002E               	movlb	14	; select bank14
 10724  0219  141A               	bsf	26,0	;volatile
 10725  021A  28BB               	goto	l1217
 10726  021B  3180  285B         	ljmp	start
 10727  021D                     __end_of_main:	
 10728                           
 10729                           	psect	text1
 10730  021D                     __ptext1:	
 10731 ;; *************** function _recoverData *****************
 10732 ;; Defined at:
 10733 ;;		line 11 in file "eeprom_rw.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;		None
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;		None
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      void 
 10740 ;; Registers used:
 10741 ;;		wreg, status,2, status,0, pclath, cstack
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;Total ram usage:        1 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:    9
 10754 ;; This function calls:
 10755 ;;		_DATAEE_ReadByte
 10756 ;;		_DATAEE_WriteByte
 10757 ;;		_cksum
 10758 ;;		_cksum_w
 10759 ;;		_reset_recv
 10760 ;; This function is called by:
 10761 ;;		_main
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           
 10766                           ;psect for function _recoverData
 10767  021D                     _recoverData:	
 10768  021D                     l6069:	
 10769                           ;incstack = 0
 10770                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10771                           
 10772                           
 10773                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10774  021D  30F5               	movlw	245
 10775  021E  0020               	movlb	0	; select bank0
 10776  021F  00C7               	movwf	DATAEE_ReadByte@bAdd
 10777  0220  30F0               	movlw	240
 10778  0221  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10779  0222  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10780  0225  3AAB               	xorlw	171
 10781  0226  1D03               	skipz
 10782  0227  2A29               	goto	u3041
 10783  0228  2A2A               	goto	u3040
 10784  0229                     u3041:	
 10785  0229  2A7E               	goto	l6075
 10786  022A                     u3040:	
 10787  022A                     l6071:	
 10788                           
 10789                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10790  022A  318F  27E0  3182   	fcall	_cksum
 10791  022D  0020               	movlb	0	; select bank0
 10792  022E  00D3               	movwf	??_recoverData
 10793  022F  30FF               	movlw	255
 10794  0230  00C7               	movwf	DATAEE_ReadByte@bAdd
 10795  0231  30F0               	movlw	240
 10796  0232  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10797  0233  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10798  0236  0020               	movlb	0	; select bank0
 10799  0237  0653               	xorwf	??_recoverData,w
 10800  0238  1D03               	skipz
 10801  0239  2A3B               	goto	u3051
 10802  023A  2A3C               	goto	u3050
 10803  023B                     u3051:	
 10804  023B  2A7E               	goto	l6075
 10805  023C                     u3050:	
 10806  023C                     l6073:	
 10807                           
 10808                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10809  023C  30F6               	movlw	246
 10810  023D  00C7               	movwf	DATAEE_ReadByte@bAdd
 10811  023E  30F0               	movlw	240
 10812  023F  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10813  0240  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10814  0243  0020               	movlb	0	; select bank0
 10815  0244  00D3               	movwf	??_recoverData
 10816  0245  0853               	movf	??_recoverData,w
 10817  0246  00C1               	movwf	_clkh	;volatile
 10818                           
 10819                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10820  0247  30F7               	movlw	247
 10821  0248  00C7               	movwf	DATAEE_ReadByte@bAdd
 10822  0249  30F0               	movlw	240
 10823  024A  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10824  024B  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10825  024E  0020               	movlb	0	; select bank0
 10826  024F  00D3               	movwf	??_recoverData
 10827  0250  0853               	movf	??_recoverData,w
 10828  0251  00C0               	movwf	_clkm	;volatile
 10829                           
 10830                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10831  0252  30F8               	movlw	248
 10832  0253  00C7               	movwf	DATAEE_ReadByte@bAdd
 10833  0254  30F0               	movlw	240
 10834  0255  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10835  0256  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10836  0259  0020               	movlb	0	; select bank0
 10837  025A  00D3               	movwf	??_recoverData
 10838  025B  0853               	movf	??_recoverData,w
 10839  025C  00E3               	movwf	_nreg
 10840                           
 10841                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10842  025D  30F9               	movlw	249
 10843  025E  00C7               	movwf	DATAEE_ReadByte@bAdd
 10844  025F  30F0               	movlw	240
 10845  0260  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10846  0261  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10847  0264  0020               	movlb	0	; select bank0
 10848  0265  00D3               	movwf	??_recoverData
 10849  0266  0853               	movf	??_recoverData,w
 10850  0267  00C2               	movwf	_nreg_pt
 10851                           
 10852                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10853  0268  30FA               	movlw	250
 10854  0269  00C7               	movwf	DATAEE_ReadByte@bAdd
 10855  026A  30F0               	movlw	240
 10856  026B  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10857  026C  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10858  026F  0020               	movlb	0	; select bank0
 10859  0270  00D3               	movwf	??_recoverData
 10860  0271  0853               	movf	??_recoverData,w
 10861  0272  00E2               	movwf	_pmon
 10862                           
 10863                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10864  0273  30FB               	movlw	251
 10865  0274  00C7               	movwf	DATAEE_ReadByte@bAdd
 10866  0275  30F0               	movlw	240
 10867  0276  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 10868  0277  318D  25E1  3182   	fcall	_DATAEE_ReadByte
 10869  027A  0020               	movlb	0	; select bank0
 10870  027B  00D3               	movwf	??_recoverData
 10871  027C  0853               	movf	??_recoverData,w
 10872  027D  00E1               	movwf	_tala
 10873  027E                     l6075:	
 10874                           
 10875                           ;eeprom_rw.c: 24:     reset_recv();
 10876  027E  318F  2785  3182   	fcall	_reset_recv
 10877  0281                     l6077:	
 10878                           
 10879                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10880  0281  30F5               	movlw	245
 10881  0282  0020               	movlb	0	; select bank0
 10882  0283  00CD               	movwf	DATAEE_WriteByte@bAdd
 10883  0284  30F0               	movlw	240
 10884  0285  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10885  0286  30AB               	movlw	171
 10886  0287  00D3               	movwf	??_recoverData
 10887  0288  0853               	movf	??_recoverData,w
 10888  0289  00CF               	movwf	DATAEE_WriteByte@bData
 10889  028A  3187  27C2  3182   	fcall	_DATAEE_WriteByte
 10890  028D                     l6079:	
 10891                           
 10892                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10893  028D  30F8               	movlw	248
 10894  028E  0020               	movlb	0	; select bank0
 10895  028F  00CD               	movwf	DATAEE_WriteByte@bAdd
 10896  0290  30F0               	movlw	240
 10897  0291  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10898  0292  0863               	movf	_nreg,w
 10899  0293  00D3               	movwf	??_recoverData
 10900  0294  0853               	movf	??_recoverData,w
 10901  0295  00CF               	movwf	DATAEE_WriteByte@bData
 10902  0296  3187  27C2  3182   	fcall	_DATAEE_WriteByte
 10903  0299                     l6081:	
 10904                           
 10905                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10906  0299  30FA               	movlw	250
 10907  029A  0020               	movlb	0	; select bank0
 10908  029B  00CD               	movwf	DATAEE_WriteByte@bAdd
 10909  029C  30F0               	movlw	240
 10910  029D  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10911  029E  0862               	movf	_pmon,w
 10912  029F  00D3               	movwf	??_recoverData
 10913  02A0  0853               	movf	??_recoverData,w
 10914  02A1  00CF               	movwf	DATAEE_WriteByte@bData
 10915  02A2  3187  27C2  3182   	fcall	_DATAEE_WriteByte
 10916  02A5                     l6083:	
 10917                           
 10918                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10919  02A5  30FB               	movlw	251
 10920  02A6  0020               	movlb	0	; select bank0
 10921  02A7  00CD               	movwf	DATAEE_WriteByte@bAdd
 10922  02A8  30F0               	movlw	240
 10923  02A9  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10924  02AA  0861               	movf	_tala,w
 10925  02AB  00D3               	movwf	??_recoverData
 10926  02AC  0853               	movf	??_recoverData,w
 10927  02AD  00CF               	movwf	DATAEE_WriteByte@bData
 10928  02AE  3187  27C2  3182   	fcall	_DATAEE_WriteByte
 10929  02B1                     l6085:	
 10930                           
 10931                           ;eeprom_rw.c: 31:     cksum_w();
 10932  02B1  318E  2600  3182   	fcall	_cksum_w
 10933  02B4                     l1550:	
 10934  02B4  0008               	return
 10935  02B5                     __end_of_recoverData:	
 10936                           
 10937                           	psect	text2
 10938  0F85                     __ptext2:	
 10939 ;; *************** function _reset_recv *****************
 10940 ;; Defined at:
 10941 ;;		line 75 in file "eeprom_rw.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  i               2   13[BANK0 ] unsigned int 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2, status,0, pclath, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;Total ram usage:        2 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    7
 10962 ;; This function calls:
 10963 ;;		_DATAEE_WriteByte
 10964 ;; This function is called by:
 10965 ;;		_recoverData
 10966 ;;		_recover
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _reset_recv
 10972  0F85                     _reset_recv:	
 10973  0F85                     l6027:	
 10974                           ;incstack = 0
 10975                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10976                           
 10977                           
 10978                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10979  0F85  30F5               	movlw	245
 10980  0F86  0020               	movlb	0	; select bank0
 10981  0F87  00D1               	movwf	reset_recv@i
 10982  0F88  30F0               	movlw	240
 10983  0F89  00D2               	movwf	reset_recv@i+1
 10984  0F8A                     l6031:	
 10985                           
 10986                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10987  0F8A  0852               	movf	reset_recv@i+1,w
 10988  0F8B  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 10989  0F8C  0851               	movf	reset_recv@i,w
 10990  0F8D  00CD               	movwf	DATAEE_WriteByte@bAdd
 10991  0F8E  01CF               	clrf	DATAEE_WriteByte@bData
 10992  0F8F  3187  27C2  318F   	fcall	_DATAEE_WriteByte
 10993  0F92                     l6033:	
 10994  0F92  3001               	movlw	1
 10995  0F93  0020               	movlb	0	; select bank0
 10996  0F94  07D1               	addwf	reset_recv@i,f
 10997  0F95  3000               	movlw	0
 10998  0F96  3DD2               	addwfc	reset_recv@i+1,f
 10999  0F97                     l6035:	
 11000  0F97  30F1               	movlw	241
 11001  0F98  0252               	subwf	reset_recv@i+1,w
 11002  0F99  3000               	movlw	0
 11003  0F9A  1903               	skipnz
 11004  0F9B  0251               	subwf	reset_recv@i,w
 11005  0F9C  1C03               	skipc
 11006  0F9D  2F9F               	goto	u3011
 11007  0F9E  2FA0               	goto	u3010
 11008  0F9F                     u3011:	
 11009  0F9F  2F8A               	goto	l6031
 11010  0FA0                     u3010:	
 11011  0FA0                     l1577:	
 11012  0FA0  0008               	return
 11013  0FA1                     __end_of_reset_recv:	
 11014                           
 11015                           	psect	text3
 11016  0E00                     __ptext3:	
 11017 ;; *************** function _cksum_w *****************
 11018 ;; Defined at:
 11019 ;;		line 61 in file "eeprom_rw.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;		None
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;		None
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  1    wreg      void 
 11026 ;; Registers used:
 11027 ;;		wreg, status,2, status,0, pclath, cstack
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;Total ram usage:        1 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    8
 11040 ;; This function calls:
 11041 ;;		_DATAEE_WriteByte
 11042 ;;		_cksum
 11043 ;; This function is called by:
 11044 ;;		_main
 11045 ;;		_recoverData
 11046 ;;		_recover
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           
 11051                           ;psect for function _cksum_w
 11052  0E00                     _cksum_w:	
 11053  0E00                     l5953:	
 11054                           ;incstack = 0
 11055                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11056                           
 11057                           
 11058                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 11059  0E00  30FF               	movlw	255
 11060  0E01  0020               	movlb	0	; select bank0
 11061  0E02  00CD               	movwf	DATAEE_WriteByte@bAdd
 11062  0E03  30F0               	movlw	240
 11063  0E04  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11064  0E05  318F  27E0  318E   	fcall	_cksum
 11065  0E08  0020               	movlb	0	; select bank0
 11066  0E09  00D1               	movwf	??_cksum_w
 11067  0E0A  0851               	movf	??_cksum_w,w
 11068  0E0B  00CF               	movwf	DATAEE_WriteByte@bData
 11069  0E0C  3187  27C2  318E   	fcall	_DATAEE_WriteByte
 11070  0E0F                     l1567:	
 11071  0E0F  0008               	return
 11072  0E10                     __end_of_cksum_w:	
 11073                           
 11074                           	psect	text4
 11075  0FE0                     __ptext4:	
 11076 ;; *************** function _cksum *****************
 11077 ;; Defined at:
 11078 ;;		line 66 in file "eeprom_rw.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;		None
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;  i               2    7[BANK0 ] unsigned int 
 11083 ;;  res             1    6[BANK0 ] unsigned char 
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1    wreg      unsigned char 
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, status,0, pclath, cstack
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        4 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:    7
 11100 ;; This function calls:
 11101 ;;		_DATAEE_ReadByte
 11102 ;; This function is called by:
 11103 ;;		_recoverData
 11104 ;;		_cksum_w
 11105 ;;		_recover
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           
 11110                           ;psect for function _cksum
 11111  0FE0                     _cksum:	
 11112  0FE0                     l5797:	
 11113                           ;incstack = 0
 11114                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 11115                           
 11116                           
 11117                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 11118  0FE0  0020               	movlb	0	; select bank0
 11119  0FE1  01CA               	clrf	cksum@res
 11120  0FE2                     l5799:	
 11121                           
 11122                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 11123  0FE2  30F5               	movlw	245
 11124  0FE3  00CB               	movwf	cksum@i
 11125  0FE4  30F0               	movlw	240
 11126  0FE5  00CC               	movwf	cksum@i+1
 11127  0FE6                     l5805:	
 11128                           
 11129                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 11130  0FE6  084C               	movf	cksum@i+1,w
 11131  0FE7  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11132  0FE8  084B               	movf	cksum@i,w
 11133  0FE9  00C7               	movwf	DATAEE_ReadByte@bAdd
 11134  0FEA  318D  25E1  318F   	fcall	_DATAEE_ReadByte
 11135  0FED  0020               	movlb	0	; select bank0
 11136  0FEE  00C9               	movwf	??_cksum
 11137  0FEF  0849               	movf	??_cksum,w
 11138  0FF0  07CA               	addwf	cksum@res,f
 11139  0FF1                     l5807:	
 11140                           
 11141                           ;eeprom_rw.c: 71:     }
 11142  0FF1  3001               	movlw	1
 11143  0FF2  07CB               	addwf	cksum@i,f
 11144  0FF3  3000               	movlw	0
 11145  0FF4  3DCC               	addwfc	cksum@i+1,f
 11146  0FF5                     l5809:	
 11147  0FF5  30F0               	movlw	240
 11148  0FF6  024C               	subwf	cksum@i+1,w
 11149  0FF7  30FF               	movlw	255
 11150  0FF8  1903               	skipnz
 11151  0FF9  024B               	subwf	cksum@i,w
 11152  0FFA  1C03               	skipc
 11153  0FFB  2FFD               	goto	u2951
 11154  0FFC  2FFE               	goto	u2950
 11155  0FFD                     u2951:	
 11156  0FFD  2FE6               	goto	l5805
 11157  0FFE                     u2950:	
 11158  0FFE                     l5811:	
 11159                           
 11160                           ;eeprom_rw.c: 72:     return res;
 11161  0FFE  084A               	movf	cksum@res,w
 11162  0FFF                     l1572:	
 11163  0FFF  0008               	return
 11164  1000                     __end_of_cksum:	
 11165                           
 11166                           	psect	text5
 11167  066F                     __ptext5:	
 11168 ;; *************** function _read_ring *****************
 11169 ;; Defined at:
 11170 ;;		line 43 in file "eeprom_rw.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  nreg_pt         1    wreg     unsigned char 
 11173 ;;  nreg            1    7[BANK0 ] unsigned char 
 11174 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 11175 ;;  index           1    9[BANK0 ] unsigned char 
 11176 ;;  subindex        1   10[BANK0 ] unsigned char 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 11179 ;;  absindex        1   15[BANK0 ] unsigned char 
 11180 ;;  i               1   13[BANK0 ] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      unsigned char 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0, pclath, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;Total ram usage:        9 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    7
 11197 ;; This function calls:
 11198 ;;		_DATAEE_ReadByte
 11199 ;;		___bmul
 11200 ;; This function is called by:
 11201 ;;		_main
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           
 11206                           ;psect for function _read_ring
 11207  066F                     _read_ring:	
 11208                           
 11209                           ;incstack = 0
 11210                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 11211                           ;read_ring@nreg_pt stored from wreg
 11212  066F  0020               	movlb	0	; select bank0
 11213  0670  00D2               	movwf	read_ring@nreg_pt
 11214  0671                     l6099:	
 11215  0671                     l6101:	
 11216                           
 11217                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 11218  0671  084D               	movf	read_ring@index,w
 11219  0672  024B               	subwf	read_ring@nreg,w
 11220  0673  1C03               	skipc
 11221  0674  2E76               	goto	u3071
 11222  0675  2E77               	goto	u3070
 11223  0676                     u3071:	
 11224  0676  2EA1               	goto	l6113
 11225  0677                     u3070:	
 11226  0677                     l6103:	
 11227  0677  084C               	movf	read_ring@nreg_init,w
 11228  0678  1903               	btfsc	3,2
 11229  0679  2E7B               	goto	u3081
 11230  067A  2E7C               	goto	u3080
 11231  067B                     u3081:	
 11232  067B  2EA1               	goto	l6113
 11233  067C                     u3080:	
 11234  067C                     l6105:	
 11235                           
 11236                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 11237  067C  3005               	movlw	5
 11238  067D  00CF               	movwf	??_read_ring
 11239  067E  084F               	movf	??_read_ring,w
 11240  067F  00C7               	movwf	___bmul@multiplicand
 11241  0680  084D               	movf	read_ring@index,w
 11242  0681  318E  26A6  3186   	fcall	___bmul
 11243  0684  0020               	movlb	0	; select bank0
 11244  0685  074E               	addwf	read_ring@subindex,w
 11245  0686  00D0               	movwf	??_read_ring+1
 11246  0687  0850               	movf	??_read_ring+1,w
 11247  0688  00D3               	movwf	read_ring@absindex
 11248  0689                     l6107:	
 11249                           
 11250                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 11251  0689  0853               	movf	read_ring@absindex,w
 11252  068A  0252               	subwf	read_ring@nreg_pt,w
 11253  068B  1C03               	skipc
 11254  068C  2E8E               	goto	u3091
 11255  068D  2E8F               	goto	u3090
 11256  068E                     u3091:	
 11257  068E  2E96               	goto	l6111
 11258  068F                     u3090:	
 11259  068F                     l6109:	
 11260                           
 11261                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 11262  068F  0852               	movf	read_ring@nreg_pt,w
 11263  0690  0753               	addwf	read_ring@absindex,w
 11264  0691  3EFB               	addlw	251
 11265  0692  00CF               	movwf	??_read_ring
 11266  0693  084F               	movf	??_read_ring,w
 11267  0694  00D1               	movwf	read_ring@i
 11268  0695  2EA3               	goto	l6117
 11269  0696                     l6111:	
 11270                           
 11271                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 11272  0696  0352               	decf	read_ring@nreg_pt,w
 11273  0697  3AFF               	xorlw	255
 11274  0698  00CF               	movwf	??_read_ring
 11275  0699  0853               	movf	read_ring@absindex,w
 11276  069A  024F               	subwf	??_read_ring,w
 11277  069B  074B               	addwf	read_ring@nreg,w
 11278  069C  3E05               	addlw	5
 11279  069D  00D0               	movwf	??_read_ring+1
 11280  069E  0850               	movf	??_read_ring+1,w
 11281  069F  00D1               	movwf	read_ring@i
 11282  06A0  2EA3               	goto	l6117
 11283  06A1                     l6113:	
 11284                           
 11285                           ;eeprom_rw.c: 56:         return 0;
 11286  06A1  3000               	movlw	0
 11287  06A2  2EAD               	goto	l1564
 11288  06A3                     l6117:	
 11289                           
 11290                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 11291  06A3  0851               	movf	read_ring@i,w
 11292  06A4  3E00               	addlw	0
 11293  06A5  00C7               	movwf	DATAEE_ReadByte@bAdd
 11294  06A6  30F0               	movlw	240
 11295  06A7  1803               	skipnc
 11296  06A8  30F1               	movlw	241
 11297  06A9  00C8               	movwf	DATAEE_ReadByte@bAdd+1
 11298  06AA  318D  25E1  3186   	fcall	_DATAEE_ReadByte
 11299  06AD                     l1564:	
 11300  06AD  0008               	return
 11301  06AE                     __end_of_read_ring:	
 11302                           
 11303                           	psect	text6
 11304  0EA6                     __ptext6:	
 11305 ;; *************** function ___bmul *****************
 11306 ;; Defined at:
 11307 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;  multiplier      1    wreg     unsigned char 
 11310 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;  multiplier      1    6[BANK0 ] unsigned char 
 11313 ;;  product         1    5[BANK0 ] unsigned char 
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      unsigned char 
 11316 ;; Registers used:
 11317 ;;		wreg, status,2, status,0
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11323 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;Total ram usage:        4 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:    6
 11330 ;; This function calls:
 11331 ;;		Nothing
 11332 ;; This function is called by:
 11333 ;;		_read_ring
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           
 11338                           ;psect for function ___bmul
 11339  0EA6                     ___bmul:	
 11340                           
 11341                           ;incstack = 0
 11342                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11343                           ;___bmul@multiplier stored from wreg
 11344  0EA6  0020               	movlb	0	; select bank0
 11345  0EA7  00CA               	movwf	___bmul@multiplier
 11346  0EA8                     l6037:	
 11347  0EA8  01C9               	clrf	___bmul@product
 11348  0EA9                     l6039:	
 11349  0EA9  1C4A               	btfss	___bmul@multiplier,0
 11350  0EAA  2EAC               	goto	u3021
 11351  0EAB  2EAD               	goto	u3020
 11352  0EAC                     u3021:	
 11353  0EAC  2EB1               	goto	l6043
 11354  0EAD                     u3020:	
 11355  0EAD                     l6041:	
 11356  0EAD  0847               	movf	___bmul@multiplicand,w
 11357  0EAE  00C8               	movwf	??___bmul
 11358  0EAF  0848               	movf	??___bmul,w
 11359  0EB0  07C9               	addwf	___bmul@product,f
 11360  0EB1                     l6043:	
 11361  0EB1  1003               	clrc
 11362  0EB2  0DC7               	rlf	___bmul@multiplicand,f
 11363  0EB3                     l6045:	
 11364  0EB3  1003               	clrc
 11365  0EB4  0CCA               	rrf	___bmul@multiplier,f
 11366  0EB5  084A               	movf	___bmul@multiplier,w
 11367  0EB6  1D03               	btfss	3,2
 11368  0EB7  2EB9               	goto	u3031
 11369  0EB8  2EBA               	goto	u3030
 11370  0EB9                     u3031:	
 11371  0EB9  2EA9               	goto	l6039
 11372  0EBA                     u3030:	
 11373  0EBA                     l6047:	
 11374  0EBA  0849               	movf	___bmul@product,w
 11375  0EBB                     l1803:	
 11376  0EBB  0008               	return
 11377  0EBC                     __end_of___bmul:	
 11378                           
 11379                           	psect	text7
 11380  0DE1                     __ptext7:	
 11381 ;; *************** function _DATAEE_ReadByte *****************
 11382 ;; Defined at:
 11383 ;;		line 202 in file "mcc_generated_files/memory.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;  bAdd            2    3[BANK0 ] unsigned short 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      unsigned char 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;Total ram usage:        2 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    6
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_recoverData
 11408 ;;		_read_ring
 11409 ;;		_cksum
 11410 ;;		_recover
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           
 11415                           ;psect for function _DATAEE_ReadByte
 11416  0DE1                     _DATAEE_ReadByte:	
 11417  0DE1                     l5665:	
 11418                           ;incstack = 0
 11419                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11420                           
 11421                           
 11422                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11423  0DE1  0020               	movlb	0	; select bank0
 11424  0DE2  0848               	movf	DATAEE_ReadByte@bAdd+1,w
 11425  0DE3  0030               	movlb	16	; select bank16
 11426  0DE4  009B               	movwf	27	;volatile
 11427  0DE5                     l5667:	
 11428                           
 11429                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11430  0DE5  0020               	movlb	0	; select bank0
 11431  0DE6  0847               	movf	DATAEE_ReadByte@bAdd,w
 11432  0DE7  0030               	movlb	16	; select bank16
 11433  0DE8  009A               	movwf	26	;volatile
 11434  0DE9                     l5669:	
 11435                           
 11436                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11437  0DE9  171E               	bsf	30,6	;volsfr
 11438  0DEA                     l5671:	
 11439                           
 11440                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11441  0DEA  141E               	bsf	30,0	;volsfr
 11442  0DEB                     l5673:	
 11443                           
 11444                           ;mcc_generated_files/memory.c: 208:     __nop();
 11445  0DEB  0000               	nop
 11446  0DEC                     l5675:	
 11447                           
 11448                           ;mcc_generated_files/memory.c: 209:     __nop();
 11449  0DEC  0000               	nop
 11450  0DED                     l5677:	
 11451                           
 11452                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11453  0DED  0030               	movlb	16	; select bank16
 11454  0DEE  081C               	movf	28,w	;volatile
 11455  0DEF                     l963:	
 11456  0DEF  0008               	return
 11457  0DF0                     __end_of_DATAEE_ReadByte:	
 11458                           
 11459                           	psect	text8
 11460  05E8                     __ptext8:	
 11461 ;; *************** function _push_ring *****************
 11462 ;; Defined at:
 11463 ;;		line 34 in file "eeprom_rw.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  nreg_pt         1    wreg     PTR unsigned char 
 11466 ;;		 -> nreg_pt(1), 
 11467 ;;  nreg            1   13[BANK0 ] unsigned char 
 11468 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 11469 ;;		 -> nreg_init(1), 
 11470 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 11471 ;;		 -> ring_byte(5), 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 11474 ;;		 -> nreg_pt(1), 
 11475 ;;  i               1   18[BANK0 ] unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      void 
 11478 ;; Registers used:
 11479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11485 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;Total ram usage:        7 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    7
 11492 ;; This function calls:
 11493 ;;		_DATAEE_WriteByte
 11494 ;; This function is called by:
 11495 ;;		_main
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _push_ring
 11501  05E8                     _push_ring:	
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11505                           ;push_ring@nreg_pt stored from wreg
 11506  05E8  0020               	movlb	0	; select bank0
 11507  05E9  00D7               	movwf	push_ring@nreg_pt
 11508  05EA                     l6121:	
 11509                           
 11510                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 11511  05EA  0852               	movf	push_ring@nreg_init,w
 11512  05EB  0086               	movwf	6
 11513  05EC  0187               	clrf	7
 11514  05ED  0801               	movf	1,w
 11515  05EE  1D03               	btfss	3,2
 11516  05EF  2DF1               	goto	u3101
 11517  05F0  2DF2               	goto	u3100
 11518  05F1                     u3101:	
 11519  05F1  2DF7               	goto	l6125
 11520  05F2                     u3100:	
 11521  05F2                     l6123:	
 11522  05F2  0852               	movf	push_ring@nreg_init,w
 11523  05F3  0086               	movwf	6
 11524  05F4  0187               	clrf	7
 11525  05F5  0181               	clrf	1
 11526  05F6  0A81               	incf	1,f
 11527  05F7                     l6125:	
 11528                           
 11529                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 11530  05F7  01D6               	clrf	push_ring@i
 11531  05F8                     l6131:	
 11532                           
 11533                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 11534  05F8  0857               	movf	push_ring@nreg_pt,w
 11535  05F9  0086               	movwf	6
 11536  05FA  0187               	clrf	7
 11537  05FB  0851               	movf	push_ring@nreg,w
 11538  05FC  0201               	subwf	1,w
 11539  05FD  1C03               	skipc
 11540  05FE  2E00               	goto	u3111
 11541  05FF  2E01               	goto	u3110
 11542  0600                     u3111:	
 11543  0600  2E05               	goto	l6135
 11544  0601                     u3110:	
 11545  0601                     l6133:	
 11546  0601  0857               	movf	push_ring@nreg_pt,w
 11547  0602  0086               	movwf	6
 11548  0603  0187               	clrf	7
 11549  0604  0181               	clrf	1
 11550  0605                     l6135:	
 11551                           
 11552                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 11553  0605  0857               	movf	push_ring@nreg_pt,w
 11554  0606  0086               	movwf	6
 11555  0607  0187               	clrf	7
 11556  0608  0801               	movf	1,w
 11557  0609  3E00               	addlw	0
 11558  060A  00CD               	movwf	DATAEE_WriteByte@bAdd
 11559  060B  30F0               	movlw	240
 11560  060C  1803               	skipnc
 11561  060D  30F1               	movlw	241
 11562  060E  00CE               	movwf	DATAEE_WriteByte@bAdd+1
 11563  060F  0856               	movf	push_ring@i,w
 11564  0610  0753               	addwf	push_ring@ring_byte,w
 11565  0611  00D4               	movwf	??_push_ring
 11566  0612  0854               	movf	??_push_ring,w
 11567  0613  0086               	movwf	6
 11568  0614  0187               	clrf	7
 11569  0615  0801               	movf	1,w
 11570  0616  00D5               	movwf	??_push_ring+1
 11571  0617  0855               	movf	??_push_ring+1,w
 11572  0618  00CF               	movwf	DATAEE_WriteByte@bData
 11573  0619  3187  27C2  3185   	fcall	_DATAEE_WriteByte
 11574  061C                     l6137:	
 11575                           
 11576                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 11577  061C  3001               	movlw	1
 11578  061D  0020               	movlb	0	; select bank0
 11579  061E  00D4               	movwf	??_push_ring
 11580  061F  0857               	movf	push_ring@nreg_pt,w
 11581  0620  0086               	movwf	6
 11582  0621  0187               	clrf	7
 11583  0622  0854               	movf	??_push_ring,w
 11584  0623  0781               	addwf	1,f
 11585  0624                     l6139:	
 11586                           
 11587                           ;eeprom_rw.c: 40:     }
 11588  0624  3001               	movlw	1
 11589  0625  00D4               	movwf	??_push_ring
 11590  0626  0854               	movf	??_push_ring,w
 11591  0627  07D6               	addwf	push_ring@i,f
 11592  0628                     l6141:	
 11593  0628  3005               	movlw	5
 11594  0629  0256               	subwf	push_ring@i,w
 11595  062A  1C03               	skipc
 11596  062B  2E2D               	goto	u3121
 11597  062C  2E2E               	goto	u3120
 11598  062D                     u3121:	
 11599  062D  2DF8               	goto	l6131
 11600  062E                     u3120:	
 11601  062E                     l1557:	
 11602  062E  0008               	return
 11603  062F                     __end_of_push_ring:	
 11604                           
 11605                           	psect	text9
 11606  07C2                     __ptext9:	
 11607 ;; *************** function _DATAEE_WriteByte *****************
 11608 ;; Defined at:
 11609 ;;		line 180 in file "mcc_generated_files/memory.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;  bAdd            2    9[BANK0 ] unsigned short 
 11612 ;;  bData           1   11[BANK0 ] unsigned char 
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		wreg, status,2, status,0
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;Total ram usage:        4 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; Hardware stack levels required when called:    6
 11631 ;; This function calls:
 11632 ;;		Nothing
 11633 ;; This function is called by:
 11634 ;;		_main
 11635 ;;		_recoverData
 11636 ;;		_push_ring
 11637 ;;		_cksum_w
 11638 ;;		_reset_recv
 11639 ;;		_recover
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           
 11644                           ;psect for function _DATAEE_WriteByte
 11645  07C2                     _DATAEE_WriteByte:	
 11646  07C2                     l5731:	
 11647                           ;incstack = 0
 11648                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 11649                           
 11650                           
 11651                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 11652  07C2  3000               	movlw	0
 11653  07C3  1B8B               	btfsc	11,7	;volatile
 11654  07C4  3001               	movlw	1
 11655  07C5  0020               	movlb	0	; select bank0
 11656  07C6  00D0               	movwf	DATAEE_WriteByte@GIEBitValue
 11657                           
 11658                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 11659  07C7  084E               	movf	DATAEE_WriteByte@bAdd+1,w
 11660  07C8  0030               	movlb	16	; select bank16
 11661  07C9  009B               	movwf	27	;volatile
 11662  07CA                     l5733:	
 11663                           
 11664                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 11665  07CA  0020               	movlb	0	; select bank0
 11666  07CB  084D               	movf	DATAEE_WriteByte@bAdd,w
 11667  07CC  0030               	movlb	16	; select bank16
 11668  07CD  009A               	movwf	26	;volatile
 11669  07CE                     l5735:	
 11670                           
 11671                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 11672  07CE  0020               	movlb	0	; select bank0
 11673  07CF  084F               	movf	DATAEE_WriteByte@bData,w
 11674  07D0  0030               	movlb	16	; select bank16
 11675  07D1  009C               	movwf	28	;volatile
 11676  07D2                     l5737:	
 11677                           
 11678                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 11679  07D2  171E               	bsf	30,6	;volsfr
 11680  07D3                     l5739:	
 11681                           
 11682                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 11683  07D3  151E               	bsf	30,2	;volsfr
 11684  07D4                     l5741:	
 11685                           
 11686                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 11687  07D4  138B               	bcf	11,7	;volatile
 11688  07D5                     l5743:	
 11689                           
 11690                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 11691  07D5  3055               	movlw	85
 11692  07D6  009F               	movwf	31	;volsfr
 11693  07D7                     l5745:	
 11694                           
 11695                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 11696  07D7  30AA               	movlw	170
 11697  07D8  009F               	movwf	31	;volsfr
 11698  07D9                     l5747:	
 11699                           
 11700                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 11701  07D9  149E               	bsf	30,1	;volsfr
 11702  07DA                     l957:	
 11703                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 11704                           
 11705                           
 11706                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 11707  07DA  189E               	btfsc	30,1	;volsfr
 11708  07DB  2FDD               	goto	u2891
 11709  07DC  2FDE               	goto	u2890
 11710  07DD                     u2891:	
 11711  07DD  2FDA               	goto	l957
 11712  07DE                     u2890:	
 11713  07DE                     l959:	
 11714                           
 11715                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 11716  07DE  111E               	bcf	30,2	;volsfr
 11717  07DF                     l5749:	
 11718                           
 11719                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 11720  07DF  0020               	movlb	0	; select bank0
 11721  07E0  0C50               	rrf	DATAEE_WriteByte@GIEBitValue,w
 11722  07E1  1C03               	skipc
 11723  07E2  138B               	bcf	11,7	;volatile
 11724  07E3  1803               	skipnc
 11725  07E4  178B               	bsf	11,7	;volatile
 11726  07E5                     l960:	
 11727  07E5  0008               	return
 11728  07E6                     __end_of_DATAEE_WriteByte:	
 11729                           
 11730                           	psect	text10
 11731  02B5                     __ptext10:	
 11732 ;; *************** function _config_routine *****************
 11733 ;; Defined at:
 11734 ;;		line 277 in file "main.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;		None
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  select_mode     2   18[BANK0 ] unsigned int 
 11739 ;; Return value:  Size  Location     Type
 11740 ;;                  1    wreg      void 
 11741 ;; Registers used:
 11742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11743 ;; Tracked objects:
 11744 ;;		On entry : 0/0
 11745 ;;		On exit  : 0/0
 11746 ;;		Unchanged: 0/0
 11747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;Total ram usage:        3 bytes
 11753 ;; Hardware stack levels used:    1
 11754 ;; Hardware stack levels required when called:    9
 11755 ;; This function calls:
 11756 ;;		_all_LED
 11757 ;;		_checkDebounceSW1
 11758 ;;		_checkDebounceSW2
 11759 ;;		_clock_subfields
 11760 ;;		_mod1_LED
 11761 ;;		_mod2_LED
 11762 ;;		_mod3_LED
 11763 ;;		_mod4_LED
 11764 ;;		_mode_select_LED
 11765 ;; This function is called by:
 11766 ;;		_main
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function _config_routine
 11772  02B5                     _config_routine:	
 11773  02B5                     l6145:	
 11774                           ;incstack = 0
 11775                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11776                           
 11777                           
 11778                           ;main.c: 279:     unsigned int select_mode =0;
 11779  02B5  0020               	movlb	0	; select bank0
 11780  02B6  01D6               	clrf	config_routine@select_mode
 11781  02B7  01D7               	clrf	config_routine@select_mode+1
 11782  02B8                     l6147:	
 11783                           
 11784                           ;main.c: 280:       last_ms = clkms;
 11785  02B8  087D               	movf	_clkms,w	;volatile
 11786  02B9  00D5               	movwf	??_config_routine
 11787  02BA  0855               	movf	??_config_routine,w
 11788  02BB  00BE               	movwf	_last_ms
 11789  02BC                     l6149:	
 11790                           
 11791                           ;main.c: 281:       last_ms2 = clkms;
 11792  02BC  087D               	movf	_clkms,w	;volatile
 11793  02BD  00D5               	movwf	??_config_routine
 11794  02BE  0855               	movf	??_config_routine,w
 11795  02BF  00BD               	movwf	_last_ms2
 11796  02C0                     l6151:	
 11797                           
 11798                           ;main.c: 285:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 11799  02C0  0A5D               	incf	_mode_field_subfield,w
 11800  02C1  1D03               	skipz
 11801  02C2  2AC7               	goto	u3131
 11802  02C3  0A5E               	incf	_mode_field_subfield+1,w
 11803  02C4  1D03               	btfss	3,2
 11804  02C5  2AC7               	goto	u3131
 11805  02C6  2AC8               	goto	u3130
 11806  02C7                     u3131:	
 11807  02C7  2AD1               	goto	l6157
 11808  02C8                     u3130:	
 11809  02C8                     l6153:	
 11810  02C8  0856               	movf	config_routine@select_mode,w
 11811  02C9  0457               	iorwf	config_routine@select_mode+1,w
 11812  02CA  1D03               	btfss	3,2
 11813  02CB  2ACD               	goto	u3141
 11814  02CC  2ACE               	goto	u3140
 11815  02CD                     u3141:	
 11816  02CD  2AD1               	goto	l6157
 11817  02CE                     u3140:	
 11818  02CE                     l6155:	
 11819                           
 11820                           ;main.c: 286:                         all_LED();}
 11821  02CE  3183  23A5  3182   	fcall	_all_LED
 11822  02D1                     l6157:	
 11823                           
 11824                           ;main.c: 288:                 if(!PORTBbits.RB4){
 11825  02D1  0020               	movlb	0	; select bank0
 11826  02D2  1A0D               	btfsc	13,4	;volatile
 11827  02D3  2AD5               	goto	u3151
 11828  02D4  2AD6               	goto	u3150
 11829  02D5                     u3151:	
 11830  02D5  2B11               	goto	l6179
 11831  02D6                     u3150:	
 11832  02D6                     l6159:	
 11833                           
 11834                           ;main.c: 289:                     if(checkDebounceSW1()){
 11835  02D6  3184  2400  3182   	fcall	_checkDebounceSW1
 11836  02D9  3A00               	xorlw	0
 11837  02DA  1903               	skipnz
 11838  02DB  2ADD               	goto	u3161
 11839  02DC  2ADE               	goto	u3160
 11840  02DD                     u3161:	
 11841  02DD  2B0C               	goto	l6177
 11842  02DE                     u3160:	
 11843  02DE                     l6161:	
 11844                           
 11845                           ;main.c: 291:                             select_mode +=1;
 11846  02DE  3001               	movlw	1
 11847  02DF  0020               	movlb	0	; select bank0
 11848  02E0  07D6               	addwf	config_routine@select_mode,f
 11849  02E1  3000               	movlw	0
 11850  02E2  3DD7               	addwfc	config_routine@select_mode+1,f
 11851                           
 11852                           ;main.c: 293:                         switch(select_mode){
 11853  02E3  2AF9               	goto	l6175
 11854  02E4                     l6163:	
 11855  02E4  318D  256D  3182   	fcall	_mod1_LED
 11856  02E7  2B0C               	goto	l6177
 11857  02E8                     l6165:	
 11858  02E8  318D  2563  3182   	fcall	_mod2_LED
 11859  02EB  2B0C               	goto	l6177
 11860  02EC                     l6167:	
 11861  02EC  318D  2578  3182   	fcall	_mod3_LED
 11862  02EF  2B0C               	goto	l6177
 11863  02F0                     l6169:	
 11864  02F0  318D  2583  3182   	fcall	_mod4_LED
 11865  02F3  2B0C               	goto	l6177
 11866  02F4                     l6171:	
 11867  02F4  01D6               	clrf	config_routine@select_mode
 11868  02F5  01D7               	clrf	config_routine@select_mode+1
 11869  02F6  01B9               	clrf	_config_mode	;volatile
 11870  02F7  01B8               	clrf	_alarm	;volatile
 11871                           
 11872                           ;main.c: 299:                             break;
 11873  02F8  2B0C               	goto	l6177
 11874  02F9                     l6175:	
 11875                           
 11876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11877                           ; Switch size 1, requested type "simple"
 11878                           ; Number of cases is 1, Range of values is 0 to 0
 11879                           ; switch strategies available:
 11880                           ; Name         Instructions Cycles
 11881                           ; simple_byte            4     3 (average)
 11882                           ; direct_byte            8     6 (fixed)
 11883                           ; jumptable            260     6 (fixed)
 11884                           ;	Chosen strategy is simple_byte
 11885  02F9  0857               	movf	config_routine@select_mode+1,w
 11886  02FA  3A00               	xorlw	0	; case 0
 11887  02FB  1903               	skipnz
 11888  02FC  2AFE               	goto	l6495
 11889  02FD  2AF4               	goto	l6171
 11890  02FE                     l6495:	
 11891                           
 11892                           ; Switch size 1, requested type "simple"
 11893                           ; Number of cases is 4, Range of values is 1 to 4
 11894                           ; switch strategies available:
 11895                           ; Name         Instructions Cycles
 11896                           ; simple_byte           13     7 (average)
 11897                           ; direct_byte           17     9 (fixed)
 11898                           ; jumptable            263     9 (fixed)
 11899                           ;	Chosen strategy is simple_byte
 11900  02FE  0856               	movf	config_routine@select_mode,w
 11901  02FF  3A01               	xorlw	1	; case 1
 11902  0300  1903               	skipnz
 11903  0301  2AE4               	goto	l6163
 11904  0302  3A03               	xorlw	3	; case 2
 11905  0303  1903               	skipnz
 11906  0304  2AE8               	goto	l6165
 11907  0305  3A01               	xorlw	1	; case 3
 11908  0306  1903               	skipnz
 11909  0307  2AEC               	goto	l6167
 11910  0308  3A07               	xorlw	7	; case 4
 11911  0309  1903               	skipnz
 11912  030A  2AF0               	goto	l6169
 11913  030B  2AF4               	goto	l6171
 11914  030C                     l6177:	
 11915                           
 11916                           ;main.c: 304:                         last_ms = clkms;
 11917  030C  087D               	movf	_clkms,w	;volatile
 11918  030D  0020               	movlb	0	; select bank0
 11919  030E  00D5               	movwf	??_config_routine
 11920  030F  0855               	movf	??_config_routine,w
 11921  0310  00BE               	movwf	_last_ms
 11922  0311                     l6179:	
 11923                           
 11924                           ;main.c: 308:                 if(!PORTCbits.RC5){
 11925  0311  1A8E               	btfsc	14,5	;volatile
 11926  0312  2B14               	goto	u3171
 11927  0313  2B15               	goto	u3170
 11928  0314                     u3171:	
 11929  0314  2B2F               	goto	l6191
 11930  0315                     u3170:	
 11931  0315                     l6181:	
 11932                           
 11933                           ;main.c: 309:                     if(checkDebounceSW2()){
 11934  0315  3185  2508  3182   	fcall	_checkDebounceSW2
 11935  0318  3A00               	xorlw	0
 11936  0319  1903               	skipnz
 11937  031A  2B1C               	goto	u3181
 11938  031B  2B1D               	goto	u3180
 11939  031C                     u3181:	
 11940  031C  2B2F               	goto	l6191
 11941  031D                     u3180:	
 11942  031D                     l6183:	
 11943                           
 11944                           ;main.c: 310:                         mode_field_subfield[0] = select_mode;
 11945  031D  0020               	movlb	0	; select bank0
 11946  031E  0857               	movf	config_routine@select_mode+1,w
 11947  031F  00DE               	movwf	_mode_field_subfield+1
 11948  0320  0856               	movf	config_routine@select_mode,w
 11949  0321  00DD               	movwf	_mode_field_subfield
 11950  0322                     l6185:	
 11951                           
 11952                           ;main.c: 311:                         mode_select_LED();
 11953  0322  318F  27C0  3182   	fcall	_mode_select_LED
 11954  0325                     l6187:	
 11955                           
 11956                           ;main.c: 313:                         if(select_mode== 1){
 11957  0325  0020               	movlb	0	; select bank0
 11958  0326  0356               	decf	config_routine@select_mode,w
 11959  0327  0457               	iorwf	config_routine@select_mode+1,w
 11960  0328  1D03               	btfss	3,2
 11961  0329  2B2B               	goto	u3191
 11962  032A  2B2C               	goto	u3190
 11963  032B                     u3191:	
 11964  032B  2B2F               	goto	l6191
 11965  032C                     u3190:	
 11966  032C                     l6189:	
 11967                           
 11968                           ;main.c: 314:                             clock_subfields();
 11969  032C  3183  2342  3182   	fcall	_clock_subfields
 11970  032F                     l6191:	
 11971                           
 11972                           ;main.c: 320:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 11973  032F  30A6               	movlw	166
 11974  0330                     u3377:	
 11975  0330  0B89               	decfsz	9,f
 11976  0331  2B30               	goto	u3377
 11977  0332  3200               	nop2
 11978  0333                     l6193:	
 11979                           
 11980                           ;main.c: 322:             }while(config_mode == 1);
 11981  0333  0020               	movlb	0	; select bank0
 11982  0334  0339               	decf	_config_mode,w	;volatile
 11983  0335  1903               	btfsc	3,2
 11984  0336  2B38               	goto	u3201
 11985  0337  2B39               	goto	u3200
 11986  0338                     u3201:	
 11987  0338  2AC0               	goto	l6151
 11988  0339                     u3200:	
 11989  0339                     l6195:	
 11990                           
 11991                           ;main.c: 324:     mode_field_subfield[0] = -1;
 11992  0339  30FF               	movlw	255
 11993  033A  00DD               	movwf	_mode_field_subfield
 11994  033B  30FF               	movlw	255
 11995  033C  00DE               	movwf	_mode_field_subfield+1
 11996                           
 11997                           ;main.c: 325:     mode_field_subfield[1] = -1;
 11998  033D  30FF               	movlw	255
 11999  033E  00DF               	movwf	_mode_field_subfield+2
 12000  033F  30FF               	movlw	255
 12001  0340  00E0               	movwf	_mode_field_subfield+3
 12002  0341                     l1257:	
 12003  0341  0008               	return
 12004  0342                     __end_of_config_routine:	
 12005                           
 12006                           	psect	text11
 12007  0FC0                     __ptext11:	
 12008 ;; *************** function _mode_select_LED *****************
 12009 ;; Defined at:
 12010 ;;		line 554 in file "main.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;		None
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;		None
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      void 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0, pclath, cstack
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;Total ram usage:        1 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    7
 12031 ;; This function calls:
 12032 ;;		_PWM6_LoadDutyValue
 12033 ;; This function is called by:
 12034 ;;		_config_routine
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _mode_select_LED
 12040  0FC0                     _mode_select_LED:	
 12041  0FC0                     l5979:	
 12042                           ;incstack = 0
 12043                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 12044                           
 12045                           
 12046                           ;main.c: 557:             PWM6_LoadDutyValue(1023);
 12047  0FC0  30FF               	movlw	255
 12048  0FC1  0020               	movlb	0	; select bank0
 12049  0FC2  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12050  0FC3  3003               	movlw	3
 12051  0FC4  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12052  0FC5  318F  271C  318F   	fcall	_PWM6_LoadDutyValue
 12053  0FC8                     l5981:	
 12054  0FC8  0020               	movlb	0	; select bank0
 12055  0FC9  1616               	bsf	22,4	;volatile
 12056  0FCA                     l5983:	
 12057                           
 12058                           ;main.c: 559:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12059  0FCA  30A3               	movlw	163
 12060  0FCB  0020               	movlb	0	; select bank0
 12061  0FCC  00CB               	movwf	??_mode_select_LED
 12062  0FCD  3055               	movlw	85
 12063  0FCE                     u3387:	
 12064  0FCE  0B89               	decfsz	9,f
 12065  0FCF  2FCE               	goto	u3387
 12066  0FD0  0BCB               	decfsz	??_mode_select_LED,f
 12067  0FD1  2FCE               	goto	u3387
 12068  0FD2                     l5985:	
 12069  0FD2  0020               	movlb	0	; select bank0
 12070  0FD3  1696               	bsf	22,5	;volatile
 12071  0FD4                     l5987:	
 12072                           
 12073                           ;main.c: 561:             _delay((unsigned long)((500)*(1000000/4000.0)));
 12074  0FD4  30A3               	movlw	163
 12075  0FD5  0020               	movlb	0	; select bank0
 12076  0FD6  00CB               	movwf	??_mode_select_LED
 12077  0FD7  3055               	movlw	85
 12078  0FD8                     u3397:	
 12079  0FD8  0B89               	decfsz	9,f
 12080  0FD9  2FD8               	goto	u3397
 12081  0FDA  0BCB               	decfsz	??_mode_select_LED,f
 12082  0FDB  2FD8               	goto	u3397
 12083  0FDC                     l5989:	
 12084  0FDC  0020               	movlb	0	; select bank0
 12085  0FDD  1216               	bcf	22,4	;volatile
 12086  0FDE                     l5991:	
 12087  0FDE  1296               	bcf	22,5	;volatile
 12088  0FDF                     l1365:	
 12089  0FDF  0008               	return
 12090  0FE0                     __end_of_mode_select_LED:	
 12091                           
 12092                           	psect	text12
 12093  0342                     __ptext12:	
 12094 ;; *************** function _clock_subfields *****************
 12095 ;; Defined at:
 12096 ;;		line 352 in file "main.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  subfield        2   15[BANK0 ] unsigned int 
 12101 ;; Return value:  Size  Location     Type
 12102 ;;                  1    wreg      void 
 12103 ;; Registers used:
 12104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12105 ;; Tracked objects:
 12106 ;;		On entry : 0/0
 12107 ;;		On exit  : 0/0
 12108 ;;		Unchanged: 0/0
 12109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;Total ram usage:        3 bytes
 12115 ;; Hardware stack levels used:    1
 12116 ;; Hardware stack levels required when called:    8
 12117 ;; This function calls:
 12118 ;;		_checkDebounceSW1
 12119 ;;		_checkDebounceSW2
 12120 ;;		_increment_subfield
 12121 ;;		_mod1_LED
 12122 ;;		_mod2_LED
 12123 ;;		_mod3_LED
 12124 ;;		_mod4_LED
 12125 ;; This function is called by:
 12126 ;;		_config_routine
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           
 12131                           ;psect for function _clock_subfields
 12132  0342                     _clock_subfields:	
 12133  0342                     l5993:	
 12134                           ;incstack = 0
 12135                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12136                           
 12137                           
 12138                           ;main.c: 354:     unsigned int subfield = 1;
 12139  0342  3001               	movlw	1
 12140  0343  0020               	movlb	0	; select bank0
 12141  0344  00D3               	movwf	clock_subfields@subfield
 12142  0345  3000               	movlw	0
 12143  0346  00D4               	movwf	clock_subfields@subfield+1
 12144  0347                     l5995:	
 12145                           
 12146                           ;main.c: 358:                 if(!PORTBbits.RB4){
 12147  0347  1A0D               	btfsc	13,4	;volatile
 12148  0348  2B4A               	goto	u2961
 12149  0349  2B4B               	goto	u2960
 12150  034A                     u2961:	
 12151  034A  2B6E               	goto	l6011
 12152  034B                     u2960:	
 12153  034B                     l5997:	
 12154                           
 12155                           ;main.c: 359:                     if(checkDebounceSW1()){
 12156  034B  3184  2400  3183   	fcall	_checkDebounceSW1
 12157  034E  3A00               	xorlw	0
 12158  034F  1903               	skipnz
 12159  0350  2B52               	goto	u2971
 12160  0351  2B53               	goto	u2970
 12161  0352                     u2971:	
 12162  0352  2B58               	goto	l1272
 12163  0353                     u2970:	
 12164  0353                     l5999:	
 12165                           
 12166                           ;main.c: 360:                             subfield +=1;
 12167  0353  3001               	movlw	1
 12168  0354  0020               	movlb	0	; select bank0
 12169  0355  07D3               	addwf	clock_subfields@subfield,f
 12170  0356  3000               	movlw	0
 12171  0357  3DD4               	addwfc	clock_subfields@subfield+1,f
 12172  0358                     l1272:	
 12173                           ;main.c: 361:                         }
 12174                           
 12175                           
 12176                           ;main.c: 362:                         last_ms = clkms;
 12177  0358  087D               	movf	_clkms,w	;volatile
 12178  0359  0020               	movlb	0	; select bank0
 12179  035A  00D2               	movwf	??_clock_subfields
 12180  035B  0852               	movf	??_clock_subfields,w
 12181  035C  00BE               	movwf	_last_ms
 12182  035D  2B6E               	goto	l6011
 12183  035E                     l6001:	
 12184  035E  318D  256D  3183   	fcall	_mod1_LED
 12185  0361  2B81               	goto	l1275
 12186  0362                     l6003:	
 12187  0362  318D  2563  3183   	fcall	_mod2_LED
 12188  0365  2B81               	goto	l1275
 12189  0366                     l6005:	
 12190  0366  318D  2578  3183   	fcall	_mod3_LED
 12191  0369  2B81               	goto	l1275
 12192  036A                     l6007:	
 12193  036A  318D  2583  3183   	fcall	_mod4_LED
 12194  036D  2B81               	goto	l1275
 12195  036E                     l6011:	
 12196                           
 12197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12198                           ; Switch size 1, requested type "simple"
 12199                           ; Number of cases is 1, Range of values is 0 to 0
 12200                           ; switch strategies available:
 12201                           ; Name         Instructions Cycles
 12202                           ; simple_byte            4     3 (average)
 12203                           ; direct_byte            8     6 (fixed)
 12204                           ; jumptable            260     6 (fixed)
 12205                           ;	Chosen strategy is simple_byte
 12206  036E  0854               	movf	clock_subfields@subfield+1,w
 12207  036F  3A00               	xorlw	0	; case 0
 12208  0370  1903               	skipnz
 12209  0371  2B73               	goto	l6497
 12210  0372  2B81               	goto	l1275
 12211  0373                     l6497:	
 12212                           
 12213                           ; Switch size 1, requested type "simple"
 12214                           ; Number of cases is 4, Range of values is 1 to 4
 12215                           ; switch strategies available:
 12216                           ; Name         Instructions Cycles
 12217                           ; simple_byte           13     7 (average)
 12218                           ; direct_byte           17     9 (fixed)
 12219                           ; jumptable            263     9 (fixed)
 12220                           ;	Chosen strategy is simple_byte
 12221  0373  0853               	movf	clock_subfields@subfield,w
 12222  0374  3A01               	xorlw	1	; case 1
 12223  0375  1903               	skipnz
 12224  0376  2B5E               	goto	l6001
 12225  0377  3A03               	xorlw	3	; case 2
 12226  0378  1903               	skipnz
 12227  0379  2B62               	goto	l6003
 12228  037A  3A01               	xorlw	1	; case 3
 12229  037B  1903               	skipnz
 12230  037C  2B66               	goto	l6005
 12231  037D  3A07               	xorlw	7	; case 4
 12232  037E  1903               	skipnz
 12233  037F  2B6A               	goto	l6007
 12234  0380  2B81               	goto	l1275
 12235  0381                     l1275:	
 12236                           
 12237                           ;main.c: 376:                 if(!PORTCbits.RC5){
 12238  0381  0020               	movlb	0	; select bank0
 12239  0382  1A8E               	btfsc	14,5	;volatile
 12240  0383  2B85               	goto	u2981
 12241  0384  2B86               	goto	u2980
 12242  0385                     u2981:	
 12243  0385  2B96               	goto	l6019
 12244  0386                     u2980:	
 12245  0386                     l6013:	
 12246                           
 12247                           ;main.c: 377:                     if(checkDebounceSW2()){
 12248  0386  3185  2508  3183   	fcall	_checkDebounceSW2
 12249  0389  3A00               	xorlw	0
 12250  038A  1903               	skipnz
 12251  038B  2B8D               	goto	u2991
 12252  038C  2B8E               	goto	u2990
 12253  038D                     u2991:	
 12254  038D  2B96               	goto	l6019
 12255  038E                     u2990:	
 12256  038E                     l6015:	
 12257                           
 12258                           ;main.c: 379:                         mode_field_subfield[1] = subfield;
 12259  038E  0020               	movlb	0	; select bank0
 12260  038F  0854               	movf	clock_subfields@subfield+1,w
 12261  0390  00E0               	movwf	_mode_field_subfield+3
 12262  0391  0853               	movf	clock_subfields@subfield,w
 12263  0392  00DF               	movwf	_mode_field_subfield+2
 12264  0393                     l6017:	
 12265                           
 12266                           ;main.c: 380:                         increment_subfield();
 12267  0393  3186  262F  3183   	fcall	_increment_subfield
 12268  0396                     l6019:	
 12269                           
 12270                           ;main.c: 384:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 12271  0396  30A6               	movlw	166
 12272  0397                     u3407:	
 12273  0397  0B89               	decfsz	9,f
 12274  0398  2B97               	goto	u3407
 12275  0399  3200               	nop2
 12276  039A                     l6021:	
 12277                           
 12278                           ;main.c: 386:             }while(subfield <= 4 );
 12279  039A  3000               	movlw	0
 12280  039B  0020               	movlb	0	; select bank0
 12281  039C  0254               	subwf	clock_subfields@subfield+1,w
 12282  039D  3005               	movlw	5
 12283  039E  1903               	skipnz
 12284  039F  0253               	subwf	clock_subfields@subfield,w
 12285  03A0  1C03               	skipc
 12286  03A1  2BA3               	goto	u3001
 12287  03A2  2BA4               	goto	u3000
 12288  03A3                     u3001:	
 12289  03A3  2B47               	goto	l5995
 12290  03A4                     u3000:	
 12291  03A4                     l1283:	
 12292  03A4  0008               	return
 12293  03A5                     __end_of_clock_subfields:	
 12294                           
 12295                           	psect	text13
 12296  0D83                     __ptext13:	
 12297 ;; *************** function _mod4_LED *****************
 12298 ;; Defined at:
 12299 ;;		line 505 in file "main.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;		None
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;		None
 12304 ;; Return value:  Size  Location     Type
 12305 ;;                  1    wreg      void 
 12306 ;; Registers used:
 12307 ;;		wreg, status,2, status,0, pclath, cstack
 12308 ;; Tracked objects:
 12309 ;;		On entry : 0/0
 12310 ;;		On exit  : 0/0
 12311 ;;		Unchanged: 0/0
 12312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;Total ram usage:        0 bytes
 12318 ;; Hardware stack levels used:    1
 12319 ;; Hardware stack levels required when called:    7
 12320 ;; This function calls:
 12321 ;;		_PWM6_LoadDutyValue
 12322 ;; This function is called by:
 12323 ;;		_config_routine
 12324 ;;		_clock_subfields
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           
 12329                           ;psect for function _mod4_LED
 12330  0D83                     _mod4_LED:	
 12331  0D83                     l5771:	
 12332                           ;incstack = 0
 12333                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 12334                           
 12335                           
 12336                           ;main.c: 506:     LATA = 0;
 12337  0D83  0020               	movlb	0	; select bank0
 12338  0D84  0196               	clrf	22	;volatile
 12339  0D85                     l5773:	
 12340                           
 12341                           ;main.c: 507:     PWM6_LoadDutyValue(0);
 12342  0D85  3000               	movlw	0
 12343  0D86  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12344  0D87  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12345  0D88  318F  271C  318D   	fcall	_PWM6_LoadDutyValue
 12346  0D8B                     l5775:	
 12347  0D8B  0020               	movlb	0	; select bank0
 12348  0D8C  1616               	bsf	22,4	;volatile
 12349  0D8D                     l1340:	
 12350  0D8D  0008               	return
 12351  0D8E                     __end_of_mod4_LED:	
 12352                           
 12353                           	psect	text14
 12354  0D78                     __ptext14:	
 12355 ;; *************** function _mod3_LED *****************
 12356 ;; Defined at:
 12357 ;;		line 498 in file "main.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;		None
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;		None
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      void 
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, status,0, pclath, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;Total ram usage:        0 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    7
 12378 ;; This function calls:
 12379 ;;		_PWM6_LoadDutyValue
 12380 ;; This function is called by:
 12381 ;;		_config_routine
 12382 ;;		_clock_subfields
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           
 12387                           ;psect for function _mod3_LED
 12388  0D78                     _mod3_LED:	
 12389  0D78                     l5765:	
 12390                           ;incstack = 0
 12391                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 12392                           
 12393                           
 12394                           ;main.c: 499:     LATA = 0;
 12395  0D78  0020               	movlb	0	; select bank0
 12396  0D79  0196               	clrf	22	;volatile
 12397  0D7A                     l5767:	
 12398                           
 12399                           ;main.c: 500:     PWM6_LoadDutyValue(0);
 12400  0D7A  3000               	movlw	0
 12401  0D7B  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12402  0D7C  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12403  0D7D  318F  271C  318D   	fcall	_PWM6_LoadDutyValue
 12404  0D80                     l5769:	
 12405  0D80  0020               	movlb	0	; select bank0
 12406  0D81  1696               	bsf	22,5	;volatile
 12407  0D82                     l1335:	
 12408  0D82  0008               	return
 12409  0D83                     __end_of_mod3_LED:	
 12410                           
 12411                           	psect	text15
 12412  0D63                     __ptext15:	
 12413 ;; *************** function _mod2_LED *****************
 12414 ;; Defined at:
 12415 ;;		line 493 in file "main.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;		None
 12418 ;; Auto vars:     Size  Location     Type
 12419 ;;		None
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      void 
 12422 ;; Registers used:
 12423 ;;		wreg, status,2, status,0, pclath, cstack
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;Total ram usage:        0 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    7
 12436 ;; This function calls:
 12437 ;;		_PWM6_LoadDutyValue
 12438 ;; This function is called by:
 12439 ;;		_config_routine
 12440 ;;		_clock_subfields
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           
 12445                           ;psect for function _mod2_LED
 12446  0D63                     _mod2_LED:	
 12447  0D63                     l5761:	
 12448                           ;incstack = 0
 12449                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 12450                           
 12451                           
 12452                           ;main.c: 494:     LATA = 0;
 12453  0D63  0020               	movlb	0	; select bank0
 12454  0D64  0196               	clrf	22	;volatile
 12455  0D65                     l5763:	
 12456                           
 12457                           ;main.c: 495:     PWM6_LoadDutyValue(1023);
 12458  0D65  30FF               	movlw	255
 12459  0D66  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12460  0D67  3003               	movlw	3
 12461  0D68  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12462  0D69  318F  271C  318D   	fcall	_PWM6_LoadDutyValue
 12463  0D6C                     l1330:	
 12464  0D6C  0008               	return
 12465  0D6D                     __end_of_mod2_LED:	
 12466                           
 12467                           	psect	text16
 12468  0D6D                     __ptext16:	
 12469 ;; *************** function _mod1_LED *****************
 12470 ;; Defined at:
 12471 ;;		line 486 in file "main.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, status,2, status,0, pclath, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    7
 12492 ;; This function calls:
 12493 ;;		_PWM6_LoadDutyValue
 12494 ;; This function is called by:
 12495 ;;		_config_routine
 12496 ;;		_clock_subfields
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           
 12501                           ;psect for function _mod1_LED
 12502  0D6D                     _mod1_LED:	
 12503  0D6D                     l5755:	
 12504                           ;incstack = 0
 12505                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 12506                           
 12507                           
 12508                           ;main.c: 487:     LATA = 0;
 12509  0D6D  0020               	movlb	0	; select bank0
 12510  0D6E  0196               	clrf	22	;volatile
 12511  0D6F                     l5757:	
 12512                           
 12513                           ;main.c: 488:     PWM6_LoadDutyValue(0);
 12514  0D6F  3000               	movlw	0
 12515  0D70  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12516  0D71  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12517  0D72  318F  271C  318D   	fcall	_PWM6_LoadDutyValue
 12518  0D75                     l5759:	
 12519  0D75  0020               	movlb	0	; select bank0
 12520  0D76  1796               	bsf	22,7	;volatile
 12521  0D77                     l1327:	
 12522  0D77  0008               	return
 12523  0D78                     __end_of_mod1_LED:	
 12524                           
 12525                           	psect	text17
 12526  062F                     __ptext17:	
 12527 ;; *************** function _increment_subfield *****************
 12528 ;; Defined at:
 12529 ;;		line 328 in file "main.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;  exit            2   12[BANK0 ] int 
 12534 ;;  plus            2   10[BANK0 ] int 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2, status,0, pclath, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;Total ram usage:        4 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    7
 12551 ;; This function calls:
 12552 ;;		_PWM6_LoadDutyValue
 12553 ;;		_checkDebounceSW1
 12554 ;;		_checkDebounceSW2
 12555 ;; This function is called by:
 12556 ;;		_clock_subfields
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           
 12561                           ;psect for function _increment_subfield
 12562  062F                     _increment_subfield:	
 12563  062F                     l5777:	
 12564                           ;incstack = 0
 12565                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 12566                           
 12567                           
 12568                           ;main.c: 330:     int plus = 10;
 12569  062F  300A               	movlw	10
 12570  0630  0020               	movlb	0	; select bank0
 12571  0631  00CE               	movwf	increment_subfield@plus
 12572  0632  3000               	movlw	0
 12573  0633  00CF               	movwf	increment_subfield@plus+1
 12574  0634                     l5779:	
 12575                           
 12576                           ;main.c: 331:     int exit = 0;
 12577  0634  01D0               	clrf	increment_subfield@exit
 12578  0635  01D1               	clrf	increment_subfield@exit+1
 12579  0636                     l5781:	
 12580                           
 12581                           ;main.c: 333:     PWM6_LoadDutyValue(0);
 12582  0636  3000               	movlw	0
 12583  0637  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12584  0638  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12585  0639  318F  271C  3186   	fcall	_PWM6_LoadDutyValue
 12586                           
 12587                           ;main.c: 335:            while(exit == 0) {
 12588  063C  2E67               	goto	l5795
 12589  063D                     l1261:	
 12590                           
 12591                           ;main.c: 337:                if(!PORTCbits.RC5){
 12592  063D  1A8E               	btfsc	14,5	;volatile
 12593  063E  2E40               	goto	u2901
 12594  063F  2E41               	goto	u2900
 12595  0640                     u2901:	
 12596  0640  2E55               	goto	l5789
 12597  0641                     u2900:	
 12598  0641                     l5783:	
 12599                           
 12600                           ;main.c: 338:                     if(checkDebounceSW2()){
 12601  0641  3185  2508  3186   	fcall	_checkDebounceSW2
 12602  0644  3A00               	xorlw	0
 12603  0645  1903               	skipnz
 12604  0646  2E48               	goto	u2911
 12605  0647  2E49               	goto	u2910
 12606  0648                     u2911:	
 12607  0648  2E55               	goto	l5789
 12608  0649                     u2910:	
 12609  0649                     l5785:	
 12610                           
 12611                           ;main.c: 339:                          plus += 100;
 12612  0649  3064               	movlw	100
 12613  064A  0020               	movlb	0	; select bank0
 12614  064B  07CE               	addwf	increment_subfield@plus,f
 12615  064C  3000               	movlw	0
 12616  064D  3DCF               	addwfc	increment_subfield@plus+1,f
 12617  064E                     l5787:	
 12618                           
 12619                           ;main.c: 340:                          PWM6_LoadDutyValue(plus);
 12620  064E  084F               	movf	increment_subfield@plus+1,w
 12621  064F  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12622  0650  084E               	movf	increment_subfield@plus,w
 12623  0651  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 12624  0652  318F  271C  3186   	fcall	_PWM6_LoadDutyValue
 12625  0655                     l5789:	
 12626                           
 12627                           ;main.c: 343:                if(!PORTBbits.RB4){
 12628  0655  0020               	movlb	0	; select bank0
 12629  0656  1A0D               	btfsc	13,4	;volatile
 12630  0657  2E59               	goto	u2921
 12631  0658  2E5A               	goto	u2920
 12632  0659                     u2921:	
 12633  0659  2E67               	goto	l5795
 12634  065A                     u2920:	
 12635  065A                     l5791:	
 12636                           
 12637                           ;main.c: 344:                     if(checkDebounceSW1()){
 12638  065A  3184  2400  3186   	fcall	_checkDebounceSW1
 12639  065D  3A00               	xorlw	0
 12640  065E  1903               	skipnz
 12641  065F  2E61               	goto	u2931
 12642  0660  2E62               	goto	u2930
 12643  0661                     u2931:	
 12644  0661  2E67               	goto	l5795
 12645  0662                     u2930:	
 12646  0662                     l5793:	
 12647                           
 12648                           ;main.c: 345:                         exit = 1;
 12649  0662  3001               	movlw	1
 12650  0663  0020               	movlb	0	; select bank0
 12651  0664  00D0               	movwf	increment_subfield@exit
 12652  0665  3000               	movlw	0
 12653  0666  00D1               	movwf	increment_subfield@exit+1
 12654  0667                     l5795:	
 12655                           
 12656                           ;main.c: 335:            while(exit == 0) {
 12657  0667  0020               	movlb	0	; select bank0
 12658  0668  0850               	movf	increment_subfield@exit,w
 12659  0669  0451               	iorwf	increment_subfield@exit+1,w
 12660  066A  1903               	btfsc	3,2
 12661  066B  2E6D               	goto	u2941
 12662  066C  2E6E               	goto	u2940
 12663  066D                     u2941:	
 12664  066D  2E3D               	goto	l1261
 12665  066E                     u2940:	
 12666  066E                     l1267:	
 12667  066E  0008               	return
 12668  066F                     __end_of_increment_subfield:	
 12669                           
 12670                           	psect	text18
 12671  0508                     __ptext18:	
 12672 ;; *************** function _checkDebounceSW2 *****************
 12673 ;; Defined at:
 12674 ;;		line 534 in file "main.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      unsigned char 
 12681 ;; Registers used:
 12682 ;;		wreg, status,2, status,0
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;Total ram usage:        7 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:    6
 12695 ;; This function calls:
 12696 ;;		Nothing
 12697 ;; This function is called by:
 12698 ;;		_config_routine
 12699 ;;		_increment_subfield
 12700 ;;		_clock_subfields
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           
 12705                           ;psect for function _checkDebounceSW2
 12706  0508                     _checkDebounceSW2:	
 12707  0508                     l5707:	
 12708                           ;incstack = 0
 12709                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 12710                           
 12711                           
 12712                           ;main.c: 537:     if(clkms - last_ms2 < 0){
 12713  0508  087D               	movf	_clkms,w	;volatile
 12714  0509  0020               	movlb	0	; select bank0
 12715  050A  00C7               	movwf	??_checkDebounceSW2
 12716  050B  01C8               	clrf	??_checkDebounceSW2+1
 12717  050C  0848               	movf	??_checkDebounceSW2+1,w
 12718  050D  00CA               	movwf	??_checkDebounceSW2+3
 12719  050E  083D               	movf	_last_ms2,w
 12720  050F  0247               	subwf	??_checkDebounceSW2,w
 12721  0510  00C9               	movwf	??_checkDebounceSW2+2
 12722  0511  1C03               	skipc
 12723  0512  03CA               	decf	??_checkDebounceSW2+3,f
 12724  0513  1FCA               	btfss	??_checkDebounceSW2+3,7
 12725  0514  2D16               	goto	u2861
 12726  0515  2D17               	goto	u2860
 12727  0516                     u2861:	
 12728  0516  2D3B               	goto	l5715
 12729  0517                     u2860:	
 12730  0517                     l5709:	
 12731                           
 12732                           ;main.c: 539:         if ((300 - last_ms2)+ clkms > 2 ){
 12733  0517  087D               	movf	_clkms,w	;volatile
 12734  0518  00C7               	movwf	??_checkDebounceSW2
 12735  0519  01C8               	clrf	??_checkDebounceSW2+1
 12736  051A  0848               	movf	??_checkDebounceSW2+1,w
 12737  051B  00CA               	movwf	??_checkDebounceSW2+3
 12738  051C  083D               	movf	_last_ms2,w
 12739  051D  0247               	subwf	??_checkDebounceSW2,w
 12740  051E  00C9               	movwf	??_checkDebounceSW2+2
 12741  051F  1C03               	skipc
 12742  0520  03CA               	decf	??_checkDebounceSW2+3,f
 12743  0521  0849               	movf	??_checkDebounceSW2+2,w
 12744  0522  3E2C               	addlw	44
 12745  0523  00CB               	movwf	??_checkDebounceSW2+4
 12746  0524  3001               	movlw	1
 12747  0525  3D4A               	addwfc	??_checkDebounceSW2+3,w
 12748  0526  00CC               	movwf	??_checkDebounceSW2+5
 12749  0527  084C               	movf	??_checkDebounceSW2+5,w
 12750  0528  3A80               	xorlw	128
 12751  0529  00CD               	movwf	??_checkDebounceSW2+6
 12752  052A  3080               	movlw	128
 12753  052B  024D               	subwf	??_checkDebounceSW2+6,w
 12754  052C  1D03               	skipz
 12755  052D  2D30               	goto	u2875
 12756  052E  3003               	movlw	3
 12757  052F  024B               	subwf	??_checkDebounceSW2+4,w
 12758  0530                     u2875:	
 12759  0530  1C03               	skipc
 12760  0531  2D33               	goto	u2871
 12761  0532  2D34               	goto	u2870
 12762  0533                     u2871:	
 12763  0533  2D3B               	goto	l5715
 12764  0534                     u2870:	
 12765  0534                     l5711:	
 12766                           
 12767                           ;main.c: 540:             last_ms2 = clkms;
 12768  0534  087D               	movf	_clkms,w	;volatile
 12769  0535  0020               	movlb	0	; select bank0
 12770  0536  00C7               	movwf	??_checkDebounceSW2
 12771  0537  0847               	movf	??_checkDebounceSW2,w
 12772  0538  00BD               	movwf	_last_ms2
 12773                           
 12774                           ;main.c: 541:             return 1;
 12775  0539  3001               	movlw	1
 12776  053A  2D54               	goto	l1352
 12777  053B                     l5715:	
 12778                           
 12779                           ;main.c: 545:     if(clkms - last_ms2 < 2){
 12780  053B  087D               	movf	_clkms,w	;volatile
 12781  053C  0020               	movlb	0	; select bank0
 12782  053D  00C7               	movwf	??_checkDebounceSW2
 12783  053E  01C8               	clrf	??_checkDebounceSW2+1
 12784  053F  0848               	movf	??_checkDebounceSW2+1,w
 12785  0540  00CA               	movwf	??_checkDebounceSW2+3
 12786  0541  083D               	movf	_last_ms2,w
 12787  0542  0247               	subwf	??_checkDebounceSW2,w
 12788  0543  00C9               	movwf	??_checkDebounceSW2+2
 12789  0544  1C03               	skipc
 12790  0545  03CA               	decf	??_checkDebounceSW2+3,f
 12791  0546  084A               	movf	??_checkDebounceSW2+3,w
 12792  0547  3A80               	xorlw	128
 12793  0548  00CB               	movwf	??_checkDebounceSW2+4
 12794  0549  3080               	movlw	128
 12795  054A  024B               	subwf	??_checkDebounceSW2+4,w
 12796  054B  1D03               	skipz
 12797  054C  2D4F               	goto	u2885
 12798  054D  3002               	movlw	2
 12799  054E  0249               	subwf	??_checkDebounceSW2+2,w
 12800  054F                     u2885:	
 12801  054F  1803               	skipnc
 12802  0550  2D52               	goto	u2881
 12803  0551  2D53               	goto	u2880
 12804  0552                     u2881:	
 12805  0552  2D34               	goto	l5711
 12806  0553                     u2880:	
 12807  0553                     l5717:	
 12808                           
 12809                           ;main.c: 546:         return 0;
 12810  0553  3000               	movlw	0
 12811  0554                     l1352:	
 12812  0554  0008               	return
 12813  0555                     __end_of_checkDebounceSW2:	
 12814                           
 12815                           	psect	text19
 12816  0400                     __ptext19:	
 12817 ;; *************** function _checkDebounceSW1 *****************
 12818 ;; Defined at:
 12819 ;;		line 511 in file "main.c"
 12820 ;; Parameters:    Size  Location     Type
 12821 ;;		None
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;		None
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      unsigned char 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, status,0
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;Total ram usage:        7 bytes
 12838 ;; Hardware stack levels used:    1
 12839 ;; Hardware stack levels required when called:    6
 12840 ;; This function calls:
 12841 ;;		Nothing
 12842 ;; This function is called by:
 12843 ;;		_config_routine
 12844 ;;		_increment_subfield
 12845 ;;		_clock_subfields
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           
 12850                           ;psect for function _checkDebounceSW1
 12851  0400                     _checkDebounceSW1:	
 12852  0400                     l5681:	
 12853                           ;incstack = 0
 12854                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 12855                           
 12856                           
 12857                           ;main.c: 512:    PIE4bits.TMR1IE = 0;
 12858  0400  002E               	movlb	14	; select bank14
 12859  0401  101A               	bcf	26,0	;volatile
 12860  0402                     l5683:	
 12861                           
 12862                           ;main.c: 514:     if(clkms - last_ms < 0){
 12863  0402  087D               	movf	_clkms,w	;volatile
 12864  0403  0020               	movlb	0	; select bank0
 12865  0404  00C7               	movwf	??_checkDebounceSW1
 12866  0405  01C8               	clrf	??_checkDebounceSW1+1
 12867  0406  0848               	movf	??_checkDebounceSW1+1,w
 12868  0407  00CA               	movwf	??_checkDebounceSW1+3
 12869  0408  083E               	movf	_last_ms,w
 12870  0409  0247               	subwf	??_checkDebounceSW1,w
 12871  040A  00C9               	movwf	??_checkDebounceSW1+2
 12872  040B  1C03               	skipc
 12873  040C  03CA               	decf	??_checkDebounceSW1+3,f
 12874  040D  1FCA               	btfss	??_checkDebounceSW1+3,7
 12875  040E  2C10               	goto	u2831
 12876  040F  2C11               	goto	u2830
 12877  0410                     u2831:	
 12878  0410  2C37               	goto	l5693
 12879  0411                     u2830:	
 12880  0411                     l5685:	
 12881                           
 12882                           ;main.c: 516:         if ((300 - last_ms)+ clkms > 2 ){
 12883  0411  087D               	movf	_clkms,w	;volatile
 12884  0412  00C7               	movwf	??_checkDebounceSW1
 12885  0413  01C8               	clrf	??_checkDebounceSW1+1
 12886  0414  0848               	movf	??_checkDebounceSW1+1,w
 12887  0415  00CA               	movwf	??_checkDebounceSW1+3
 12888  0416  083E               	movf	_last_ms,w
 12889  0417  0247               	subwf	??_checkDebounceSW1,w
 12890  0418  00C9               	movwf	??_checkDebounceSW1+2
 12891  0419  1C03               	skipc
 12892  041A  03CA               	decf	??_checkDebounceSW1+3,f
 12893  041B  0849               	movf	??_checkDebounceSW1+2,w
 12894  041C  3E2C               	addlw	44
 12895  041D  00CB               	movwf	??_checkDebounceSW1+4
 12896  041E  3001               	movlw	1
 12897  041F  3D4A               	addwfc	??_checkDebounceSW1+3,w
 12898  0420  00CC               	movwf	??_checkDebounceSW1+5
 12899  0421  084C               	movf	??_checkDebounceSW1+5,w
 12900  0422  3A80               	xorlw	128
 12901  0423  00CD               	movwf	??_checkDebounceSW1+6
 12902  0424  3080               	movlw	128
 12903  0425  024D               	subwf	??_checkDebounceSW1+6,w
 12904  0426  1D03               	skipz
 12905  0427  2C2A               	goto	u2845
 12906  0428  3003               	movlw	3
 12907  0429  024B               	subwf	??_checkDebounceSW1+4,w
 12908  042A                     u2845:	
 12909  042A  1C03               	skipc
 12910  042B  2C2D               	goto	u2841
 12911  042C  2C2E               	goto	u2840
 12912  042D                     u2841:	
 12913  042D  2C37               	goto	l5693
 12914  042E                     u2840:	
 12915  042E                     l5687:	
 12916                           
 12917                           ;main.c: 517:             last_ms = clkms;
 12918  042E  087D               	movf	_clkms,w	;volatile
 12919  042F  0020               	movlb	0	; select bank0
 12920  0430  00C7               	movwf	??_checkDebounceSW1
 12921  0431  0847               	movf	??_checkDebounceSW1,w
 12922  0432  00BE               	movwf	_last_ms
 12923  0433                     l5689:	
 12924                           
 12925                           ;main.c: 518:             PIE4bits.TMR1IE = 1;
 12926  0433  002E               	movlb	14	; select bank14
 12927  0434  141A               	bsf	26,0	;volatile
 12928                           
 12929                           ;main.c: 519:             return 1;
 12930  0435  3001               	movlw	1
 12931  0436  2C59               	goto	l1345
 12932  0437                     l5693:	
 12933                           
 12934                           ;main.c: 523:     if(clkms - last_ms < 2){
 12935  0437  087D               	movf	_clkms,w	;volatile
 12936  0438  0020               	movlb	0	; select bank0
 12937  0439  00C7               	movwf	??_checkDebounceSW1
 12938  043A  01C8               	clrf	??_checkDebounceSW1+1
 12939  043B  0848               	movf	??_checkDebounceSW1+1,w
 12940  043C  00CA               	movwf	??_checkDebounceSW1+3
 12941  043D  083E               	movf	_last_ms,w
 12942  043E  0247               	subwf	??_checkDebounceSW1,w
 12943  043F  00C9               	movwf	??_checkDebounceSW1+2
 12944  0440  1C03               	skipc
 12945  0441  03CA               	decf	??_checkDebounceSW1+3,f
 12946  0442  084A               	movf	??_checkDebounceSW1+3,w
 12947  0443  3A80               	xorlw	128
 12948  0444  00CB               	movwf	??_checkDebounceSW1+4
 12949  0445  3080               	movlw	128
 12950  0446  024B               	subwf	??_checkDebounceSW1+4,w
 12951  0447  1D03               	skipz
 12952  0448  2C4B               	goto	u2855
 12953  0449  3002               	movlw	2
 12954  044A  0249               	subwf	??_checkDebounceSW1+2,w
 12955  044B                     u2855:	
 12956  044B  1803               	skipnc
 12957  044C  2C4E               	goto	u2851
 12958  044D  2C4F               	goto	u2850
 12959  044E                     u2851:	
 12960  044E  2C51               	goto	l5701
 12961  044F                     u2850:	
 12962  044F                     l5695:	
 12963                           
 12964                           ;main.c: 524:         return 0;
 12965  044F  3000               	movlw	0
 12966  0450  2C59               	goto	l1345
 12967  0451                     l5701:	
 12968                           
 12969                           ;main.c: 527:         last_ms = clkms;
 12970  0451  087D               	movf	_clkms,w	;volatile
 12971  0452  0020               	movlb	0	; select bank0
 12972  0453  00C7               	movwf	??_checkDebounceSW1
 12973  0454  0847               	movf	??_checkDebounceSW1,w
 12974  0455  00BE               	movwf	_last_ms
 12975  0456                     l5703:	
 12976                           
 12977                           ;main.c: 528:         PIE4bits.TMR1IE = 1;
 12978  0456  002E               	movlb	14	; select bank14
 12979  0457  141A               	bsf	26,0	;volatile
 12980                           
 12981                           ;main.c: 529:         return 1;
 12982  0458  3001               	movlw	1
 12983  0459                     l1345:	
 12984  0459  0008               	return
 12985  045A                     __end_of_checkDebounceSW1:	
 12986                           
 12987                           	psect	text20
 12988  03A5                     __ptext20:	
 12989 ;; *************** function _all_LED *****************
 12990 ;; Defined at:
 12991 ;;		line 401 in file "main.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;		None
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;		None
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  1    wreg      void 
 12998 ;; Registers used:
 12999 ;;		wreg, status,2, status,0, pclath, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;Total ram usage:        1 bytes
 13010 ;; Hardware stack levels used:    1
 13011 ;; Hardware stack levels required when called:    7
 13012 ;; This function calls:
 13013 ;;		_PWM6_LoadDutyValue
 13014 ;; This function is called by:
 13015 ;;		_config_routine
 13016 ;; This function uses a non-reentrant model
 13017 ;;
 13018                           
 13019                           
 13020                           ;psect for function _all_LED
 13021  03A5                     _all_LED:	
 13022  03A5                     l1286:	
 13023                           ;incstack = 0
 13024                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 13025                           ;main.c: 403:        do { LATAbits.LATA7 = 1; } while(0);
 13026                           
 13027  03A5  0020               	movlb	0	; select bank0
 13028  03A6  1796               	bsf	22,7	;volatile
 13029  03A7                     l5955:	
 13030                           
 13031                           ;main.c: 404:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13032  03A7  3021               	movlw	33
 13033  03A8  0020               	movlb	0	; select bank0
 13034  03A9  00CB               	movwf	??_all_LED
 13035  03AA  3076               	movlw	118
 13036  03AB                     u3417:	
 13037  03AB  0B89               	decfsz	9,f
 13038  03AC  2BAB               	goto	u3417
 13039  03AD  0BCB               	decfsz	??_all_LED,f
 13040  03AE  2BAB               	goto	u3417
 13041  03AF  0000               	nop
 13042  03B0                     l5957:	
 13043  03B0  0020               	movlb	0	; select bank0
 13044  03B1  1396               	bcf	22,7	;volatile
 13045  03B2                     l1289:	
 13046                           
 13047                           ;main.c: 406:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13048  03B2  3021               	movlw	33
 13049  03B3  0020               	movlb	0	; select bank0
 13050  03B4  00CB               	movwf	??_all_LED
 13051  03B5  3076               	movlw	118
 13052  03B6                     u3427:	
 13053  03B6  0B89               	decfsz	9,f
 13054  03B7  2BB6               	goto	u3427
 13055  03B8  0BCB               	decfsz	??_all_LED,f
 13056  03B9  2BB6               	goto	u3427
 13057  03BA  0000               	nop
 13058  03BB                     l5959:	
 13059                           
 13060                           ;main.c: 408:        PWM6_LoadDutyValue(1023);
 13061  03BB  30FF               	movlw	255
 13062  03BC  0020               	movlb	0	; select bank0
 13063  03BD  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13064  03BE  3003               	movlw	3
 13065  03BF  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13066  03C0  318F  271C  3183   	fcall	_PWM6_LoadDutyValue
 13067  03C3                     l5961:	
 13068                           
 13069                           ;main.c: 409:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13070  03C3  3021               	movlw	33
 13071  03C4  0020               	movlb	0	; select bank0
 13072  03C5  00CB               	movwf	??_all_LED
 13073  03C6  3076               	movlw	118
 13074  03C7                     u3437:	
 13075  03C7  0B89               	decfsz	9,f
 13076  03C8  2BC7               	goto	u3437
 13077  03C9  0BCB               	decfsz	??_all_LED,f
 13078  03CA  2BC7               	goto	u3437
 13079  03CB  0000               	nop
 13080                           
 13081                           ;main.c: 411:         PWM6_LoadDutyValue(0);
 13082  03CC  3000               	movlw	0
 13083  03CD  0020               	movlb	0	; select bank0
 13084  03CE  00C7               	movwf	PWM6_LoadDutyValue@dutyValue
 13085  03CF  00C8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13086  03D0  318F  271C  3183   	fcall	_PWM6_LoadDutyValue
 13087  03D3                     l5963:	
 13088                           
 13089                           ;main.c: 412:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13090  03D3  3021               	movlw	33
 13091  03D4  0020               	movlb	0	; select bank0
 13092  03D5  00CB               	movwf	??_all_LED
 13093  03D6  3076               	movlw	118
 13094  03D7                     u3447:	
 13095  03D7  0B89               	decfsz	9,f
 13096  03D8  2BD7               	goto	u3447
 13097  03D9  0BCB               	decfsz	??_all_LED,f
 13098  03DA  2BD7               	goto	u3447
 13099  03DB  0000               	nop
 13100  03DC                     l5965:	
 13101  03DC  0020               	movlb	0	; select bank0
 13102  03DD  1696               	bsf	22,5	;volatile
 13103  03DE                     l5967:	
 13104                           
 13105                           ;main.c: 414:          _delay((unsigned long)((100)*(1000000/4000.0)));
 13106  03DE  3021               	movlw	33
 13107  03DF  0020               	movlb	0	; select bank0
 13108  03E0  00CB               	movwf	??_all_LED
 13109  03E1  3076               	movlw	118
 13110  03E2                     u3457:	
 13111  03E2  0B89               	decfsz	9,f
 13112  03E3  2BE2               	goto	u3457
 13113  03E4  0BCB               	decfsz	??_all_LED,f
 13114  03E5  2BE2               	goto	u3457
 13115  03E6  0000               	nop
 13116  03E7                     l5969:	
 13117  03E7  0020               	movlb	0	; select bank0
 13118  03E8  1296               	bcf	22,5	;volatile
 13119  03E9                     l5971:	
 13120                           
 13121                           ;main.c: 416:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13122  03E9  3021               	movlw	33
 13123  03EA  0020               	movlb	0	; select bank0
 13124  03EB  00CB               	movwf	??_all_LED
 13125  03EC  3076               	movlw	118
 13126  03ED                     u3467:	
 13127  03ED  0B89               	decfsz	9,f
 13128  03EE  2BED               	goto	u3467
 13129  03EF  0BCB               	decfsz	??_all_LED,f
 13130  03F0  2BED               	goto	u3467
 13131  03F1  0000               	nop
 13132  03F2                     l5973:	
 13133  03F2  0020               	movlb	0	; select bank0
 13134  03F3  1616               	bsf	22,4	;volatile
 13135  03F4                     l5975:	
 13136                           
 13137                           ;main.c: 418:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13138  03F4  3021               	movlw	33
 13139  03F5  0020               	movlb	0	; select bank0
 13140  03F6  00CB               	movwf	??_all_LED
 13141  03F7  3076               	movlw	118
 13142  03F8                     u3477:	
 13143  03F8  0B89               	decfsz	9,f
 13144  03F9  2BF8               	goto	u3477
 13145  03FA  0BCB               	decfsz	??_all_LED,f
 13146  03FB  2BF8               	goto	u3477
 13147  03FC  0000               	nop
 13148  03FD                     l5977:	
 13149  03FD  0020               	movlb	0	; select bank0
 13150  03FE  1216               	bcf	22,4	;volatile
 13151  03FF                     l1298:	
 13152  03FF  0008               	return
 13153  0400                     __end_of_all_LED:	
 13154                           
 13155                           	psect	text21
 13156  0F1C                     __ptext21:	
 13157 ;; *************** function _PWM6_LoadDutyValue *****************
 13158 ;; Defined at:
 13159 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2, status,0
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;Total ram usage:        4 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    6
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		_main
 13184 ;;		_increment_subfield
 13185 ;;		_all_LED
 13186 ;;		_mod1_LED
 13187 ;;		_mod2_LED
 13188 ;;		_mod3_LED
 13189 ;;		_mod4_LED
 13190 ;;		_mode_select_LED
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           
 13195                           ;psect for function _PWM6_LoadDutyValue
 13196  0F1C                     _PWM6_LoadDutyValue:	
 13197  0F1C                     l5663:	
 13198                           ;incstack = 0
 13199                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13200                           
 13201                           
 13202                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13203  0F1C  0020               	movlb	0	; select bank0
 13204  0F1D  0848               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13205  0F1E  00CA               	movwf	??_PWM6_LoadDutyValue+1
 13206  0F1F  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 13207  0F20  00C9               	movwf	??_PWM6_LoadDutyValue
 13208  0F21  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 13209  0F22  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 13210  0F23  36CA               	lsrf	??_PWM6_LoadDutyValue+1,f
 13211  0F24  0CC9               	rrf	??_PWM6_LoadDutyValue,f
 13212  0F25  0849               	movf	??_PWM6_LoadDutyValue,w
 13213  0F26  0027               	movlb	7	; select bank7
 13214  0F27  008D               	movwf	13	;volatile
 13215                           
 13216                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13217  0F28  0020               	movlb	0	; select bank0
 13218  0F29  0847               	movf	PWM6_LoadDutyValue@dutyValue,w
 13219  0F2A  3903               	andlw	3
 13220  0F2B  00C9               	movwf	??_PWM6_LoadDutyValue
 13221  0F2C  3005               	movlw	5
 13222  0F2D                     u2825:	
 13223  0F2D  35C9               	lslf	??_PWM6_LoadDutyValue,f
 13224  0F2E  3EFF               	addlw	-1
 13225  0F2F  1D03               	skipz
 13226  0F30  2F2D               	goto	u2825
 13227  0F31  3549               	lslf	??_PWM6_LoadDutyValue,w
 13228  0F32  0027               	movlb	7	; select bank7
 13229  0F33  008C               	movwf	12	;volatile
 13230  0F34                     l916:	
 13231  0F34  0008               	return
 13232  0F35                     __end_of_PWM6_LoadDutyValue:	
 13233                           
 13234                           	psect	text22
 13235  0C9A                     __ptext22:	
 13236 ;; *************** function _TMR0_StartTimer *****************
 13237 ;; Defined at:
 13238 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;		None
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;		None
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      void 
 13245 ;; Registers used:
 13246 ;;		None
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;Total ram usage:        0 bytes
 13257 ;; Hardware stack levels used:    1
 13258 ;; Hardware stack levels required when called:    6
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_main
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           
 13267                           ;psect for function _TMR0_StartTimer
 13268  0C9A                     _TMR0_StartTimer:	
 13269  0C9A                     l6143:	
 13270                           ;incstack = 0
 13271                           ; Regs used in _TMR0_StartTimer: []
 13272                           
 13273                           
 13274                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 13275  0C9A  0020               	movlb	0	; select bank0
 13276  0C9B  179E               	bsf	30,7	;volatile
 13277  0C9C                     l1603:	
 13278  0C9C  0008               	return
 13279  0C9D                     __end_of_TMR0_StartTimer:	
 13280                           
 13281                           	psect	text23
 13282  0F69                     __ptext23:	
 13283 ;; *************** function _SYSTEM_Initialize *****************
 13284 ;; Defined at:
 13285 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;		None
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		wreg, status,2, status,0, pclath, cstack
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;Total ram usage:        0 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:    8
 13306 ;; This function calls:
 13307 ;;		_ADCC_Initialize
 13308 ;;		_EXT_INT_Initialize
 13309 ;;		_OSCILLATOR_Initialize
 13310 ;;		_PIN_MANAGER_Initialize
 13311 ;;		_PMD_Initialize
 13312 ;;		_PWM6_Initialize
 13313 ;;		_TMR0_Initialize
 13314 ;;		_TMR1_Initialize
 13315 ;;		_TMR2_Initialize
 13316 ;; This function is called by:
 13317 ;;		_main
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321                           
 13322                           ;psect for function _SYSTEM_Initialize
 13323  0F69                     _SYSTEM_Initialize:	
 13324  0F69                     l6051:	
 13325                           ;incstack = 0
 13326                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13327                           
 13328                           
 13329                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13330  0F69  318D  252E  318F   	fcall	_PMD_Initialize
 13331  0F6C                     l6053:	
 13332                           
 13333                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13334  0F6C  3185  259F  318F   	fcall	_PIN_MANAGER_Initialize
 13335  0F6F                     l6055:	
 13336                           
 13337                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13338  0F6F  318D  2548  318F   	fcall	_OSCILLATOR_Initialize
 13339  0F72                     l6057:	
 13340                           
 13341                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 13342  0F72  318D  25A8  318F   	fcall	_PWM6_Initialize
 13343  0F75                     l6059:	
 13344                           
 13345                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13346  0F75  318E  2690  318F   	fcall	_ADCC_Initialize
 13347  0F78                     l6061:	
 13348                           
 13349                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 13350  0F78  318E  26EB  318F   	fcall	_TMR2_Initialize
 13351  0F7B                     l6063:	
 13352                           
 13353                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13354  0F7B  318F  27A1  318F   	fcall	_TMR1_Initialize
 13355  0F7E                     l6065:	
 13356                           
 13357                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 13358  0F7E  318D  25B5  318F   	fcall	_EXT_INT_Initialize
 13359  0F81                     l6067:	
 13360                           
 13361                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 13362  0F81  318E  2665  318F   	fcall	_TMR0_Initialize
 13363  0F84                     l439:	
 13364  0F84  0008               	return
 13365  0F85                     __end_of_SYSTEM_Initialize:	
 13366                           
 13367                           	psect	text24
 13368  0EEB                     __ptext24:	
 13369 ;; *************** function _TMR2_Initialize *****************
 13370 ;; Defined at:
 13371 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;		None
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;		None
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0, pclath, cstack
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13389 ;;Total ram usage:        0 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    7
 13392 ;; This function calls:
 13393 ;;		_TMR2_SetInterruptHandler
 13394 ;; This function is called by:
 13395 ;;		_SYSTEM_Initialize
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           
 13400                           ;psect for function _TMR2_Initialize
 13401  0EEB                     _TMR2_Initialize:	
 13402  0EEB                     l5895:	
 13403                           ;incstack = 0
 13404                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13405                           
 13406                           
 13407                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 13408  0EEB  3001               	movlw	1
 13409  0EEC  0025               	movlb	5	; select bank5
 13410  0EED  0090               	movwf	16	;volatile
 13411                           
 13412                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 13413  0EEE  3020               	movlw	32
 13414  0EEF  008F               	movwf	15	;volatile
 13415  0EF0                     l5897:	
 13416                           
 13417                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 13418  0EF0  0191               	clrf	17	;volatile
 13419  0EF1                     l5899:	
 13420                           
 13421                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 13422  0EF1  309B               	movlw	155
 13423  0EF2  008D               	movwf	13	;volatile
 13424                           
 13425                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 13426  0EF3  018C               	clrf	12	;volatile
 13427  0EF4                     l5901:	
 13428                           
 13429                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 13430  0EF4  002E               	movlb	14	; select bank14
 13431  0EF5  1090               	bcf	16,1	;volatile
 13432  0EF6                     l5903:	
 13433                           
 13434                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 13435  0EF6  149A               	bsf	26,1	;volatile
 13436  0EF7                     l5905:	
 13437                           
 13438                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 13439  0EF7  307C               	movlw	low _TMR2_DefaultInterruptHandler
 13440  0EF8  0020               	movlb	0	; select bank0
 13441  0EF9  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13442  0EFA  300C               	movlw	high _TMR2_DefaultInterruptHandler
 13443  0EFB  00C8               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13444  0EFC  318D  255A  318E   	fcall	_TMR2_SetInterruptHandler
 13445  0EFF                     l5907:	
 13446                           
 13447                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 13448  0EFF  30B1               	movlw	177
 13449  0F00  0025               	movlb	5	; select bank5
 13450  0F01  008E               	movwf	14	;volatile
 13451  0F02                     l998:	
 13452  0F02  0008               	return
 13453  0F03                     __end_of_TMR2_Initialize:	
 13454                           
 13455                           	psect	text25
 13456  0D5A                     __ptext25:	
 13457 ;; *************** function _TMR2_SetInterruptHandler *****************
 13458 ;; Defined at:
 13459 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13462 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  1    wreg      void 
 13467 ;; Registers used:
 13468 ;;		wreg
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;Total ram usage:        2 bytes
 13479 ;; Hardware stack levels used:    1
 13480 ;; Hardware stack levels required when called:    6
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_TMR2_Initialize
 13485 ;;		_main
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           
 13490                           ;psect for function _TMR2_SetInterruptHandler
 13491  0D5A                     _TMR2_SetInterruptHandler:	
 13492  0D5A                     l5751:	
 13493                           ;incstack = 0
 13494                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 13495                           
 13496                           
 13497                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 13498  0D5A  0020               	movlb	0	; select bank0
 13499  0D5B  0848               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 13500  0D5C  0021               	movlb	1	; select bank1
 13501  0D5D  00CB               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 13502  0D5E  0020               	movlb	0	; select bank0
 13503  0D5F  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 13504  0D60  0021               	movlb	1	; select bank1
 13505  0D61  00CA               	movwf	_TMR2_InterruptHandler^(0+128)
 13506  0D62                     l1041:	
 13507  0D62  0008               	return
 13508  0D63                     __end_of_TMR2_SetInterruptHandler:	
 13509                           
 13510                           	psect	text26
 13511  0FA1                     __ptext26:	
 13512 ;; *************** function _TMR1_Initialize *****************
 13513 ;; Defined at:
 13514 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;		None
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;		None
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      void 
 13521 ;; Registers used:
 13522 ;;		wreg, status,2, status,0, pclath, cstack
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;Total ram usage:        0 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:    7
 13535 ;; This function calls:
 13536 ;;		_TMR1_SetInterruptHandler
 13537 ;; This function is called by:
 13538 ;;		_SYSTEM_Initialize
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           
 13543                           ;psect for function _TMR1_Initialize
 13544  0FA1                     _TMR1_Initialize:	
 13545  0FA1                     l5909:	
 13546                           ;incstack = 0
 13547                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13548                           
 13549                           
 13550                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13551  0FA1  0024               	movlb	4	; select bank4
 13552  0FA2  018F               	clrf	15	;volatile
 13553                           
 13554                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13555  0FA3  0190               	clrf	16	;volatile
 13556  0FA4                     l5911:	
 13557                           
 13558                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13559  0FA4  3004               	movlw	4
 13560  0FA5  0091               	movwf	17	;volatile
 13561  0FA6                     l5913:	
 13562                           
 13563                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 13564  0FA6  30E1               	movlw	225
 13565  0FA7  008D               	movwf	13	;volatile
 13566  0FA8                     l5915:	
 13567                           
 13568                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 13569  0FA8  30BA               	movlw	186
 13570  0FA9  008C               	movwf	12	;volatile
 13571  0FAA                     l5917:	
 13572                           
 13573                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13574  0FAA  080D               	movf	13,w	;volatile
 13575  0FAB  0020               	movlb	0	; select bank0
 13576  0FAC  00E7               	movwf	_timer1ReloadVal+1	;volatile
 13577  0FAD  0024               	movlb	4	; select bank4
 13578  0FAE  080C               	movf	12,w	;volatile
 13579  0FAF  0020               	movlb	0	; select bank0
 13580  0FB0  00E6               	movwf	_timer1ReloadVal	;volatile
 13581  0FB1                     l5919:	
 13582                           
 13583                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 13584  0FB1  002E               	movlb	14	; select bank14
 13585  0FB2  1010               	bcf	16,0	;volatile
 13586  0FB3                     l5921:	
 13587                           
 13588                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13589  0FB3  141A               	bsf	26,0	;volatile
 13590  0FB4                     l5923:	
 13591                           
 13592                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13593  0FB4  307B               	movlw	low _TMR1_DefaultInterruptHandler
 13594  0FB5  0020               	movlb	0	; select bank0
 13595  0FB6  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13596  0FB7  300C               	movlw	high _TMR1_DefaultInterruptHandler
 13597  0FB8  00C8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13598  0FB9  318C  24E7  318F   	fcall	_TMR1_SetInterruptHandler
 13599  0FBC                     l5925:	
 13600                           
 13601                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 13602  0FBC  3015               	movlw	21
 13603  0FBD  0024               	movlb	4	; select bank4
 13604  0FBE  008E               	movwf	14	;volatile
 13605  0FBF                     l869:	
 13606  0FBF  0008               	return
 13607  0FC0                     __end_of_TMR1_Initialize:	
 13608                           
 13609                           	psect	text27
 13610  0CE7                     __ptext27:	
 13611 ;; *************** function _TMR1_SetInterruptHandler *****************
 13612 ;; Defined at:
 13613 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13616 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:        2 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    6
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_TMR1_Initialize
 13639 ;;		_main
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           
 13644                           ;psect for function _TMR1_SetInterruptHandler
 13645  0CE7                     _TMR1_SetInterruptHandler:	
 13646  0CE7                     l5729:	
 13647                           ;incstack = 0
 13648                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13649                           
 13650                           
 13651                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 13652  0CE7  0020               	movlb	0	; select bank0
 13653  0CE8  0848               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13654  0CE9  00E5               	movwf	_TMR1_InterruptHandler+1
 13655  0CEA  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13656  0CEB  00E4               	movwf	_TMR1_InterruptHandler
 13657  0CEC                     l899:	
 13658  0CEC  0008               	return
 13659  0CED                     __end_of_TMR1_SetInterruptHandler:	
 13660                           
 13661                           	psect	text28
 13662  0E65                     __ptext28:	
 13663 ;; *************** function _TMR0_Initialize *****************
 13664 ;; Defined at:
 13665 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13666 ;; Parameters:    Size  Location     Type
 13667 ;;		None
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;		None
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  1    wreg      void 
 13672 ;; Registers used:
 13673 ;;		wreg, status,2, status,0, pclath, cstack
 13674 ;; Tracked objects:
 13675 ;;		On entry : 0/0
 13676 ;;		On exit  : 0/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;Total ram usage:        0 bytes
 13684 ;; Hardware stack levels used:    1
 13685 ;; Hardware stack levels required when called:    7
 13686 ;; This function calls:
 13687 ;;		_TMR0_SetInterruptHandler
 13688 ;; This function is called by:
 13689 ;;		_SYSTEM_Initialize
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693                           
 13694                           ;psect for function _TMR0_Initialize
 13695  0E65                     _TMR0_Initialize:	
 13696  0E65                     l5927:	
 13697                           ;incstack = 0
 13698                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13699                           
 13700                           
 13701                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 13702  0E65  3095               	movlw	149
 13703  0E66  0020               	movlb	0	; select bank0
 13704  0E67  009F               	movwf	31	;volatile
 13705                           
 13706                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 13707  0E68  30F1               	movlw	241
 13708  0E69  009D               	movwf	29	;volatile
 13709  0E6A                     l5929:	
 13710                           
 13711                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13712  0E6A  019C               	clrf	28	;volatile
 13713  0E6B                     l5931:	
 13714                           
 13715                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13716  0E6B  002E               	movlb	14	; select bank14
 13717  0E6C  128C               	bcf	12,5	;volatile
 13718  0E6D                     l5933:	
 13719                           
 13720                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13721  0E6D  1696               	bsf	22,5	;volatile
 13722  0E6E                     l5935:	
 13723                           
 13724                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13725  0E6E  307A               	movlw	low _TMR0_DefaultInterruptHandler
 13726  0E6F  0020               	movlb	0	; select bank0
 13727  0E70  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13728  0E71  300C               	movlw	high _TMR0_DefaultInterruptHandler
 13729  0E72  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13730  0E73  318D  2551  318E   	fcall	_TMR0_SetInterruptHandler
 13731  0E76                     l5937:	
 13732                           
 13733                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 13734  0E76  300B               	movlw	11
 13735  0E77  0020               	movlb	0	; select bank0
 13736  0E78  009E               	movwf	30	;volatile
 13737  0E79                     l1600:	
 13738  0E79  0008               	return
 13739  0E7A                     __end_of_TMR0_Initialize:	
 13740                           
 13741                           	psect	text29
 13742  0D51                     __ptext29:	
 13743 ;; *************** function _TMR0_SetInterruptHandler *****************
 13744 ;; Defined at:
 13745 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13748 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;		None
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1    wreg      void 
 13753 ;; Registers used:
 13754 ;;		wreg
 13755 ;; Tracked objects:
 13756 ;;		On entry : 0/0
 13757 ;;		On exit  : 0/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        2 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    6
 13767 ;; This function calls:
 13768 ;;		Nothing
 13769 ;; This function is called by:
 13770 ;;		_main
 13771 ;;		_TMR0_Initialize
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           
 13776                           ;psect for function _TMR0_SetInterruptHandler
 13777  0D51                     _TMR0_SetInterruptHandler:	
 13778  0D51                     l5753:	
 13779                           ;incstack = 0
 13780                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13781                           
 13782                           
 13783                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 13784  0D51  0020               	movlb	0	; select bank0
 13785  0D52  0848               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13786  0D53  0021               	movlb	1	; select bank1
 13787  0D54  00C9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 13788  0D55  0020               	movlb	0	; select bank0
 13789  0D56  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13790  0D57  0021               	movlb	1	; select bank1
 13791  0D58  00C8               	movwf	_TMR0_InterruptHandler^(0+128)
 13792  0D59                     l1622:	
 13793  0D59  0008               	return
 13794  0D5A                     __end_of_TMR0_SetInterruptHandler:	
 13795                           
 13796                           	psect	text30
 13797  0DA8                     __ptext30:	
 13798 ;; *************** function _PWM6_Initialize *****************
 13799 ;; Defined at:
 13800 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;		None
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;		None
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      void 
 13807 ;; Registers used:
 13808 ;;		wreg, status,2, status,0
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;Total ram usage:        0 bytes
 13819 ;; Hardware stack levels used:    1
 13820 ;; Hardware stack levels required when called:    6
 13821 ;; This function calls:
 13822 ;;		Nothing
 13823 ;; This function is called by:
 13824 ;;		_SYSTEM_Initialize
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           
 13829                           ;psect for function _PWM6_Initialize
 13830  0DA8                     _PWM6_Initialize:	
 13831  0DA8                     l5885:	
 13832                           ;incstack = 0
 13833                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 13834                           
 13835                           
 13836                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 13837  0DA8  3080               	movlw	128
 13838  0DA9  0027               	movlb	7	; select bank7
 13839  0DAA  008E               	movwf	14	;volatile
 13840                           
 13841                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 13842  0DAB  303E               	movlw	62
 13843  0DAC  008D               	movwf	13	;volatile
 13844                           
 13845                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 13846  0DAD  3040               	movlw	64
 13847  0DAE  008C               	movwf	12	;volatile
 13848  0DAF                     l5887:	
 13849                           
 13850                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 13851  0DAF  0024               	movlb	4	; select bank4
 13852  0DB0  081F               	movf	31,w	;volatile
 13853  0DB1  39F3               	andlw	-13
 13854  0DB2  3804               	iorlw	4
 13855  0DB3  009F               	movwf	31	;volatile
 13856  0DB4                     l913:	
 13857  0DB4  0008               	return
 13858  0DB5                     __end_of_PWM6_Initialize:	
 13859                           
 13860                           	psect	text31
 13861  0D2E                     __ptext31:	
 13862 ;; *************** function _PMD_Initialize *****************
 13863 ;; Defined at:
 13864 ;;		line 77 in file "mcc_generated_files/mcc.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;		None
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      void 
 13871 ;; Registers used:
 13872 ;;		status,2
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;Total ram usage:        0 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:    6
 13885 ;; This function calls:
 13886 ;;		Nothing
 13887 ;; This function is called by:
 13888 ;;		_SYSTEM_Initialize
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           
 13893                           ;psect for function _PMD_Initialize
 13894  0D2E                     _PMD_Initialize:	
 13895  0D2E                     l5821:	
 13896                           ;incstack = 0
 13897                           ; Regs used in _PMD_Initialize: [status,2]
 13898                           
 13899                           
 13900                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 13901  0D2E  002F               	movlb	15	; select bank15
 13902  0D2F  0196               	clrf	22	;volatile
 13903                           
 13904                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 13905  0D30  0197               	clrf	23	;volatile
 13906                           
 13907                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 13908  0D31  0198               	clrf	24	;volatile
 13909                           
 13910                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 13911  0D32  0199               	clrf	25	;volatile
 13912                           
 13913                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 13914  0D33  019A               	clrf	26	;volatile
 13915                           
 13916                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 13917  0D34  019B               	clrf	27	;volatile
 13918  0D35                     l445:	
 13919  0D35  0008               	return
 13920  0D36                     __end_of_PMD_Initialize:	
 13921                           
 13922                           	psect	text32
 13923  059F                     __ptext32:	
 13924 ;; *************** function _PIN_MANAGER_Initialize *****************
 13925 ;; Defined at:
 13926 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;		None
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;		None
 13931 ;; Return value:  Size  Location     Type
 13932 ;;                  1    wreg      void 
 13933 ;; Registers used:
 13934 ;;		wreg, status,2
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/0
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;Total ram usage:        0 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:    6
 13947 ;; This function calls:
 13948 ;;		Nothing
 13949 ;; This function is called by:
 13950 ;;		_SYSTEM_Initialize
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           
 13955                           ;psect for function _PIN_MANAGER_Initialize
 13956  059F                     _PIN_MANAGER_Initialize:	
 13957  059F                     l5823:	
 13958                           ;incstack = 0
 13959                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13960                           
 13961                           
 13962                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13963  059F  0020               	movlb	0	; select bank0
 13964  05A0  019A               	clrf	26	;volatile
 13965                           
 13966                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13967  05A1  0199               	clrf	25	;volatile
 13968                           
 13969                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13970  05A2  0196               	clrf	22	;volatile
 13971                           
 13972                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13973  05A3  0197               	clrf	23	;volatile
 13974                           
 13975                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13976  05A4  0198               	clrf	24	;volatile
 13977  05A5                     l5825:	
 13978                           
 13979                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13980  05A5  3007               	movlw	7
 13981  05A6  0095               	movwf	21	;volatile
 13982  05A7                     l5827:	
 13983                           
 13984                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 13985  05A7  300F               	movlw	15
 13986  05A8  0091               	movwf	17	;volatile
 13987  05A9                     l5829:	
 13988                           
 13989                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 13990  05A9  30FF               	movlw	255
 13991  05AA  0092               	movwf	18	;volatile
 13992  05AB                     l5831:	
 13993                           
 13994                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 13995  05AB  30FF               	movlw	255
 13996  05AC  0093               	movwf	19	;volatile
 13997  05AD                     l5833:	
 13998                           
 13999                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14000  05AD  30FF               	movlw	255
 14001  05AE  0094               	movwf	20	;volatile
 14002  05AF                     l5835:	
 14003                           
 14004                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 14005  05AF  30FF               	movlw	255
 14006  05B0  003E               	movlb	30	; select bank30
 14007  05B1  00D9               	movwf	89	;volatile
 14008  05B2                     l5837:	
 14009                           
 14010                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 14011  05B2  30C7               	movlw	199
 14012  05B3  00CE               	movwf	78	;volatile
 14013  05B4                     l5839:	
 14014                           
 14015                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 14016  05B4  30EF               	movlw	239
 14017  05B5  00C3               	movwf	67	;volatile
 14018  05B6                     l5841:	
 14019                           
 14020                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14021  05B6  3007               	movlw	7
 14022  05B7  00E4               	movwf	100	;volatile
 14023  05B8                     l5843:	
 14024                           
 14025                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 14026  05B8  30FF               	movlw	255
 14027  05B9  00B8               	movwf	56	;volatile
 14028                           
 14029                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14030  05BA  01DA               	clrf	90	;volatile
 14031                           
 14032                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14033  05BB  01E5               	clrf	101	;volatile
 14034                           
 14035                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14036  05BC  01C4               	clrf	68	;volatile
 14037                           
 14038                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14039  05BD  01B9               	clrf	57	;volatile
 14040                           
 14041                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14042  05BE  01CF               	clrf	79	;volatile
 14043                           
 14044                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 14045  05BF  01E6               	clrf	102	;volatile
 14046                           
 14047                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 14048  05C0  01BA               	clrf	58	;volatile
 14049                           
 14050                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 14051  05C1  01C5               	clrf	69	;volatile
 14052                           
 14053                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 14054  05C2  01D0               	clrf	80	;volatile
 14055                           
 14056                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 14057  05C3  01DB               	clrf	91	;volatile
 14058  05C4                     l5845:	
 14059                           
 14060                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 14061  05C4  30FF               	movlw	255
 14062  05C5  00BB               	movwf	59	;volatile
 14063  05C6                     l5847:	
 14064                           
 14065                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 14066  05C6  30FF               	movlw	255
 14067  05C7  00C6               	movwf	70	;volatile
 14068  05C8                     l5849:	
 14069                           
 14070                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 14071  05C8  30FF               	movlw	255
 14072  05C9  00D1               	movwf	81	;volatile
 14073  05CA                     l5851:	
 14074                           
 14075                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 14076  05CA  30FF               	movlw	255
 14077  05CB  00DC               	movwf	92	;volatile
 14078  05CC                     l5853:	
 14079                           
 14080                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 14081  05CC  3007               	movlw	7
 14082  05CD  00E7               	movwf	103	;volatile
 14083  05CE                     l5855:	
 14084                           
 14085                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 14086  05CE  30FF               	movlw	255
 14087  05CF  00BC               	movwf	60	;volatile
 14088  05D0                     l5857:	
 14089                           
 14090                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 14091  05D0  30FF               	movlw	255
 14092  05D1  00C7               	movwf	71	;volatile
 14093  05D2                     l5859:	
 14094                           
 14095                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 14096  05D2  30FF               	movlw	255
 14097  05D3  00D2               	movwf	82	;volatile
 14098  05D4                     l5861:	
 14099                           
 14100                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 14101  05D4  30FF               	movlw	255
 14102  05D5  00DD               	movwf	93	;volatile
 14103  05D6                     l5863:	
 14104                           
 14105                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 14106  05D6  3007               	movlw	7
 14107  05D7  00E8               	movwf	104	;volatile
 14108  05D8                     l5865:	
 14109                           
 14110                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 14111  05D8  300C               	movlw	12
 14112  05D9  003D               	movlb	29	; select bank29
 14113  05DA  0090               	movwf	16	;volatile
 14114  05DB                     l5867:	
 14115                           
 14116                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 14117  05DB  3013               	movlw	19
 14118  05DC  00C5               	movwf	69	;volatile
 14119  05DD                     l5869:	
 14120                           
 14121                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 14122  05DD  3014               	movlw	20
 14123  05DE  003E               	movlb	30	; select bank30
 14124  05DF  00A3               	movwf	35	;volatile
 14125  05E0                     l5871:	
 14126                           
 14127                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 14128  05E0  3015               	movlw	21
 14129  05E1  00A4               	movwf	36	;volatile
 14130  05E2                     l5873:	
 14131                           
 14132                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 14133  05E2  300E               	movlw	14
 14134  05E3  0096               	movwf	22	;volatile
 14135  05E4                     l5875:	
 14136                           
 14137                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 14138  05E4  3014               	movlw	20
 14139  05E5  003D               	movlb	29	; select bank29
 14140  05E6  00C6               	movwf	70	;volatile
 14141  05E7                     l530:	
 14142  05E7  0008               	return
 14143  05E8                     __end_of_PIN_MANAGER_Initialize:	
 14144                           
 14145                           	psect	text33
 14146  0D48                     __ptext33:	
 14147 ;; *************** function _OSCILLATOR_Initialize *****************
 14148 ;; Defined at:
 14149 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;		None
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;		None
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      void 
 14156 ;; Registers used:
 14157 ;;		wreg, status,2
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;Total ram usage:        0 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:    6
 14170 ;; This function calls:
 14171 ;;		Nothing
 14172 ;; This function is called by:
 14173 ;;		_SYSTEM_Initialize
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           
 14178                           ;psect for function _OSCILLATOR_Initialize
 14179  0D48                     _OSCILLATOR_Initialize:	
 14180  0D48                     l5877:	
 14181                           ;incstack = 0
 14182                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14183                           
 14184                           
 14185                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 14186  0D48  3062               	movlw	98
 14187  0D49  0031               	movlb	17	; select bank17
 14188  0D4A  008D               	movwf	13	;volatile
 14189  0D4B                     l5879:	
 14190                           
 14191                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 14192  0D4B  018F               	clrf	15	;volatile
 14193  0D4C                     l5881:	
 14194                           
 14195                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 14196  0D4C  0191               	clrf	17	;volatile
 14197                           
 14198                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 14199  0D4D  3002               	movlw	2
 14200  0D4E  0093               	movwf	19	;volatile
 14201  0D4F                     l5883:	
 14202                           
 14203                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 14204  0D4F  0192               	clrf	18	;volatile
 14205  0D50                     l442:	
 14206  0D50  0008               	return
 14207  0D51                     __end_of_OSCILLATOR_Initialize:	
 14208                           
 14209                           	psect	text34
 14210  0DB5                     __ptext34:	
 14211 ;; *************** function _EXT_INT_Initialize *****************
 14212 ;; Defined at:
 14213 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;		None
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;		None
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      void 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0, pclath, cstack
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;Total ram usage:        0 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    7
 14234 ;; This function calls:
 14235 ;;		_INT_SetInterruptHandler
 14236 ;; This function is called by:
 14237 ;;		_SYSTEM_Initialize
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           
 14242                           ;psect for function _EXT_INT_Initialize
 14243  0DB5                     _EXT_INT_Initialize:	
 14244  0DB5                     l5815:	
 14245                           ;incstack = 0
 14246                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14247                           
 14248                           
 14249                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 14250  0DB5  002E               	movlb	14	; select bank14
 14251  0DB6  100C               	bcf	12,0	;volatile
 14252                           
 14253                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 14254  0DB7  140B               	bsf	11,0	;volatile
 14255  0DB8                     l5817:	
 14256                           
 14257                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 14258  0DB8  3079               	movlw	low _INT_DefaultInterruptHandler
 14259  0DB9  0020               	movlb	0	; select bank0
 14260  0DBA  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler
 14261  0DBB  300C               	movlw	high _INT_DefaultInterruptHandler
 14262  0DBC  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 14263  0DBD  318C  24E1  318D   	fcall	_INT_SetInterruptHandler
 14264  0DC0                     l5819:	
 14265                           
 14266                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 14267  0DC0  002E               	movlb	14	; select bank14
 14268  0DC1  1416               	bsf	22,0	;volatile
 14269  0DC2                     l347:	
 14270  0DC2  0008               	return
 14271  0DC3                     __end_of_EXT_INT_Initialize:	
 14272                           
 14273                           	psect	text35
 14274  0CE1                     __ptext35:	
 14275 ;; *************** function _INT_SetInterruptHandler *****************
 14276 ;; Defined at:
 14277 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 14278 ;; Parameters:    Size  Location     Type
 14279 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14280 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      void 
 14285 ;; Registers used:
 14286 ;;		wreg
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;Total ram usage:        2 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:    6
 14299 ;; This function calls:
 14300 ;;		Nothing
 14301 ;; This function is called by:
 14302 ;;		_EXT_INT_Initialize
 14303 ;;		_main
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           
 14308                           ;psect for function _INT_SetInterruptHandler
 14309  0CE1                     _INT_SetInterruptHandler:	
 14310  0CE1                     l5727:	
 14311                           ;incstack = 0
 14312                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 14313                           
 14314                           
 14315                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 14316  0CE1  0020               	movlb	0	; select bank0
 14317  0CE2  0848               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 14318  0CE3  00E9               	movwf	_INT_InterruptHandler+1
 14319  0CE4  0847               	movf	INT_SetInterruptHandler@InterruptHandler,w
 14320  0CE5  00E8               	movwf	_INT_InterruptHandler
 14321  0CE6                     l341:	
 14322  0CE6  0008               	return
 14323  0CE7                     __end_of_INT_SetInterruptHandler:	
 14324                           
 14325                           	psect	text36
 14326  0E90                     __ptext36:	
 14327 ;; *************** function _ADCC_Initialize *****************
 14328 ;; Defined at:
 14329 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;		None
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;		None
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  1    wreg      void 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;Total ram usage:        0 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:    6
 14350 ;; This function calls:
 14351 ;;		Nothing
 14352 ;; This function is called by:
 14353 ;;		_SYSTEM_Initialize
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           
 14358                           ;psect for function _ADCC_Initialize
 14359  0E90                     _ADCC_Initialize:	
 14360  0E90                     l5889:	
 14361                           ;incstack = 0
 14362                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14363                           
 14364                           
 14365                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 14366  0E90  0022               	movlb	2	; select bank2
 14367  0E91  018E               	clrf	14	;volatile
 14368                           
 14369                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 14370  0E92  018F               	clrf	15	;volatile
 14371                           
 14372                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 14373  0E93  0190               	clrf	16	;volatile
 14374                           
 14375                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 14376  0E94  0191               	clrf	17	;volatile
 14377                           
 14378                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 14379  0E95  0192               	clrf	18	;volatile
 14380                           
 14381                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 14382  0E96  0193               	clrf	19	;volatile
 14383                           
 14384                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 14385  0E97  018D               	clrf	13	;volatile
 14386                           
 14387                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 14388  0E98  0021               	movlb	1	; select bank1
 14389  0E99  019E               	clrf	30	;volatile
 14390                           
 14391                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 14392  0E9A  019B               	clrf	27	;volatile
 14393                           
 14394                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 14395  0E9B  0194               	clrf	20	;volatile
 14396                           
 14397                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 14398  0E9C  0195               	clrf	21	;volatile
 14399                           
 14400                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 14401  0E9D  0196               	clrf	22	;volatile
 14402                           
 14403                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 14404  0E9E  0197               	clrf	23	;volatile
 14405                           
 14406                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 14407  0E9F  019A               	clrf	26	;volatile
 14408                           
 14409                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 14410  0EA0  0199               	clrf	25	;volatile
 14411                           
 14412                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 14413  0EA1  0198               	clrf	24	;volatile
 14414  0EA2                     l5891:	
 14415                           
 14416                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 14417  0EA2  3084               	movlw	132
 14418  0EA3  0093               	movwf	19	;volatile
 14419  0EA4                     l5893:	
 14420                           
 14421                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 14422  0EA4  019D               	clrf	29	;volatile
 14423  0EA5                     l757:	
 14424  0EA5  0008               	return
 14425  0EA6                     __end_of_ADCC_Initialize:	
 14426                           
 14427                           	psect	text37
 14428  0F4F                     __ptext37:	
 14429 ;; *************** function _LED_bin *****************
 14430 ;; Defined at:
 14431 ;;		line 431 in file "main.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  value           2    3[BANK0 ] unsigned int 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;		None
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      void 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;Total ram usage:        5 bytes
 14450 ;; Hardware stack levels used:    1
 14451 ;; Hardware stack levels required when called:    6
 14452 ;; This function calls:
 14453 ;;		Nothing
 14454 ;; This function is called by:
 14455 ;;		_main
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           
 14460                           ;psect for function _LED_bin
 14461  0F4F                     _LED_bin:	
 14462  0F4F                     l6097:	
 14463                           ;incstack = 0
 14464                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 14465                           
 14466                           
 14467                           ;main.c: 433:     LATAbits.LATA4 = (value & 1);
 14468  0F4F  0020               	movlb	0	; select bank0
 14469  0F50  0847               	movf	LED_bin@value,w
 14470  0F51  3901               	andlw	1
 14471  0F52  00C9               	movwf	??_LED_bin
 14472  0F53  0EC9               	swapf	??_LED_bin,f
 14473  0F54  0816               	movf	22,w	;volatile
 14474  0F55  0649               	xorwf	??_LED_bin,w
 14475  0F56  39EF               	andlw	-17
 14476  0F57  0649               	xorwf	??_LED_bin,w
 14477  0F58  0096               	movwf	22	;volatile
 14478                           
 14479                           ;main.c: 434:     LATAbits.LATA5 = (value >>1);
 14480  0F59  0848               	movf	LED_bin@value+1,w
 14481  0F5A  00CA               	movwf	??_LED_bin+1
 14482  0F5B  0847               	movf	LED_bin@value,w
 14483  0F5C  00C9               	movwf	??_LED_bin
 14484  0F5D  36CA               	lsrf	??_LED_bin+1,f
 14485  0F5E  0CC9               	rrf	??_LED_bin,f
 14486  0F5F  0849               	movf	??_LED_bin,w
 14487  0F60  00CB               	movwf	??_LED_bin+2
 14488  0F61  0ECB               	swapf	??_LED_bin+2,f
 14489  0F62  0DCB               	rlf	??_LED_bin+2,f
 14490  0F63  0816               	movf	22,w	;volatile
 14491  0F64  064B               	xorwf	??_LED_bin+2,w
 14492  0F65  39DF               	andlw	-33
 14493  0F66  064B               	xorwf	??_LED_bin+2,w
 14494  0F67  0096               	movwf	22	;volatile
 14495  0F68                     l1301:	
 14496  0F68  0008               	return
 14497  0F69                     __end_of_LED_bin:	
 14498                           
 14499                           	psect	text38
 14500  0F35                     __ptext38:	
 14501 ;; *************** function _ADC_read *****************
 14502 ;; Defined at:
 14503 ;;		line 444 in file "main.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;		None
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  2    5[BANK0 ] unsigned int 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2, status,0, pclath, cstack
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;Total ram usage:        2 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:    7
 14524 ;; This function calls:
 14525 ;;		_ADCC_GetConversionResult
 14526 ;;		_ADCC_IsConversionDone
 14527 ;;		_ADCC_StartConversion
 14528 ;; This function is called by:
 14529 ;;		_main
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           
 14534                           ;psect for function _ADC_read
 14535  0F35                     _ADC_read:	
 14536  0F35                     l6087:	
 14537                           ;incstack = 0
 14538                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 14539                           
 14540                           
 14541                           ;main.c: 446:     ADCC_StartConversion(channel_ANA0);
 14542  0F35  3000               	movlw	0
 14543  0F36  318D  2526  318F   	fcall	_ADCC_StartConversion
 14544                           
 14545                           ;main.c: 447:     while(!ADCC_IsConversionDone()){
 14546  0F39  2F3E               	goto	l6091
 14547  0F3A                     l6089:	
 14548                           
 14549                           ;main.c: 448:         _delay((unsigned long)((1)*(1000000/4000.0)));
 14550  0F3A  3053               	movlw	83
 14551  0F3B                     u3487:	
 14552  0F3B  0B89               	decfsz	9,f
 14553  0F3C  2F3B               	goto	u3487
 14554  0F3D  0000               	nop
 14555  0F3E                     l6091:	
 14556                           
 14557                           ;main.c: 447:     while(!ADCC_IsConversionDone()){
 14558  0F3E  318D  2500  318F   	fcall	_ADCC_IsConversionDone
 14559  0F41  3A00               	xorlw	0
 14560  0F42  1903               	skipnz
 14561  0F43  2F45               	goto	u3061
 14562  0F44  2F46               	goto	u3060
 14563  0F45                     u3061:	
 14564  0F45  2F3A               	goto	l6089
 14565  0F46                     u3060:	
 14566  0F46                     l6093:	
 14567                           
 14568                           ;main.c: 451:     return ADCC_GetConversionResult();
 14569  0F46  318D  253F  318F   	fcall	_ADCC_GetConversionResult
 14570  0F49  0020               	movlb	0	; select bank0
 14571  0F4A  0848               	movf	?_ADCC_GetConversionResult+1,w
 14572  0F4B  00CA               	movwf	?_ADC_read+1
 14573  0F4C  0847               	movf	?_ADCC_GetConversionResult,w
 14574  0F4D  00C9               	movwf	?_ADC_read
 14575  0F4E                     l1307:	
 14576  0F4E  0008               	return
 14577  0F4F                     __end_of_ADC_read:	
 14578                           
 14579                           	psect	text39
 14580  0D26                     __ptext39:	
 14581 ;; *************** function _ADCC_StartConversion *****************
 14582 ;; Defined at:
 14583 ;;		line 106 in file "mcc_generated_files/adcc.c"
 14584 ;; Parameters:    Size  Location     Type
 14585 ;;  channel         1    wreg     enum E12246
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;  channel         1    3[BANK0 ] enum E12246
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  1    wreg      void 
 14590 ;; Registers used:
 14591 ;;		wreg
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/0
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;Total ram usage:        1 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    6
 14604 ;; This function calls:
 14605 ;;		Nothing
 14606 ;; This function is called by:
 14607 ;;		_ADC_read
 14608 ;; This function uses a non-reentrant model
 14609 ;;
 14610                           
 14611                           
 14612                           ;psect for function _ADCC_StartConversion
 14613  0D26                     _ADCC_StartConversion:	
 14614                           
 14615                           ;incstack = 0
 14616                           ; Regs used in _ADCC_StartConversion: [wreg]
 14617                           ;ADCC_StartConversion@channel stored from wreg
 14618  0D26  0020               	movlb	0	; select bank0
 14619  0D27  00C7               	movwf	ADCC_StartConversion@channel
 14620  0D28                     l5939:	
 14621                           
 14622                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 14623  0D28  0847               	movf	ADCC_StartConversion@channel,w
 14624  0D29  0021               	movlb	1	; select bank1
 14625  0D2A  009E               	movwf	30	;volatile
 14626  0D2B                     l5941:	
 14627                           
 14628                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 14629  0D2B  1793               	bsf	19,7	;volatile
 14630  0D2C                     l5943:	
 14631                           
 14632                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 14633  0D2C  1413               	bsf	19,0	;volatile
 14634  0D2D                     l760:	
 14635  0D2D  0008               	return
 14636  0D2E                     __end_of_ADCC_StartConversion:	
 14637                           
 14638                           	psect	text40
 14639  0D00                     __ptext40:	
 14640 ;; *************** function _ADCC_IsConversionDone *****************
 14641 ;; Defined at:
 14642 ;;		line 118 in file "mcc_generated_files/adcc.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;		None
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;		None
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  1    wreg      _Bool 
 14649 ;; Registers used:
 14650 ;;		wreg, status,0
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;Total ram usage:        0 bytes
 14661 ;; Hardware stack levels used:    1
 14662 ;; Hardware stack levels required when called:    6
 14663 ;; This function calls:
 14664 ;;		Nothing
 14665 ;; This function is called by:
 14666 ;;		_ADC_read
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           
 14671                           ;psect for function _ADCC_IsConversionDone
 14672  0D00                     _ADCC_IsConversionDone:	
 14673  0D00                     l5945:	
 14674                           ;incstack = 0
 14675                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 14676                           
 14677                           
 14678                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 14679  0D00  1003               	clrc
 14680  0D01  0021               	movlb	1	; select bank1
 14681  0D02  1C13               	btfss	19,0	;volatile
 14682  0D03  1403               	setc
 14683  0D04  3000               	movlw	0
 14684  0D05  3D09               	addwfc	9,w
 14685  0D06                     l763:	
 14686  0D06  0008               	return
 14687  0D07                     __end_of_ADCC_IsConversionDone:	
 14688                           
 14689                           	psect	text41
 14690  0D3F                     __ptext41:	
 14691 ;; *************** function _ADCC_GetConversionResult *****************
 14692 ;; Defined at:
 14693 ;;		line 124 in file "mcc_generated_files/adcc.c"
 14694 ;; Parameters:    Size  Location     Type
 14695 ;;		None
 14696 ;; Auto vars:     Size  Location     Type
 14697 ;;		None
 14698 ;; Return value:  Size  Location     Type
 14699 ;;                  2    3[BANK0 ] unsigned short 
 14700 ;; Registers used:
 14701 ;;		wreg
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14711 ;;Total ram usage:        2 bytes
 14712 ;; Hardware stack levels used:    1
 14713 ;; Hardware stack levels required when called:    6
 14714 ;; This function calls:
 14715 ;;		Nothing
 14716 ;; This function is called by:
 14717 ;;		_ADC_read
 14718 ;; This function uses a non-reentrant model
 14719 ;;
 14720                           
 14721                           
 14722                           ;psect for function _ADCC_GetConversionResult
 14723  0D3F                     _ADCC_GetConversionResult:	
 14724  0D3F                     l5949:	
 14725                           ;incstack = 0
 14726                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 14727                           
 14728                           
 14729                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14730  0D3F  0021               	movlb	1	; select bank1
 14731  0D40  080D               	movf	13,w	;volatile
 14732  0D41  0020               	movlb	0	; select bank0
 14733  0D42  00C8               	movwf	?_ADCC_GetConversionResult+1
 14734  0D43  0021               	movlb	1	; select bank1
 14735  0D44  080C               	movf	12,w	;volatile
 14736  0D45  0020               	movlb	0	; select bank0
 14737  0D46  00C7               	movwf	?_ADCC_GetConversionResult
 14738  0D47                     l766:	
 14739  0D47  0008               	return
 14740  0D48                     __end_of_ADCC_GetConversionResult:	
 14741                           
 14742                           	psect	intentry
 14743  0004                     __pintentry:	
 14744 ;; *************** function _INTERRUPT_InterruptManager *****************
 14745 ;; Defined at:
 14746 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14747 ;; Parameters:    Size  Location     Type
 14748 ;;		None
 14749 ;; Auto vars:     Size  Location     Type
 14750 ;;		None
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  1    wreg      void 
 14753 ;; Registers used:
 14754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;Total ram usage:        0 bytes
 14765 ;; Hardware stack levels used:    1
 14766 ;; Hardware stack levels required when called:    5
 14767 ;; This function calls:
 14768 ;;		Absolute function
 14769 ;;		_INT_ISR
 14770 ;;		_TMR0_ISR
 14771 ;;		_TMR1_ISR
 14772 ;;		_TMR2_ISR
 14773 ;;		_i2c_ISR
 14774 ;;		_i2c_busCollisionISR
 14775 ;; This function is called by:
 14776 ;;		Interrupt level 1
 14777 ;; This function uses a non-reentrant model
 14778 ;;
 14779                           
 14780  0004                     _INTERRUPT_InterruptManager:	
 14781                           
 14782                           ;incstack = 0
 14783  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14784                           
 14785                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14786  0005  3180               	pagesel	$
 14787  0006                     i1l5329:	
 14788                           
 14789                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 14790  0006  002E               	movlb	14	; select bank14
 14791  0007  1C16               	btfss	22,0	;volatile
 14792  0008  280A               	goto	u254_21
 14793  0009  280B               	goto	u254_20
 14794  000A                     u254_21:	
 14795  000A  2813               	goto	i1l378
 14796  000B                     u254_20:	
 14797  000B                     i1l5331:	
 14798  000B  1C0C               	btfss	12,0	;volatile
 14799  000C  280E               	goto	u255_21
 14800  000D  280F               	goto	u255_20
 14801  000E                     u255_21:	
 14802  000E  2813               	goto	i1l378
 14803  000F                     u255_20:	
 14804  000F                     i1l5333:	
 14805                           
 14806                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 14807  000F  318C  24DB  3180   	fcall	_INT_ISR
 14808                           
 14809                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14810  0012  2859               	goto	i1l392
 14811  0013                     i1l378:	
 14812                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 14813                           
 14814  0013  1E96               	btfss	22,5	;volatile
 14815  0014  2816               	goto	u256_21
 14816  0015  2817               	goto	u256_20
 14817  0016                     u256_21:	
 14818  0016  281F               	goto	i1l380
 14819  0017                     u256_20:	
 14820  0017                     i1l5335:	
 14821  0017  1E8C               	btfss	12,5	;volatile
 14822  0018  281A               	goto	u257_21
 14823  0019  281B               	goto	u257_20
 14824  001A                     u257_21:	
 14825  001A  281F               	goto	i1l380
 14826  001B                     u257_20:	
 14827  001B                     i1l5337:	
 14828                           
 14829                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 14830  001B  318D  25C3  3180   	fcall	_TMR0_ISR
 14831                           
 14832                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 14833  001E  2859               	goto	i1l392
 14834  001F                     i1l380:	
 14835                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 14836                           
 14837  001F  1F0B               	btfss	11,6	;volatile
 14838  0020  2822               	goto	u258_21
 14839  0021  2823               	goto	u258_20
 14840  0022                     u258_21:	
 14841  0022  2859               	goto	i1l386
 14842  0023                     u258_20:	
 14843  0023                     i1l5339:	
 14844                           
 14845                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 14846  0023  1C1A               	btfss	26,0	;volatile
 14847  0024  2826               	goto	u259_21
 14848  0025  2827               	goto	u259_20
 14849  0026                     u259_21:	
 14850  0026  282F               	goto	i1l383
 14851  0027                     u259_20:	
 14852  0027                     i1l5341:	
 14853  0027  1C10               	btfss	16,0	;volatile
 14854  0028  282A               	goto	u260_21
 14855  0029  282B               	goto	u260_20
 14856  002A                     u260_21:	
 14857  002A  282F               	goto	i1l383
 14858  002B                     u260_20:	
 14859  002B                     i1l5343:	
 14860                           
 14861                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 14862  002B  318E  26BC  3180   	fcall	_TMR1_ISR
 14863                           
 14864                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14865  002E  2859               	goto	i1l392
 14866  002F                     i1l383:	
 14867                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 14868                           
 14869  002F  1C99               	btfss	25,1	;volatile
 14870  0030  2832               	goto	u261_21
 14871  0031  2833               	goto	u261_20
 14872  0032                     u261_21:	
 14873  0032  283E               	goto	i1l385
 14874  0033                     u261_20:	
 14875  0033                     i1l5345:	
 14876  0033  1C8F               	btfss	15,1	;volatile
 14877  0034  2836               	goto	u262_21
 14878  0035  2837               	goto	u262_20
 14879  0036                     u262_21:	
 14880  0036  283E               	goto	i1l385
 14881  0037                     u262_20:	
 14882  0037                     i1l5347:	
 14883                           
 14884                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_busCollisionISR();
 14885  0037  0020               	movlb	0	; select bank0
 14886  0038  0835               	movf	_i2c1_driver_busCollisionISR+1,w
 14887  0039  008A               	movwf	10
 14888  003A  0834               	movf	_i2c1_driver_busCollisionISR,w
 14889  003B  000A               	callw
 14890  003C  3180               	pagesel	$
 14891                           
 14892                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14893  003D  2859               	goto	i1l392
 14894  003E                     i1l385:	
 14895                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 14896                           
 14897  003E  1C19               	btfss	25,0	;volatile
 14898  003F  2841               	goto	u263_21
 14899  0040  2842               	goto	u263_20
 14900  0041                     u263_21:	
 14901  0041  284D               	goto	i1l387
 14902  0042                     u263_20:	
 14903  0042                     i1l5349:	
 14904  0042  1C0F               	btfss	15,0	;volatile
 14905  0043  2845               	goto	u264_21
 14906  0044  2846               	goto	u264_20
 14907  0045                     u264_21:	
 14908  0045  284D               	goto	i1l387
 14909  0046                     u264_20:	
 14910  0046                     i1l5351:	
 14911                           
 14912                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_i2cISR();
 14913  0046  0020               	movlb	0	; select bank0
 14914  0047  0833               	movf	_i2c1_driver_i2cISR+1,w
 14915  0048  008A               	movwf	10
 14916  0049  0832               	movf	_i2c1_driver_i2cISR,w
 14917  004A  000A               	callw
 14918  004B  3180               	pagesel	$
 14919                           
 14920                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14921  004C  2859               	goto	i1l392
 14922  004D                     i1l387:	
 14923                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 14924                           
 14925  004D  1C9A               	btfss	26,1	;volatile
 14926  004E  2850               	goto	u265_21
 14927  004F  2851               	goto	u265_20
 14928  0050                     u265_21:	
 14929  0050  2859               	goto	i1l386
 14930  0051                     u265_20:	
 14931  0051                     i1l5353:	
 14932  0051  1C90               	btfss	16,1	;volatile
 14933  0052  2854               	goto	u266_21
 14934  0053  2855               	goto	u266_20
 14935  0054                     u266_21:	
 14936  0054  2859               	goto	i1l386
 14937  0055                     u266_20:	
 14938  0055                     i1l5355:	
 14939                           
 14940                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 14941  0055  318D  25D2  3180   	fcall	_TMR2_ISR
 14942                           
 14943                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 14944  0058  2859               	goto	i1l392
 14945  0059                     i1l386:	
 14946  0059                     i1l392:	
 14947  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14948  005A  0009               	retfie
 14949  005B                     __end_of_INTERRUPT_InterruptManager:	
 14950                           
 14951                           	psect	text43
 14952  0CA5                     __ptext43:	
 14953 ;; *************** function _i2c_busCollisionISR *****************
 14954 ;; Defined at:
 14955 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;		None
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;		None
 14960 ;; Return value:  Size  Location     Type
 14961 ;;                  1    wreg      void 
 14962 ;; Registers used:
 14963 ;;		status,2, status,0, pclath, cstack
 14964 ;; Tracked objects:
 14965 ;;		On entry : 0/0
 14966 ;;		On exit  : 0/0
 14967 ;;		Unchanged: 0/0
 14968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14973 ;;Total ram usage:        0 bytes
 14974 ;; Hardware stack levels used:    1
 14975 ;; Hardware stack levels required when called:    1
 14976 ;; This function calls:
 14977 ;;		_i2c1_driver_clearBusCollision
 14978 ;; This function is called by:
 14979 ;;		_i2c_open
 14980 ;;		_INTERRUPT_InterruptManager
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           
 14985                           ;psect for function _i2c_busCollisionISR
 14986  0CA5                     _i2c_busCollisionISR:	
 14987  0CA5                     i1l5015:	
 14988                           ;incstack = 0
 14989                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 14990                           
 14991                           
 14992                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 14993  0CA5  318C  2497  318C   	fcall	_i2c1_driver_clearBusCollision
 14994  0CA8                     i1l213:	
 14995  0CA8  0008               	return
 14996  0CA9                     __end_of_i2c_busCollisionISR:	
 14997                           
 14998                           	psect	text44
 14999  0C97                     __ptext44:	
 15000 ;; *************** function _i2c1_driver_clearBusCollision *****************
 15001 ;; Defined at:
 15002 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;		None
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;		None
 15007 ;; Return value:  Size  Location     Type
 15008 ;;                  1    wreg      void 
 15009 ;; Registers used:
 15010 ;;		None
 15011 ;; Tracked objects:
 15012 ;;		On entry : 0/0
 15013 ;;		On exit  : 0/0
 15014 ;;		Unchanged: 0/0
 15015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;Total ram usage:        0 bytes
 15021 ;; Hardware stack levels used:    1
 15022 ;; This function calls:
 15023 ;;		Nothing
 15024 ;; This function is called by:
 15025 ;;		_i2c_busCollisionISR
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           
 15030                           ;psect for function _i2c1_driver_clearBusCollision
 15031  0C97                     _i2c1_driver_clearBusCollision:	
 15032  0C97                     i1l4647:	
 15033                           ;incstack = 0
 15034                           ; Regs used in _i2c1_driver_clearBusCollision: []
 15035                           
 15036                           
 15037                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 15038  0C97  002E               	movlb	14	; select bank14
 15039  0C98  108F               	bcf	15,1	;volatile
 15040  0C99                     i1l672:	
 15041  0C99  0008               	return
 15042  0C9A                     __end_of_i2c1_driver_clearBusCollision:	
 15043                           
 15044                           	psect	text45
 15045  0743                     __ptext45:	
 15046 ;; *************** function _i2c_ISR *****************
 15047 ;; Defined at:
 15048 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;		None
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;		None
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  1    wreg      void 
 15055 ;; Registers used:
 15056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15064 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;Total ram usage:        3 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; Hardware stack levels required when called:    4
 15069 ;; This function calls:
 15070 ;;		_do_I2C_DO_ACK
 15071 ;;		_do_I2C_DO_ADDRESS_NACK
 15072 ;;		_do_I2C_DO_NACK_RESTART
 15073 ;;		_do_I2C_DO_NACK_STOP
 15074 ;;		_do_I2C_IDLE
 15075 ;;		_do_I2C_RCEN
 15076 ;;		_do_I2C_RESET
 15077 ;;		_do_I2C_RX
 15078 ;;		_do_I2C_SEND_ADR_READ
 15079 ;;		_do_I2C_SEND_ADR_WRITE
 15080 ;;		_do_I2C_SEND_RESTART
 15081 ;;		_do_I2C_SEND_RESTART_READ
 15082 ;;		_do_I2C_SEND_RESTART_WRITE
 15083 ;;		_do_I2C_SEND_STOP
 15084 ;;		_do_I2C_TX
 15085 ;;		_do_I2C_TX_EMPTY
 15086 ;;		_i2c1_driver_isNACK
 15087 ;;		_mssp1_clearIRQ
 15088 ;; This function is called by:
 15089 ;;		_i2c_open
 15090 ;;		_i2c_poller
 15091 ;;		_INTERRUPT_InterruptManager
 15092 ;; This function uses a non-reentrant model
 15093 ;;
 15094                           
 15095                           
 15096                           ;psect for function _i2c_ISR
 15097  0743                     _i2c_ISR:	
 15098  0743                     i1l5005:	
 15099                           ;incstack = 0
 15100                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15101                           
 15102                           
 15103                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 15104  0743  318C  2494  3187   	fcall	_mssp1_clearIRQ
 15105  0746                     i1l5007:	
 15106                           
 15107                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 15108  0746  0021               	movlb	1	; select bank1
 15109  0747  1DA0               	btfss	_i2c_status^(0+128),3
 15110  0748  2F4A               	goto	u214_21
 15111  0749  2F4B               	goto	u214_20
 15112  074A                     u214_21:	
 15113  074A  2F58               	goto	i1l5013
 15114  074B                     u214_20:	
 15115  074B                     i1l5009:	
 15116  074B  318D  250E  3187   	fcall	_i2c1_driver_isNACK
 15117  074E  1C03               	btfss	3,0
 15118  074F  2F51               	goto	u215_21
 15119  0750  2F52               	goto	u215_20
 15120  0751                     u215_21:	
 15121  0751  2F58               	goto	i1l5013
 15122  0752                     u215_20:	
 15123  0752                     i1l5011:	
 15124                           
 15125                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 15126  0752  300F               	movlw	15
 15127  0753  0020               	movlb	0	; select bank0
 15128  0754  00C4               	movwf	??_i2c_ISR
 15129  0755  0844               	movf	??_i2c_ISR,w
 15130  0756  0021               	movlb	1	; select bank1
 15131  0757  00A9               	movwf	(_i2c_status^(0+128)+9)
 15132  0758                     i1l5013:	
 15133                           
 15134                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 15135  0758  0021               	movlb	1	; select bank1
 15136  0759  0829               	movf	(_i2c_status^(0+128)+9),w
 15137  075A  0020               	movlb	0	; select bank0
 15138  075B  00C4               	movwf	??_i2c_ISR
 15139  075C  01C5               	clrf	??_i2c_ISR+1
 15140  075D  35C4               	lslf	??_i2c_ISR,f
 15141  075E  0DC5               	rlf	??_i2c_ISR+1,f
 15142  075F  30E6               	movlw	low (_fsmStateTable| (0+32768))
 15143  0760  0744               	addwf	??_i2c_ISR,w
 15144  0761  0084               	movwf	4
 15145  0762  3087               	movlw	high (_fsmStateTable| (0+32768))
 15146  0763  3D45               	addwfc	??_i2c_ISR+1,w
 15147  0764  0085               	movwf	5
 15148  0765  3F01               	moviw [1]fsr0
 15149  0766  008A               	movwf	10
 15150  0767  3F00               	moviw [0]fsr0
 15151  0768  000A               	callw
 15152  0769  3187               	pagesel	$
 15153  076A  0020               	movlb	0	; select bank0
 15154  076B  00C6               	movwf	??_i2c_ISR+2
 15155  076C  0846               	movf	??_i2c_ISR+2,w
 15156  076D  0021               	movlb	1	; select bank1
 15157  076E  00A9               	movwf	(_i2c_status^(0+128)+9)
 15158  076F                     i1l210:	
 15159  076F  0008               	return
 15160  0770                     __end_of_i2c_ISR:	
 15161                           
 15162                           	psect	text46
 15163  0C94                     __ptext46:	
 15164 ;; *************** function _mssp1_clearIRQ *****************
 15165 ;; Defined at:
 15166 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;		None
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;		None
 15171 ;; Return value:  Size  Location     Type
 15172 ;;                  1    wreg      void 
 15173 ;; Registers used:
 15174 ;;		None
 15175 ;; Tracked objects:
 15176 ;;		On entry : 0/0
 15177 ;;		On exit  : 0/0
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;Total ram usage:        0 bytes
 15185 ;; Hardware stack levels used:    1
 15186 ;; This function calls:
 15187 ;;		Nothing
 15188 ;; This function is called by:
 15189 ;;		_i2c_ISR
 15190 ;;		_i2c_open
 15191 ;;		_i2c_close
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           
 15196                           ;psect for function _mssp1_clearIRQ
 15197  0C94                     _mssp1_clearIRQ:	
 15198  0C94                     i1l4463:	
 15199                           ;incstack = 0
 15200                           ; Regs used in _mssp1_clearIRQ: []
 15201                           
 15202                           
 15203                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 15204  0C94  002E               	movlb	14	; select bank14
 15205  0C95  100F               	bcf	15,0	;volatile
 15206  0C96                     i1l576:	
 15207  0C96  0008               	return
 15208  0C97                     __end_of_mssp1_clearIRQ:	
 15209                           
 15210                           	psect	text47
 15211  0555                     __ptext47:	
 15212 ;; *************** function _do_I2C_RX *****************
 15213 ;; Defined at:
 15214 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1    wreg      enum E12722
 15221 ;; Registers used:
 15222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;Total ram usage:        3 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:    3
 15235 ;; This function calls:
 15236 ;;		Absolute function
 15237 ;;		_do_I2C_DO_NACK_RESTART
 15238 ;;		_do_I2C_DO_NACK_STOP
 15239 ;;		_i2c1_driver_getRXData
 15240 ;;		_i2c1_driver_sendACK
 15241 ;;		_i2c_restartWrite
 15242 ;;		_rd1RegCompleteHandler
 15243 ;;		_rd2RegCompleteHandler
 15244 ;;		_rdBlkRegCompleteHandler
 15245 ;;		_returnReset
 15246 ;;		_returnStop
 15247 ;;		_wr1RegCompleteHandler
 15248 ;;		_wr2RegCompleteHandler
 15249 ;; This function is called by:
 15250 ;;		_i2c_ISR
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           
 15255                           ;psect for function _do_I2C_RX
 15256  0555                     _do_I2C_RX:	
 15257  0555                     i1l4589:	
 15258                           ;incstack = 0
 15259                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15260                           
 15261                           
 15262                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 15263  0555  318C  248E  3185   	fcall	_i2c1_driver_getRXData
 15264  0558  00FA               	movwf	??_do_I2C_RX
 15265  0559  0021               	movlb	1	; select bank1
 15266  055A  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 15267  055B  0086               	movwf	6
 15268  055C  0187               	clrf	7
 15269  055D  087A               	movf	??_do_I2C_RX,w
 15270  055E  0081               	movwf	1
 15271  055F                     i1l4591:	
 15272  055F  3001               	movlw	1
 15273  0560  00FA               	movwf	??_do_I2C_RX
 15274  0561  087A               	movf	??_do_I2C_RX,w
 15275  0562  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 15276  0563                     i1l4593:	
 15277                           
 15278                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 15279  0563  3001               	movlw	1
 15280  0564  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15281  0565  3000               	movlw	0
 15282  0566  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15283  0567  0823               	movf	(_i2c_status^(0+128)+3),w
 15284  0568  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15285  0569  1903               	btfsc	3,2
 15286  056A  2D6C               	goto	u194_21
 15287  056B  2D6D               	goto	u194_20
 15288  056C                     u194_21:	
 15289  056C  2D72               	goto	i1l185
 15290  056D                     u194_20:	
 15291  056D                     i1l4595:	
 15292                           
 15293                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 15294  056D  318C  249D  3185   	fcall	_i2c1_driver_sendACK
 15295  0570                     i1l4597:	
 15296                           
 15297                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 15298  0570  3005               	movlw	5
 15299  0571  2D9E               	goto	i1l186
 15300  0572                     i1l185:	
 15301                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 15302                           
 15303                           
 15304                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 15305  0572  1520               	bsf	_i2c_status^(0+128),2
 15306                           
 15307                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15308  0573  2D7C               	goto	i1l4613
 15309  0574                     i1l4603:	
 15310                           
 15311                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 15312  0574  318C  24D6  3185   	fcall	_do_I2C_DO_NACK_RESTART
 15313  0577  2D9E               	goto	i1l186
 15314  0578                     i1l4607:	
 15315                           
 15316                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 15317  0578  318C  24D1  3185   	fcall	_do_I2C_DO_NACK_STOP
 15318  057B  2D9E               	goto	i1l186
 15319  057C                     i1l4613:	
 15320  057C  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15321  057D  00FA               	movwf	??_do_I2C_RX
 15322  057E  087A               	movf	??_do_I2C_RX,w
 15323  057F  00F9               	movwf	rdBlkRegCompleteHandler@p
 15324  0580  300B               	movlw	11
 15325  0581  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15326  0582  0086               	movwf	6
 15327  0583  0187               	clrf	7
 15328  0584  3F41               	moviw [1]fsr1
 15329  0585  008A               	movwf	10
 15330  0586  3F40               	moviw [0]fsr1
 15331  0587  000A               	callw
 15332  0588  3185               	pagesel	$
 15333  0589  00FB               	movwf	??_do_I2C_RX+1
 15334  058A  01FC               	clrf	??_do_I2C_RX+2
 15335                           
 15336                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15337                           ; Switch size 1, requested type "simple"
 15338                           ; Number of cases is 1, Range of values is 0 to 0
 15339                           ; switch strategies available:
 15340                           ; Name         Instructions Cycles
 15341                           ; simple_byte            4     3 (average)
 15342                           ; direct_byte            8     6 (fixed)
 15343                           ; jumptable            260     6 (fixed)
 15344                           ;	Chosen strategy is simple_byte
 15345  058B  087C               	movf	??_do_I2C_RX+2,w
 15346  058C  3A00               	xorlw	0	; case 0
 15347  058D  1903               	skipnz
 15348  058E  2D90               	goto	i1l6499
 15349  058F  2D78               	goto	i1l4607
 15350  0590                     i1l6499:	
 15351                           
 15352                           ; Switch size 1, requested type "simple"
 15353                           ; Number of cases is 4, Range of values is 1 to 4
 15354                           ; switch strategies available:
 15355                           ; Name         Instructions Cycles
 15356                           ; simple_byte           13     7 (average)
 15357                           ; direct_byte           17     9 (fixed)
 15358                           ; jumptable            263     9 (fixed)
 15359                           ;	Chosen strategy is simple_byte
 15360  0590  087B               	movf	??_do_I2C_RX+1,w
 15361  0591  3A01               	xorlw	1	; case 1
 15362  0592  1903               	skipnz
 15363  0593  2D78               	goto	i1l4607
 15364  0594  3A03               	xorlw	3	; case 2
 15365  0595  1903               	skipnz
 15366  0596  2D74               	goto	i1l4603
 15367  0597  3A01               	xorlw	1	; case 3
 15368  0598  1903               	skipnz
 15369  0599  2D74               	goto	i1l4603
 15370  059A  3A07               	xorlw	7	; case 4
 15371  059B  1903               	skipnz
 15372  059C  2D78               	goto	i1l4607
 15373  059D  2D78               	goto	i1l4607
 15374  059E                     i1l186:	
 15375  059E  0008               	return
 15376  059F                     __end_of_do_I2C_RX:	
 15377                           
 15378                           	psect	text48
 15379  04B4                     __ptext48:	
 15380 ;; *************** function _do_I2C_TX *****************
 15381 ;; Defined at:
 15382 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;		None
 15385 ;; Auto vars:     Size  Location     Type
 15386 ;;		None
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      enum E12722
 15389 ;; Registers used:
 15390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15391 ;; Tracked objects:
 15392 ;;		On entry : 0/0
 15393 ;;		On exit  : 0/0
 15394 ;;		Unchanged: 0/0
 15395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;Total ram usage:        3 bytes
 15401 ;; Hardware stack levels used:    1
 15402 ;; Hardware stack levels required when called:    3
 15403 ;; This function calls:
 15404 ;;		Absolute function
 15405 ;;		_do_I2C_SEND_RESTART_READ
 15406 ;;		_do_I2C_SEND_RESTART_WRITE
 15407 ;;		_do_I2C_SEND_STOP
 15408 ;;		_i2c1_driver_TXData
 15409 ;;		_i2c1_driver_isNACK
 15410 ;;		_i2c_restartWrite
 15411 ;;		_rd1RegCompleteHandler
 15412 ;;		_rd2RegCompleteHandler
 15413 ;;		_rdBlkRegCompleteHandler
 15414 ;;		_returnReset
 15415 ;;		_returnStop
 15416 ;;		_wr1RegCompleteHandler
 15417 ;;		_wr2RegCompleteHandler
 15418 ;; This function is called by:
 15419 ;;		_i2c_ISR
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           
 15424                           ;psect for function _do_I2C_TX
 15425  04B4                     _do_I2C_TX:	
 15426  04B4                     i1l4555:	
 15427                           ;incstack = 0
 15428                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15429                           
 15430                           
 15431                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 15432  04B4  318D  250E  3184   	fcall	_i2c1_driver_isNACK
 15433  04B7  1C03               	btfss	3,0
 15434  04B8  2CBA               	goto	u192_21
 15435  04B9  2CBB               	goto	u192_20
 15436  04BA                     u192_21:	
 15437  04BA  2CEB               	goto	i1l169
 15438  04BB                     u192_20:	
 15439  04BB  2CC8               	goto	i1l4573
 15440  04BC                     i1l4559:	
 15441                           
 15442                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 15443  04BC  318C  24B8  3184   	fcall	_do_I2C_SEND_RESTART_READ
 15444  04BF  2D07               	goto	i1l172
 15445  04C0                     i1l4563:	
 15446                           
 15447                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 15448  04C0  318C  24BD  3184   	fcall	_do_I2C_SEND_RESTART_WRITE
 15449  04C3  2D07               	goto	i1l172
 15450  04C4                     i1l4567:	
 15451                           
 15452                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 15453  04C4  318C  24C7  3184   	fcall	_do_I2C_SEND_STOP
 15454  04C7  2D07               	goto	i1l172
 15455  04C8                     i1l4573:	
 15456  04C8  0021               	movlb	1	; select bank1
 15457  04C9  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 15458  04CA  00FA               	movwf	??_do_I2C_TX
 15459  04CB  087A               	movf	??_do_I2C_TX,w
 15460  04CC  00F9               	movwf	rdBlkRegCompleteHandler@p
 15461  04CD  3011               	movlw	17
 15462  04CE  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15463  04CF  0086               	movwf	6
 15464  04D0  0187               	clrf	7
 15465  04D1  3F41               	moviw [1]fsr1
 15466  04D2  008A               	movwf	10
 15467  04D3  3F40               	moviw [0]fsr1
 15468  04D4  000A               	callw
 15469  04D5  3184               	pagesel	$
 15470  04D6  00FB               	movwf	??_do_I2C_TX+1
 15471  04D7  01FC               	clrf	??_do_I2C_TX+2
 15472                           
 15473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15474                           ; Switch size 1, requested type "simple"
 15475                           ; Number of cases is 1, Range of values is 0 to 0
 15476                           ; switch strategies available:
 15477                           ; Name         Instructions Cycles
 15478                           ; simple_byte            4     3 (average)
 15479                           ; direct_byte            8     6 (fixed)
 15480                           ; jumptable            260     6 (fixed)
 15481                           ;	Chosen strategy is simple_byte
 15482  04D8  087C               	movf	??_do_I2C_TX+2,w
 15483  04D9  3A00               	xorlw	0	; case 0
 15484  04DA  1903               	skipnz
 15485  04DB  2CDD               	goto	i1l6501
 15486  04DC  2CC4               	goto	i1l4567
 15487  04DD                     i1l6501:	
 15488                           
 15489                           ; Switch size 1, requested type "simple"
 15490                           ; Number of cases is 4, Range of values is 1 to 4
 15491                           ; switch strategies available:
 15492                           ; Name         Instructions Cycles
 15493                           ; simple_byte           13     7 (average)
 15494                           ; direct_byte           17     9 (fixed)
 15495                           ; jumptable            263     9 (fixed)
 15496                           ;	Chosen strategy is simple_byte
 15497  04DD  087B               	movf	??_do_I2C_TX+1,w
 15498  04DE  3A01               	xorlw	1	; case 1
 15499  04DF  1903               	skipnz
 15500  04E0  2CC4               	goto	i1l4567
 15501  04E1  3A03               	xorlw	3	; case 2
 15502  04E2  1903               	skipnz
 15503  04E3  2CBC               	goto	i1l4559
 15504  04E4  3A01               	xorlw	1	; case 3
 15505  04E5  1903               	skipnz
 15506  04E6  2CC0               	goto	i1l4563
 15507  04E7  3A07               	xorlw	7	; case 4
 15508  04E8  1903               	skipnz
 15509  04E9  2CC4               	goto	i1l4567
 15510  04EA  2CC4               	goto	i1l4567
 15511  04EB                     i1l169:	
 15512                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 15513                           
 15514                           
 15515                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 15516  04EB  0021               	movlb	1	; select bank1
 15517  04EC  11A0               	bcf	_i2c_status^(0+128),3
 15518  04ED                     i1l4575:	
 15519                           
 15520                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 15521  04ED  3002               	movlw	2
 15522  04EE  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15523  04EF  0086               	movwf	6
 15524  04F0  0187               	clrf	7
 15525  04F1  3F40               	moviw [0]fsr1
 15526  04F2  0084               	movwf	4
 15527  04F3  0185               	clrf	5
 15528  04F4  0A81               	incf	1,f
 15529  04F5  0800               	movf	0,w
 15530  04F6  318C  24AE  3184   	fcall	_i2c1_driver_TXData
 15531  04F9                     i1l4577:	
 15532                           
 15533                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 15534  04F9  3001               	movlw	1
 15535  04FA  0021               	movlb	1	; select bank1
 15536  04FB  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15537  04FC  3000               	movlw	0
 15538  04FD  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15539  04FE  0823               	movf	(_i2c_status^(0+128)+3),w
 15540  04FF  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15541  0500  1D03               	btfss	3,2
 15542  0501  2D03               	goto	u193_21
 15543  0502  2D04               	goto	u193_20
 15544  0503                     u193_21:	
 15545  0503  2D06               	goto	i1l4581
 15546  0504                     u193_20:	
 15547  0504                     i1l4579:	
 15548  0504  3006               	movlw	6
 15549  0505  2D07               	goto	i1l172
 15550  0506                     i1l4581:	
 15551  0506  3003               	movlw	3
 15552  0507                     i1l172:	
 15553  0507  0008               	return
 15554  0508                     __end_of_do_I2C_TX:	
 15555                           
 15556                           	psect	text49
 15557  0770                     __ptext49:	
 15558 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 15559 ;; Defined at:
 15560 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 15561 ;; Parameters:    Size  Location     Type
 15562 ;;		None
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;		None
 15565 ;; Return value:  Size  Location     Type
 15566 ;;                  1    wreg      enum E12722
 15567 ;; Registers used:
 15568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15577 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15578 ;;Total ram usage:        3 bytes
 15579 ;; Hardware stack levels used:    1
 15580 ;; Hardware stack levels required when called:    3
 15581 ;; This function calls:
 15582 ;;		Absolute function
 15583 ;;		_do_I2C_SEND_RESTART
 15584 ;;		_do_I2C_SEND_STOP
 15585 ;;		_i2c_restartWrite
 15586 ;;		_rd1RegCompleteHandler
 15587 ;;		_rd2RegCompleteHandler
 15588 ;;		_rdBlkRegCompleteHandler
 15589 ;;		_returnReset
 15590 ;;		_returnStop
 15591 ;;		_wr1RegCompleteHandler
 15592 ;;		_wr2RegCompleteHandler
 15593 ;; This function is called by:
 15594 ;;		_i2c_ISR
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           
 15599                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 15600  0770                     _do_I2C_DO_ADDRESS_NACK:	
 15601  0770                     i1l4533:	
 15602                           ;incstack = 0
 15603                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15604                           
 15605                           
 15606                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 15607  0770  0021               	movlb	1	; select bank1
 15608  0771  11A0               	bcf	_i2c_status^(0+128),3
 15609  0772                     i1l4535:	
 15610                           
 15611                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 15612  0772  3002               	movlw	2
 15613  0773  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15614  0774  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15615  0775  00AA               	movwf	(_i2c_status^(0+128)+10)
 15616                           
 15617                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 15618  0776  2F7F               	goto	i1l4547
 15619  0777                     i1l4537:	
 15620                           
 15621                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 15622  0777  318C  24C2  3187   	fcall	_do_I2C_SEND_RESTART
 15623  077A  2F9B               	goto	i1l164
 15624  077B                     i1l4541:	
 15625                           
 15626                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 15627  077B  318C  24C7  3187   	fcall	_do_I2C_SEND_STOP
 15628  077E  2F9B               	goto	i1l164
 15629  077F                     i1l4547:	
 15630  077F  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 15631  0780  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15632  0781  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15633  0782  00F9               	movwf	rdBlkRegCompleteHandler@p
 15634  0783  300F               	movlw	15
 15635  0784  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15636  0785  0086               	movwf	6
 15637  0786  0187               	clrf	7
 15638  0787  3F41               	moviw [1]fsr1
 15639  0788  008A               	movwf	10
 15640  0789  3F40               	moviw [0]fsr1
 15641  078A  000A               	callw
 15642  078B  3187               	pagesel	$
 15643  078C  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 15644  078D  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 15645                           
 15646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15647                           ; Switch size 1, requested type "simple"
 15648                           ; Number of cases is 1, Range of values is 0 to 0
 15649                           ; switch strategies available:
 15650                           ; Name         Instructions Cycles
 15651                           ; simple_byte            4     3 (average)
 15652                           ; direct_byte            8     6 (fixed)
 15653                           ; jumptable            260     6 (fixed)
 15654                           ;	Chosen strategy is simple_byte
 15655  078E  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 15656  078F  3A00               	xorlw	0	; case 0
 15657  0790  1903               	skipnz
 15658  0791  2F93               	goto	i1l6503
 15659  0792  2F7B               	goto	i1l4541
 15660  0793                     i1l6503:	
 15661                           
 15662                           ; Switch size 1, requested type "simple"
 15663                           ; Number of cases is 2, Range of values is 2 to 3
 15664                           ; switch strategies available:
 15665                           ; Name         Instructions Cycles
 15666                           ; simple_byte            7     4 (average)
 15667                           ; direct_byte           13     9 (fixed)
 15668                           ; jumptable            263     9 (fixed)
 15669                           ;	Chosen strategy is simple_byte
 15670  0793  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 15671  0794  3A02               	xorlw	2	; case 2
 15672  0795  1903               	skipnz
 15673  0796  2F77               	goto	i1l4537
 15674  0797  3A01               	xorlw	1	; case 3
 15675  0798  1903               	skipnz
 15676  0799  2F77               	goto	i1l4537
 15677  079A  2F7B               	goto	i1l4541
 15678  079B                     i1l164:	
 15679  079B  0008               	return
 15680  079C                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 15681                           
 15682                           	psect	text50
 15683  0CD6                     __ptext50:	
 15684 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 15685 ;; Defined at:
 15686 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;		None
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;		None
 15691 ;; Return value:  Size  Location     Type
 15692 ;;                  1    wreg      enum E12722
 15693 ;; Registers used:
 15694 ;;		wreg, status,2, status,0, pclath, cstack
 15695 ;; Tracked objects:
 15696 ;;		On entry : 0/0
 15697 ;;		On exit  : 0/0
 15698 ;;		Unchanged: 0/0
 15699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;Total ram usage:        0 bytes
 15705 ;; Hardware stack levels used:    1
 15706 ;; Hardware stack levels required when called:    1
 15707 ;; This function calls:
 15708 ;;		_i2c1_driver_sendNACK
 15709 ;; This function is called by:
 15710 ;;		_do_I2C_RX
 15711 ;;		_i2c_ISR
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           
 15716                           ;psect for function _do_I2C_DO_NACK_RESTART
 15717  0CD6                     _do_I2C_DO_NACK_RESTART:	
 15718  0CD6                     i1l4295:	
 15719                           ;incstack = 0
 15720                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15721                           
 15722                           
 15723                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 15724  0CD6  318C  24A1  318C   	fcall	_i2c1_driver_sendNACK
 15725  0CD9                     i1l4297:	
 15726                           
 15727                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 15728  0CD9  3009               	movlw	9
 15729  0CDA                     i1l158:	
 15730  0CDA  0008               	return
 15731  0CDB                     __end_of_do_I2C_DO_NACK_RESTART:	
 15732                           
 15733                           	psect	text51
 15734  0CD1                     __ptext51:	
 15735 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 15736 ;; Defined at:
 15737 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 15738 ;; Parameters:    Size  Location     Type
 15739 ;;		None
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;		None
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      enum E12722
 15744 ;; Registers used:
 15745 ;;		wreg, status,2, status,0, pclath, cstack
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15755 ;;Total ram usage:        0 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:    1
 15758 ;; This function calls:
 15759 ;;		_i2c1_driver_sendNACK
 15760 ;; This function is called by:
 15761 ;;		_do_I2C_RX
 15762 ;;		_i2c_ISR
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           
 15767                           ;psect for function _do_I2C_DO_NACK_STOP
 15768  0CD1                     _do_I2C_DO_NACK_STOP:	
 15769  0CD1                     i1l4289:	
 15770                           ;incstack = 0
 15771                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15772                           
 15773                           
 15774                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 15775  0CD1  318C  24A1  318C   	fcall	_i2c1_driver_sendNACK
 15776  0CD4                     i1l4291:	
 15777                           
 15778                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 15779  0CD4  300A               	movlw	10
 15780  0CD5                     i1l155:	
 15781  0CD5  0008               	return
 15782  0CD6                     __end_of_do_I2C_DO_NACK_STOP:	
 15783                           
 15784                           	psect	text52
 15785  0CCC                     __ptext52:	
 15786 ;; *************** function _do_I2C_DO_ACK *****************
 15787 ;; Defined at:
 15788 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      enum E12722
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, pclath, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:    1
 15809 ;; This function calls:
 15810 ;;		_i2c1_driver_sendACK
 15811 ;; This function is called by:
 15812 ;;		_i2c_ISR
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           
 15817                           ;psect for function _do_I2C_DO_ACK
 15818  0CCC                     _do_I2C_DO_ACK:	
 15819  0CCC                     i1l4527:	
 15820                           ;incstack = 0
 15821                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 15822                           
 15823                           
 15824                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 15825  0CCC  318C  249D  318C   	fcall	_i2c1_driver_sendACK
 15826  0CCF                     i1l4529:	
 15827                           
 15828                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 15829  0CCF  3005               	movlw	5
 15830  0CD0                     i1l152:	
 15831  0CD0  0008               	return
 15832  0CD1                     __end_of_do_I2C_DO_ACK:	
 15833                           
 15834                           	psect	text53
 15835  0CF9                     __ptext53:	
 15836 ;; *************** function _do_I2C_RCEN *****************
 15837 ;; Defined at:
 15838 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;		None
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      enum E12722
 15845 ;; Registers used:
 15846 ;;		wreg, status,2, status,0, pclath, cstack
 15847 ;; Tracked objects:
 15848 ;;		On entry : 0/0
 15849 ;;		On exit  : 0/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;Total ram usage:        0 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; Hardware stack levels required when called:    1
 15859 ;; This function calls:
 15860 ;;		_i2c1_driver_startRX
 15861 ;; This function is called by:
 15862 ;;		_i2c_ISR
 15863 ;; This function uses a non-reentrant model
 15864 ;;
 15865                           
 15866                           
 15867                           ;psect for function _do_I2C_RCEN
 15868  0CF9                     _do_I2C_RCEN:	
 15869  0CF9                     i1l4519:	
 15870                           ;incstack = 0
 15871                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 15872                           
 15873                           
 15874                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 15875  0CF9  0021               	movlb	1	; select bank1
 15876  0CFA  11A0               	bcf	_i2c_status^(0+128),3
 15877  0CFB                     i1l4521:	
 15878                           
 15879                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 15880  0CFB  318C  248B  318C   	fcall	_i2c1_driver_startRX
 15881  0CFE                     i1l4523:	
 15882                           
 15883                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 15884  0CFE  3004               	movlw	4
 15885  0CFF                     i1l149:	
 15886  0CFF  0008               	return
 15887  0D00                     __end_of_do_I2C_RCEN:	
 15888                           
 15889                           	psect	text54
 15890  0D1E                     __ptext54:	
 15891 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 15892 ;; Defined at:
 15893 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 15894 ;; Parameters:    Size  Location     Type
 15895 ;;		None
 15896 ;; Auto vars:     Size  Location     Type
 15897 ;;		None
 15898 ;; Return value:  Size  Location     Type
 15899 ;;                  1    wreg      enum E12722
 15900 ;; Registers used:
 15901 ;;		wreg, status,2, status,0, pclath, cstack
 15902 ;; Tracked objects:
 15903 ;;		On entry : 0/0
 15904 ;;		On exit  : 0/0
 15905 ;;		Unchanged: 0/0
 15906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;Total ram usage:        0 bytes
 15912 ;; Hardware stack levels used:    1
 15913 ;; Hardware stack levels required when called:    1
 15914 ;; This function calls:
 15915 ;;		_i2c1_driver_TXData
 15916 ;; This function is called by:
 15917 ;;		_i2c_ISR
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           
 15922                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15923  0D1E                     _do_I2C_SEND_ADR_WRITE:	
 15924  0D1E                     i1l4511:	
 15925                           ;incstack = 0
 15926                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15927                           
 15928                           
 15929                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 15930  0D1E  0021               	movlb	1	; select bank1
 15931  0D1F  15A0               	bsf	_i2c_status^(0+128),3
 15932  0D20                     i1l4513:	
 15933                           
 15934                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 15935  0D20  3521               	lslf	(_i2c_status^(0+128)+1),w
 15936  0D21  318C  24AE  318D   	fcall	_i2c1_driver_TXData
 15937  0D24                     i1l4515:	
 15938                           
 15939                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 15940  0D24  3003               	movlw	3
 15941  0D25                     i1l146:	
 15942  0D25  0008               	return
 15943  0D26                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15944                           
 15945                           	psect	text55
 15946  0D36                     __ptext55:	
 15947 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15948 ;; Defined at:
 15949 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;		None
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;		None
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      enum E12722
 15956 ;; Registers used:
 15957 ;;		wreg, status,2, status,0, pclath, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15967 ;;Total ram usage:        0 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    1
 15970 ;; This function calls:
 15971 ;;		_i2c1_driver_TXData
 15972 ;; This function is called by:
 15973 ;;		_i2c_ISR
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977                           
 15978                           ;psect for function _do_I2C_SEND_ADR_READ
 15979  0D36                     _do_I2C_SEND_ADR_READ:	
 15980  0D36                     i1l4503:	
 15981                           ;incstack = 0
 15982                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15983                           
 15984                           
 15985                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 15986  0D36  0021               	movlb	1	; select bank1
 15987  0D37  15A0               	bsf	_i2c_status^(0+128),3
 15988  0D38                     i1l4505:	
 15989                           
 15990                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 15991  0D38  1403               	setc
 15992  0D39  0D21               	rlf	(_i2c_status^(0+128)+1),w
 15993  0D3A  318C  24AE  318D   	fcall	_i2c1_driver_TXData
 15994  0D3D                     i1l4507:	
 15995                           
 15996                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 15997  0D3D  3005               	movlw	5
 15998  0D3E                     i1l143:	
 15999  0D3E  0008               	return
 16000  0D3F                     __end_of_do_I2C_SEND_ADR_READ:	
 16001                           
 16002                           	psect	text56
 16003  0CC7                     __ptext56:	
 16004 ;; *************** function _do_I2C_SEND_STOP *****************
 16005 ;; Defined at:
 16006 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;		None
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;		None
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      enum E12722
 16013 ;; Registers used:
 16014 ;;		wreg, status,2, status,0, pclath, cstack
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;Total ram usage:        0 bytes
 16025 ;; Hardware stack levels used:    1
 16026 ;; Hardware stack levels required when called:    1
 16027 ;; This function calls:
 16028 ;;		_i2c1_driver_stop
 16029 ;; This function is called by:
 16030 ;;		_do_I2C_DO_ADDRESS_NACK
 16031 ;;		_do_I2C_TX
 16032 ;;		_do_I2C_TX_EMPTY
 16033 ;;		_i2c_ISR
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           
 16038                           ;psect for function _do_I2C_SEND_STOP
 16039  0CC7                     _do_I2C_SEND_STOP:	
 16040  0CC7                     i1l4277:	
 16041                           ;incstack = 0
 16042                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16043                           
 16044                           
 16045                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 16046  0CC7  318C  2488  318C   	fcall	_i2c1_driver_stop
 16047  0CCA                     i1l4279:	
 16048                           
 16049                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 16050  0CCA  3000               	movlw	0
 16051  0CCB                     i1l140:	
 16052  0CCB  0008               	return
 16053  0CCC                     __end_of_do_I2C_SEND_STOP:	
 16054                           
 16055                           	psect	text57
 16056  0CC2                     __ptext57:	
 16057 ;; *************** function _do_I2C_SEND_RESTART *****************
 16058 ;; Defined at:
 16059 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;		None
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      enum E12722
 16066 ;; Registers used:
 16067 ;;		wreg, status,2, status,0, pclath, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;Total ram usage:        0 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:    1
 16080 ;; This function calls:
 16081 ;;		_i2c1_driver_restart
 16082 ;; This function is called by:
 16083 ;;		_do_I2C_DO_ADDRESS_NACK
 16084 ;;		_do_I2C_TX_EMPTY
 16085 ;;		_i2c_ISR
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           
 16090                           ;psect for function _do_I2C_SEND_RESTART
 16091  0CC2                     _do_I2C_SEND_RESTART:	
 16092  0CC2                     i1l4271:	
 16093                           ;incstack = 0
 16094                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16095                           
 16096                           
 16097                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 16098  0CC2  318C  2485  318C   	fcall	_i2c1_driver_restart
 16099  0CC5                     i1l4273:	
 16100                           
 16101                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 16102  0CC5  3001               	movlw	1
 16103  0CC6                     i1l137:	
 16104  0CC6  0008               	return
 16105  0CC7                     __end_of_do_I2C_SEND_RESTART:	
 16106                           
 16107                           	psect	text58
 16108  0CBD                     __ptext58:	
 16109 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16110 ;; Defined at:
 16111 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;		None
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;		None
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      enum E12722
 16118 ;; Registers used:
 16119 ;;		wreg, status,2, status,0, pclath, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16129 ;;Total ram usage:        0 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:    1
 16132 ;; This function calls:
 16133 ;;		_i2c1_driver_restart
 16134 ;; This function is called by:
 16135 ;;		_do_I2C_TX
 16136 ;;		_i2c_ISR
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           
 16141                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16142  0CBD                     _do_I2C_SEND_RESTART_WRITE:	
 16143  0CBD                     i1l4265:	
 16144                           ;incstack = 0
 16145                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16146                           
 16147                           
 16148                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 16149  0CBD  318C  2485  318C   	fcall	_i2c1_driver_restart
 16150  0CC0                     i1l4267:	
 16151                           
 16152                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 16153  0CC0  3002               	movlw	2
 16154  0CC1                     i1l134:	
 16155  0CC1  0008               	return
 16156  0CC2                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16157                           
 16158                           	psect	text59
 16159  0CB8                     __ptext59:	
 16160 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16161 ;; Defined at:
 16162 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;		None
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;		None
 16167 ;; Return value:  Size  Location     Type
 16168 ;;                  1    wreg      enum E12722
 16169 ;; Registers used:
 16170 ;;		wreg, status,2, status,0, pclath, cstack
 16171 ;; Tracked objects:
 16172 ;;		On entry : 0/0
 16173 ;;		On exit  : 0/0
 16174 ;;		Unchanged: 0/0
 16175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16180 ;;Total ram usage:        0 bytes
 16181 ;; Hardware stack levels used:    1
 16182 ;; Hardware stack levels required when called:    1
 16183 ;; This function calls:
 16184 ;;		_i2c1_driver_restart
 16185 ;; This function is called by:
 16186 ;;		_do_I2C_TX
 16187 ;;		_i2c_ISR
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           
 16192                           ;psect for function _do_I2C_SEND_RESTART_READ
 16193  0CB8                     _do_I2C_SEND_RESTART_READ:	
 16194  0CB8                     i1l4259:	
 16195                           ;incstack = 0
 16196                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16197                           
 16198                           
 16199                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 16200  0CB8  318C  2485  318C   	fcall	_i2c1_driver_restart
 16201  0CBB                     i1l4261:	
 16202                           
 16203                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 16204  0CBB  3001               	movlw	1
 16205  0CBC                     i1l131:	
 16206  0CBC  0008               	return
 16207  0CBD                     __end_of_do_I2C_SEND_RESTART_READ:	
 16208                           
 16209                           	psect	text60
 16210  0CB3                     __ptext60:	
 16211 ;; *************** function _do_I2C_IDLE *****************
 16212 ;; Defined at:
 16213 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16214 ;; Parameters:    Size  Location     Type
 16215 ;;		None
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;		None
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      enum E12722
 16220 ;; Registers used:
 16221 ;;		wreg, status,2
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;Total ram usage:        0 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_i2c_ISR
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           
 16241                           ;psect for function _do_I2C_IDLE
 16242  0CB3                     _do_I2C_IDLE:	
 16243  0CB3                     i1l4495:	
 16244                           ;incstack = 0
 16245                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16246                           
 16247                           
 16248                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 16249  0CB3  0021               	movlb	1	; select bank1
 16250  0CB4  1020               	bcf	_i2c_status^(0+128),0
 16251  0CB5                     i1l4497:	
 16252                           
 16253                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 16254  0CB5  01AA               	clrf	(_i2c_status^(0+128)+10)
 16255  0CB6                     i1l4499:	
 16256                           
 16257                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 16258  0CB6  300E               	movlw	14
 16259  0CB7                     i1l128:	
 16260  0CB7  0008               	return
 16261  0CB8                     __end_of_do_I2C_IDLE:	
 16262                           
 16263                           	psect	text61
 16264  0D16                     __ptext61:	
 16265 ;; *************** function _do_I2C_RESET *****************
 16266 ;; Defined at:
 16267 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;		None
 16270 ;; Auto vars:     Size  Location     Type
 16271 ;;		None
 16272 ;; Return value:  Size  Location     Type
 16273 ;;                  1    wreg      enum E12722
 16274 ;; Registers used:
 16275 ;;		wreg, status,2, status,0, pclath, cstack
 16276 ;; Tracked objects:
 16277 ;;		On entry : 0/0
 16278 ;;		On exit  : 0/0
 16279 ;;		Unchanged: 0/0
 16280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16285 ;;Total ram usage:        0 bytes
 16286 ;; Hardware stack levels used:    1
 16287 ;; Hardware stack levels required when called:    1
 16288 ;; This function calls:
 16289 ;;		_i2c1_driver_resetBus
 16290 ;; This function is called by:
 16291 ;;		_i2c_ISR
 16292 ;; This function uses a non-reentrant model
 16293 ;;
 16294                           
 16295                           
 16296                           ;psect for function _do_I2C_RESET
 16297  0D16                     _do_I2C_RESET:	
 16298  0D16                     i1l4485:	
 16299                           ;incstack = 0
 16300                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16301                           
 16302                           
 16303                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 16304  0D16  318C  247D  318D   	fcall	_i2c1_driver_resetBus
 16305  0D19                     i1l4487:	
 16306                           
 16307                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 16308  0D19  0021               	movlb	1	; select bank1
 16309  0D1A  1020               	bcf	_i2c_status^(0+128),0
 16310  0D1B                     i1l4489:	
 16311                           
 16312                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 16313  0D1B  01AA               	clrf	(_i2c_status^(0+128)+10)
 16314  0D1C                     i1l4491:	
 16315                           
 16316                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 16317  0D1C  300E               	movlw	14
 16318  0D1D                     i1l125:	
 16319  0D1D  0008               	return
 16320  0D1E                     __end_of_do_I2C_RESET:	
 16321                           
 16322                           	psect	text62
 16323  06E2                     __ptext62:	
 16324 ;; *************** function _do_I2C_TX_EMPTY *****************
 16325 ;; Defined at:
 16326 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;		None
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;		None
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      enum E12722
 16333 ;; Registers used:
 16334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;Total ram usage:        3 bytes
 16345 ;; Hardware stack levels used:    1
 16346 ;; Hardware stack levels required when called:    3
 16347 ;; This function calls:
 16348 ;;		Absolute function
 16349 ;;		_do_I2C_SEND_RESTART
 16350 ;;		_do_I2C_SEND_STOP
 16351 ;;		_i2c_restartWrite
 16352 ;;		_mssp1_setIRQ
 16353 ;;		_rd1RegCompleteHandler
 16354 ;;		_rd2RegCompleteHandler
 16355 ;;		_rdBlkRegCompleteHandler
 16356 ;;		_returnReset
 16357 ;;		_returnStop
 16358 ;;		_wr1RegCompleteHandler
 16359 ;;		_wr2RegCompleteHandler
 16360 ;; This function is called by:
 16361 ;;		_i2c_ISR
 16362 ;; This function uses a non-reentrant model
 16363 ;;
 16364                           
 16365                           
 16366                           ;psect for function _do_I2C_TX_EMPTY
 16367  06E2                     _do_I2C_TX_EMPTY:	
 16368  06E2                     i1l4621:	
 16369                           ;incstack = 0
 16370                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16371                           
 16372                           
 16373                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 16374  06E2  0021               	movlb	1	; select bank1
 16375  06E3  1520               	bsf	_i2c_status^(0+128),2
 16376                           
 16377                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16378  06E4  2EF2               	goto	i1l4639
 16379  06E5                     i1l4623:	
 16380                           
 16381                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 16382  06E5  318C  24C2  3186   	fcall	_do_I2C_SEND_RESTART
 16383  06E8  2F14               	goto	i1l200
 16384  06E9                     i1l4627:	
 16385                           
 16386                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 16387  06E9  318C  2491  3186   	fcall	_mssp1_setIRQ
 16388  06EC                     i1l4629:	
 16389                           
 16390                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 16391  06EC  3003               	movlw	3
 16392  06ED  2F14               	goto	i1l200
 16393  06EE                     i1l4633:	
 16394                           
 16395                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 16396  06EE  318C  24C7  3186   	fcall	_do_I2C_SEND_STOP
 16397  06F1  2F14               	goto	i1l200
 16398  06F2                     i1l4639:	
 16399  06F2  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16400  06F3  00FA               	movwf	??_do_I2C_TX_EMPTY
 16401  06F4  087A               	movf	??_do_I2C_TX_EMPTY,w
 16402  06F5  00F9               	movwf	rdBlkRegCompleteHandler@p
 16403  06F6  300B               	movlw	11
 16404  06F7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16405  06F8  0086               	movwf	6
 16406  06F9  0187               	clrf	7
 16407  06FA  3F41               	moviw [1]fsr1
 16408  06FB  008A               	movwf	10
 16409  06FC  3F40               	moviw [0]fsr1
 16410  06FD  000A               	callw
 16411  06FE  3186               	pagesel	$
 16412  06FF  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 16413  0700  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 16414                           
 16415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16416                           ; Switch size 1, requested type "simple"
 16417                           ; Number of cases is 1, Range of values is 0 to 0
 16418                           ; switch strategies available:
 16419                           ; Name         Instructions Cycles
 16420                           ; simple_byte            4     3 (average)
 16421                           ; direct_byte            8     6 (fixed)
 16422                           ; jumptable            260     6 (fixed)
 16423                           ;	Chosen strategy is simple_byte
 16424  0701  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 16425  0702  3A00               	xorlw	0	; case 0
 16426  0703  1903               	skipnz
 16427  0704  2F06               	goto	i1l6505
 16428  0705  2EEE               	goto	i1l4633
 16429  0706                     i1l6505:	
 16430                           
 16431                           ; Switch size 1, requested type "simple"
 16432                           ; Number of cases is 4, Range of values is 1 to 4
 16433                           ; switch strategies available:
 16434                           ; Name         Instructions Cycles
 16435                           ; simple_byte           13     7 (average)
 16436                           ; direct_byte           17     9 (fixed)
 16437                           ; jumptable            263     9 (fixed)
 16438                           ;	Chosen strategy is simple_byte
 16439  0706  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 16440  0707  3A01               	xorlw	1	; case 1
 16441  0708  1903               	skipnz
 16442  0709  2EEE               	goto	i1l4633
 16443  070A  3A03               	xorlw	3	; case 2
 16444  070B  1903               	skipnz
 16445  070C  2EE5               	goto	i1l4623
 16446  070D  3A01               	xorlw	1	; case 3
 16447  070E  1903               	skipnz
 16448  070F  2EE5               	goto	i1l4623
 16449  0710  3A07               	xorlw	7	; case 4
 16450  0711  1903               	skipnz
 16451  0712  2EE9               	goto	i1l4627
 16452  0713  2EEE               	goto	i1l4633
 16453  0714                     i1l200:	
 16454  0714  0008               	return
 16455  0715                     __end_of_do_I2C_TX_EMPTY:	
 16456                           
 16457                           	psect	text63
 16458  0C91                     __ptext63:	
 16459 ;; *************** function _mssp1_setIRQ *****************
 16460 ;; Defined at:
 16461 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;		None
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;		None
 16466 ;; Return value:  Size  Location     Type
 16467 ;;                  1    wreg      void 
 16468 ;; Registers used:
 16469 ;;		None
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;Total ram usage:        0 bytes
 16480 ;; Hardware stack levels used:    1
 16481 ;; This function calls:
 16482 ;;		Nothing
 16483 ;; This function is called by:
 16484 ;;		_do_I2C_TX_EMPTY
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           
 16489                           ;psect for function _mssp1_setIRQ
 16490  0C91                     _mssp1_setIRQ:	
 16491  0C91                     i1l4309:	
 16492                           ;incstack = 0
 16493                           ; Regs used in _mssp1_setIRQ: []
 16494                           
 16495                           
 16496                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 16497  0C91  002E               	movlb	14	; select bank14
 16498  0C92  140F               	bsf	15,0	;volatile
 16499  0C93                     i1l579:	
 16500  0C93  0008               	return
 16501  0C94                     __end_of_mssp1_setIRQ:	
 16502                           
 16503                           	psect	text64
 16504  0D0E                     __ptext64:	
 16505 ;; *************** function _i2c1_driver_isNACK *****************
 16506 ;; Defined at:
 16507 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;		None               void
 16514 ;; Registers used:
 16515 ;;		wreg, status,2, status,0
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;Total ram usage:        1 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; This function calls:
 16528 ;;		Nothing
 16529 ;; This function is called by:
 16530 ;;		_do_I2C_TX
 16531 ;;		_i2c_ISR
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           
 16536                           ;psect for function _i2c1_driver_isNACK
 16537  0D0E                     _i2c1_driver_isNACK:	
 16538  0D0E                     i1l4301:	
 16539                           ;incstack = 0
 16540                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 16541                           
 16542                           
 16543                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 16544  0D0E  0023               	movlb	3	; select bank3
 16545  0D0F  0E11               	swapf	17,w	;volatile
 16546  0D10  0C89               	rrf	9,f
 16547  0D11  0C89               	rrf	9,f
 16548  0D12  3901               	andlw	1
 16549  0D13  00F0               	movwf	??_i2c1_driver_isNACK
 16550  0D14  0C70               	rrf	??_i2c1_driver_isNACK,w
 16551  0D15                     i1l614:	
 16552  0D15  0008               	return
 16553  0D16                     __end_of_i2c1_driver_isNACK:	
 16554                           
 16555                           	psect	text65
 16556  0CAE                     __ptext65:	
 16557 ;; *************** function _i2c1_driver_TXData *****************
 16558 ;; Defined at:
 16559 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;  d               1    wreg     unsigned char 
 16562 ;; Auto vars:     Size  Location     Type
 16563 ;;  d               1    0[COMMON] unsigned char 
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      void 
 16566 ;; Registers used:
 16567 ;;		wreg
 16568 ;; Tracked objects:
 16569 ;;		On entry : 0/0
 16570 ;;		On exit  : 0/0
 16571 ;;		Unchanged: 0/0
 16572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16577 ;;Total ram usage:        1 bytes
 16578 ;; Hardware stack levels used:    1
 16579 ;; This function calls:
 16580 ;;		Nothing
 16581 ;; This function is called by:
 16582 ;;		_do_I2C_SEND_ADR_READ
 16583 ;;		_do_I2C_SEND_ADR_WRITE
 16584 ;;		_do_I2C_TX
 16585 ;; This function uses a non-reentrant model
 16586 ;;
 16587                           
 16588                           
 16589                           ;psect for function _i2c1_driver_TXData
 16590  0CAE                     _i2c1_driver_TXData:	
 16591                           
 16592                           ;incstack = 0
 16593                           ; Regs used in _i2c1_driver_TXData: [wreg]
 16594                           ;i2c1_driver_TXData@d stored from wreg
 16595  0CAE  00F0               	movwf	i2c1_driver_TXData@d
 16596  0CAF                     i1l4283:	
 16597                           
 16598                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 16599  0CAF  0870               	movf	i2c1_driver_TXData@d,w
 16600  0CB0  0023               	movlb	3	; select bank3
 16601  0CB1  008C               	movwf	12	;volatile
 16602  0CB2                     i1l629:	
 16603  0CB2  0008               	return
 16604  0CB3                     __end_of_i2c1_driver_TXData:	
 16605                           
 16606                           	psect	text66
 16607  0C8E                     __ptext66:	
 16608 ;; *************** function _i2c1_driver_getRXData *****************
 16609 ;; Defined at:
 16610 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;		None
 16613 ;; Auto vars:     Size  Location     Type
 16614 ;;		None
 16615 ;; Return value:  Size  Location     Type
 16616 ;;                  1    wreg      unsigned char 
 16617 ;; Registers used:
 16618 ;;		wreg
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;Total ram usage:        0 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; This function calls:
 16631 ;;		Nothing
 16632 ;; This function is called by:
 16633 ;;		_do_I2C_RX
 16634 ;; This function uses a non-reentrant model
 16635 ;;
 16636                           
 16637                           
 16638                           ;psect for function _i2c1_driver_getRXData
 16639  0C8E                     _i2c1_driver_getRXData:	
 16640  0C8E                     i1l4305:	
 16641                           ;incstack = 0
 16642                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 16643                           
 16644                           
 16645                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 16646  0C8E  0023               	movlb	3	; select bank3
 16647  0C8F  080C               	movf	12,w	;volatile
 16648  0C90                     i1l620:	
 16649  0C90  0008               	return
 16650  0C91                     __end_of_i2c1_driver_getRXData:	
 16651                           
 16652                           	psect	text67
 16653  0CA1                     __ptext67:	
 16654 ;; *************** function _i2c1_driver_sendNACK *****************
 16655 ;; Defined at:
 16656 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;		None
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;		None
 16661 ;; Return value:  Size  Location     Type
 16662 ;;                  1    wreg      void 
 16663 ;; Registers used:
 16664 ;;		None
 16665 ;; Tracked objects:
 16666 ;;		On entry : 0/0
 16667 ;;		On exit  : 0/0
 16668 ;;		Unchanged: 0/0
 16669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;Total ram usage:        0 bytes
 16675 ;; Hardware stack levels used:    1
 16676 ;; This function calls:
 16677 ;;		Nothing
 16678 ;; This function is called by:
 16679 ;;		_do_I2C_DO_NACK_STOP
 16680 ;;		_do_I2C_DO_NACK_RESTART
 16681 ;; This function uses a non-reentrant model
 16682 ;;
 16683                           
 16684                           
 16685                           ;psect for function _i2c1_driver_sendNACK
 16686  0CA1                     _i2c1_driver_sendNACK:	
 16687  0CA1                     i1l4153:	
 16688                           ;incstack = 0
 16689                           ; Regs used in _i2c1_driver_sendNACK: []
 16690                           
 16691                           
 16692                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 16693  0CA1  0023               	movlb	3	; select bank3
 16694  0CA2  1691               	bsf	17,5	;volatile
 16695                           
 16696                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 16697  0CA3  1611               	bsf	17,4	;volatile
 16698  0CA4                     i1l638:	
 16699  0CA4  0008               	return
 16700  0CA5                     __end_of_i2c1_driver_sendNACK:	
 16701                           
 16702                           	psect	text68
 16703  0C7D                     __ptext68:	
 16704 ;; *************** function _i2c1_driver_resetBus *****************
 16705 ;; Defined at:
 16706 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		None
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; This function calls:
 16727 ;;		Nothing
 16728 ;; This function is called by:
 16729 ;;		_do_I2C_RESET
 16730 ;; This function uses a non-reentrant model
 16731 ;;
 16732                           
 16733                           
 16734                           ;psect for function _i2c1_driver_resetBus
 16735  0C7D                     _i2c1_driver_resetBus:	
 16736  0C7D                     i1l602:	
 16737                           ;incstack = 0
 16738                           ; Regs used in _i2c1_driver_resetBus: []
 16739                           
 16740  0C7D  0008               	return
 16741  0C7E                     __end_of_i2c1_driver_resetBus:	
 16742                           
 16743                           	psect	text69
 16744  0C8B                     __ptext69:	
 16745 ;; *************** function _i2c1_driver_startRX *****************
 16746 ;; Defined at:
 16747 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 16748 ;; Parameters:    Size  Location     Type
 16749 ;;		None
 16750 ;; Auto vars:     Size  Location     Type
 16751 ;;		None
 16752 ;; Return value:  Size  Location     Type
 16753 ;;                  1    wreg      void 
 16754 ;; Registers used:
 16755 ;;		None
 16756 ;; Tracked objects:
 16757 ;;		On entry : 0/0
 16758 ;;		On exit  : 0/0
 16759 ;;		Unchanged: 0/0
 16760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16765 ;;Total ram usage:        0 bytes
 16766 ;; Hardware stack levels used:    1
 16767 ;; This function calls:
 16768 ;;		Nothing
 16769 ;; This function is called by:
 16770 ;;		_do_I2C_RCEN
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774                           
 16775                           ;psect for function _i2c1_driver_startRX
 16776  0C8B                     _i2c1_driver_startRX:	
 16777  0C8B                     i1l4285:	
 16778                           ;incstack = 0
 16779                           ; Regs used in _i2c1_driver_startRX: []
 16780                           
 16781                           
 16782                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 16783  0C8B  0023               	movlb	3	; select bank3
 16784  0C8C  1591               	bsf	17,3	;volatile
 16785  0C8D                     i1l617:	
 16786  0C8D  0008               	return
 16787  0C8E                     __end_of_i2c1_driver_startRX:	
 16788                           
 16789                           	psect	text70
 16790  0ED3                     __ptext70:	
 16791 ;; *************** function _rdBlkRegCompleteHandler *****************
 16792 ;; Defined at:
 16793 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16794 ;; Parameters:    Size  Location     Type
 16795 ;;  p               1    9[COMMON] PTR void 
 16796 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16797 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16798 ;; Auto vars:     Size  Location     Type
 16799 ;;		None
 16800 ;; Return value:  Size  Location     Type
 16801 ;;                  1    wreg      enum E358
 16802 ;; Registers used:
 16803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16804 ;; Tracked objects:
 16805 ;;		On entry : 0/0
 16806 ;;		On exit  : 0/0
 16807 ;;		Unchanged: 0/0
 16808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16813 ;;Total ram usage:        1 bytes
 16814 ;; Hardware stack levels used:    1
 16815 ;; Hardware stack levels required when called:    2
 16816 ;; This function calls:
 16817 ;;		_i2c_setBuffer
 16818 ;;		_i2c_setDataCompleteCallback
 16819 ;; This function is called by:
 16820 ;;		_i2c_readDataBlock
 16821 ;;		_do_I2C_DO_ADDRESS_NACK
 16822 ;;		_do_I2C_TX
 16823 ;;		_do_I2C_RX
 16824 ;;		_do_I2C_TX_EMPTY
 16825 ;; This function uses a non-reentrant model
 16826 ;;
 16827                           
 16828                           
 16829                           ;psect for function _rdBlkRegCompleteHandler
 16830  0ED3                     _rdBlkRegCompleteHandler:	
 16831  0ED3                     i1l4351:	
 16832                           ;incstack = 0
 16833                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16834                           
 16835                           
 16836                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 16837  0ED3  0879               	movf	rdBlkRegCompleteHandler@p,w
 16838  0ED4  0086               	movwf	6
 16839  0ED5  0187               	clrf	7
 16840  0ED6  3F40               	moviw [0]fsr1
 16841  0ED7  00F0               	movwf	i2c_setBuffer@bufferSize
 16842  0ED8  3F41               	moviw [1]fsr1
 16843  0ED9  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16844  0EDA  0879               	movf	rdBlkRegCompleteHandler@p,w
 16845  0EDB  3E02               	addlw	2
 16846  0EDC  0086               	movwf	6
 16847  0EDD  0187               	clrf	7
 16848  0EDE  0801               	movf	1,w
 16849  0EDF  318D  25F0  318E   	fcall	_i2c_setBuffer
 16850                           
 16851                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 16852  0EE2  3000               	movlw	0
 16853  0EE3  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16854  0EE4  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16855  0EE5  01F7               	clrf	i2c_setDataCompleteCallback@p
 16856  0EE6  318D  259B  318E   	fcall	_i2c_setDataCompleteCallback
 16857  0EE9                     i1l4353:	
 16858                           
 16859                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 16860  0EE9  3002               	movlw	2
 16861  0EEA                     i1l303:	
 16862  0EEA  0008               	return
 16863  0EEB                     __end_of_rdBlkRegCompleteHandler:	
 16864                           
 16865                           	psect	text71
 16866  0E54                     __ptext71:	
 16867 ;; *************** function _rd2RegCompleteHandler *****************
 16868 ;; Defined at:
 16869 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16870 ;; Parameters:    Size  Location     Type
 16871 ;;  p               1    9[COMMON] PTR void 
 16872 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16873 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      enum E358
 16878 ;; Registers used:
 16879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;Total ram usage:        1 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:    2
 16892 ;; This function calls:
 16893 ;;		_i2c_setBuffer
 16894 ;;		_i2c_setDataCompleteCallback
 16895 ;; This function is called by:
 16896 ;;		_i2c_read2ByteRegister
 16897 ;;		_do_I2C_DO_ADDRESS_NACK
 16898 ;;		_do_I2C_TX
 16899 ;;		_do_I2C_RX
 16900 ;;		_do_I2C_TX_EMPTY
 16901 ;; This function uses a non-reentrant model
 16902 ;;
 16903                           
 16904                           
 16905                           ;psect for function _rd2RegCompleteHandler
 16906  0E54                     _rd2RegCompleteHandler:	
 16907  0E54                     i1l4335:	
 16908                           ;incstack = 0
 16909                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16910                           
 16911                           
 16912                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 16913  0E54  3002               	movlw	2
 16914  0E55  00F0               	movwf	i2c_setBuffer@bufferSize
 16915  0E56  3000               	movlw	0
 16916  0E57  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16917  0E58  0879               	movf	rd2RegCompleteHandler@p,w
 16918  0E59  318D  25F0  318E   	fcall	_i2c_setBuffer
 16919  0E5C                     i1l4337:	
 16920                           
 16921                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16922  0E5C  3000               	movlw	0
 16923  0E5D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16924  0E5E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16925  0E5F  01F7               	clrf	i2c_setDataCompleteCallback@p
 16926  0E60  318D  259B  318E   	fcall	_i2c_setDataCompleteCallback
 16927  0E63                     i1l4339:	
 16928                           
 16929                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 16930  0E63  3002               	movlw	2
 16931  0E64                     i1l279:	
 16932  0E64  0008               	return
 16933  0E65                     __end_of_rd2RegCompleteHandler:	
 16934                           
 16935                           	psect	text72
 16936  0E43                     __ptext72:	
 16937 ;; *************** function _rd1RegCompleteHandler *****************
 16938 ;; Defined at:
 16939 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16940 ;; Parameters:    Size  Location     Type
 16941 ;;  p               1    9[COMMON] PTR void 
 16942 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16943 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16944 ;; Auto vars:     Size  Location     Type
 16945 ;;		None
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      enum E358
 16948 ;; Registers used:
 16949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16955 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;Total ram usage:        1 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    2
 16962 ;; This function calls:
 16963 ;;		_i2c_setBuffer
 16964 ;;		_i2c_setDataCompleteCallback
 16965 ;; This function is called by:
 16966 ;;		_i2c_read1ByteRegister
 16967 ;;		_do_I2C_DO_ADDRESS_NACK
 16968 ;;		_do_I2C_TX
 16969 ;;		_do_I2C_RX
 16970 ;;		_do_I2C_TX_EMPTY
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           
 16975                           ;psect for function _rd1RegCompleteHandler
 16976  0E43                     _rd1RegCompleteHandler:	
 16977  0E43                     i1l4327:	
 16978                           ;incstack = 0
 16979                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16980                           
 16981                           
 16982                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 16983  0E43  3001               	movlw	1
 16984  0E44  00F0               	movwf	i2c_setBuffer@bufferSize
 16985  0E45  3000               	movlw	0
 16986  0E46  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16987  0E47  0879               	movf	rd1RegCompleteHandler@p,w
 16988  0E48  318D  25F0  318E   	fcall	_i2c_setBuffer
 16989  0E4B                     i1l4329:	
 16990                           
 16991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16992  0E4B  3000               	movlw	0
 16993  0E4C  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16994  0E4D  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16995  0E4E  01F7               	clrf	i2c_setDataCompleteCallback@p
 16996  0E4F  318D  259B  318E   	fcall	_i2c_setDataCompleteCallback
 16997  0E52                     i1l4331:	
 16998                           
 16999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 17000  0E52  3002               	movlw	2
 17001  0E53                     i1l264:	
 17002  0E53  0008               	return
 17003  0E54                     __end_of_rd1RegCompleteHandler:	
 17004                           
 17005                           	psect	text73
 17006  0E32                     __ptext73:	
 17007 ;; *************** function _wr1RegCompleteHandler *****************
 17008 ;; Defined at:
 17009 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17010 ;; Parameters:    Size  Location     Type
 17011 ;;  p               1    9[COMMON] PTR void 
 17012 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17013 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17014 ;; Auto vars:     Size  Location     Type
 17015 ;;		None
 17016 ;; Return value:  Size  Location     Type
 17017 ;;                  1    wreg      enum E358
 17018 ;; Registers used:
 17019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17020 ;; Tracked objects:
 17021 ;;		On entry : 0/0
 17022 ;;		On exit  : 0/0
 17023 ;;		Unchanged: 0/0
 17024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;Total ram usage:        1 bytes
 17030 ;; Hardware stack levels used:    1
 17031 ;; Hardware stack levels required when called:    2
 17032 ;; This function calls:
 17033 ;;		_i2c_setBuffer
 17034 ;;		_i2c_setDataCompleteCallback
 17035 ;; This function is called by:
 17036 ;;		_i2c_write1ByteRegister
 17037 ;;		_do_I2C_DO_ADDRESS_NACK
 17038 ;;		_do_I2C_TX
 17039 ;;		_do_I2C_RX
 17040 ;;		_do_I2C_TX_EMPTY
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           
 17045                           ;psect for function _wr1RegCompleteHandler
 17046  0E32                     _wr1RegCompleteHandler:	
 17047  0E32                     i1l4319:	
 17048                           ;incstack = 0
 17049                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17050                           
 17051                           
 17052                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 17053  0E32  3001               	movlw	1
 17054  0E33  00F0               	movwf	i2c_setBuffer@bufferSize
 17055  0E34  3000               	movlw	0
 17056  0E35  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17057  0E36  0879               	movf	wr1RegCompleteHandler@p,w
 17058  0E37  318D  25F0  318E   	fcall	_i2c_setBuffer
 17059  0E3A                     i1l4321:	
 17060                           
 17061                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17062  0E3A  3000               	movlw	0
 17063  0E3B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17064  0E3C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17065  0E3D  01F7               	clrf	i2c_setDataCompleteCallback@p
 17066  0E3E  318D  259B  318E   	fcall	_i2c_setDataCompleteCallback
 17067  0E41                     i1l4323:	
 17068                           
 17069                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 17070  0E41  3004               	movlw	4
 17071  0E42                     i1l243:	
 17072  0E42  0008               	return
 17073  0E43                     __end_of_wr1RegCompleteHandler:	
 17074                           
 17075                           	psect	text74
 17076  0002                     __ptext74:	
 17077 ;; *************** function _returnReset *****************
 17078 ;; Defined at:
 17079 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17080 ;; Parameters:    Size  Location     Type
 17081 ;;  p               1    9[COMMON] PTR void 
 17082 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17083 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17084 ;; Auto vars:     Size  Location     Type
 17085 ;;		None
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  1    wreg      enum E12568
 17088 ;; Registers used:
 17089 ;;		wreg
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;Total ram usage:        1 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; This function calls:
 17102 ;;		Nothing
 17103 ;; This function is called by:
 17104 ;;		_i2c_open
 17105 ;;		_do_I2C_DO_ADDRESS_NACK
 17106 ;;		_do_I2C_TX
 17107 ;;		_do_I2C_RX
 17108 ;;		_do_I2C_TX_EMPTY
 17109 ;; This function uses a non-reentrant model
 17110 ;;
 17111                           
 17112                           
 17113                           ;psect for function _returnReset
 17114  0002                     _returnReset:	
 17115  0002                     i1l4315:	
 17116                           ;incstack = 0
 17117                           ; Regs used in _returnReset: [wreg]
 17118                           
 17119                           
 17120                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 17121  0002  3005               	movlw	5
 17122  0003                     i1l219:	
 17123  0003  0008               	return
 17124  0004                     __end_of_returnReset:	
 17125                           
 17126                           	psect	text75
 17127  0C80                     __ptext75:	
 17128 ;; *************** function _returnStop *****************
 17129 ;; Defined at:
 17130 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;  p               1    9[COMMON] PTR void 
 17133 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17134 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;		None
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1    wreg      enum E12568
 17139 ;; Registers used:
 17140 ;;		wreg
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17146 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17150 ;;Total ram usage:        1 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; This function calls:
 17153 ;;		Nothing
 17154 ;; This function is called by:
 17155 ;;		_setCallBack
 17156 ;;		_i2c_open
 17157 ;;		_do_I2C_DO_ADDRESS_NACK
 17158 ;;		_do_I2C_TX
 17159 ;;		_do_I2C_RX
 17160 ;;		_do_I2C_TX_EMPTY
 17161 ;; This function uses a non-reentrant model
 17162 ;;
 17163                           
 17164                           
 17165                           ;psect for function _returnStop
 17166  0C80                     _returnStop:	
 17167  0C80                     i1l4311:	
 17168                           ;incstack = 0
 17169                           ; Regs used in _returnStop: [wreg]
 17170                           
 17171                           
 17172                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 17173  0C80  3001               	movlw	1
 17174  0C81                     i1l216:	
 17175  0C81  0008               	return
 17176  0C82                     __end_of_returnStop:	
 17177                           
 17178                           	psect	text76
 17179  0C7E                     __ptext76:	
 17180 ;; *************** function _i2c_restartWrite *****************
 17181 ;; Defined at:
 17182 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17183 ;; Parameters:    Size  Location     Type
 17184 ;;  p               1    9[COMMON] PTR void 
 17185 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17186 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17187 ;; Auto vars:     Size  Location     Type
 17188 ;;		None
 17189 ;; Return value:  Size  Location     Type
 17190 ;;                  1    wreg      enum E358
 17191 ;; Registers used:
 17192 ;;		wreg
 17193 ;; Tracked objects:
 17194 ;;		On entry : 0/0
 17195 ;;		On exit  : 0/0
 17196 ;;		Unchanged: 0/0
 17197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17198 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17202 ;;Total ram usage:        1 bytes
 17203 ;; Hardware stack levels used:    1
 17204 ;; This function calls:
 17205 ;;		Nothing
 17206 ;; This function is called by:
 17207 ;;		_i2c_write1ByteRegister
 17208 ;;		_i2c_writeNBytes
 17209 ;;		_i2c_read1ByteRegister
 17210 ;;		_i2c_read2ByteRegister
 17211 ;;		_i2c_write2ByteRegister
 17212 ;;		_i2c_readDataBlock
 17213 ;;		_do_I2C_DO_ADDRESS_NACK
 17214 ;;		_do_I2C_TX
 17215 ;;		_do_I2C_RX
 17216 ;;		_do_I2C_TX_EMPTY
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           
 17221                           ;psect for function _i2c_restartWrite
 17222  0C7E                     _i2c_restartWrite:	
 17223  0C7E                     i1l4247:	
 17224                           ;incstack = 0
 17225                           ; Regs used in _i2c_restartWrite: [wreg]
 17226                           
 17227                           
 17228                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 17229  0C7E  3003               	movlw	3
 17230  0C7F                     i1l9:	
 17231  0C7F  0008               	return
 17232  0C80                     __end_of_i2c_restartWrite:	
 17233                           
 17234                           	psect	text77
 17235  0E21                     __ptext77:	
 17236 ;; *************** function _wr2RegCompleteHandler *****************
 17237 ;; Defined at:
 17238 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17239 ;; Parameters:    Size  Location     Type
 17240 ;;  p               1    9[COMMON] PTR void 
 17241 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17242 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      enum E358
 17247 ;; Registers used:
 17248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17254 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17258 ;;Total ram usage:        1 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:    2
 17261 ;; This function calls:
 17262 ;;		_i2c_setBuffer
 17263 ;;		_i2c_setDataCompleteCallback
 17264 ;; This function is called by:
 17265 ;;		_i2c_write2ByteRegister
 17266 ;;		_do_I2C_DO_ADDRESS_NACK
 17267 ;;		_do_I2C_TX
 17268 ;;		_do_I2C_RX
 17269 ;;		_do_I2C_TX_EMPTY
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           
 17274                           ;psect for function _wr2RegCompleteHandler
 17275  0E21                     _wr2RegCompleteHandler:	
 17276  0E21                     i1l4343:	
 17277                           ;incstack = 0
 17278                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17279                           
 17280                           
 17281                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 17282  0E21  3002               	movlw	2
 17283  0E22  00F0               	movwf	i2c_setBuffer@bufferSize
 17284  0E23  3000               	movlw	0
 17285  0E24  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17286  0E25  0879               	movf	wr2RegCompleteHandler@p,w
 17287  0E26  318D  25F0  318E   	fcall	_i2c_setBuffer
 17288  0E29                     i1l4345:	
 17289                           
 17290                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17291  0E29  3000               	movlw	0
 17292  0E2A  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17293  0E2B  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17294  0E2C  01F7               	clrf	i2c_setDataCompleteCallback@p
 17295  0E2D  318D  259B  318E   	fcall	_i2c_setDataCompleteCallback
 17296  0E30                     i1l4347:	
 17297                           
 17298                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 17299  0E30  3004               	movlw	4
 17300  0E31                     i1l291:	
 17301  0E31  0008               	return
 17302  0E32                     __end_of_wr2RegCompleteHandler:	
 17303                           
 17304                           	psect	text78
 17305  0D9B                     __ptext78:	
 17306 ;; *************** function _i2c_setDataCompleteCallback *****************
 17307 ;; Defined at:
 17308 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17309 ;; Parameters:    Size  Location     Type
 17310 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17311 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17312 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17313 ;;  p               1    7[COMMON] PTR void 
 17314 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17315 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17316 ;; Auto vars:     Size  Location     Type
 17317 ;;		None
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  1    wreg      void 
 17320 ;; Registers used:
 17321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17322 ;; Tracked objects:
 17323 ;;		On entry : 0/0
 17324 ;;		On exit  : 0/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17327 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17331 ;;Total ram usage:        4 bytes
 17332 ;; Hardware stack levels used:    1
 17333 ;; Hardware stack levels required when called:    1
 17334 ;; This function calls:
 17335 ;;		_setCallBack
 17336 ;; This function is called by:
 17337 ;;		_wr1RegCompleteHandler
 17338 ;;		_rd1RegCompleteHandler
 17339 ;;		_rd2RegCompleteHandler
 17340 ;;		_wr2RegCompleteHandler
 17341 ;;		_rdBlkRegCompleteHandler
 17342 ;;		_i2c_write1ByteRegister
 17343 ;;		_i2c_read1ByteRegister
 17344 ;;		_i2c_read2ByteRegister
 17345 ;;		_i2c_write2ByteRegister
 17346 ;;		_i2c_readDataBlock
 17347 ;; This function uses a non-reentrant model
 17348 ;;
 17349                           
 17350                           
 17351                           ;psect for function _i2c_setDataCompleteCallback
 17352  0D9B                     _i2c_setDataCompleteCallback:	
 17353  0D9B                     i1l4141:	
 17354                           ;incstack = 0
 17355                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17356                           
 17357                           
 17358                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 17359  0D9B  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17360  0D9C  00F1               	movwf	setCallBack@cb+1
 17361  0D9D  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17362  0D9E  00F0               	movwf	setCallBack@cb
 17363  0D9F  0877               	movf	i2c_setDataCompleteCallback@p,w
 17364  0DA0  00F8               	movwf	??_i2c_setDataCompleteCallback
 17365  0DA1  0878               	movf	??_i2c_setDataCompleteCallback,w
 17366  0DA2  00F2               	movwf	setCallBack@p
 17367  0DA3  3000               	movlw	0
 17368  0DA4  3187  279C  318D   	fcall	_setCallBack
 17369  0DA7                     i1l73:	
 17370  0DA7  0008               	return
 17371  0DA8                     __end_of_i2c_setDataCompleteCallback:	
 17372                           
 17373                           	psect	text79
 17374  079C                     __ptext79:	
 17375 ;; *************** function _setCallBack *****************
 17376 ;; Defined at:
 17377 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17378 ;; Parameters:    Size  Location     Type
 17379 ;;  idx             1    wreg     enum E12740
 17380 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17381 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17382 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 17383 ;;  p               1    2[COMMON] PTR void 
 17384 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17385 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;  idx             1    4[COMMON] enum E12740
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1    wreg      void 
 17390 ;; Registers used:
 17391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        5 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_i2c_setDataCompleteCallback
 17407 ;;		_i2c_setWriteCollisionCallback
 17408 ;;		_i2c_setAddressNACKCallback
 17409 ;;		_i2c_setDataNACKCallback
 17410 ;;		_i2c_setTimeOutCallback
 17411 ;; This function uses a non-reentrant model
 17412 ;;
 17413                           
 17414                           
 17415                           ;psect for function _setCallBack
 17416  079C                     _setCallBack:	
 17417                           
 17418                           ;incstack = 0
 17419                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17420                           ;setCallBack@idx stored from wreg
 17421  079C  00F4               	movwf	setCallBack@idx
 17422  079D                     i1l4135:	
 17423                           
 17424                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 17425  079D  0870               	movf	setCallBack@cb,w
 17426  079E  0471               	iorwf	setCallBack@cb+1,w
 17427  079F  1903               	btfsc	3,2
 17428  07A0  2FA2               	goto	u164_21
 17429  07A1  2FA3               	goto	u164_20
 17430  07A2                     u164_21:	
 17431  07A2  2FB4               	goto	i1l4139
 17432  07A3                     u164_20:	
 17433  07A3                     i1l4137:	
 17434                           
 17435                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 17436  07A3  3574               	lslf	setCallBack@idx,w
 17437  07A4  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17438  07A5  0086               	movwf	6
 17439  07A6  0187               	clrf	7
 17440  07A7  0870               	movf	setCallBack@cb,w
 17441  07A8  3FC0               	movwi [0]fsr1
 17442  07A9  0871               	movf	setCallBack@cb+1,w
 17443  07AA  3FC1               	movwi [1]fsr1
 17444                           
 17445                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 17446  07AB  0872               	movf	setCallBack@p,w
 17447  07AC  00F3               	movwf	??_setCallBack
 17448  07AD  0874               	movf	setCallBack@idx,w
 17449  07AE  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17450  07AF  0086               	movwf	6
 17451  07B0  0187               	clrf	7
 17452  07B1  0873               	movf	??_setCallBack,w
 17453  07B2  0081               	movwf	1
 17454                           
 17455                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 17456  07B3  2FC1               	goto	i1l224
 17457  07B4                     i1l4139:	
 17458                           
 17459                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 17460  07B4  3574               	lslf	setCallBack@idx,w
 17461  07B5  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17462  07B6  0086               	movwf	6
 17463  07B7  0187               	clrf	7
 17464  07B8  3080               	movlw	low _returnStop
 17465  07B9  3FC0               	movwi [0]fsr1
 17466  07BA  300C               	movlw	high _returnStop
 17467  07BB  3FC1               	movwi [1]fsr1
 17468                           
 17469                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 17470  07BC  0874               	movf	setCallBack@idx,w
 17471  07BD  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17472  07BE  0086               	movwf	6
 17473  07BF  0187               	clrf	7
 17474  07C0  0181               	clrf	1
 17475  07C1                     i1l224:	
 17476  07C1  0008               	return
 17477  07C2                     __end_of_setCallBack:	
 17478                           
 17479                           	psect	text80
 17480  0DF0                     __ptext80:	
 17481 ;; *************** function _i2c_setBuffer *****************
 17482 ;; Defined at:
 17483 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;  buffer          1    wreg     PTR void 
 17486 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17487 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17488 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17489 ;;  bufferSize      2    0[COMMON] unsigned int 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;  buffer          1    3[COMMON] PTR void 
 17492 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17493 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17494 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  1    wreg      void 
 17497 ;; Registers used:
 17498 ;;		wreg
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/0
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17508 ;;Total ram usage:        4 bytes
 17509 ;; Hardware stack levels used:    1
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_wr1RegCompleteHandler
 17514 ;;		_rd1RegCompleteHandler
 17515 ;;		_rd2RegCompleteHandler
 17516 ;;		_wr2RegCompleteHandler
 17517 ;;		_rdBlkRegCompleteHandler
 17518 ;;		_i2c_write1ByteRegister
 17519 ;;		_i2c_writeNBytes
 17520 ;;		_i2c_read1ByteRegister
 17521 ;;		_i2c_read2ByteRegister
 17522 ;;		_i2c_write2ByteRegister
 17523 ;;		_i2c_readDataBlock
 17524 ;;		_i2c_readNBytes
 17525 ;; This function uses a non-reentrant model
 17526 ;;
 17527                           
 17528                           
 17529                           ;psect for function _i2c_setBuffer
 17530  0DF0                     _i2c_setBuffer:	
 17531                           
 17532                           ;incstack = 0
 17533                           ; Regs used in _i2c_setBuffer: [wreg]
 17534                           ;i2c_setBuffer@buffer stored from wreg
 17535  0DF0  00F3               	movwf	i2c_setBuffer@buffer
 17536  0DF1                     i1l4143:	
 17537                           
 17538                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 17539  0DF1  0021               	movlb	1	; select bank1
 17540  0DF2  1D20               	btfss	_i2c_status^(0+128),2
 17541  0DF3  2DF5               	goto	u165_21
 17542  0DF4  2DF6               	goto	u165_20
 17543  0DF5                     u165_21:	
 17544  0DF5  2DFF               	goto	i1l103
 17545  0DF6                     u165_20:	
 17546  0DF6                     i1l4145:	
 17547                           
 17548                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 17549  0DF6  0873               	movf	i2c_setBuffer@buffer,w
 17550  0DF7  00F2               	movwf	??_i2c_setBuffer
 17551  0DF8  0872               	movf	??_i2c_setBuffer,w
 17552  0DF9  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 17553                           
 17554                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 17555  0DFA  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17556  0DFB  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 17557  0DFC  0870               	movf	i2c_setBuffer@bufferSize,w
 17558  0DFD  00A3               	movwf	(_i2c_status^(0+128)+3)
 17559  0DFE                     i1l4147:	
 17560                           
 17561                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 17562  0DFE  1120               	bcf	_i2c_status^(0+128),2
 17563  0DFF                     i1l103:	
 17564  0DFF  0008               	return
 17565  0E00                     __end_of_i2c_setBuffer:	
 17566                           
 17567                           	psect	text81
 17568  0C88                     __ptext81:	
 17569 ;; *************** function _i2c1_driver_stop *****************
 17570 ;; Defined at:
 17571 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 17572 ;; Parameters:    Size  Location     Type
 17573 ;;		None
 17574 ;; Auto vars:     Size  Location     Type
 17575 ;;		None
 17576 ;; Return value:  Size  Location     Type
 17577 ;;                  1    wreg      void 
 17578 ;; Registers used:
 17579 ;;		None
 17580 ;; Tracked objects:
 17581 ;;		On entry : 0/0
 17582 ;;		On exit  : 0/0
 17583 ;;		Unchanged: 0/0
 17584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;Total ram usage:        0 bytes
 17590 ;; Hardware stack levels used:    1
 17591 ;; This function calls:
 17592 ;;		Nothing
 17593 ;; This function is called by:
 17594 ;;		_do_I2C_SEND_STOP
 17595 ;; This function uses a non-reentrant model
 17596 ;;
 17597                           
 17598                           
 17599                           ;psect for function _i2c1_driver_stop
 17600  0C88                     _i2c1_driver_stop:	
 17601  0C88                     i1l4151:	
 17602                           ;incstack = 0
 17603                           ; Regs used in _i2c1_driver_stop: []
 17604                           
 17605                           
 17606                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 17607  0C88  0023               	movlb	3	; select bank3
 17608  0C89  1511               	bsf	17,2	;volatile
 17609  0C8A                     i1l611:	
 17610  0C8A  0008               	return
 17611  0C8B                     __end_of_i2c1_driver_stop:	
 17612                           
 17613                           	psect	text82
 17614  0C85                     __ptext82:	
 17615 ;; *************** function _i2c1_driver_restart *****************
 17616 ;; Defined at:
 17617 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;		None
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;		None
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  1    wreg      void 
 17624 ;; Registers used:
 17625 ;;		None
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;Total ram usage:        0 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; This function calls:
 17638 ;;		Nothing
 17639 ;; This function is called by:
 17640 ;;		_do_I2C_SEND_RESTART_READ
 17641 ;;		_do_I2C_SEND_RESTART_WRITE
 17642 ;;		_do_I2C_SEND_RESTART
 17643 ;; This function uses a non-reentrant model
 17644 ;;
 17645                           
 17646                           
 17647                           ;psect for function _i2c1_driver_restart
 17648  0C85                     _i2c1_driver_restart:	
 17649  0C85                     i1l4149:	
 17650                           ;incstack = 0
 17651                           ; Regs used in _i2c1_driver_restart: []
 17652                           
 17653                           
 17654                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 17655  0C85  0023               	movlb	3	; select bank3
 17656  0C86  1491               	bsf	17,1	;volatile
 17657  0C87                     i1l608:	
 17658  0C87  0008               	return
 17659  0C88                     __end_of_i2c1_driver_restart:	
 17660                           
 17661                           	psect	text83
 17662  0C9D                     __ptext83:	
 17663 ;; *************** function _i2c1_driver_sendACK *****************
 17664 ;; Defined at:
 17665 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 17666 ;; Parameters:    Size  Location     Type
 17667 ;;		None
 17668 ;; Auto vars:     Size  Location     Type
 17669 ;;		None
 17670 ;; Return value:  Size  Location     Type
 17671 ;;                  1    wreg      void 
 17672 ;; Registers used:
 17673 ;;		None
 17674 ;; Tracked objects:
 17675 ;;		On entry : 0/0
 17676 ;;		On exit  : 0/0
 17677 ;;		Unchanged: 0/0
 17678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17683 ;;Total ram usage:        0 bytes
 17684 ;; Hardware stack levels used:    1
 17685 ;; This function calls:
 17686 ;;		Nothing
 17687 ;; This function is called by:
 17688 ;;		_do_I2C_DO_ACK
 17689 ;;		_do_I2C_RX
 17690 ;; This function uses a non-reentrant model
 17691 ;;
 17692                           
 17693                           
 17694                           ;psect for function _i2c1_driver_sendACK
 17695  0C9D                     _i2c1_driver_sendACK:	
 17696  0C9D                     i1l4287:	
 17697                           ;incstack = 0
 17698                           ; Regs used in _i2c1_driver_sendACK: []
 17699                           
 17700                           
 17701                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 17702  0C9D  0023               	movlb	3	; select bank3
 17703  0C9E  1291               	bcf	17,5	;volatile
 17704                           
 17705                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 17706  0C9F  1611               	bsf	17,4	;volatile
 17707  0CA0                     i1l635:	
 17708  0CA0  0008               	return
 17709  0CA1                     __end_of_i2c1_driver_sendACK:	
 17710                           
 17711                           	psect	text84
 17712  0DD2                     __ptext84:	
 17713 ;; *************** function _TMR2_ISR *****************
 17714 ;; Defined at:
 17715 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 17716 ;; Parameters:    Size  Location     Type
 17717 ;;		None
 17718 ;; Auto vars:     Size  Location     Type
 17719 ;;		None
 17720 ;; Return value:  Size  Location     Type
 17721 ;;                  1    wreg      void 
 17722 ;; Registers used:
 17723 ;;		wreg, status,2, status,0, pclath, cstack
 17724 ;; Tracked objects:
 17725 ;;		On entry : 0/0
 17726 ;;		On exit  : 0/0
 17727 ;;		Unchanged: 0/0
 17728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17733 ;;Total ram usage:        0 bytes
 17734 ;; Hardware stack levels used:    1
 17735 ;; Hardware stack levels required when called:    1
 17736 ;; This function calls:
 17737 ;;		Absolute function
 17738 ;;		_TMR2_DefaultInterruptHandler
 17739 ;;		_handler_clock_ms
 17740 ;; This function is called by:
 17741 ;;		_INTERRUPT_InterruptManager
 17742 ;; This function uses a non-reentrant model
 17743 ;;
 17744                           
 17745                           
 17746                           ;psect for function _TMR2_ISR
 17747  0DD2                     _TMR2_ISR:	
 17748  0DD2                     i1l5035:	
 17749                           ;incstack = 0
 17750                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17751                           
 17752                           
 17753                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 17754  0DD2  002E               	movlb	14	; select bank14
 17755  0DD3  1090               	bcf	16,1	;volatile
 17756  0DD4                     i1l5037:	
 17757                           
 17758                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 17759  0DD4  0021               	movlb	1	; select bank1
 17760  0DD5  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 17761  0DD6  044B               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 17762  0DD7  1903               	btfsc	3,2
 17763  0DD8  2DDA               	goto	u218_21
 17764  0DD9  2DDB               	goto	u218_20
 17765  0DDA                     u218_21:	
 17766  0DDA  2DE0               	goto	i1l1038
 17767  0DDB                     u218_20:	
 17768  0DDB                     i1l5039:	
 17769                           
 17770                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 17771  0DDB  084B               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 17772  0DDC  008A               	movwf	10
 17773  0DDD  084A               	movf	_TMR2_InterruptHandler^(0+128),w
 17774  0DDE  000A               	callw
 17775  0DDF  318D               	pagesel	$
 17776  0DE0                     i1l1038:	
 17777  0DE0  0008               	return
 17778  0DE1                     __end_of_TMR2_ISR:	
 17779                           
 17780                           	psect	text85
 17781  0C7C                     __ptext85:	
 17782 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17783 ;; Defined at:
 17784 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;		None
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;		None
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      void 
 17791 ;; Registers used:
 17792 ;;		None
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;Total ram usage:        0 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; This function calls:
 17805 ;;		Nothing
 17806 ;; This function is called by:
 17807 ;;		_TMR2_Initialize
 17808 ;;		_TMR2_ISR
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           
 17813                           ;psect for function _TMR2_DefaultInterruptHandler
 17814  0C7C                     _TMR2_DefaultInterruptHandler:	
 17815  0C7C                     i1l1044:	
 17816                           ;incstack = 0
 17817                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17818                           
 17819  0C7C  0008               	return
 17820  0C7D                     __end_of_TMR2_DefaultInterruptHandler:	
 17821                           
 17822                           	psect	text86
 17823  0CA9                     __ptext86:	
 17824 ;; *************** function _handler_clock_ms *****************
 17825 ;; Defined at:
 17826 ;;		line 473 in file "main.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;		None
 17829 ;; Auto vars:     Size  Location     Type
 17830 ;;		None
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  1    wreg      void 
 17833 ;; Registers used:
 17834 ;;		wreg, status,2, status,0
 17835 ;; Tracked objects:
 17836 ;;		On entry : 0/0
 17837 ;;		On exit  : 0/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17844 ;;Total ram usage:        1 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; This function calls:
 17847 ;;		Nothing
 17848 ;; This function is called by:
 17849 ;;		_main
 17850 ;;		_TMR2_ISR
 17851 ;; This function uses a non-reentrant model
 17852 ;;
 17853                           
 17854                           
 17855                           ;psect for function _handler_clock_ms
 17856  0CA9                     _handler_clock_ms:	
 17857  0CA9                     i1l4907:	
 17858                           ;incstack = 0
 17859                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 17860                           
 17861                           
 17862                           ;main.c: 474:     clkms++;
 17863  0CA9  3001               	movlw	1
 17864  0CAA  00F0               	movwf	??_handler_clock_ms
 17865  0CAB  0870               	movf	??_handler_clock_ms,w
 17866  0CAC  07FD               	addwf	_clkms,f	;volatile
 17867  0CAD                     i1l1319:	
 17868                           ;main.c: 476:     if(clkms > 300){
 17869                           
 17870  0CAD  0008               	return
 17871  0CAE                     __end_of_handler_clock_ms:	
 17872                           
 17873                           	psect	text87
 17874  0EBC                     __ptext87:	
 17875 ;; *************** function _TMR1_ISR *****************
 17876 ;; Defined at:
 17877 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17878 ;; Parameters:    Size  Location     Type
 17879 ;;		None
 17880 ;; Auto vars:     Size  Location     Type
 17881 ;;		None
 17882 ;; Return value:  Size  Location     Type
 17883 ;;                  1    wreg      void 
 17884 ;; Registers used:
 17885 ;;		wreg, status,2, status,0, pclath, cstack
 17886 ;; Tracked objects:
 17887 ;;		On entry : 0/0
 17888 ;;		On exit  : 0/0
 17889 ;;		Unchanged: 0/0
 17890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17895 ;;Total ram usage:        0 bytes
 17896 ;; Hardware stack levels used:    1
 17897 ;; Hardware stack levels required when called:    1
 17898 ;; This function calls:
 17899 ;;		Absolute function
 17900 ;;		_TMR1_DefaultInterruptHandler
 17901 ;;		_TMR1_WriteTimer
 17902 ;;		_handler_clock_hms
 17903 ;; This function is called by:
 17904 ;;		_INTERRUPT_InterruptManager
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           
 17909                           ;psect for function _TMR1_ISR
 17910  0EBC                     _TMR1_ISR:	
 17911  0EBC                     i1l5027:	
 17912                           ;incstack = 0
 17913                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17914                           
 17915                           
 17916                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 17917  0EBC  002E               	movlb	14	; select bank14
 17918  0EBD  1010               	bcf	16,0	;volatile
 17919  0EBE                     i1l5029:	
 17920                           
 17921                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 17922  0EBE  0020               	movlb	0	; select bank0
 17923  0EBF  0867               	movf	_timer1ReloadVal+1,w	;volatile
 17924  0EC0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17925  0EC1  0866               	movf	_timer1ReloadVal,w	;volatile
 17926  0EC2  00F0               	movwf	TMR1_WriteTimer@timerVal
 17927  0EC3  318E  2610  318E   	fcall	_TMR1_WriteTimer
 17928  0EC6                     i1l5031:	
 17929                           
 17930                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 17931  0EC6  0020               	movlb	0	; select bank0
 17932  0EC7  0864               	movf	_TMR1_InterruptHandler,w
 17933  0EC8  0465               	iorwf	_TMR1_InterruptHandler+1,w
 17934  0EC9  1903               	btfsc	3,2
 17935  0ECA  2ECC               	goto	u217_21
 17936  0ECB  2ECD               	goto	u217_20
 17937  0ECC                     u217_21:	
 17938  0ECC  2ED2               	goto	i1l896
 17939  0ECD                     u217_20:	
 17940  0ECD                     i1l5033:	
 17941                           
 17942                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 17943  0ECD  0865               	movf	_TMR1_InterruptHandler+1,w
 17944  0ECE  008A               	movwf	10
 17945  0ECF  0864               	movf	_TMR1_InterruptHandler,w
 17946  0ED0  000A               	callw
 17947  0ED1  318E               	pagesel	$
 17948  0ED2                     i1l896:	
 17949  0ED2  0008               	return
 17950  0ED3                     __end_of_TMR1_ISR:	
 17951                           
 17952                           	psect	text88
 17953  0C7B                     __ptext88:	
 17954 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17955 ;; Defined at:
 17956 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;		None
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;		None
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  1    wreg      void 
 17963 ;; Registers used:
 17964 ;;		None
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17974 ;;Total ram usage:        0 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; This function calls:
 17977 ;;		Nothing
 17978 ;; This function is called by:
 17979 ;;		_TMR1_Initialize
 17980 ;;		_TMR1_ISR
 17981 ;; This function uses a non-reentrant model
 17982 ;;
 17983                           
 17984                           
 17985                           ;psect for function _TMR1_DefaultInterruptHandler
 17986  0C7B                     _TMR1_DefaultInterruptHandler:	
 17987  0C7B                     i1l902:	
 17988                           ;incstack = 0
 17989                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17990                           
 17991  0C7B  0008               	return
 17992  0C7C                     __end_of_TMR1_DefaultInterruptHandler:	
 17993                           
 17994                           	psect	text89
 17995  06AE                     __ptext89:	
 17996 ;; *************** function _handler_clock_hms *****************
 17997 ;; Defined at:
 17998 ;;		line 454 in file "main.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;		None
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;		None
 18003 ;; Return value:  Size  Location     Type
 18004 ;;                  1    wreg      void 
 18005 ;; Registers used:
 18006 ;;		wreg, status,2, status,0
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;Total ram usage:        1 bytes
 18017 ;; Hardware stack levels used:    1
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_main
 18022 ;;		_TMR1_ISR
 18023 ;; This function uses a non-reentrant model
 18024 ;;
 18025                           
 18026                           
 18027                           ;psect for function _handler_clock_hms
 18028  06AE                     _handler_clock_hms:	
 18029  06AE                     i1l4887:	
 18030                           ;incstack = 0
 18031                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 18032                           
 18033                           
 18034                           ;main.c: 456:     if(!config_mode){
 18035  06AE  0020               	movlb	0	; select bank0
 18036  06AF  0839               	movf	_config_mode,w	;volatile
 18037  06B0  1D03               	btfss	3,2
 18038  06B1  2EB3               	goto	u203_21
 18039  06B2  2EB4               	goto	u203_20
 18040  06B3                     u203_21:	
 18041  06B3  2EBF               	goto	i1l4891
 18042  06B4                     u203_20:	
 18043  06B4                     i1l4889:	
 18044  06B4  1003               	clrc
 18045  06B5  1F96               	btfss	22,7	;volatile
 18046  06B6  1403               	setc
 18047  06B7  1803               	btfsc	3,0
 18048  06B8  2EBA               	goto	u204_21
 18049  06B9  2EBD               	goto	u204_20
 18050  06BA                     u204_21:	
 18051  06BA  0020               	movlb	0	; select bank0
 18052  06BB  1796               	bsf	22,7	;volatile
 18053  06BC  2EBF               	goto	u205_24
 18054  06BD                     u204_20:	
 18055  06BD  0020               	movlb	0	; select bank0
 18056  06BE  1396               	bcf	22,7	;volatile
 18057  06BF                     u205_24:	
 18058  06BF                     i1l4891:	
 18059                           
 18060                           ;main.c: 460:     last5s++;
 18061  06BF  3001               	movlw	1
 18062  06C0  00F0               	movwf	??_handler_clock_hms
 18063  06C1  0870               	movf	??_handler_clock_hms,w
 18064  06C2  07BC               	addwf	_last5s,f	;volatile
 18065  06C3                     i1l4893:	
 18066                           
 18067                           ;main.c: 461:     seg++;
 18068  06C3  3001               	movlw	1
 18069  06C4  00F0               	movwf	??_handler_clock_hms
 18070  06C5  0870               	movf	??_handler_clock_hms,w
 18071  06C6  07BF               	addwf	_seg,f	;volatile
 18072  06C7                     i1l4895:	
 18073                           
 18074                           ;main.c: 462:     if(seg >= 60) {
 18075  06C7  303C               	movlw	60
 18076  06C8  023F               	subwf	_seg,w	;volatile
 18077  06C9  1C03               	skipc
 18078  06CA  2ECC               	goto	u206_21
 18079  06CB  2ECD               	goto	u206_20
 18080  06CC                     u206_21:	
 18081  06CC  2EE1               	goto	i1l1315
 18082  06CD                     u206_20:	
 18083  06CD                     i1l4897:	
 18084                           
 18085                           ;main.c: 463:         clkm++;
 18086  06CD  3001               	movlw	1
 18087  06CE  00F0               	movwf	??_handler_clock_hms
 18088  06CF  0870               	movf	??_handler_clock_hms,w
 18089  06D0  07C0               	addwf	_clkm,f	;volatile
 18090                           
 18091                           ;main.c: 464:         last1m++;
 18092  06D1  3001               	movlw	1
 18093  06D2  00F0               	movwf	??_handler_clock_hms
 18094  06D3  0870               	movf	??_handler_clock_hms,w
 18095  06D4  07BB               	addwf	_last1m,f	;volatile
 18096  06D5                     i1l4899:	
 18097                           
 18098                           ;main.c: 465:         seg = 0;
 18099  06D5  01BF               	clrf	_seg	;volatile
 18100  06D6                     i1l4901:	
 18101                           
 18102                           ;main.c: 466:         if(clkm >= 60) {
 18103  06D6  303C               	movlw	60
 18104  06D7  0240               	subwf	_clkm,w	;volatile
 18105  06D8  1C03               	skipc
 18106  06D9  2EDB               	goto	u207_21
 18107  06DA  2EDC               	goto	u207_20
 18108  06DB                     u207_21:	
 18109  06DB  2EE1               	goto	i1l1315
 18110  06DC                     u207_20:	
 18111  06DC                     i1l4903:	
 18112                           
 18113                           ;main.c: 467:             clkh++;
 18114  06DC  3001               	movlw	1
 18115  06DD  00F0               	movwf	??_handler_clock_hms
 18116  06DE  0870               	movf	??_handler_clock_hms,w
 18117  06DF  07C1               	addwf	_clkh,f	;volatile
 18118  06E0                     i1l4905:	
 18119                           
 18120                           ;main.c: 468:             clkm = 0;
 18121  06E0  01C0               	clrf	_clkm	;volatile
 18122  06E1                     i1l1315:	
 18123  06E1  0008               	return
 18124  06E2                     __end_of_handler_clock_hms:	
 18125                           
 18126                           	psect	text90
 18127  0E10                     __ptext90:	
 18128 ;; *************** function _TMR1_WriteTimer *****************
 18129 ;; Defined at:
 18130 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 18131 ;; Parameters:    Size  Location     Type
 18132 ;;  timerVal        2    0[COMMON] unsigned short 
 18133 ;; Auto vars:     Size  Location     Type
 18134 ;;		None
 18135 ;; Return value:  Size  Location     Type
 18136 ;;                  1    wreg      void 
 18137 ;; Registers used:
 18138 ;;		wreg, status,2
 18139 ;; Tracked objects:
 18140 ;;		On entry : 0/0
 18141 ;;		On exit  : 0/0
 18142 ;;		Unchanged: 0/0
 18143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18148 ;;Total ram usage:        2 bytes
 18149 ;; Hardware stack levels used:    1
 18150 ;; This function calls:
 18151 ;;		Nothing
 18152 ;; This function is called by:
 18153 ;;		_TMR1_ISR
 18154 ;;		_TMR1_Reload
 18155 ;; This function uses a non-reentrant model
 18156 ;;
 18157                           
 18158                           
 18159                           ;psect for function _TMR1_WriteTimer
 18160  0E10                     _TMR1_WriteTimer:	
 18161  0E10                     i1l4791:	
 18162                           ;incstack = 0
 18163                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 18164                           
 18165                           
 18166                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 18167  0E10  0024               	movlb	4	; select bank4
 18168  0E11  1D0E               	btfss	14,2	;volatile
 18169  0E12  2E14               	goto	u196_21
 18170  0E13  2E15               	goto	u196_20
 18171  0E14                     u196_21:	
 18172  0E14  2E1C               	goto	i1l4801
 18173  0E15                     u196_20:	
 18174  0E15                     i1l4793:	
 18175                           
 18176                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 18177  0E15  100E               	bcf	14,0	;volatile
 18178  0E16                     i1l4795:	
 18179                           
 18180                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 18181  0E16  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18182  0E17  008D               	movwf	13	;volatile
 18183  0E18                     i1l4797:	
 18184                           
 18185                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 18186  0E18  0870               	movf	TMR1_WriteTimer@timerVal,w
 18187  0E19  008C               	movwf	12	;volatile
 18188  0E1A                     i1l4799:	
 18189                           
 18190                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 18191  0E1A  140E               	bsf	14,0	;volatile
 18192                           
 18193                           ;mcc_generated_files/tmr1.c: 140:     }
 18194  0E1B  2E20               	goto	i1l883
 18195  0E1C                     i1l4801:	
 18196                           
 18197                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 18198  0E1C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18199  0E1D  008D               	movwf	13	;volatile
 18200  0E1E                     i1l4803:	
 18201                           
 18202                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 18203  0E1E  0870               	movf	TMR1_WriteTimer@timerVal,w
 18204  0E1F  008C               	movwf	12	;volatile
 18205  0E20                     i1l883:	
 18206  0E20  0008               	return
 18207  0E21                     __end_of_TMR1_WriteTimer:	
 18208                           
 18209                           	psect	text91
 18210  0DC3                     __ptext91:	
 18211 ;; *************** function _TMR0_ISR *****************
 18212 ;; Defined at:
 18213 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 18214 ;; Parameters:    Size  Location     Type
 18215 ;;		None
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;		None
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  1    wreg      void 
 18220 ;; Registers used:
 18221 ;;		wreg, status,2, status,0, pclath, cstack
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18231 ;;Total ram usage:        0 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    2
 18234 ;; This function calls:
 18235 ;;		Absolute function
 18236 ;;		_ISR_3s
 18237 ;;		_TMR0_DefaultInterruptHandler
 18238 ;; This function is called by:
 18239 ;;		_INTERRUPT_InterruptManager
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           
 18244                           ;psect for function _TMR0_ISR
 18245  0DC3                     _TMR0_ISR:	
 18246  0DC3                     i1l5021:	
 18247                           ;incstack = 0
 18248                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18249                           
 18250                           
 18251                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 18252  0DC3  002E               	movlb	14	; select bank14
 18253  0DC4  128C               	bcf	12,5	;volatile
 18254  0DC5                     i1l5023:	
 18255                           
 18256                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 18257  0DC5  0021               	movlb	1	; select bank1
 18258  0DC6  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 18259  0DC7  0449               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 18260  0DC8  1903               	btfsc	3,2
 18261  0DC9  2DCB               	goto	u216_21
 18262  0DCA  2DCC               	goto	u216_20
 18263  0DCB                     u216_21:	
 18264  0DCB  2DD1               	goto	i1l1619
 18265  0DCC                     u216_20:	
 18266  0DCC                     i1l5025:	
 18267                           
 18268                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 18269  0DCC  0849               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 18270  0DCD  008A               	movwf	10
 18271  0DCE  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 18272  0DCF  000A               	callw
 18273  0DD0  318D               	pagesel	$
 18274  0DD1                     i1l1619:	
 18275  0DD1  0008               	return
 18276  0DD2                     __end_of_TMR0_ISR:	
 18277                           
 18278                           	psect	text92
 18279  0F03                     __ptext92:	
 18280 ;; *************** function _ISR_3s *****************
 18281 ;; Defined at:
 18282 ;;		line 131 in file "main.c"
 18283 ;; Parameters:    Size  Location     Type
 18284 ;;		None
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;		None
 18287 ;; Return value:  Size  Location     Type
 18288 ;;                  1    wreg      void 
 18289 ;; Registers used:
 18290 ;;		wreg, status,2, status,0, pclath, cstack
 18291 ;; Tracked objects:
 18292 ;;		On entry : 0/0
 18293 ;;		On exit  : 0/0
 18294 ;;		Unchanged: 0/0
 18295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;Total ram usage:        1 bytes
 18301 ;; Hardware stack levels used:    1
 18302 ;; Hardware stack levels required when called:    1
 18303 ;; This function calls:
 18304 ;;		_TMR0_StopTimer
 18305 ;;		i1_PWM6_LoadDutyValue
 18306 ;; This function is called by:
 18307 ;;		_main
 18308 ;;		_TMR0_ISR
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           
 18313                           ;psect for function _ISR_3s
 18314  0F03                     _ISR_3s:	
 18315  0F03                     i1l4805:	
 18316                           ;incstack = 0
 18317                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 18318                           
 18319                           
 18320                           ;main.c: 133:     if (lum_threshold){
 18321  0F03  0020               	movlb	0	; select bank0
 18322  0F04  0820               	movf	_lum_threshold,w
 18323  0F05  0421               	iorwf	_lum_threshold+1,w
 18324  0F06  1903               	btfsc	3,2
 18325  0F07  2F09               	goto	u197_21
 18326  0F08  2F0A               	goto	u197_20
 18327  0F09                     u197_21:	
 18328  0F09  2F16               	goto	i1l1205
 18329  0F0A                     u197_20:	
 18330  0F0A                     i1l4807:	
 18331                           
 18332                           ;main.c: 134:         PWM6_LoadDutyValue(1023);
 18333  0F0A  30FF               	movlw	255
 18334  0F0B  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18335  0F0C  3003               	movlw	3
 18336  0F0D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18337  0F0E  318E  267A  318F   	fcall	i1_PWM6_LoadDutyValue
 18338  0F11                     i1l4809:	
 18339                           
 18340                           ;main.c: 135:         alarm = 1;
 18341  0F11  3001               	movlw	1
 18342  0F12  00F4               	movwf	??_ISR_3s
 18343  0F13  0874               	movf	??_ISR_3s,w
 18344  0F14  0020               	movlb	0	; select bank0
 18345  0F15  00B8               	movwf	_alarm	;volatile
 18346  0F16                     i1l1205:	
 18347                           ;main.c: 137:     }
 18348                           
 18349                           
 18350                           ;main.c: 139:     TMR0_StopTimer();
 18351  0F16  318C  2482  318F   	fcall	_TMR0_StopTimer
 18352  0F19                     i1l4811:	
 18353                           
 18354                           ;main.c: 140:     PIE0bits.TMR0IE = 0;
 18355  0F19  002E               	movlb	14	; select bank14
 18356  0F1A  1296               	bcf	22,5	;volatile
 18357  0F1B                     i1l1206:	
 18358  0F1B  0008               	return
 18359  0F1C                     __end_of_ISR_3s:	
 18360                           
 18361                           	psect	text93
 18362  0C7A                     __ptext93:	
 18363 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18364 ;; Defined at:
 18365 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;		None
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;		None
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  1    wreg      void 
 18372 ;; Registers used:
 18373 ;;		None
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18383 ;;Total ram usage:        0 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_TMR0_Initialize
 18389 ;;		_TMR0_ISR
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           
 18394                           ;psect for function _TMR0_DefaultInterruptHandler
 18395  0C7A                     _TMR0_DefaultInterruptHandler:	
 18396  0C7A                     i1l1625:	
 18397                           ;incstack = 0
 18398                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18399                           
 18400  0C7A  0008               	return
 18401  0C7B                     __end_of_TMR0_DefaultInterruptHandler:	
 18402                           
 18403                           	psect	text94
 18404  0C82                     __ptext94:	
 18405 ;; *************** function _TMR0_StopTimer *****************
 18406 ;; Defined at:
 18407 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;		None
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;		None
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		None
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_ISR_3s
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           
 18435                           ;psect for function _TMR0_StopTimer
 18436  0C82                     _TMR0_StopTimer:	
 18437  0C82                     i1l4399:	
 18438                           ;incstack = 0
 18439                           ; Regs used in _TMR0_StopTimer: []
 18440                           
 18441                           
 18442                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 18443  0C82  0020               	movlb	0	; select bank0
 18444  0C83  139E               	bcf	30,7	;volatile
 18445  0C84                     i1l1606:	
 18446  0C84  0008               	return
 18447  0C85                     __end_of_TMR0_StopTimer:	
 18448                           
 18449                           	psect	text95
 18450  0CDB                     __ptext95:	
 18451 ;; *************** function _INT_ISR *****************
 18452 ;; Defined at:
 18453 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;		None
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;		None
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  1    wreg      void 
 18460 ;; Registers used:
 18461 ;;		wreg, status,2, status,0, pclath, cstack
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18471 ;;Total ram usage:        0 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:    3
 18474 ;; This function calls:
 18475 ;;		_INT_CallBack
 18476 ;; This function is called by:
 18477 ;;		_INTERRUPT_InterruptManager
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           
 18482                           ;psect for function _INT_ISR
 18483  0CDB                     _INT_ISR:	
 18484  0CDB                     i1l5017:	
 18485                           ;incstack = 0
 18486                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18487                           
 18488                           
 18489                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 18490  0CDB  002E               	movlb	14	; select bank14
 18491  0CDC  100C               	bcf	12,0	;volatile
 18492  0CDD                     i1l5019:	
 18493                           
 18494                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 18495  0CDD  318D  258E  318C   	fcall	_INT_CallBack
 18496  0CE0                     i1l334:	
 18497  0CE0  0008               	return
 18498  0CE1                     __end_of_INT_ISR:	
 18499                           
 18500                           	psect	text96
 18501  0D8E                     __ptext96:	
 18502 ;; *************** function _INT_CallBack *****************
 18503 ;; Defined at:
 18504 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;		None
 18507 ;; Auto vars:     Size  Location     Type
 18508 ;;		None
 18509 ;; Return value:  Size  Location     Type
 18510 ;;                  1    wreg      void 
 18511 ;; Registers used:
 18512 ;;		wreg, status,2, status,0, pclath, cstack
 18513 ;; Tracked objects:
 18514 ;;		On entry : 0/0
 18515 ;;		On exit  : 0/0
 18516 ;;		Unchanged: 0/0
 18517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;Total ram usage:        0 bytes
 18523 ;; Hardware stack levels used:    1
 18524 ;; Hardware stack levels required when called:    2
 18525 ;; This function calls:
 18526 ;;		Absolute function
 18527 ;;		_INT_DefaultInterruptHandler
 18528 ;;		_sw1_EXT
 18529 ;; This function is called by:
 18530 ;;		_INT_ISR
 18531 ;; This function uses a non-reentrant model
 18532 ;;
 18533                           
 18534                           
 18535                           ;psect for function _INT_CallBack
 18536  0D8E                     _INT_CallBack:	
 18537  0D8E                     i1l4649:	
 18538                           ;incstack = 0
 18539                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18540                           
 18541                           
 18542                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 18543  0D8E  0020               	movlb	0	; select bank0
 18544  0D8F  0868               	movf	_INT_InterruptHandler,w
 18545  0D90  0469               	iorwf	_INT_InterruptHandler+1,w
 18546  0D91  1903               	btfsc	3,2
 18547  0D92  2D94               	goto	u195_21
 18548  0D93  2D95               	goto	u195_20
 18549  0D94                     u195_21:	
 18550  0D94  2D9A               	goto	i1l338
 18551  0D95                     u195_20:	
 18552  0D95                     i1l4651:	
 18553                           
 18554                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 18555  0D95  0869               	movf	_INT_InterruptHandler+1,w
 18556  0D96  008A               	movwf	10
 18557  0D97  0868               	movf	_INT_InterruptHandler,w
 18558  0D98  000A               	callw
 18559  0D99  318D               	pagesel	$
 18560  0D9A                     i1l338:	
 18561  0D9A  0008               	return
 18562  0D9B                     __end_of_INT_CallBack:	
 18563                           
 18564                           	psect	text97
 18565  0C79                     __ptext97:	
 18566 ;; *************** function _INT_DefaultInterruptHandler *****************
 18567 ;; Defined at:
 18568 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18569 ;; Parameters:    Size  Location     Type
 18570 ;;		None
 18571 ;; Auto vars:     Size  Location     Type
 18572 ;;		None
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      void 
 18575 ;; Registers used:
 18576 ;;		None
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18586 ;;Total ram usage:        0 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; This function calls:
 18589 ;;		Nothing
 18590 ;; This function is called by:
 18591 ;;		_EXT_INT_Initialize
 18592 ;;		_INT_CallBack
 18593 ;; This function uses a non-reentrant model
 18594 ;;
 18595                           
 18596                           
 18597                           ;psect for function _INT_DefaultInterruptHandler
 18598  0C79                     _INT_DefaultInterruptHandler:	
 18599  0C79                     i1l344:	
 18600                           ;incstack = 0
 18601                           ; Regs used in _INT_DefaultInterruptHandler: []
 18602                           
 18603  0C79  0008               	return
 18604  0C7A                     __end_of_INT_DefaultInterruptHandler:	
 18605                           
 18606                           	psect	text98
 18607  0715                     __ptext98:	
 18608 ;; *************** function _sw1_EXT *****************
 18609 ;; Defined at:
 18610 ;;		line 99 in file "main.c"
 18611 ;; Parameters:    Size  Location     Type
 18612 ;;		None
 18613 ;; Auto vars:     Size  Location     Type
 18614 ;;		None
 18615 ;; Return value:  Size  Location     Type
 18616 ;;                  1    wreg      void 
 18617 ;; Registers used:
 18618 ;;		wreg, status,2, status,0, pclath, cstack
 18619 ;; Tracked objects:
 18620 ;;		On entry : 0/0
 18621 ;;		On exit  : 0/0
 18622 ;;		Unchanged: 0/0
 18623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18628 ;;Total ram usage:        1 bytes
 18629 ;; Hardware stack levels used:    1
 18630 ;; Hardware stack levels required when called:    1
 18631 ;; This function calls:
 18632 ;;		i1_PWM6_LoadDutyValue
 18633 ;;		i1_checkDebounceSW1
 18634 ;; This function is called by:
 18635 ;;		_main
 18636 ;;		_INT_CallBack
 18637 ;; This function uses a non-reentrant model
 18638 ;;
 18639                           
 18640                           
 18641                           ;psect for function _sw1_EXT
 18642  0715                     _sw1_EXT:	
 18643  0715                     i1l4383:	
 18644                           ;incstack = 0
 18645                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 18646                           
 18647                           
 18648                           ;main.c: 102:     if(checkDebounceSW1()){
 18649  0715  3184  245A  3187   	fcall	i1_checkDebounceSW1
 18650  0718  3A00               	xorlw	0
 18651  0719  1903               	skipnz
 18652  071A  2F1C               	goto	u179_21
 18653  071B  2F1D               	goto	u179_20
 18654  071C                     u179_21:	
 18655  071C  2F42               	goto	i1l1202
 18656  071D                     u179_20:	
 18657  071D                     i1l4385:	
 18658                           
 18659                           ;main.c: 103:         if (alarm == 1){
 18660  071D  0020               	movlb	0	; select bank0
 18661  071E  0338               	decf	_alarm,w	;volatile
 18662  071F  1D03               	btfss	3,2
 18663  0720  2F22               	goto	u180_21
 18664  0721  2F23               	goto	u180_20
 18665  0722                     u180_21:	
 18666  0722  2F31               	goto	i1l1196
 18667  0723                     u180_20:	
 18668  0723                     i1l4387:	
 18669                           
 18670                           ;main.c: 104:             alarm = 0;
 18671  0723  01B8               	clrf	_alarm	;volatile
 18672  0724                     i1l4389:	
 18673  0724  1316               	bcf	22,6	;volatile
 18674  0725                     i1l4391:	
 18675                           
 18676                           ;main.c: 106:             PWM6_LoadDutyValue(0);
 18677  0725  3000               	movlw	0
 18678  0726  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18679  0727  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18680  0728  318E  267A  3187   	fcall	i1_PWM6_LoadDutyValue
 18681  072B                     i1l4393:	
 18682                           
 18683                           ;main.c: 107:             last_ms = clkms;
 18684  072B  087D               	movf	_clkms,w	;volatile
 18685  072C  00F7               	movwf	??_sw1_EXT
 18686  072D  0877               	movf	??_sw1_EXT,w
 18687  072E  0020               	movlb	0	; select bank0
 18688  072F  00BE               	movwf	_last_ms
 18689                           
 18690                           ;main.c: 108:         }
 18691  0730  2F3E               	goto	i1l1199
 18692  0731                     i1l1196:	
 18693                           ;main.c: 109:         else{
 18694                           
 18695                           
 18696                           ;main.c: 110:             if(!PORTBbits.RB4){
 18697  0731  1A0D               	btfsc	13,4	;volatile
 18698  0732  2F34               	goto	u181_21
 18699  0733  2F35               	goto	u181_20
 18700  0734                     u181_21:	
 18701  0734  2F3E               	goto	i1l1199
 18702  0735                     u181_20:	
 18703  0735                     i1l4395:	
 18704                           
 18705                           ;main.c: 112:                 if(config_mode == 0){
 18706  0735  0839               	movf	_config_mode,w	;volatile
 18707  0736  1D03               	btfss	3,2
 18708  0737  2F39               	goto	u182_21
 18709  0738  2F3A               	goto	u182_20
 18710  0739                     u182_21:	
 18711  0739  2F3E               	goto	i1l1199
 18712  073A                     u182_20:	
 18713  073A                     i1l4397:	
 18714                           
 18715                           ;main.c: 113:                     config_mode = 1;
 18716  073A  3001               	movlw	1
 18717  073B  00F7               	movwf	??_sw1_EXT
 18718  073C  0877               	movf	??_sw1_EXT,w
 18719  073D  00B9               	movwf	_config_mode	;volatile
 18720  073E                     i1l1199:	
 18721                           ;main.c: 119:             }
 18722                           
 18723                           
 18724                           ;main.c: 120:             last_ms = clkms;
 18725  073E  087D               	movf	_clkms,w	;volatile
 18726  073F  00F7               	movwf	??_sw1_EXT
 18727  0740  0877               	movf	??_sw1_EXT,w
 18728  0741  00BE               	movwf	_last_ms
 18729  0742                     i1l1202:	
 18730  0742  0008               	return
 18731  0743                     __end_of_sw1_EXT:	
 18732                           
 18733                           	psect	text99
 18734  045A                     __ptext99:	
 18735 ;; *************** function i1_checkDebounceSW1 *****************
 18736 ;; Defined at:
 18737 ;;		line 511 in file "main.c"
 18738 ;; Parameters:    Size  Location     Type
 18739 ;;		None
 18740 ;; Auto vars:     Size  Location     Type
 18741 ;;		None
 18742 ;; Return value:  Size  Location     Type
 18743 ;;                  1    wreg      unsigned char 
 18744 ;; Registers used:
 18745 ;;		wreg, status,2, status,0
 18746 ;; Tracked objects:
 18747 ;;		On entry : 0/0
 18748 ;;		On exit  : 0/0
 18749 ;;		Unchanged: 0/0
 18750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18753 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18754 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18755 ;;Total ram usage:        7 bytes
 18756 ;; Hardware stack levels used:    1
 18757 ;; This function calls:
 18758 ;;		Nothing
 18759 ;; This function is called by:
 18760 ;;		_sw1_EXT
 18761 ;; This function uses a non-reentrant model
 18762 ;;
 18763                           
 18764                           
 18765                           ;psect for function i1_checkDebounceSW1
 18766  045A                     i1_checkDebounceSW1:	
 18767  045A                     i1l4221:	
 18768                           ;incstack = 0
 18769                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 18770                           
 18771                           
 18772                           ;main.c: 512:    PIE4bits.TMR1IE = 0;
 18773  045A  002E               	movlb	14	; select bank14
 18774  045B  101A               	bcf	26,0	;volatile
 18775  045C                     i1l4223:	
 18776                           
 18777                           ;main.c: 514:     if(clkms - last_ms < 0){
 18778  045C  087D               	movf	_clkms,w	;volatile
 18779  045D  00F0               	movwf	??i1_checkDebounceSW1
 18780  045E  01F1               	clrf	??i1_checkDebounceSW1+1
 18781  045F  0871               	movf	??i1_checkDebounceSW1+1,w
 18782  0460  00F3               	movwf	??i1_checkDebounceSW1+3
 18783  0461  0020               	movlb	0	; select bank0
 18784  0462  083E               	movf	_last_ms,w
 18785  0463  0270               	subwf	??i1_checkDebounceSW1,w
 18786  0464  00F2               	movwf	??i1_checkDebounceSW1+2
 18787  0465  1C03               	skipc
 18788  0466  03F3               	decf	??i1_checkDebounceSW1+3,f
 18789  0467  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 18790  0468  2C6A               	goto	u174_21
 18791  0469  2C6B               	goto	u174_20
 18792  046A                     u174_21:	
 18793  046A  2C91               	goto	i1l4233
 18794  046B                     u174_20:	
 18795  046B                     i1l4225:	
 18796                           
 18797                           ;main.c: 516:         if ((300 - last_ms)+ clkms > 2 ){
 18798  046B  087D               	movf	_clkms,w	;volatile
 18799  046C  00F0               	movwf	??i1_checkDebounceSW1
 18800  046D  01F1               	clrf	??i1_checkDebounceSW1+1
 18801  046E  0871               	movf	??i1_checkDebounceSW1+1,w
 18802  046F  00F3               	movwf	??i1_checkDebounceSW1+3
 18803  0470  083E               	movf	_last_ms,w
 18804  0471  0270               	subwf	??i1_checkDebounceSW1,w
 18805  0472  00F2               	movwf	??i1_checkDebounceSW1+2
 18806  0473  1C03               	skipc
 18807  0474  03F3               	decf	??i1_checkDebounceSW1+3,f
 18808  0475  0872               	movf	??i1_checkDebounceSW1+2,w
 18809  0476  3E2C               	addlw	44
 18810  0477  00F4               	movwf	??i1_checkDebounceSW1+4
 18811  0478  3001               	movlw	1
 18812  0479  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 18813  047A  00F5               	movwf	??i1_checkDebounceSW1+5
 18814  047B  0875               	movf	??i1_checkDebounceSW1+5,w
 18815  047C  3A80               	xorlw	128
 18816  047D  00F6               	movwf	??i1_checkDebounceSW1+6
 18817  047E  3080               	movlw	128
 18818  047F  0276               	subwf	??i1_checkDebounceSW1+6,w
 18819  0480  1D03               	skipz
 18820  0481  2C84               	goto	u175_25
 18821  0482  3003               	movlw	3
 18822  0483  0274               	subwf	??i1_checkDebounceSW1+4,w
 18823  0484                     u175_25:	
 18824  0484  1C03               	skipc
 18825  0485  2C87               	goto	u175_21
 18826  0486  2C88               	goto	u175_20
 18827  0487                     u175_21:	
 18828  0487  2C91               	goto	i1l4233
 18829  0488                     u175_20:	
 18830  0488                     i1l4227:	
 18831                           
 18832                           ;main.c: 517:             last_ms = clkms;
 18833  0488  087D               	movf	_clkms,w	;volatile
 18834  0489  00F0               	movwf	??i1_checkDebounceSW1
 18835  048A  0870               	movf	??i1_checkDebounceSW1,w
 18836  048B  0020               	movlb	0	; select bank0
 18837  048C  00BE               	movwf	_last_ms
 18838  048D                     i1l4229:	
 18839                           
 18840                           ;main.c: 518:             PIE4bits.TMR1IE = 1;
 18841  048D  002E               	movlb	14	; select bank14
 18842  048E  141A               	bsf	26,0	;volatile
 18843                           
 18844                           ;main.c: 519:             return 1;
 18845  048F  3001               	movlw	1
 18846  0490  2CB3               	goto	i1l1345
 18847  0491                     i1l4233:	
 18848                           
 18849                           ;main.c: 523:     if(clkms - last_ms < 2){
 18850  0491  087D               	movf	_clkms,w	;volatile
 18851  0492  00F0               	movwf	??i1_checkDebounceSW1
 18852  0493  01F1               	clrf	??i1_checkDebounceSW1+1
 18853  0494  0871               	movf	??i1_checkDebounceSW1+1,w
 18854  0495  00F3               	movwf	??i1_checkDebounceSW1+3
 18855  0496  0020               	movlb	0	; select bank0
 18856  0497  083E               	movf	_last_ms,w
 18857  0498  0270               	subwf	??i1_checkDebounceSW1,w
 18858  0499  00F2               	movwf	??i1_checkDebounceSW1+2
 18859  049A  1C03               	skipc
 18860  049B  03F3               	decf	??i1_checkDebounceSW1+3,f
 18861  049C  0873               	movf	??i1_checkDebounceSW1+3,w
 18862  049D  3A80               	xorlw	128
 18863  049E  00F4               	movwf	??i1_checkDebounceSW1+4
 18864  049F  3080               	movlw	128
 18865  04A0  0274               	subwf	??i1_checkDebounceSW1+4,w
 18866  04A1  1D03               	skipz
 18867  04A2  2CA5               	goto	u176_25
 18868  04A3  3002               	movlw	2
 18869  04A4  0272               	subwf	??i1_checkDebounceSW1+2,w
 18870  04A5                     u176_25:	
 18871  04A5  1803               	skipnc
 18872  04A6  2CA8               	goto	u176_21
 18873  04A7  2CA9               	goto	u176_20
 18874  04A8                     u176_21:	
 18875  04A8  2CAB               	goto	i1l4241
 18876  04A9                     u176_20:	
 18877  04A9                     i1l4235:	
 18878                           
 18879                           ;main.c: 524:         return 0;
 18880  04A9  3000               	movlw	0
 18881  04AA  2CB3               	goto	i1l1345
 18882  04AB                     i1l4241:	
 18883                           
 18884                           ;main.c: 527:         last_ms = clkms;
 18885  04AB  087D               	movf	_clkms,w	;volatile
 18886  04AC  00F0               	movwf	??i1_checkDebounceSW1
 18887  04AD  0870               	movf	??i1_checkDebounceSW1,w
 18888  04AE  0020               	movlb	0	; select bank0
 18889  04AF  00BE               	movwf	_last_ms
 18890  04B0                     i1l4243:	
 18891                           
 18892                           ;main.c: 528:         PIE4bits.TMR1IE = 1;
 18893  04B0  002E               	movlb	14	; select bank14
 18894  04B1  141A               	bsf	26,0	;volatile
 18895                           
 18896                           ;main.c: 529:         return 1;
 18897  04B2  3001               	movlw	1
 18898  04B3                     i1l1345:	
 18899  04B3  0008               	return
 18900  04B4                     __end_ofi1_checkDebounceSW1:	
 18901                           
 18902                           	psect	text100
 18903  0E7A                     __ptext100:	
 18904 ;; *************** function i1_PWM6_LoadDutyValue *****************
 18905 ;; Defined at:
 18906 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 18907 ;; Parameters:    Size  Location     Type
 18908 ;;  dutyValue       2    0[COMMON] unsigned short 
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;		None
 18911 ;; Return value:  Size  Location     Type
 18912 ;;                  1    wreg      void 
 18913 ;; Registers used:
 18914 ;;		wreg, status,2, status,0
 18915 ;; Tracked objects:
 18916 ;;		On entry : 0/0
 18917 ;;		On exit  : 0/0
 18918 ;;		Unchanged: 0/0
 18919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18924 ;;Total ram usage:        4 bytes
 18925 ;; Hardware stack levels used:    1
 18926 ;; This function calls:
 18927 ;;		Nothing
 18928 ;; This function is called by:
 18929 ;;		_sw1_EXT
 18930 ;;		_ISR_3s
 18931 ;; This function uses a non-reentrant model
 18932 ;;
 18933                           
 18934                           
 18935                           ;psect for function i1_PWM6_LoadDutyValue
 18936  0E7A                     i1_PWM6_LoadDutyValue:	
 18937  0E7A                     i1l4219:	
 18938                           ;incstack = 0
 18939                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18940                           
 18941                           
 18942                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18943  0E7A  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 18944  0E7B  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 18945  0E7C  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18946  0E7D  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18947  0E7E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18948  0E7F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18949  0E80  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18950  0E81  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18951  0E82  0872               	movf	??i1_PWM6_LoadDutyValue,w
 18952  0E83  0027               	movlb	7	; select bank7
 18953  0E84  008D               	movwf	13	;volatile
 18954                           
 18955                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18956  0E85  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18957  0E86  3903               	andlw	3
 18958  0E87  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18959  0E88  3005               	movlw	5
 18960  0E89                     u173_25:	
 18961  0E89  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 18962  0E8A  3EFF               	addlw	-1
 18963  0E8B  1D03               	skipz
 18964  0E8C  2E89               	goto	u173_25
 18965  0E8D  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 18966  0E8E  008C               	movwf	12	;volatile
 18967  0E8F                     i1l916:	
 18968  0E8F  0008               	return
 18969  0E90                     __end_ofi1_PWM6_LoadDutyValue:	
 18970  007E                     btemp	set	126	;btemp
 18971  007E                     int$flags	set	126
 18972  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         71
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      74
    BANK1            80      6      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3629$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3635	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3634	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3629	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_push_ring
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _mode_select_LED->_PWM6_LoadDutyValue
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   44193
                                             20 BANK0      5     5      0
                                              0 BANK1      6     6      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                          _push_ring
                          _read_ring
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   13358
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4465
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   14078
                                             17 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    6433
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1326
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      2C       7       55.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      84      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      84      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 18:54:42 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0D63  
                          ___bmul@product 0049                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0CC2  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 0050                    increment_subfield@plus 004E  
                             __CFG_LVP$ON 0000                                       l341 0CE6  
                                     l442 0D50                                       l530 05E7  
                                     l347 0DC2                                       l445 0D35  
                                     l439 0F84                                       l760 0D2D  
                                     l913 0DB4                                       l763 0D06  
                                     l916 0F34                                       l757 0EA5  
                                     l766 0D47                                       l960 07E5  
                                     l963 0DEF                                       l869 0FBF  
                                     l957 07DA                                       l959 07DE  
                                     l899 0CEC                                       l998 0F02  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0C7F                           _timer1ReloadVal 0066  
                                     _seg 003F             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0EEB  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 0F69                                      l1041 0D62  
                 ??_rd2RegCompleteHandler 007A                                      l1301 0F68  
                                    l1230 01C5                                      l1214 00A1  
                                    l1225 014B                                      l1217 00BB  
                                    l1330 0D6C                                      l1234 01E2  
                                    l1307 0F4E                                      l1235 0218  
                                    l1340 0D8D                                      l1261 063D  
                                    l1327 0D77                                      l1335 0D82  
                                    l1600 0E79                                      l1352 0554  
                                    l1272 0358                                      l1345 0459  
                                    l1257 0341                                      l1603 0C9C  
                                    l1267 066E                                      l1283 03A4  
                                    l1275 0381                                      l1365 0FDF  
                                    l1622 0D59                                      l1286 03A5  
                                    l1550 02B4                                      l1289 03B2  
                                    l1298 03FF                                      l1803 0EBB  
                                    l1564 06AD                                      l1572 0FFF  
                                    l1557 062E                                      l1567 0E0F  
                                    l6001 035E                                      l1577 0FA0  
                                    l6003 0362                                      l6011 036E  
                                    l6021 039A                                      l6013 0386  
                                    l6005 0366                                      l6101 0671  
                    _ADCC_StartConversion 0D26                                      l6015 038E  
                                    l6007 036A                                      l6111 0696  
                                    l6103 0677                                      l6031 0F8A  
                                    l6017 0393                                      l6121 05EA  
                                    l6041 0EAD                                      l6105 067C  
                                    l6113 06A1                                      l6033 0F92  
                                    l6201 007E                                      l6051 0F69  
                                    l6019 0396                                      l6131 05F8  
                                    l6123 05F2                                      l6043 0EB1  
                                    l6107 0689                                      l6035 0F97  
                                    l6027 0F85                                      l6211 00A7  
                                    l6203 00A1                                      l6061 0F78  
                                    l6053 0F6C                                      l6141 0628  
                                    l6133 0601                                      l6125 05F7  
                                    l6045 0EB3                                      l6037 0EA8  
                                    l6117 06A3                                      l6109 068F  
                                    l6301 01CB                                      l6221 00B5  
                                    l6213 00A8                                      l6205 00A1  
                                    l6063 0F7B                                      l6055 0F6F  
                                    l6143 0C9A                                      l6151 02C0  
                                    l6135 0605                                      l6047 0EBA  
                                    l6039 0EA9                                      l6071 022A  
                                    l6311 01E4                                      l6303 01CD  
                                    l6231 00BD                                      l6223 00B7  
                                    l6215 00AA                                      l6065 0F7E  
                                    l6057 0F72                                      l6161 02DE  
                                    l6153 02C8                                      l6145 02B5  
                                    l6137 061C                                      l6081 0299  
                                    l6073 023C                                      l6321 01F8  
                                    l6313 01EA                                      l6305 01D0  
                                    l6241 00D5                                      l6233 00C5  
                                    l6225 00B9                                      l6217 00AB  
                                    l6209 00A6                                      l6091 0F3E  
                                    l6067 0F81                                      l6059 0F75  
                                    l6171 02F4                                      l6163 02E4  
                                    l6155 02CE                                      l6147 02B8  
                                    l6139 0624                                      l6083 02A5  
                                    l6075 027E                                      l6323 0206  
                                    l6315 01EB                                      l6307 01D2  
                                    l6251 00F6                                      l6243 00DB  
                                    l6235 00CF                                      l6227 00BA  
                                    l6219 00AE                                      l6093 0F46  
                                    l5701 0451                                      l6181 0315  
                                    l6165 02E8                                      l6157 02D1  
                                    l6149 02BC                                      l6085 02B1  
                                    l6077 0281                                      l6069 021D  
                                    l6325 0214                                      l6317 01F0  
                                    l6309 01DB                                      l6261 010C  
                                    l6253 00F7                                      l6245 00E3  
                                    l6237 00D1                                      l6229 00BC  
                                    l6087 0F35                                      l5703 0456  
                                    l5711 0534                                      l6183 031D  
                                    l6191 032F                                      l6167 02EC  
                                    l6175 02F9                                      l6159 02D6  
                                    l6079 028D                                      l6319 01F6  
                                    l6271 016D                                      l6263 0116  
                                    l6255 00FA                                      l6247 00EE  
                                    l6239 00D3                                      l6089 0F3A  
                                    l6097 0F4F                                      l6193 0333  
                                    l6185 0322                                      l6169 02F0  
                                    l6177 030C                                      l6281 019A  
                                    l6273 017E                                      l6265 012D  
                                    l6257 0104                                      l6249 00F5  
                                    l5715 053B                                      l5707 0508  
                                    l6195 0339                                      l6187 0325  
                                    l6179 0311                                      l5731 07C2  
                                    l6099 0671                                      l5811 0FFE  
                                    l6291 01B0                                      l6283 019E  
                                    l6275 018A                                      l6267 014D  
                                    l6259 010A                                      l5821 0D2E  
                                    l5901 0EF4                                      l5717 0553  
                                    l5709 0517                                      l6189 032C  
                                    l5741 07D4                                      l5733 07CA  
                                    l5805 0FE6                                      l6285 01A6  
                                    l6293 01B6                                      l6269 015F  
                                    l6277 018D                                      l5727 0CE1  
                                    l5815 0DB5                                      l5831 05AB  
                                    l5823 059F                                      l5911 0FA4  
                                    l5751 0D5A                                      l5903 0EF6  
                                    l5663 0F1C                                      l5743 07D5  
                                    l5735 07CE                                      l5671 0DEA  
                                    l5807 0FF1                                      l6295 01BC  
                                    l6287 01AB                                      l6279 0194  
                                    l5817 0DB8                                      l5841 05B6  
                                    l5833 05AD                                      l5825 05A5  
                                    l5753 0D51                                      l5729 0CE7  
                                    l5921 0FB3                                      l5913 0FA6  
                                    l5905 0EF7                                      l5681 0400  
                                    l5761 0D63                                      l5745 07D7  
                                    l5737 07D2                                      l5673 0DEB  
                                    l5665 0DE1                                      l5809 0FF5  
                                    l6297 01C2                                      l6289 01AD  
                                    l5819 0DC0                                      l5851 05CA  
                                    l5843 05B8                                      l5835 05AF  
                                    l5827 05A7                                      l5931 0E6B  
                                    l5923 0FB4                                      l5915 0FA8  
                                    l5907 0EFF                                      l5683 0402  
                                    l5755 0D6D                                      l5763 0D65  
                                    l5771 0D83                                      l5747 07D9  
                                    l5739 07D3                                      l5675 0DEC  
                                    l5667 0DE5                                      l6299 01C6  
                                    l5941 0D2B                                      l5861 05D4  
                                    l5853 05CC                                      l5845 05C4  
                                    l5837 05B2                                      l5829 05A9  
                                    l5933 0E6D                                      l5925 0FBC  
                                    l5917 0FAA                                      l5909 0FA1  
                                    l5685 0411                                      l5693 0437  
                                    l5781 0636                                      l5757 0D6F  
                                    l5765 0D78                                      l5773 0D85  
                                    l5749 07DF                                      l5677 0DED  
                                    l5669 0DE9                                      l5943 0D2C  
                                    l5871 05E0                                      l5863 05D6  
                                    l5855 05CE                                      l5847 05C6  
                                    l5839 05B4                                      l5935 0E6E  
                                    l5927 0E65                                      l5919 0FB1  
                                    l5695 044F                                      l5687 042E  
                                    l5791 065A                                      l5783 0641  
                                    l5759 0D75                                      l5767 0D7A  
                                    l5775 0D8B                                      l6495 02FE  
                                    l5945 0D00                                      l5881 0D4C  
                                    l5873 05E2                                      l5865 05D8  
                                    l5857 05D0                                      l5849 05C8  
                                    l5937 0E76                                      l5929 0E6A  
                                    l5961 03C3                                      l5689 0433  
                                    l5793 0662                                      l5785 0649  
                                    l5777 062F                                      l5769 0D80  
                                    l6497 0373                                      l5953 0E00  
                                    l5939 0D28                                      l5891 0EA2  
                                    l5883 0D4F                                      l5875 05E4  
                                    l5867 05DB                                      l5859 05D2  
                                    l5971 03E9                                      l5963 03D3  
                                    l5955 03A7                                      l5787 064E  
                                    l5795 0667                                      l5779 0634  
                                    l5949 0D3F                                      l5893 0EA4  
                                    l5877 0D48                                      l5869 05DD  
                                    l5885 0DA8                                      l5973 03F2  
                                    l5965 03DC                                      l5957 03B0  
                                    l5789 0655                                      l5981 0FC8  
                                    l5797 0FE0                                      l5879 0D4B  
                                    l5887 0DAF                                      l5895 0EEB  
                                    l5975 03F4                                      l5967 03DE  
                                    l5959 03BB                                      l5991 0FDE  
                                    l5983 0FCA                                      l5799 0FE2  
                                    l5889 0E90                                      l5897 0EF0  
                                    l5977 03FD                                      l5969 03E7  
                                    l5993 0342                                      l5985 0FD2  
                                    l5899 0EF1                                      l5995 0347  
                                    l5987 0FD4                                      l5979 0FC0  
                                    l5997 034B                                      l5989 0FDC  
                                    l5999 0353                                      u3000 03A4  
                                    u3001 03A3                                      u3010 0FA0  
                                    u3011 0F9F                                      u3100 05F2  
                                    u3020 0EAD                                      u3101 05F1  
                                    u3021 0EAC                                      _LATA 0016  
                                    u3110 0601                                      u3030 0EBA  
                                    _LATB 0017                           __end_of_INT_ISR 0CE1  
                                    u3111 0600                                      u3031 0EB9  
                                    _LATC 0018                                      u3200 0339  
                                    u3120 062E                                      u3040 022A  
                                    _LATD 0019                                      u3201 0338  
                                    u3121 062D                                      u3041 0229  
                                    _LATE 001A                                      u3130 02C8  
                                    u3050 023C                                      u3210 00CF  
                                    u3131 02C7                                      u3051 023B  
                                    u3211 00CE                                      u3060 0F46  
                                    u3140 02CE                                      u3300 01BC  
                                    u3220 00DB                                      u3061 0F45  
                                    u3141 02CD                                      u3301 01BB  
                                    u3221 00DA                                      u3150 02D6  
                                    u3070 0677                                      u3310 01CB  
                                    u3230 0104                                      u3151 02D5  
                                    u3071 0676                                      u3311 01CA  
                                    u3231 0103                                      u3160 02DE  
                                    u3080 067C                                      u3320 01E2  
                                    u3240 010A                                      u3161 02DD  
                                    u3081 067B                                      u3321 01E1  
                                    u3241 0109                                      u3170 0315  
                                    u3090 068F                                      u3330 01EA  
                                    u3250 012D                                      _T2PR 028D  
                                    u3171 0314                                      u3091 068E  
                                    u3331 01E9                                      u3251 012C  
                                    u3180 031D                                      u3260 014B  
                                    u3181 031C                                      u3261 014A  
                                    u3190 032C                                      u3270 0194  
                                    u3407 0397                                      u3191 032B  
                                    u3271 0193                                      u3280 019A  
                                    u3417 03AB                                      u3281 0199  
                                    u3265 0147                                      u3290 01AB  
                                    u3427 03B6                                      u3291 01AA  
                                    u2900 0641                                      u3437 03C7  
                                    u2901 0640                                      u2830 0411  
                                    u2910 0649                                      u3447 03D7  
                                    u2831 0410                                      u2911 0648  
                                    u3367 01D6                                      u2840 042E  
                                    u2920 065A                                      u2825 0F2D  
                                    u3457 03E2                                      u2841 042D  
                                    u2921 0659                                      u3377 0330  
                                    u2850 044F                                      u2930 0662  
                                    u3467 03ED                                      u2851 044E  
                                    u2931 0661                                      u3387 0FCE  
                                    u2860 0517                                      u2940 066E  
                                    _PMD0 0796                                      u3477 03F8  
                                    u2845 042A                                      u2861 0516  
                                    u2941 066D                                      u3397 0FD8  
                                    _PMD1 0797                                      u2870 0534  
                                    u2950 0FFE                                      _PMD2 0798  
                                    u3487 0F3B                                      u2855 044B  
                                    u2871 0533                                      u2951 0FFD  
                                    _PMD3 0799                                      u2880 0553  
                                    u2960 034B                                      _PMD4 079A  
                                    u2881 0552                                      u2961 034A  
                                    _PMD5 079B                                      u2970 0353  
                                    u2890 07DE                                      u2875 0530  
                                    u2971 0352                                      u2891 07DD  
                                    u2980 0386                                      u2885 054F  
                                    u2981 0385                                      u2990 038E  
                                    u2991 038D                                      i1l73 0DA7  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0036  
                                    _clkh 0041                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 0040                                      _main 007E  
                                    _tala 0061                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0063  
                         _TMR0_StartTimer 0C9A                                      _temp 0037  
                                    _pmon 0062                        _increment_subfield 062F  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0C7A               _INT_DefaultInterruptHandler 0C79  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0F4F  
         __end_of_INT_SetInterruptHandler 0CE7                             _i2c_setBuffer 0DF0  
              ??_TMR1_SetInterruptHandler 0049                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 004A                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 0770                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0056                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0E7A                              _do_I2C_RESET 0D16  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0D51                         ??_clock_subfields 0052  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                __end_of_i2c1_driver_stop 0C8B                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 0CB3                            __CFG_DEBUG$OFF 0000  
                                   i1l103 0DFF                                     i1l200 0714  
                                   i1l210 076F                                     i1l131 0CBC  
                                   i1l140 0CCB                                     _T2TMR 028C  
                                   i1l125 0D1D                                     i1l213 0CA8  
                                   i1l134 0CC1                                     i1l303 0EEA  
                                   i1l143 0D3E                                     i1l224 07C1  
                                   i1l216 0C81                                     i1l128 0CB7  
                                   i1l152 0CD0                                     i1l137 0CC6  
                                   i1l146 0D25                                     _T2RST 0291  
                                   i1l219 0003                                     i1l243 0E42  
                                   i1l155 0CD5                                     i1l164 079B  
                                   i1l172 0507                                     i1l149 0CFF  
                                   i1l334 0CE0                                     i1l158 0CDA  
                                   i1l344 0C79                                     i1l264 0E53  
                                   i1l169 04EB                                     i1l185 0572  
                                   i1l338 0D9A                                     i1l602 0C7D  
                                   i1l186 059E                                     i1l611 0C8A  
                                   i1l291 0E31                                     i1l620 0C90  
                                   i1l380 001F                                     i1l614 0D15  
                                   i1l279 0E64                                     i1l383 002F  
                                   i1l608 0C87                                     i1l392 0059  
                                   i1l617 0C8D                                     i1l385 003E  
                                   i1l386 0059                                     i1l378 0013  
                                   i1l635 0CA0                                     i1l387 004D  
                                   i1l629 0CB2                                     i1l902 0C7B  
                                   i1l638 0CA4                                     i1l576 0C96  
                                   i1l672 0C99                                     i1l579 0C93  
                                   i1l916 0E8F                                     i1l883 0E20  
                                   i1l896 0ED2                                     _OSCEN 0891  
                         __end_of_all_LED 0400                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 0DA8  
               ?_TMR0_SetInterruptHandler 0047                   ??_ADCC_IsConversionDone 0047  
                        __end_of_TMR0_ISR 0DD2                          __end_of_TMR1_ISR 0ED3  
                        __end_of_TMR2_ISR 0DE1                           __end_of_sw1_EXT 0743  
                         __end_of_cksum_w 0E10                      ??_increment_subfield 004E  
                         _DATAEE_ReadByte 0DE1                                     _alarm 0038  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0D16  
                                   _cksum 0FE0                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 0030  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0FC0  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0047                        ??_checkDebounceSW2 0047  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0E10  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 07E6                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 021D  
                 __end_of_TMR2_Initialize 0F03               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0CCC                  _TMR2_SetInterruptHandler 0D5A  
                                  ??_main 0058                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 0049  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 0005  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0C9D               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1202 0742                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0C7C  
                                  i1l1205 0F16                                    i1l1206 0F1B  
                                  i1l1038 0DE0                                    i1l1315 06E1  
                                  i1l1319 0CAD                                    i1l1345 04B3  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l1196 0731  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1606 0C84                                    i1l1199 073E  
                                  i1l1625 0C7A                                    i1l1619 0DD1  
                                  i1l5011 0752                                    i1l4221 045A  
                                  i1l5021 0DC3                                    i1l4141 0D9B  
                                  i1l4301 0D0E                                    i1l5013 0758  
                                  i1l5005 0743                                    i1l4223 045C  
                                  i1l5023 0DC5                                    i1l5031 0EC6  
                                  i1l4151 0C88                                    i1l4143 0DF1  
                                  i1l4135 079D                                    i1l4311 0C80  
                                  i1l5007 0746                                    i1l5015 0CA5  
                                  i1l4241 04AB                                    i1l4225 046B  
                                  i1l4233 0491                                    i1l5017 0CDB  
                                  i1l5025 0DCC                                    i1l5033 0ECD  
                                  i1l4145 0DF6                                    i1l4137 07A3  
                                  i1l4321 0E3A                                    i1l4153 0CA1  
                                  i1l4305 0C8E                                    i1l5009 074B  
                                  i1l4219 0E7A                                    i1l4243 04B0  
                                  i1l4235 04A9                                    i1l4227 0488  
                                  i1l5019 0CDD                                    i1l5027 0EBC  
                                  i1l5035 0DD2                                    i1l4147 0DFE  
                                  i1l4139 07B4                                    i1l4315 0002  
                                  i1l4323 0E41                                    i1l4331 0E52  
                                  i1l4229 048D                                    i1l5029 0EBE  
                                  i1l5037 0DD4                                    i1l4149 0C85  
                                  i1l4309 0C91                                    i1l4261 0CBB  
                                  i1l5039 0DDB                                    i1l4343 0E21  
                                  i1l4247 0C7E                                    i1l4319 0E32  
                                  i1l4327 0E43                                    i1l4335 0E54  
                                  i1l4351 0ED3                                    i1l4271 0CC2  
                                  i1l4503 0D36                                    i1l4511 0D1E  
                                  u203_20 06B4                                    u203_21 06B3  
                                  i1l4345 0E29                                    i1l4329 0E4B  
                                  i1l4337 0E5C                                    i1l4353 0EE9  
                                  i1l4265 0CBD                                    i1l4273 0CC5  
                                  i1l4505 0D38                                    i1l4513 0D20  
                                  i1l4521 0CFB                                    i1l4347 0E30  
                                  i1l4339 0E63                                    i1l4283 0CAF  
                                  i1l4259 0CB8                                    i1l4267 0CC0  
                                  i1l4507 0D3D                                    i1l4515 0D24  
                                  i1l4523 0CFE                                    i1l4291 0CD4  
                                  i1l4603 0574                                    i1l5331 000B  
                                  i1l4285 0C8B                                    i1l4621 06E2  
                                  i1l4277 0CC7                                    i1l4541 077B  
                                  i1l4533 0770                                    i1l4613 057C  
                                  i1l5341 0027                                    i1l5333 000F  
                                  i1l4391 0725                                    i1l4383 0715  
                                  i1l4287 0C9D                                    i1l4623 06E5  
                                  i1l4279 0CCA                                    i1l4519 0CF9  
                                  i1l4527 0CCC                                    i1l4295 0CD6  
                                  i1l4535 0772                                    i1l4607 0578  
                                  i1l4463 0C94                                    i1l5351 0046  
                                  i1l5343 002B                                    i1l5335 0017  
                                  u204_20 06BD                                    i1l4393 072B  
                                  i1l4385 071D                                    i1l4801 0E1C  
                                  u204_21 06BA                                    i1l4633 06EE  
                                  i1l4529 0CCF                                    i1l4289 0CD1  
                                  i1l4297 0CD9                                    i1l4537 0777  
                                  i1l5353 0051                                    i1l5345 0033  
                                  i1l5337 001B                                    i1l5329 0006  
                                  i1l4395 0735                                    i1l4387 0723  
                                  i1l4651 0D95                                    i1l4811 0F19  
                                  i1l4803 0E1E                                    i1l4627 06E9  
                                  i1l4491 0D1C                                    i1l4547 077F  
                                  i1l4563 04C0                                    i1l4555 04B4  
                                  i1l5355 0055                                    i1l5347 0037  
                                  i1l5339 0023                                    i1l4397 073A  
                                  i1l4389 0724                                    i1l4805 0F03  
                                  i1l4901 06D6                                    i1l4629 06EC  
                                  i1l4485 0D16                                    i1l4581 0506  
                                  i1l6501 04DD                                    i1l4573 04C8  
                                  i1l5349 0042                                    i1l4399 0C82  
                                  i1l4807 0F0A                                    i1l4903 06DC  
                                  i1l4639 06F2                                    i1l4487 0D19  
                                  i1l4495 0CB3                                    i1l6503 0793  
                                  i1l4575 04ED                                    i1l4567 04C4  
                                  i1l4559 04BC                                    i1l4591 055F  
                                  i1l4647 0C97                                    i1l4649 0D8E  
                                  i1l4809 0F11                                    i1l4905 06E0  
                                  i1l6505 0706                                    i1l4489 0D1B  
                                  i1l4497 0CB5                                    i1l4577 04F9  
                                  i1l4593 0563                                    i1l4907 0CA9  
                                  i1l4499 0CB6                                    i1l4579 0504  
                                  i1l4595 056D                                    u205_24 06BF  
                                  i1l4597 0570                                    i1l4589 0555  
                                  i1l4791 0E10                                    u206_20 06CD  
                                  u214_20 074B                                    i1l4793 0E15  
                                  u206_21 06CC                                    u214_21 074A  
                                  i1l4795 0E16                                    i1l4891 06BF  
                                  i1l4797 0E18                                    i1l4893 06C3  
                                  i1l4799 0E1A                                    i1l4895 06C7  
                                  i1l4887 06AE                                    u207_20 06DC  
                                  u215_20 0752                                    u207_21 06DB  
                                  i1l4897 06CD                                    i1l4889 06B4  
                                  u215_21 0751                                    i1l4899 06D5  
                                  i1l6499 0590                                    u216_20 0DCC  
                                  u216_21 0DCB                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u217_20 0ECD                                    u217_21 0ECC  
                                  u218_20 0DDB                                    u218_21 0DDA  
                                  u180_20 0723                                    u164_20 07A3  
                                  u260_20 002B                                    u180_21 0722  
                                  u164_21 07A2                                    u260_21 002A  
                                  u181_20 0735                                    u165_20 0DF6  
                                  u261_20 0033                                    u181_21 0734  
                                  u165_21 0DF5                                    u261_21 0032  
                                  u173_25 0E89                                    u174_20 046B  
                                  u182_20 073A                                    u262_20 0037  
                                  u254_20 000B                                    u174_21 046A  
                                  u182_21 0739                                    u262_21 0036  
                                  u254_21 000A                                    u175_20 0488  
                                  u263_20 0042                                    u255_20 000F  
                                  u175_21 0487                                    u263_21 0041  
                                  u255_21 000E                                    u175_25 0484  
                                  u176_20 04A9                                    u192_20 04BB  
                                  u264_20 0046                                    u256_20 0017  
                                  u176_21 04A8                                    u192_21 04BA  
                                  u264_21 0045                                    u256_21 0016  
                                  _INTPPS 0E90                                    u176_25 04A5  
                                  u193_20 0504                                    u265_20 0051  
                                  u257_20 001B                                    u193_21 0503  
                                  u265_21 0050                                    u257_21 001A  
                                  u194_20 056D                                    u266_20 0055  
                                  u258_20 0023                                    u194_21 056C  
                                  u266_21 0054                                    u258_21 0022  
                                  u179_20 071D                                    u195_20 0D95  
                                  u259_20 0027                                    u179_21 071C  
                                  u195_21 0D94                                    u259_21 0026  
                                  u196_20 0E15                                    u196_21 0E14  
                                  u197_20 0F0A                                    u197_21 0F09  
                                  _OSCFRQ 0893                                    _ISR_3s 0F03  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0044                ??_ADCC_GetConversionResult 0049  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0E90  
                   _i2c1_driver_getRXData 0C8E                          __end_of_mod1_LED 0D78  
                        __end_of_mod2_LED 0D6D                          __end_of_mod3_LED 0D83  
                        __end_of_mod4_LED 0D8E      __end_of_TMR1_DefaultInterruptHandler 0C7C  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0C7B  
                            _CCPTMRS1bits 021F                                    ___bmul 0EA6  
             __end_of_do_I2C_DO_NACK_STOP 0CD6       __end_of_i2c_setDataCompleteCallback 0DA8  
             _i2c_setDataCompleteCallback 0D9B     __end_of_i2c1_driver_clearBusCollision 0C9A  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 0C97  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 003B                                    _last5s 003C  
                               ??_all_LED 004B                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0DB5                            ?_do_I2C_DO_ACK 0070  
                                  cksum@i 004B                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 0DF0                                 ??_sw1_EXT 0077  
                               ??_cksum_w 0051                           _ADCC_Initialize 0E90  
             __end_of_i2c1_driver_sendACK 0CA1                            _PMD_Initialize 0D2E  
          __end_of_do_I2C_DO_ADDRESS_NACK 079C               __end_of_i2c1_driver_restart 0C88  
                            ?_returnReset 0079                                 ?_ADC_read 0049  
                  ??_ADCC_StartConversion 0047               __end_of_i2c1_driver_startRX 0C8E  
        __size_of_INT_SetInterruptHandler 0006  TMR0_SetInterruptHandler@InterruptHandler 0047  
TMR2_SetInterruptHandler@InterruptHandler 0047  TMR1_SetInterruptHandler@InterruptHandler 0047  
 INT_SetInterruptHandler@InterruptHandler 0047                   __end_of_TMR1_WriteTimer 0E21  
                        ??_config_routine 0055                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0F69                   __end_of__initialization 007A  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 0CC7  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0047  
                 _rdBlkRegCompleteHandler 0ED3                            __pcstackCOMMON 0070  
                            __pidataBANK0 0D07                       ??_SYSTEM_Initialize 0049  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 1000                          _DATAEE_WriteByte 07C2  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0047  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0D36  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 004B  
             ADCC_StartConversion@channel 0047                            setCallBack@idx 0074  
                                 ??_cksum 0049                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0CD6                 __end_of_SYSTEM_Initialize 0F85  
                          _mssp1_clearIRQ 0C94                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0E65  
                      read_ring@nreg_init 004C            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0E32                     _rd1RegCompleteHandler 0E43  
                  ?_i2c1_driver_getRXData 0070                           _clock_subfields 0342  
                      __size_of_read_ring 003F                     _wr1RegCompleteHandler 0E32  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 007E  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0047  
        __end_of_TMR0_SetInterruptHandler 0D5A                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0EA6                __end_of_PWM6_LoadDutyValue 0F35  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0047                         __end_of_do_I2C_RX 059F  
                       __end_of_do_I2C_TX 0508                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0F4F                          _handler_clock_ms 0CA9  
                                 _INT_ISR 0CDB                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0E7A  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0C97                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0D07  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0CAE                      DATAEE_WriteByte@bAdd 004D  
                      _i2c1_driver_i2cISR 0032                           __size_of_ISR_3s 0019  
                                 _i2c_ISR 0743                 ??_rdBlkRegCompleteHandler 007A  
                      _i2c1_driver_isNACK 0D0E                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0049                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 005A                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                         ??_mode_select_LED 004B  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 03A5  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 021D  
                                 __ptext2 0F85                                   __ptext3 0E00  
                                 __ptext4 0FE0                                   __ptext5 066F  
                                 __ptext6 0EA6                                   __ptext7 0DE1  
                                 __ptext8 05E8                                   __ptext9 07C2  
                     __end_of_do_I2C_IDLE 0CB8                       __end_of_do_I2C_RCEN 0D00  
                                 _sw1_EXT 0715            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0E00                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0D48                                   _last_ms 003E  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0CC7  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 0024  
                             reset_recv@i 0051         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 06AE                  ??_PIN_MANAGER_Initialize 0047  
               ?_TMR1_SetInterruptHandler 0047                                 _T2HLTbits 028F  
                                 _nreg_pt 0042                   _INT_SetInterruptHandler 0CE1  
                                 _lum_bin 0022               __size_of_increment_subfield 0040  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 004B  
                              ??_mod2_LED 004B                                ??_mod3_LED 004B  
                              ??_mod4_LED 004B                                   main@t5s 00C6  
                _do_I2C_SEND_RESTART_READ 0CB8                __size_of_SYSTEM_Initialize 001C  
                                 main@aux 00C2                                   clrloop0 0CEE  
                              _hours_tens 002E                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 03A5  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 0CF3  
            __end_of_i2c1_driver_sendNACK 0CA5                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0CF4                      __end_of_INT_CallBack 0D9B  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0C7E  
                              _reset_recv 0F85                             push_ring@nreg 0051  
               _do_I2C_SEND_RESTART_WRITE 0CBD                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 062F                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0C80                  _TMR0_SetInterruptHandler 0D51  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0EEB                  __end_of_do_I2C_SEND_STOP 0CCC  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 04B4  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 07E6  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0F1C  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0C82  
                             _do_I2C_IDLE 0CB3                               _do_I2C_RCEN 0CF9  
    __end_of_TMR2_DefaultInterruptHandler 0C7D     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0C7C                            __end_of___bmul 0EBC  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0049  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0047  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0CA5  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                          ?_clock_subfields 0070  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003                   clock_subfields@subfield 0053  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0047  
                   __end_of_i2c_setBuffer 0E00              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0C85                  __end_of_handler_clock_ms 0CAE  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0C94  
                __size_of_TMR1_Initialize 001F                                  ??___bmul 0048  
                        ??_PMD_Initialize 0047                          _checkDebounceSW1 0400  
                        _checkDebounceSW2 0508                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005D  
              __end_of_EXT_INT_Initialize 0DC3             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0CDB  
                              read_ring@i 0051                      _i2c1_driver_sendNACK 0CA1  
                       read_ring@absindex 0053                                  ?_LED_bin 0047  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0C7D                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0044                             __pcstackBANK1 00C2  
                      _PWM6_LoadDutyValue 0F1C                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0555                                 _do_I2C_TX 04B4  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0D26                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0047  
                        _i2c_restartWrite 0C7E                           _mode_select_LED 0FC0  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 06E2                     _TMR0_InterruptHandler 00C8  
                           ??_setCallBack 0073                                 __pnvBANK0 0064  
                               __pnvBANK1 00C8                     _rd2RegCompleteHandler 0E54  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 0806  
                               _main$2305 00C7                    _PIN_MANAGER_Initialize 059F  
                   _wr2RegCompleteHandler 0E21             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 008D          __end_of_TMR1_SetInterruptHandler 0CED  
                       read_ring@subindex 004E                            ??_do_I2C_RESET 0070  
                               __ptext100 0E7A                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 0034                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0CD1                      ??_PWM6_LoadDutyValue 0049  
                           ??_recoverData 0053              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0D8E                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0F35                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                                 _read_ring 066F  
                               _min_units 0028                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 0D00                         ??_TMR0_Initialize 0049  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0CED                                  _PIE0bits 0716  
                       _handler_clock_hms 06AE                                 _nreg_init 0043  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0020                ??_TMR0_SetInterruptHandler 0049  
                                _PIR0bits 070C                               _config_mode 0039  
                                _PIR3bits 070F                                 _ring_byte 00BD  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0DC3                                  _TMR1_ISR 0EBC  
                                _TMR2_ISR 0DD2              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 07C2  
                        push_ring@nreg_pt 0057                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 0049                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 05E8  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 066F      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0047  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 004F  
                     __end_of_recoverData 02B5         __end_of_do_I2C_SEND_RESTART_WRITE 0CC2  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0FE0  
                 __end_of_do_I2C_TX_EMPTY 0715                                ?_read_ring 004B  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 004D  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 06E2                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0049                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 0050                        i1_checkDebounceSW1 045A  
                     _do_I2C_DO_NACK_STOP 0CD1                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0D48                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0056                   ??_OSCILLATOR_Initialize 0047  
                       ??_TMR0_StartTimer 0047                       _i2c1_driver_sendACK 0C9D  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0C85  
                _TMR1_SetInterruptHandler 0CE7                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0C8B              __end_of_do_I2C_SEND_ADR_READ 0D3F  
                              ?_push_ring 0051                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 0064                          __size_of_sw1_EXT 002E  
                        __size_of_cksum_w 0010                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 0052  
                            _mssp1_setIRQ 0C91                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 02B5                                  __ptext11 0FC0  
                                __ptext20 03A5                                  __ptext12 0342  
                                __ptext21 0F1C                                  __ptext13 0D83  
                              _T1GCONbits 020F                                  __ptext30 0DA8  
                                __ptext22 0C9A                                  __ptext14 0D78  
                                __ptext31 0D2E                                  __ptext23 0F69  
                                __ptext15 0D63                                  __ptext40 0D00  
                                __ptext32 059F                                  __ptext24 0EEB  
                                __ptext16 0D6D                                  __ptext41 0D3F  
                                __ptext33 0D48                                  __ptext25 0D5A  
                                __ptext17 062F                                  __ptext50 0CD6  
                                __ptext34 0DB5                                  __ptext26 0FA1  
                                __ptext18 0508                                  __ptext51 0CD1  
                                __ptext43 0CA5                                  __ptext35 0CE1  
                                __ptext27 0CE7                                  __ptext19 0400  
                                __ptext60 0CB3                                  __ptext52 0CCC  
                                __ptext44 0C97                                  __ptext36 0E90  
                                __ptext28 0E65                                  __ptext61 0D16  
                                __ptext53 0CF9                                  __ptext45 0743  
                                __ptext37 0F4F                                  __ptext29 0D51  
                                __ptext70 0ED3                                  __ptext62 06E2  
                                __ptext54 0D1E                                  __ptext46 0C94  
                                __ptext38 0F35                                  __ptext71 0E54  
                                __ptext63 0C91                                  __ptext55 0D36  
                                __ptext47 0555                                  __ptext39 0D26  
                                __ptext80 0DF0                                  __ptext72 0E43  
                                __ptext64 0D0E                                  __ptext56 0CC7  
                                __ptext48 04B4                                  __ptext81 0C88  
                                __ptext73 0E32                                  __ptext65 0CAE  
                                __ptext57 0CC2                                  __ptext49 0770  
                                __ptext90 0E10                                  __ptext82 0C85  
                                __ptext74 0002                                  __ptext66 0C8E  
                                __ptext58 0CBD                                  __ptext91 0DC3  
                                __ptext83 0C9D                                  __ptext75 0C80  
                                __ptext67 0CA1                                  __ptext59 0CB8  
                                __ptext92 0F03                                  __ptext84 0DD2  
                                __ptext76 0C7E                                  __ptext68 0C7D  
                                __ptext93 0C7A                                  __ptext85 0C7C  
                                __ptext77 0E21                                  __ptext69 0C8B  
                                __ptext94 0C82                                  __ptext86 0CA9  
                                __ptext78 0D9B                                  __ptext95 0CDB  
                                __ptext87 0EBC                                  __ptext79 079C  
                                __ptext96 0D8E                                  __ptext88 0C7B  
                                __ptext97 0C79                                  __ptext89 06AE  
                                __ptext98 0715                                  __ptext99 045A  
                                _mod1_LED 0D6D                              _SSP1CON1bits 0190  
                                _mod2_LED 0D63                  __end_of_checkDebounceSW1 045A  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0555  
                                _mod3_LED 0D78                                  _mod4_LED 0D83  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0D1E               DATAEE_WriteByte@GIEBitValue 0050  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 003D                         ??_PWM6_Initialize 0047  
                        _i2c1_driver_stop 0C88                             __size_of_main 019F  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 002A             __end_of_i2c1_driver_getRXData 0C91  
    __end_of_TMR0_DefaultInterruptHandler 0C7B     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0C7A                         ??_DATAEE_ReadByte 0049  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 079C  
                            ??_reset_recv 0051                         ?_handler_clock_ms 0070  
                                _set_mode 003A                            _config_routine 02B5  
            __end_of_ADCC_StartConversion 0D2E                                  int$flags 007E  
                      ??_handler_clock_ms 0070        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                                  main@aux1 00C3  
                     _mode_field_subfield 005D                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 004A  
        __end_of_do_I2C_SEND_RESTART_READ 0CBD                              ??_returnStop 007A  
                             _hours_units 002C                  __end_of_i2c_restartWrite 0C80  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 021D  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0068  
                        ?_mode_select_LED 0070                        __end_of_reset_recv 0FA1  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 0DB5  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 004F  
                  _do_I2C_DO_ADDRESS_NACK 0770                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 0034                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0C82  
                  __end_of_config_routine 0342             ?_TMR0_DefaultInterruptHandler 0070  
                __size_of_clock_subfields 0063                    wr2RegCompleteHandler@p 0079  
                ?_INT_SetInterruptHandler 0047                  _ADCC_GetConversionResult 0D3F  
                           __pstringtext1 07E6                      ??_EXT_INT_Initialize 0049  
                          read_ring@index 004D                               ??_push_ring 0054  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0E65                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0047  
                           read_ring@nreg 004B            __end_of_PIN_MANAGER_Initialize 05E8  
                       ??_ADCC_Initialize 0047               __end_of_i2c_busCollisionISR 0CA9  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0E54  
                      push_ring@nreg_init 0052            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0E43                     _TMR2_InterruptHandler 00CA  
                   _do_I2C_SEND_ADR_WRITE 0D1E                        push_ring@ring_byte 0053  
                    _do_I2C_SEND_ADR_READ 0D36                           ?_config_routine 0070  
                         _TMR1_Initialize 0FA1  
