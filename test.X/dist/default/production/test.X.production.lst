

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 18:39:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	dabs	1,0x7E,2
   120  0000                     
   121                           ; Version 2.10
   122                           ; Generated 31/07/2019 GMT
   123                           ; 
   124                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC16F18875 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001C                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  008C                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0110                     	;# 
   215  0110                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0112                     	;# 
   219  0113                     	;# 
   220  0114                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0116                     	;# 
   225  0117                     	;# 
   226  0119                     	;# 
   227  0119                     	;# 
   228  0119                     	;# 
   229  011A                     	;# 
   230  011A                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011C                     	;# 
   238  011C                     	;# 
   239  011C                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  011E                     	;# 
   244  011E                     	;# 
   245  011E                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0196                     	;# 
   259  0197                     	;# 
   260  0198                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019C                     	;# 
   265  020C                     	;# 
   266  020C                     	;# 
   267  020D                     	;# 
   268  020E                     	;# 
   269  020F                     	;# 
   270  020F                     	;# 
   271  0210                     	;# 
   272  0210                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0218                     	;# 
   286  0218                     	;# 
   287  0219                     	;# 
   288  021A                     	;# 
   289  021B                     	;# 
   290  021B                     	;# 
   291  021C                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021D                     	;# 
   295  021E                     	;# 
   296  021F                     	;# 
   297  028C                     	;# 
   298  028C                     	;# 
   299  028D                     	;# 
   300  028D                     	;# 
   301  028E                     	;# 
   302  028F                     	;# 
   303  0290                     	;# 
   304  0290                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0296                     	;# 
   314  0297                     	;# 
   315  0298                     	;# 
   316  0298                     	;# 
   317  0299                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  030C                     	;# 
   325  030C                     	;# 
   326  030D                     	;# 
   327  030E                     	;# 
   328  030F                     	;# 
   329  0310                     	;# 
   330  0310                     	;# 
   331  0311                     	;# 
   332  0312                     	;# 
   333  0313                     	;# 
   334  0314                     	;# 
   335  0314                     	;# 
   336  0315                     	;# 
   337  0316                     	;# 
   338  0317                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  031B                     	;# 
   344  031C                     	;# 
   345  031C                     	;# 
   346  031D                     	;# 
   347  031E                     	;# 
   348  031F                     	;# 
   349  038C                     	;# 
   350  038C                     	;# 
   351  038D                     	;# 
   352  038E                     	;# 
   353  0390                     	;# 
   354  0390                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  040C                     	;# 
   358  040D                     	;# 
   359  040E                     	;# 
   360  040F                     	;# 
   361  0410                     	;# 
   362  0411                     	;# 
   363  0416                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  0418                     	;# 
   367  0418                     	;# 
   368  0419                     	;# 
   369  041A                     	;# 
   370  041A                     	;# 
   371  041B                     	;# 
   372  041C                     	;# 
   373  041C                     	;# 
   374  041D                     	;# 
   375  041E                     	;# 
   376  041F                     	;# 
   377  048C                     	;# 
   378  048C                     	;# 
   379  048D                     	;# 
   380  048E                     	;# 
   381  048F                     	;# 
   382  048F                     	;# 
   383  0490                     	;# 
   384  0491                     	;# 
   385  0492                     	;# 
   386  0492                     	;# 
   387  0493                     	;# 
   388  0494                     	;# 
   389  0495                     	;# 
   390  0495                     	;# 
   391  0496                     	;# 
   392  0497                     	;# 
   393  0498                     	;# 
   394  0499                     	;# 
   395  049A                     	;# 
   396  049B                     	;# 
   397  049C                     	;# 
   398  049D                     	;# 
   399  050C                     	;# 
   400  050C                     	;# 
   401  050D                     	;# 
   402  050E                     	;# 
   403  050F                     	;# 
   404  050F                     	;# 
   405  0510                     	;# 
   406  0511                     	;# 
   407  0512                     	;# 
   408  0512                     	;# 
   409  0513                     	;# 
   410  0514                     	;# 
   411  0515                     	;# 
   412  0515                     	;# 
   413  0516                     	;# 
   414  0517                     	;# 
   415  0518                     	;# 
   416  0519                     	;# 
   417  051A                     	;# 
   418  051B                     	;# 
   419  051C                     	;# 
   420  051D                     	;# 
   421  058C                     	;# 
   422  058C                     	;# 
   423  058D                     	;# 
   424  058E                     	;# 
   425  058F                     	;# 
   426  058F                     	;# 
   427  0590                     	;# 
   428  0591                     	;# 
   429  0592                     	;# 
   430  0593                     	;# 
   431  060C                     	;# 
   432  060D                     	;# 
   433  060E                     	;# 
   434  060F                     	;# 
   435  0610                     	;# 
   436  0611                     	;# 
   437  0612                     	;# 
   438  0613                     	;# 
   439  0614                     	;# 
   440  0616                     	;# 
   441  0617                     	;# 
   442  0618                     	;# 
   443  0619                     	;# 
   444  061A                     	;# 
   445  061B                     	;# 
   446  061C                     	;# 
   447  061D                     	;# 
   448  061E                     	;# 
   449  068C                     	;# 
   450  068D                     	;# 
   451  068E                     	;# 
   452  068F                     	;# 
   453  0690                     	;# 
   454  0691                     	;# 
   455  0692                     	;# 
   456  0693                     	;# 
   457  0694                     	;# 
   458  070C                     	;# 
   459  070D                     	;# 
   460  070E                     	;# 
   461  070F                     	;# 
   462  0710                     	;# 
   463  0711                     	;# 
   464  0712                     	;# 
   465  0713                     	;# 
   466  0714                     	;# 
   467  0716                     	;# 
   468  0717                     	;# 
   469  0718                     	;# 
   470  0719                     	;# 
   471  071A                     	;# 
   472  071B                     	;# 
   473  071C                     	;# 
   474  071D                     	;# 
   475  071E                     	;# 
   476  0796                     	;# 
   477  0797                     	;# 
   478  0798                     	;# 
   479  0799                     	;# 
   480  079A                     	;# 
   481  079B                     	;# 
   482  080C                     	;# 
   483  080D                     	;# 
   484  080E                     	;# 
   485  080F                     	;# 
   486  0810                     	;# 
   487  0811                     	;# 
   488  0812                     	;# 
   489  0813                     	;# 
   490  0814                     	;# 
   491  081A                     	;# 
   492  081B                     	;# 
   493  081C                     	;# 
   494  081D                     	;# 
   495  081E                     	;# 
   496  081F                     	;# 
   497  088C                     	;# 
   498  088D                     	;# 
   499  088E                     	;# 
   500  088F                     	;# 
   501  0890                     	;# 
   502  0891                     	;# 
   503  0892                     	;# 
   504  0893                     	;# 
   505  0895                     	;# 
   506  0896                     	;# 
   507  0897                     	;# 
   508  0898                     	;# 
   509  0899                     	;# 
   510  089A                     	;# 
   511  089B                     	;# 
   512  090C                     	;# 
   513  090E                     	;# 
   514  090F                     	;# 
   515  091F                     	;# 
   516  091F                     	;# 
   517  098F                     	;# 
   518  098F                     	;# 
   519  0990                     	;# 
   520  0991                     	;# 
   521  0992                     	;# 
   522  0993                     	;# 
   523  0994                     	;# 
   524  0995                     	;# 
   525  0996                     	;# 
   526  0997                     	;# 
   527  0E0F                     	;# 
   528  0E10                     	;# 
   529  0E11                     	;# 
   530  0E12                     	;# 
   531  0E13                     	;# 
   532  0E14                     	;# 
   533  0E15                     	;# 
   534  0E16                     	;# 
   535  0E17                     	;# 
   536  0E18                     	;# 
   537  0E19                     	;# 
   538  0E1A                     	;# 
   539  0E1B                     	;# 
   540  0E1C                     	;# 
   541  0E1D                     	;# 
   542  0E1E                     	;# 
   543  0E1F                     	;# 
   544  0E20                     	;# 
   545  0E21                     	;# 
   546  0E22                     	;# 
   547  0E23                     	;# 
   548  0E24                     	;# 
   549  0E25                     	;# 
   550  0E26                     	;# 
   551  0E27                     	;# 
   552  0E28                     	;# 
   553  0E29                     	;# 
   554  0E2A                     	;# 
   555  0E2B                     	;# 
   556  0E2C                     	;# 
   557  0E2D                     	;# 
   558  0E2E                     	;# 
   559  0E2F                     	;# 
   560  0E30                     	;# 
   561  0E31                     	;# 
   562  0E32                     	;# 
   563  0E33                     	;# 
   564  0E34                     	;# 
   565  0E35                     	;# 
   566  0E36                     	;# 
   567  0E37                     	;# 
   568  0E8F                     	;# 
   569  0E90                     	;# 
   570  0E91                     	;# 
   571  0E92                     	;# 
   572  0E93                     	;# 
   573  0E94                     	;# 
   574  0E95                     	;# 
   575  0E96                     	;# 
   576  0E97                     	;# 
   577  0E9C                     	;# 
   578  0E9D                     	;# 
   579  0E9E                     	;# 
   580  0EA1                     	;# 
   581  0EA2                     	;# 
   582  0EA3                     	;# 
   583  0EA4                     	;# 
   584  0EA5                     	;# 
   585  0EA9                     	;# 
   586  0EAA                     	;# 
   587  0EAB                     	;# 
   588  0EAC                     	;# 
   589  0EB1                     	;# 
   590  0EB2                     	;# 
   591  0EB3                     	;# 
   592  0EB8                     	;# 
   593  0EB9                     	;# 
   594  0EBA                     	;# 
   595  0EBB                     	;# 
   596  0EBC                     	;# 
   597  0EBD                     	;# 
   598  0EBE                     	;# 
   599  0EC3                     	;# 
   600  0EC5                     	;# 
   601  0EC6                     	;# 
   602  0EC7                     	;# 
   603  0EC8                     	;# 
   604  0EC9                     	;# 
   605  0ECA                     	;# 
   606  0ECB                     	;# 
   607  0ECC                     	;# 
   608  0F10                     	;# 
   609  0F11                     	;# 
   610  0F12                     	;# 
   611  0F13                     	;# 
   612  0F14                     	;# 
   613  0F15                     	;# 
   614  0F16                     	;# 
   615  0F17                     	;# 
   616  0F18                     	;# 
   617  0F19                     	;# 
   618  0F1A                     	;# 
   619  0F1B                     	;# 
   620  0F1C                     	;# 
   621  0F1D                     	;# 
   622  0F1E                     	;# 
   623  0F1F                     	;# 
   624  0F20                     	;# 
   625  0F21                     	;# 
   626  0F22                     	;# 
   627  0F23                     	;# 
   628  0F24                     	;# 
   629  0F25                     	;# 
   630  0F26                     	;# 
   631  0F27                     	;# 
   632  0F28                     	;# 
   633  0F29                     	;# 
   634  0F2A                     	;# 
   635  0F2B                     	;# 
   636  0F2C                     	;# 
   637  0F2D                     	;# 
   638  0F2E                     	;# 
   639  0F2F                     	;# 
   640  0F30                     	;# 
   641  0F31                     	;# 
   642  0F32                     	;# 
   643  0F38                     	;# 
   644  0F39                     	;# 
   645  0F3A                     	;# 
   646  0F3B                     	;# 
   647  0F3C                     	;# 
   648  0F3D                     	;# 
   649  0F3E                     	;# 
   650  0F3F                     	;# 
   651  0F40                     	;# 
   652  0F41                     	;# 
   653  0F43                     	;# 
   654  0F44                     	;# 
   655  0F45                     	;# 
   656  0F46                     	;# 
   657  0F47                     	;# 
   658  0F48                     	;# 
   659  0F49                     	;# 
   660  0F4A                     	;# 
   661  0F4B                     	;# 
   662  0F4C                     	;# 
   663  0F4E                     	;# 
   664  0F4F                     	;# 
   665  0F50                     	;# 
   666  0F51                     	;# 
   667  0F52                     	;# 
   668  0F53                     	;# 
   669  0F54                     	;# 
   670  0F55                     	;# 
   671  0F56                     	;# 
   672  0F57                     	;# 
   673  0F59                     	;# 
   674  0F5A                     	;# 
   675  0F5B                     	;# 
   676  0F5C                     	;# 
   677  0F5D                     	;# 
   678  0F61                     	;# 
   679  0F62                     	;# 
   680  0F64                     	;# 
   681  0F65                     	;# 
   682  0F66                     	;# 
   683  0F67                     	;# 
   684  0F68                     	;# 
   685  0F69                     	;# 
   686  0F6A                     	;# 
   687  0F6B                     	;# 
   688  0F6C                     	;# 
   689  0F6D                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000F                     	;# 
   717  0010                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0017                     	;# 
   725  0018                     	;# 
   726  0019                     	;# 
   727  001A                     	;# 
   728  001C                     	;# 
   729  001C                     	;# 
   730  001D                     	;# 
   731  001D                     	;# 
   732  001E                     	;# 
   733  001F                     	;# 
   734  008C                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0093                     	;# 
   744  0094                     	;# 
   745  0095                     	;# 
   746  0096                     	;# 
   747  0097                     	;# 
   748  0098                     	;# 
   749  0099                     	;# 
   750  009A                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0110                     	;# 
   761  0110                     	;# 
   762  0111                     	;# 
   763  0112                     	;# 
   764  0112                     	;# 
   765  0113                     	;# 
   766  0114                     	;# 
   767  0114                     	;# 
   768  0115                     	;# 
   769  0116                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  0119                     	;# 
   773  0119                     	;# 
   774  0119                     	;# 
   775  011A                     	;# 
   776  011A                     	;# 
   777  011A                     	;# 
   778  011B                     	;# 
   779  011B                     	;# 
   780  011B                     	;# 
   781  011B                     	;# 
   782  011B                     	;# 
   783  011C                     	;# 
   784  011C                     	;# 
   785  011C                     	;# 
   786  011D                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  011E                     	;# 
   790  011E                     	;# 
   791  011E                     	;# 
   792  011F                     	;# 
   793  011F                     	;# 
   794  011F                     	;# 
   795  011F                     	;# 
   796  011F                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  018E                     	;# 
   800  018F                     	;# 
   801  0190                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0196                     	;# 
   805  0197                     	;# 
   806  0198                     	;# 
   807  0199                     	;# 
   808  019A                     	;# 
   809  019B                     	;# 
   810  019C                     	;# 
   811  020C                     	;# 
   812  020C                     	;# 
   813  020D                     	;# 
   814  020E                     	;# 
   815  020F                     	;# 
   816  020F                     	;# 
   817  0210                     	;# 
   818  0210                     	;# 
   819  0211                     	;# 
   820  0211                     	;# 
   821  0212                     	;# 
   822  0212                     	;# 
   823  0213                     	;# 
   824  0214                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0216                     	;# 
   828  0216                     	;# 
   829  0217                     	;# 
   830  0217                     	;# 
   831  0218                     	;# 
   832  0218                     	;# 
   833  0219                     	;# 
   834  021A                     	;# 
   835  021B                     	;# 
   836  021B                     	;# 
   837  021C                     	;# 
   838  021C                     	;# 
   839  021D                     	;# 
   840  021D                     	;# 
   841  021E                     	;# 
   842  021F                     	;# 
   843  028C                     	;# 
   844  028C                     	;# 
   845  028D                     	;# 
   846  028D                     	;# 
   847  028E                     	;# 
   848  028F                     	;# 
   849  0290                     	;# 
   850  0290                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0292                     	;# 
   854  0293                     	;# 
   855  0293                     	;# 
   856  0294                     	;# 
   857  0295                     	;# 
   858  0296                     	;# 
   859  0296                     	;# 
   860  0297                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  029B                     	;# 
   867  029C                     	;# 
   868  029C                     	;# 
   869  029D                     	;# 
   870  030C                     	;# 
   871  030C                     	;# 
   872  030D                     	;# 
   873  030E                     	;# 
   874  030F                     	;# 
   875  0310                     	;# 
   876  0310                     	;# 
   877  0311                     	;# 
   878  0312                     	;# 
   879  0313                     	;# 
   880  0314                     	;# 
   881  0314                     	;# 
   882  0315                     	;# 
   883  0316                     	;# 
   884  0317                     	;# 
   885  0318                     	;# 
   886  0318                     	;# 
   887  0319                     	;# 
   888  031A                     	;# 
   889  031B                     	;# 
   890  031C                     	;# 
   891  031C                     	;# 
   892  031D                     	;# 
   893  031E                     	;# 
   894  031F                     	;# 
   895  038C                     	;# 
   896  038C                     	;# 
   897  038D                     	;# 
   898  038E                     	;# 
   899  0390                     	;# 
   900  0390                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  040C                     	;# 
   904  040D                     	;# 
   905  040E                     	;# 
   906  040F                     	;# 
   907  0410                     	;# 
   908  0411                     	;# 
   909  0416                     	;# 
   910  0416                     	;# 
   911  0417                     	;# 
   912  0418                     	;# 
   913  0418                     	;# 
   914  0419                     	;# 
   915  041A                     	;# 
   916  041A                     	;# 
   917  041B                     	;# 
   918  041C                     	;# 
   919  041C                     	;# 
   920  041D                     	;# 
   921  041E                     	;# 
   922  041F                     	;# 
   923  048C                     	;# 
   924  048C                     	;# 
   925  048D                     	;# 
   926  048E                     	;# 
   927  048F                     	;# 
   928  048F                     	;# 
   929  0490                     	;# 
   930  0491                     	;# 
   931  0492                     	;# 
   932  0492                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0495                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0497                     	;# 
   939  0498                     	;# 
   940  0499                     	;# 
   941  049A                     	;# 
   942  049B                     	;# 
   943  049C                     	;# 
   944  049D                     	;# 
   945  050C                     	;# 
   946  050C                     	;# 
   947  050D                     	;# 
   948  050E                     	;# 
   949  050F                     	;# 
   950  050F                     	;# 
   951  0510                     	;# 
   952  0511                     	;# 
   953  0512                     	;# 
   954  0512                     	;# 
   955  0513                     	;# 
   956  0514                     	;# 
   957  0515                     	;# 
   958  0515                     	;# 
   959  0516                     	;# 
   960  0517                     	;# 
   961  0518                     	;# 
   962  0519                     	;# 
   963  051A                     	;# 
   964  051B                     	;# 
   965  051C                     	;# 
   966  051D                     	;# 
   967  058C                     	;# 
   968  058C                     	;# 
   969  058D                     	;# 
   970  058E                     	;# 
   971  058F                     	;# 
   972  058F                     	;# 
   973  0590                     	;# 
   974  0591                     	;# 
   975  0592                     	;# 
   976  0593                     	;# 
   977  060C                     	;# 
   978  060D                     	;# 
   979  060E                     	;# 
   980  060F                     	;# 
   981  0610                     	;# 
   982  0611                     	;# 
   983  0612                     	;# 
   984  0613                     	;# 
   985  0614                     	;# 
   986  0616                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061D                     	;# 
   994  061E                     	;# 
   995  068C                     	;# 
   996  068D                     	;# 
   997  068E                     	;# 
   998  068F                     	;# 
   999  0690                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  070C                     	;# 
  1005  070D                     	;# 
  1006  070E                     	;# 
  1007  070F                     	;# 
  1008  0710                     	;# 
  1009  0711                     	;# 
  1010  0712                     	;# 
  1011  0713                     	;# 
  1012  0714                     	;# 
  1013  0716                     	;# 
  1014  0717                     	;# 
  1015  0718                     	;# 
  1016  0719                     	;# 
  1017  071A                     	;# 
  1018  071B                     	;# 
  1019  071C                     	;# 
  1020  071D                     	;# 
  1021  071E                     	;# 
  1022  0796                     	;# 
  1023  0797                     	;# 
  1024  0798                     	;# 
  1025  0799                     	;# 
  1026  079A                     	;# 
  1027  079B                     	;# 
  1028  080C                     	;# 
  1029  080D                     	;# 
  1030  080E                     	;# 
  1031  080F                     	;# 
  1032  0810                     	;# 
  1033  0811                     	;# 
  1034  0812                     	;# 
  1035  0813                     	;# 
  1036  0814                     	;# 
  1037  081A                     	;# 
  1038  081B                     	;# 
  1039  081C                     	;# 
  1040  081D                     	;# 
  1041  081E                     	;# 
  1042  081F                     	;# 
  1043  088C                     	;# 
  1044  088D                     	;# 
  1045  088E                     	;# 
  1046  088F                     	;# 
  1047  0890                     	;# 
  1048  0891                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0895                     	;# 
  1052  0896                     	;# 
  1053  0897                     	;# 
  1054  0898                     	;# 
  1055  0899                     	;# 
  1056  089A                     	;# 
  1057  089B                     	;# 
  1058  090C                     	;# 
  1059  090E                     	;# 
  1060  090F                     	;# 
  1061  091F                     	;# 
  1062  091F                     	;# 
  1063  098F                     	;# 
  1064  098F                     	;# 
  1065  0990                     	;# 
  1066  0991                     	;# 
  1067  0992                     	;# 
  1068  0993                     	;# 
  1069  0994                     	;# 
  1070  0995                     	;# 
  1071  0996                     	;# 
  1072  0997                     	;# 
  1073  0E0F                     	;# 
  1074  0E10                     	;# 
  1075  0E11                     	;# 
  1076  0E12                     	;# 
  1077  0E13                     	;# 
  1078  0E14                     	;# 
  1079  0E15                     	;# 
  1080  0E16                     	;# 
  1081  0E17                     	;# 
  1082  0E18                     	;# 
  1083  0E19                     	;# 
  1084  0E1A                     	;# 
  1085  0E1B                     	;# 
  1086  0E1C                     	;# 
  1087  0E1D                     	;# 
  1088  0E1E                     	;# 
  1089  0E1F                     	;# 
  1090  0E20                     	;# 
  1091  0E21                     	;# 
  1092  0E22                     	;# 
  1093  0E23                     	;# 
  1094  0E24                     	;# 
  1095  0E25                     	;# 
  1096  0E26                     	;# 
  1097  0E27                     	;# 
  1098  0E28                     	;# 
  1099  0E29                     	;# 
  1100  0E2A                     	;# 
  1101  0E2B                     	;# 
  1102  0E2C                     	;# 
  1103  0E2D                     	;# 
  1104  0E2E                     	;# 
  1105  0E2F                     	;# 
  1106  0E30                     	;# 
  1107  0E31                     	;# 
  1108  0E32                     	;# 
  1109  0E33                     	;# 
  1110  0E34                     	;# 
  1111  0E35                     	;# 
  1112  0E36                     	;# 
  1113  0E37                     	;# 
  1114  0E8F                     	;# 
  1115  0E90                     	;# 
  1116  0E91                     	;# 
  1117  0E92                     	;# 
  1118  0E93                     	;# 
  1119  0E94                     	;# 
  1120  0E95                     	;# 
  1121  0E96                     	;# 
  1122  0E97                     	;# 
  1123  0E9C                     	;# 
  1124  0E9D                     	;# 
  1125  0E9E                     	;# 
  1126  0EA1                     	;# 
  1127  0EA2                     	;# 
  1128  0EA3                     	;# 
  1129  0EA4                     	;# 
  1130  0EA5                     	;# 
  1131  0EA9                     	;# 
  1132  0EAA                     	;# 
  1133  0EAB                     	;# 
  1134  0EAC                     	;# 
  1135  0EB1                     	;# 
  1136  0EB2                     	;# 
  1137  0EB3                     	;# 
  1138  0EB8                     	;# 
  1139  0EB9                     	;# 
  1140  0EBA                     	;# 
  1141  0EBB                     	;# 
  1142  0EBC                     	;# 
  1143  0EBD                     	;# 
  1144  0EBE                     	;# 
  1145  0EC3                     	;# 
  1146  0EC5                     	;# 
  1147  0EC6                     	;# 
  1148  0EC7                     	;# 
  1149  0EC8                     	;# 
  1150  0EC9                     	;# 
  1151  0ECA                     	;# 
  1152  0ECB                     	;# 
  1153  0ECC                     	;# 
  1154  0F10                     	;# 
  1155  0F11                     	;# 
  1156  0F12                     	;# 
  1157  0F13                     	;# 
  1158  0F14                     	;# 
  1159  0F15                     	;# 
  1160  0F16                     	;# 
  1161  0F17                     	;# 
  1162  0F18                     	;# 
  1163  0F19                     	;# 
  1164  0F1A                     	;# 
  1165  0F1B                     	;# 
  1166  0F1C                     	;# 
  1167  0F1D                     	;# 
  1168  0F1E                     	;# 
  1169  0F1F                     	;# 
  1170  0F20                     	;# 
  1171  0F21                     	;# 
  1172  0F22                     	;# 
  1173  0F23                     	;# 
  1174  0F24                     	;# 
  1175  0F25                     	;# 
  1176  0F26                     	;# 
  1177  0F27                     	;# 
  1178  0F28                     	;# 
  1179  0F29                     	;# 
  1180  0F2A                     	;# 
  1181  0F2B                     	;# 
  1182  0F2C                     	;# 
  1183  0F2D                     	;# 
  1184  0F2E                     	;# 
  1185  0F2F                     	;# 
  1186  0F30                     	;# 
  1187  0F31                     	;# 
  1188  0F32                     	;# 
  1189  0F38                     	;# 
  1190  0F39                     	;# 
  1191  0F3A                     	;# 
  1192  0F3B                     	;# 
  1193  0F3C                     	;# 
  1194  0F3D                     	;# 
  1195  0F3E                     	;# 
  1196  0F3F                     	;# 
  1197  0F40                     	;# 
  1198  0F41                     	;# 
  1199  0F43                     	;# 
  1200  0F44                     	;# 
  1201  0F45                     	;# 
  1202  0F46                     	;# 
  1203  0F47                     	;# 
  1204  0F48                     	;# 
  1205  0F49                     	;# 
  1206  0F4A                     	;# 
  1207  0F4B                     	;# 
  1208  0F4C                     	;# 
  1209  0F4E                     	;# 
  1210  0F4F                     	;# 
  1211  0F50                     	;# 
  1212  0F51                     	;# 
  1213  0F52                     	;# 
  1214  0F53                     	;# 
  1215  0F54                     	;# 
  1216  0F55                     	;# 
  1217  0F56                     	;# 
  1218  0F57                     	;# 
  1219  0F59                     	;# 
  1220  0F5A                     	;# 
  1221  0F5B                     	;# 
  1222  0F5C                     	;# 
  1223  0F5D                     	;# 
  1224  0F61                     	;# 
  1225  0F62                     	;# 
  1226  0F64                     	;# 
  1227  0F65                     	;# 
  1228  0F66                     	;# 
  1229  0F67                     	;# 
  1230  0F68                     	;# 
  1231  0F69                     	;# 
  1232  0F6A                     	;# 
  1233  0F6B                     	;# 
  1234  0F6C                     	;# 
  1235  0F6D                     	;# 
  1236  0FE4                     	;# 
  1237  0FE5                     	;# 
  1238  0FE6                     	;# 
  1239  0FE7                     	;# 
  1240  0FE8                     	;# 
  1241  0FE9                     	;# 
  1242  0FEA                     	;# 
  1243  0FEB                     	;# 
  1244  0FED                     	;# 
  1245  0FEE                     	;# 
  1246  0FEF                     	;# 
  1247  0000                     	;# 
  1248  0001                     	;# 
  1249  0002                     	;# 
  1250  0003                     	;# 
  1251  0004                     	;# 
  1252  0005                     	;# 
  1253  0006                     	;# 
  1254  0007                     	;# 
  1255  0008                     	;# 
  1256  0009                     	;# 
  1257  000A                     	;# 
  1258  000B                     	;# 
  1259  000C                     	;# 
  1260  000D                     	;# 
  1261  000E                     	;# 
  1262  000F                     	;# 
  1263  0010                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0013                     	;# 
  1267  0014                     	;# 
  1268  0015                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001C                     	;# 
  1275  001C                     	;# 
  1276  001D                     	;# 
  1277  001D                     	;# 
  1278  001E                     	;# 
  1279  001F                     	;# 
  1280  008C                     	;# 
  1281  008C                     	;# 
  1282  008D                     	;# 
  1283  008E                     	;# 
  1284  008E                     	;# 
  1285  008F                     	;# 
  1286  0090                     	;# 
  1287  0090                     	;# 
  1288  0091                     	;# 
  1289  0093                     	;# 
  1290  0094                     	;# 
  1291  0095                     	;# 
  1292  0096                     	;# 
  1293  0097                     	;# 
  1294  0098                     	;# 
  1295  0099                     	;# 
  1296  009A                     	;# 
  1297  009B                     	;# 
  1298  009C                     	;# 
  1299  009D                     	;# 
  1300  009E                     	;# 
  1301  010C                     	;# 
  1302  010D                     	;# 
  1303  010E                     	;# 
  1304  010E                     	;# 
  1305  010F                     	;# 
  1306  0110                     	;# 
  1307  0110                     	;# 
  1308  0111                     	;# 
  1309  0112                     	;# 
  1310  0112                     	;# 
  1311  0113                     	;# 
  1312  0114                     	;# 
  1313  0114                     	;# 
  1314  0115                     	;# 
  1315  0116                     	;# 
  1316  0116                     	;# 
  1317  0117                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  0119                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011A                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011B                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011C                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011D                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011E                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  011F                     	;# 
  1343  018C                     	;# 
  1344  018D                     	;# 
  1345  018E                     	;# 
  1346  018F                     	;# 
  1347  0190                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0196                     	;# 
  1351  0197                     	;# 
  1352  0198                     	;# 
  1353  0199                     	;# 
  1354  019A                     	;# 
  1355  019B                     	;# 
  1356  019C                     	;# 
  1357  020C                     	;# 
  1358  020C                     	;# 
  1359  020D                     	;# 
  1360  020E                     	;# 
  1361  020F                     	;# 
  1362  020F                     	;# 
  1363  0210                     	;# 
  1364  0210                     	;# 
  1365  0211                     	;# 
  1366  0211                     	;# 
  1367  0212                     	;# 
  1368  0212                     	;# 
  1369  0213                     	;# 
  1370  0214                     	;# 
  1371  0215                     	;# 
  1372  0215                     	;# 
  1373  0216                     	;# 
  1374  0216                     	;# 
  1375  0217                     	;# 
  1376  0217                     	;# 
  1377  0218                     	;# 
  1378  0218                     	;# 
  1379  0219                     	;# 
  1380  021A                     	;# 
  1381  021B                     	;# 
  1382  021B                     	;# 
  1383  021C                     	;# 
  1384  021C                     	;# 
  1385  021D                     	;# 
  1386  021D                     	;# 
  1387  021E                     	;# 
  1388  021F                     	;# 
  1389  028C                     	;# 
  1390  028C                     	;# 
  1391  028D                     	;# 
  1392  028D                     	;# 
  1393  028E                     	;# 
  1394  028F                     	;# 
  1395  0290                     	;# 
  1396  0290                     	;# 
  1397  0291                     	;# 
  1398  0292                     	;# 
  1399  0292                     	;# 
  1400  0293                     	;# 
  1401  0293                     	;# 
  1402  0294                     	;# 
  1403  0295                     	;# 
  1404  0296                     	;# 
  1405  0296                     	;# 
  1406  0297                     	;# 
  1407  0298                     	;# 
  1408  0298                     	;# 
  1409  0299                     	;# 
  1410  0299                     	;# 
  1411  029A                     	;# 
  1412  029B                     	;# 
  1413  029C                     	;# 
  1414  029C                     	;# 
  1415  029D                     	;# 
  1416  030C                     	;# 
  1417  030C                     	;# 
  1418  030D                     	;# 
  1419  030E                     	;# 
  1420  030F                     	;# 
  1421  0310                     	;# 
  1422  0310                     	;# 
  1423  0311                     	;# 
  1424  0312                     	;# 
  1425  0313                     	;# 
  1426  0314                     	;# 
  1427  0314                     	;# 
  1428  0315                     	;# 
  1429  0316                     	;# 
  1430  0317                     	;# 
  1431  0318                     	;# 
  1432  0318                     	;# 
  1433  0319                     	;# 
  1434  031A                     	;# 
  1435  031B                     	;# 
  1436  031C                     	;# 
  1437  031C                     	;# 
  1438  031D                     	;# 
  1439  031E                     	;# 
  1440  031F                     	;# 
  1441  038C                     	;# 
  1442  038C                     	;# 
  1443  038D                     	;# 
  1444  038E                     	;# 
  1445  0390                     	;# 
  1446  0390                     	;# 
  1447  0391                     	;# 
  1448  0392                     	;# 
  1449  040C                     	;# 
  1450  040D                     	;# 
  1451  040E                     	;# 
  1452  040F                     	;# 
  1453  0410                     	;# 
  1454  0411                     	;# 
  1455  0416                     	;# 
  1456  0416                     	;# 
  1457  0417                     	;# 
  1458  0418                     	;# 
  1459  0418                     	;# 
  1460  0419                     	;# 
  1461  041A                     	;# 
  1462  041A                     	;# 
  1463  041B                     	;# 
  1464  041C                     	;# 
  1465  041C                     	;# 
  1466  041D                     	;# 
  1467  041E                     	;# 
  1468  041F                     	;# 
  1469  048C                     	;# 
  1470  048C                     	;# 
  1471  048D                     	;# 
  1472  048E                     	;# 
  1473  048F                     	;# 
  1474  048F                     	;# 
  1475  0490                     	;# 
  1476  0491                     	;# 
  1477  0492                     	;# 
  1478  0492                     	;# 
  1479  0493                     	;# 
  1480  0494                     	;# 
  1481  0495                     	;# 
  1482  0495                     	;# 
  1483  0496                     	;# 
  1484  0497                     	;# 
  1485  0498                     	;# 
  1486  0499                     	;# 
  1487  049A                     	;# 
  1488  049B                     	;# 
  1489  049C                     	;# 
  1490  049D                     	;# 
  1491  050C                     	;# 
  1492  050C                     	;# 
  1493  050D                     	;# 
  1494  050E                     	;# 
  1495  050F                     	;# 
  1496  050F                     	;# 
  1497  0510                     	;# 
  1498  0511                     	;# 
  1499  0512                     	;# 
  1500  0512                     	;# 
  1501  0513                     	;# 
  1502  0514                     	;# 
  1503  0515                     	;# 
  1504  0515                     	;# 
  1505  0516                     	;# 
  1506  0517                     	;# 
  1507  0518                     	;# 
  1508  0519                     	;# 
  1509  051A                     	;# 
  1510  051B                     	;# 
  1511  051C                     	;# 
  1512  051D                     	;# 
  1513  058C                     	;# 
  1514  058C                     	;# 
  1515  058D                     	;# 
  1516  058E                     	;# 
  1517  058F                     	;# 
  1518  058F                     	;# 
  1519  0590                     	;# 
  1520  0591                     	;# 
  1521  0592                     	;# 
  1522  0593                     	;# 
  1523  060C                     	;# 
  1524  060D                     	;# 
  1525  060E                     	;# 
  1526  060F                     	;# 
  1527  0610                     	;# 
  1528  0611                     	;# 
  1529  0612                     	;# 
  1530  0613                     	;# 
  1531  0614                     	;# 
  1532  0616                     	;# 
  1533  0617                     	;# 
  1534  0618                     	;# 
  1535  0619                     	;# 
  1536  061A                     	;# 
  1537  061B                     	;# 
  1538  061C                     	;# 
  1539  061D                     	;# 
  1540  061E                     	;# 
  1541  068C                     	;# 
  1542  068D                     	;# 
  1543  068E                     	;# 
  1544  068F                     	;# 
  1545  0690                     	;# 
  1546  0691                     	;# 
  1547  0692                     	;# 
  1548  0693                     	;# 
  1549  0694                     	;# 
  1550  070C                     	;# 
  1551  070D                     	;# 
  1552  070E                     	;# 
  1553  070F                     	;# 
  1554  0710                     	;# 
  1555  0711                     	;# 
  1556  0712                     	;# 
  1557  0713                     	;# 
  1558  0714                     	;# 
  1559  0716                     	;# 
  1560  0717                     	;# 
  1561  0718                     	;# 
  1562  0719                     	;# 
  1563  071A                     	;# 
  1564  071B                     	;# 
  1565  071C                     	;# 
  1566  071D                     	;# 
  1567  071E                     	;# 
  1568  0796                     	;# 
  1569  0797                     	;# 
  1570  0798                     	;# 
  1571  0799                     	;# 
  1572  079A                     	;# 
  1573  079B                     	;# 
  1574  080C                     	;# 
  1575  080D                     	;# 
  1576  080E                     	;# 
  1577  080F                     	;# 
  1578  0810                     	;# 
  1579  0811                     	;# 
  1580  0812                     	;# 
  1581  0813                     	;# 
  1582  0814                     	;# 
  1583  081A                     	;# 
  1584  081B                     	;# 
  1585  081C                     	;# 
  1586  081D                     	;# 
  1587  081E                     	;# 
  1588  081F                     	;# 
  1589  088C                     	;# 
  1590  088D                     	;# 
  1591  088E                     	;# 
  1592  088F                     	;# 
  1593  0890                     	;# 
  1594  0891                     	;# 
  1595  0892                     	;# 
  1596  0893                     	;# 
  1597  0895                     	;# 
  1598  0896                     	;# 
  1599  0897                     	;# 
  1600  0898                     	;# 
  1601  0899                     	;# 
  1602  089A                     	;# 
  1603  089B                     	;# 
  1604  090C                     	;# 
  1605  090E                     	;# 
  1606  090F                     	;# 
  1607  091F                     	;# 
  1608  091F                     	;# 
  1609  098F                     	;# 
  1610  098F                     	;# 
  1611  0990                     	;# 
  1612  0991                     	;# 
  1613  0992                     	;# 
  1614  0993                     	;# 
  1615  0994                     	;# 
  1616  0995                     	;# 
  1617  0996                     	;# 
  1618  0997                     	;# 
  1619  0E0F                     	;# 
  1620  0E10                     	;# 
  1621  0E11                     	;# 
  1622  0E12                     	;# 
  1623  0E13                     	;# 
  1624  0E14                     	;# 
  1625  0E15                     	;# 
  1626  0E16                     	;# 
  1627  0E17                     	;# 
  1628  0E18                     	;# 
  1629  0E19                     	;# 
  1630  0E1A                     	;# 
  1631  0E1B                     	;# 
  1632  0E1C                     	;# 
  1633  0E1D                     	;# 
  1634  0E1E                     	;# 
  1635  0E1F                     	;# 
  1636  0E20                     	;# 
  1637  0E21                     	;# 
  1638  0E22                     	;# 
  1639  0E23                     	;# 
  1640  0E24                     	;# 
  1641  0E25                     	;# 
  1642  0E26                     	;# 
  1643  0E27                     	;# 
  1644  0E28                     	;# 
  1645  0E29                     	;# 
  1646  0E2A                     	;# 
  1647  0E2B                     	;# 
  1648  0E2C                     	;# 
  1649  0E2D                     	;# 
  1650  0E2E                     	;# 
  1651  0E2F                     	;# 
  1652  0E30                     	;# 
  1653  0E31                     	;# 
  1654  0E32                     	;# 
  1655  0E33                     	;# 
  1656  0E34                     	;# 
  1657  0E35                     	;# 
  1658  0E36                     	;# 
  1659  0E37                     	;# 
  1660  0E8F                     	;# 
  1661  0E90                     	;# 
  1662  0E91                     	;# 
  1663  0E92                     	;# 
  1664  0E93                     	;# 
  1665  0E94                     	;# 
  1666  0E95                     	;# 
  1667  0E96                     	;# 
  1668  0E97                     	;# 
  1669  0E9C                     	;# 
  1670  0E9D                     	;# 
  1671  0E9E                     	;# 
  1672  0EA1                     	;# 
  1673  0EA2                     	;# 
  1674  0EA3                     	;# 
  1675  0EA4                     	;# 
  1676  0EA5                     	;# 
  1677  0EA9                     	;# 
  1678  0EAA                     	;# 
  1679  0EAB                     	;# 
  1680  0EAC                     	;# 
  1681  0EB1                     	;# 
  1682  0EB2                     	;# 
  1683  0EB3                     	;# 
  1684  0EB8                     	;# 
  1685  0EB9                     	;# 
  1686  0EBA                     	;# 
  1687  0EBB                     	;# 
  1688  0EBC                     	;# 
  1689  0EBD                     	;# 
  1690  0EBE                     	;# 
  1691  0EC3                     	;# 
  1692  0EC5                     	;# 
  1693  0EC6                     	;# 
  1694  0EC7                     	;# 
  1695  0EC8                     	;# 
  1696  0EC9                     	;# 
  1697  0ECA                     	;# 
  1698  0ECB                     	;# 
  1699  0ECC                     	;# 
  1700  0F10                     	;# 
  1701  0F11                     	;# 
  1702  0F12                     	;# 
  1703  0F13                     	;# 
  1704  0F14                     	;# 
  1705  0F15                     	;# 
  1706  0F16                     	;# 
  1707  0F17                     	;# 
  1708  0F18                     	;# 
  1709  0F19                     	;# 
  1710  0F1A                     	;# 
  1711  0F1B                     	;# 
  1712  0F1C                     	;# 
  1713  0F1D                     	;# 
  1714  0F1E                     	;# 
  1715  0F1F                     	;# 
  1716  0F20                     	;# 
  1717  0F21                     	;# 
  1718  0F22                     	;# 
  1719  0F23                     	;# 
  1720  0F24                     	;# 
  1721  0F25                     	;# 
  1722  0F26                     	;# 
  1723  0F27                     	;# 
  1724  0F28                     	;# 
  1725  0F29                     	;# 
  1726  0F2A                     	;# 
  1727  0F2B                     	;# 
  1728  0F2C                     	;# 
  1729  0F2D                     	;# 
  1730  0F2E                     	;# 
  1731  0F2F                     	;# 
  1732  0F30                     	;# 
  1733  0F31                     	;# 
  1734  0F32                     	;# 
  1735  0F38                     	;# 
  1736  0F39                     	;# 
  1737  0F3A                     	;# 
  1738  0F3B                     	;# 
  1739  0F3C                     	;# 
  1740  0F3D                     	;# 
  1741  0F3E                     	;# 
  1742  0F3F                     	;# 
  1743  0F40                     	;# 
  1744  0F41                     	;# 
  1745  0F43                     	;# 
  1746  0F44                     	;# 
  1747  0F45                     	;# 
  1748  0F46                     	;# 
  1749  0F47                     	;# 
  1750  0F48                     	;# 
  1751  0F49                     	;# 
  1752  0F4A                     	;# 
  1753  0F4B                     	;# 
  1754  0F4C                     	;# 
  1755  0F4E                     	;# 
  1756  0F4F                     	;# 
  1757  0F50                     	;# 
  1758  0F51                     	;# 
  1759  0F52                     	;# 
  1760  0F53                     	;# 
  1761  0F54                     	;# 
  1762  0F55                     	;# 
  1763  0F56                     	;# 
  1764  0F57                     	;# 
  1765  0F59                     	;# 
  1766  0F5A                     	;# 
  1767  0F5B                     	;# 
  1768  0F5C                     	;# 
  1769  0F5D                     	;# 
  1770  0F61                     	;# 
  1771  0F62                     	;# 
  1772  0F64                     	;# 
  1773  0F65                     	;# 
  1774  0F66                     	;# 
  1775  0F67                     	;# 
  1776  0F68                     	;# 
  1777  0F69                     	;# 
  1778  0F6A                     	;# 
  1779  0F6B                     	;# 
  1780  0F6C                     	;# 
  1781  0F6D                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  000F                     	;# 
  1809  0010                     	;# 
  1810  0011                     	;# 
  1811  0012                     	;# 
  1812  0013                     	;# 
  1813  0014                     	;# 
  1814  0015                     	;# 
  1815  0016                     	;# 
  1816  0017                     	;# 
  1817  0018                     	;# 
  1818  0019                     	;# 
  1819  001A                     	;# 
  1820  001C                     	;# 
  1821  001C                     	;# 
  1822  001D                     	;# 
  1823  001D                     	;# 
  1824  001E                     	;# 
  1825  001F                     	;# 
  1826  008C                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  008E                     	;# 
  1831  008F                     	;# 
  1832  0090                     	;# 
  1833  0090                     	;# 
  1834  0091                     	;# 
  1835  0093                     	;# 
  1836  0094                     	;# 
  1837  0095                     	;# 
  1838  0096                     	;# 
  1839  0097                     	;# 
  1840  0098                     	;# 
  1841  0099                     	;# 
  1842  009A                     	;# 
  1843  009B                     	;# 
  1844  009C                     	;# 
  1845  009D                     	;# 
  1846  009E                     	;# 
  1847  010C                     	;# 
  1848  010D                     	;# 
  1849  010E                     	;# 
  1850  010E                     	;# 
  1851  010F                     	;# 
  1852  0110                     	;# 
  1853  0110                     	;# 
  1854  0111                     	;# 
  1855  0112                     	;# 
  1856  0112                     	;# 
  1857  0113                     	;# 
  1858  0114                     	;# 
  1859  0114                     	;# 
  1860  0115                     	;# 
  1861  0116                     	;# 
  1862  0116                     	;# 
  1863  0117                     	;# 
  1864  0119                     	;# 
  1865  0119                     	;# 
  1866  0119                     	;# 
  1867  011A                     	;# 
  1868  011A                     	;# 
  1869  011A                     	;# 
  1870  011B                     	;# 
  1871  011B                     	;# 
  1872  011B                     	;# 
  1873  011B                     	;# 
  1874  011B                     	;# 
  1875  011C                     	;# 
  1876  011C                     	;# 
  1877  011C                     	;# 
  1878  011D                     	;# 
  1879  011D                     	;# 
  1880  011D                     	;# 
  1881  011E                     	;# 
  1882  011E                     	;# 
  1883  011E                     	;# 
  1884  011F                     	;# 
  1885  011F                     	;# 
  1886  011F                     	;# 
  1887  011F                     	;# 
  1888  011F                     	;# 
  1889  018C                     	;# 
  1890  018D                     	;# 
  1891  018E                     	;# 
  1892  018F                     	;# 
  1893  0190                     	;# 
  1894  0191                     	;# 
  1895  0192                     	;# 
  1896  0196                     	;# 
  1897  0197                     	;# 
  1898  0198                     	;# 
  1899  0199                     	;# 
  1900  019A                     	;# 
  1901  019B                     	;# 
  1902  019C                     	;# 
  1903  020C                     	;# 
  1904  020C                     	;# 
  1905  020D                     	;# 
  1906  020E                     	;# 
  1907  020F                     	;# 
  1908  020F                     	;# 
  1909  0210                     	;# 
  1910  0210                     	;# 
  1911  0211                     	;# 
  1912  0211                     	;# 
  1913  0212                     	;# 
  1914  0212                     	;# 
  1915  0213                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0216                     	;# 
  1920  0216                     	;# 
  1921  0217                     	;# 
  1922  0217                     	;# 
  1923  0218                     	;# 
  1924  0218                     	;# 
  1925  0219                     	;# 
  1926  021A                     	;# 
  1927  021B                     	;# 
  1928  021B                     	;# 
  1929  021C                     	;# 
  1930  021C                     	;# 
  1931  021D                     	;# 
  1932  021D                     	;# 
  1933  021E                     	;# 
  1934  021F                     	;# 
  1935  028C                     	;# 
  1936  028C                     	;# 
  1937  028D                     	;# 
  1938  028D                     	;# 
  1939  028E                     	;# 
  1940  028F                     	;# 
  1941  0290                     	;# 
  1942  0290                     	;# 
  1943  0291                     	;# 
  1944  0292                     	;# 
  1945  0292                     	;# 
  1946  0293                     	;# 
  1947  0293                     	;# 
  1948  0294                     	;# 
  1949  0295                     	;# 
  1950  0296                     	;# 
  1951  0296                     	;# 
  1952  0297                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  0299                     	;# 
  1957  029A                     	;# 
  1958  029B                     	;# 
  1959  029C                     	;# 
  1960  029C                     	;# 
  1961  029D                     	;# 
  1962  030C                     	;# 
  1963  030C                     	;# 
  1964  030D                     	;# 
  1965  030E                     	;# 
  1966  030F                     	;# 
  1967  0310                     	;# 
  1968  0310                     	;# 
  1969  0311                     	;# 
  1970  0312                     	;# 
  1971  0313                     	;# 
  1972  0314                     	;# 
  1973  0314                     	;# 
  1974  0315                     	;# 
  1975  0316                     	;# 
  1976  0317                     	;# 
  1977  0318                     	;# 
  1978  0318                     	;# 
  1979  0319                     	;# 
  1980  031A                     	;# 
  1981  031B                     	;# 
  1982  031C                     	;# 
  1983  031C                     	;# 
  1984  031D                     	;# 
  1985  031E                     	;# 
  1986  031F                     	;# 
  1987  038C                     	;# 
  1988  038C                     	;# 
  1989  038D                     	;# 
  1990  038E                     	;# 
  1991  0390                     	;# 
  1992  0390                     	;# 
  1993  0391                     	;# 
  1994  0392                     	;# 
  1995  040C                     	;# 
  1996  040D                     	;# 
  1997  040E                     	;# 
  1998  040F                     	;# 
  1999  0410                     	;# 
  2000  0411                     	;# 
  2001  0416                     	;# 
  2002  0416                     	;# 
  2003  0417                     	;# 
  2004  0418                     	;# 
  2005  0418                     	;# 
  2006  0419                     	;# 
  2007  041A                     	;# 
  2008  041A                     	;# 
  2009  041B                     	;# 
  2010  041C                     	;# 
  2011  041C                     	;# 
  2012  041D                     	;# 
  2013  041E                     	;# 
  2014  041F                     	;# 
  2015  048C                     	;# 
  2016  048C                     	;# 
  2017  048D                     	;# 
  2018  048E                     	;# 
  2019  048F                     	;# 
  2020  048F                     	;# 
  2021  0490                     	;# 
  2022  0491                     	;# 
  2023  0492                     	;# 
  2024  0492                     	;# 
  2025  0493                     	;# 
  2026  0494                     	;# 
  2027  0495                     	;# 
  2028  0495                     	;# 
  2029  0496                     	;# 
  2030  0497                     	;# 
  2031  0498                     	;# 
  2032  0499                     	;# 
  2033  049A                     	;# 
  2034  049B                     	;# 
  2035  049C                     	;# 
  2036  049D                     	;# 
  2037  050C                     	;# 
  2038  050C                     	;# 
  2039  050D                     	;# 
  2040  050E                     	;# 
  2041  050F                     	;# 
  2042  050F                     	;# 
  2043  0510                     	;# 
  2044  0511                     	;# 
  2045  0512                     	;# 
  2046  0512                     	;# 
  2047  0513                     	;# 
  2048  0514                     	;# 
  2049  0515                     	;# 
  2050  0515                     	;# 
  2051  0516                     	;# 
  2052  0517                     	;# 
  2053  0518                     	;# 
  2054  0519                     	;# 
  2055  051A                     	;# 
  2056  051B                     	;# 
  2057  051C                     	;# 
  2058  051D                     	;# 
  2059  058C                     	;# 
  2060  058C                     	;# 
  2061  058D                     	;# 
  2062  058E                     	;# 
  2063  058F                     	;# 
  2064  058F                     	;# 
  2065  0590                     	;# 
  2066  0591                     	;# 
  2067  0592                     	;# 
  2068  0593                     	;# 
  2069  060C                     	;# 
  2070  060D                     	;# 
  2071  060E                     	;# 
  2072  060F                     	;# 
  2073  0610                     	;# 
  2074  0611                     	;# 
  2075  0612                     	;# 
  2076  0613                     	;# 
  2077  0614                     	;# 
  2078  0616                     	;# 
  2079  0617                     	;# 
  2080  0618                     	;# 
  2081  0619                     	;# 
  2082  061A                     	;# 
  2083  061B                     	;# 
  2084  061C                     	;# 
  2085  061D                     	;# 
  2086  061E                     	;# 
  2087  068C                     	;# 
  2088  068D                     	;# 
  2089  068E                     	;# 
  2090  068F                     	;# 
  2091  0690                     	;# 
  2092  0691                     	;# 
  2093  0692                     	;# 
  2094  0693                     	;# 
  2095  0694                     	;# 
  2096  070C                     	;# 
  2097  070D                     	;# 
  2098  070E                     	;# 
  2099  070F                     	;# 
  2100  0710                     	;# 
  2101  0711                     	;# 
  2102  0712                     	;# 
  2103  0713                     	;# 
  2104  0714                     	;# 
  2105  0716                     	;# 
  2106  0717                     	;# 
  2107  0718                     	;# 
  2108  0719                     	;# 
  2109  071A                     	;# 
  2110  071B                     	;# 
  2111  071C                     	;# 
  2112  071D                     	;# 
  2113  071E                     	;# 
  2114  0796                     	;# 
  2115  0797                     	;# 
  2116  0798                     	;# 
  2117  0799                     	;# 
  2118  079A                     	;# 
  2119  079B                     	;# 
  2120  080C                     	;# 
  2121  080D                     	;# 
  2122  080E                     	;# 
  2123  080F                     	;# 
  2124  0810                     	;# 
  2125  0811                     	;# 
  2126  0812                     	;# 
  2127  0813                     	;# 
  2128  0814                     	;# 
  2129  081A                     	;# 
  2130  081B                     	;# 
  2131  081C                     	;# 
  2132  081D                     	;# 
  2133  081E                     	;# 
  2134  081F                     	;# 
  2135  088C                     	;# 
  2136  088D                     	;# 
  2137  088E                     	;# 
  2138  088F                     	;# 
  2139  0890                     	;# 
  2140  0891                     	;# 
  2141  0892                     	;# 
  2142  0893                     	;# 
  2143  0895                     	;# 
  2144  0896                     	;# 
  2145  0897                     	;# 
  2146  0898                     	;# 
  2147  0899                     	;# 
  2148  089A                     	;# 
  2149  089B                     	;# 
  2150  090C                     	;# 
  2151  090E                     	;# 
  2152  090F                     	;# 
  2153  091F                     	;# 
  2154  091F                     	;# 
  2155  098F                     	;# 
  2156  098F                     	;# 
  2157  0990                     	;# 
  2158  0991                     	;# 
  2159  0992                     	;# 
  2160  0993                     	;# 
  2161  0994                     	;# 
  2162  0995                     	;# 
  2163  0996                     	;# 
  2164  0997                     	;# 
  2165  0E0F                     	;# 
  2166  0E10                     	;# 
  2167  0E11                     	;# 
  2168  0E12                     	;# 
  2169  0E13                     	;# 
  2170  0E14                     	;# 
  2171  0E15                     	;# 
  2172  0E16                     	;# 
  2173  0E17                     	;# 
  2174  0E18                     	;# 
  2175  0E19                     	;# 
  2176  0E1A                     	;# 
  2177  0E1B                     	;# 
  2178  0E1C                     	;# 
  2179  0E1D                     	;# 
  2180  0E1E                     	;# 
  2181  0E1F                     	;# 
  2182  0E20                     	;# 
  2183  0E21                     	;# 
  2184  0E22                     	;# 
  2185  0E23                     	;# 
  2186  0E24                     	;# 
  2187  0E25                     	;# 
  2188  0E26                     	;# 
  2189  0E27                     	;# 
  2190  0E28                     	;# 
  2191  0E29                     	;# 
  2192  0E2A                     	;# 
  2193  0E2B                     	;# 
  2194  0E2C                     	;# 
  2195  0E2D                     	;# 
  2196  0E2E                     	;# 
  2197  0E2F                     	;# 
  2198  0E30                     	;# 
  2199  0E31                     	;# 
  2200  0E32                     	;# 
  2201  0E33                     	;# 
  2202  0E34                     	;# 
  2203  0E35                     	;# 
  2204  0E36                     	;# 
  2205  0E37                     	;# 
  2206  0E8F                     	;# 
  2207  0E90                     	;# 
  2208  0E91                     	;# 
  2209  0E92                     	;# 
  2210  0E93                     	;# 
  2211  0E94                     	;# 
  2212  0E95                     	;# 
  2213  0E96                     	;# 
  2214  0E97                     	;# 
  2215  0E9C                     	;# 
  2216  0E9D                     	;# 
  2217  0E9E                     	;# 
  2218  0EA1                     	;# 
  2219  0EA2                     	;# 
  2220  0EA3                     	;# 
  2221  0EA4                     	;# 
  2222  0EA5                     	;# 
  2223  0EA9                     	;# 
  2224  0EAA                     	;# 
  2225  0EAB                     	;# 
  2226  0EAC                     	;# 
  2227  0EB1                     	;# 
  2228  0EB2                     	;# 
  2229  0EB3                     	;# 
  2230  0EB8                     	;# 
  2231  0EB9                     	;# 
  2232  0EBA                     	;# 
  2233  0EBB                     	;# 
  2234  0EBC                     	;# 
  2235  0EBD                     	;# 
  2236  0EBE                     	;# 
  2237  0EC3                     	;# 
  2238  0EC5                     	;# 
  2239  0EC6                     	;# 
  2240  0EC7                     	;# 
  2241  0EC8                     	;# 
  2242  0EC9                     	;# 
  2243  0ECA                     	;# 
  2244  0ECB                     	;# 
  2245  0ECC                     	;# 
  2246  0F10                     	;# 
  2247  0F11                     	;# 
  2248  0F12                     	;# 
  2249  0F13                     	;# 
  2250  0F14                     	;# 
  2251  0F15                     	;# 
  2252  0F16                     	;# 
  2253  0F17                     	;# 
  2254  0F18                     	;# 
  2255  0F19                     	;# 
  2256  0F1A                     	;# 
  2257  0F1B                     	;# 
  2258  0F1C                     	;# 
  2259  0F1D                     	;# 
  2260  0F1E                     	;# 
  2261  0F1F                     	;# 
  2262  0F20                     	;# 
  2263  0F21                     	;# 
  2264  0F22                     	;# 
  2265  0F23                     	;# 
  2266  0F24                     	;# 
  2267  0F25                     	;# 
  2268  0F26                     	;# 
  2269  0F27                     	;# 
  2270  0F28                     	;# 
  2271  0F29                     	;# 
  2272  0F2A                     	;# 
  2273  0F2B                     	;# 
  2274  0F2C                     	;# 
  2275  0F2D                     	;# 
  2276  0F2E                     	;# 
  2277  0F2F                     	;# 
  2278  0F30                     	;# 
  2279  0F31                     	;# 
  2280  0F32                     	;# 
  2281  0F38                     	;# 
  2282  0F39                     	;# 
  2283  0F3A                     	;# 
  2284  0F3B                     	;# 
  2285  0F3C                     	;# 
  2286  0F3D                     	;# 
  2287  0F3E                     	;# 
  2288  0F3F                     	;# 
  2289  0F40                     	;# 
  2290  0F41                     	;# 
  2291  0F43                     	;# 
  2292  0F44                     	;# 
  2293  0F45                     	;# 
  2294  0F46                     	;# 
  2295  0F47                     	;# 
  2296  0F48                     	;# 
  2297  0F49                     	;# 
  2298  0F4A                     	;# 
  2299  0F4B                     	;# 
  2300  0F4C                     	;# 
  2301  0F4E                     	;# 
  2302  0F4F                     	;# 
  2303  0F50                     	;# 
  2304  0F51                     	;# 
  2305  0F52                     	;# 
  2306  0F53                     	;# 
  2307  0F54                     	;# 
  2308  0F55                     	;# 
  2309  0F56                     	;# 
  2310  0F57                     	;# 
  2311  0F59                     	;# 
  2312  0F5A                     	;# 
  2313  0F5B                     	;# 
  2314  0F5C                     	;# 
  2315  0F5D                     	;# 
  2316  0F61                     	;# 
  2317  0F62                     	;# 
  2318  0F64                     	;# 
  2319  0F65                     	;# 
  2320  0F66                     	;# 
  2321  0F67                     	;# 
  2322  0F68                     	;# 
  2323  0F69                     	;# 
  2324  0F6A                     	;# 
  2325  0F6B                     	;# 
  2326  0F6C                     	;# 
  2327  0F6D                     	;# 
  2328  0FE4                     	;# 
  2329  0FE5                     	;# 
  2330  0FE6                     	;# 
  2331  0FE7                     	;# 
  2332  0FE8                     	;# 
  2333  0FE9                     	;# 
  2334  0FEA                     	;# 
  2335  0FEB                     	;# 
  2336  0FED                     	;# 
  2337  0FEE                     	;# 
  2338  0FEF                     	;# 
  2339  0000                     	;# 
  2340  0001                     	;# 
  2341  0002                     	;# 
  2342  0003                     	;# 
  2343  0004                     	;# 
  2344  0005                     	;# 
  2345  0006                     	;# 
  2346  0007                     	;# 
  2347  0008                     	;# 
  2348  0009                     	;# 
  2349  000A                     	;# 
  2350  000B                     	;# 
  2351  000C                     	;# 
  2352  000D                     	;# 
  2353  000E                     	;# 
  2354  000F                     	;# 
  2355  0010                     	;# 
  2356  0011                     	;# 
  2357  0012                     	;# 
  2358  0013                     	;# 
  2359  0014                     	;# 
  2360  0015                     	;# 
  2361  0016                     	;# 
  2362  0017                     	;# 
  2363  0018                     	;# 
  2364  0019                     	;# 
  2365  001A                     	;# 
  2366  001C                     	;# 
  2367  001C                     	;# 
  2368  001D                     	;# 
  2369  001D                     	;# 
  2370  001E                     	;# 
  2371  001F                     	;# 
  2372  008C                     	;# 
  2373  008C                     	;# 
  2374  008D                     	;# 
  2375  008E                     	;# 
  2376  008E                     	;# 
  2377  008F                     	;# 
  2378  0090                     	;# 
  2379  0090                     	;# 
  2380  0091                     	;# 
  2381  0093                     	;# 
  2382  0094                     	;# 
  2383  0095                     	;# 
  2384  0096                     	;# 
  2385  0097                     	;# 
  2386  0098                     	;# 
  2387  0099                     	;# 
  2388  009A                     	;# 
  2389  009B                     	;# 
  2390  009C                     	;# 
  2391  009D                     	;# 
  2392  009E                     	;# 
  2393  010C                     	;# 
  2394  010D                     	;# 
  2395  010E                     	;# 
  2396  010E                     	;# 
  2397  010F                     	;# 
  2398  0110                     	;# 
  2399  0110                     	;# 
  2400  0111                     	;# 
  2401  0112                     	;# 
  2402  0112                     	;# 
  2403  0113                     	;# 
  2404  0114                     	;# 
  2405  0114                     	;# 
  2406  0115                     	;# 
  2407  0116                     	;# 
  2408  0116                     	;# 
  2409  0117                     	;# 
  2410  0119                     	;# 
  2411  0119                     	;# 
  2412  0119                     	;# 
  2413  011A                     	;# 
  2414  011A                     	;# 
  2415  011A                     	;# 
  2416  011B                     	;# 
  2417  011B                     	;# 
  2418  011B                     	;# 
  2419  011B                     	;# 
  2420  011B                     	;# 
  2421  011C                     	;# 
  2422  011C                     	;# 
  2423  011C                     	;# 
  2424  011D                     	;# 
  2425  011D                     	;# 
  2426  011D                     	;# 
  2427  011E                     	;# 
  2428  011E                     	;# 
  2429  011E                     	;# 
  2430  011F                     	;# 
  2431  011F                     	;# 
  2432  011F                     	;# 
  2433  011F                     	;# 
  2434  011F                     	;# 
  2435  018C                     	;# 
  2436  018D                     	;# 
  2437  018E                     	;# 
  2438  018F                     	;# 
  2439  0190                     	;# 
  2440  0191                     	;# 
  2441  0192                     	;# 
  2442  0196                     	;# 
  2443  0197                     	;# 
  2444  0198                     	;# 
  2445  0199                     	;# 
  2446  019A                     	;# 
  2447  019B                     	;# 
  2448  019C                     	;# 
  2449  020C                     	;# 
  2450  020C                     	;# 
  2451  020D                     	;# 
  2452  020E                     	;# 
  2453  020F                     	;# 
  2454  020F                     	;# 
  2455  0210                     	;# 
  2456  0210                     	;# 
  2457  0211                     	;# 
  2458  0211                     	;# 
  2459  0212                     	;# 
  2460  0212                     	;# 
  2461  0213                     	;# 
  2462  0214                     	;# 
  2463  0215                     	;# 
  2464  0215                     	;# 
  2465  0216                     	;# 
  2466  0216                     	;# 
  2467  0217                     	;# 
  2468  0217                     	;# 
  2469  0218                     	;# 
  2470  0218                     	;# 
  2471  0219                     	;# 
  2472  021A                     	;# 
  2473  021B                     	;# 
  2474  021B                     	;# 
  2475  021C                     	;# 
  2476  021C                     	;# 
  2477  021D                     	;# 
  2478  021D                     	;# 
  2479  021E                     	;# 
  2480  021F                     	;# 
  2481  028C                     	;# 
  2482  028C                     	;# 
  2483  028D                     	;# 
  2484  028D                     	;# 
  2485  028E                     	;# 
  2486  028F                     	;# 
  2487  0290                     	;# 
  2488  0290                     	;# 
  2489  0291                     	;# 
  2490  0292                     	;# 
  2491  0292                     	;# 
  2492  0293                     	;# 
  2493  0293                     	;# 
  2494  0294                     	;# 
  2495  0295                     	;# 
  2496  0296                     	;# 
  2497  0296                     	;# 
  2498  0297                     	;# 
  2499  0298                     	;# 
  2500  0298                     	;# 
  2501  0299                     	;# 
  2502  0299                     	;# 
  2503  029A                     	;# 
  2504  029B                     	;# 
  2505  029C                     	;# 
  2506  029C                     	;# 
  2507  029D                     	;# 
  2508  030C                     	;# 
  2509  030C                     	;# 
  2510  030D                     	;# 
  2511  030E                     	;# 
  2512  030F                     	;# 
  2513  0310                     	;# 
  2514  0310                     	;# 
  2515  0311                     	;# 
  2516  0312                     	;# 
  2517  0313                     	;# 
  2518  0314                     	;# 
  2519  0314                     	;# 
  2520  0315                     	;# 
  2521  0316                     	;# 
  2522  0317                     	;# 
  2523  0318                     	;# 
  2524  0318                     	;# 
  2525  0319                     	;# 
  2526  031A                     	;# 
  2527  031B                     	;# 
  2528  031C                     	;# 
  2529  031C                     	;# 
  2530  031D                     	;# 
  2531  031E                     	;# 
  2532  031F                     	;# 
  2533  038C                     	;# 
  2534  038C                     	;# 
  2535  038D                     	;# 
  2536  038E                     	;# 
  2537  0390                     	;# 
  2538  0390                     	;# 
  2539  0391                     	;# 
  2540  0392                     	;# 
  2541  040C                     	;# 
  2542  040D                     	;# 
  2543  040E                     	;# 
  2544  040F                     	;# 
  2545  0410                     	;# 
  2546  0411                     	;# 
  2547  0416                     	;# 
  2548  0416                     	;# 
  2549  0417                     	;# 
  2550  0418                     	;# 
  2551  0418                     	;# 
  2552  0419                     	;# 
  2553  041A                     	;# 
  2554  041A                     	;# 
  2555  041B                     	;# 
  2556  041C                     	;# 
  2557  041C                     	;# 
  2558  041D                     	;# 
  2559  041E                     	;# 
  2560  041F                     	;# 
  2561  048C                     	;# 
  2562  048C                     	;# 
  2563  048D                     	;# 
  2564  048E                     	;# 
  2565  048F                     	;# 
  2566  048F                     	;# 
  2567  0490                     	;# 
  2568  0491                     	;# 
  2569  0492                     	;# 
  2570  0492                     	;# 
  2571  0493                     	;# 
  2572  0494                     	;# 
  2573  0495                     	;# 
  2574  0495                     	;# 
  2575  0496                     	;# 
  2576  0497                     	;# 
  2577  0498                     	;# 
  2578  0499                     	;# 
  2579  049A                     	;# 
  2580  049B                     	;# 
  2581  049C                     	;# 
  2582  049D                     	;# 
  2583  050C                     	;# 
  2584  050C                     	;# 
  2585  050D                     	;# 
  2586  050E                     	;# 
  2587  050F                     	;# 
  2588  050F                     	;# 
  2589  0510                     	;# 
  2590  0511                     	;# 
  2591  0512                     	;# 
  2592  0512                     	;# 
  2593  0513                     	;# 
  2594  0514                     	;# 
  2595  0515                     	;# 
  2596  0515                     	;# 
  2597  0516                     	;# 
  2598  0517                     	;# 
  2599  0518                     	;# 
  2600  0519                     	;# 
  2601  051A                     	;# 
  2602  051B                     	;# 
  2603  051C                     	;# 
  2604  051D                     	;# 
  2605  058C                     	;# 
  2606  058C                     	;# 
  2607  058D                     	;# 
  2608  058E                     	;# 
  2609  058F                     	;# 
  2610  058F                     	;# 
  2611  0590                     	;# 
  2612  0591                     	;# 
  2613  0592                     	;# 
  2614  0593                     	;# 
  2615  060C                     	;# 
  2616  060D                     	;# 
  2617  060E                     	;# 
  2618  060F                     	;# 
  2619  0610                     	;# 
  2620  0611                     	;# 
  2621  0612                     	;# 
  2622  0613                     	;# 
  2623  0614                     	;# 
  2624  0616                     	;# 
  2625  0617                     	;# 
  2626  0618                     	;# 
  2627  0619                     	;# 
  2628  061A                     	;# 
  2629  061B                     	;# 
  2630  061C                     	;# 
  2631  061D                     	;# 
  2632  061E                     	;# 
  2633  068C                     	;# 
  2634  068D                     	;# 
  2635  068E                     	;# 
  2636  068F                     	;# 
  2637  0690                     	;# 
  2638  0691                     	;# 
  2639  0692                     	;# 
  2640  0693                     	;# 
  2641  0694                     	;# 
  2642  070C                     	;# 
  2643  070D                     	;# 
  2644  070E                     	;# 
  2645  070F                     	;# 
  2646  0710                     	;# 
  2647  0711                     	;# 
  2648  0712                     	;# 
  2649  0713                     	;# 
  2650  0714                     	;# 
  2651  0716                     	;# 
  2652  0717                     	;# 
  2653  0718                     	;# 
  2654  0719                     	;# 
  2655  071A                     	;# 
  2656  071B                     	;# 
  2657  071C                     	;# 
  2658  071D                     	;# 
  2659  071E                     	;# 
  2660  0796                     	;# 
  2661  0797                     	;# 
  2662  0798                     	;# 
  2663  0799                     	;# 
  2664  079A                     	;# 
  2665  079B                     	;# 
  2666  080C                     	;# 
  2667  080D                     	;# 
  2668  080E                     	;# 
  2669  080F                     	;# 
  2670  0810                     	;# 
  2671  0811                     	;# 
  2672  0812                     	;# 
  2673  0813                     	;# 
  2674  0814                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081D                     	;# 
  2679  081E                     	;# 
  2680  081F                     	;# 
  2681  088C                     	;# 
  2682  088D                     	;# 
  2683  088E                     	;# 
  2684  088F                     	;# 
  2685  0890                     	;# 
  2686  0891                     	;# 
  2687  0892                     	;# 
  2688  0893                     	;# 
  2689  0895                     	;# 
  2690  0896                     	;# 
  2691  0897                     	;# 
  2692  0898                     	;# 
  2693  0899                     	;# 
  2694  089A                     	;# 
  2695  089B                     	;# 
  2696  090C                     	;# 
  2697  090E                     	;# 
  2698  090F                     	;# 
  2699  091F                     	;# 
  2700  091F                     	;# 
  2701  098F                     	;# 
  2702  098F                     	;# 
  2703  0990                     	;# 
  2704  0991                     	;# 
  2705  0992                     	;# 
  2706  0993                     	;# 
  2707  0994                     	;# 
  2708  0995                     	;# 
  2709  0996                     	;# 
  2710  0997                     	;# 
  2711  0E0F                     	;# 
  2712  0E10                     	;# 
  2713  0E11                     	;# 
  2714  0E12                     	;# 
  2715  0E13                     	;# 
  2716  0E14                     	;# 
  2717  0E15                     	;# 
  2718  0E16                     	;# 
  2719  0E17                     	;# 
  2720  0E18                     	;# 
  2721  0E19                     	;# 
  2722  0E1A                     	;# 
  2723  0E1B                     	;# 
  2724  0E1C                     	;# 
  2725  0E1D                     	;# 
  2726  0E1E                     	;# 
  2727  0E1F                     	;# 
  2728  0E20                     	;# 
  2729  0E21                     	;# 
  2730  0E22                     	;# 
  2731  0E23                     	;# 
  2732  0E24                     	;# 
  2733  0E25                     	;# 
  2734  0E26                     	;# 
  2735  0E27                     	;# 
  2736  0E28                     	;# 
  2737  0E29                     	;# 
  2738  0E2A                     	;# 
  2739  0E2B                     	;# 
  2740  0E2C                     	;# 
  2741  0E2D                     	;# 
  2742  0E2E                     	;# 
  2743  0E2F                     	;# 
  2744  0E30                     	;# 
  2745  0E31                     	;# 
  2746  0E32                     	;# 
  2747  0E33                     	;# 
  2748  0E34                     	;# 
  2749  0E35                     	;# 
  2750  0E36                     	;# 
  2751  0E37                     	;# 
  2752  0E8F                     	;# 
  2753  0E90                     	;# 
  2754  0E91                     	;# 
  2755  0E92                     	;# 
  2756  0E93                     	;# 
  2757  0E94                     	;# 
  2758  0E95                     	;# 
  2759  0E96                     	;# 
  2760  0E97                     	;# 
  2761  0E9C                     	;# 
  2762  0E9D                     	;# 
  2763  0E9E                     	;# 
  2764  0EA1                     	;# 
  2765  0EA2                     	;# 
  2766  0EA3                     	;# 
  2767  0EA4                     	;# 
  2768  0EA5                     	;# 
  2769  0EA9                     	;# 
  2770  0EAA                     	;# 
  2771  0EAB                     	;# 
  2772  0EAC                     	;# 
  2773  0EB1                     	;# 
  2774  0EB2                     	;# 
  2775  0EB3                     	;# 
  2776  0EB8                     	;# 
  2777  0EB9                     	;# 
  2778  0EBA                     	;# 
  2779  0EBB                     	;# 
  2780  0EBC                     	;# 
  2781  0EBD                     	;# 
  2782  0EBE                     	;# 
  2783  0EC3                     	;# 
  2784  0EC5                     	;# 
  2785  0EC6                     	;# 
  2786  0EC7                     	;# 
  2787  0EC8                     	;# 
  2788  0EC9                     	;# 
  2789  0ECA                     	;# 
  2790  0ECB                     	;# 
  2791  0ECC                     	;# 
  2792  0F10                     	;# 
  2793  0F11                     	;# 
  2794  0F12                     	;# 
  2795  0F13                     	;# 
  2796  0F14                     	;# 
  2797  0F15                     	;# 
  2798  0F16                     	;# 
  2799  0F17                     	;# 
  2800  0F18                     	;# 
  2801  0F19                     	;# 
  2802  0F1A                     	;# 
  2803  0F1B                     	;# 
  2804  0F1C                     	;# 
  2805  0F1D                     	;# 
  2806  0F1E                     	;# 
  2807  0F1F                     	;# 
  2808  0F20                     	;# 
  2809  0F21                     	;# 
  2810  0F22                     	;# 
  2811  0F23                     	;# 
  2812  0F24                     	;# 
  2813  0F25                     	;# 
  2814  0F26                     	;# 
  2815  0F27                     	;# 
  2816  0F28                     	;# 
  2817  0F29                     	;# 
  2818  0F2A                     	;# 
  2819  0F2B                     	;# 
  2820  0F2C                     	;# 
  2821  0F2D                     	;# 
  2822  0F2E                     	;# 
  2823  0F2F                     	;# 
  2824  0F30                     	;# 
  2825  0F31                     	;# 
  2826  0F32                     	;# 
  2827  0F38                     	;# 
  2828  0F39                     	;# 
  2829  0F3A                     	;# 
  2830  0F3B                     	;# 
  2831  0F3C                     	;# 
  2832  0F3D                     	;# 
  2833  0F3E                     	;# 
  2834  0F3F                     	;# 
  2835  0F40                     	;# 
  2836  0F41                     	;# 
  2837  0F43                     	;# 
  2838  0F44                     	;# 
  2839  0F45                     	;# 
  2840  0F46                     	;# 
  2841  0F47                     	;# 
  2842  0F48                     	;# 
  2843  0F49                     	;# 
  2844  0F4A                     	;# 
  2845  0F4B                     	;# 
  2846  0F4C                     	;# 
  2847  0F4E                     	;# 
  2848  0F4F                     	;# 
  2849  0F50                     	;# 
  2850  0F51                     	;# 
  2851  0F52                     	;# 
  2852  0F53                     	;# 
  2853  0F54                     	;# 
  2854  0F55                     	;# 
  2855  0F56                     	;# 
  2856  0F57                     	;# 
  2857  0F59                     	;# 
  2858  0F5A                     	;# 
  2859  0F5B                     	;# 
  2860  0F5C                     	;# 
  2861  0F5D                     	;# 
  2862  0F61                     	;# 
  2863  0F62                     	;# 
  2864  0F64                     	;# 
  2865  0F65                     	;# 
  2866  0F66                     	;# 
  2867  0F67                     	;# 
  2868  0F68                     	;# 
  2869  0F69                     	;# 
  2870  0F6A                     	;# 
  2871  0F6B                     	;# 
  2872  0F6C                     	;# 
  2873  0F6D                     	;# 
  2874  0FE4                     	;# 
  2875  0FE5                     	;# 
  2876  0FE6                     	;# 
  2877  0FE7                     	;# 
  2878  0FE8                     	;# 
  2879  0FE9                     	;# 
  2880  0FEA                     	;# 
  2881  0FEB                     	;# 
  2882  0FED                     	;# 
  2883  0FEE                     	;# 
  2884  0FEF                     	;# 
  2885  0000                     	;# 
  2886  0001                     	;# 
  2887  0002                     	;# 
  2888  0003                     	;# 
  2889  0004                     	;# 
  2890  0005                     	;# 
  2891  0006                     	;# 
  2892  0007                     	;# 
  2893  0008                     	;# 
  2894  0009                     	;# 
  2895  000A                     	;# 
  2896  000B                     	;# 
  2897  000C                     	;# 
  2898  000D                     	;# 
  2899  000E                     	;# 
  2900  000F                     	;# 
  2901  0010                     	;# 
  2902  0011                     	;# 
  2903  0012                     	;# 
  2904  0013                     	;# 
  2905  0014                     	;# 
  2906  0015                     	;# 
  2907  0016                     	;# 
  2908  0017                     	;# 
  2909  0018                     	;# 
  2910  0019                     	;# 
  2911  001A                     	;# 
  2912  001C                     	;# 
  2913  001C                     	;# 
  2914  001D                     	;# 
  2915  001D                     	;# 
  2916  001E                     	;# 
  2917  001F                     	;# 
  2918  008C                     	;# 
  2919  008C                     	;# 
  2920  008D                     	;# 
  2921  008E                     	;# 
  2922  008E                     	;# 
  2923  008F                     	;# 
  2924  0090                     	;# 
  2925  0090                     	;# 
  2926  0091                     	;# 
  2927  0093                     	;# 
  2928  0094                     	;# 
  2929  0095                     	;# 
  2930  0096                     	;# 
  2931  0097                     	;# 
  2932  0098                     	;# 
  2933  0099                     	;# 
  2934  009A                     	;# 
  2935  009B                     	;# 
  2936  009C                     	;# 
  2937  009D                     	;# 
  2938  009E                     	;# 
  2939  010C                     	;# 
  2940  010D                     	;# 
  2941  010E                     	;# 
  2942  010E                     	;# 
  2943  010F                     	;# 
  2944  0110                     	;# 
  2945  0110                     	;# 
  2946  0111                     	;# 
  2947  0112                     	;# 
  2948  0112                     	;# 
  2949  0113                     	;# 
  2950  0114                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0116                     	;# 
  2955  0117                     	;# 
  2956  0119                     	;# 
  2957  0119                     	;# 
  2958  0119                     	;# 
  2959  011A                     	;# 
  2960  011A                     	;# 
  2961  011A                     	;# 
  2962  011B                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011B                     	;# 
  2967  011C                     	;# 
  2968  011C                     	;# 
  2969  011C                     	;# 
  2970  011D                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011E                     	;# 
  2974  011E                     	;# 
  2975  011E                     	;# 
  2976  011F                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  011F                     	;# 
  2981  018C                     	;# 
  2982  018D                     	;# 
  2983  018E                     	;# 
  2984  018F                     	;# 
  2985  0190                     	;# 
  2986  0191                     	;# 
  2987  0192                     	;# 
  2988  0196                     	;# 
  2989  0197                     	;# 
  2990  0198                     	;# 
  2991  0199                     	;# 
  2992  019A                     	;# 
  2993  019B                     	;# 
  2994  019C                     	;# 
  2995  020C                     	;# 
  2996  020C                     	;# 
  2997  020D                     	;# 
  2998  020E                     	;# 
  2999  020F                     	;# 
  3000  020F                     	;# 
  3001  0210                     	;# 
  3002  0210                     	;# 
  3003  0211                     	;# 
  3004  0211                     	;# 
  3005  0212                     	;# 
  3006  0212                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0215                     	;# 
  3010  0215                     	;# 
  3011  0216                     	;# 
  3012  0216                     	;# 
  3013  0217                     	;# 
  3014  0217                     	;# 
  3015  0218                     	;# 
  3016  0218                     	;# 
  3017  0219                     	;# 
  3018  021A                     	;# 
  3019  021B                     	;# 
  3020  021B                     	;# 
  3021  021C                     	;# 
  3022  021C                     	;# 
  3023  021D                     	;# 
  3024  021D                     	;# 
  3025  021E                     	;# 
  3026  021F                     	;# 
  3027  028C                     	;# 
  3028  028C                     	;# 
  3029  028D                     	;# 
  3030  028D                     	;# 
  3031  028E                     	;# 
  3032  028F                     	;# 
  3033  0290                     	;# 
  3034  0290                     	;# 
  3035  0291                     	;# 
  3036  0292                     	;# 
  3037  0292                     	;# 
  3038  0293                     	;# 
  3039  0293                     	;# 
  3040  0294                     	;# 
  3041  0295                     	;# 
  3042  0296                     	;# 
  3043  0296                     	;# 
  3044  0297                     	;# 
  3045  0298                     	;# 
  3046  0298                     	;# 
  3047  0299                     	;# 
  3048  0299                     	;# 
  3049  029A                     	;# 
  3050  029B                     	;# 
  3051  029C                     	;# 
  3052  029C                     	;# 
  3053  029D                     	;# 
  3054  030C                     	;# 
  3055  030C                     	;# 
  3056  030D                     	;# 
  3057  030E                     	;# 
  3058  030F                     	;# 
  3059  0310                     	;# 
  3060  0310                     	;# 
  3061  0311                     	;# 
  3062  0312                     	;# 
  3063  0313                     	;# 
  3064  0314                     	;# 
  3065  0314                     	;# 
  3066  0315                     	;# 
  3067  0316                     	;# 
  3068  0317                     	;# 
  3069  0318                     	;# 
  3070  0318                     	;# 
  3071  0319                     	;# 
  3072  031A                     	;# 
  3073  031B                     	;# 
  3074  031C                     	;# 
  3075  031C                     	;# 
  3076  031D                     	;# 
  3077  031E                     	;# 
  3078  031F                     	;# 
  3079  038C                     	;# 
  3080  038C                     	;# 
  3081  038D                     	;# 
  3082  038E                     	;# 
  3083  0390                     	;# 
  3084  0390                     	;# 
  3085  0391                     	;# 
  3086  0392                     	;# 
  3087  040C                     	;# 
  3088  040D                     	;# 
  3089  040E                     	;# 
  3090  040F                     	;# 
  3091  0410                     	;# 
  3092  0411                     	;# 
  3093  0416                     	;# 
  3094  0416                     	;# 
  3095  0417                     	;# 
  3096  0418                     	;# 
  3097  0418                     	;# 
  3098  0419                     	;# 
  3099  041A                     	;# 
  3100  041A                     	;# 
  3101  041B                     	;# 
  3102  041C                     	;# 
  3103  041C                     	;# 
  3104  041D                     	;# 
  3105  041E                     	;# 
  3106  041F                     	;# 
  3107  048C                     	;# 
  3108  048C                     	;# 
  3109  048D                     	;# 
  3110  048E                     	;# 
  3111  048F                     	;# 
  3112  048F                     	;# 
  3113  0490                     	;# 
  3114  0491                     	;# 
  3115  0492                     	;# 
  3116  0492                     	;# 
  3117  0493                     	;# 
  3118  0494                     	;# 
  3119  0495                     	;# 
  3120  0495                     	;# 
  3121  0496                     	;# 
  3122  0497                     	;# 
  3123  0498                     	;# 
  3124  0499                     	;# 
  3125  049A                     	;# 
  3126  049B                     	;# 
  3127  049C                     	;# 
  3128  049D                     	;# 
  3129  050C                     	;# 
  3130  050C                     	;# 
  3131  050D                     	;# 
  3132  050E                     	;# 
  3133  050F                     	;# 
  3134  050F                     	;# 
  3135  0510                     	;# 
  3136  0511                     	;# 
  3137  0512                     	;# 
  3138  0512                     	;# 
  3139  0513                     	;# 
  3140  0514                     	;# 
  3141  0515                     	;# 
  3142  0515                     	;# 
  3143  0516                     	;# 
  3144  0517                     	;# 
  3145  0518                     	;# 
  3146  0519                     	;# 
  3147  051A                     	;# 
  3148  051B                     	;# 
  3149  051C                     	;# 
  3150  051D                     	;# 
  3151  058C                     	;# 
  3152  058C                     	;# 
  3153  058D                     	;# 
  3154  058E                     	;# 
  3155  058F                     	;# 
  3156  058F                     	;# 
  3157  0590                     	;# 
  3158  0591                     	;# 
  3159  0592                     	;# 
  3160  0593                     	;# 
  3161  060C                     	;# 
  3162  060D                     	;# 
  3163  060E                     	;# 
  3164  060F                     	;# 
  3165  0610                     	;# 
  3166  0611                     	;# 
  3167  0612                     	;# 
  3168  0613                     	;# 
  3169  0614                     	;# 
  3170  0616                     	;# 
  3171  0617                     	;# 
  3172  0618                     	;# 
  3173  0619                     	;# 
  3174  061A                     	;# 
  3175  061B                     	;# 
  3176  061C                     	;# 
  3177  061D                     	;# 
  3178  061E                     	;# 
  3179  068C                     	;# 
  3180  068D                     	;# 
  3181  068E                     	;# 
  3182  068F                     	;# 
  3183  0690                     	;# 
  3184  0691                     	;# 
  3185  0692                     	;# 
  3186  0693                     	;# 
  3187  0694                     	;# 
  3188  070C                     	;# 
  3189  070D                     	;# 
  3190  070E                     	;# 
  3191  070F                     	;# 
  3192  0710                     	;# 
  3193  0711                     	;# 
  3194  0712                     	;# 
  3195  0713                     	;# 
  3196  0714                     	;# 
  3197  0716                     	;# 
  3198  0717                     	;# 
  3199  0718                     	;# 
  3200  0719                     	;# 
  3201  071A                     	;# 
  3202  071B                     	;# 
  3203  071C                     	;# 
  3204  071D                     	;# 
  3205  071E                     	;# 
  3206  0796                     	;# 
  3207  0797                     	;# 
  3208  0798                     	;# 
  3209  0799                     	;# 
  3210  079A                     	;# 
  3211  079B                     	;# 
  3212  080C                     	;# 
  3213  080D                     	;# 
  3214  080E                     	;# 
  3215  080F                     	;# 
  3216  0810                     	;# 
  3217  0811                     	;# 
  3218  0812                     	;# 
  3219  0813                     	;# 
  3220  0814                     	;# 
  3221  081A                     	;# 
  3222  081B                     	;# 
  3223  081C                     	;# 
  3224  081D                     	;# 
  3225  081E                     	;# 
  3226  081F                     	;# 
  3227  088C                     	;# 
  3228  088D                     	;# 
  3229  088E                     	;# 
  3230  088F                     	;# 
  3231  0890                     	;# 
  3232  0891                     	;# 
  3233  0892                     	;# 
  3234  0893                     	;# 
  3235  0895                     	;# 
  3236  0896                     	;# 
  3237  0897                     	;# 
  3238  0898                     	;# 
  3239  0899                     	;# 
  3240  089A                     	;# 
  3241  089B                     	;# 
  3242  090C                     	;# 
  3243  090E                     	;# 
  3244  090F                     	;# 
  3245  091F                     	;# 
  3246  091F                     	;# 
  3247  098F                     	;# 
  3248  098F                     	;# 
  3249  0990                     	;# 
  3250  0991                     	;# 
  3251  0992                     	;# 
  3252  0993                     	;# 
  3253  0994                     	;# 
  3254  0995                     	;# 
  3255  0996                     	;# 
  3256  0997                     	;# 
  3257  0E0F                     	;# 
  3258  0E10                     	;# 
  3259  0E11                     	;# 
  3260  0E12                     	;# 
  3261  0E13                     	;# 
  3262  0E14                     	;# 
  3263  0E15                     	;# 
  3264  0E16                     	;# 
  3265  0E17                     	;# 
  3266  0E18                     	;# 
  3267  0E19                     	;# 
  3268  0E1A                     	;# 
  3269  0E1B                     	;# 
  3270  0E1C                     	;# 
  3271  0E1D                     	;# 
  3272  0E1E                     	;# 
  3273  0E1F                     	;# 
  3274  0E20                     	;# 
  3275  0E21                     	;# 
  3276  0E22                     	;# 
  3277  0E23                     	;# 
  3278  0E24                     	;# 
  3279  0E25                     	;# 
  3280  0E26                     	;# 
  3281  0E27                     	;# 
  3282  0E28                     	;# 
  3283  0E29                     	;# 
  3284  0E2A                     	;# 
  3285  0E2B                     	;# 
  3286  0E2C                     	;# 
  3287  0E2D                     	;# 
  3288  0E2E                     	;# 
  3289  0E2F                     	;# 
  3290  0E30                     	;# 
  3291  0E31                     	;# 
  3292  0E32                     	;# 
  3293  0E33                     	;# 
  3294  0E34                     	;# 
  3295  0E35                     	;# 
  3296  0E36                     	;# 
  3297  0E37                     	;# 
  3298  0E8F                     	;# 
  3299  0E90                     	;# 
  3300  0E91                     	;# 
  3301  0E92                     	;# 
  3302  0E93                     	;# 
  3303  0E94                     	;# 
  3304  0E95                     	;# 
  3305  0E96                     	;# 
  3306  0E97                     	;# 
  3307  0E9C                     	;# 
  3308  0E9D                     	;# 
  3309  0E9E                     	;# 
  3310  0EA1                     	;# 
  3311  0EA2                     	;# 
  3312  0EA3                     	;# 
  3313  0EA4                     	;# 
  3314  0EA5                     	;# 
  3315  0EA9                     	;# 
  3316  0EAA                     	;# 
  3317  0EAB                     	;# 
  3318  0EAC                     	;# 
  3319  0EB1                     	;# 
  3320  0EB2                     	;# 
  3321  0EB3                     	;# 
  3322  0EB8                     	;# 
  3323  0EB9                     	;# 
  3324  0EBA                     	;# 
  3325  0EBB                     	;# 
  3326  0EBC                     	;# 
  3327  0EBD                     	;# 
  3328  0EBE                     	;# 
  3329  0EC3                     	;# 
  3330  0EC5                     	;# 
  3331  0EC6                     	;# 
  3332  0EC7                     	;# 
  3333  0EC8                     	;# 
  3334  0EC9                     	;# 
  3335  0ECA                     	;# 
  3336  0ECB                     	;# 
  3337  0ECC                     	;# 
  3338  0F10                     	;# 
  3339  0F11                     	;# 
  3340  0F12                     	;# 
  3341  0F13                     	;# 
  3342  0F14                     	;# 
  3343  0F15                     	;# 
  3344  0F16                     	;# 
  3345  0F17                     	;# 
  3346  0F18                     	;# 
  3347  0F19                     	;# 
  3348  0F1A                     	;# 
  3349  0F1B                     	;# 
  3350  0F1C                     	;# 
  3351  0F1D                     	;# 
  3352  0F1E                     	;# 
  3353  0F1F                     	;# 
  3354  0F20                     	;# 
  3355  0F21                     	;# 
  3356  0F22                     	;# 
  3357  0F23                     	;# 
  3358  0F24                     	;# 
  3359  0F25                     	;# 
  3360  0F26                     	;# 
  3361  0F27                     	;# 
  3362  0F28                     	;# 
  3363  0F29                     	;# 
  3364  0F2A                     	;# 
  3365  0F2B                     	;# 
  3366  0F2C                     	;# 
  3367  0F2D                     	;# 
  3368  0F2E                     	;# 
  3369  0F2F                     	;# 
  3370  0F30                     	;# 
  3371  0F31                     	;# 
  3372  0F32                     	;# 
  3373  0F38                     	;# 
  3374  0F39                     	;# 
  3375  0F3A                     	;# 
  3376  0F3B                     	;# 
  3377  0F3C                     	;# 
  3378  0F3D                     	;# 
  3379  0F3E                     	;# 
  3380  0F3F                     	;# 
  3381  0F40                     	;# 
  3382  0F41                     	;# 
  3383  0F43                     	;# 
  3384  0F44                     	;# 
  3385  0F45                     	;# 
  3386  0F46                     	;# 
  3387  0F47                     	;# 
  3388  0F48                     	;# 
  3389  0F49                     	;# 
  3390  0F4A                     	;# 
  3391  0F4B                     	;# 
  3392  0F4C                     	;# 
  3393  0F4E                     	;# 
  3394  0F4F                     	;# 
  3395  0F50                     	;# 
  3396  0F51                     	;# 
  3397  0F52                     	;# 
  3398  0F53                     	;# 
  3399  0F54                     	;# 
  3400  0F55                     	;# 
  3401  0F56                     	;# 
  3402  0F57                     	;# 
  3403  0F59                     	;# 
  3404  0F5A                     	;# 
  3405  0F5B                     	;# 
  3406  0F5C                     	;# 
  3407  0F5D                     	;# 
  3408  0F61                     	;# 
  3409  0F62                     	;# 
  3410  0F64                     	;# 
  3411  0F65                     	;# 
  3412  0F66                     	;# 
  3413  0F67                     	;# 
  3414  0F68                     	;# 
  3415  0F69                     	;# 
  3416  0F6A                     	;# 
  3417  0F6B                     	;# 
  3418  0F6C                     	;# 
  3419  0F6D                     	;# 
  3420  0FE4                     	;# 
  3421  0FE5                     	;# 
  3422  0FE6                     	;# 
  3423  0FE7                     	;# 
  3424  0FE8                     	;# 
  3425  0FE9                     	;# 
  3426  0FEA                     	;# 
  3427  0FEB                     	;# 
  3428  0FED                     	;# 
  3429  0FEE                     	;# 
  3430  0FEF                     	;# 
  3431  0000                     	;# 
  3432  0001                     	;# 
  3433  0002                     	;# 
  3434  0003                     	;# 
  3435  0004                     	;# 
  3436  0005                     	;# 
  3437  0006                     	;# 
  3438  0007                     	;# 
  3439  0008                     	;# 
  3440  0009                     	;# 
  3441  000A                     	;# 
  3442  000B                     	;# 
  3443  000C                     	;# 
  3444  000D                     	;# 
  3445  000E                     	;# 
  3446  000F                     	;# 
  3447  0010                     	;# 
  3448  0011                     	;# 
  3449  0012                     	;# 
  3450  0013                     	;# 
  3451  0014                     	;# 
  3452  0015                     	;# 
  3453  0016                     	;# 
  3454  0017                     	;# 
  3455  0018                     	;# 
  3456  0019                     	;# 
  3457  001A                     	;# 
  3458  001C                     	;# 
  3459  001C                     	;# 
  3460  001D                     	;# 
  3461  001D                     	;# 
  3462  001E                     	;# 
  3463  001F                     	;# 
  3464  008C                     	;# 
  3465  008C                     	;# 
  3466  008D                     	;# 
  3467  008E                     	;# 
  3468  008E                     	;# 
  3469  008F                     	;# 
  3470  0090                     	;# 
  3471  0090                     	;# 
  3472  0091                     	;# 
  3473  0093                     	;# 
  3474  0094                     	;# 
  3475  0095                     	;# 
  3476  0096                     	;# 
  3477  0097                     	;# 
  3478  0098                     	;# 
  3479  0099                     	;# 
  3480  009A                     	;# 
  3481  009B                     	;# 
  3482  009C                     	;# 
  3483  009D                     	;# 
  3484  009E                     	;# 
  3485  010C                     	;# 
  3486  010D                     	;# 
  3487  010E                     	;# 
  3488  010E                     	;# 
  3489  010F                     	;# 
  3490  0110                     	;# 
  3491  0110                     	;# 
  3492  0111                     	;# 
  3493  0112                     	;# 
  3494  0112                     	;# 
  3495  0113                     	;# 
  3496  0114                     	;# 
  3497  0114                     	;# 
  3498  0115                     	;# 
  3499  0116                     	;# 
  3500  0116                     	;# 
  3501  0117                     	;# 
  3502  0119                     	;# 
  3503  0119                     	;# 
  3504  0119                     	;# 
  3505  011A                     	;# 
  3506  011A                     	;# 
  3507  011A                     	;# 
  3508  011B                     	;# 
  3509  011B                     	;# 
  3510  011B                     	;# 
  3511  011B                     	;# 
  3512  011B                     	;# 
  3513  011C                     	;# 
  3514  011C                     	;# 
  3515  011C                     	;# 
  3516  011D                     	;# 
  3517  011D                     	;# 
  3518  011D                     	;# 
  3519  011E                     	;# 
  3520  011E                     	;# 
  3521  011E                     	;# 
  3522  011F                     	;# 
  3523  011F                     	;# 
  3524  011F                     	;# 
  3525  011F                     	;# 
  3526  011F                     	;# 
  3527  018C                     	;# 
  3528  018D                     	;# 
  3529  018E                     	;# 
  3530  018F                     	;# 
  3531  0190                     	;# 
  3532  0191                     	;# 
  3533  0192                     	;# 
  3534  0196                     	;# 
  3535  0197                     	;# 
  3536  0198                     	;# 
  3537  0199                     	;# 
  3538  019A                     	;# 
  3539  019B                     	;# 
  3540  019C                     	;# 
  3541  020C                     	;# 
  3542  020C                     	;# 
  3543  020D                     	;# 
  3544  020E                     	;# 
  3545  020F                     	;# 
  3546  020F                     	;# 
  3547  0210                     	;# 
  3548  0210                     	;# 
  3549  0211                     	;# 
  3550  0211                     	;# 
  3551  0212                     	;# 
  3552  0212                     	;# 
  3553  0213                     	;# 
  3554  0214                     	;# 
  3555  0215                     	;# 
  3556  0215                     	;# 
  3557  0216                     	;# 
  3558  0216                     	;# 
  3559  0217                     	;# 
  3560  0217                     	;# 
  3561  0218                     	;# 
  3562  0218                     	;# 
  3563  0219                     	;# 
  3564  021A                     	;# 
  3565  021B                     	;# 
  3566  021B                     	;# 
  3567  021C                     	;# 
  3568  021C                     	;# 
  3569  021D                     	;# 
  3570  021D                     	;# 
  3571  021E                     	;# 
  3572  021F                     	;# 
  3573  028C                     	;# 
  3574  028C                     	;# 
  3575  028D                     	;# 
  3576  028D                     	;# 
  3577  028E                     	;# 
  3578  028F                     	;# 
  3579  0290                     	;# 
  3580  0290                     	;# 
  3581  0291                     	;# 
  3582  0292                     	;# 
  3583  0292                     	;# 
  3584  0293                     	;# 
  3585  0293                     	;# 
  3586  0294                     	;# 
  3587  0295                     	;# 
  3588  0296                     	;# 
  3589  0296                     	;# 
  3590  0297                     	;# 
  3591  0298                     	;# 
  3592  0298                     	;# 
  3593  0299                     	;# 
  3594  0299                     	;# 
  3595  029A                     	;# 
  3596  029B                     	;# 
  3597  029C                     	;# 
  3598  029C                     	;# 
  3599  029D                     	;# 
  3600  030C                     	;# 
  3601  030C                     	;# 
  3602  030D                     	;# 
  3603  030E                     	;# 
  3604  030F                     	;# 
  3605  0310                     	;# 
  3606  0310                     	;# 
  3607  0311                     	;# 
  3608  0312                     	;# 
  3609  0313                     	;# 
  3610  0314                     	;# 
  3611  0314                     	;# 
  3612  0315                     	;# 
  3613  0316                     	;# 
  3614  0317                     	;# 
  3615  0318                     	;# 
  3616  0318                     	;# 
  3617  0319                     	;# 
  3618  031A                     	;# 
  3619  031B                     	;# 
  3620  031C                     	;# 
  3621  031C                     	;# 
  3622  031D                     	;# 
  3623  031E                     	;# 
  3624  031F                     	;# 
  3625  038C                     	;# 
  3626  038C                     	;# 
  3627  038D                     	;# 
  3628  038E                     	;# 
  3629  0390                     	;# 
  3630  0390                     	;# 
  3631  0391                     	;# 
  3632  0392                     	;# 
  3633  040C                     	;# 
  3634  040D                     	;# 
  3635  040E                     	;# 
  3636  040F                     	;# 
  3637  0410                     	;# 
  3638  0411                     	;# 
  3639  0416                     	;# 
  3640  0416                     	;# 
  3641  0417                     	;# 
  3642  0418                     	;# 
  3643  0418                     	;# 
  3644  0419                     	;# 
  3645  041A                     	;# 
  3646  041A                     	;# 
  3647  041B                     	;# 
  3648  041C                     	;# 
  3649  041C                     	;# 
  3650  041D                     	;# 
  3651  041E                     	;# 
  3652  041F                     	;# 
  3653  048C                     	;# 
  3654  048C                     	;# 
  3655  048D                     	;# 
  3656  048E                     	;# 
  3657  048F                     	;# 
  3658  048F                     	;# 
  3659  0490                     	;# 
  3660  0491                     	;# 
  3661  0492                     	;# 
  3662  0492                     	;# 
  3663  0493                     	;# 
  3664  0494                     	;# 
  3665  0495                     	;# 
  3666  0495                     	;# 
  3667  0496                     	;# 
  3668  0497                     	;# 
  3669  0498                     	;# 
  3670  0499                     	;# 
  3671  049A                     	;# 
  3672  049B                     	;# 
  3673  049C                     	;# 
  3674  049D                     	;# 
  3675  050C                     	;# 
  3676  050C                     	;# 
  3677  050D                     	;# 
  3678  050E                     	;# 
  3679  050F                     	;# 
  3680  050F                     	;# 
  3681  0510                     	;# 
  3682  0511                     	;# 
  3683  0512                     	;# 
  3684  0512                     	;# 
  3685  0513                     	;# 
  3686  0514                     	;# 
  3687  0515                     	;# 
  3688  0515                     	;# 
  3689  0516                     	;# 
  3690  0517                     	;# 
  3691  0518                     	;# 
  3692  0519                     	;# 
  3693  051A                     	;# 
  3694  051B                     	;# 
  3695  051C                     	;# 
  3696  051D                     	;# 
  3697  058C                     	;# 
  3698  058C                     	;# 
  3699  058D                     	;# 
  3700  058E                     	;# 
  3701  058F                     	;# 
  3702  058F                     	;# 
  3703  0590                     	;# 
  3704  0591                     	;# 
  3705  0592                     	;# 
  3706  0593                     	;# 
  3707  060C                     	;# 
  3708  060D                     	;# 
  3709  060E                     	;# 
  3710  060F                     	;# 
  3711  0610                     	;# 
  3712  0611                     	;# 
  3713  0612                     	;# 
  3714  0613                     	;# 
  3715  0614                     	;# 
  3716  0616                     	;# 
  3717  0617                     	;# 
  3718  0618                     	;# 
  3719  0619                     	;# 
  3720  061A                     	;# 
  3721  061B                     	;# 
  3722  061C                     	;# 
  3723  061D                     	;# 
  3724  061E                     	;# 
  3725  068C                     	;# 
  3726  068D                     	;# 
  3727  068E                     	;# 
  3728  068F                     	;# 
  3729  0690                     	;# 
  3730  0691                     	;# 
  3731  0692                     	;# 
  3732  0693                     	;# 
  3733  0694                     	;# 
  3734  070C                     	;# 
  3735  070D                     	;# 
  3736  070E                     	;# 
  3737  070F                     	;# 
  3738  0710                     	;# 
  3739  0711                     	;# 
  3740  0712                     	;# 
  3741  0713                     	;# 
  3742  0714                     	;# 
  3743  0716                     	;# 
  3744  0717                     	;# 
  3745  0718                     	;# 
  3746  0719                     	;# 
  3747  071A                     	;# 
  3748  071B                     	;# 
  3749  071C                     	;# 
  3750  071D                     	;# 
  3751  071E                     	;# 
  3752  0796                     	;# 
  3753  0797                     	;# 
  3754  0798                     	;# 
  3755  0799                     	;# 
  3756  079A                     	;# 
  3757  079B                     	;# 
  3758  080C                     	;# 
  3759  080D                     	;# 
  3760  080E                     	;# 
  3761  080F                     	;# 
  3762  0810                     	;# 
  3763  0811                     	;# 
  3764  0812                     	;# 
  3765  0813                     	;# 
  3766  0814                     	;# 
  3767  081A                     	;# 
  3768  081B                     	;# 
  3769  081C                     	;# 
  3770  081D                     	;# 
  3771  081E                     	;# 
  3772  081F                     	;# 
  3773  088C                     	;# 
  3774  088D                     	;# 
  3775  088E                     	;# 
  3776  088F                     	;# 
  3777  0890                     	;# 
  3778  0891                     	;# 
  3779  0892                     	;# 
  3780  0893                     	;# 
  3781  0895                     	;# 
  3782  0896                     	;# 
  3783  0897                     	;# 
  3784  0898                     	;# 
  3785  0899                     	;# 
  3786  089A                     	;# 
  3787  089B                     	;# 
  3788  090C                     	;# 
  3789  090E                     	;# 
  3790  090F                     	;# 
  3791  091F                     	;# 
  3792  091F                     	;# 
  3793  098F                     	;# 
  3794  098F                     	;# 
  3795  0990                     	;# 
  3796  0991                     	;# 
  3797  0992                     	;# 
  3798  0993                     	;# 
  3799  0994                     	;# 
  3800  0995                     	;# 
  3801  0996                     	;# 
  3802  0997                     	;# 
  3803  0E0F                     	;# 
  3804  0E10                     	;# 
  3805  0E11                     	;# 
  3806  0E12                     	;# 
  3807  0E13                     	;# 
  3808  0E14                     	;# 
  3809  0E15                     	;# 
  3810  0E16                     	;# 
  3811  0E17                     	;# 
  3812  0E18                     	;# 
  3813  0E19                     	;# 
  3814  0E1A                     	;# 
  3815  0E1B                     	;# 
  3816  0E1C                     	;# 
  3817  0E1D                     	;# 
  3818  0E1E                     	;# 
  3819  0E1F                     	;# 
  3820  0E20                     	;# 
  3821  0E21                     	;# 
  3822  0E22                     	;# 
  3823  0E23                     	;# 
  3824  0E24                     	;# 
  3825  0E25                     	;# 
  3826  0E26                     	;# 
  3827  0E27                     	;# 
  3828  0E28                     	;# 
  3829  0E29                     	;# 
  3830  0E2A                     	;# 
  3831  0E2B                     	;# 
  3832  0E2C                     	;# 
  3833  0E2D                     	;# 
  3834  0E2E                     	;# 
  3835  0E2F                     	;# 
  3836  0E30                     	;# 
  3837  0E31                     	;# 
  3838  0E32                     	;# 
  3839  0E33                     	;# 
  3840  0E34                     	;# 
  3841  0E35                     	;# 
  3842  0E36                     	;# 
  3843  0E37                     	;# 
  3844  0E8F                     	;# 
  3845  0E90                     	;# 
  3846  0E91                     	;# 
  3847  0E92                     	;# 
  3848  0E93                     	;# 
  3849  0E94                     	;# 
  3850  0E95                     	;# 
  3851  0E96                     	;# 
  3852  0E97                     	;# 
  3853  0E9C                     	;# 
  3854  0E9D                     	;# 
  3855  0E9E                     	;# 
  3856  0EA1                     	;# 
  3857  0EA2                     	;# 
  3858  0EA3                     	;# 
  3859  0EA4                     	;# 
  3860  0EA5                     	;# 
  3861  0EA9                     	;# 
  3862  0EAA                     	;# 
  3863  0EAB                     	;# 
  3864  0EAC                     	;# 
  3865  0EB1                     	;# 
  3866  0EB2                     	;# 
  3867  0EB3                     	;# 
  3868  0EB8                     	;# 
  3869  0EB9                     	;# 
  3870  0EBA                     	;# 
  3871  0EBB                     	;# 
  3872  0EBC                     	;# 
  3873  0EBD                     	;# 
  3874  0EBE                     	;# 
  3875  0EC3                     	;# 
  3876  0EC5                     	;# 
  3877  0EC6                     	;# 
  3878  0EC7                     	;# 
  3879  0EC8                     	;# 
  3880  0EC9                     	;# 
  3881  0ECA                     	;# 
  3882  0ECB                     	;# 
  3883  0ECC                     	;# 
  3884  0F10                     	;# 
  3885  0F11                     	;# 
  3886  0F12                     	;# 
  3887  0F13                     	;# 
  3888  0F14                     	;# 
  3889  0F15                     	;# 
  3890  0F16                     	;# 
  3891  0F17                     	;# 
  3892  0F18                     	;# 
  3893  0F19                     	;# 
  3894  0F1A                     	;# 
  3895  0F1B                     	;# 
  3896  0F1C                     	;# 
  3897  0F1D                     	;# 
  3898  0F1E                     	;# 
  3899  0F1F                     	;# 
  3900  0F20                     	;# 
  3901  0F21                     	;# 
  3902  0F22                     	;# 
  3903  0F23                     	;# 
  3904  0F24                     	;# 
  3905  0F25                     	;# 
  3906  0F26                     	;# 
  3907  0F27                     	;# 
  3908  0F28                     	;# 
  3909  0F29                     	;# 
  3910  0F2A                     	;# 
  3911  0F2B                     	;# 
  3912  0F2C                     	;# 
  3913  0F2D                     	;# 
  3914  0F2E                     	;# 
  3915  0F2F                     	;# 
  3916  0F30                     	;# 
  3917  0F31                     	;# 
  3918  0F32                     	;# 
  3919  0F38                     	;# 
  3920  0F39                     	;# 
  3921  0F3A                     	;# 
  3922  0F3B                     	;# 
  3923  0F3C                     	;# 
  3924  0F3D                     	;# 
  3925  0F3E                     	;# 
  3926  0F3F                     	;# 
  3927  0F40                     	;# 
  3928  0F41                     	;# 
  3929  0F43                     	;# 
  3930  0F44                     	;# 
  3931  0F45                     	;# 
  3932  0F46                     	;# 
  3933  0F47                     	;# 
  3934  0F48                     	;# 
  3935  0F49                     	;# 
  3936  0F4A                     	;# 
  3937  0F4B                     	;# 
  3938  0F4C                     	;# 
  3939  0F4E                     	;# 
  3940  0F4F                     	;# 
  3941  0F50                     	;# 
  3942  0F51                     	;# 
  3943  0F52                     	;# 
  3944  0F53                     	;# 
  3945  0F54                     	;# 
  3946  0F55                     	;# 
  3947  0F56                     	;# 
  3948  0F57                     	;# 
  3949  0F59                     	;# 
  3950  0F5A                     	;# 
  3951  0F5B                     	;# 
  3952  0F5C                     	;# 
  3953  0F5D                     	;# 
  3954  0F61                     	;# 
  3955  0F62                     	;# 
  3956  0F64                     	;# 
  3957  0F65                     	;# 
  3958  0F66                     	;# 
  3959  0F67                     	;# 
  3960  0F68                     	;# 
  3961  0F69                     	;# 
  3962  0F6A                     	;# 
  3963  0F6B                     	;# 
  3964  0F6C                     	;# 
  3965  0F6D                     	;# 
  3966  0FE4                     	;# 
  3967  0FE5                     	;# 
  3968  0FE6                     	;# 
  3969  0FE7                     	;# 
  3970  0FE8                     	;# 
  3971  0FE9                     	;# 
  3972  0FEA                     	;# 
  3973  0FEB                     	;# 
  3974  0FED                     	;# 
  3975  0FEE                     	;# 
  3976  0FEF                     	;# 
  3977  0000                     	;# 
  3978  0001                     	;# 
  3979  0002                     	;# 
  3980  0003                     	;# 
  3981  0004                     	;# 
  3982  0005                     	;# 
  3983  0006                     	;# 
  3984  0007                     	;# 
  3985  0008                     	;# 
  3986  0009                     	;# 
  3987  000A                     	;# 
  3988  000B                     	;# 
  3989  000C                     	;# 
  3990  000D                     	;# 
  3991  000E                     	;# 
  3992  000F                     	;# 
  3993  0010                     	;# 
  3994  0011                     	;# 
  3995  0012                     	;# 
  3996  0013                     	;# 
  3997  0014                     	;# 
  3998  0015                     	;# 
  3999  0016                     	;# 
  4000  0017                     	;# 
  4001  0018                     	;# 
  4002  0019                     	;# 
  4003  001A                     	;# 
  4004  001C                     	;# 
  4005  001C                     	;# 
  4006  001D                     	;# 
  4007  001D                     	;# 
  4008  001E                     	;# 
  4009  001F                     	;# 
  4010  008C                     	;# 
  4011  008C                     	;# 
  4012  008D                     	;# 
  4013  008E                     	;# 
  4014  008E                     	;# 
  4015  008F                     	;# 
  4016  0090                     	;# 
  4017  0090                     	;# 
  4018  0091                     	;# 
  4019  0093                     	;# 
  4020  0094                     	;# 
  4021  0095                     	;# 
  4022  0096                     	;# 
  4023  0097                     	;# 
  4024  0098                     	;# 
  4025  0099                     	;# 
  4026  009A                     	;# 
  4027  009B                     	;# 
  4028  009C                     	;# 
  4029  009D                     	;# 
  4030  009E                     	;# 
  4031  010C                     	;# 
  4032  010D                     	;# 
  4033  010E                     	;# 
  4034  010E                     	;# 
  4035  010F                     	;# 
  4036  0110                     	;# 
  4037  0110                     	;# 
  4038  0111                     	;# 
  4039  0112                     	;# 
  4040  0112                     	;# 
  4041  0113                     	;# 
  4042  0114                     	;# 
  4043  0114                     	;# 
  4044  0115                     	;# 
  4045  0116                     	;# 
  4046  0116                     	;# 
  4047  0117                     	;# 
  4048  0119                     	;# 
  4049  0119                     	;# 
  4050  0119                     	;# 
  4051  011A                     	;# 
  4052  011A                     	;# 
  4053  011A                     	;# 
  4054  011B                     	;# 
  4055  011B                     	;# 
  4056  011B                     	;# 
  4057  011B                     	;# 
  4058  011B                     	;# 
  4059  011C                     	;# 
  4060  011C                     	;# 
  4061  011C                     	;# 
  4062  011D                     	;# 
  4063  011D                     	;# 
  4064  011D                     	;# 
  4065  011E                     	;# 
  4066  011E                     	;# 
  4067  011E                     	;# 
  4068  011F                     	;# 
  4069  011F                     	;# 
  4070  011F                     	;# 
  4071  011F                     	;# 
  4072  011F                     	;# 
  4073  018C                     	;# 
  4074  018D                     	;# 
  4075  018E                     	;# 
  4076  018F                     	;# 
  4077  0190                     	;# 
  4078  0191                     	;# 
  4079  0192                     	;# 
  4080  0196                     	;# 
  4081  0197                     	;# 
  4082  0198                     	;# 
  4083  0199                     	;# 
  4084  019A                     	;# 
  4085  019B                     	;# 
  4086  019C                     	;# 
  4087  020C                     	;# 
  4088  020C                     	;# 
  4089  020D                     	;# 
  4090  020E                     	;# 
  4091  020F                     	;# 
  4092  020F                     	;# 
  4093  0210                     	;# 
  4094  0210                     	;# 
  4095  0211                     	;# 
  4096  0211                     	;# 
  4097  0212                     	;# 
  4098  0212                     	;# 
  4099  0213                     	;# 
  4100  0214                     	;# 
  4101  0215                     	;# 
  4102  0215                     	;# 
  4103  0216                     	;# 
  4104  0216                     	;# 
  4105  0217                     	;# 
  4106  0217                     	;# 
  4107  0218                     	;# 
  4108  0218                     	;# 
  4109  0219                     	;# 
  4110  021A                     	;# 
  4111  021B                     	;# 
  4112  021B                     	;# 
  4113  021C                     	;# 
  4114  021C                     	;# 
  4115  021D                     	;# 
  4116  021D                     	;# 
  4117  021E                     	;# 
  4118  021F                     	;# 
  4119  028C                     	;# 
  4120  028C                     	;# 
  4121  028D                     	;# 
  4122  028D                     	;# 
  4123  028E                     	;# 
  4124  028F                     	;# 
  4125  0290                     	;# 
  4126  0290                     	;# 
  4127  0291                     	;# 
  4128  0292                     	;# 
  4129  0292                     	;# 
  4130  0293                     	;# 
  4131  0293                     	;# 
  4132  0294                     	;# 
  4133  0295                     	;# 
  4134  0296                     	;# 
  4135  0296                     	;# 
  4136  0297                     	;# 
  4137  0298                     	;# 
  4138  0298                     	;# 
  4139  0299                     	;# 
  4140  0299                     	;# 
  4141  029A                     	;# 
  4142  029B                     	;# 
  4143  029C                     	;# 
  4144  029C                     	;# 
  4145  029D                     	;# 
  4146  030C                     	;# 
  4147  030C                     	;# 
  4148  030D                     	;# 
  4149  030E                     	;# 
  4150  030F                     	;# 
  4151  0310                     	;# 
  4152  0310                     	;# 
  4153  0311                     	;# 
  4154  0312                     	;# 
  4155  0313                     	;# 
  4156  0314                     	;# 
  4157  0314                     	;# 
  4158  0315                     	;# 
  4159  0316                     	;# 
  4160  0317                     	;# 
  4161  0318                     	;# 
  4162  0318                     	;# 
  4163  0319                     	;# 
  4164  031A                     	;# 
  4165  031B                     	;# 
  4166  031C                     	;# 
  4167  031C                     	;# 
  4168  031D                     	;# 
  4169  031E                     	;# 
  4170  031F                     	;# 
  4171  038C                     	;# 
  4172  038C                     	;# 
  4173  038D                     	;# 
  4174  038E                     	;# 
  4175  0390                     	;# 
  4176  0390                     	;# 
  4177  0391                     	;# 
  4178  0392                     	;# 
  4179  040C                     	;# 
  4180  040D                     	;# 
  4181  040E                     	;# 
  4182  040F                     	;# 
  4183  0410                     	;# 
  4184  0411                     	;# 
  4185  0416                     	;# 
  4186  0416                     	;# 
  4187  0417                     	;# 
  4188  0418                     	;# 
  4189  0418                     	;# 
  4190  0419                     	;# 
  4191  041A                     	;# 
  4192  041A                     	;# 
  4193  041B                     	;# 
  4194  041C                     	;# 
  4195  041C                     	;# 
  4196  041D                     	;# 
  4197  041E                     	;# 
  4198  041F                     	;# 
  4199  048C                     	;# 
  4200  048C                     	;# 
  4201  048D                     	;# 
  4202  048E                     	;# 
  4203  048F                     	;# 
  4204  048F                     	;# 
  4205  0490                     	;# 
  4206  0491                     	;# 
  4207  0492                     	;# 
  4208  0492                     	;# 
  4209  0493                     	;# 
  4210  0494                     	;# 
  4211  0495                     	;# 
  4212  0495                     	;# 
  4213  0496                     	;# 
  4214  0497                     	;# 
  4215  0498                     	;# 
  4216  0499                     	;# 
  4217  049A                     	;# 
  4218  049B                     	;# 
  4219  049C                     	;# 
  4220  049D                     	;# 
  4221  050C                     	;# 
  4222  050C                     	;# 
  4223  050D                     	;# 
  4224  050E                     	;# 
  4225  050F                     	;# 
  4226  050F                     	;# 
  4227  0510                     	;# 
  4228  0511                     	;# 
  4229  0512                     	;# 
  4230  0512                     	;# 
  4231  0513                     	;# 
  4232  0514                     	;# 
  4233  0515                     	;# 
  4234  0515                     	;# 
  4235  0516                     	;# 
  4236  0517                     	;# 
  4237  0518                     	;# 
  4238  0519                     	;# 
  4239  051A                     	;# 
  4240  051B                     	;# 
  4241  051C                     	;# 
  4242  051D                     	;# 
  4243  058C                     	;# 
  4244  058C                     	;# 
  4245  058D                     	;# 
  4246  058E                     	;# 
  4247  058F                     	;# 
  4248  058F                     	;# 
  4249  0590                     	;# 
  4250  0591                     	;# 
  4251  0592                     	;# 
  4252  0593                     	;# 
  4253  060C                     	;# 
  4254  060D                     	;# 
  4255  060E                     	;# 
  4256  060F                     	;# 
  4257  0610                     	;# 
  4258  0611                     	;# 
  4259  0612                     	;# 
  4260  0613                     	;# 
  4261  0614                     	;# 
  4262  0616                     	;# 
  4263  0617                     	;# 
  4264  0618                     	;# 
  4265  0619                     	;# 
  4266  061A                     	;# 
  4267  061B                     	;# 
  4268  061C                     	;# 
  4269  061D                     	;# 
  4270  061E                     	;# 
  4271  068C                     	;# 
  4272  068D                     	;# 
  4273  068E                     	;# 
  4274  068F                     	;# 
  4275  0690                     	;# 
  4276  0691                     	;# 
  4277  0692                     	;# 
  4278  0693                     	;# 
  4279  0694                     	;# 
  4280  070C                     	;# 
  4281  070D                     	;# 
  4282  070E                     	;# 
  4283  070F                     	;# 
  4284  0710                     	;# 
  4285  0711                     	;# 
  4286  0712                     	;# 
  4287  0713                     	;# 
  4288  0714                     	;# 
  4289  0716                     	;# 
  4290  0717                     	;# 
  4291  0718                     	;# 
  4292  0719                     	;# 
  4293  071A                     	;# 
  4294  071B                     	;# 
  4295  071C                     	;# 
  4296  071D                     	;# 
  4297  071E                     	;# 
  4298  0796                     	;# 
  4299  0797                     	;# 
  4300  0798                     	;# 
  4301  0799                     	;# 
  4302  079A                     	;# 
  4303  079B                     	;# 
  4304  080C                     	;# 
  4305  080D                     	;# 
  4306  080E                     	;# 
  4307  080F                     	;# 
  4308  0810                     	;# 
  4309  0811                     	;# 
  4310  0812                     	;# 
  4311  0813                     	;# 
  4312  0814                     	;# 
  4313  081A                     	;# 
  4314  081B                     	;# 
  4315  081C                     	;# 
  4316  081D                     	;# 
  4317  081E                     	;# 
  4318  081F                     	;# 
  4319  088C                     	;# 
  4320  088D                     	;# 
  4321  088E                     	;# 
  4322  088F                     	;# 
  4323  0890                     	;# 
  4324  0891                     	;# 
  4325  0892                     	;# 
  4326  0893                     	;# 
  4327  0895                     	;# 
  4328  0896                     	;# 
  4329  0897                     	;# 
  4330  0898                     	;# 
  4331  0899                     	;# 
  4332  089A                     	;# 
  4333  089B                     	;# 
  4334  090C                     	;# 
  4335  090E                     	;# 
  4336  090F                     	;# 
  4337  091F                     	;# 
  4338  091F                     	;# 
  4339  098F                     	;# 
  4340  098F                     	;# 
  4341  0990                     	;# 
  4342  0991                     	;# 
  4343  0992                     	;# 
  4344  0993                     	;# 
  4345  0994                     	;# 
  4346  0995                     	;# 
  4347  0996                     	;# 
  4348  0997                     	;# 
  4349  0E0F                     	;# 
  4350  0E10                     	;# 
  4351  0E11                     	;# 
  4352  0E12                     	;# 
  4353  0E13                     	;# 
  4354  0E14                     	;# 
  4355  0E15                     	;# 
  4356  0E16                     	;# 
  4357  0E17                     	;# 
  4358  0E18                     	;# 
  4359  0E19                     	;# 
  4360  0E1A                     	;# 
  4361  0E1B                     	;# 
  4362  0E1C                     	;# 
  4363  0E1D                     	;# 
  4364  0E1E                     	;# 
  4365  0E1F                     	;# 
  4366  0E20                     	;# 
  4367  0E21                     	;# 
  4368  0E22                     	;# 
  4369  0E23                     	;# 
  4370  0E24                     	;# 
  4371  0E25                     	;# 
  4372  0E26                     	;# 
  4373  0E27                     	;# 
  4374  0E28                     	;# 
  4375  0E29                     	;# 
  4376  0E2A                     	;# 
  4377  0E2B                     	;# 
  4378  0E2C                     	;# 
  4379  0E2D                     	;# 
  4380  0E2E                     	;# 
  4381  0E2F                     	;# 
  4382  0E30                     	;# 
  4383  0E31                     	;# 
  4384  0E32                     	;# 
  4385  0E33                     	;# 
  4386  0E34                     	;# 
  4387  0E35                     	;# 
  4388  0E36                     	;# 
  4389  0E37                     	;# 
  4390  0E8F                     	;# 
  4391  0E90                     	;# 
  4392  0E91                     	;# 
  4393  0E92                     	;# 
  4394  0E93                     	;# 
  4395  0E94                     	;# 
  4396  0E95                     	;# 
  4397  0E96                     	;# 
  4398  0E97                     	;# 
  4399  0E9C                     	;# 
  4400  0E9D                     	;# 
  4401  0E9E                     	;# 
  4402  0EA1                     	;# 
  4403  0EA2                     	;# 
  4404  0EA3                     	;# 
  4405  0EA4                     	;# 
  4406  0EA5                     	;# 
  4407  0EA9                     	;# 
  4408  0EAA                     	;# 
  4409  0EAB                     	;# 
  4410  0EAC                     	;# 
  4411  0EB1                     	;# 
  4412  0EB2                     	;# 
  4413  0EB3                     	;# 
  4414  0EB8                     	;# 
  4415  0EB9                     	;# 
  4416  0EBA                     	;# 
  4417  0EBB                     	;# 
  4418  0EBC                     	;# 
  4419  0EBD                     	;# 
  4420  0EBE                     	;# 
  4421  0EC3                     	;# 
  4422  0EC5                     	;# 
  4423  0EC6                     	;# 
  4424  0EC7                     	;# 
  4425  0EC8                     	;# 
  4426  0EC9                     	;# 
  4427  0ECA                     	;# 
  4428  0ECB                     	;# 
  4429  0ECC                     	;# 
  4430  0F10                     	;# 
  4431  0F11                     	;# 
  4432  0F12                     	;# 
  4433  0F13                     	;# 
  4434  0F14                     	;# 
  4435  0F15                     	;# 
  4436  0F16                     	;# 
  4437  0F17                     	;# 
  4438  0F18                     	;# 
  4439  0F19                     	;# 
  4440  0F1A                     	;# 
  4441  0F1B                     	;# 
  4442  0F1C                     	;# 
  4443  0F1D                     	;# 
  4444  0F1E                     	;# 
  4445  0F1F                     	;# 
  4446  0F20                     	;# 
  4447  0F21                     	;# 
  4448  0F22                     	;# 
  4449  0F23                     	;# 
  4450  0F24                     	;# 
  4451  0F25                     	;# 
  4452  0F26                     	;# 
  4453  0F27                     	;# 
  4454  0F28                     	;# 
  4455  0F29                     	;# 
  4456  0F2A                     	;# 
  4457  0F2B                     	;# 
  4458  0F2C                     	;# 
  4459  0F2D                     	;# 
  4460  0F2E                     	;# 
  4461  0F2F                     	;# 
  4462  0F30                     	;# 
  4463  0F31                     	;# 
  4464  0F32                     	;# 
  4465  0F38                     	;# 
  4466  0F39                     	;# 
  4467  0F3A                     	;# 
  4468  0F3B                     	;# 
  4469  0F3C                     	;# 
  4470  0F3D                     	;# 
  4471  0F3E                     	;# 
  4472  0F3F                     	;# 
  4473  0F40                     	;# 
  4474  0F41                     	;# 
  4475  0F43                     	;# 
  4476  0F44                     	;# 
  4477  0F45                     	;# 
  4478  0F46                     	;# 
  4479  0F47                     	;# 
  4480  0F48                     	;# 
  4481  0F49                     	;# 
  4482  0F4A                     	;# 
  4483  0F4B                     	;# 
  4484  0F4C                     	;# 
  4485  0F4E                     	;# 
  4486  0F4F                     	;# 
  4487  0F50                     	;# 
  4488  0F51                     	;# 
  4489  0F52                     	;# 
  4490  0F53                     	;# 
  4491  0F54                     	;# 
  4492  0F55                     	;# 
  4493  0F56                     	;# 
  4494  0F57                     	;# 
  4495  0F59                     	;# 
  4496  0F5A                     	;# 
  4497  0F5B                     	;# 
  4498  0F5C                     	;# 
  4499  0F5D                     	;# 
  4500  0F61                     	;# 
  4501  0F62                     	;# 
  4502  0F64                     	;# 
  4503  0F65                     	;# 
  4504  0F66                     	;# 
  4505  0F67                     	;# 
  4506  0F68                     	;# 
  4507  0F69                     	;# 
  4508  0F6A                     	;# 
  4509  0F6B                     	;# 
  4510  0F6C                     	;# 
  4511  0F6D                     	;# 
  4512  0FE4                     	;# 
  4513  0FE5                     	;# 
  4514  0FE6                     	;# 
  4515  0FE7                     	;# 
  4516  0FE8                     	;# 
  4517  0FE9                     	;# 
  4518  0FEA                     	;# 
  4519  0FEB                     	;# 
  4520  0FED                     	;# 
  4521  0FEE                     	;# 
  4522  0FEF                     	;# 
  4523  0000                     	;# 
  4524  0001                     	;# 
  4525  0002                     	;# 
  4526  0003                     	;# 
  4527  0004                     	;# 
  4528  0005                     	;# 
  4529  0006                     	;# 
  4530  0007                     	;# 
  4531  0008                     	;# 
  4532  0009                     	;# 
  4533  000A                     	;# 
  4534  000B                     	;# 
  4535  000C                     	;# 
  4536  000D                     	;# 
  4537  000E                     	;# 
  4538  000F                     	;# 
  4539  0010                     	;# 
  4540  0011                     	;# 
  4541  0012                     	;# 
  4542  0013                     	;# 
  4543  0014                     	;# 
  4544  0015                     	;# 
  4545  0016                     	;# 
  4546  0017                     	;# 
  4547  0018                     	;# 
  4548  0019                     	;# 
  4549  001A                     	;# 
  4550  001C                     	;# 
  4551  001C                     	;# 
  4552  001D                     	;# 
  4553  001D                     	;# 
  4554  001E                     	;# 
  4555  001F                     	;# 
  4556  008C                     	;# 
  4557  008C                     	;# 
  4558  008D                     	;# 
  4559  008E                     	;# 
  4560  008E                     	;# 
  4561  008F                     	;# 
  4562  0090                     	;# 
  4563  0090                     	;# 
  4564  0091                     	;# 
  4565  0093                     	;# 
  4566  0094                     	;# 
  4567  0095                     	;# 
  4568  0096                     	;# 
  4569  0097                     	;# 
  4570  0098                     	;# 
  4571  0099                     	;# 
  4572  009A                     	;# 
  4573  009B                     	;# 
  4574  009C                     	;# 
  4575  009D                     	;# 
  4576  009E                     	;# 
  4577  010C                     	;# 
  4578  010D                     	;# 
  4579  010E                     	;# 
  4580  010E                     	;# 
  4581  010F                     	;# 
  4582  0110                     	;# 
  4583  0110                     	;# 
  4584  0111                     	;# 
  4585  0112                     	;# 
  4586  0112                     	;# 
  4587  0113                     	;# 
  4588  0114                     	;# 
  4589  0114                     	;# 
  4590  0115                     	;# 
  4591  0116                     	;# 
  4592  0116                     	;# 
  4593  0117                     	;# 
  4594  0119                     	;# 
  4595  0119                     	;# 
  4596  0119                     	;# 
  4597  011A                     	;# 
  4598  011A                     	;# 
  4599  011A                     	;# 
  4600  011B                     	;# 
  4601  011B                     	;# 
  4602  011B                     	;# 
  4603  011B                     	;# 
  4604  011B                     	;# 
  4605  011C                     	;# 
  4606  011C                     	;# 
  4607  011C                     	;# 
  4608  011D                     	;# 
  4609  011D                     	;# 
  4610  011D                     	;# 
  4611  011E                     	;# 
  4612  011E                     	;# 
  4613  011E                     	;# 
  4614  011F                     	;# 
  4615  011F                     	;# 
  4616  011F                     	;# 
  4617  011F                     	;# 
  4618  011F                     	;# 
  4619  018C                     	;# 
  4620  018D                     	;# 
  4621  018E                     	;# 
  4622  018F                     	;# 
  4623  0190                     	;# 
  4624  0191                     	;# 
  4625  0192                     	;# 
  4626  0196                     	;# 
  4627  0197                     	;# 
  4628  0198                     	;# 
  4629  0199                     	;# 
  4630  019A                     	;# 
  4631  019B                     	;# 
  4632  019C                     	;# 
  4633  020C                     	;# 
  4634  020C                     	;# 
  4635  020D                     	;# 
  4636  020E                     	;# 
  4637  020F                     	;# 
  4638  020F                     	;# 
  4639  0210                     	;# 
  4640  0210                     	;# 
  4641  0211                     	;# 
  4642  0211                     	;# 
  4643  0212                     	;# 
  4644  0212                     	;# 
  4645  0213                     	;# 
  4646  0214                     	;# 
  4647  0215                     	;# 
  4648  0215                     	;# 
  4649  0216                     	;# 
  4650  0216                     	;# 
  4651  0217                     	;# 
  4652  0217                     	;# 
  4653  0218                     	;# 
  4654  0218                     	;# 
  4655  0219                     	;# 
  4656  021A                     	;# 
  4657  021B                     	;# 
  4658  021B                     	;# 
  4659  021C                     	;# 
  4660  021C                     	;# 
  4661  021D                     	;# 
  4662  021D                     	;# 
  4663  021E                     	;# 
  4664  021F                     	;# 
  4665  028C                     	;# 
  4666  028C                     	;# 
  4667  028D                     	;# 
  4668  028D                     	;# 
  4669  028E                     	;# 
  4670  028F                     	;# 
  4671  0290                     	;# 
  4672  0290                     	;# 
  4673  0291                     	;# 
  4674  0292                     	;# 
  4675  0292                     	;# 
  4676  0293                     	;# 
  4677  0293                     	;# 
  4678  0294                     	;# 
  4679  0295                     	;# 
  4680  0296                     	;# 
  4681  0296                     	;# 
  4682  0297                     	;# 
  4683  0298                     	;# 
  4684  0298                     	;# 
  4685  0299                     	;# 
  4686  0299                     	;# 
  4687  029A                     	;# 
  4688  029B                     	;# 
  4689  029C                     	;# 
  4690  029C                     	;# 
  4691  029D                     	;# 
  4692  030C                     	;# 
  4693  030C                     	;# 
  4694  030D                     	;# 
  4695  030E                     	;# 
  4696  030F                     	;# 
  4697  0310                     	;# 
  4698  0310                     	;# 
  4699  0311                     	;# 
  4700  0312                     	;# 
  4701  0313                     	;# 
  4702  0314                     	;# 
  4703  0314                     	;# 
  4704  0315                     	;# 
  4705  0316                     	;# 
  4706  0317                     	;# 
  4707  0318                     	;# 
  4708  0318                     	;# 
  4709  0319                     	;# 
  4710  031A                     	;# 
  4711  031B                     	;# 
  4712  031C                     	;# 
  4713  031C                     	;# 
  4714  031D                     	;# 
  4715  031E                     	;# 
  4716  031F                     	;# 
  4717  038C                     	;# 
  4718  038C                     	;# 
  4719  038D                     	;# 
  4720  038E                     	;# 
  4721  0390                     	;# 
  4722  0390                     	;# 
  4723  0391                     	;# 
  4724  0392                     	;# 
  4725  040C                     	;# 
  4726  040D                     	;# 
  4727  040E                     	;# 
  4728  040F                     	;# 
  4729  0410                     	;# 
  4730  0411                     	;# 
  4731  0416                     	;# 
  4732  0416                     	;# 
  4733  0417                     	;# 
  4734  0418                     	;# 
  4735  0418                     	;# 
  4736  0419                     	;# 
  4737  041A                     	;# 
  4738  041A                     	;# 
  4739  041B                     	;# 
  4740  041C                     	;# 
  4741  041C                     	;# 
  4742  041D                     	;# 
  4743  041E                     	;# 
  4744  041F                     	;# 
  4745  048C                     	;# 
  4746  048C                     	;# 
  4747  048D                     	;# 
  4748  048E                     	;# 
  4749  048F                     	;# 
  4750  048F                     	;# 
  4751  0490                     	;# 
  4752  0491                     	;# 
  4753  0492                     	;# 
  4754  0492                     	;# 
  4755  0493                     	;# 
  4756  0494                     	;# 
  4757  0495                     	;# 
  4758  0495                     	;# 
  4759  0496                     	;# 
  4760  0497                     	;# 
  4761  0498                     	;# 
  4762  0499                     	;# 
  4763  049A                     	;# 
  4764  049B                     	;# 
  4765  049C                     	;# 
  4766  049D                     	;# 
  4767  050C                     	;# 
  4768  050C                     	;# 
  4769  050D                     	;# 
  4770  050E                     	;# 
  4771  050F                     	;# 
  4772  050F                     	;# 
  4773  0510                     	;# 
  4774  0511                     	;# 
  4775  0512                     	;# 
  4776  0512                     	;# 
  4777  0513                     	;# 
  4778  0514                     	;# 
  4779  0515                     	;# 
  4780  0515                     	;# 
  4781  0516                     	;# 
  4782  0517                     	;# 
  4783  0518                     	;# 
  4784  0519                     	;# 
  4785  051A                     	;# 
  4786  051B                     	;# 
  4787  051C                     	;# 
  4788  051D                     	;# 
  4789  058C                     	;# 
  4790  058C                     	;# 
  4791  058D                     	;# 
  4792  058E                     	;# 
  4793  058F                     	;# 
  4794  058F                     	;# 
  4795  0590                     	;# 
  4796  0591                     	;# 
  4797  0592                     	;# 
  4798  0593                     	;# 
  4799  060C                     	;# 
  4800  060D                     	;# 
  4801  060E                     	;# 
  4802  060F                     	;# 
  4803  0610                     	;# 
  4804  0611                     	;# 
  4805  0612                     	;# 
  4806  0613                     	;# 
  4807  0614                     	;# 
  4808  0616                     	;# 
  4809  0617                     	;# 
  4810  0618                     	;# 
  4811  0619                     	;# 
  4812  061A                     	;# 
  4813  061B                     	;# 
  4814  061C                     	;# 
  4815  061D                     	;# 
  4816  061E                     	;# 
  4817  068C                     	;# 
  4818  068D                     	;# 
  4819  068E                     	;# 
  4820  068F                     	;# 
  4821  0690                     	;# 
  4822  0691                     	;# 
  4823  0692                     	;# 
  4824  0693                     	;# 
  4825  0694                     	;# 
  4826  070C                     	;# 
  4827  070D                     	;# 
  4828  070E                     	;# 
  4829  070F                     	;# 
  4830  0710                     	;# 
  4831  0711                     	;# 
  4832  0712                     	;# 
  4833  0713                     	;# 
  4834  0714                     	;# 
  4835  0716                     	;# 
  4836  0717                     	;# 
  4837  0718                     	;# 
  4838  0719                     	;# 
  4839  071A                     	;# 
  4840  071B                     	;# 
  4841  071C                     	;# 
  4842  071D                     	;# 
  4843  071E                     	;# 
  4844  0796                     	;# 
  4845  0797                     	;# 
  4846  0798                     	;# 
  4847  0799                     	;# 
  4848  079A                     	;# 
  4849  079B                     	;# 
  4850  080C                     	;# 
  4851  080D                     	;# 
  4852  080E                     	;# 
  4853  080F                     	;# 
  4854  0810                     	;# 
  4855  0811                     	;# 
  4856  0812                     	;# 
  4857  0813                     	;# 
  4858  0814                     	;# 
  4859  081A                     	;# 
  4860  081B                     	;# 
  4861  081C                     	;# 
  4862  081D                     	;# 
  4863  081E                     	;# 
  4864  081F                     	;# 
  4865  088C                     	;# 
  4866  088D                     	;# 
  4867  088E                     	;# 
  4868  088F                     	;# 
  4869  0890                     	;# 
  4870  0891                     	;# 
  4871  0892                     	;# 
  4872  0893                     	;# 
  4873  0895                     	;# 
  4874  0896                     	;# 
  4875  0897                     	;# 
  4876  0898                     	;# 
  4877  0899                     	;# 
  4878  089A                     	;# 
  4879  089B                     	;# 
  4880  090C                     	;# 
  4881  090E                     	;# 
  4882  090F                     	;# 
  4883  091F                     	;# 
  4884  091F                     	;# 
  4885  098F                     	;# 
  4886  098F                     	;# 
  4887  0990                     	;# 
  4888  0991                     	;# 
  4889  0992                     	;# 
  4890  0993                     	;# 
  4891  0994                     	;# 
  4892  0995                     	;# 
  4893  0996                     	;# 
  4894  0997                     	;# 
  4895  0E0F                     	;# 
  4896  0E10                     	;# 
  4897  0E11                     	;# 
  4898  0E12                     	;# 
  4899  0E13                     	;# 
  4900  0E14                     	;# 
  4901  0E15                     	;# 
  4902  0E16                     	;# 
  4903  0E17                     	;# 
  4904  0E18                     	;# 
  4905  0E19                     	;# 
  4906  0E1A                     	;# 
  4907  0E1B                     	;# 
  4908  0E1C                     	;# 
  4909  0E1D                     	;# 
  4910  0E1E                     	;# 
  4911  0E1F                     	;# 
  4912  0E20                     	;# 
  4913  0E21                     	;# 
  4914  0E22                     	;# 
  4915  0E23                     	;# 
  4916  0E24                     	;# 
  4917  0E25                     	;# 
  4918  0E26                     	;# 
  4919  0E27                     	;# 
  4920  0E28                     	;# 
  4921  0E29                     	;# 
  4922  0E2A                     	;# 
  4923  0E2B                     	;# 
  4924  0E2C                     	;# 
  4925  0E2D                     	;# 
  4926  0E2E                     	;# 
  4927  0E2F                     	;# 
  4928  0E30                     	;# 
  4929  0E31                     	;# 
  4930  0E32                     	;# 
  4931  0E33                     	;# 
  4932  0E34                     	;# 
  4933  0E35                     	;# 
  4934  0E36                     	;# 
  4935  0E37                     	;# 
  4936  0E8F                     	;# 
  4937  0E90                     	;# 
  4938  0E91                     	;# 
  4939  0E92                     	;# 
  4940  0E93                     	;# 
  4941  0E94                     	;# 
  4942  0E95                     	;# 
  4943  0E96                     	;# 
  4944  0E97                     	;# 
  4945  0E9C                     	;# 
  4946  0E9D                     	;# 
  4947  0E9E                     	;# 
  4948  0EA1                     	;# 
  4949  0EA2                     	;# 
  4950  0EA3                     	;# 
  4951  0EA4                     	;# 
  4952  0EA5                     	;# 
  4953  0EA9                     	;# 
  4954  0EAA                     	;# 
  4955  0EAB                     	;# 
  4956  0EAC                     	;# 
  4957  0EB1                     	;# 
  4958  0EB2                     	;# 
  4959  0EB3                     	;# 
  4960  0EB8                     	;# 
  4961  0EB9                     	;# 
  4962  0EBA                     	;# 
  4963  0EBB                     	;# 
  4964  0EBC                     	;# 
  4965  0EBD                     	;# 
  4966  0EBE                     	;# 
  4967  0EC3                     	;# 
  4968  0EC5                     	;# 
  4969  0EC6                     	;# 
  4970  0EC7                     	;# 
  4971  0EC8                     	;# 
  4972  0EC9                     	;# 
  4973  0ECA                     	;# 
  4974  0ECB                     	;# 
  4975  0ECC                     	;# 
  4976  0F10                     	;# 
  4977  0F11                     	;# 
  4978  0F12                     	;# 
  4979  0F13                     	;# 
  4980  0F14                     	;# 
  4981  0F15                     	;# 
  4982  0F16                     	;# 
  4983  0F17                     	;# 
  4984  0F18                     	;# 
  4985  0F19                     	;# 
  4986  0F1A                     	;# 
  4987  0F1B                     	;# 
  4988  0F1C                     	;# 
  4989  0F1D                     	;# 
  4990  0F1E                     	;# 
  4991  0F1F                     	;# 
  4992  0F20                     	;# 
  4993  0F21                     	;# 
  4994  0F22                     	;# 
  4995  0F23                     	;# 
  4996  0F24                     	;# 
  4997  0F25                     	;# 
  4998  0F26                     	;# 
  4999  0F27                     	;# 
  5000  0F28                     	;# 
  5001  0F29                     	;# 
  5002  0F2A                     	;# 
  5003  0F2B                     	;# 
  5004  0F2C                     	;# 
  5005  0F2D                     	;# 
  5006  0F2E                     	;# 
  5007  0F2F                     	;# 
  5008  0F30                     	;# 
  5009  0F31                     	;# 
  5010  0F32                     	;# 
  5011  0F38                     	;# 
  5012  0F39                     	;# 
  5013  0F3A                     	;# 
  5014  0F3B                     	;# 
  5015  0F3C                     	;# 
  5016  0F3D                     	;# 
  5017  0F3E                     	;# 
  5018  0F3F                     	;# 
  5019  0F40                     	;# 
  5020  0F41                     	;# 
  5021  0F43                     	;# 
  5022  0F44                     	;# 
  5023  0F45                     	;# 
  5024  0F46                     	;# 
  5025  0F47                     	;# 
  5026  0F48                     	;# 
  5027  0F49                     	;# 
  5028  0F4A                     	;# 
  5029  0F4B                     	;# 
  5030  0F4C                     	;# 
  5031  0F4E                     	;# 
  5032  0F4F                     	;# 
  5033  0F50                     	;# 
  5034  0F51                     	;# 
  5035  0F52                     	;# 
  5036  0F53                     	;# 
  5037  0F54                     	;# 
  5038  0F55                     	;# 
  5039  0F56                     	;# 
  5040  0F57                     	;# 
  5041  0F59                     	;# 
  5042  0F5A                     	;# 
  5043  0F5B                     	;# 
  5044  0F5C                     	;# 
  5045  0F5D                     	;# 
  5046  0F61                     	;# 
  5047  0F62                     	;# 
  5048  0F64                     	;# 
  5049  0F65                     	;# 
  5050  0F66                     	;# 
  5051  0F67                     	;# 
  5052  0F68                     	;# 
  5053  0F69                     	;# 
  5054  0F6A                     	;# 
  5055  0F6B                     	;# 
  5056  0F6C                     	;# 
  5057  0F6D                     	;# 
  5058  0FE4                     	;# 
  5059  0FE5                     	;# 
  5060  0FE6                     	;# 
  5061  0FE7                     	;# 
  5062  0FE8                     	;# 
  5063  0FE9                     	;# 
  5064  0FEA                     	;# 
  5065  0FEB                     	;# 
  5066  0FED                     	;# 
  5067  0FEE                     	;# 
  5068  0FEF                     	;# 
  5069  0000                     	;# 
  5070  0001                     	;# 
  5071  0002                     	;# 
  5072  0003                     	;# 
  5073  0004                     	;# 
  5074  0005                     	;# 
  5075  0006                     	;# 
  5076  0007                     	;# 
  5077  0008                     	;# 
  5078  0009                     	;# 
  5079  000A                     	;# 
  5080  000B                     	;# 
  5081  000C                     	;# 
  5082  000D                     	;# 
  5083  000E                     	;# 
  5084  000F                     	;# 
  5085  0010                     	;# 
  5086  0011                     	;# 
  5087  0012                     	;# 
  5088  0013                     	;# 
  5089  0014                     	;# 
  5090  0015                     	;# 
  5091  0016                     	;# 
  5092  0017                     	;# 
  5093  0018                     	;# 
  5094  0019                     	;# 
  5095  001A                     	;# 
  5096  001C                     	;# 
  5097  001C                     	;# 
  5098  001D                     	;# 
  5099  001D                     	;# 
  5100  001E                     	;# 
  5101  001F                     	;# 
  5102  008C                     	;# 
  5103  008C                     	;# 
  5104  008D                     	;# 
  5105  008E                     	;# 
  5106  008E                     	;# 
  5107  008F                     	;# 
  5108  0090                     	;# 
  5109  0090                     	;# 
  5110  0091                     	;# 
  5111  0093                     	;# 
  5112  0094                     	;# 
  5113  0095                     	;# 
  5114  0096                     	;# 
  5115  0097                     	;# 
  5116  0098                     	;# 
  5117  0099                     	;# 
  5118  009A                     	;# 
  5119  009B                     	;# 
  5120  009C                     	;# 
  5121  009D                     	;# 
  5122  009E                     	;# 
  5123  010C                     	;# 
  5124  010D                     	;# 
  5125  010E                     	;# 
  5126  010E                     	;# 
  5127  010F                     	;# 
  5128  0110                     	;# 
  5129  0110                     	;# 
  5130  0111                     	;# 
  5131  0112                     	;# 
  5132  0112                     	;# 
  5133  0113                     	;# 
  5134  0114                     	;# 
  5135  0114                     	;# 
  5136  0115                     	;# 
  5137  0116                     	;# 
  5138  0116                     	;# 
  5139  0117                     	;# 
  5140  0119                     	;# 
  5141  0119                     	;# 
  5142  0119                     	;# 
  5143  011A                     	;# 
  5144  011A                     	;# 
  5145  011A                     	;# 
  5146  011B                     	;# 
  5147  011B                     	;# 
  5148  011B                     	;# 
  5149  011B                     	;# 
  5150  011B                     	;# 
  5151  011C                     	;# 
  5152  011C                     	;# 
  5153  011C                     	;# 
  5154  011D                     	;# 
  5155  011D                     	;# 
  5156  011D                     	;# 
  5157  011E                     	;# 
  5158  011E                     	;# 
  5159  011E                     	;# 
  5160  011F                     	;# 
  5161  011F                     	;# 
  5162  011F                     	;# 
  5163  011F                     	;# 
  5164  011F                     	;# 
  5165  018C                     	;# 
  5166  018D                     	;# 
  5167  018E                     	;# 
  5168  018F                     	;# 
  5169  0190                     	;# 
  5170  0191                     	;# 
  5171  0192                     	;# 
  5172  0196                     	;# 
  5173  0197                     	;# 
  5174  0198                     	;# 
  5175  0199                     	;# 
  5176  019A                     	;# 
  5177  019B                     	;# 
  5178  019C                     	;# 
  5179  020C                     	;# 
  5180  020C                     	;# 
  5181  020D                     	;# 
  5182  020E                     	;# 
  5183  020F                     	;# 
  5184  020F                     	;# 
  5185  0210                     	;# 
  5186  0210                     	;# 
  5187  0211                     	;# 
  5188  0211                     	;# 
  5189  0212                     	;# 
  5190  0212                     	;# 
  5191  0213                     	;# 
  5192  0214                     	;# 
  5193  0215                     	;# 
  5194  0215                     	;# 
  5195  0216                     	;# 
  5196  0216                     	;# 
  5197  0217                     	;# 
  5198  0217                     	;# 
  5199  0218                     	;# 
  5200  0218                     	;# 
  5201  0219                     	;# 
  5202  021A                     	;# 
  5203  021B                     	;# 
  5204  021B                     	;# 
  5205  021C                     	;# 
  5206  021C                     	;# 
  5207  021D                     	;# 
  5208  021D                     	;# 
  5209  021E                     	;# 
  5210  021F                     	;# 
  5211  028C                     	;# 
  5212  028C                     	;# 
  5213  028D                     	;# 
  5214  028D                     	;# 
  5215  028E                     	;# 
  5216  028F                     	;# 
  5217  0290                     	;# 
  5218  0290                     	;# 
  5219  0291                     	;# 
  5220  0292                     	;# 
  5221  0292                     	;# 
  5222  0293                     	;# 
  5223  0293                     	;# 
  5224  0294                     	;# 
  5225  0295                     	;# 
  5226  0296                     	;# 
  5227  0296                     	;# 
  5228  0297                     	;# 
  5229  0298                     	;# 
  5230  0298                     	;# 
  5231  0299                     	;# 
  5232  0299                     	;# 
  5233  029A                     	;# 
  5234  029B                     	;# 
  5235  029C                     	;# 
  5236  029C                     	;# 
  5237  029D                     	;# 
  5238  030C                     	;# 
  5239  030C                     	;# 
  5240  030D                     	;# 
  5241  030E                     	;# 
  5242  030F                     	;# 
  5243  0310                     	;# 
  5244  0310                     	;# 
  5245  0311                     	;# 
  5246  0312                     	;# 
  5247  0313                     	;# 
  5248  0314                     	;# 
  5249  0314                     	;# 
  5250  0315                     	;# 
  5251  0316                     	;# 
  5252  0317                     	;# 
  5253  0318                     	;# 
  5254  0318                     	;# 
  5255  0319                     	;# 
  5256  031A                     	;# 
  5257  031B                     	;# 
  5258  031C                     	;# 
  5259  031C                     	;# 
  5260  031D                     	;# 
  5261  031E                     	;# 
  5262  031F                     	;# 
  5263  038C                     	;# 
  5264  038C                     	;# 
  5265  038D                     	;# 
  5266  038E                     	;# 
  5267  0390                     	;# 
  5268  0390                     	;# 
  5269  0391                     	;# 
  5270  0392                     	;# 
  5271  040C                     	;# 
  5272  040D                     	;# 
  5273  040E                     	;# 
  5274  040F                     	;# 
  5275  0410                     	;# 
  5276  0411                     	;# 
  5277  0416                     	;# 
  5278  0416                     	;# 
  5279  0417                     	;# 
  5280  0418                     	;# 
  5281  0418                     	;# 
  5282  0419                     	;# 
  5283  041A                     	;# 
  5284  041A                     	;# 
  5285  041B                     	;# 
  5286  041C                     	;# 
  5287  041C                     	;# 
  5288  041D                     	;# 
  5289  041E                     	;# 
  5290  041F                     	;# 
  5291  048C                     	;# 
  5292  048C                     	;# 
  5293  048D                     	;# 
  5294  048E                     	;# 
  5295  048F                     	;# 
  5296  048F                     	;# 
  5297  0490                     	;# 
  5298  0491                     	;# 
  5299  0492                     	;# 
  5300  0492                     	;# 
  5301  0493                     	;# 
  5302  0494                     	;# 
  5303  0495                     	;# 
  5304  0495                     	;# 
  5305  0496                     	;# 
  5306  0497                     	;# 
  5307  0498                     	;# 
  5308  0499                     	;# 
  5309  049A                     	;# 
  5310  049B                     	;# 
  5311  049C                     	;# 
  5312  049D                     	;# 
  5313  050C                     	;# 
  5314  050C                     	;# 
  5315  050D                     	;# 
  5316  050E                     	;# 
  5317  050F                     	;# 
  5318  050F                     	;# 
  5319  0510                     	;# 
  5320  0511                     	;# 
  5321  0512                     	;# 
  5322  0512                     	;# 
  5323  0513                     	;# 
  5324  0514                     	;# 
  5325  0515                     	;# 
  5326  0515                     	;# 
  5327  0516                     	;# 
  5328  0517                     	;# 
  5329  0518                     	;# 
  5330  0519                     	;# 
  5331  051A                     	;# 
  5332  051B                     	;# 
  5333  051C                     	;# 
  5334  051D                     	;# 
  5335  058C                     	;# 
  5336  058C                     	;# 
  5337  058D                     	;# 
  5338  058E                     	;# 
  5339  058F                     	;# 
  5340  058F                     	;# 
  5341  0590                     	;# 
  5342  0591                     	;# 
  5343  0592                     	;# 
  5344  0593                     	;# 
  5345  060C                     	;# 
  5346  060D                     	;# 
  5347  060E                     	;# 
  5348  060F                     	;# 
  5349  0610                     	;# 
  5350  0611                     	;# 
  5351  0612                     	;# 
  5352  0613                     	;# 
  5353  0614                     	;# 
  5354  0616                     	;# 
  5355  0617                     	;# 
  5356  0618                     	;# 
  5357  0619                     	;# 
  5358  061A                     	;# 
  5359  061B                     	;# 
  5360  061C                     	;# 
  5361  061D                     	;# 
  5362  061E                     	;# 
  5363  068C                     	;# 
  5364  068D                     	;# 
  5365  068E                     	;# 
  5366  068F                     	;# 
  5367  0690                     	;# 
  5368  0691                     	;# 
  5369  0692                     	;# 
  5370  0693                     	;# 
  5371  0694                     	;# 
  5372  070C                     	;# 
  5373  070D                     	;# 
  5374  070E                     	;# 
  5375  070F                     	;# 
  5376  0710                     	;# 
  5377  0711                     	;# 
  5378  0712                     	;# 
  5379  0713                     	;# 
  5380  0714                     	;# 
  5381  0716                     	;# 
  5382  0717                     	;# 
  5383  0718                     	;# 
  5384  0719                     	;# 
  5385  071A                     	;# 
  5386  071B                     	;# 
  5387  071C                     	;# 
  5388  071D                     	;# 
  5389  071E                     	;# 
  5390  0796                     	;# 
  5391  0797                     	;# 
  5392  0798                     	;# 
  5393  0799                     	;# 
  5394  079A                     	;# 
  5395  079B                     	;# 
  5396  080C                     	;# 
  5397  080D                     	;# 
  5398  080E                     	;# 
  5399  080F                     	;# 
  5400  0810                     	;# 
  5401  0811                     	;# 
  5402  0812                     	;# 
  5403  0813                     	;# 
  5404  0814                     	;# 
  5405  081A                     	;# 
  5406  081B                     	;# 
  5407  081C                     	;# 
  5408  081D                     	;# 
  5409  081E                     	;# 
  5410  081F                     	;# 
  5411  088C                     	;# 
  5412  088D                     	;# 
  5413  088E                     	;# 
  5414  088F                     	;# 
  5415  0890                     	;# 
  5416  0891                     	;# 
  5417  0892                     	;# 
  5418  0893                     	;# 
  5419  0895                     	;# 
  5420  0896                     	;# 
  5421  0897                     	;# 
  5422  0898                     	;# 
  5423  0899                     	;# 
  5424  089A                     	;# 
  5425  089B                     	;# 
  5426  090C                     	;# 
  5427  090E                     	;# 
  5428  090F                     	;# 
  5429  091F                     	;# 
  5430  091F                     	;# 
  5431  098F                     	;# 
  5432  098F                     	;# 
  5433  0990                     	;# 
  5434  0991                     	;# 
  5435  0992                     	;# 
  5436  0993                     	;# 
  5437  0994                     	;# 
  5438  0995                     	;# 
  5439  0996                     	;# 
  5440  0997                     	;# 
  5441  0E0F                     	;# 
  5442  0E10                     	;# 
  5443  0E11                     	;# 
  5444  0E12                     	;# 
  5445  0E13                     	;# 
  5446  0E14                     	;# 
  5447  0E15                     	;# 
  5448  0E16                     	;# 
  5449  0E17                     	;# 
  5450  0E18                     	;# 
  5451  0E19                     	;# 
  5452  0E1A                     	;# 
  5453  0E1B                     	;# 
  5454  0E1C                     	;# 
  5455  0E1D                     	;# 
  5456  0E1E                     	;# 
  5457  0E1F                     	;# 
  5458  0E20                     	;# 
  5459  0E21                     	;# 
  5460  0E22                     	;# 
  5461  0E23                     	;# 
  5462  0E24                     	;# 
  5463  0E25                     	;# 
  5464  0E26                     	;# 
  5465  0E27                     	;# 
  5466  0E28                     	;# 
  5467  0E29                     	;# 
  5468  0E2A                     	;# 
  5469  0E2B                     	;# 
  5470  0E2C                     	;# 
  5471  0E2D                     	;# 
  5472  0E2E                     	;# 
  5473  0E2F                     	;# 
  5474  0E30                     	;# 
  5475  0E31                     	;# 
  5476  0E32                     	;# 
  5477  0E33                     	;# 
  5478  0E34                     	;# 
  5479  0E35                     	;# 
  5480  0E36                     	;# 
  5481  0E37                     	;# 
  5482  0E8F                     	;# 
  5483  0E90                     	;# 
  5484  0E91                     	;# 
  5485  0E92                     	;# 
  5486  0E93                     	;# 
  5487  0E94                     	;# 
  5488  0E95                     	;# 
  5489  0E96                     	;# 
  5490  0E97                     	;# 
  5491  0E9C                     	;# 
  5492  0E9D                     	;# 
  5493  0E9E                     	;# 
  5494  0EA1                     	;# 
  5495  0EA2                     	;# 
  5496  0EA3                     	;# 
  5497  0EA4                     	;# 
  5498  0EA5                     	;# 
  5499  0EA9                     	;# 
  5500  0EAA                     	;# 
  5501  0EAB                     	;# 
  5502  0EAC                     	;# 
  5503  0EB1                     	;# 
  5504  0EB2                     	;# 
  5505  0EB3                     	;# 
  5506  0EB8                     	;# 
  5507  0EB9                     	;# 
  5508  0EBA                     	;# 
  5509  0EBB                     	;# 
  5510  0EBC                     	;# 
  5511  0EBD                     	;# 
  5512  0EBE                     	;# 
  5513  0EC3                     	;# 
  5514  0EC5                     	;# 
  5515  0EC6                     	;# 
  5516  0EC7                     	;# 
  5517  0EC8                     	;# 
  5518  0EC9                     	;# 
  5519  0ECA                     	;# 
  5520  0ECB                     	;# 
  5521  0ECC                     	;# 
  5522  0F10                     	;# 
  5523  0F11                     	;# 
  5524  0F12                     	;# 
  5525  0F13                     	;# 
  5526  0F14                     	;# 
  5527  0F15                     	;# 
  5528  0F16                     	;# 
  5529  0F17                     	;# 
  5530  0F18                     	;# 
  5531  0F19                     	;# 
  5532  0F1A                     	;# 
  5533  0F1B                     	;# 
  5534  0F1C                     	;# 
  5535  0F1D                     	;# 
  5536  0F1E                     	;# 
  5537  0F1F                     	;# 
  5538  0F20                     	;# 
  5539  0F21                     	;# 
  5540  0F22                     	;# 
  5541  0F23                     	;# 
  5542  0F24                     	;# 
  5543  0F25                     	;# 
  5544  0F26                     	;# 
  5545  0F27                     	;# 
  5546  0F28                     	;# 
  5547  0F29                     	;# 
  5548  0F2A                     	;# 
  5549  0F2B                     	;# 
  5550  0F2C                     	;# 
  5551  0F2D                     	;# 
  5552  0F2E                     	;# 
  5553  0F2F                     	;# 
  5554  0F30                     	;# 
  5555  0F31                     	;# 
  5556  0F32                     	;# 
  5557  0F38                     	;# 
  5558  0F39                     	;# 
  5559  0F3A                     	;# 
  5560  0F3B                     	;# 
  5561  0F3C                     	;# 
  5562  0F3D                     	;# 
  5563  0F3E                     	;# 
  5564  0F3F                     	;# 
  5565  0F40                     	;# 
  5566  0F41                     	;# 
  5567  0F43                     	;# 
  5568  0F44                     	;# 
  5569  0F45                     	;# 
  5570  0F46                     	;# 
  5571  0F47                     	;# 
  5572  0F48                     	;# 
  5573  0F49                     	;# 
  5574  0F4A                     	;# 
  5575  0F4B                     	;# 
  5576  0F4C                     	;# 
  5577  0F4E                     	;# 
  5578  0F4F                     	;# 
  5579  0F50                     	;# 
  5580  0F51                     	;# 
  5581  0F52                     	;# 
  5582  0F53                     	;# 
  5583  0F54                     	;# 
  5584  0F55                     	;# 
  5585  0F56                     	;# 
  5586  0F57                     	;# 
  5587  0F59                     	;# 
  5588  0F5A                     	;# 
  5589  0F5B                     	;# 
  5590  0F5C                     	;# 
  5591  0F5D                     	;# 
  5592  0F61                     	;# 
  5593  0F62                     	;# 
  5594  0F64                     	;# 
  5595  0F65                     	;# 
  5596  0F66                     	;# 
  5597  0F67                     	;# 
  5598  0F68                     	;# 
  5599  0F69                     	;# 
  5600  0F6A                     	;# 
  5601  0F6B                     	;# 
  5602  0F6C                     	;# 
  5603  0F6D                     	;# 
  5604  0FE4                     	;# 
  5605  0FE5                     	;# 
  5606  0FE6                     	;# 
  5607  0FE7                     	;# 
  5608  0FE8                     	;# 
  5609  0FE9                     	;# 
  5610  0FEA                     	;# 
  5611  0FEB                     	;# 
  5612  0FED                     	;# 
  5613  0FEE                     	;# 
  5614  0FEF                     	;# 
  5615  0000                     	;# 
  5616  0001                     	;# 
  5617  0002                     	;# 
  5618  0003                     	;# 
  5619  0004                     	;# 
  5620  0005                     	;# 
  5621  0006                     	;# 
  5622  0007                     	;# 
  5623  0008                     	;# 
  5624  0009                     	;# 
  5625  000A                     	;# 
  5626  000B                     	;# 
  5627  000C                     	;# 
  5628  000D                     	;# 
  5629  000E                     	;# 
  5630  000F                     	;# 
  5631  0010                     	;# 
  5632  0011                     	;# 
  5633  0012                     	;# 
  5634  0013                     	;# 
  5635  0014                     	;# 
  5636  0015                     	;# 
  5637  0016                     	;# 
  5638  0017                     	;# 
  5639  0018                     	;# 
  5640  0019                     	;# 
  5641  001A                     	;# 
  5642  001C                     	;# 
  5643  001C                     	;# 
  5644  001D                     	;# 
  5645  001D                     	;# 
  5646  001E                     	;# 
  5647  001F                     	;# 
  5648  008C                     	;# 
  5649  008C                     	;# 
  5650  008D                     	;# 
  5651  008E                     	;# 
  5652  008E                     	;# 
  5653  008F                     	;# 
  5654  0090                     	;# 
  5655  0090                     	;# 
  5656  0091                     	;# 
  5657  0093                     	;# 
  5658  0094                     	;# 
  5659  0095                     	;# 
  5660  0096                     	;# 
  5661  0097                     	;# 
  5662  0098                     	;# 
  5663  0099                     	;# 
  5664  009A                     	;# 
  5665  009B                     	;# 
  5666  009C                     	;# 
  5667  009D                     	;# 
  5668  009E                     	;# 
  5669  010C                     	;# 
  5670  010D                     	;# 
  5671  010E                     	;# 
  5672  010E                     	;# 
  5673  010F                     	;# 
  5674  0110                     	;# 
  5675  0110                     	;# 
  5676  0111                     	;# 
  5677  0112                     	;# 
  5678  0112                     	;# 
  5679  0113                     	;# 
  5680  0114                     	;# 
  5681  0114                     	;# 
  5682  0115                     	;# 
  5683  0116                     	;# 
  5684  0116                     	;# 
  5685  0117                     	;# 
  5686  0119                     	;# 
  5687  0119                     	;# 
  5688  0119                     	;# 
  5689  011A                     	;# 
  5690  011A                     	;# 
  5691  011A                     	;# 
  5692  011B                     	;# 
  5693  011B                     	;# 
  5694  011B                     	;# 
  5695  011B                     	;# 
  5696  011B                     	;# 
  5697  011C                     	;# 
  5698  011C                     	;# 
  5699  011C                     	;# 
  5700  011D                     	;# 
  5701  011D                     	;# 
  5702  011D                     	;# 
  5703  011E                     	;# 
  5704  011E                     	;# 
  5705  011E                     	;# 
  5706  011F                     	;# 
  5707  011F                     	;# 
  5708  011F                     	;# 
  5709  011F                     	;# 
  5710  011F                     	;# 
  5711  018C                     	;# 
  5712  018D                     	;# 
  5713  018E                     	;# 
  5714  018F                     	;# 
  5715  0190                     	;# 
  5716  0191                     	;# 
  5717  0192                     	;# 
  5718  0196                     	;# 
  5719  0197                     	;# 
  5720  0198                     	;# 
  5721  0199                     	;# 
  5722  019A                     	;# 
  5723  019B                     	;# 
  5724  019C                     	;# 
  5725  020C                     	;# 
  5726  020C                     	;# 
  5727  020D                     	;# 
  5728  020E                     	;# 
  5729  020F                     	;# 
  5730  020F                     	;# 
  5731  0210                     	;# 
  5732  0210                     	;# 
  5733  0211                     	;# 
  5734  0211                     	;# 
  5735  0212                     	;# 
  5736  0212                     	;# 
  5737  0213                     	;# 
  5738  0214                     	;# 
  5739  0215                     	;# 
  5740  0215                     	;# 
  5741  0216                     	;# 
  5742  0216                     	;# 
  5743  0217                     	;# 
  5744  0217                     	;# 
  5745  0218                     	;# 
  5746  0218                     	;# 
  5747  0219                     	;# 
  5748  021A                     	;# 
  5749  021B                     	;# 
  5750  021B                     	;# 
  5751  021C                     	;# 
  5752  021C                     	;# 
  5753  021D                     	;# 
  5754  021D                     	;# 
  5755  021E                     	;# 
  5756  021F                     	;# 
  5757  028C                     	;# 
  5758  028C                     	;# 
  5759  028D                     	;# 
  5760  028D                     	;# 
  5761  028E                     	;# 
  5762  028F                     	;# 
  5763  0290                     	;# 
  5764  0290                     	;# 
  5765  0291                     	;# 
  5766  0292                     	;# 
  5767  0292                     	;# 
  5768  0293                     	;# 
  5769  0293                     	;# 
  5770  0294                     	;# 
  5771  0295                     	;# 
  5772  0296                     	;# 
  5773  0296                     	;# 
  5774  0297                     	;# 
  5775  0298                     	;# 
  5776  0298                     	;# 
  5777  0299                     	;# 
  5778  0299                     	;# 
  5779  029A                     	;# 
  5780  029B                     	;# 
  5781  029C                     	;# 
  5782  029C                     	;# 
  5783  029D                     	;# 
  5784  030C                     	;# 
  5785  030C                     	;# 
  5786  030D                     	;# 
  5787  030E                     	;# 
  5788  030F                     	;# 
  5789  0310                     	;# 
  5790  0310                     	;# 
  5791  0311                     	;# 
  5792  0312                     	;# 
  5793  0313                     	;# 
  5794  0314                     	;# 
  5795  0314                     	;# 
  5796  0315                     	;# 
  5797  0316                     	;# 
  5798  0317                     	;# 
  5799  0318                     	;# 
  5800  0318                     	;# 
  5801  0319                     	;# 
  5802  031A                     	;# 
  5803  031B                     	;# 
  5804  031C                     	;# 
  5805  031C                     	;# 
  5806  031D                     	;# 
  5807  031E                     	;# 
  5808  031F                     	;# 
  5809  038C                     	;# 
  5810  038C                     	;# 
  5811  038D                     	;# 
  5812  038E                     	;# 
  5813  0390                     	;# 
  5814  0390                     	;# 
  5815  0391                     	;# 
  5816  0392                     	;# 
  5817  040C                     	;# 
  5818  040D                     	;# 
  5819  040E                     	;# 
  5820  040F                     	;# 
  5821  0410                     	;# 
  5822  0411                     	;# 
  5823  0416                     	;# 
  5824  0416                     	;# 
  5825  0417                     	;# 
  5826  0418                     	;# 
  5827  0418                     	;# 
  5828  0419                     	;# 
  5829  041A                     	;# 
  5830  041A                     	;# 
  5831  041B                     	;# 
  5832  041C                     	;# 
  5833  041C                     	;# 
  5834  041D                     	;# 
  5835  041E                     	;# 
  5836  041F                     	;# 
  5837  048C                     	;# 
  5838  048C                     	;# 
  5839  048D                     	;# 
  5840  048E                     	;# 
  5841  048F                     	;# 
  5842  048F                     	;# 
  5843  0490                     	;# 
  5844  0491                     	;# 
  5845  0492                     	;# 
  5846  0492                     	;# 
  5847  0493                     	;# 
  5848  0494                     	;# 
  5849  0495                     	;# 
  5850  0495                     	;# 
  5851  0496                     	;# 
  5852  0497                     	;# 
  5853  0498                     	;# 
  5854  0499                     	;# 
  5855  049A                     	;# 
  5856  049B                     	;# 
  5857  049C                     	;# 
  5858  049D                     	;# 
  5859  050C                     	;# 
  5860  050C                     	;# 
  5861  050D                     	;# 
  5862  050E                     	;# 
  5863  050F                     	;# 
  5864  050F                     	;# 
  5865  0510                     	;# 
  5866  0511                     	;# 
  5867  0512                     	;# 
  5868  0512                     	;# 
  5869  0513                     	;# 
  5870  0514                     	;# 
  5871  0515                     	;# 
  5872  0515                     	;# 
  5873  0516                     	;# 
  5874  0517                     	;# 
  5875  0518                     	;# 
  5876  0519                     	;# 
  5877  051A                     	;# 
  5878  051B                     	;# 
  5879  051C                     	;# 
  5880  051D                     	;# 
  5881  058C                     	;# 
  5882  058C                     	;# 
  5883  058D                     	;# 
  5884  058E                     	;# 
  5885  058F                     	;# 
  5886  058F                     	;# 
  5887  0590                     	;# 
  5888  0591                     	;# 
  5889  0592                     	;# 
  5890  0593                     	;# 
  5891  060C                     	;# 
  5892  060D                     	;# 
  5893  060E                     	;# 
  5894  060F                     	;# 
  5895  0610                     	;# 
  5896  0611                     	;# 
  5897  0612                     	;# 
  5898  0613                     	;# 
  5899  0614                     	;# 
  5900  0616                     	;# 
  5901  0617                     	;# 
  5902  0618                     	;# 
  5903  0619                     	;# 
  5904  061A                     	;# 
  5905  061B                     	;# 
  5906  061C                     	;# 
  5907  061D                     	;# 
  5908  061E                     	;# 
  5909  068C                     	;# 
  5910  068D                     	;# 
  5911  068E                     	;# 
  5912  068F                     	;# 
  5913  0690                     	;# 
  5914  0691                     	;# 
  5915  0692                     	;# 
  5916  0693                     	;# 
  5917  0694                     	;# 
  5918  070C                     	;# 
  5919  070D                     	;# 
  5920  070E                     	;# 
  5921  070F                     	;# 
  5922  0710                     	;# 
  5923  0711                     	;# 
  5924  0712                     	;# 
  5925  0713                     	;# 
  5926  0714                     	;# 
  5927  0716                     	;# 
  5928  0717                     	;# 
  5929  0718                     	;# 
  5930  0719                     	;# 
  5931  071A                     	;# 
  5932  071B                     	;# 
  5933  071C                     	;# 
  5934  071D                     	;# 
  5935  071E                     	;# 
  5936  0796                     	;# 
  5937  0797                     	;# 
  5938  0798                     	;# 
  5939  0799                     	;# 
  5940  079A                     	;# 
  5941  079B                     	;# 
  5942  080C                     	;# 
  5943  080D                     	;# 
  5944  080E                     	;# 
  5945  080F                     	;# 
  5946  0810                     	;# 
  5947  0811                     	;# 
  5948  0812                     	;# 
  5949  0813                     	;# 
  5950  0814                     	;# 
  5951  081A                     	;# 
  5952  081B                     	;# 
  5953  081C                     	;# 
  5954  081D                     	;# 
  5955  081E                     	;# 
  5956  081F                     	;# 
  5957  088C                     	;# 
  5958  088D                     	;# 
  5959  088E                     	;# 
  5960  088F                     	;# 
  5961  0890                     	;# 
  5962  0891                     	;# 
  5963  0892                     	;# 
  5964  0893                     	;# 
  5965  0895                     	;# 
  5966  0896                     	;# 
  5967  0897                     	;# 
  5968  0898                     	;# 
  5969  0899                     	;# 
  5970  089A                     	;# 
  5971  089B                     	;# 
  5972  090C                     	;# 
  5973  090E                     	;# 
  5974  090F                     	;# 
  5975  091F                     	;# 
  5976  091F                     	;# 
  5977  098F                     	;# 
  5978  098F                     	;# 
  5979  0990                     	;# 
  5980  0991                     	;# 
  5981  0992                     	;# 
  5982  0993                     	;# 
  5983  0994                     	;# 
  5984  0995                     	;# 
  5985  0996                     	;# 
  5986  0997                     	;# 
  5987  0E0F                     	;# 
  5988  0E10                     	;# 
  5989  0E11                     	;# 
  5990  0E12                     	;# 
  5991  0E13                     	;# 
  5992  0E14                     	;# 
  5993  0E15                     	;# 
  5994  0E16                     	;# 
  5995  0E17                     	;# 
  5996  0E18                     	;# 
  5997  0E19                     	;# 
  5998  0E1A                     	;# 
  5999  0E1B                     	;# 
  6000  0E1C                     	;# 
  6001  0E1D                     	;# 
  6002  0E1E                     	;# 
  6003  0E1F                     	;# 
  6004  0E20                     	;# 
  6005  0E21                     	;# 
  6006  0E22                     	;# 
  6007  0E23                     	;# 
  6008  0E24                     	;# 
  6009  0E25                     	;# 
  6010  0E26                     	;# 
  6011  0E27                     	;# 
  6012  0E28                     	;# 
  6013  0E29                     	;# 
  6014  0E2A                     	;# 
  6015  0E2B                     	;# 
  6016  0E2C                     	;# 
  6017  0E2D                     	;# 
  6018  0E2E                     	;# 
  6019  0E2F                     	;# 
  6020  0E30                     	;# 
  6021  0E31                     	;# 
  6022  0E32                     	;# 
  6023  0E33                     	;# 
  6024  0E34                     	;# 
  6025  0E35                     	;# 
  6026  0E36                     	;# 
  6027  0E37                     	;# 
  6028  0E8F                     	;# 
  6029  0E90                     	;# 
  6030  0E91                     	;# 
  6031  0E92                     	;# 
  6032  0E93                     	;# 
  6033  0E94                     	;# 
  6034  0E95                     	;# 
  6035  0E96                     	;# 
  6036  0E97                     	;# 
  6037  0E9C                     	;# 
  6038  0E9D                     	;# 
  6039  0E9E                     	;# 
  6040  0EA1                     	;# 
  6041  0EA2                     	;# 
  6042  0EA3                     	;# 
  6043  0EA4                     	;# 
  6044  0EA5                     	;# 
  6045  0EA9                     	;# 
  6046  0EAA                     	;# 
  6047  0EAB                     	;# 
  6048  0EAC                     	;# 
  6049  0EB1                     	;# 
  6050  0EB2                     	;# 
  6051  0EB3                     	;# 
  6052  0EB8                     	;# 
  6053  0EB9                     	;# 
  6054  0EBA                     	;# 
  6055  0EBB                     	;# 
  6056  0EBC                     	;# 
  6057  0EBD                     	;# 
  6058  0EBE                     	;# 
  6059  0EC3                     	;# 
  6060  0EC5                     	;# 
  6061  0EC6                     	;# 
  6062  0EC7                     	;# 
  6063  0EC8                     	;# 
  6064  0EC9                     	;# 
  6065  0ECA                     	;# 
  6066  0ECB                     	;# 
  6067  0ECC                     	;# 
  6068  0F10                     	;# 
  6069  0F11                     	;# 
  6070  0F12                     	;# 
  6071  0F13                     	;# 
  6072  0F14                     	;# 
  6073  0F15                     	;# 
  6074  0F16                     	;# 
  6075  0F17                     	;# 
  6076  0F18                     	;# 
  6077  0F19                     	;# 
  6078  0F1A                     	;# 
  6079  0F1B                     	;# 
  6080  0F1C                     	;# 
  6081  0F1D                     	;# 
  6082  0F1E                     	;# 
  6083  0F1F                     	;# 
  6084  0F20                     	;# 
  6085  0F21                     	;# 
  6086  0F22                     	;# 
  6087  0F23                     	;# 
  6088  0F24                     	;# 
  6089  0F25                     	;# 
  6090  0F26                     	;# 
  6091  0F27                     	;# 
  6092  0F28                     	;# 
  6093  0F29                     	;# 
  6094  0F2A                     	;# 
  6095  0F2B                     	;# 
  6096  0F2C                     	;# 
  6097  0F2D                     	;# 
  6098  0F2E                     	;# 
  6099  0F2F                     	;# 
  6100  0F30                     	;# 
  6101  0F31                     	;# 
  6102  0F32                     	;# 
  6103  0F38                     	;# 
  6104  0F39                     	;# 
  6105  0F3A                     	;# 
  6106  0F3B                     	;# 
  6107  0F3C                     	;# 
  6108  0F3D                     	;# 
  6109  0F3E                     	;# 
  6110  0F3F                     	;# 
  6111  0F40                     	;# 
  6112  0F41                     	;# 
  6113  0F43                     	;# 
  6114  0F44                     	;# 
  6115  0F45                     	;# 
  6116  0F46                     	;# 
  6117  0F47                     	;# 
  6118  0F48                     	;# 
  6119  0F49                     	;# 
  6120  0F4A                     	;# 
  6121  0F4B                     	;# 
  6122  0F4C                     	;# 
  6123  0F4E                     	;# 
  6124  0F4F                     	;# 
  6125  0F50                     	;# 
  6126  0F51                     	;# 
  6127  0F52                     	;# 
  6128  0F53                     	;# 
  6129  0F54                     	;# 
  6130  0F55                     	;# 
  6131  0F56                     	;# 
  6132  0F57                     	;# 
  6133  0F59                     	;# 
  6134  0F5A                     	;# 
  6135  0F5B                     	;# 
  6136  0F5C                     	;# 
  6137  0F5D                     	;# 
  6138  0F61                     	;# 
  6139  0F62                     	;# 
  6140  0F64                     	;# 
  6141  0F65                     	;# 
  6142  0F66                     	;# 
  6143  0F67                     	;# 
  6144  0F68                     	;# 
  6145  0F69                     	;# 
  6146  0F6A                     	;# 
  6147  0F6B                     	;# 
  6148  0F6C                     	;# 
  6149  0F6D                     	;# 
  6150  0FE4                     	;# 
  6151  0FE5                     	;# 
  6152  0FE6                     	;# 
  6153  0FE7                     	;# 
  6154  0FE8                     	;# 
  6155  0FE9                     	;# 
  6156  0FEA                     	;# 
  6157  0FEB                     	;# 
  6158  0FED                     	;# 
  6159  0FEE                     	;# 
  6160  0FEF                     	;# 
  6161  0000                     	;# 
  6162  0001                     	;# 
  6163  0002                     	;# 
  6164  0003                     	;# 
  6165  0004                     	;# 
  6166  0005                     	;# 
  6167  0006                     	;# 
  6168  0007                     	;# 
  6169  0008                     	;# 
  6170  0009                     	;# 
  6171  000A                     	;# 
  6172  000B                     	;# 
  6173  000C                     	;# 
  6174  000D                     	;# 
  6175  000E                     	;# 
  6176  000F                     	;# 
  6177  0010                     	;# 
  6178  0011                     	;# 
  6179  0012                     	;# 
  6180  0013                     	;# 
  6181  0014                     	;# 
  6182  0015                     	;# 
  6183  0016                     	;# 
  6184  0017                     	;# 
  6185  0018                     	;# 
  6186  0019                     	;# 
  6187  001A                     	;# 
  6188  001C                     	;# 
  6189  001C                     	;# 
  6190  001D                     	;# 
  6191  001D                     	;# 
  6192  001E                     	;# 
  6193  001F                     	;# 
  6194  008C                     	;# 
  6195  008C                     	;# 
  6196  008D                     	;# 
  6197  008E                     	;# 
  6198  008E                     	;# 
  6199  008F                     	;# 
  6200  0090                     	;# 
  6201  0090                     	;# 
  6202  0091                     	;# 
  6203  0093                     	;# 
  6204  0094                     	;# 
  6205  0095                     	;# 
  6206  0096                     	;# 
  6207  0097                     	;# 
  6208  0098                     	;# 
  6209  0099                     	;# 
  6210  009A                     	;# 
  6211  009B                     	;# 
  6212  009C                     	;# 
  6213  009D                     	;# 
  6214  009E                     	;# 
  6215  010C                     	;# 
  6216  010D                     	;# 
  6217  010E                     	;# 
  6218  010E                     	;# 
  6219  010F                     	;# 
  6220  0110                     	;# 
  6221  0110                     	;# 
  6222  0111                     	;# 
  6223  0112                     	;# 
  6224  0112                     	;# 
  6225  0113                     	;# 
  6226  0114                     	;# 
  6227  0114                     	;# 
  6228  0115                     	;# 
  6229  0116                     	;# 
  6230  0116                     	;# 
  6231  0117                     	;# 
  6232  0119                     	;# 
  6233  0119                     	;# 
  6234  0119                     	;# 
  6235  011A                     	;# 
  6236  011A                     	;# 
  6237  011A                     	;# 
  6238  011B                     	;# 
  6239  011B                     	;# 
  6240  011B                     	;# 
  6241  011B                     	;# 
  6242  011B                     	;# 
  6243  011C                     	;# 
  6244  011C                     	;# 
  6245  011C                     	;# 
  6246  011D                     	;# 
  6247  011D                     	;# 
  6248  011D                     	;# 
  6249  011E                     	;# 
  6250  011E                     	;# 
  6251  011E                     	;# 
  6252  011F                     	;# 
  6253  011F                     	;# 
  6254  011F                     	;# 
  6255  011F                     	;# 
  6256  011F                     	;# 
  6257  018C                     	;# 
  6258  018D                     	;# 
  6259  018E                     	;# 
  6260  018F                     	;# 
  6261  0190                     	;# 
  6262  0191                     	;# 
  6263  0192                     	;# 
  6264  0196                     	;# 
  6265  0197                     	;# 
  6266  0198                     	;# 
  6267  0199                     	;# 
  6268  019A                     	;# 
  6269  019B                     	;# 
  6270  019C                     	;# 
  6271  020C                     	;# 
  6272  020C                     	;# 
  6273  020D                     	;# 
  6274  020E                     	;# 
  6275  020F                     	;# 
  6276  020F                     	;# 
  6277  0210                     	;# 
  6278  0210                     	;# 
  6279  0211                     	;# 
  6280  0211                     	;# 
  6281  0212                     	;# 
  6282  0212                     	;# 
  6283  0213                     	;# 
  6284  0214                     	;# 
  6285  0215                     	;# 
  6286  0215                     	;# 
  6287  0216                     	;# 
  6288  0216                     	;# 
  6289  0217                     	;# 
  6290  0217                     	;# 
  6291  0218                     	;# 
  6292  0218                     	;# 
  6293  0219                     	;# 
  6294  021A                     	;# 
  6295  021B                     	;# 
  6296  021B                     	;# 
  6297  021C                     	;# 
  6298  021C                     	;# 
  6299  021D                     	;# 
  6300  021D                     	;# 
  6301  021E                     	;# 
  6302  021F                     	;# 
  6303  028C                     	;# 
  6304  028C                     	;# 
  6305  028D                     	;# 
  6306  028D                     	;# 
  6307  028E                     	;# 
  6308  028F                     	;# 
  6309  0290                     	;# 
  6310  0290                     	;# 
  6311  0291                     	;# 
  6312  0292                     	;# 
  6313  0292                     	;# 
  6314  0293                     	;# 
  6315  0293                     	;# 
  6316  0294                     	;# 
  6317  0295                     	;# 
  6318  0296                     	;# 
  6319  0296                     	;# 
  6320  0297                     	;# 
  6321  0298                     	;# 
  6322  0298                     	;# 
  6323  0299                     	;# 
  6324  0299                     	;# 
  6325  029A                     	;# 
  6326  029B                     	;# 
  6327  029C                     	;# 
  6328  029C                     	;# 
  6329  029D                     	;# 
  6330  030C                     	;# 
  6331  030C                     	;# 
  6332  030D                     	;# 
  6333  030E                     	;# 
  6334  030F                     	;# 
  6335  0310                     	;# 
  6336  0310                     	;# 
  6337  0311                     	;# 
  6338  0312                     	;# 
  6339  0313                     	;# 
  6340  0314                     	;# 
  6341  0314                     	;# 
  6342  0315                     	;# 
  6343  0316                     	;# 
  6344  0317                     	;# 
  6345  0318                     	;# 
  6346  0318                     	;# 
  6347  0319                     	;# 
  6348  031A                     	;# 
  6349  031B                     	;# 
  6350  031C                     	;# 
  6351  031C                     	;# 
  6352  031D                     	;# 
  6353  031E                     	;# 
  6354  031F                     	;# 
  6355  038C                     	;# 
  6356  038C                     	;# 
  6357  038D                     	;# 
  6358  038E                     	;# 
  6359  0390                     	;# 
  6360  0390                     	;# 
  6361  0391                     	;# 
  6362  0392                     	;# 
  6363  040C                     	;# 
  6364  040D                     	;# 
  6365  040E                     	;# 
  6366  040F                     	;# 
  6367  0410                     	;# 
  6368  0411                     	;# 
  6369  0416                     	;# 
  6370  0416                     	;# 
  6371  0417                     	;# 
  6372  0418                     	;# 
  6373  0418                     	;# 
  6374  0419                     	;# 
  6375  041A                     	;# 
  6376  041A                     	;# 
  6377  041B                     	;# 
  6378  041C                     	;# 
  6379  041C                     	;# 
  6380  041D                     	;# 
  6381  041E                     	;# 
  6382  041F                     	;# 
  6383  048C                     	;# 
  6384  048C                     	;# 
  6385  048D                     	;# 
  6386  048E                     	;# 
  6387  048F                     	;# 
  6388  048F                     	;# 
  6389  0490                     	;# 
  6390  0491                     	;# 
  6391  0492                     	;# 
  6392  0492                     	;# 
  6393  0493                     	;# 
  6394  0494                     	;# 
  6395  0495                     	;# 
  6396  0495                     	;# 
  6397  0496                     	;# 
  6398  0497                     	;# 
  6399  0498                     	;# 
  6400  0499                     	;# 
  6401  049A                     	;# 
  6402  049B                     	;# 
  6403  049C                     	;# 
  6404  049D                     	;# 
  6405  050C                     	;# 
  6406  050C                     	;# 
  6407  050D                     	;# 
  6408  050E                     	;# 
  6409  050F                     	;# 
  6410  050F                     	;# 
  6411  0510                     	;# 
  6412  0511                     	;# 
  6413  0512                     	;# 
  6414  0512                     	;# 
  6415  0513                     	;# 
  6416  0514                     	;# 
  6417  0515                     	;# 
  6418  0515                     	;# 
  6419  0516                     	;# 
  6420  0517                     	;# 
  6421  0518                     	;# 
  6422  0519                     	;# 
  6423  051A                     	;# 
  6424  051B                     	;# 
  6425  051C                     	;# 
  6426  051D                     	;# 
  6427  058C                     	;# 
  6428  058C                     	;# 
  6429  058D                     	;# 
  6430  058E                     	;# 
  6431  058F                     	;# 
  6432  058F                     	;# 
  6433  0590                     	;# 
  6434  0591                     	;# 
  6435  0592                     	;# 
  6436  0593                     	;# 
  6437  060C                     	;# 
  6438  060D                     	;# 
  6439  060E                     	;# 
  6440  060F                     	;# 
  6441  0610                     	;# 
  6442  0611                     	;# 
  6443  0612                     	;# 
  6444  0613                     	;# 
  6445  0614                     	;# 
  6446  0616                     	;# 
  6447  0617                     	;# 
  6448  0618                     	;# 
  6449  0619                     	;# 
  6450  061A                     	;# 
  6451  061B                     	;# 
  6452  061C                     	;# 
  6453  061D                     	;# 
  6454  061E                     	;# 
  6455  068C                     	;# 
  6456  068D                     	;# 
  6457  068E                     	;# 
  6458  068F                     	;# 
  6459  0690                     	;# 
  6460  0691                     	;# 
  6461  0692                     	;# 
  6462  0693                     	;# 
  6463  0694                     	;# 
  6464  070C                     	;# 
  6465  070D                     	;# 
  6466  070E                     	;# 
  6467  070F                     	;# 
  6468  0710                     	;# 
  6469  0711                     	;# 
  6470  0712                     	;# 
  6471  0713                     	;# 
  6472  0714                     	;# 
  6473  0716                     	;# 
  6474  0717                     	;# 
  6475  0718                     	;# 
  6476  0719                     	;# 
  6477  071A                     	;# 
  6478  071B                     	;# 
  6479  071C                     	;# 
  6480  071D                     	;# 
  6481  071E                     	;# 
  6482  0796                     	;# 
  6483  0797                     	;# 
  6484  0798                     	;# 
  6485  0799                     	;# 
  6486  079A                     	;# 
  6487  079B                     	;# 
  6488  080C                     	;# 
  6489  080D                     	;# 
  6490  080E                     	;# 
  6491  080F                     	;# 
  6492  0810                     	;# 
  6493  0811                     	;# 
  6494  0812                     	;# 
  6495  0813                     	;# 
  6496  0814                     	;# 
  6497  081A                     	;# 
  6498  081B                     	;# 
  6499  081C                     	;# 
  6500  081D                     	;# 
  6501  081E                     	;# 
  6502  081F                     	;# 
  6503  088C                     	;# 
  6504  088D                     	;# 
  6505  088E                     	;# 
  6506  088F                     	;# 
  6507  0890                     	;# 
  6508  0891                     	;# 
  6509  0892                     	;# 
  6510  0893                     	;# 
  6511  0895                     	;# 
  6512  0896                     	;# 
  6513  0897                     	;# 
  6514  0898                     	;# 
  6515  0899                     	;# 
  6516  089A                     	;# 
  6517  089B                     	;# 
  6518  090C                     	;# 
  6519  090E                     	;# 
  6520  090F                     	;# 
  6521  091F                     	;# 
  6522  091F                     	;# 
  6523  098F                     	;# 
  6524  098F                     	;# 
  6525  0990                     	;# 
  6526  0991                     	;# 
  6527  0992                     	;# 
  6528  0993                     	;# 
  6529  0994                     	;# 
  6530  0995                     	;# 
  6531  0996                     	;# 
  6532  0997                     	;# 
  6533  0E0F                     	;# 
  6534  0E10                     	;# 
  6535  0E11                     	;# 
  6536  0E12                     	;# 
  6537  0E13                     	;# 
  6538  0E14                     	;# 
  6539  0E15                     	;# 
  6540  0E16                     	;# 
  6541  0E17                     	;# 
  6542  0E18                     	;# 
  6543  0E19                     	;# 
  6544  0E1A                     	;# 
  6545  0E1B                     	;# 
  6546  0E1C                     	;# 
  6547  0E1D                     	;# 
  6548  0E1E                     	;# 
  6549  0E1F                     	;# 
  6550  0E20                     	;# 
  6551  0E21                     	;# 
  6552  0E22                     	;# 
  6553  0E23                     	;# 
  6554  0E24                     	;# 
  6555  0E25                     	;# 
  6556  0E26                     	;# 
  6557  0E27                     	;# 
  6558  0E28                     	;# 
  6559  0E29                     	;# 
  6560  0E2A                     	;# 
  6561  0E2B                     	;# 
  6562  0E2C                     	;# 
  6563  0E2D                     	;# 
  6564  0E2E                     	;# 
  6565  0E2F                     	;# 
  6566  0E30                     	;# 
  6567  0E31                     	;# 
  6568  0E32                     	;# 
  6569  0E33                     	;# 
  6570  0E34                     	;# 
  6571  0E35                     	;# 
  6572  0E36                     	;# 
  6573  0E37                     	;# 
  6574  0E8F                     	;# 
  6575  0E90                     	;# 
  6576  0E91                     	;# 
  6577  0E92                     	;# 
  6578  0E93                     	;# 
  6579  0E94                     	;# 
  6580  0E95                     	;# 
  6581  0E96                     	;# 
  6582  0E97                     	;# 
  6583  0E9C                     	;# 
  6584  0E9D                     	;# 
  6585  0E9E                     	;# 
  6586  0EA1                     	;# 
  6587  0EA2                     	;# 
  6588  0EA3                     	;# 
  6589  0EA4                     	;# 
  6590  0EA5                     	;# 
  6591  0EA9                     	;# 
  6592  0EAA                     	;# 
  6593  0EAB                     	;# 
  6594  0EAC                     	;# 
  6595  0EB1                     	;# 
  6596  0EB2                     	;# 
  6597  0EB3                     	;# 
  6598  0EB8                     	;# 
  6599  0EB9                     	;# 
  6600  0EBA                     	;# 
  6601  0EBB                     	;# 
  6602  0EBC                     	;# 
  6603  0EBD                     	;# 
  6604  0EBE                     	;# 
  6605  0EC3                     	;# 
  6606  0EC5                     	;# 
  6607  0EC6                     	;# 
  6608  0EC7                     	;# 
  6609  0EC8                     	;# 
  6610  0EC9                     	;# 
  6611  0ECA                     	;# 
  6612  0ECB                     	;# 
  6613  0ECC                     	;# 
  6614  0F10                     	;# 
  6615  0F11                     	;# 
  6616  0F12                     	;# 
  6617  0F13                     	;# 
  6618  0F14                     	;# 
  6619  0F15                     	;# 
  6620  0F16                     	;# 
  6621  0F17                     	;# 
  6622  0F18                     	;# 
  6623  0F19                     	;# 
  6624  0F1A                     	;# 
  6625  0F1B                     	;# 
  6626  0F1C                     	;# 
  6627  0F1D                     	;# 
  6628  0F1E                     	;# 
  6629  0F1F                     	;# 
  6630  0F20                     	;# 
  6631  0F21                     	;# 
  6632  0F22                     	;# 
  6633  0F23                     	;# 
  6634  0F24                     	;# 
  6635  0F25                     	;# 
  6636  0F26                     	;# 
  6637  0F27                     	;# 
  6638  0F28                     	;# 
  6639  0F29                     	;# 
  6640  0F2A                     	;# 
  6641  0F2B                     	;# 
  6642  0F2C                     	;# 
  6643  0F2D                     	;# 
  6644  0F2E                     	;# 
  6645  0F2F                     	;# 
  6646  0F30                     	;# 
  6647  0F31                     	;# 
  6648  0F32                     	;# 
  6649  0F38                     	;# 
  6650  0F39                     	;# 
  6651  0F3A                     	;# 
  6652  0F3B                     	;# 
  6653  0F3C                     	;# 
  6654  0F3D                     	;# 
  6655  0F3E                     	;# 
  6656  0F3F                     	;# 
  6657  0F40                     	;# 
  6658  0F41                     	;# 
  6659  0F43                     	;# 
  6660  0F44                     	;# 
  6661  0F45                     	;# 
  6662  0F46                     	;# 
  6663  0F47                     	;# 
  6664  0F48                     	;# 
  6665  0F49                     	;# 
  6666  0F4A                     	;# 
  6667  0F4B                     	;# 
  6668  0F4C                     	;# 
  6669  0F4E                     	;# 
  6670  0F4F                     	;# 
  6671  0F50                     	;# 
  6672  0F51                     	;# 
  6673  0F52                     	;# 
  6674  0F53                     	;# 
  6675  0F54                     	;# 
  6676  0F55                     	;# 
  6677  0F56                     	;# 
  6678  0F57                     	;# 
  6679  0F59                     	;# 
  6680  0F5A                     	;# 
  6681  0F5B                     	;# 
  6682  0F5C                     	;# 
  6683  0F5D                     	;# 
  6684  0F61                     	;# 
  6685  0F62                     	;# 
  6686  0F64                     	;# 
  6687  0F65                     	;# 
  6688  0F66                     	;# 
  6689  0F67                     	;# 
  6690  0F68                     	;# 
  6691  0F69                     	;# 
  6692  0F6A                     	;# 
  6693  0F6B                     	;# 
  6694  0F6C                     	;# 
  6695  0F6D                     	;# 
  6696  0FE4                     	;# 
  6697  0FE5                     	;# 
  6698  0FE6                     	;# 
  6699  0FE7                     	;# 
  6700  0FE8                     	;# 
  6701  0FE9                     	;# 
  6702  0FEA                     	;# 
  6703  0FEB                     	;# 
  6704  0FED                     	;# 
  6705  0FEE                     	;# 
  6706  0FEF                     	;# 
  6707  0000                     	;# 
  6708  0001                     	;# 
  6709  0002                     	;# 
  6710  0003                     	;# 
  6711  0004                     	;# 
  6712  0005                     	;# 
  6713  0006                     	;# 
  6714  0007                     	;# 
  6715  0008                     	;# 
  6716  0009                     	;# 
  6717  000A                     	;# 
  6718  000B                     	;# 
  6719  000C                     	;# 
  6720  000D                     	;# 
  6721  000E                     	;# 
  6722  000F                     	;# 
  6723  0010                     	;# 
  6724  0011                     	;# 
  6725  0012                     	;# 
  6726  0013                     	;# 
  6727  0014                     	;# 
  6728  0015                     	;# 
  6729  0016                     	;# 
  6730  0017                     	;# 
  6731  0018                     	;# 
  6732  0019                     	;# 
  6733  001A                     	;# 
  6734  001C                     	;# 
  6735  001C                     	;# 
  6736  001D                     	;# 
  6737  001D                     	;# 
  6738  001E                     	;# 
  6739  001F                     	;# 
  6740  008C                     	;# 
  6741  008C                     	;# 
  6742  008D                     	;# 
  6743  008E                     	;# 
  6744  008E                     	;# 
  6745  008F                     	;# 
  6746  0090                     	;# 
  6747  0090                     	;# 
  6748  0091                     	;# 
  6749  0093                     	;# 
  6750  0094                     	;# 
  6751  0095                     	;# 
  6752  0096                     	;# 
  6753  0097                     	;# 
  6754  0098                     	;# 
  6755  0099                     	;# 
  6756  009A                     	;# 
  6757  009B                     	;# 
  6758  009C                     	;# 
  6759  009D                     	;# 
  6760  009E                     	;# 
  6761  010C                     	;# 
  6762  010D                     	;# 
  6763  010E                     	;# 
  6764  010E                     	;# 
  6765  010F                     	;# 
  6766  0110                     	;# 
  6767  0110                     	;# 
  6768  0111                     	;# 
  6769  0112                     	;# 
  6770  0112                     	;# 
  6771  0113                     	;# 
  6772  0114                     	;# 
  6773  0114                     	;# 
  6774  0115                     	;# 
  6775  0116                     	;# 
  6776  0116                     	;# 
  6777  0117                     	;# 
  6778  0119                     	;# 
  6779  0119                     	;# 
  6780  0119                     	;# 
  6781  011A                     	;# 
  6782  011A                     	;# 
  6783  011A                     	;# 
  6784  011B                     	;# 
  6785  011B                     	;# 
  6786  011B                     	;# 
  6787  011B                     	;# 
  6788  011B                     	;# 
  6789  011C                     	;# 
  6790  011C                     	;# 
  6791  011C                     	;# 
  6792  011D                     	;# 
  6793  011D                     	;# 
  6794  011D                     	;# 
  6795  011E                     	;# 
  6796  011E                     	;# 
  6797  011E                     	;# 
  6798  011F                     	;# 
  6799  011F                     	;# 
  6800  011F                     	;# 
  6801  011F                     	;# 
  6802  011F                     	;# 
  6803  018C                     	;# 
  6804  018D                     	;# 
  6805  018E                     	;# 
  6806  018F                     	;# 
  6807  0190                     	;# 
  6808  0191                     	;# 
  6809  0192                     	;# 
  6810  0196                     	;# 
  6811  0197                     	;# 
  6812  0198                     	;# 
  6813  0199                     	;# 
  6814  019A                     	;# 
  6815  019B                     	;# 
  6816  019C                     	;# 
  6817  020C                     	;# 
  6818  020C                     	;# 
  6819  020D                     	;# 
  6820  020E                     	;# 
  6821  020F                     	;# 
  6822  020F                     	;# 
  6823  0210                     	;# 
  6824  0210                     	;# 
  6825  0211                     	;# 
  6826  0211                     	;# 
  6827  0212                     	;# 
  6828  0212                     	;# 
  6829  0213                     	;# 
  6830  0214                     	;# 
  6831  0215                     	;# 
  6832  0215                     	;# 
  6833  0216                     	;# 
  6834  0216                     	;# 
  6835  0217                     	;# 
  6836  0217                     	;# 
  6837  0218                     	;# 
  6838  0218                     	;# 
  6839  0219                     	;# 
  6840  021A                     	;# 
  6841  021B                     	;# 
  6842  021B                     	;# 
  6843  021C                     	;# 
  6844  021C                     	;# 
  6845  021D                     	;# 
  6846  021D                     	;# 
  6847  021E                     	;# 
  6848  021F                     	;# 
  6849  028C                     	;# 
  6850  028C                     	;# 
  6851  028D                     	;# 
  6852  028D                     	;# 
  6853  028E                     	;# 
  6854  028F                     	;# 
  6855  0290                     	;# 
  6856  0290                     	;# 
  6857  0291                     	;# 
  6858  0292                     	;# 
  6859  0292                     	;# 
  6860  0293                     	;# 
  6861  0293                     	;# 
  6862  0294                     	;# 
  6863  0295                     	;# 
  6864  0296                     	;# 
  6865  0296                     	;# 
  6866  0297                     	;# 
  6867  0298                     	;# 
  6868  0298                     	;# 
  6869  0299                     	;# 
  6870  0299                     	;# 
  6871  029A                     	;# 
  6872  029B                     	;# 
  6873  029C                     	;# 
  6874  029C                     	;# 
  6875  029D                     	;# 
  6876  030C                     	;# 
  6877  030C                     	;# 
  6878  030D                     	;# 
  6879  030E                     	;# 
  6880  030F                     	;# 
  6881  0310                     	;# 
  6882  0310                     	;# 
  6883  0311                     	;# 
  6884  0312                     	;# 
  6885  0313                     	;# 
  6886  0314                     	;# 
  6887  0314                     	;# 
  6888  0315                     	;# 
  6889  0316                     	;# 
  6890  0317                     	;# 
  6891  0318                     	;# 
  6892  0318                     	;# 
  6893  0319                     	;# 
  6894  031A                     	;# 
  6895  031B                     	;# 
  6896  031C                     	;# 
  6897  031C                     	;# 
  6898  031D                     	;# 
  6899  031E                     	;# 
  6900  031F                     	;# 
  6901  038C                     	;# 
  6902  038C                     	;# 
  6903  038D                     	;# 
  6904  038E                     	;# 
  6905  0390                     	;# 
  6906  0390                     	;# 
  6907  0391                     	;# 
  6908  0392                     	;# 
  6909  040C                     	;# 
  6910  040D                     	;# 
  6911  040E                     	;# 
  6912  040F                     	;# 
  6913  0410                     	;# 
  6914  0411                     	;# 
  6915  0416                     	;# 
  6916  0416                     	;# 
  6917  0417                     	;# 
  6918  0418                     	;# 
  6919  0418                     	;# 
  6920  0419                     	;# 
  6921  041A                     	;# 
  6922  041A                     	;# 
  6923  041B                     	;# 
  6924  041C                     	;# 
  6925  041C                     	;# 
  6926  041D                     	;# 
  6927  041E                     	;# 
  6928  041F                     	;# 
  6929  048C                     	;# 
  6930  048C                     	;# 
  6931  048D                     	;# 
  6932  048E                     	;# 
  6933  048F                     	;# 
  6934  048F                     	;# 
  6935  0490                     	;# 
  6936  0491                     	;# 
  6937  0492                     	;# 
  6938  0492                     	;# 
  6939  0493                     	;# 
  6940  0494                     	;# 
  6941  0495                     	;# 
  6942  0495                     	;# 
  6943  0496                     	;# 
  6944  0497                     	;# 
  6945  0498                     	;# 
  6946  0499                     	;# 
  6947  049A                     	;# 
  6948  049B                     	;# 
  6949  049C                     	;# 
  6950  049D                     	;# 
  6951  050C                     	;# 
  6952  050C                     	;# 
  6953  050D                     	;# 
  6954  050E                     	;# 
  6955  050F                     	;# 
  6956  050F                     	;# 
  6957  0510                     	;# 
  6958  0511                     	;# 
  6959  0512                     	;# 
  6960  0512                     	;# 
  6961  0513                     	;# 
  6962  0514                     	;# 
  6963  0515                     	;# 
  6964  0515                     	;# 
  6965  0516                     	;# 
  6966  0517                     	;# 
  6967  0518                     	;# 
  6968  0519                     	;# 
  6969  051A                     	;# 
  6970  051B                     	;# 
  6971  051C                     	;# 
  6972  051D                     	;# 
  6973  058C                     	;# 
  6974  058C                     	;# 
  6975  058D                     	;# 
  6976  058E                     	;# 
  6977  058F                     	;# 
  6978  058F                     	;# 
  6979  0590                     	;# 
  6980  0591                     	;# 
  6981  0592                     	;# 
  6982  0593                     	;# 
  6983  060C                     	;# 
  6984  060D                     	;# 
  6985  060E                     	;# 
  6986  060F                     	;# 
  6987  0610                     	;# 
  6988  0611                     	;# 
  6989  0612                     	;# 
  6990  0613                     	;# 
  6991  0614                     	;# 
  6992  0616                     	;# 
  6993  0617                     	;# 
  6994  0618                     	;# 
  6995  0619                     	;# 
  6996  061A                     	;# 
  6997  061B                     	;# 
  6998  061C                     	;# 
  6999  061D                     	;# 
  7000  061E                     	;# 
  7001  068C                     	;# 
  7002  068D                     	;# 
  7003  068E                     	;# 
  7004  068F                     	;# 
  7005  0690                     	;# 
  7006  0691                     	;# 
  7007  0692                     	;# 
  7008  0693                     	;# 
  7009  0694                     	;# 
  7010  070C                     	;# 
  7011  070D                     	;# 
  7012  070E                     	;# 
  7013  070F                     	;# 
  7014  0710                     	;# 
  7015  0711                     	;# 
  7016  0712                     	;# 
  7017  0713                     	;# 
  7018  0714                     	;# 
  7019  0716                     	;# 
  7020  0717                     	;# 
  7021  0718                     	;# 
  7022  0719                     	;# 
  7023  071A                     	;# 
  7024  071B                     	;# 
  7025  071C                     	;# 
  7026  071D                     	;# 
  7027  071E                     	;# 
  7028  0796                     	;# 
  7029  0797                     	;# 
  7030  0798                     	;# 
  7031  0799                     	;# 
  7032  079A                     	;# 
  7033  079B                     	;# 
  7034  080C                     	;# 
  7035  080D                     	;# 
  7036  080E                     	;# 
  7037  080F                     	;# 
  7038  0810                     	;# 
  7039  0811                     	;# 
  7040  0812                     	;# 
  7041  0813                     	;# 
  7042  0814                     	;# 
  7043  081A                     	;# 
  7044  081B                     	;# 
  7045  081C                     	;# 
  7046  081D                     	;# 
  7047  081E                     	;# 
  7048  081F                     	;# 
  7049  088C                     	;# 
  7050  088D                     	;# 
  7051  088E                     	;# 
  7052  088F                     	;# 
  7053  0890                     	;# 
  7054  0891                     	;# 
  7055  0892                     	;# 
  7056  0893                     	;# 
  7057  0895                     	;# 
  7058  0896                     	;# 
  7059  0897                     	;# 
  7060  0898                     	;# 
  7061  0899                     	;# 
  7062  089A                     	;# 
  7063  089B                     	;# 
  7064  090C                     	;# 
  7065  090E                     	;# 
  7066  090F                     	;# 
  7067  091F                     	;# 
  7068  091F                     	;# 
  7069  098F                     	;# 
  7070  098F                     	;# 
  7071  0990                     	;# 
  7072  0991                     	;# 
  7073  0992                     	;# 
  7074  0993                     	;# 
  7075  0994                     	;# 
  7076  0995                     	;# 
  7077  0996                     	;# 
  7078  0997                     	;# 
  7079  0E0F                     	;# 
  7080  0E10                     	;# 
  7081  0E11                     	;# 
  7082  0E12                     	;# 
  7083  0E13                     	;# 
  7084  0E14                     	;# 
  7085  0E15                     	;# 
  7086  0E16                     	;# 
  7087  0E17                     	;# 
  7088  0E18                     	;# 
  7089  0E19                     	;# 
  7090  0E1A                     	;# 
  7091  0E1B                     	;# 
  7092  0E1C                     	;# 
  7093  0E1D                     	;# 
  7094  0E1E                     	;# 
  7095  0E1F                     	;# 
  7096  0E20                     	;# 
  7097  0E21                     	;# 
  7098  0E22                     	;# 
  7099  0E23                     	;# 
  7100  0E24                     	;# 
  7101  0E25                     	;# 
  7102  0E26                     	;# 
  7103  0E27                     	;# 
  7104  0E28                     	;# 
  7105  0E29                     	;# 
  7106  0E2A                     	;# 
  7107  0E2B                     	;# 
  7108  0E2C                     	;# 
  7109  0E2D                     	;# 
  7110  0E2E                     	;# 
  7111  0E2F                     	;# 
  7112  0E30                     	;# 
  7113  0E31                     	;# 
  7114  0E32                     	;# 
  7115  0E33                     	;# 
  7116  0E34                     	;# 
  7117  0E35                     	;# 
  7118  0E36                     	;# 
  7119  0E37                     	;# 
  7120  0E8F                     	;# 
  7121  0E90                     	;# 
  7122  0E91                     	;# 
  7123  0E92                     	;# 
  7124  0E93                     	;# 
  7125  0E94                     	;# 
  7126  0E95                     	;# 
  7127  0E96                     	;# 
  7128  0E97                     	;# 
  7129  0E9C                     	;# 
  7130  0E9D                     	;# 
  7131  0E9E                     	;# 
  7132  0EA1                     	;# 
  7133  0EA2                     	;# 
  7134  0EA3                     	;# 
  7135  0EA4                     	;# 
  7136  0EA5                     	;# 
  7137  0EA9                     	;# 
  7138  0EAA                     	;# 
  7139  0EAB                     	;# 
  7140  0EAC                     	;# 
  7141  0EB1                     	;# 
  7142  0EB2                     	;# 
  7143  0EB3                     	;# 
  7144  0EB8                     	;# 
  7145  0EB9                     	;# 
  7146  0EBA                     	;# 
  7147  0EBB                     	;# 
  7148  0EBC                     	;# 
  7149  0EBD                     	;# 
  7150  0EBE                     	;# 
  7151  0EC3                     	;# 
  7152  0EC5                     	;# 
  7153  0EC6                     	;# 
  7154  0EC7                     	;# 
  7155  0EC8                     	;# 
  7156  0EC9                     	;# 
  7157  0ECA                     	;# 
  7158  0ECB                     	;# 
  7159  0ECC                     	;# 
  7160  0F10                     	;# 
  7161  0F11                     	;# 
  7162  0F12                     	;# 
  7163  0F13                     	;# 
  7164  0F14                     	;# 
  7165  0F15                     	;# 
  7166  0F16                     	;# 
  7167  0F17                     	;# 
  7168  0F18                     	;# 
  7169  0F19                     	;# 
  7170  0F1A                     	;# 
  7171  0F1B                     	;# 
  7172  0F1C                     	;# 
  7173  0F1D                     	;# 
  7174  0F1E                     	;# 
  7175  0F1F                     	;# 
  7176  0F20                     	;# 
  7177  0F21                     	;# 
  7178  0F22                     	;# 
  7179  0F23                     	;# 
  7180  0F24                     	;# 
  7181  0F25                     	;# 
  7182  0F26                     	;# 
  7183  0F27                     	;# 
  7184  0F28                     	;# 
  7185  0F29                     	;# 
  7186  0F2A                     	;# 
  7187  0F2B                     	;# 
  7188  0F2C                     	;# 
  7189  0F2D                     	;# 
  7190  0F2E                     	;# 
  7191  0F2F                     	;# 
  7192  0F30                     	;# 
  7193  0F31                     	;# 
  7194  0F32                     	;# 
  7195  0F38                     	;# 
  7196  0F39                     	;# 
  7197  0F3A                     	;# 
  7198  0F3B                     	;# 
  7199  0F3C                     	;# 
  7200  0F3D                     	;# 
  7201  0F3E                     	;# 
  7202  0F3F                     	;# 
  7203  0F40                     	;# 
  7204  0F41                     	;# 
  7205  0F43                     	;# 
  7206  0F44                     	;# 
  7207  0F45                     	;# 
  7208  0F46                     	;# 
  7209  0F47                     	;# 
  7210  0F48                     	;# 
  7211  0F49                     	;# 
  7212  0F4A                     	;# 
  7213  0F4B                     	;# 
  7214  0F4C                     	;# 
  7215  0F4E                     	;# 
  7216  0F4F                     	;# 
  7217  0F50                     	;# 
  7218  0F51                     	;# 
  7219  0F52                     	;# 
  7220  0F53                     	;# 
  7221  0F54                     	;# 
  7222  0F55                     	;# 
  7223  0F56                     	;# 
  7224  0F57                     	;# 
  7225  0F59                     	;# 
  7226  0F5A                     	;# 
  7227  0F5B                     	;# 
  7228  0F5C                     	;# 
  7229  0F5D                     	;# 
  7230  0F61                     	;# 
  7231  0F62                     	;# 
  7232  0F64                     	;# 
  7233  0F65                     	;# 
  7234  0F66                     	;# 
  7235  0F67                     	;# 
  7236  0F68                     	;# 
  7237  0F69                     	;# 
  7238  0F6A                     	;# 
  7239  0F6B                     	;# 
  7240  0F6C                     	;# 
  7241  0F6D                     	;# 
  7242  0FE4                     	;# 
  7243  0FE5                     	;# 
  7244  0FE6                     	;# 
  7245  0FE7                     	;# 
  7246  0FE8                     	;# 
  7247  0FE9                     	;# 
  7248  0FEA                     	;# 
  7249  0FEB                     	;# 
  7250  0FED                     	;# 
  7251  0FEE                     	;# 
  7252  0FEF                     	;# 
  7253  0000                     	;# 
  7254  0001                     	;# 
  7255  0002                     	;# 
  7256  0003                     	;# 
  7257  0004                     	;# 
  7258  0005                     	;# 
  7259  0006                     	;# 
  7260  0007                     	;# 
  7261  0008                     	;# 
  7262  0009                     	;# 
  7263  000A                     	;# 
  7264  000B                     	;# 
  7265  000C                     	;# 
  7266  000D                     	;# 
  7267  000E                     	;# 
  7268  000F                     	;# 
  7269  0010                     	;# 
  7270  0011                     	;# 
  7271  0012                     	;# 
  7272  0013                     	;# 
  7273  0014                     	;# 
  7274  0015                     	;# 
  7275  0016                     	;# 
  7276  0017                     	;# 
  7277  0018                     	;# 
  7278  0019                     	;# 
  7279  001A                     	;# 
  7280  001C                     	;# 
  7281  001C                     	;# 
  7282  001D                     	;# 
  7283  001D                     	;# 
  7284  001E                     	;# 
  7285  001F                     	;# 
  7286  008C                     	;# 
  7287  008C                     	;# 
  7288  008D                     	;# 
  7289  008E                     	;# 
  7290  008E                     	;# 
  7291  008F                     	;# 
  7292  0090                     	;# 
  7293  0090                     	;# 
  7294  0091                     	;# 
  7295  0093                     	;# 
  7296  0094                     	;# 
  7297  0095                     	;# 
  7298  0096                     	;# 
  7299  0097                     	;# 
  7300  0098                     	;# 
  7301  0099                     	;# 
  7302  009A                     	;# 
  7303  009B                     	;# 
  7304  009C                     	;# 
  7305  009D                     	;# 
  7306  009E                     	;# 
  7307  010C                     	;# 
  7308  010D                     	;# 
  7309  010E                     	;# 
  7310  010E                     	;# 
  7311  010F                     	;# 
  7312  0110                     	;# 
  7313  0110                     	;# 
  7314  0111                     	;# 
  7315  0112                     	;# 
  7316  0112                     	;# 
  7317  0113                     	;# 
  7318  0114                     	;# 
  7319  0114                     	;# 
  7320  0115                     	;# 
  7321  0116                     	;# 
  7322  0116                     	;# 
  7323  0117                     	;# 
  7324  0119                     	;# 
  7325  0119                     	;# 
  7326  0119                     	;# 
  7327  011A                     	;# 
  7328  011A                     	;# 
  7329  011A                     	;# 
  7330  011B                     	;# 
  7331  011B                     	;# 
  7332  011B                     	;# 
  7333  011B                     	;# 
  7334  011B                     	;# 
  7335  011C                     	;# 
  7336  011C                     	;# 
  7337  011C                     	;# 
  7338  011D                     	;# 
  7339  011D                     	;# 
  7340  011D                     	;# 
  7341  011E                     	;# 
  7342  011E                     	;# 
  7343  011E                     	;# 
  7344  011F                     	;# 
  7345  011F                     	;# 
  7346  011F                     	;# 
  7347  011F                     	;# 
  7348  011F                     	;# 
  7349  018C                     	;# 
  7350  018D                     	;# 
  7351  018E                     	;# 
  7352  018F                     	;# 
  7353  0190                     	;# 
  7354  0191                     	;# 
  7355  0192                     	;# 
  7356  0196                     	;# 
  7357  0197                     	;# 
  7358  0198                     	;# 
  7359  0199                     	;# 
  7360  019A                     	;# 
  7361  019B                     	;# 
  7362  019C                     	;# 
  7363  020C                     	;# 
  7364  020C                     	;# 
  7365  020D                     	;# 
  7366  020E                     	;# 
  7367  020F                     	;# 
  7368  020F                     	;# 
  7369  0210                     	;# 
  7370  0210                     	;# 
  7371  0211                     	;# 
  7372  0211                     	;# 
  7373  0212                     	;# 
  7374  0212                     	;# 
  7375  0213                     	;# 
  7376  0214                     	;# 
  7377  0215                     	;# 
  7378  0215                     	;# 
  7379  0216                     	;# 
  7380  0216                     	;# 
  7381  0217                     	;# 
  7382  0217                     	;# 
  7383  0218                     	;# 
  7384  0218                     	;# 
  7385  0219                     	;# 
  7386  021A                     	;# 
  7387  021B                     	;# 
  7388  021B                     	;# 
  7389  021C                     	;# 
  7390  021C                     	;# 
  7391  021D                     	;# 
  7392  021D                     	;# 
  7393  021E                     	;# 
  7394  021F                     	;# 
  7395  028C                     	;# 
  7396  028C                     	;# 
  7397  028D                     	;# 
  7398  028D                     	;# 
  7399  028E                     	;# 
  7400  028F                     	;# 
  7401  0290                     	;# 
  7402  0290                     	;# 
  7403  0291                     	;# 
  7404  0292                     	;# 
  7405  0292                     	;# 
  7406  0293                     	;# 
  7407  0293                     	;# 
  7408  0294                     	;# 
  7409  0295                     	;# 
  7410  0296                     	;# 
  7411  0296                     	;# 
  7412  0297                     	;# 
  7413  0298                     	;# 
  7414  0298                     	;# 
  7415  0299                     	;# 
  7416  0299                     	;# 
  7417  029A                     	;# 
  7418  029B                     	;# 
  7419  029C                     	;# 
  7420  029C                     	;# 
  7421  029D                     	;# 
  7422  030C                     	;# 
  7423  030C                     	;# 
  7424  030D                     	;# 
  7425  030E                     	;# 
  7426  030F                     	;# 
  7427  0310                     	;# 
  7428  0310                     	;# 
  7429  0311                     	;# 
  7430  0312                     	;# 
  7431  0313                     	;# 
  7432  0314                     	;# 
  7433  0314                     	;# 
  7434  0315                     	;# 
  7435  0316                     	;# 
  7436  0317                     	;# 
  7437  0318                     	;# 
  7438  0318                     	;# 
  7439  0319                     	;# 
  7440  031A                     	;# 
  7441  031B                     	;# 
  7442  031C                     	;# 
  7443  031C                     	;# 
  7444  031D                     	;# 
  7445  031E                     	;# 
  7446  031F                     	;# 
  7447  038C                     	;# 
  7448  038C                     	;# 
  7449  038D                     	;# 
  7450  038E                     	;# 
  7451  0390                     	;# 
  7452  0390                     	;# 
  7453  0391                     	;# 
  7454  0392                     	;# 
  7455  040C                     	;# 
  7456  040D                     	;# 
  7457  040E                     	;# 
  7458  040F                     	;# 
  7459  0410                     	;# 
  7460  0411                     	;# 
  7461  0416                     	;# 
  7462  0416                     	;# 
  7463  0417                     	;# 
  7464  0418                     	;# 
  7465  0418                     	;# 
  7466  0419                     	;# 
  7467  041A                     	;# 
  7468  041A                     	;# 
  7469  041B                     	;# 
  7470  041C                     	;# 
  7471  041C                     	;# 
  7472  041D                     	;# 
  7473  041E                     	;# 
  7474  041F                     	;# 
  7475  048C                     	;# 
  7476  048C                     	;# 
  7477  048D                     	;# 
  7478  048E                     	;# 
  7479  048F                     	;# 
  7480  048F                     	;# 
  7481  0490                     	;# 
  7482  0491                     	;# 
  7483  0492                     	;# 
  7484  0492                     	;# 
  7485  0493                     	;# 
  7486  0494                     	;# 
  7487  0495                     	;# 
  7488  0495                     	;# 
  7489  0496                     	;# 
  7490  0497                     	;# 
  7491  0498                     	;# 
  7492  0499                     	;# 
  7493  049A                     	;# 
  7494  049B                     	;# 
  7495  049C                     	;# 
  7496  049D                     	;# 
  7497  050C                     	;# 
  7498  050C                     	;# 
  7499  050D                     	;# 
  7500  050E                     	;# 
  7501  050F                     	;# 
  7502  050F                     	;# 
  7503  0510                     	;# 
  7504  0511                     	;# 
  7505  0512                     	;# 
  7506  0512                     	;# 
  7507  0513                     	;# 
  7508  0514                     	;# 
  7509  0515                     	;# 
  7510  0515                     	;# 
  7511  0516                     	;# 
  7512  0517                     	;# 
  7513  0518                     	;# 
  7514  0519                     	;# 
  7515  051A                     	;# 
  7516  051B                     	;# 
  7517  051C                     	;# 
  7518  051D                     	;# 
  7519  058C                     	;# 
  7520  058C                     	;# 
  7521  058D                     	;# 
  7522  058E                     	;# 
  7523  058F                     	;# 
  7524  058F                     	;# 
  7525  0590                     	;# 
  7526  0591                     	;# 
  7527  0592                     	;# 
  7528  0593                     	;# 
  7529  060C                     	;# 
  7530  060D                     	;# 
  7531  060E                     	;# 
  7532  060F                     	;# 
  7533  0610                     	;# 
  7534  0611                     	;# 
  7535  0612                     	;# 
  7536  0613                     	;# 
  7537  0614                     	;# 
  7538  0616                     	;# 
  7539  0617                     	;# 
  7540  0618                     	;# 
  7541  0619                     	;# 
  7542  061A                     	;# 
  7543  061B                     	;# 
  7544  061C                     	;# 
  7545  061D                     	;# 
  7546  061E                     	;# 
  7547  068C                     	;# 
  7548  068D                     	;# 
  7549  068E                     	;# 
  7550  068F                     	;# 
  7551  0690                     	;# 
  7552  0691                     	;# 
  7553  0692                     	;# 
  7554  0693                     	;# 
  7555  0694                     	;# 
  7556  070C                     	;# 
  7557  070D                     	;# 
  7558  070E                     	;# 
  7559  070F                     	;# 
  7560  0710                     	;# 
  7561  0711                     	;# 
  7562  0712                     	;# 
  7563  0713                     	;# 
  7564  0714                     	;# 
  7565  0716                     	;# 
  7566  0717                     	;# 
  7567  0718                     	;# 
  7568  0719                     	;# 
  7569  071A                     	;# 
  7570  071B                     	;# 
  7571  071C                     	;# 
  7572  071D                     	;# 
  7573  071E                     	;# 
  7574  0796                     	;# 
  7575  0797                     	;# 
  7576  0798                     	;# 
  7577  0799                     	;# 
  7578  079A                     	;# 
  7579  079B                     	;# 
  7580  080C                     	;# 
  7581  080D                     	;# 
  7582  080E                     	;# 
  7583  080F                     	;# 
  7584  0810                     	;# 
  7585  0811                     	;# 
  7586  0812                     	;# 
  7587  0813                     	;# 
  7588  0814                     	;# 
  7589  081A                     	;# 
  7590  081B                     	;# 
  7591  081C                     	;# 
  7592  081D                     	;# 
  7593  081E                     	;# 
  7594  081F                     	;# 
  7595  088C                     	;# 
  7596  088D                     	;# 
  7597  088E                     	;# 
  7598  088F                     	;# 
  7599  0890                     	;# 
  7600  0891                     	;# 
  7601  0892                     	;# 
  7602  0893                     	;# 
  7603  0895                     	;# 
  7604  0896                     	;# 
  7605  0897                     	;# 
  7606  0898                     	;# 
  7607  0899                     	;# 
  7608  089A                     	;# 
  7609  089B                     	;# 
  7610  090C                     	;# 
  7611  090E                     	;# 
  7612  090F                     	;# 
  7613  091F                     	;# 
  7614  091F                     	;# 
  7615  098F                     	;# 
  7616  098F                     	;# 
  7617  0990                     	;# 
  7618  0991                     	;# 
  7619  0992                     	;# 
  7620  0993                     	;# 
  7621  0994                     	;# 
  7622  0995                     	;# 
  7623  0996                     	;# 
  7624  0997                     	;# 
  7625  0E0F                     	;# 
  7626  0E10                     	;# 
  7627  0E11                     	;# 
  7628  0E12                     	;# 
  7629  0E13                     	;# 
  7630  0E14                     	;# 
  7631  0E15                     	;# 
  7632  0E16                     	;# 
  7633  0E17                     	;# 
  7634  0E18                     	;# 
  7635  0E19                     	;# 
  7636  0E1A                     	;# 
  7637  0E1B                     	;# 
  7638  0E1C                     	;# 
  7639  0E1D                     	;# 
  7640  0E1E                     	;# 
  7641  0E1F                     	;# 
  7642  0E20                     	;# 
  7643  0E21                     	;# 
  7644  0E22                     	;# 
  7645  0E23                     	;# 
  7646  0E24                     	;# 
  7647  0E25                     	;# 
  7648  0E26                     	;# 
  7649  0E27                     	;# 
  7650  0E28                     	;# 
  7651  0E29                     	;# 
  7652  0E2A                     	;# 
  7653  0E2B                     	;# 
  7654  0E2C                     	;# 
  7655  0E2D                     	;# 
  7656  0E2E                     	;# 
  7657  0E2F                     	;# 
  7658  0E30                     	;# 
  7659  0E31                     	;# 
  7660  0E32                     	;# 
  7661  0E33                     	;# 
  7662  0E34                     	;# 
  7663  0E35                     	;# 
  7664  0E36                     	;# 
  7665  0E37                     	;# 
  7666  0E8F                     	;# 
  7667  0E90                     	;# 
  7668  0E91                     	;# 
  7669  0E92                     	;# 
  7670  0E93                     	;# 
  7671  0E94                     	;# 
  7672  0E95                     	;# 
  7673  0E96                     	;# 
  7674  0E97                     	;# 
  7675  0E9C                     	;# 
  7676  0E9D                     	;# 
  7677  0E9E                     	;# 
  7678  0EA1                     	;# 
  7679  0EA2                     	;# 
  7680  0EA3                     	;# 
  7681  0EA4                     	;# 
  7682  0EA5                     	;# 
  7683  0EA9                     	;# 
  7684  0EAA                     	;# 
  7685  0EAB                     	;# 
  7686  0EAC                     	;# 
  7687  0EB1                     	;# 
  7688  0EB2                     	;# 
  7689  0EB3                     	;# 
  7690  0EB8                     	;# 
  7691  0EB9                     	;# 
  7692  0EBA                     	;# 
  7693  0EBB                     	;# 
  7694  0EBC                     	;# 
  7695  0EBD                     	;# 
  7696  0EBE                     	;# 
  7697  0EC3                     	;# 
  7698  0EC5                     	;# 
  7699  0EC6                     	;# 
  7700  0EC7                     	;# 
  7701  0EC8                     	;# 
  7702  0EC9                     	;# 
  7703  0ECA                     	;# 
  7704  0ECB                     	;# 
  7705  0ECC                     	;# 
  7706  0F10                     	;# 
  7707  0F11                     	;# 
  7708  0F12                     	;# 
  7709  0F13                     	;# 
  7710  0F14                     	;# 
  7711  0F15                     	;# 
  7712  0F16                     	;# 
  7713  0F17                     	;# 
  7714  0F18                     	;# 
  7715  0F19                     	;# 
  7716  0F1A                     	;# 
  7717  0F1B                     	;# 
  7718  0F1C                     	;# 
  7719  0F1D                     	;# 
  7720  0F1E                     	;# 
  7721  0F1F                     	;# 
  7722  0F20                     	;# 
  7723  0F21                     	;# 
  7724  0F22                     	;# 
  7725  0F23                     	;# 
  7726  0F24                     	;# 
  7727  0F25                     	;# 
  7728  0F26                     	;# 
  7729  0F27                     	;# 
  7730  0F28                     	;# 
  7731  0F29                     	;# 
  7732  0F2A                     	;# 
  7733  0F2B                     	;# 
  7734  0F2C                     	;# 
  7735  0F2D                     	;# 
  7736  0F2E                     	;# 
  7737  0F2F                     	;# 
  7738  0F30                     	;# 
  7739  0F31                     	;# 
  7740  0F32                     	;# 
  7741  0F38                     	;# 
  7742  0F39                     	;# 
  7743  0F3A                     	;# 
  7744  0F3B                     	;# 
  7745  0F3C                     	;# 
  7746  0F3D                     	;# 
  7747  0F3E                     	;# 
  7748  0F3F                     	;# 
  7749  0F40                     	;# 
  7750  0F41                     	;# 
  7751  0F43                     	;# 
  7752  0F44                     	;# 
  7753  0F45                     	;# 
  7754  0F46                     	;# 
  7755  0F47                     	;# 
  7756  0F48                     	;# 
  7757  0F49                     	;# 
  7758  0F4A                     	;# 
  7759  0F4B                     	;# 
  7760  0F4C                     	;# 
  7761  0F4E                     	;# 
  7762  0F4F                     	;# 
  7763  0F50                     	;# 
  7764  0F51                     	;# 
  7765  0F52                     	;# 
  7766  0F53                     	;# 
  7767  0F54                     	;# 
  7768  0F55                     	;# 
  7769  0F56                     	;# 
  7770  0F57                     	;# 
  7771  0F59                     	;# 
  7772  0F5A                     	;# 
  7773  0F5B                     	;# 
  7774  0F5C                     	;# 
  7775  0F5D                     	;# 
  7776  0F61                     	;# 
  7777  0F62                     	;# 
  7778  0F64                     	;# 
  7779  0F65                     	;# 
  7780  0F66                     	;# 
  7781  0F67                     	;# 
  7782  0F68                     	;# 
  7783  0F69                     	;# 
  7784  0F6A                     	;# 
  7785  0F6B                     	;# 
  7786  0F6C                     	;# 
  7787  0F6D                     	;# 
  7788  0FE4                     	;# 
  7789  0FE5                     	;# 
  7790  0FE6                     	;# 
  7791  0FE7                     	;# 
  7792  0FE8                     	;# 
  7793  0FE9                     	;# 
  7794  0FEA                     	;# 
  7795  0FEB                     	;# 
  7796  0FED                     	;# 
  7797  0FEE                     	;# 
  7798  0FEF                     	;# 
  7799  0000                     	;# 
  7800  0001                     	;# 
  7801  0002                     	;# 
  7802  0003                     	;# 
  7803  0004                     	;# 
  7804  0005                     	;# 
  7805  0006                     	;# 
  7806  0007                     	;# 
  7807  0008                     	;# 
  7808  0009                     	;# 
  7809  000A                     	;# 
  7810  000B                     	;# 
  7811  000C                     	;# 
  7812  000D                     	;# 
  7813  000E                     	;# 
  7814  000F                     	;# 
  7815  0010                     	;# 
  7816  0011                     	;# 
  7817  0012                     	;# 
  7818  0013                     	;# 
  7819  0014                     	;# 
  7820  0015                     	;# 
  7821  0016                     	;# 
  7822  0017                     	;# 
  7823  0018                     	;# 
  7824  0019                     	;# 
  7825  001A                     	;# 
  7826  001C                     	;# 
  7827  001C                     	;# 
  7828  001D                     	;# 
  7829  001D                     	;# 
  7830  001E                     	;# 
  7831  001F                     	;# 
  7832  008C                     	;# 
  7833  008C                     	;# 
  7834  008D                     	;# 
  7835  008E                     	;# 
  7836  008E                     	;# 
  7837  008F                     	;# 
  7838  0090                     	;# 
  7839  0090                     	;# 
  7840  0091                     	;# 
  7841  0093                     	;# 
  7842  0094                     	;# 
  7843  0095                     	;# 
  7844  0096                     	;# 
  7845  0097                     	;# 
  7846  0098                     	;# 
  7847  0099                     	;# 
  7848  009A                     	;# 
  7849  009B                     	;# 
  7850  009C                     	;# 
  7851  009D                     	;# 
  7852  009E                     	;# 
  7853  010C                     	;# 
  7854  010D                     	;# 
  7855  010E                     	;# 
  7856  010E                     	;# 
  7857  010F                     	;# 
  7858  0110                     	;# 
  7859  0110                     	;# 
  7860  0111                     	;# 
  7861  0112                     	;# 
  7862  0112                     	;# 
  7863  0113                     	;# 
  7864  0114                     	;# 
  7865  0114                     	;# 
  7866  0115                     	;# 
  7867  0116                     	;# 
  7868  0116                     	;# 
  7869  0117                     	;# 
  7870  0119                     	;# 
  7871  0119                     	;# 
  7872  0119                     	;# 
  7873  011A                     	;# 
  7874  011A                     	;# 
  7875  011A                     	;# 
  7876  011B                     	;# 
  7877  011B                     	;# 
  7878  011B                     	;# 
  7879  011B                     	;# 
  7880  011B                     	;# 
  7881  011C                     	;# 
  7882  011C                     	;# 
  7883  011C                     	;# 
  7884  011D                     	;# 
  7885  011D                     	;# 
  7886  011D                     	;# 
  7887  011E                     	;# 
  7888  011E                     	;# 
  7889  011E                     	;# 
  7890  011F                     	;# 
  7891  011F                     	;# 
  7892  011F                     	;# 
  7893  011F                     	;# 
  7894  011F                     	;# 
  7895  018C                     	;# 
  7896  018D                     	;# 
  7897  018E                     	;# 
  7898  018F                     	;# 
  7899  0190                     	;# 
  7900  0191                     	;# 
  7901  0192                     	;# 
  7902  0196                     	;# 
  7903  0197                     	;# 
  7904  0198                     	;# 
  7905  0199                     	;# 
  7906  019A                     	;# 
  7907  019B                     	;# 
  7908  019C                     	;# 
  7909  020C                     	;# 
  7910  020C                     	;# 
  7911  020D                     	;# 
  7912  020E                     	;# 
  7913  020F                     	;# 
  7914  020F                     	;# 
  7915  0210                     	;# 
  7916  0210                     	;# 
  7917  0211                     	;# 
  7918  0211                     	;# 
  7919  0212                     	;# 
  7920  0212                     	;# 
  7921  0213                     	;# 
  7922  0214                     	;# 
  7923  0215                     	;# 
  7924  0215                     	;# 
  7925  0216                     	;# 
  7926  0216                     	;# 
  7927  0217                     	;# 
  7928  0217                     	;# 
  7929  0218                     	;# 
  7930  0218                     	;# 
  7931  0219                     	;# 
  7932  021A                     	;# 
  7933  021B                     	;# 
  7934  021B                     	;# 
  7935  021C                     	;# 
  7936  021C                     	;# 
  7937  021D                     	;# 
  7938  021D                     	;# 
  7939  021E                     	;# 
  7940  021F                     	;# 
  7941  028C                     	;# 
  7942  028C                     	;# 
  7943  028D                     	;# 
  7944  028D                     	;# 
  7945  028E                     	;# 
  7946  028F                     	;# 
  7947  0290                     	;# 
  7948  0290                     	;# 
  7949  0291                     	;# 
  7950  0292                     	;# 
  7951  0292                     	;# 
  7952  0293                     	;# 
  7953  0293                     	;# 
  7954  0294                     	;# 
  7955  0295                     	;# 
  7956  0296                     	;# 
  7957  0296                     	;# 
  7958  0297                     	;# 
  7959  0298                     	;# 
  7960  0298                     	;# 
  7961  0299                     	;# 
  7962  0299                     	;# 
  7963  029A                     	;# 
  7964  029B                     	;# 
  7965  029C                     	;# 
  7966  029C                     	;# 
  7967  029D                     	;# 
  7968  030C                     	;# 
  7969  030C                     	;# 
  7970  030D                     	;# 
  7971  030E                     	;# 
  7972  030F                     	;# 
  7973  0310                     	;# 
  7974  0310                     	;# 
  7975  0311                     	;# 
  7976  0312                     	;# 
  7977  0313                     	;# 
  7978  0314                     	;# 
  7979  0314                     	;# 
  7980  0315                     	;# 
  7981  0316                     	;# 
  7982  0317                     	;# 
  7983  0318                     	;# 
  7984  0318                     	;# 
  7985  0319                     	;# 
  7986  031A                     	;# 
  7987  031B                     	;# 
  7988  031C                     	;# 
  7989  031C                     	;# 
  7990  031D                     	;# 
  7991  031E                     	;# 
  7992  031F                     	;# 
  7993  038C                     	;# 
  7994  038C                     	;# 
  7995  038D                     	;# 
  7996  038E                     	;# 
  7997  0390                     	;# 
  7998  0390                     	;# 
  7999  0391                     	;# 
  8000  0392                     	;# 
  8001  040C                     	;# 
  8002  040D                     	;# 
  8003  040E                     	;# 
  8004  040F                     	;# 
  8005  0410                     	;# 
  8006  0411                     	;# 
  8007  0416                     	;# 
  8008  0416                     	;# 
  8009  0417                     	;# 
  8010  0418                     	;# 
  8011  0418                     	;# 
  8012  0419                     	;# 
  8013  041A                     	;# 
  8014  041A                     	;# 
  8015  041B                     	;# 
  8016  041C                     	;# 
  8017  041C                     	;# 
  8018  041D                     	;# 
  8019  041E                     	;# 
  8020  041F                     	;# 
  8021  048C                     	;# 
  8022  048C                     	;# 
  8023  048D                     	;# 
  8024  048E                     	;# 
  8025  048F                     	;# 
  8026  048F                     	;# 
  8027  0490                     	;# 
  8028  0491                     	;# 
  8029  0492                     	;# 
  8030  0492                     	;# 
  8031  0493                     	;# 
  8032  0494                     	;# 
  8033  0495                     	;# 
  8034  0495                     	;# 
  8035  0496                     	;# 
  8036  0497                     	;# 
  8037  0498                     	;# 
  8038  0499                     	;# 
  8039  049A                     	;# 
  8040  049B                     	;# 
  8041  049C                     	;# 
  8042  049D                     	;# 
  8043  050C                     	;# 
  8044  050C                     	;# 
  8045  050D                     	;# 
  8046  050E                     	;# 
  8047  050F                     	;# 
  8048  050F                     	;# 
  8049  0510                     	;# 
  8050  0511                     	;# 
  8051  0512                     	;# 
  8052  0512                     	;# 
  8053  0513                     	;# 
  8054  0514                     	;# 
  8055  0515                     	;# 
  8056  0515                     	;# 
  8057  0516                     	;# 
  8058  0517                     	;# 
  8059  0518                     	;# 
  8060  0519                     	;# 
  8061  051A                     	;# 
  8062  051B                     	;# 
  8063  051C                     	;# 
  8064  051D                     	;# 
  8065  058C                     	;# 
  8066  058C                     	;# 
  8067  058D                     	;# 
  8068  058E                     	;# 
  8069  058F                     	;# 
  8070  058F                     	;# 
  8071  0590                     	;# 
  8072  0591                     	;# 
  8073  0592                     	;# 
  8074  0593                     	;# 
  8075  060C                     	;# 
  8076  060D                     	;# 
  8077  060E                     	;# 
  8078  060F                     	;# 
  8079  0610                     	;# 
  8080  0611                     	;# 
  8081  0612                     	;# 
  8082  0613                     	;# 
  8083  0614                     	;# 
  8084  0616                     	;# 
  8085  0617                     	;# 
  8086  0618                     	;# 
  8087  0619                     	;# 
  8088  061A                     	;# 
  8089  061B                     	;# 
  8090  061C                     	;# 
  8091  061D                     	;# 
  8092  061E                     	;# 
  8093  068C                     	;# 
  8094  068D                     	;# 
  8095  068E                     	;# 
  8096  068F                     	;# 
  8097  0690                     	;# 
  8098  0691                     	;# 
  8099  0692                     	;# 
  8100  0693                     	;# 
  8101  0694                     	;# 
  8102  070C                     	;# 
  8103  070D                     	;# 
  8104  070E                     	;# 
  8105  070F                     	;# 
  8106  0710                     	;# 
  8107  0711                     	;# 
  8108  0712                     	;# 
  8109  0713                     	;# 
  8110  0714                     	;# 
  8111  0716                     	;# 
  8112  0717                     	;# 
  8113  0718                     	;# 
  8114  0719                     	;# 
  8115  071A                     	;# 
  8116  071B                     	;# 
  8117  071C                     	;# 
  8118  071D                     	;# 
  8119  071E                     	;# 
  8120  0796                     	;# 
  8121  0797                     	;# 
  8122  0798                     	;# 
  8123  0799                     	;# 
  8124  079A                     	;# 
  8125  079B                     	;# 
  8126  080C                     	;# 
  8127  080D                     	;# 
  8128  080E                     	;# 
  8129  080F                     	;# 
  8130  0810                     	;# 
  8131  0811                     	;# 
  8132  0812                     	;# 
  8133  0813                     	;# 
  8134  0814                     	;# 
  8135  081A                     	;# 
  8136  081B                     	;# 
  8137  081C                     	;# 
  8138  081D                     	;# 
  8139  081E                     	;# 
  8140  081F                     	;# 
  8141  088C                     	;# 
  8142  088D                     	;# 
  8143  088E                     	;# 
  8144  088F                     	;# 
  8145  0890                     	;# 
  8146  0891                     	;# 
  8147  0892                     	;# 
  8148  0893                     	;# 
  8149  0895                     	;# 
  8150  0896                     	;# 
  8151  0897                     	;# 
  8152  0898                     	;# 
  8153  0899                     	;# 
  8154  089A                     	;# 
  8155  089B                     	;# 
  8156  090C                     	;# 
  8157  090E                     	;# 
  8158  090F                     	;# 
  8159  091F                     	;# 
  8160  091F                     	;# 
  8161  098F                     	;# 
  8162  098F                     	;# 
  8163  0990                     	;# 
  8164  0991                     	;# 
  8165  0992                     	;# 
  8166  0993                     	;# 
  8167  0994                     	;# 
  8168  0995                     	;# 
  8169  0996                     	;# 
  8170  0997                     	;# 
  8171  0E0F                     	;# 
  8172  0E10                     	;# 
  8173  0E11                     	;# 
  8174  0E12                     	;# 
  8175  0E13                     	;# 
  8176  0E14                     	;# 
  8177  0E15                     	;# 
  8178  0E16                     	;# 
  8179  0E17                     	;# 
  8180  0E18                     	;# 
  8181  0E19                     	;# 
  8182  0E1A                     	;# 
  8183  0E1B                     	;# 
  8184  0E1C                     	;# 
  8185  0E1D                     	;# 
  8186  0E1E                     	;# 
  8187  0E1F                     	;# 
  8188  0E20                     	;# 
  8189  0E21                     	;# 
  8190  0E22                     	;# 
  8191  0E23                     	;# 
  8192  0E24                     	;# 
  8193  0E25                     	;# 
  8194  0E26                     	;# 
  8195  0E27                     	;# 
  8196  0E28                     	;# 
  8197  0E29                     	;# 
  8198  0E2A                     	;# 
  8199  0E2B                     	;# 
  8200  0E2C                     	;# 
  8201  0E2D                     	;# 
  8202  0E2E                     	;# 
  8203  0E2F                     	;# 
  8204  0E30                     	;# 
  8205  0E31                     	;# 
  8206  0E32                     	;# 
  8207  0E33                     	;# 
  8208  0E34                     	;# 
  8209  0E35                     	;# 
  8210  0E36                     	;# 
  8211  0E37                     	;# 
  8212  0E8F                     	;# 
  8213  0E90                     	;# 
  8214  0E91                     	;# 
  8215  0E92                     	;# 
  8216  0E93                     	;# 
  8217  0E94                     	;# 
  8218  0E95                     	;# 
  8219  0E96                     	;# 
  8220  0E97                     	;# 
  8221  0E9C                     	;# 
  8222  0E9D                     	;# 
  8223  0E9E                     	;# 
  8224  0EA1                     	;# 
  8225  0EA2                     	;# 
  8226  0EA3                     	;# 
  8227  0EA4                     	;# 
  8228  0EA5                     	;# 
  8229  0EA9                     	;# 
  8230  0EAA                     	;# 
  8231  0EAB                     	;# 
  8232  0EAC                     	;# 
  8233  0EB1                     	;# 
  8234  0EB2                     	;# 
  8235  0EB3                     	;# 
  8236  0EB8                     	;# 
  8237  0EB9                     	;# 
  8238  0EBA                     	;# 
  8239  0EBB                     	;# 
  8240  0EBC                     	;# 
  8241  0EBD                     	;# 
  8242  0EBE                     	;# 
  8243  0EC3                     	;# 
  8244  0EC5                     	;# 
  8245  0EC6                     	;# 
  8246  0EC7                     	;# 
  8247  0EC8                     	;# 
  8248  0EC9                     	;# 
  8249  0ECA                     	;# 
  8250  0ECB                     	;# 
  8251  0ECC                     	;# 
  8252  0F10                     	;# 
  8253  0F11                     	;# 
  8254  0F12                     	;# 
  8255  0F13                     	;# 
  8256  0F14                     	;# 
  8257  0F15                     	;# 
  8258  0F16                     	;# 
  8259  0F17                     	;# 
  8260  0F18                     	;# 
  8261  0F19                     	;# 
  8262  0F1A                     	;# 
  8263  0F1B                     	;# 
  8264  0F1C                     	;# 
  8265  0F1D                     	;# 
  8266  0F1E                     	;# 
  8267  0F1F                     	;# 
  8268  0F20                     	;# 
  8269  0F21                     	;# 
  8270  0F22                     	;# 
  8271  0F23                     	;# 
  8272  0F24                     	;# 
  8273  0F25                     	;# 
  8274  0F26                     	;# 
  8275  0F27                     	;# 
  8276  0F28                     	;# 
  8277  0F29                     	;# 
  8278  0F2A                     	;# 
  8279  0F2B                     	;# 
  8280  0F2C                     	;# 
  8281  0F2D                     	;# 
  8282  0F2E                     	;# 
  8283  0F2F                     	;# 
  8284  0F30                     	;# 
  8285  0F31                     	;# 
  8286  0F32                     	;# 
  8287  0F38                     	;# 
  8288  0F39                     	;# 
  8289  0F3A                     	;# 
  8290  0F3B                     	;# 
  8291  0F3C                     	;# 
  8292  0F3D                     	;# 
  8293  0F3E                     	;# 
  8294  0F3F                     	;# 
  8295  0F40                     	;# 
  8296  0F41                     	;# 
  8297  0F43                     	;# 
  8298  0F44                     	;# 
  8299  0F45                     	;# 
  8300  0F46                     	;# 
  8301  0F47                     	;# 
  8302  0F48                     	;# 
  8303  0F49                     	;# 
  8304  0F4A                     	;# 
  8305  0F4B                     	;# 
  8306  0F4C                     	;# 
  8307  0F4E                     	;# 
  8308  0F4F                     	;# 
  8309  0F50                     	;# 
  8310  0F51                     	;# 
  8311  0F52                     	;# 
  8312  0F53                     	;# 
  8313  0F54                     	;# 
  8314  0F55                     	;# 
  8315  0F56                     	;# 
  8316  0F57                     	;# 
  8317  0F59                     	;# 
  8318  0F5A                     	;# 
  8319  0F5B                     	;# 
  8320  0F5C                     	;# 
  8321  0F5D                     	;# 
  8322  0F61                     	;# 
  8323  0F62                     	;# 
  8324  0F64                     	;# 
  8325  0F65                     	;# 
  8326  0F66                     	;# 
  8327  0F67                     	;# 
  8328  0F68                     	;# 
  8329  0F69                     	;# 
  8330  0F6A                     	;# 
  8331  0F6B                     	;# 
  8332  0F6C                     	;# 
  8333  0F6D                     	;# 
  8334  0FE4                     	;# 
  8335  0FE5                     	;# 
  8336  0FE6                     	;# 
  8337  0FE7                     	;# 
  8338  0FE8                     	;# 
  8339  0FE9                     	;# 
  8340  0FEA                     	;# 
  8341  0FEB                     	;# 
  8342  0FED                     	;# 
  8343  0FEE                     	;# 
  8344  0FEF                     	;# 
  8345  0000                     	;# 
  8346  0001                     	;# 
  8347  0002                     	;# 
  8348  0003                     	;# 
  8349  0004                     	;# 
  8350  0005                     	;# 
  8351  0006                     	;# 
  8352  0007                     	;# 
  8353  0008                     	;# 
  8354  0009                     	;# 
  8355  000A                     	;# 
  8356  000B                     	;# 
  8357  000C                     	;# 
  8358  000D                     	;# 
  8359  000E                     	;# 
  8360  000F                     	;# 
  8361  0010                     	;# 
  8362  0011                     	;# 
  8363  0012                     	;# 
  8364  0013                     	;# 
  8365  0014                     	;# 
  8366  0015                     	;# 
  8367  0016                     	;# 
  8368  0017                     	;# 
  8369  0018                     	;# 
  8370  0019                     	;# 
  8371  001A                     	;# 
  8372  001C                     	;# 
  8373  001C                     	;# 
  8374  001D                     	;# 
  8375  001D                     	;# 
  8376  001E                     	;# 
  8377  001F                     	;# 
  8378  008C                     	;# 
  8379  008C                     	;# 
  8380  008D                     	;# 
  8381  008E                     	;# 
  8382  008E                     	;# 
  8383  008F                     	;# 
  8384  0090                     	;# 
  8385  0090                     	;# 
  8386  0091                     	;# 
  8387  0093                     	;# 
  8388  0094                     	;# 
  8389  0095                     	;# 
  8390  0096                     	;# 
  8391  0097                     	;# 
  8392  0098                     	;# 
  8393  0099                     	;# 
  8394  009A                     	;# 
  8395  009B                     	;# 
  8396  009C                     	;# 
  8397  009D                     	;# 
  8398  009E                     	;# 
  8399  010C                     	;# 
  8400  010D                     	;# 
  8401  010E                     	;# 
  8402  010E                     	;# 
  8403  010F                     	;# 
  8404  0110                     	;# 
  8405  0110                     	;# 
  8406  0111                     	;# 
  8407  0112                     	;# 
  8408  0112                     	;# 
  8409  0113                     	;# 
  8410  0114                     	;# 
  8411  0114                     	;# 
  8412  0115                     	;# 
  8413  0116                     	;# 
  8414  0116                     	;# 
  8415  0117                     	;# 
  8416  0119                     	;# 
  8417  0119                     	;# 
  8418  0119                     	;# 
  8419  011A                     	;# 
  8420  011A                     	;# 
  8421  011A                     	;# 
  8422  011B                     	;# 
  8423  011B                     	;# 
  8424  011B                     	;# 
  8425  011B                     	;# 
  8426  011B                     	;# 
  8427  011C                     	;# 
  8428  011C                     	;# 
  8429  011C                     	;# 
  8430  011D                     	;# 
  8431  011D                     	;# 
  8432  011D                     	;# 
  8433  011E                     	;# 
  8434  011E                     	;# 
  8435  011E                     	;# 
  8436  011F                     	;# 
  8437  011F                     	;# 
  8438  011F                     	;# 
  8439  011F                     	;# 
  8440  011F                     	;# 
  8441  018C                     	;# 
  8442  018D                     	;# 
  8443  018E                     	;# 
  8444  018F                     	;# 
  8445  0190                     	;# 
  8446  0191                     	;# 
  8447  0192                     	;# 
  8448  0196                     	;# 
  8449  0197                     	;# 
  8450  0198                     	;# 
  8451  0199                     	;# 
  8452  019A                     	;# 
  8453  019B                     	;# 
  8454  019C                     	;# 
  8455  020C                     	;# 
  8456  020C                     	;# 
  8457  020D                     	;# 
  8458  020E                     	;# 
  8459  020F                     	;# 
  8460  020F                     	;# 
  8461  0210                     	;# 
  8462  0210                     	;# 
  8463  0211                     	;# 
  8464  0211                     	;# 
  8465  0212                     	;# 
  8466  0212                     	;# 
  8467  0213                     	;# 
  8468  0214                     	;# 
  8469  0215                     	;# 
  8470  0215                     	;# 
  8471  0216                     	;# 
  8472  0216                     	;# 
  8473  0217                     	;# 
  8474  0217                     	;# 
  8475  0218                     	;# 
  8476  0218                     	;# 
  8477  0219                     	;# 
  8478  021A                     	;# 
  8479  021B                     	;# 
  8480  021B                     	;# 
  8481  021C                     	;# 
  8482  021C                     	;# 
  8483  021D                     	;# 
  8484  021D                     	;# 
  8485  021E                     	;# 
  8486  021F                     	;# 
  8487  028C                     	;# 
  8488  028C                     	;# 
  8489  028D                     	;# 
  8490  028D                     	;# 
  8491  028E                     	;# 
  8492  028F                     	;# 
  8493  0290                     	;# 
  8494  0290                     	;# 
  8495  0291                     	;# 
  8496  0292                     	;# 
  8497  0292                     	;# 
  8498  0293                     	;# 
  8499  0293                     	;# 
  8500  0294                     	;# 
  8501  0295                     	;# 
  8502  0296                     	;# 
  8503  0296                     	;# 
  8504  0297                     	;# 
  8505  0298                     	;# 
  8506  0298                     	;# 
  8507  0299                     	;# 
  8508  0299                     	;# 
  8509  029A                     	;# 
  8510  029B                     	;# 
  8511  029C                     	;# 
  8512  029C                     	;# 
  8513  029D                     	;# 
  8514  030C                     	;# 
  8515  030C                     	;# 
  8516  030D                     	;# 
  8517  030E                     	;# 
  8518  030F                     	;# 
  8519  0310                     	;# 
  8520  0310                     	;# 
  8521  0311                     	;# 
  8522  0312                     	;# 
  8523  0313                     	;# 
  8524  0314                     	;# 
  8525  0314                     	;# 
  8526  0315                     	;# 
  8527  0316                     	;# 
  8528  0317                     	;# 
  8529  0318                     	;# 
  8530  0318                     	;# 
  8531  0319                     	;# 
  8532  031A                     	;# 
  8533  031B                     	;# 
  8534  031C                     	;# 
  8535  031C                     	;# 
  8536  031D                     	;# 
  8537  031E                     	;# 
  8538  031F                     	;# 
  8539  038C                     	;# 
  8540  038C                     	;# 
  8541  038D                     	;# 
  8542  038E                     	;# 
  8543  0390                     	;# 
  8544  0390                     	;# 
  8545  0391                     	;# 
  8546  0392                     	;# 
  8547  040C                     	;# 
  8548  040D                     	;# 
  8549  040E                     	;# 
  8550  040F                     	;# 
  8551  0410                     	;# 
  8552  0411                     	;# 
  8553  0416                     	;# 
  8554  0416                     	;# 
  8555  0417                     	;# 
  8556  0418                     	;# 
  8557  0418                     	;# 
  8558  0419                     	;# 
  8559  041A                     	;# 
  8560  041A                     	;# 
  8561  041B                     	;# 
  8562  041C                     	;# 
  8563  041C                     	;# 
  8564  041D                     	;# 
  8565  041E                     	;# 
  8566  041F                     	;# 
  8567  048C                     	;# 
  8568  048C                     	;# 
  8569  048D                     	;# 
  8570  048E                     	;# 
  8571  048F                     	;# 
  8572  048F                     	;# 
  8573  0490                     	;# 
  8574  0491                     	;# 
  8575  0492                     	;# 
  8576  0492                     	;# 
  8577  0493                     	;# 
  8578  0494                     	;# 
  8579  0495                     	;# 
  8580  0495                     	;# 
  8581  0496                     	;# 
  8582  0497                     	;# 
  8583  0498                     	;# 
  8584  0499                     	;# 
  8585  049A                     	;# 
  8586  049B                     	;# 
  8587  049C                     	;# 
  8588  049D                     	;# 
  8589  050C                     	;# 
  8590  050C                     	;# 
  8591  050D                     	;# 
  8592  050E                     	;# 
  8593  050F                     	;# 
  8594  050F                     	;# 
  8595  0510                     	;# 
  8596  0511                     	;# 
  8597  0512                     	;# 
  8598  0512                     	;# 
  8599  0513                     	;# 
  8600  0514                     	;# 
  8601  0515                     	;# 
  8602  0515                     	;# 
  8603  0516                     	;# 
  8604  0517                     	;# 
  8605  0518                     	;# 
  8606  0519                     	;# 
  8607  051A                     	;# 
  8608  051B                     	;# 
  8609  051C                     	;# 
  8610  051D                     	;# 
  8611  058C                     	;# 
  8612  058C                     	;# 
  8613  058D                     	;# 
  8614  058E                     	;# 
  8615  058F                     	;# 
  8616  058F                     	;# 
  8617  0590                     	;# 
  8618  0591                     	;# 
  8619  0592                     	;# 
  8620  0593                     	;# 
  8621  060C                     	;# 
  8622  060D                     	;# 
  8623  060E                     	;# 
  8624  060F                     	;# 
  8625  0610                     	;# 
  8626  0611                     	;# 
  8627  0612                     	;# 
  8628  0613                     	;# 
  8629  0614                     	;# 
  8630  0616                     	;# 
  8631  0617                     	;# 
  8632  0618                     	;# 
  8633  0619                     	;# 
  8634  061A                     	;# 
  8635  061B                     	;# 
  8636  061C                     	;# 
  8637  061D                     	;# 
  8638  061E                     	;# 
  8639  068C                     	;# 
  8640  068D                     	;# 
  8641  068E                     	;# 
  8642  068F                     	;# 
  8643  0690                     	;# 
  8644  0691                     	;# 
  8645  0692                     	;# 
  8646  0693                     	;# 
  8647  0694                     	;# 
  8648  070C                     	;# 
  8649  070D                     	;# 
  8650  070E                     	;# 
  8651  070F                     	;# 
  8652  0710                     	;# 
  8653  0711                     	;# 
  8654  0712                     	;# 
  8655  0713                     	;# 
  8656  0714                     	;# 
  8657  0716                     	;# 
  8658  0717                     	;# 
  8659  0718                     	;# 
  8660  0719                     	;# 
  8661  071A                     	;# 
  8662  071B                     	;# 
  8663  071C                     	;# 
  8664  071D                     	;# 
  8665  071E                     	;# 
  8666  0796                     	;# 
  8667  0797                     	;# 
  8668  0798                     	;# 
  8669  0799                     	;# 
  8670  079A                     	;# 
  8671  079B                     	;# 
  8672  080C                     	;# 
  8673  080D                     	;# 
  8674  080E                     	;# 
  8675  080F                     	;# 
  8676  0810                     	;# 
  8677  0811                     	;# 
  8678  0812                     	;# 
  8679  0813                     	;# 
  8680  0814                     	;# 
  8681  081A                     	;# 
  8682  081B                     	;# 
  8683  081C                     	;# 
  8684  081D                     	;# 
  8685  081E                     	;# 
  8686  081F                     	;# 
  8687  088C                     	;# 
  8688  088D                     	;# 
  8689  088E                     	;# 
  8690  088F                     	;# 
  8691  0890                     	;# 
  8692  0891                     	;# 
  8693  0892                     	;# 
  8694  0893                     	;# 
  8695  0895                     	;# 
  8696  0896                     	;# 
  8697  0897                     	;# 
  8698  0898                     	;# 
  8699  0899                     	;# 
  8700  089A                     	;# 
  8701  089B                     	;# 
  8702  090C                     	;# 
  8703  090E                     	;# 
  8704  090F                     	;# 
  8705  091F                     	;# 
  8706  091F                     	;# 
  8707  098F                     	;# 
  8708  098F                     	;# 
  8709  0990                     	;# 
  8710  0991                     	;# 
  8711  0992                     	;# 
  8712  0993                     	;# 
  8713  0994                     	;# 
  8714  0995                     	;# 
  8715  0996                     	;# 
  8716  0997                     	;# 
  8717  0E0F                     	;# 
  8718  0E10                     	;# 
  8719  0E11                     	;# 
  8720  0E12                     	;# 
  8721  0E13                     	;# 
  8722  0E14                     	;# 
  8723  0E15                     	;# 
  8724  0E16                     	;# 
  8725  0E17                     	;# 
  8726  0E18                     	;# 
  8727  0E19                     	;# 
  8728  0E1A                     	;# 
  8729  0E1B                     	;# 
  8730  0E1C                     	;# 
  8731  0E1D                     	;# 
  8732  0E1E                     	;# 
  8733  0E1F                     	;# 
  8734  0E20                     	;# 
  8735  0E21                     	;# 
  8736  0E22                     	;# 
  8737  0E23                     	;# 
  8738  0E24                     	;# 
  8739  0E25                     	;# 
  8740  0E26                     	;# 
  8741  0E27                     	;# 
  8742  0E28                     	;# 
  8743  0E29                     	;# 
  8744  0E2A                     	;# 
  8745  0E2B                     	;# 
  8746  0E2C                     	;# 
  8747  0E2D                     	;# 
  8748  0E2E                     	;# 
  8749  0E2F                     	;# 
  8750  0E30                     	;# 
  8751  0E31                     	;# 
  8752  0E32                     	;# 
  8753  0E33                     	;# 
  8754  0E34                     	;# 
  8755  0E35                     	;# 
  8756  0E36                     	;# 
  8757  0E37                     	;# 
  8758  0E8F                     	;# 
  8759  0E90                     	;# 
  8760  0E91                     	;# 
  8761  0E92                     	;# 
  8762  0E93                     	;# 
  8763  0E94                     	;# 
  8764  0E95                     	;# 
  8765  0E96                     	;# 
  8766  0E97                     	;# 
  8767  0E9C                     	;# 
  8768  0E9D                     	;# 
  8769  0E9E                     	;# 
  8770  0EA1                     	;# 
  8771  0EA2                     	;# 
  8772  0EA3                     	;# 
  8773  0EA4                     	;# 
  8774  0EA5                     	;# 
  8775  0EA9                     	;# 
  8776  0EAA                     	;# 
  8777  0EAB                     	;# 
  8778  0EAC                     	;# 
  8779  0EB1                     	;# 
  8780  0EB2                     	;# 
  8781  0EB3                     	;# 
  8782  0EB8                     	;# 
  8783  0EB9                     	;# 
  8784  0EBA                     	;# 
  8785  0EBB                     	;# 
  8786  0EBC                     	;# 
  8787  0EBD                     	;# 
  8788  0EBE                     	;# 
  8789  0EC3                     	;# 
  8790  0EC5                     	;# 
  8791  0EC6                     	;# 
  8792  0EC7                     	;# 
  8793  0EC8                     	;# 
  8794  0EC9                     	;# 
  8795  0ECA                     	;# 
  8796  0ECB                     	;# 
  8797  0ECC                     	;# 
  8798  0F10                     	;# 
  8799  0F11                     	;# 
  8800  0F12                     	;# 
  8801  0F13                     	;# 
  8802  0F14                     	;# 
  8803  0F15                     	;# 
  8804  0F16                     	;# 
  8805  0F17                     	;# 
  8806  0F18                     	;# 
  8807  0F19                     	;# 
  8808  0F1A                     	;# 
  8809  0F1B                     	;# 
  8810  0F1C                     	;# 
  8811  0F1D                     	;# 
  8812  0F1E                     	;# 
  8813  0F1F                     	;# 
  8814  0F20                     	;# 
  8815  0F21                     	;# 
  8816  0F22                     	;# 
  8817  0F23                     	;# 
  8818  0F24                     	;# 
  8819  0F25                     	;# 
  8820  0F26                     	;# 
  8821  0F27                     	;# 
  8822  0F28                     	;# 
  8823  0F29                     	;# 
  8824  0F2A                     	;# 
  8825  0F2B                     	;# 
  8826  0F2C                     	;# 
  8827  0F2D                     	;# 
  8828  0F2E                     	;# 
  8829  0F2F                     	;# 
  8830  0F30                     	;# 
  8831  0F31                     	;# 
  8832  0F32                     	;# 
  8833  0F38                     	;# 
  8834  0F39                     	;# 
  8835  0F3A                     	;# 
  8836  0F3B                     	;# 
  8837  0F3C                     	;# 
  8838  0F3D                     	;# 
  8839  0F3E                     	;# 
  8840  0F3F                     	;# 
  8841  0F40                     	;# 
  8842  0F41                     	;# 
  8843  0F43                     	;# 
  8844  0F44                     	;# 
  8845  0F45                     	;# 
  8846  0F46                     	;# 
  8847  0F47                     	;# 
  8848  0F48                     	;# 
  8849  0F49                     	;# 
  8850  0F4A                     	;# 
  8851  0F4B                     	;# 
  8852  0F4C                     	;# 
  8853  0F4E                     	;# 
  8854  0F4F                     	;# 
  8855  0F50                     	;# 
  8856  0F51                     	;# 
  8857  0F52                     	;# 
  8858  0F53                     	;# 
  8859  0F54                     	;# 
  8860  0F55                     	;# 
  8861  0F56                     	;# 
  8862  0F57                     	;# 
  8863  0F59                     	;# 
  8864  0F5A                     	;# 
  8865  0F5B                     	;# 
  8866  0F5C                     	;# 
  8867  0F5D                     	;# 
  8868  0F61                     	;# 
  8869  0F62                     	;# 
  8870  0F64                     	;# 
  8871  0F65                     	;# 
  8872  0F66                     	;# 
  8873  0F67                     	;# 
  8874  0F68                     	;# 
  8875  0F69                     	;# 
  8876  0F6A                     	;# 
  8877  0F6B                     	;# 
  8878  0F6C                     	;# 
  8879  0F6D                     	;# 
  8880  0FE4                     	;# 
  8881  0FE5                     	;# 
  8882  0FE6                     	;# 
  8883  0FE7                     	;# 
  8884  0FE8                     	;# 
  8885  0FE9                     	;# 
  8886  0FEA                     	;# 
  8887  0FEB                     	;# 
  8888  0FED                     	;# 
  8889  0FEE                     	;# 
  8890  0FEF                     	;# 
  8891                           
  8892                           	psect	idataBANK0
  8893  0D46                     __pidataBANK0:	
  8894                           
  8895                           ;initializer for _mode_field_subfield
  8896  0D46  34FF               	retlw	255
  8897  0D47  34FF               	retlw	255
  8898  0D48  34FF               	retlw	255
  8899  0D49  34FF               	retlw	255
  8900                           
  8901                           ;initializer for _tala
  8902  0D4A  3403               	retlw	3
  8903                           
  8904                           ;initializer for _pmon
  8905  0D4B  3405               	retlw	5
  8906                           
  8907                           ;initializer for _nreg
  8908  0D4C  341E               	retlw	30
  8909                           
  8910                           	psect	stringtext1
  8911  07AA                     __pstringtext1:	
  8912  07AA                     _fsmStateTable:	
  8913  07AA  34EC               	retlw	low _do_I2C_IDLE
  8914  07AB  340C               	retlw	high _do_I2C_IDLE
  8915  07AC  3475               	retlw	low _do_I2C_SEND_ADR_READ
  8916  07AD  340D               	retlw	high _do_I2C_SEND_ADR_READ
  8917  07AE  345D               	retlw	low _do_I2C_SEND_ADR_WRITE
  8918  07AF  340D               	retlw	high _do_I2C_SEND_ADR_WRITE
  8919  07B0  347C               	retlw	low _do_I2C_TX
  8920  07B1  3404               	retlw	high _do_I2C_TX
  8921  07B2  341D               	retlw	low _do_I2C_RX
  8922  07B3  3405               	retlw	high _do_I2C_RX
  8923  07B4  3438               	retlw	low _do_I2C_RCEN
  8924  07B5  340D               	retlw	high _do_I2C_RCEN
  8925  07B6  3476               	retlw	low _do_I2C_TX_EMPTY
  8926  07B7  3406               	retlw	high _do_I2C_TX_EMPTY
  8927  07B8  34F1               	retlw	low _do_I2C_SEND_RESTART_READ
  8928  07B9  340C               	retlw	high _do_I2C_SEND_RESTART_READ
  8929  07BA  34F6               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8930  07BB  340C               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8931  07BC  34FB               	retlw	low _do_I2C_SEND_RESTART
  8932  07BD  340C               	retlw	high _do_I2C_SEND_RESTART
  8933  07BE  3400               	retlw	low _do_I2C_SEND_STOP
  8934  07BF  340D               	retlw	high _do_I2C_SEND_STOP
  8935  07C0  3405               	retlw	low _do_I2C_DO_ACK
  8936  07C1  340D               	retlw	high _do_I2C_DO_ACK
  8937  07C2  340A               	retlw	low _do_I2C_DO_NACK_STOP
  8938  07C3  340D               	retlw	high _do_I2C_DO_NACK_STOP
  8939  07C4  340F               	retlw	low _do_I2C_DO_NACK_RESTART
  8940  07C5  340D               	retlw	high _do_I2C_DO_NACK_RESTART
  8941  07C6  3455               	retlw	low _do_I2C_RESET
  8942  07C7  340D               	retlw	high _do_I2C_RESET
  8943  07C8  3434               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8944  07C9  3407               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8945  07CA                     __end_of_fsmStateTable:	
  8946                           
  8947                           	psect	nvBANK0
  8948  005C                     __pnvBANK0:	
  8949  005C                     _TMR2_InterruptHandler:	
  8950  005C                     	ds	2
  8951  005E                     _TMR1_InterruptHandler:	
  8952  005E                     	ds	2
  8953  0060                     _timer1ReloadVal:	
  8954  0060                     	ds	2
  8955  0062                     _INT_InterruptHandler:	
  8956  0062                     	ds	2
  8957                           
  8958                           	psect	nvBANK1
  8959  00C6                     __pnvBANK1:	
  8960  00C6                     _TMR0_InterruptHandler:	
  8961  00C6                     	ds	2
  8962  001E                     _T0CON0bits	set	30
  8963  001E                     _T0CON0	set	30
  8964  001C                     _TMR0L	set	28
  8965  001D                     _TMR0H	set	29
  8966  001F                     _T0CON1	set	31
  8967  0013                     _TRISCbits	set	19
  8968  000E                     _PORTCbits	set	14
  8969  000D                     _PORTBbits	set	13
  8970  0016                     _LATAbits	set	22
  8971  0014                     _TRISD	set	20
  8972  0013                     _TRISC	set	19
  8973  0012                     _TRISB	set	18
  8974  0011                     _TRISA	set	17
  8975  0015                     _TRISE	set	21
  8976  0018                     _LATC	set	24
  8977  0017                     _LATB	set	23
  8978  0016                     _LATA	set	22
  8979  0019                     _LATD	set	25
  8980  001A                     _LATE	set	26
  8981  000B                     _INTCONbits	set	11
  8982  0094                     _ADCON1bits	set	148
  8983  008E                     _ADPREVL	set	142
  8984  008F                     _ADPREVH	set	143
  8985  0097                     _ADSTATbits	set	151
  8986  0090                     _ADACCL	set	144
  8987  0091                     _ADACCH	set	145
  8988  0095                     _ADCON2bits	set	149
  8989  009C                     _ADPRE	set	156
  8990  0096                     _ADCON3bits	set	150
  8991  008C                     _ADRESL	set	140
  8992  008D                     _ADRESH	set	141
  8993  0093                     _ADCON0bits	set	147
  8994  009D                     _ADACQ	set	157
  8995  0093                     _ADCON0	set	147
  8996  0098                     _ADCLK	set	152
  8997  0099                     _ADACT	set	153
  8998  009A                     _ADREF	set	154
  8999  0097                     _ADSTAT	set	151
  9000  0096                     _ADCON3	set	150
  9001  0095                     _ADCON2	set	149
  9002  0094                     _ADCON1	set	148
  9003  009B                     _ADCAP	set	155
  9004  009E                     _ADPCH	set	158
  9005  0116                     _ADERRL	set	278
  9006  0117                     _ADERRH	set	279
  9007  0114                     _ADFLTRL	set	276
  9008  0115                     _ADFLTRH	set	277
  9009  010C                     _ADCNT	set	268
  9010  010D                     _ADRPT	set	269
  9011  0113                     _ADSTPTH	set	275
  9012  0112                     _ADSTPTL	set	274
  9013  0111                     _ADUTHH	set	273
  9014  0110                     _ADUTHL	set	272
  9015  010F                     _ADLTHH	set	271
  9016  010E                     _ADLTHL	set	270
  9017  018F                     _SSP1STATbits	set	399
  9018  018E                     _SSP1MSK	set	398
  9019  018C                     _SSP1BUF	set	396
  9020  0191                     _SSP1CON2bits	set	401
  9021  018D                     _SSP1ADD	set	397
  9022  0191                     _SSP1CON2	set	401
  9023  0190                     _SSP1CON1	set	400
  9024  018F                     _SSP1STAT	set	399
  9025  0190                     _SSP1CON1bits	set	400
  9026  021F                     _CCPTMRS1bits	set	543
  9027  020F                     _T1GCONbits	set	527
  9028  020E                     _T1CONbits	set	526
  9029  020E                     _T1CON	set	526
  9030  020C                     _TMR1L	set	524
  9031  020D                     _TMR1H	set	525
  9032  0211                     _T1CLK	set	529
  9033  0210                     _T1GATE	set	528
  9034  020F                     _T1GCON	set	527
  9035  028D                     _PR2	set	653
  9036  028C                     _TMR2	set	652
  9037  028E                     _T2CONbits	set	654
  9038  0291                     _T2RSTbits	set	657
  9039  028F                     _T2HLTbits	set	655
  9040  028E                     _T2CON	set	654
  9041  028C                     _T2TMR	set	652
  9042  028D                     _T2PR	set	653
  9043  0291                     _T2RST	set	657
  9044  028F                     _T2HLT	set	655
  9045  0290                     _T2CLKCON	set	656
  9046  038C                     _PWM6DCL	set	908
  9047  038D                     _PWM6DCH	set	909
  9048  038E                     _PWM6CON	set	910
  9049  070F                     _PIR3bits	set	1807
  9050  0719                     _PIE3bits	set	1817
  9051  0710                     _PIR4bits	set	1808
  9052  071A                     _PIE4bits	set	1818
  9053  0716                     _PIE0bits	set	1814
  9054  070C                     _PIR0bits	set	1804
  9055  079B                     _PMD5	set	1947
  9056  079A                     _PMD4	set	1946
  9057  0799                     _PMD3	set	1945
  9058  0798                     _PMD2	set	1944
  9059  0797                     _PMD1	set	1943
  9060  0796                     _PMD0	set	1942
  9061  081F                     _NVMCON2	set	2079
  9062  081C                     _NVMDATL	set	2076
  9063  081D                     _NVMDATH	set	2077
  9064  081E                     _NVMCON1bits	set	2078
  9065  081B                     _NVMADRH	set	2075
  9066  081A                     _NVMADRL	set	2074
  9067  0892                     _OSCTUNE	set	2194
  9068  0893                     _OSCFRQ	set	2195
  9069  0891                     _OSCEN	set	2193
  9070  088F                     _OSCCON3	set	2191
  9071  088D                     _OSCCON1	set	2189
  9072  0EC6                     _SSP1DATPPS	set	3782
  9073  0EC5                     _SSP1CLKPPS	set	3781
  9074  0E90                     _INTPPS	set	3728
  9075  0F44                     _WPUBbits	set	3908
  9076  0F16                     _RA6PPS	set	3862
  9077  0F24                     _RC4PPS	set	3876
  9078  0F23                     _RC3PPS	set	3875
  9079  0F68                     _INLVLE	set	3944
  9080  0F5D                     _INLVLD	set	3933
  9081  0F52                     _INLVLC	set	3922
  9082  0F47                     _INLVLB	set	3911
  9083  0F3C                     _INLVLA	set	3900
  9084  0F67                     _SLRCONE	set	3943
  9085  0F5C                     _SLRCOND	set	3932
  9086  0F51                     _SLRCONC	set	3921
  9087  0F46                     _SLRCONB	set	3910
  9088  0F3B                     _SLRCONA	set	3899
  9089  0F5B                     _ODCOND	set	3931
  9090  0F50                     _ODCONC	set	3920
  9091  0F45                     _ODCONB	set	3909
  9092  0F3A                     _ODCONA	set	3898
  9093  0F66                     _ODCONE	set	3942
  9094  0F4F                     _WPUC	set	3919
  9095  0F39                     _WPUA	set	3897
  9096  0F44                     _WPUB	set	3908
  9097  0F65                     _WPUE	set	3941
  9098  0F5A                     _WPUD	set	3930
  9099  0F38                     _ANSELA	set	3896
  9100  0F64                     _ANSELE	set	3940
  9101  0F43                     _ANSELB	set	3907
  9102  0F4E                     _ANSELC	set	3918
  9103  0F59                     _ANSELD	set	3929
  9104  7A7C                     _WPUC4	set	31356
  9105  7A7B                     _WPUC3	set	31355
  9106                           
  9107                           ; #config settings
  9108  0000                     
  9109                           	psect	cinit
  9110  005D                     start_initialization:	
  9111  005D                     __initialization:	
  9112                           
  9113                           ; Initialize objects allocated to BANK0
  9114  005D  3046               	movlw	low __pidataBANK0
  9115  005E  0084               	movwf	4
  9116  005F  308D               	movlw	(high __pidataBANK0)| (0+128)
  9117  0060  0085               	movwf	5
  9118  0061  3064               	movlw	low __pdataBANK0
  9119  0062  0086               	movwf	6
  9120  0063  3000               	movlw	high __pdataBANK0
  9121  0064  0087               	movwf	7
  9122  0065  3007               	movlw	7
  9123  0066  318D  2532  3180   	fcall	init_ram
  9124                           
  9125                           ; Clear objects allocated to COMMON
  9126  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9127                           
  9128                           ; Clear objects allocated to BANK0
  9129  006A  3020               	movlw	low __pbssBANK0
  9130  006B  0084               	movwf	4
  9131  006C  3000               	movlw	high __pbssBANK0
  9132  006D  0085               	movwf	5
  9133  006E  3023               	movlw	35
  9134  006F  318D  252C  3180   	fcall	clear_ram0
  9135                           
  9136                           ; Clear objects allocated to BANK1
  9137  0072  30A0               	movlw	low __pbssBANK1
  9138  0073  0084               	movwf	4
  9139  0074  3000               	movlw	high __pbssBANK1
  9140  0075  0085               	movwf	5
  9141  0076  3022               	movlw	34
  9142  0077  318D  252C  3180   	fcall	clear_ram0
  9143  007A                     end_of_initialization:	
  9144                           ;End of C runtime variable initialization code
  9145                           
  9146  007A                     __end_of__initialization:	
  9147  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9148  007B  0020               	movlb	0
  9149  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9150                           
  9151                           	psect	bssCOMMON
  9152  007D                     __pbssCOMMON:	
  9153  007D                     _clkms:	
  9154  007D                     	ds	1
  9155                           
  9156                           	psect	bssBANK0
  9157  0020                     __pbssBANK0:	
  9158  0020                     _lum_threshold:	
  9159  0020                     	ds	2
  9160  0022                     _lum_bin:	
  9161  0022                     	ds	2
  9162  0024                     _duty_cycle:	
  9163  0024                     	ds	2
  9164  0026                     _convertedValue:	
  9165  0026                     	ds	2
  9166  0028                     _min_units:	
  9167  0028                     	ds	2
  9168  002A                     _min_tens:	
  9169  002A                     	ds	2
  9170  002C                     _hours_units:	
  9171  002C                     	ds	2
  9172  002E                     _hours_tens:	
  9173  002E                     	ds	2
  9174  0030                     _value:	
  9175  0030                     	ds	2
  9176  0032                     _i2c1_driver_i2cISR:	
  9177  0032                     	ds	2
  9178  0034                     _i2c1_driver_busCollisionISR:	
  9179  0034                     	ds	2
  9180  0036                     _alaf:	
  9181  0036                     	ds	1
  9182  0037                     _temp:	
  9183  0037                     	ds	1
  9184  0038                     _alarm:	
  9185  0038                     	ds	1
  9186  0039                     _config_mode:	
  9187  0039                     	ds	1
  9188  003A                     _set_mode:	
  9189  003A                     	ds	1
  9190  003B                     _last5s:	
  9191  003B                     	ds	1
  9192  003C                     _last_ms2:	
  9193  003C                     	ds	1
  9194  003D                     _last_ms:	
  9195  003D                     	ds	1
  9196  003E                     _seg:	
  9197  003E                     	ds	1
  9198  003F                     _clkm:	
  9199  003F                     	ds	1
  9200  0040                     _clkh:	
  9201  0040                     	ds	1
  9202  0041                     _nreg_pt:	
  9203  0041                     	ds	1
  9204  0042                     _nreg_init:	
  9205  0042                     	ds	1
  9206                           
  9207                           	psect	dataBANK0
  9208  0064                     __pdataBANK0:	
  9209  0064                     _mode_field_subfield:	
  9210  0064                     	ds	4
  9211  0068                     _tala:	
  9212  0068                     	ds	1
  9213  0069                     _pmon:	
  9214  0069                     	ds	1
  9215  006A                     _nreg:	
  9216  006A                     	ds	1
  9217                           
  9218                           	psect	bssBANK1
  9219  00A0                     __pbssBANK1:	
  9220  00A0                     _i2c_status:	
  9221  00A0                     	ds	29
  9222  00BD                     _ring_byte:	
  9223  00BD                     	ds	5
  9224                           
  9225                           	psect	inittext
  9226  0D32                     init_ram:	
  9227  0D32  00FE               	movwf	btemp
  9228  0D33                     initloop:	
  9229  0D33  0012               	moviw fsr0++
  9230  0D34  001E               	movwi fsr1++
  9231  0D35  0BFE               	decfsz	btemp,f
  9232  0D36  2D33               	goto	initloop
  9233  0D37  3400               	retlw	0
  9234                           
  9235                           	psect	clrtext
  9236  0D2C                     clear_ram0:	
  9237                           ;	Called with FSR0 containing the base address, and
  9238                           ;	WREG with the size to clear
  9239                           
  9240  0D2C  0064               	clrwdt	;clear the watchdog before getting into this loop
  9241  0D2D                     clrloop0:	
  9242  0D2D  0180               	clrf	0	;clear RAM location pointed to by FSR
  9243  0D2E  3101               	addfsr 0,1
  9244  0D2F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9245  0D30  2D2D               	goto	clrloop0	;have we reached the end yet?
  9246  0D31  3400               	retlw	0	;all done for this memory range, return
  9247                           
  9248                           	psect	cstackBANK1
  9249  00C2                     __pcstackBANK1:	
  9250  00C2                     	ds	2
  9251  00C4                     main@t5s:	
  9252                           
  9253                           ; 1 bytes @ 0x2
  9254  00C4                     	ds	1
  9255  00C5                     _main$2302:	
  9256                           
  9257                           ; 1 bytes @ 0x3
  9258  00C5                     	ds	1
  9259                           
  9260                           	psect	cstackCOMMON
  9261  0070                     __pcstackCOMMON:	
  9262  0070                     ?_i2c1_driver_isNACK:	
  9263  0070                     ?_setCallBack:	
  9264                           ; 1 bit 
  9265                           
  9266  0070                     ?_mssp1_clearIRQ:	
  9267                           ; 1 bytes @ 0x0
  9268                           
  9269  0070                     ??_mssp1_clearIRQ:	
  9270                           ; 1 bytes @ 0x0
  9271                           
  9272  0070                     ?_i2c_busCollisionISR:	
  9273                           ; 1 bytes @ 0x0
  9274                           
  9275  0070                     ??_i2c_busCollisionISR:	
  9276                           ; 1 bytes @ 0x0
  9277                           
  9278  0070                     ?_i2c_ISR:	
  9279                           ; 1 bytes @ 0x0
  9280                           
  9281  0070                     ?_i2c1_driver_resetBus:	
  9282                           ; 1 bytes @ 0x0
  9283                           
  9284  0070                     ??_i2c1_driver_resetBus:	
  9285                           ; 1 bytes @ 0x0
  9286                           
  9287  0070                     ?_i2c1_driver_restart:	
  9288                           ; 1 bytes @ 0x0
  9289                           
  9290  0070                     ??_i2c1_driver_restart:	
  9291                           ; 1 bytes @ 0x0
  9292                           
  9293  0070                     ?_i2c1_driver_stop:	
  9294                           ; 1 bytes @ 0x0
  9295                           
  9296  0070                     ??_i2c1_driver_stop:	
  9297                           ; 1 bytes @ 0x0
  9298                           
  9299  0070                     ?_i2c1_driver_TXData:	
  9300                           ; 1 bytes @ 0x0
  9301                           
  9302  0070                     ??_i2c1_driver_TXData:	
  9303                           ; 1 bytes @ 0x0
  9304                           
  9305  0070                     ?_i2c1_driver_startRX:	
  9306                           ; 1 bytes @ 0x0
  9307                           
  9308  0070                     ??_i2c1_driver_startRX:	
  9309                           ; 1 bytes @ 0x0
  9310                           
  9311  0070                     ?_i2c1_driver_sendACK:	
  9312                           ; 1 bytes @ 0x0
  9313                           
  9314  0070                     ??_i2c1_driver_sendACK:	
  9315                           ; 1 bytes @ 0x0
  9316                           
  9317  0070                     ?_i2c1_driver_sendNACK:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  0070                     ??_i2c1_driver_sendNACK:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  0070                     ??_i2c1_driver_isNACK:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  0070                     ?_i2c1_driver_getRXData:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  0070                     ??_i2c1_driver_getRXData:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  0070                     ?_mssp1_setIRQ:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  0070                     ??_mssp1_setIRQ:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  0070                     ?_i2c1_driver_clearBusCollision:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  0070                     ??_i2c1_driver_clearBusCollision:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  0070                     ?_INT_CallBack:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  0070                     ?_TMR0_ISR:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  0070                     ?_TMR1_ISR:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  0070                     ?_TMR2_ISR:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  0070                     ?_PMD_Initialize:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  0070                     ?_PIN_MANAGER_Initialize:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  0070                     ?_OSCILLATOR_Initialize:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  0070                     ?_PWM6_Initialize:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  0070                     ?_ADCC_Initialize:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  0070                     ?_TMR2_Initialize:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  0070                     ?_TMR1_Initialize:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  0070                     ?_TMR0_Initialize:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  0070                     ?_TMR1_DefaultInterruptHandler:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  0070                     ??_TMR1_DefaultInterruptHandler:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  0070                     ?_TMR2_DefaultInterruptHandler:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  0070                     ??_TMR2_DefaultInterruptHandler:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  0070                     ?_checkDebounceSW1:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  0070                     ?_TMR0_StopTimer:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  0070                     ??_TMR0_StopTimer:	
  9399                           ; 1 bytes @ 0x0
  9400                           
  9401  0070                     ?_handler_clock_hms:	
  9402                           ; 1 bytes @ 0x0
  9403                           
  9404  0070                     ??_handler_clock_hms:	
  9405                           ; 1 bytes @ 0x0
  9406                           
  9407  0070                     ?_handler_clock_ms:	
  9408                           ; 1 bytes @ 0x0
  9409                           
  9410  0070                     ??_handler_clock_ms:	
  9411                           ; 1 bytes @ 0x0
  9412                           
  9413  0070                     ?_recoverData:	
  9414                           ; 1 bytes @ 0x0
  9415                           
  9416  0070                     ?_cksum_w:	
  9417                           ; 1 bytes @ 0x0
  9418                           
  9419  0070                     ?_TMR0_StartTimer:	
  9420                           ; 1 bytes @ 0x0
  9421                           
  9422  0070                     ?_config_routine:	
  9423                           ; 1 bytes @ 0x0
  9424                           
  9425  0070                     ?_all_LED:	
  9426                           ; 1 bytes @ 0x0
  9427                           
  9428  0070                     ?_mod1_LED:	
  9429                           ; 1 bytes @ 0x0
  9430                           
  9431  0070                     ?_mod2_LED:	
  9432                           ; 1 bytes @ 0x0
  9433                           
  9434  0070                     ?_mod3_LED:	
  9435                           ; 1 bytes @ 0x0
  9436                           
  9437  0070                     ?_mod4_LED:	
  9438                           ; 1 bytes @ 0x0
  9439                           
  9440  0070                     ?_checkDebounceSW2:	
  9441                           ; 1 bytes @ 0x0
  9442                           
  9443  0070                     ?_mode_select_LED:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0070                     ?_clock_subfields:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0070                     ?_cksum:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0070                     ?_reset_recv:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0070                     ?_TMR0_DefaultInterruptHandler:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0070                     ??_TMR0_DefaultInterruptHandler:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0070                     ?_i2c_setBuffer:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0070                     ?_do_I2C_RESET:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0070                     ??_do_I2C_RESET:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0070                     ?_do_I2C_IDLE:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0070                     ??_do_I2C_IDLE:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ?_do_I2C_SEND_RESTART:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ??_do_I2C_SEND_RESTART:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ?_do_I2C_SEND_STOP:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ??_do_I2C_SEND_STOP:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ?_do_I2C_SEND_ADR_READ:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ??_do_I2C_SEND_ADR_READ:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ?_do_I2C_RCEN:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ??_do_I2C_RCEN:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?_do_I2C_DO_ACK:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     ??_do_I2C_DO_ACK:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     ?_do_I2C_DO_NACK_STOP:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     ??_do_I2C_DO_NACK_STOP:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0070                     ?_do_I2C_TX:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0070                     ?_do_I2C_RX:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0070                     ?_do_I2C_TX_EMPTY:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0070                     ?_INT_ISR:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0070                     ?_INT_DefaultInterruptHandler:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0070                     ??_INT_DefaultInterruptHandler:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0070                     ?_EXT_INT_Initialize:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0070                     ?_INTERRUPT_InterruptManager:	
  9558                           ; 1 bytes @ 0x0
  9559                           
  9560  0070                     ?_SYSTEM_Initialize:	
  9561                           ; 1 bytes @ 0x0
  9562                           
  9563  0070                     ?_ADCC_StartConversion:	
  9564                           ; 1 bytes @ 0x0
  9565                           
  9566  0070                     ?_ADCC_IsConversionDone:	
  9567                           ; 1 bytes @ 0x0
  9568                           
  9569  0070                     ?_TMR1_WriteTimer:	
  9570                           ; 1 bytes @ 0x0
  9571                           
  9572  0070                     ?_sw1_EXT:	
  9573                           ; 1 bytes @ 0x0
  9574                           
  9575  0070                     ?_ISR_3s:	
  9576                           ; 1 bytes @ 0x0
  9577                           
  9578  0070                     ?_main:	
  9579                           ; 1 bytes @ 0x0
  9580                           
  9581  0070                     ?_increment_subfield:	
  9582                           ; 1 bytes @ 0x0
  9583                           
  9584  0070                     ?i1_PWM6_LoadDutyValue:	
  9585                           ; 1 bytes @ 0x0
  9586                           
  9587  0070                     ?i1_checkDebounceSW1:	
  9588                           ; 1 bytes @ 0x0
  9589                           
  9590  0070                     ??i1_checkDebounceSW1:	
  9591                           ; 1 bytes @ 0x0
  9592                           
  9593  0070                     i2c1_driver_TXData@d:	
  9594                           ; 1 bytes @ 0x0
  9595                           
  9596  0070                     i2c_setBuffer@bufferSize:	
  9597                           ; 1 bytes @ 0x0
  9598                           
  9599  0070                     setCallBack@cb:	
  9600                           ; 2 bytes @ 0x0
  9601                           
  9602  0070                     TMR1_WriteTimer@timerVal:	
  9603                           ; 2 bytes @ 0x0
  9604                           
  9605  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9606                           ; 2 bytes @ 0x0
  9607                           
  9608                           
  9609                           ; 2 bytes @ 0x0
  9610  0070                     	ds	1
  9611  0071                     ??_TMR2_ISR:	
  9612  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9613                           ; 1 bytes @ 0x1
  9614                           
  9615                           
  9616                           ; 1 bytes @ 0x1
  9617  0071                     	ds	1
  9618  0072                     ??_TMR1_ISR:	
  9619  0072                     ??_i2c_setBuffer:	
  9620                           ; 1 bytes @ 0x2
  9621                           
  9622  0072                     ??_TMR1_WriteTimer:	
  9623                           ; 1 bytes @ 0x2
  9624                           
  9625  0072                     ??i1_PWM6_LoadDutyValue:	
  9626                           ; 1 bytes @ 0x2
  9627                           
  9628  0072                     setCallBack@p:	
  9629                           ; 1 bytes @ 0x2
  9630                           
  9631                           
  9632                           ; 1 bytes @ 0x2
  9633  0072                     	ds	1
  9634  0073                     ??_setCallBack:	
  9635  0073                     i2c_setBuffer@buffer:	
  9636                           ; 1 bytes @ 0x3
  9637                           
  9638                           
  9639                           ; 1 bytes @ 0x3
  9640  0073                     	ds	1
  9641  0074                     ??_ISR_3s:	
  9642  0074                     setCallBack@idx:	
  9643                           ; 1 bytes @ 0x4
  9644                           
  9645                           
  9646                           ; 1 bytes @ 0x4
  9647  0074                     	ds	1
  9648  0075                     ??_TMR0_ISR:	
  9649  0075                     ?_i2c_setDataCompleteCallback:	
  9650                           ; 1 bytes @ 0x5
  9651                           
  9652  0075                     i2c_setDataCompleteCallback@cb:	
  9653                           ; 1 bytes @ 0x5
  9654                           
  9655                           
  9656                           ; 2 bytes @ 0x5
  9657  0075                     	ds	2
  9658  0077                     ??_sw1_EXT:	
  9659  0077                     i2c_setDataCompleteCallback@p:	
  9660                           ; 1 bytes @ 0x7
  9661                           
  9662                           
  9663                           ; 1 bytes @ 0x7
  9664  0077                     	ds	1
  9665  0078                     ??_INT_CallBack:	
  9666  0078                     ??_i2c_setDataCompleteCallback:	
  9667                           ; 1 bytes @ 0x8
  9668                           
  9669  0078                     ??_INT_ISR:	
  9670                           ; 1 bytes @ 0x8
  9671                           
  9672                           
  9673                           ; 1 bytes @ 0x8
  9674  0078                     	ds	1
  9675  0079                     ?_returnStop:	
  9676  0079                     ?_returnReset:	
  9677                           ; 1 bytes @ 0x9
  9678                           
  9679  0079                     ?_i2c_restartWrite:	
  9680                           ; 1 bytes @ 0x9
  9681                           
  9682  0079                     ?_wr1RegCompleteHandler:	
  9683                           ; 1 bytes @ 0x9
  9684                           
  9685  0079                     ?_rd1RegCompleteHandler:	
  9686                           ; 1 bytes @ 0x9
  9687                           
  9688  0079                     ?_rd2RegCompleteHandler:	
  9689                           ; 1 bytes @ 0x9
  9690                           
  9691  0079                     ?_wr2RegCompleteHandler:	
  9692                           ; 1 bytes @ 0x9
  9693                           
  9694  0079                     ?_rdBlkRegCompleteHandler:	
  9695                           ; 1 bytes @ 0x9
  9696                           
  9697  0079                     i2c_restartWrite@p:	
  9698                           ; 1 bytes @ 0x9
  9699                           
  9700  0079                     returnStop@p:	
  9701                           ; 1 bytes @ 0x9
  9702                           
  9703  0079                     returnReset@p:	
  9704                           ; 1 bytes @ 0x9
  9705                           
  9706  0079                     wr1RegCompleteHandler@p:	
  9707                           ; 1 bytes @ 0x9
  9708                           
  9709  0079                     rd1RegCompleteHandler@p:	
  9710                           ; 1 bytes @ 0x9
  9711                           
  9712  0079                     rd2RegCompleteHandler@p:	
  9713                           ; 1 bytes @ 0x9
  9714                           
  9715  0079                     wr2RegCompleteHandler@p:	
  9716                           ; 1 bytes @ 0x9
  9717                           
  9718  0079                     rdBlkRegCompleteHandler@p:	
  9719                           ; 1 bytes @ 0x9
  9720                           
  9721                           
  9722                           ; 1 bytes @ 0x9
  9723  0079                     	ds	1
  9724  007A                     ??_returnStop:	
  9725  007A                     ??_returnReset:	
  9726                           ; 1 bytes @ 0xA
  9727                           
  9728  007A                     ??_i2c_restartWrite:	
  9729                           ; 1 bytes @ 0xA
  9730                           
  9731  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9732                           ; 1 bytes @ 0xA
  9733                           
  9734  007A                     ??_do_I2C_TX:	
  9735                           ; 1 bytes @ 0xA
  9736                           
  9737  007A                     ??_do_I2C_RX:	
  9738                           ; 1 bytes @ 0xA
  9739                           
  9740  007A                     ??_do_I2C_TX_EMPTY:	
  9741                           ; 1 bytes @ 0xA
  9742                           
  9743  007A                     ??_wr1RegCompleteHandler:	
  9744                           ; 1 bytes @ 0xA
  9745                           
  9746  007A                     ??_rd1RegCompleteHandler:	
  9747                           ; 1 bytes @ 0xA
  9748                           
  9749  007A                     ??_rd2RegCompleteHandler:	
  9750                           ; 1 bytes @ 0xA
  9751                           
  9752  007A                     ??_wr2RegCompleteHandler:	
  9753                           ; 1 bytes @ 0xA
  9754                           
  9755  007A                     ??_rdBlkRegCompleteHandler:	
  9756                           ; 1 bytes @ 0xA
  9757                           
  9758                           
  9759                           ; 1 bytes @ 0xA
  9760  007A                     	ds	3
  9761  007D                     ??_INTERRUPT_InterruptManager:	
  9762                           
  9763                           	psect	cstackBANK0
  9764  0043                     __pcstackBANK0:	
  9765                           ; 1 bytes @ 0xD
  9766                           
  9767  0043                     ??_i2c_ISR:	
  9768                           
  9769                           ; 1 bytes @ 0x0
  9770  0043                     	ds	3
  9771  0046                     ??_PMD_Initialize:	
  9772  0046                     ??_PIN_MANAGER_Initialize:	
  9773                           ; 1 bytes @ 0x3
  9774                           
  9775  0046                     ??_OSCILLATOR_Initialize:	
  9776                           ; 1 bytes @ 0x3
  9777                           
  9778  0046                     ??_PWM6_Initialize:	
  9779                           ; 1 bytes @ 0x3
  9780                           
  9781  0046                     ??_ADCC_Initialize:	
  9782                           ; 1 bytes @ 0x3
  9783                           
  9784  0046                     ?_TMR1_SetInterruptHandler:	
  9785                           ; 1 bytes @ 0x3
  9786                           
  9787  0046                     ?_TMR2_SetInterruptHandler:	
  9788                           ; 1 bytes @ 0x3
  9789                           
  9790  0046                     ??_checkDebounceSW1:	
  9791                           ; 1 bytes @ 0x3
  9792                           
  9793  0046                     ?_TMR0_SetInterruptHandler:	
  9794                           ; 1 bytes @ 0x3
  9795                           
  9796  0046                     ?_LED_bin:	
  9797                           ; 1 bytes @ 0x3
  9798                           
  9799  0046                     ??_TMR0_StartTimer:	
  9800                           ; 1 bytes @ 0x3
  9801                           
  9802  0046                     ??_checkDebounceSW2:	
  9803                           ; 1 bytes @ 0x3
  9804                           
  9805  0046                     ?_INT_SetInterruptHandler:	
  9806                           ; 1 bytes @ 0x3
  9807                           
  9808  0046                     ??_ADCC_StartConversion:	
  9809                           ; 1 bytes @ 0x3
  9810                           
  9811  0046                     ??_ADCC_IsConversionDone:	
  9812                           ; 1 bytes @ 0x3
  9813                           
  9814  0046                     ?_PWM6_LoadDutyValue:	
  9815                           ; 1 bytes @ 0x3
  9816                           
  9817  0046                     ?_DATAEE_ReadByte:	
  9818                           ; 1 bytes @ 0x3
  9819                           
  9820  0046                     ?___bmul:	
  9821                           ; 1 bytes @ 0x3
  9822                           
  9823  0046                     ?_ADCC_GetConversionResult:	
  9824                           ; 1 bytes @ 0x3
  9825                           
  9826  0046                     ADCC_StartConversion@channel:	
  9827                           ; 2 bytes @ 0x3
  9828                           
  9829  0046                     ___bmul@multiplicand:	
  9830                           ; 1 bytes @ 0x3
  9831                           
  9832  0046                     INT_SetInterruptHandler@InterruptHandler:	
  9833                           ; 1 bytes @ 0x3
  9834                           
  9835  0046                     TMR1_SetInterruptHandler@InterruptHandler:	
  9836                           ; 2 bytes @ 0x3
  9837                           
  9838  0046                     PWM6_LoadDutyValue@dutyValue:	
  9839                           ; 2 bytes @ 0x3
  9840                           
  9841  0046                     DATAEE_ReadByte@bAdd:	
  9842                           ; 2 bytes @ 0x3
  9843                           
  9844  0046                     TMR2_SetInterruptHandler@InterruptHandler:	
  9845                           ; 2 bytes @ 0x3
  9846                           
  9847  0046                     LED_bin@value:	
  9848                           ; 2 bytes @ 0x3
  9849                           
  9850  0046                     TMR0_SetInterruptHandler@InterruptHandler:	
  9851                           ; 2 bytes @ 0x3
  9852                           
  9853                           
  9854                           ; 2 bytes @ 0x3
  9855  0046                     	ds	1
  9856  0047                     ??___bmul:	
  9857                           
  9858                           ; 1 bytes @ 0x4
  9859  0047                     	ds	1
  9860  0048                     ??_TMR2_Initialize:	
  9861  0048                     ??_TMR1_Initialize:	
  9862                           ; 1 bytes @ 0x5
  9863                           
  9864  0048                     ??_TMR0_Initialize:	
  9865                           ; 1 bytes @ 0x5
  9866                           
  9867  0048                     ??_TMR1_SetInterruptHandler:	
  9868                           ; 1 bytes @ 0x5
  9869                           
  9870  0048                     ??_TMR2_SetInterruptHandler:	
  9871                           ; 1 bytes @ 0x5
  9872                           
  9873  0048                     ??_TMR0_SetInterruptHandler:	
  9874                           ; 1 bytes @ 0x5
  9875                           
  9876  0048                     ??_LED_bin:	
  9877                           ; 1 bytes @ 0x5
  9878                           
  9879  0048                     ??_cksum:	
  9880                           ; 1 bytes @ 0x5
  9881                           
  9882  0048                     ??_INT_SetInterruptHandler:	
  9883                           ; 1 bytes @ 0x5
  9884                           
  9885  0048                     ??_EXT_INT_Initialize:	
  9886                           ; 1 bytes @ 0x5
  9887                           
  9888  0048                     ??_SYSTEM_Initialize:	
  9889                           ; 1 bytes @ 0x5
  9890                           
  9891  0048                     ??_ADCC_GetConversionResult:	
  9892                           ; 1 bytes @ 0x5
  9893                           
  9894  0048                     ??_PWM6_LoadDutyValue:	
  9895                           ; 1 bytes @ 0x5
  9896                           
  9897  0048                     ??_DATAEE_ReadByte:	
  9898                           ; 1 bytes @ 0x5
  9899                           
  9900  0048                     ?_ADC_read:	
  9901                           ; 1 bytes @ 0x5
  9902                           
  9903  0048                     ___bmul@product:	
  9904                           ; 2 bytes @ 0x5
  9905                           
  9906                           
  9907                           ; 1 bytes @ 0x5
  9908  0048                     	ds	1
  9909  0049                     cksum@res:	
  9910  0049                     ___bmul@multiplier:	
  9911                           ; 1 bytes @ 0x6
  9912                           
  9913                           
  9914                           ; 1 bytes @ 0x6
  9915  0049                     	ds	1
  9916  004A                     ??_ADC_read:	
  9917  004A                     ?_read_ring:	
  9918                           ; 1 bytes @ 0x7
  9919                           
  9920  004A                     ??_all_LED:	
  9921                           ; 1 bytes @ 0x7
  9922                           
  9923  004A                     ??_mod1_LED:	
  9924                           ; 1 bytes @ 0x7
  9925                           
  9926  004A                     ??_mod2_LED:	
  9927                           ; 1 bytes @ 0x7
  9928                           
  9929  004A                     ??_mod3_LED:	
  9930                           ; 1 bytes @ 0x7
  9931                           
  9932  004A                     ??_mod4_LED:	
  9933                           ; 1 bytes @ 0x7
  9934                           
  9935  004A                     ??_mode_select_LED:	
  9936                           ; 1 bytes @ 0x7
  9937                           
  9938  004A                     read_ring@nreg:	
  9939                           ; 1 bytes @ 0x7
  9940                           
  9941  004A                     cksum@i:	
  9942                           ; 1 bytes @ 0x7
  9943                           
  9944                           
  9945                           ; 2 bytes @ 0x7
  9946  004A                     	ds	1
  9947  004B                     read_ring@nreg_init:	
  9948                           
  9949                           ; 1 bytes @ 0x8
  9950  004B                     	ds	1
  9951  004C                     ?_DATAEE_WriteByte:	
  9952  004C                     read_ring@index:	
  9953                           ; 1 bytes @ 0x9
  9954                           
  9955  004C                     DATAEE_WriteByte@bAdd:	
  9956                           ; 1 bytes @ 0x9
  9957                           
  9958                           
  9959                           ; 2 bytes @ 0x9
  9960  004C                     	ds	1
  9961  004D                     ??_increment_subfield:	
  9962  004D                     read_ring@subindex:	
  9963                           ; 1 bytes @ 0xA
  9964                           
  9965  004D                     increment_subfield@plus:	
  9966                           ; 1 bytes @ 0xA
  9967                           
  9968                           
  9969                           ; 2 bytes @ 0xA
  9970  004D                     	ds	1
  9971  004E                     ??_read_ring:	
  9972  004E                     DATAEE_WriteByte@bData:	
  9973                           ; 1 bytes @ 0xB
  9974                           
  9975                           
  9976                           ; 1 bytes @ 0xB
  9977  004E                     	ds	1
  9978  004F                     ??_DATAEE_WriteByte:	
  9979  004F                     DATAEE_WriteByte@GIEBitValue:	
  9980                           ; 1 bytes @ 0xC
  9981                           
  9982  004F                     increment_subfield@exit:	
  9983                           ; 1 bytes @ 0xC
  9984                           
  9985                           
  9986                           ; 2 bytes @ 0xC
  9987  004F                     	ds	1
  9988  0050                     ?_push_ring:	
  9989  0050                     ??_cksum_w:	
  9990                           ; 1 bytes @ 0xD
  9991                           
  9992  0050                     ??_reset_recv:	
  9993                           ; 1 bytes @ 0xD
  9994                           
  9995  0050                     push_ring@nreg:	
  9996                           ; 1 bytes @ 0xD
  9997                           
  9998  0050                     read_ring@i:	
  9999                           ; 1 bytes @ 0xD
 10000                           
 10001  0050                     reset_recv@i:	
 10002                           ; 1 bytes @ 0xD
 10003                           
 10004                           
 10005                           ; 2 bytes @ 0xD
 10006  0050                     	ds	1
 10007  0051                     ??_clock_subfields:	
 10008  0051                     push_ring@nreg_init:	
 10009                           ; 1 bytes @ 0xE
 10010                           
 10011  0051                     read_ring@nreg_pt:	
 10012                           ; 1 bytes @ 0xE
 10013                           
 10014                           
 10015                           ; 1 bytes @ 0xE
 10016  0051                     	ds	1
 10017  0052                     ??_recoverData:	
 10018  0052                     push_ring@ring_byte:	
 10019                           ; 1 bytes @ 0xF
 10020                           
 10021  0052                     read_ring@absindex:	
 10022                           ; 1 bytes @ 0xF
 10023                           
 10024  0052                     clock_subfields@subfield:	
 10025                           ; 1 bytes @ 0xF
 10026                           
 10027                           
 10028                           ; 2 bytes @ 0xF
 10029  0052                     	ds	1
 10030  0053                     ??_push_ring:	
 10031                           
 10032                           ; 1 bytes @ 0x10
 10033  0053                     	ds	1
 10034  0054                     ??_config_routine:	
 10035                           
 10036                           ; 1 bytes @ 0x11
 10037  0054                     	ds	1
 10038  0055                     push_ring@i:	
 10039  0055                     config_routine@select_mode:	
 10040                           ; 1 bytes @ 0x12
 10041                           
 10042                           
 10043                           ; 2 bytes @ 0x12
 10044  0055                     	ds	1
 10045  0056                     push_ring@nreg_pt:	
 10046                           
 10047                           ; 1 bytes @ 0x13
 10048  0056                     	ds	1
 10049  0057                     ??_main:	
 10050                           
 10051                           ; 1 bytes @ 0x14
 10052  0057                     	ds	5
 10053                           
 10054                           	psect	maintext
 10055  007E                     __pmaintext:	
 10056 ;;
 10057 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10058 ;;
 10059 ;; *************** function _main *****************
 10060 ;; Defined at:
 10061 ;;		line 144 in file "main.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;		None
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  t5s             1    2[BANK1 ] unsigned char 
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1    wreg      void 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : B1F/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Totals:         0       5       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;Total ram usage:        9 bytes
 10080 ;; Hardware stack levels required when called:   10
 10081 ;; This function calls:
 10082 ;;		_ADC_read
 10083 ;;		_DATAEE_WriteByte
 10084 ;;		_INT_SetInterruptHandler
 10085 ;;		_LED_bin
 10086 ;;		_PWM6_LoadDutyValue
 10087 ;;		_SYSTEM_Initialize
 10088 ;;		_TMR0_SetInterruptHandler
 10089 ;;		_TMR0_StartTimer
 10090 ;;		_TMR1_SetInterruptHandler
 10091 ;;		_TMR2_SetInterruptHandler
 10092 ;;		_cksum_w
 10093 ;;		_config_routine
 10094 ;;		_push_ring
 10095 ;;		_read_ring
 10096 ;;		_recoverData
 10097 ;; This function is called by:
 10098 ;;		Startup code after reset
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           
 10103                           ;psect for function _main
 10104  007E                     _main:	
 10105  007E                     l6165:	
 10106                           ;incstack = 0
 10107                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10108                           
 10109                           
 10110                           ;main.c: 145:     SYSTEM_Initialize();
 10111  007E  318F  2789  3180   	fcall	_SYSTEM_Initialize
 10112                           
 10113                           ;main.c: 147:     TMR0_SetInterruptHandler(ISR_3s);
 10114  0081  3023               	movlw	low _ISR_3s
 10115  0082  0020               	movlb	0	; select bank0
 10116  0083  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10117  0084  300F               	movlw	high _ISR_3s
 10118  0085  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10119  0086  318D  2590  3180   	fcall	_TMR0_SetInterruptHandler
 10120                           
 10121                           ;main.c: 148:     TMR1_SetInterruptHandler(handler_clock_hms);
 10122  0089  30A9               	movlw	low _handler_clock_hms
 10123  008A  0020               	movlb	0	; select bank0
 10124  008B  00C6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10125  008C  3006               	movlw	high _handler_clock_hms
 10126  008D  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10127  008E  318D  2520  3180   	fcall	_TMR1_SetInterruptHandler
 10128                           
 10129                           ;main.c: 149:     INT_SetInterruptHandler(sw1_EXT);
 10130  0091  30D9               	movlw	low _sw1_EXT
 10131  0092  0020               	movlb	0	; select bank0
 10132  0093  00C6               	movwf	INT_SetInterruptHandler@InterruptHandler
 10133  0094  3006               	movlw	high _sw1_EXT
 10134  0095  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10135  0096  318D  251A  3180   	fcall	_INT_SetInterruptHandler
 10136                           
 10137                           ;main.c: 150:     TMR2_SetInterruptHandler(handler_clock_ms);
 10138  0099  30E2               	movlw	low _handler_clock_ms
 10139  009A  0020               	movlb	0	; select bank0
 10140  009B  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10141  009C  300C               	movlw	high _handler_clock_ms
 10142  009D  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10143  009E  318D  2526  3180   	fcall	_TMR2_SetInterruptHandler
 10144  00A1                     l6167:	
 10145  00A1                     l6169:	
 10146  00A1                     l1212:	
 10147  00A1  3096               	movlw	150
 10148  00A2  0020               	movlb	0	; select bank0
 10149  00A3  00D7               	movwf	??_main
 10150  00A4  0857               	movf	??_main,w
 10151  00A5  00EA               	movwf	_nreg
 10152  00A6                     l6173:	
 10153                           
 10154                           ;main.c: 155:     nreg_pt = 0;
 10155  00A6  01C1               	clrf	_nreg_pt
 10156  00A7                     l6175:	
 10157                           
 10158                           ;main.c: 156:     nreg_init = 0;
 10159  00A7  01C2               	clrf	_nreg_init
 10160  00A8                     l6177:	
 10161                           
 10162                           ;main.c: 157:     alaf = 1;
 10163  00A8  01B6               	clrf	_alaf
 10164  00A9  0AB6               	incf	_alaf,f
 10165  00AA                     l6179:	
 10166                           
 10167                           ;main.c: 158:     temp = 0;
 10168  00AA  01B7               	clrf	_temp
 10169  00AB                     l6181:	
 10170                           
 10171                           ;main.c: 160:     recoverData();
 10172  00AB  3181  21E5  3180   	fcall	_recoverData
 10173  00AE                     l6183:	
 10174                           
 10175                           ;main.c: 162:     PWM6_LoadDutyValue(0);
 10176  00AE  3000               	movlw	0
 10177  00AF  0020               	movlb	0	; select bank0
 10178  00B0  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 10179  00B1  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10180  00B2  318F  273C  3180   	fcall	_PWM6_LoadDutyValue
 10181  00B5                     l6185:	
 10182                           
 10183                           ;main.c: 163:     alarm = 0 ;
 10184  00B5  0020               	movlb	0	; select bank0
 10185  00B6  01B8               	clrf	_alarm	;volatile
 10186  00B7                     l6187:	
 10187  00B7  003E               	movlb	30	; select bank30
 10188  00B8  1644               	bsf	68,4	;volatile
 10189  00B9                     l6189:	
 10190                           
 10191                           ;main.c: 167:     (INTCONbits.GIE = 1);
 10192  00B9  178B               	bsf	11,7	;volatile
 10193  00BA                     l6191:	
 10194                           
 10195                           ;main.c: 170:     (INTCONbits.PEIE = 1);
 10196  00BA  170B               	bsf	11,6	;volatile
 10197  00BB                     l1215:	
 10198                           ;main.c: 173:     while (1)
 10199                           
 10200  00BB  0063               	sleep	;# 
 10201  00BC                     l6193:	
 10202                           
 10203                           ;main.c: 177:             __nop();
 10204  00BC  0000               	nop
 10205  00BD                     l6195:	
 10206                           
 10207                           ;main.c: 179:              PIE4bits.TMR1IE = 0;
 10208  00BD  002E               	movlb	14	; select bank14
 10209  00BE  101A               	bcf	26,0	;volatile
 10210                           
 10211                           ;main.c: 180:              t5s = last5s;
 10212  00BF  0020               	movlb	0	; select bank0
 10213  00C0  083B               	movf	_last5s,w	;volatile
 10214  00C1  00D7               	movwf	??_main
 10215  00C2  0857               	movf	??_main,w
 10216  00C3  0021               	movlb	1	; select bank1
 10217  00C4  00C4               	movwf	main@t5s^(0+128)
 10218  00C5                     l6197:	
 10219                           
 10220                           ;main.c: 181:              PIE4bits.TMR1IE = 1;
 10221  00C5  002E               	movlb	14	; select bank14
 10222  00C6  141A               	bsf	26,0	;volatile
 10223                           
 10224                           ;main.c: 183:              if(t5s >= pmon){
 10225  00C7  0020               	movlb	0	; select bank0
 10226  00C8  0869               	movf	_pmon,w
 10227  00C9  0021               	movlb	1	; select bank1
 10228  00CA  0244               	subwf	main@t5s^(0+128),w
 10229  00CB  1C03               	skipc
 10230  00CC  28CE               	goto	u3191
 10231  00CD  28CF               	goto	u3190
 10232  00CE                     u3191:	
 10233  00CE  28BB               	goto	l1215
 10234  00CF                     u3190:	
 10235  00CF                     l6199:	
 10236                           
 10237                           ;main.c: 184:                     PIE4bits.TMR1IE = 0;
 10238  00CF  002E               	movlb	14	; select bank14
 10239  00D0  101A               	bcf	26,0	;volatile
 10240  00D1                     l6201:	
 10241                           
 10242                           ;main.c: 185:                     last5s =0;
 10243  00D1  0020               	movlb	0	; select bank0
 10244  00D2  01BB               	clrf	_last5s	;volatile
 10245  00D3                     l6203:	
 10246                           
 10247                           ;main.c: 186:                     PIE4bits.TMR1IE = 1;
 10248  00D3  002E               	movlb	14	; select bank14
 10249  00D4  141A               	bsf	26,0	;volatile
 10250  00D5                     l6205:	
 10251                           
 10252                           ;main.c: 189:                          if(!config_mode){
 10253  00D5  0020               	movlb	0	; select bank0
 10254  00D6  0839               	movf	_config_mode,w	;volatile
 10255  00D7  1D03               	btfss	3,2
 10256  00D8  28DA               	goto	u3201
 10257  00D9  28DB               	goto	u3200
 10258  00DA                     u3201:	
 10259  00DA  29C6               	goto	l6263
 10260  00DB                     u3200:	
 10261  00DB                     l6207:	
 10262                           
 10263                           ;main.c: 191:                              convertedValue = ADC_read();
 10264  00DB  318F  2755  3180   	fcall	_ADC_read
 10265  00DE  0020               	movlb	0	; select bank0
 10266  00DF  0849               	movf	?_ADC_read+1,w
 10267  00E0  00A7               	movwf	_convertedValue+1
 10268  00E1  0848               	movf	?_ADC_read,w
 10269  00E2  00A6               	movwf	_convertedValue
 10270  00E3                     l6209:	
 10271                           
 10272                           ;main.c: 192:                              lum_bin = (convertedValue >> 8);
 10273  00E3  0827               	movf	_convertedValue+1,w
 10274  00E4  00D8               	movwf	??_main+1
 10275  00E5  0826               	movf	_convertedValue,w
 10276  00E6  00D7               	movwf	??_main
 10277  00E7  0858               	movf	??_main+1,w
 10278  00E8  00D7               	movwf	??_main
 10279  00E9  01D8               	clrf	??_main+1
 10280  00EA  0857               	movf	??_main,w
 10281  00EB  00A2               	movwf	_lum_bin
 10282  00EC  0858               	movf	??_main+1,w
 10283  00ED  00A3               	movwf	_lum_bin+1
 10284  00EE                     l6211:	
 10285                           
 10286                           ;main.c: 193:                              LED_bin(lum_bin);
 10287  00EE  0823               	movf	_lum_bin+1,w
 10288  00EF  00C7               	movwf	LED_bin@value+1
 10289  00F0  0822               	movf	_lum_bin,w
 10290  00F1  00C6               	movwf	LED_bin@value
 10291  00F2  318F  276F  3180   	fcall	_LED_bin
 10292  00F5                     l6213:	
 10293                           
 10294                           ;main.c: 195:                              __nop();
 10295  00F5  0000               	nop
 10296  00F6                     l6215:	
 10297                           
 10298                           ;main.c: 197:                              __nop();
 10299  00F6  0000               	nop
 10300  00F7                     l6217:	
 10301                           
 10302                           ;main.c: 199:                              lum_threshold = (lum_bin > 2 || temp > 25 ) &
      +                           alaf;
 10303  00F7  0021               	movlb	1	; select bank1
 10304  00F8  01C5               	clrf	_main$2302^(0+128)
 10305  00F9  0AC5               	incf	_main$2302^(0+128),f
 10306  00FA                     l6219:	
 10307  00FA  3000               	movlw	0
 10308  00FB  0020               	movlb	0	; select bank0
 10309  00FC  0223               	subwf	_lum_bin+1,w
 10310  00FD  3003               	movlw	3
 10311  00FE  1903               	skipnz
 10312  00FF  0222               	subwf	_lum_bin,w
 10313  0100  1803               	skipnc
 10314  0101  2903               	goto	u3211
 10315  0102  2904               	goto	u3210
 10316  0103                     u3211:	
 10317  0103  290C               	goto	l6225
 10318  0104                     u3210:	
 10319  0104                     l6221:	
 10320  0104  301A               	movlw	26
 10321  0105  0237               	subwf	_temp,w
 10322  0106  1803               	skipnc
 10323  0107  2909               	goto	u3221
 10324  0108  290A               	goto	u3220
 10325  0109                     u3221:	
 10326  0109  290C               	goto	l6225
 10327  010A                     u3220:	
 10328  010A                     l6223:	
 10329  010A  0021               	movlb	1	; select bank1
 10330  010B  01C5               	clrf	_main$2302^(0+128)
 10331  010C                     l6225:	
 10332  010C  0021               	movlb	1	; select bank1
 10333  010D  0845               	movf	_main$2302^(0+128),w
 10334  010E  0020               	movlb	0	; select bank0
 10335  010F  0536               	andwf	_alaf,w
 10336  0110  00D7               	movwf	??_main
 10337  0111  01D8               	clrf	??_main+1
 10338  0112  0857               	movf	??_main,w
 10339  0113  00A0               	movwf	_lum_threshold
 10340  0114  0858               	movf	??_main+1,w
 10341  0115  00A1               	movwf	_lum_threshold+1
 10342  0116                     l6227:	
 10343                           
 10344                           ;main.c: 201:                            if (temp != read_ring(nreg_pt, nreg, nreg_init,
      +                           0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10345  0116  086A               	movf	_nreg,w
 10346  0117  00D7               	movwf	??_main
 10347  0118  0857               	movf	??_main,w
 10348  0119  00CA               	movwf	read_ring@nreg
 10349  011A  0842               	movf	_nreg_init,w
 10350  011B  00D8               	movwf	??_main+1
 10351  011C  0858               	movf	??_main+1,w
 10352  011D  00CB               	movwf	read_ring@nreg_init
 10353  011E  01CC               	clrf	read_ring@index
 10354  011F  3003               	movlw	3
 10355  0120  00D9               	movwf	??_main+2
 10356  0121  0859               	movf	??_main+2,w
 10357  0122  00CD               	movwf	read_ring@subindex
 10358  0123  0841               	movf	_nreg_pt,w
 10359  0124  3186  2637  3180   	fcall	_read_ring
 10360  0127  0020               	movlb	0	; select bank0
 10361  0128  0637               	xorwf	_temp,w
 10362  0129  1D03               	skipz
 10363  012A  292C               	goto	u3231
 10364  012B  292D               	goto	u3230
 10365  012C                     u3231:	
 10366  012C  294B               	goto	l1223
 10367  012D                     u3230:	
 10368  012D                     l6229:	
 10369  012D  086A               	movf	_nreg,w
 10370  012E  00D7               	movwf	??_main
 10371  012F  0857               	movf	??_main,w
 10372  0130  00CA               	movwf	read_ring@nreg
 10373  0131  0842               	movf	_nreg_init,w
 10374  0132  00D8               	movwf	??_main+1
 10375  0133  0858               	movf	??_main+1,w
 10376  0134  00CB               	movwf	read_ring@nreg_init
 10377  0135  01CC               	clrf	read_ring@index
 10378  0136  3004               	movlw	4
 10379  0137  00D9               	movwf	??_main+2
 10380  0138  0859               	movf	??_main+2,w
 10381  0139  00CD               	movwf	read_ring@subindex
 10382  013A  0841               	movf	_nreg_pt,w
 10383  013B  3186  2637  3180   	fcall	_read_ring
 10384  013E  0020               	movlb	0	; select bank0
 10385  013F  00DA               	movwf	??_main+3
 10386  0140  01DB               	clrf	??_main+4
 10387  0141  0823               	movf	_lum_bin+1,w
 10388  0142  065B               	xorwf	??_main+4,w
 10389  0143  1D03               	skipz
 10390  0144  2947               	goto	u3245
 10391  0145  0822               	movf	_lum_bin,w
 10392  0146  065A               	xorwf	??_main+3,w
 10393  0147                     u3245:	
 10394  0147  1903               	skipnz
 10395  0148  294A               	goto	u3241
 10396  0149  294B               	goto	u3240
 10397  014A                     u3241:	
 10398  014A  298D               	goto	l6241
 10399  014B                     u3240:	
 10400  014B                     l1223:	
 10401                           
 10402                           ;main.c: 203:                                  PIE4bits.TMR1IE = 0;
 10403  014B  002E               	movlb	14	; select bank14
 10404  014C  101A               	bcf	26,0	;volatile
 10405  014D                     l6231:	
 10406                           
 10407                           ;main.c: 204:                                  ring_byte[0] = clkh;
 10408  014D  0020               	movlb	0	; select bank0
 10409  014E  0840               	movf	_clkh,w	;volatile
 10410  014F  00D7               	movwf	??_main
 10411  0150  0857               	movf	??_main,w
 10412  0151  0021               	movlb	1	; select bank1
 10413  0152  00BD               	movwf	_ring_byte^(0+128)
 10414                           
 10415                           ;main.c: 205:                                  ring_byte[1] = clkm;
 10416  0153  0020               	movlb	0	; select bank0
 10417  0154  083F               	movf	_clkm,w	;volatile
 10418  0155  00D7               	movwf	??_main
 10419  0156  0857               	movf	??_main,w
 10420  0157  0021               	movlb	1	; select bank1
 10421  0158  00BE               	movwf	(_ring_byte^(0+128)+1)
 10422                           
 10423                           ;main.c: 206:                                  ring_byte[2] = seg;
 10424  0159  0020               	movlb	0	; select bank0
 10425  015A  083E               	movf	_seg,w	;volatile
 10426  015B  00D7               	movwf	??_main
 10427  015C  0857               	movf	??_main,w
 10428  015D  0021               	movlb	1	; select bank1
 10429  015E  00BF               	movwf	(_ring_byte^(0+128)+2)
 10430  015F                     l6233:	
 10431                           
 10432                           ;main.c: 207:                                   PIE4bits.TMR1IE = 1;
 10433  015F  002E               	movlb	14	; select bank14
 10434  0160  141A               	bsf	26,0	;volatile
 10435                           
 10436                           ;main.c: 208:                                  ring_byte[3] = temp;
 10437  0161  0020               	movlb	0	; select bank0
 10438  0162  0837               	movf	_temp,w
 10439  0163  00D7               	movwf	??_main
 10440  0164  0857               	movf	??_main,w
 10441  0165  0021               	movlb	1	; select bank1
 10442  0166  00C0               	movwf	(_ring_byte^(0+128)+3)
 10443                           
 10444                           ;main.c: 209:                                  ring_byte[4] = lum_bin;
 10445  0167  0020               	movlb	0	; select bank0
 10446  0168  0822               	movf	_lum_bin,w
 10447  0169  00D7               	movwf	??_main
 10448  016A  0857               	movf	??_main,w
 10449  016B  0021               	movlb	1	; select bank1
 10450  016C  00C1               	movwf	(_ring_byte^(0+128)+4)
 10451  016D                     l6235:	
 10452                           
 10453                           ;main.c: 210:                                  push_ring(&nreg_pt, nreg, &nreg_init, rin
      +                          g_byte);
 10454  016D  0020               	movlb	0	; select bank0
 10455  016E  086A               	movf	_nreg,w
 10456  016F  00D7               	movwf	??_main
 10457  0170  0857               	movf	??_main,w
 10458  0171  00D0               	movwf	push_ring@nreg
 10459  0172  3042               	movlw	(low (_nreg_init| 0))& (0+255)
 10460  0173  00D8               	movwf	??_main+1
 10461  0174  0858               	movf	??_main+1,w
 10462  0175  00D1               	movwf	push_ring@nreg_init
 10463  0176  30BD               	movlw	(low (_ring_byte| 0))& (0+255)
 10464  0177  00D9               	movwf	??_main+2
 10465  0178  0859               	movf	??_main+2,w
 10466  0179  00D2               	movwf	push_ring@ring_byte
 10467  017A  3041               	movlw	(low (_nreg_pt| 0))& (0+255)
 10468  017B  3185  25B0  3180   	fcall	_push_ring
 10469  017E                     l6237:	
 10470                           
 10471                           ;main.c: 212:                                  DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt
      +                          );
 10472  017E  30F9               	movlw	249
 10473  017F  0020               	movlb	0	; select bank0
 10474  0180  00CC               	movwf	DATAEE_WriteByte@bAdd
 10475  0181  30F0               	movlw	240
 10476  0182  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10477  0183  0841               	movf	_nreg_pt,w
 10478  0184  00D7               	movwf	??_main
 10479  0185  0857               	movf	??_main,w
 10480  0186  00CE               	movwf	DATAEE_WriteByte@bData
 10481  0187  3187  2786  3180   	fcall	_DATAEE_WriteByte
 10482  018A                     l6239:	
 10483                           
 10484                           ;main.c: 213:                                  cksum_w();
 10485  018A  318E  2636  3180   	fcall	_cksum_w
 10486  018D                     l6241:	
 10487                           
 10488                           ;main.c: 218:                              if(lum_threshold){
 10489  018D  0020               	movlb	0	; select bank0
 10490  018E  0820               	movf	_lum_threshold,w
 10491  018F  0421               	iorwf	_lum_threshold+1,w
 10492  0190  1903               	btfsc	3,2
 10493  0191  2993               	goto	u3251
 10494  0192  2994               	goto	u3250
 10495  0193                     u3251:	
 10496  0193  29B6               	goto	l6257
 10497  0194                     u3250:	
 10498  0194                     l6243:	
 10499                           
 10500                           ;main.c: 219:                                  if(alarm == 2){
 10501  0194  3002               	movlw	2
 10502  0195  0638               	xorwf	_alarm,w	;volatile
 10503  0196  1D03               	btfss	3,2
 10504  0197  2999               	goto	u3261
 10505  0198  299A               	goto	u3260
 10506  0199                     u3261:	
 10507  0199  29A6               	goto	l6249
 10508  019A                     u3260:	
 10509  019A                     l6245:	
 10510                           
 10511                           ;main.c: 220:                                      duty_cycle +=1 ;
 10512  019A  3001               	movlw	1
 10513  019B  07A4               	addwf	_duty_cycle,f
 10514  019C  3000               	movlw	0
 10515  019D  3DA5               	addwfc	_duty_cycle+1,f
 10516  019E                     l6247:	
 10517                           
 10518                           ;main.c: 221:                                      PWM6_LoadDutyValue(duty_cycle);
 10519  019E  0825               	movf	_duty_cycle+1,w
 10520  019F  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10521  01A0  0824               	movf	_duty_cycle,w
 10522  01A1  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 10523  01A2  318F  273C  3180   	fcall	_PWM6_LoadDutyValue
 10524                           
 10525                           ;main.c: 222:                                  }
 10526  01A5  29D2               	goto	l6271
 10527  01A6                     l6249:	
 10528  01A6  0838               	movf	_alarm,w	;volatile
 10529  01A7  1D03               	btfss	3,2
 10530  01A8  29AA               	goto	u3271
 10531  01A9  29AB               	goto	u3270
 10532  01AA                     u3271:	
 10533  01AA  29C5               	goto	l1228
 10534  01AB                     u3270:	
 10535  01AB                     l6251:	
 10536                           
 10537                           ;main.c: 224:                                      PIE0bits.TMR0IE = 1;
 10538  01AB  002E               	movlb	14	; select bank14
 10539  01AC  1696               	bsf	22,5	;volatile
 10540  01AD                     l6253:	
 10541                           
 10542                           ;main.c: 225:                                      TMR0_StartTimer();
 10543  01AD  318C  24D3  3180   	fcall	_TMR0_StartTimer
 10544  01B0                     l6255:	
 10545                           
 10546                           ;main.c: 226:                                      alarm = 2 ;
 10547  01B0  3002               	movlw	2
 10548  01B1  0020               	movlb	0	; select bank0
 10549  01B2  00D7               	movwf	??_main
 10550  01B3  0857               	movf	??_main,w
 10551  01B4  00B8               	movwf	_alarm	;volatile
 10552  01B5  29D2               	goto	l6271
 10553  01B6                     l6257:	
 10554                           
 10555                           ;main.c: 230:                                  if(alarm == 2){
 10556  01B6  3002               	movlw	2
 10557  01B7  0638               	xorwf	_alarm,w	;volatile
 10558  01B8  1D03               	btfss	3,2
 10559  01B9  29BB               	goto	u3281
 10560  01BA  29BC               	goto	u3280
 10561  01BB                     u3281:	
 10562  01BB  29D2               	goto	l6271
 10563  01BC                     u3280:	
 10564  01BC                     l6259:	
 10565                           
 10566                           ;main.c: 231:                                      PWM6_LoadDutyValue(0);
 10567  01BC  3000               	movlw	0
 10568  01BD  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 10569  01BE  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10570  01BF  318F  273C  3180   	fcall	_PWM6_LoadDutyValue
 10571  01C2                     l6261:	
 10572                           
 10573                           ;main.c: 232:                                      alarm = 0 ;
 10574  01C2  0020               	movlb	0	; select bank0
 10575  01C3  01B8               	clrf	_alarm	;volatile
 10576  01C4  29D2               	goto	l6271
 10577  01C5                     l1228:	
 10578                           ;main.c: 234:                              }
 10579                           
 10580                           
 10581                           ;main.c: 236:                           }
 10582  01C5  29D2               	goto	l6271
 10583  01C6                     l6263:	
 10584  01C6  0339               	decf	_config_mode,w	;volatile
 10585  01C7  1D03               	btfss	3,2
 10586  01C8  29CA               	goto	u3291
 10587  01C9  29CB               	goto	u3290
 10588  01CA                     u3291:	
 10589  01CA  29D2               	goto	l6271
 10590  01CB                     u3290:	
 10591  01CB                     l6265:	
 10592                           
 10593                           ;main.c: 240:                            (PIE0bits.INTE = 0);
 10594  01CB  002E               	movlb	14	; select bank14
 10595  01CC  1016               	bcf	22,0	;volatile
 10596  01CD                     l6267:	
 10597                           
 10598                           ;main.c: 241:                            config_routine();
 10599  01CD  3182  227D  3180   	fcall	_config_routine
 10600  01D0                     l6269:	
 10601                           
 10602                           ;main.c: 242:                            (PIE0bits.INTE = 1);
 10603  01D0  002E               	movlb	14	; select bank14
 10604  01D1  1416               	bsf	22,0	;volatile
 10605  01D2                     l6271:	
 10606                           
 10607                           ;main.c: 245:                      _delay((unsigned long)((10)*(1000000/4000.0)));
 10608  01D2  3004               	movlw	4
 10609  01D3  0020               	movlb	0	; select bank0
 10610  01D4  00D7               	movwf	??_main
 10611  01D5  303D               	movlw	61
 10612  01D6                     u3337:	
 10613  01D6  0B89               	decfsz	9,f
 10614  01D7  29D6               	goto	u3337
 10615  01D8  0BD7               	decfsz	??_main,f
 10616  01D9  29D6               	goto	u3337
 10617  01DA  3200               	nop2
 10618  01DB                     l6273:	
 10619                           
 10620                           ;main.c: 247:                     }while(alarm == 2);
 10621  01DB  3002               	movlw	2
 10622  01DC  0020               	movlb	0	; select bank0
 10623  01DD  0638               	xorwf	_alarm,w	;volatile
 10624  01DE  1903               	btfsc	3,2
 10625  01DF  29E1               	goto	u3301
 10626  01E0  29E2               	goto	u3300
 10627  01E1                     u3301:	
 10628  01E1  28D5               	goto	l6205
 10629  01E2                     u3300:	
 10630  01E2  28BB               	goto	l1215
 10631  01E3  3180  285B         	ljmp	start
 10632  01E5                     __end_of_main:	
 10633                           
 10634                           	psect	text1
 10635  01E5                     __ptext1:	
 10636 ;; *************** function _recoverData *****************
 10637 ;; Defined at:
 10638 ;;		line 11 in file "eeprom_rw.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg, status,2, status,0, pclath, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;Total ram usage:        1 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    9
 10659 ;; This function calls:
 10660 ;;		_DATAEE_ReadByte
 10661 ;;		_DATAEE_WriteByte
 10662 ;;		_cksum
 10663 ;;		_cksum_w
 10664 ;;		_reset_recv
 10665 ;; This function is called by:
 10666 ;;		_main
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           
 10671                           ;psect for function _recoverData
 10672  01E5                     _recoverData:	
 10673  01E5                     l6033:	
 10674                           ;incstack = 0
 10675                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10676                           
 10677                           
 10678                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10679  01E5  30F5               	movlw	245
 10680  01E6  0020               	movlb	0	; select bank0
 10681  01E7  00C6               	movwf	DATAEE_ReadByte@bAdd
 10682  01E8  30F0               	movlw	240
 10683  01E9  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10684  01EA  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10685  01ED  3AAB               	xorlw	171
 10686  01EE  1D03               	skipz
 10687  01EF  29F1               	goto	u3021
 10688  01F0  29F2               	goto	u3020
 10689  01F1                     u3021:	
 10690  01F1  2A46               	goto	l6039
 10691  01F2                     u3020:	
 10692  01F2                     l6035:	
 10693                           
 10694                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10695  01F2  3187  27CA  3181   	fcall	_cksum
 10696  01F5  0020               	movlb	0	; select bank0
 10697  01F6  00D2               	movwf	??_recoverData
 10698  01F7  30FF               	movlw	255
 10699  01F8  00C6               	movwf	DATAEE_ReadByte@bAdd
 10700  01F9  30F0               	movlw	240
 10701  01FA  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10702  01FB  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10703  01FE  0020               	movlb	0	; select bank0
 10704  01FF  0652               	xorwf	??_recoverData,w
 10705  0200  1D03               	skipz
 10706  0201  2A03               	goto	u3031
 10707  0202  2A04               	goto	u3030
 10708  0203                     u3031:	
 10709  0203  2A46               	goto	l6039
 10710  0204                     u3030:	
 10711  0204                     l6037:	
 10712                           
 10713                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10714  0204  30F6               	movlw	246
 10715  0205  00C6               	movwf	DATAEE_ReadByte@bAdd
 10716  0206  30F0               	movlw	240
 10717  0207  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10718  0208  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10719  020B  0020               	movlb	0	; select bank0
 10720  020C  00D2               	movwf	??_recoverData
 10721  020D  0852               	movf	??_recoverData,w
 10722  020E  00C0               	movwf	_clkh	;volatile
 10723                           
 10724                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10725  020F  30F7               	movlw	247
 10726  0210  00C6               	movwf	DATAEE_ReadByte@bAdd
 10727  0211  30F0               	movlw	240
 10728  0212  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10729  0213  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10730  0216  0020               	movlb	0	; select bank0
 10731  0217  00D2               	movwf	??_recoverData
 10732  0218  0852               	movf	??_recoverData,w
 10733  0219  00BF               	movwf	_clkm	;volatile
 10734                           
 10735                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10736  021A  30F8               	movlw	248
 10737  021B  00C6               	movwf	DATAEE_ReadByte@bAdd
 10738  021C  30F0               	movlw	240
 10739  021D  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10740  021E  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10741  0221  0020               	movlb	0	; select bank0
 10742  0222  00D2               	movwf	??_recoverData
 10743  0223  0852               	movf	??_recoverData,w
 10744  0224  00EA               	movwf	_nreg
 10745                           
 10746                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10747  0225  30F9               	movlw	249
 10748  0226  00C6               	movwf	DATAEE_ReadByte@bAdd
 10749  0227  30F0               	movlw	240
 10750  0228  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10751  0229  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10752  022C  0020               	movlb	0	; select bank0
 10753  022D  00D2               	movwf	??_recoverData
 10754  022E  0852               	movf	??_recoverData,w
 10755  022F  00C1               	movwf	_nreg_pt
 10756                           
 10757                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10758  0230  30FA               	movlw	250
 10759  0231  00C6               	movwf	DATAEE_ReadByte@bAdd
 10760  0232  30F0               	movlw	240
 10761  0233  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10762  0234  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10763  0237  0020               	movlb	0	; select bank0
 10764  0238  00D2               	movwf	??_recoverData
 10765  0239  0852               	movf	??_recoverData,w
 10766  023A  00E9               	movwf	_pmon
 10767                           
 10768                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10769  023B  30FB               	movlw	251
 10770  023C  00C6               	movwf	DATAEE_ReadByte@bAdd
 10771  023D  30F0               	movlw	240
 10772  023E  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 10773  023F  318E  2617  3181   	fcall	_DATAEE_ReadByte
 10774  0242  0020               	movlb	0	; select bank0
 10775  0243  00D2               	movwf	??_recoverData
 10776  0244  0852               	movf	??_recoverData,w
 10777  0245  00E8               	movwf	_tala
 10778  0246                     l6039:	
 10779                           
 10780                           ;eeprom_rw.c: 24:     reset_recv();
 10781  0246  318F  27A5  3181   	fcall	_reset_recv
 10782  0249                     l6041:	
 10783                           
 10784                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10785  0249  30F5               	movlw	245
 10786  024A  0020               	movlb	0	; select bank0
 10787  024B  00CC               	movwf	DATAEE_WriteByte@bAdd
 10788  024C  30F0               	movlw	240
 10789  024D  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10790  024E  30AB               	movlw	171
 10791  024F  00D2               	movwf	??_recoverData
 10792  0250  0852               	movf	??_recoverData,w
 10793  0251  00CE               	movwf	DATAEE_WriteByte@bData
 10794  0252  3187  2786  3181   	fcall	_DATAEE_WriteByte
 10795  0255                     l6043:	
 10796                           
 10797                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10798  0255  30F8               	movlw	248
 10799  0256  0020               	movlb	0	; select bank0
 10800  0257  00CC               	movwf	DATAEE_WriteByte@bAdd
 10801  0258  30F0               	movlw	240
 10802  0259  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10803  025A  086A               	movf	_nreg,w
 10804  025B  00D2               	movwf	??_recoverData
 10805  025C  0852               	movf	??_recoverData,w
 10806  025D  00CE               	movwf	DATAEE_WriteByte@bData
 10807  025E  3187  2786  3181   	fcall	_DATAEE_WriteByte
 10808  0261                     l6045:	
 10809                           
 10810                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10811  0261  30FA               	movlw	250
 10812  0262  0020               	movlb	0	; select bank0
 10813  0263  00CC               	movwf	DATAEE_WriteByte@bAdd
 10814  0264  30F0               	movlw	240
 10815  0265  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10816  0266  0869               	movf	_pmon,w
 10817  0267  00D2               	movwf	??_recoverData
 10818  0268  0852               	movf	??_recoverData,w
 10819  0269  00CE               	movwf	DATAEE_WriteByte@bData
 10820  026A  3187  2786  3181   	fcall	_DATAEE_WriteByte
 10821  026D                     l6047:	
 10822                           
 10823                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10824  026D  30FB               	movlw	251
 10825  026E  0020               	movlb	0	; select bank0
 10826  026F  00CC               	movwf	DATAEE_WriteByte@bAdd
 10827  0270  30F0               	movlw	240
 10828  0271  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10829  0272  0868               	movf	_tala,w
 10830  0273  00D2               	movwf	??_recoverData
 10831  0274  0852               	movf	??_recoverData,w
 10832  0275  00CE               	movwf	DATAEE_WriteByte@bData
 10833  0276  3187  2786  3181   	fcall	_DATAEE_WriteByte
 10834  0279                     l6049:	
 10835                           
 10836                           ;eeprom_rw.c: 31:     cksum_w();
 10837  0279  318E  2636  3181   	fcall	_cksum_w
 10838  027C                     l1546:	
 10839  027C  0008               	return
 10840  027D                     __end_of_recoverData:	
 10841                           
 10842                           	psect	text2
 10843  0FA5                     __ptext2:	
 10844 ;; *************** function _reset_recv *****************
 10845 ;; Defined at:
 10846 ;;		line 75 in file "eeprom_rw.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  i               2   13[BANK0 ] unsigned int 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      void 
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0, pclath, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;Total ram usage:        2 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    7
 10867 ;; This function calls:
 10868 ;;		_DATAEE_WriteByte
 10869 ;; This function is called by:
 10870 ;;		_recoverData
 10871 ;;		_recover
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           
 10876                           ;psect for function _reset_recv
 10877  0FA5                     _reset_recv:	
 10878  0FA5                     l5991:	
 10879                           ;incstack = 0
 10880                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10881                           
 10882                           
 10883                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10884  0FA5  30F5               	movlw	245
 10885  0FA6  0020               	movlb	0	; select bank0
 10886  0FA7  00D0               	movwf	reset_recv@i
 10887  0FA8  30F0               	movlw	240
 10888  0FA9  00D1               	movwf	reset_recv@i+1
 10889  0FAA                     l5995:	
 10890                           
 10891                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10892  0FAA  0851               	movf	reset_recv@i+1,w
 10893  0FAB  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10894  0FAC  0850               	movf	reset_recv@i,w
 10895  0FAD  00CC               	movwf	DATAEE_WriteByte@bAdd
 10896  0FAE  01CE               	clrf	DATAEE_WriteByte@bData
 10897  0FAF  3187  2786  318F   	fcall	_DATAEE_WriteByte
 10898  0FB2                     l5997:	
 10899  0FB2  3001               	movlw	1
 10900  0FB3  0020               	movlb	0	; select bank0
 10901  0FB4  07D0               	addwf	reset_recv@i,f
 10902  0FB5  3000               	movlw	0
 10903  0FB6  3DD1               	addwfc	reset_recv@i+1,f
 10904  0FB7                     l5999:	
 10905  0FB7  30F1               	movlw	241
 10906  0FB8  0251               	subwf	reset_recv@i+1,w
 10907  0FB9  3000               	movlw	0
 10908  0FBA  1903               	skipnz
 10909  0FBB  0250               	subwf	reset_recv@i,w
 10910  0FBC  1C03               	skipc
 10911  0FBD  2FBF               	goto	u2991
 10912  0FBE  2FC0               	goto	u2990
 10913  0FBF                     u2991:	
 10914  0FBF  2FAA               	goto	l5995
 10915  0FC0                     u2990:	
 10916  0FC0                     l1573:	
 10917  0FC0  0008               	return
 10918  0FC1                     __end_of_reset_recv:	
 10919                           
 10920                           	psect	text3
 10921  0E36                     __ptext3:	
 10922 ;; *************** function _cksum_w *****************
 10923 ;; Defined at:
 10924 ;;		line 61 in file "eeprom_rw.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0, pclath, cstack
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:        1 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:    8
 10945 ;; This function calls:
 10946 ;;		_DATAEE_WriteByte
 10947 ;;		_cksum
 10948 ;; This function is called by:
 10949 ;;		_main
 10950 ;;		_recoverData
 10951 ;;		_recover
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _cksum_w
 10957  0E36                     _cksum_w:	
 10958  0E36                     l5917:	
 10959                           ;incstack = 0
 10960                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10961                           
 10962                           
 10963                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10964  0E36  30FF               	movlw	255
 10965  0E37  0020               	movlb	0	; select bank0
 10966  0E38  00CC               	movwf	DATAEE_WriteByte@bAdd
 10967  0E39  30F0               	movlw	240
 10968  0E3A  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 10969  0E3B  3187  27CA  318E   	fcall	_cksum
 10970  0E3E  0020               	movlb	0	; select bank0
 10971  0E3F  00D0               	movwf	??_cksum_w
 10972  0E40  0850               	movf	??_cksum_w,w
 10973  0E41  00CE               	movwf	DATAEE_WriteByte@bData
 10974  0E42  3187  2786  318E   	fcall	_DATAEE_WriteByte
 10975  0E45                     l1563:	
 10976  0E45  0008               	return
 10977  0E46                     __end_of_cksum_w:	
 10978                           
 10979                           	psect	text4
 10980  07CA                     __ptext4:	
 10981 ;; *************** function _cksum *****************
 10982 ;; Defined at:
 10983 ;;		line 66 in file "eeprom_rw.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;		None
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  i               2    7[BANK0 ] unsigned int 
 10988 ;;  res             1    6[BANK0 ] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      unsigned char 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, pclath, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;Total ram usage:        4 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    7
 11005 ;; This function calls:
 11006 ;;		_DATAEE_ReadByte
 11007 ;; This function is called by:
 11008 ;;		_recoverData
 11009 ;;		_cksum_w
 11010 ;;		_recover
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function _cksum
 11016  07CA                     _cksum:	
 11017  07CA                     l5761:	
 11018                           ;incstack = 0
 11019                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 11020                           
 11021                           
 11022                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 11023  07CA  0020               	movlb	0	; select bank0
 11024  07CB  01C9               	clrf	cksum@res
 11025  07CC                     l5763:	
 11026                           
 11027                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 11028  07CC  30F5               	movlw	245
 11029  07CD  00CA               	movwf	cksum@i
 11030  07CE  30F0               	movlw	240
 11031  07CF  00CB               	movwf	cksum@i+1
 11032  07D0                     l5769:	
 11033                           
 11034                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 11035  07D0  084B               	movf	cksum@i+1,w
 11036  07D1  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 11037  07D2  084A               	movf	cksum@i,w
 11038  07D3  00C6               	movwf	DATAEE_ReadByte@bAdd
 11039  07D4  318E  2617  3187   	fcall	_DATAEE_ReadByte
 11040  07D7  0020               	movlb	0	; select bank0
 11041  07D8  00C8               	movwf	??_cksum
 11042  07D9  0848               	movf	??_cksum,w
 11043  07DA  07C9               	addwf	cksum@res,f
 11044  07DB                     l5771:	
 11045                           
 11046                           ;eeprom_rw.c: 71:     }
 11047  07DB  3001               	movlw	1
 11048  07DC  07CA               	addwf	cksum@i,f
 11049  07DD  3000               	movlw	0
 11050  07DE  3DCB               	addwfc	cksum@i+1,f
 11051  07DF                     l5773:	
 11052  07DF  30F0               	movlw	240
 11053  07E0  024B               	subwf	cksum@i+1,w
 11054  07E1  30FF               	movlw	255
 11055  07E2  1903               	skipnz
 11056  07E3  024A               	subwf	cksum@i,w
 11057  07E4  1C03               	skipc
 11058  07E5  2FE7               	goto	u2931
 11059  07E6  2FE8               	goto	u2930
 11060  07E7                     u2931:	
 11061  07E7  2FD0               	goto	l5769
 11062  07E8                     u2930:	
 11063  07E8                     l5775:	
 11064                           
 11065                           ;eeprom_rw.c: 72:     return res;
 11066  07E8  0849               	movf	cksum@res,w
 11067  07E9                     l1568:	
 11068  07E9  0008               	return
 11069  07EA                     __end_of_cksum:	
 11070                           
 11071                           	psect	text5
 11072  0637                     __ptext5:	
 11073 ;; *************** function _read_ring *****************
 11074 ;; Defined at:
 11075 ;;		line 43 in file "eeprom_rw.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  nreg_pt         1    wreg     unsigned char 
 11078 ;;  nreg            1    7[BANK0 ] unsigned char 
 11079 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 11080 ;;  index           1    9[BANK0 ] unsigned char 
 11081 ;;  subindex        1   10[BANK0 ] unsigned char 
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 11084 ;;  absindex        1   15[BANK0 ] unsigned char 
 11085 ;;  i               1   13[BANK0 ] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      unsigned char 
 11088 ;; Registers used:
 11089 ;;		wreg, status,2, status,0, pclath, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;Total ram usage:        9 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:    7
 11102 ;; This function calls:
 11103 ;;		_DATAEE_ReadByte
 11104 ;;		___bmul
 11105 ;; This function is called by:
 11106 ;;		_main
 11107 ;; This function uses a non-reentrant model
 11108 ;;
 11109                           
 11110                           
 11111                           ;psect for function _read_ring
 11112  0637                     _read_ring:	
 11113                           
 11114                           ;incstack = 0
 11115                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 11116                           ;read_ring@nreg_pt stored from wreg
 11117  0637  0020               	movlb	0	; select bank0
 11118  0638  00D1               	movwf	read_ring@nreg_pt
 11119  0639                     l6063:	
 11120  0639                     l6065:	
 11121                           
 11122                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 11123  0639  084C               	movf	read_ring@index,w
 11124  063A  024A               	subwf	read_ring@nreg,w
 11125  063B  1C03               	skipc
 11126  063C  2E3E               	goto	u3051
 11127  063D  2E3F               	goto	u3050
 11128  063E                     u3051:	
 11129  063E  2E69               	goto	l6077
 11130  063F                     u3050:	
 11131  063F                     l6067:	
 11132  063F  084B               	movf	read_ring@nreg_init,w
 11133  0640  1903               	btfsc	3,2
 11134  0641  2E43               	goto	u3061
 11135  0642  2E44               	goto	u3060
 11136  0643                     u3061:	
 11137  0643  2E69               	goto	l6077
 11138  0644                     u3060:	
 11139  0644                     l6069:	
 11140                           
 11141                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 11142  0644  3005               	movlw	5
 11143  0645  00CE               	movwf	??_read_ring
 11144  0646  084E               	movf	??_read_ring,w
 11145  0647  00C6               	movwf	___bmul@multiplicand
 11146  0648  084C               	movf	read_ring@index,w
 11147  0649  3187  27EA  3186   	fcall	___bmul
 11148  064C  0020               	movlb	0	; select bank0
 11149  064D  074D               	addwf	read_ring@subindex,w
 11150  064E  00CF               	movwf	??_read_ring+1
 11151  064F  084F               	movf	??_read_ring+1,w
 11152  0650  00D2               	movwf	read_ring@absindex
 11153  0651                     l6071:	
 11154                           
 11155                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 11156  0651  0852               	movf	read_ring@absindex,w
 11157  0652  0251               	subwf	read_ring@nreg_pt,w
 11158  0653  1C03               	skipc
 11159  0654  2E56               	goto	u3071
 11160  0655  2E57               	goto	u3070
 11161  0656                     u3071:	
 11162  0656  2E5E               	goto	l6075
 11163  0657                     u3070:	
 11164  0657                     l6073:	
 11165                           
 11166                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 11167  0657  0851               	movf	read_ring@nreg_pt,w
 11168  0658  0752               	addwf	read_ring@absindex,w
 11169  0659  3EFB               	addlw	251
 11170  065A  00CE               	movwf	??_read_ring
 11171  065B  084E               	movf	??_read_ring,w
 11172  065C  00D0               	movwf	read_ring@i
 11173  065D  2E6B               	goto	l6081
 11174  065E                     l6075:	
 11175                           
 11176                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 11177  065E  0351               	decf	read_ring@nreg_pt,w
 11178  065F  3AFF               	xorlw	255
 11179  0660  00CE               	movwf	??_read_ring
 11180  0661  0852               	movf	read_ring@absindex,w
 11181  0662  024E               	subwf	??_read_ring,w
 11182  0663  074A               	addwf	read_ring@nreg,w
 11183  0664  3E05               	addlw	5
 11184  0665  00CF               	movwf	??_read_ring+1
 11185  0666  084F               	movf	??_read_ring+1,w
 11186  0667  00D0               	movwf	read_ring@i
 11187  0668  2E6B               	goto	l6081
 11188  0669                     l6077:	
 11189                           
 11190                           ;eeprom_rw.c: 56:         return 0;
 11191  0669  3000               	movlw	0
 11192  066A  2E75               	goto	l1560
 11193  066B                     l6081:	
 11194                           
 11195                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 11196  066B  0850               	movf	read_ring@i,w
 11197  066C  3E00               	addlw	0
 11198  066D  00C6               	movwf	DATAEE_ReadByte@bAdd
 11199  066E  30F0               	movlw	240
 11200  066F  1803               	skipnc
 11201  0670  30F1               	movlw	241
 11202  0671  00C7               	movwf	DATAEE_ReadByte@bAdd+1
 11203  0672  318E  2617  3186   	fcall	_DATAEE_ReadByte
 11204  0675                     l1560:	
 11205  0675  0008               	return
 11206  0676                     __end_of_read_ring:	
 11207                           
 11208                           	psect	text6
 11209  07EA                     __ptext6:	
 11210 ;; *************** function ___bmul *****************
 11211 ;; Defined at:
 11212 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  multiplier      1    wreg     unsigned char 
 11215 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;  multiplier      1    6[BANK0 ] unsigned char 
 11218 ;;  product         1    5[BANK0 ] unsigned char 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1    wreg      unsigned char 
 11221 ;; Registers used:
 11222 ;;		wreg, status,2, status,0
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11228 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;Total ram usage:        4 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:    6
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_read_ring
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function ___bmul
 11244  07EA                     ___bmul:	
 11245                           
 11246                           ;incstack = 0
 11247                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11248                           ;___bmul@multiplier stored from wreg
 11249  07EA  0020               	movlb	0	; select bank0
 11250  07EB  00C9               	movwf	___bmul@multiplier
 11251  07EC                     l6001:	
 11252  07EC  01C8               	clrf	___bmul@product
 11253  07ED                     l6003:	
 11254  07ED  1C49               	btfss	___bmul@multiplier,0
 11255  07EE  2FF0               	goto	u3001
 11256  07EF  2FF1               	goto	u3000
 11257  07F0                     u3001:	
 11258  07F0  2FF5               	goto	l6007
 11259  07F1                     u3000:	
 11260  07F1                     l6005:	
 11261  07F1  0846               	movf	___bmul@multiplicand,w
 11262  07F2  00C7               	movwf	??___bmul
 11263  07F3  0847               	movf	??___bmul,w
 11264  07F4  07C8               	addwf	___bmul@product,f
 11265  07F5                     l6007:	
 11266  07F5  1003               	clrc
 11267  07F6  0DC6               	rlf	___bmul@multiplicand,f
 11268  07F7                     l6009:	
 11269  07F7  1003               	clrc
 11270  07F8  0CC9               	rrf	___bmul@multiplier,f
 11271  07F9  0849               	movf	___bmul@multiplier,w
 11272  07FA  1D03               	btfss	3,2
 11273  07FB  2FFD               	goto	u3011
 11274  07FC  2FFE               	goto	u3010
 11275  07FD                     u3011:	
 11276  07FD  2FED               	goto	l6003
 11277  07FE                     u3010:	
 11278  07FE                     l6011:	
 11279  07FE  0848               	movf	___bmul@product,w
 11280  07FF                     l1799:	
 11281  07FF  0008               	return
 11282  0800                     __end_of___bmul:	
 11283                           
 11284                           	psect	text7
 11285  0E17                     __ptext7:	
 11286 ;; *************** function _DATAEE_ReadByte *****************
 11287 ;; Defined at:
 11288 ;;		line 202 in file "mcc_generated_files/memory.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  bAdd            2    3[BANK0 ] unsigned short 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;		None
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  1    wreg      unsigned char 
 11295 ;; Registers used:
 11296 ;;		wreg, status,2
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;Total ram usage:        2 bytes
 11307 ;; Hardware stack levels used:    1
 11308 ;; Hardware stack levels required when called:    6
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_recoverData
 11313 ;;		_read_ring
 11314 ;;		_cksum
 11315 ;;		_recover
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           
 11320                           ;psect for function _DATAEE_ReadByte
 11321  0E17                     _DATAEE_ReadByte:	
 11322  0E17                     l5629:	
 11323                           ;incstack = 0
 11324                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11325                           
 11326                           
 11327                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11328  0E17  0020               	movlb	0	; select bank0
 11329  0E18  0847               	movf	DATAEE_ReadByte@bAdd+1,w
 11330  0E19  0030               	movlb	16	; select bank16
 11331  0E1A  009B               	movwf	27	;volatile
 11332  0E1B                     l5631:	
 11333                           
 11334                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11335  0E1B  0020               	movlb	0	; select bank0
 11336  0E1C  0846               	movf	DATAEE_ReadByte@bAdd,w
 11337  0E1D  0030               	movlb	16	; select bank16
 11338  0E1E  009A               	movwf	26	;volatile
 11339  0E1F                     l5633:	
 11340                           
 11341                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11342  0E1F  171E               	bsf	30,6	;volsfr
 11343  0E20                     l5635:	
 11344                           
 11345                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11346  0E20  141E               	bsf	30,0	;volsfr
 11347  0E21                     l5637:	
 11348                           
 11349                           ;mcc_generated_files/memory.c: 208:     __nop();
 11350  0E21  0000               	nop
 11351  0E22                     l5639:	
 11352                           
 11353                           ;mcc_generated_files/memory.c: 209:     __nop();
 11354  0E22  0000               	nop
 11355  0E23                     l5641:	
 11356                           
 11357                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11358  0E23  0030               	movlb	16	; select bank16
 11359  0E24  081C               	movf	28,w	;volatile
 11360  0E25                     l963:	
 11361  0E25  0008               	return
 11362  0E26                     __end_of_DATAEE_ReadByte:	
 11363                           
 11364                           	psect	text8
 11365  05B0                     __ptext8:	
 11366 ;; *************** function _push_ring *****************
 11367 ;; Defined at:
 11368 ;;		line 34 in file "eeprom_rw.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  nreg_pt         1    wreg     PTR unsigned char 
 11371 ;;		 -> nreg_pt(1), 
 11372 ;;  nreg            1   13[BANK0 ] unsigned char 
 11373 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 11374 ;;		 -> nreg_init(1), 
 11375 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 11376 ;;		 -> ring_byte(5), 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 11379 ;;		 -> nreg_pt(1), 
 11380 ;;  i               1   18[BANK0 ] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11390 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;Total ram usage:        7 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    7
 11397 ;; This function calls:
 11398 ;;		_DATAEE_WriteByte
 11399 ;; This function is called by:
 11400 ;;		_main
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           
 11405                           ;psect for function _push_ring
 11406  05B0                     _push_ring:	
 11407                           
 11408                           ;incstack = 0
 11409                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11410                           ;push_ring@nreg_pt stored from wreg
 11411  05B0  0020               	movlb	0	; select bank0
 11412  05B1  00D6               	movwf	push_ring@nreg_pt
 11413  05B2                     l6085:	
 11414                           
 11415                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 11416  05B2  0851               	movf	push_ring@nreg_init,w
 11417  05B3  0086               	movwf	6
 11418  05B4  0187               	clrf	7
 11419  05B5  0801               	movf	1,w
 11420  05B6  1D03               	btfss	3,2
 11421  05B7  2DB9               	goto	u3081
 11422  05B8  2DBA               	goto	u3080
 11423  05B9                     u3081:	
 11424  05B9  2DBF               	goto	l6089
 11425  05BA                     u3080:	
 11426  05BA                     l6087:	
 11427  05BA  0851               	movf	push_ring@nreg_init,w
 11428  05BB  0086               	movwf	6
 11429  05BC  0187               	clrf	7
 11430  05BD  0181               	clrf	1
 11431  05BE  0A81               	incf	1,f
 11432  05BF                     l6089:	
 11433                           
 11434                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 11435  05BF  01D5               	clrf	push_ring@i
 11436  05C0                     l6095:	
 11437                           
 11438                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 11439  05C0  0856               	movf	push_ring@nreg_pt,w
 11440  05C1  0086               	movwf	6
 11441  05C2  0187               	clrf	7
 11442  05C3  0850               	movf	push_ring@nreg,w
 11443  05C4  0201               	subwf	1,w
 11444  05C5  1C03               	skipc
 11445  05C6  2DC8               	goto	u3091
 11446  05C7  2DC9               	goto	u3090
 11447  05C8                     u3091:	
 11448  05C8  2DCD               	goto	l6099
 11449  05C9                     u3090:	
 11450  05C9                     l6097:	
 11451  05C9  0856               	movf	push_ring@nreg_pt,w
 11452  05CA  0086               	movwf	6
 11453  05CB  0187               	clrf	7
 11454  05CC  0181               	clrf	1
 11455  05CD                     l6099:	
 11456                           
 11457                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 11458  05CD  0856               	movf	push_ring@nreg_pt,w
 11459  05CE  0086               	movwf	6
 11460  05CF  0187               	clrf	7
 11461  05D0  0801               	movf	1,w
 11462  05D1  3E00               	addlw	0
 11463  05D2  00CC               	movwf	DATAEE_WriteByte@bAdd
 11464  05D3  30F0               	movlw	240
 11465  05D4  1803               	skipnc
 11466  05D5  30F1               	movlw	241
 11467  05D6  00CD               	movwf	DATAEE_WriteByte@bAdd+1
 11468  05D7  0855               	movf	push_ring@i,w
 11469  05D8  0752               	addwf	push_ring@ring_byte,w
 11470  05D9  00D3               	movwf	??_push_ring
 11471  05DA  0853               	movf	??_push_ring,w
 11472  05DB  0086               	movwf	6
 11473  05DC  0187               	clrf	7
 11474  05DD  0801               	movf	1,w
 11475  05DE  00D4               	movwf	??_push_ring+1
 11476  05DF  0854               	movf	??_push_ring+1,w
 11477  05E0  00CE               	movwf	DATAEE_WriteByte@bData
 11478  05E1  3187  2786  3185   	fcall	_DATAEE_WriteByte
 11479  05E4                     l6101:	
 11480                           
 11481                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 11482  05E4  3001               	movlw	1
 11483  05E5  0020               	movlb	0	; select bank0
 11484  05E6  00D3               	movwf	??_push_ring
 11485  05E7  0856               	movf	push_ring@nreg_pt,w
 11486  05E8  0086               	movwf	6
 11487  05E9  0187               	clrf	7
 11488  05EA  0853               	movf	??_push_ring,w
 11489  05EB  0781               	addwf	1,f
 11490  05EC                     l6103:	
 11491                           
 11492                           ;eeprom_rw.c: 40:     }
 11493  05EC  3001               	movlw	1
 11494  05ED  00D3               	movwf	??_push_ring
 11495  05EE  0853               	movf	??_push_ring,w
 11496  05EF  07D5               	addwf	push_ring@i,f
 11497  05F0                     l6105:	
 11498  05F0  3005               	movlw	5
 11499  05F1  0255               	subwf	push_ring@i,w
 11500  05F2  1C03               	skipc
 11501  05F3  2DF5               	goto	u3101
 11502  05F4  2DF6               	goto	u3100
 11503  05F5                     u3101:	
 11504  05F5  2DC0               	goto	l6095
 11505  05F6                     u3100:	
 11506  05F6                     l1553:	
 11507  05F6  0008               	return
 11508  05F7                     __end_of_push_ring:	
 11509                           
 11510                           	psect	text9
 11511  0786                     __ptext9:	
 11512 ;; *************** function _DATAEE_WriteByte *****************
 11513 ;; Defined at:
 11514 ;;		line 180 in file "mcc_generated_files/memory.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;  bAdd            2    9[BANK0 ] unsigned short 
 11517 ;;  bData           1   11[BANK0 ] unsigned char 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11529 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;Total ram usage:        4 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:    6
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_main
 11540 ;;		_recoverData
 11541 ;;		_push_ring
 11542 ;;		_cksum_w
 11543 ;;		_reset_recv
 11544 ;;		_recover
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           
 11549                           ;psect for function _DATAEE_WriteByte
 11550  0786                     _DATAEE_WriteByte:	
 11551  0786                     l5695:	
 11552                           ;incstack = 0
 11553                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 11554                           
 11555                           
 11556                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 11557  0786  3000               	movlw	0
 11558  0787  1B8B               	btfsc	11,7	;volatile
 11559  0788  3001               	movlw	1
 11560  0789  0020               	movlb	0	; select bank0
 11561  078A  00CF               	movwf	DATAEE_WriteByte@GIEBitValue
 11562                           
 11563                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 11564  078B  084D               	movf	DATAEE_WriteByte@bAdd+1,w
 11565  078C  0030               	movlb	16	; select bank16
 11566  078D  009B               	movwf	27	;volatile
 11567  078E                     l5697:	
 11568                           
 11569                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 11570  078E  0020               	movlb	0	; select bank0
 11571  078F  084C               	movf	DATAEE_WriteByte@bAdd,w
 11572  0790  0030               	movlb	16	; select bank16
 11573  0791  009A               	movwf	26	;volatile
 11574  0792                     l5699:	
 11575                           
 11576                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 11577  0792  0020               	movlb	0	; select bank0
 11578  0793  084E               	movf	DATAEE_WriteByte@bData,w
 11579  0794  0030               	movlb	16	; select bank16
 11580  0795  009C               	movwf	28	;volatile
 11581  0796                     l5701:	
 11582                           
 11583                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 11584  0796  171E               	bsf	30,6	;volsfr
 11585  0797                     l5703:	
 11586                           
 11587                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 11588  0797  151E               	bsf	30,2	;volsfr
 11589  0798                     l5705:	
 11590                           
 11591                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 11592  0798  138B               	bcf	11,7	;volatile
 11593  0799                     l5707:	
 11594                           
 11595                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 11596  0799  3055               	movlw	85
 11597  079A  009F               	movwf	31	;volsfr
 11598  079B                     l5709:	
 11599                           
 11600                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 11601  079B  30AA               	movlw	170
 11602  079C  009F               	movwf	31	;volsfr
 11603  079D                     l5711:	
 11604                           
 11605                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 11606  079D  149E               	bsf	30,1	;volsfr
 11607  079E                     l957:	
 11608                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 11609                           
 11610                           
 11611                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 11612  079E  189E               	btfsc	30,1	;volsfr
 11613  079F  2FA1               	goto	u2871
 11614  07A0  2FA2               	goto	u2870
 11615  07A1                     u2871:	
 11616  07A1  2F9E               	goto	l957
 11617  07A2                     u2870:	
 11618  07A2                     l959:	
 11619                           
 11620                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 11621  07A2  111E               	bcf	30,2	;volsfr
 11622  07A3                     l5713:	
 11623                           
 11624                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 11625  07A3  0020               	movlb	0	; select bank0
 11626  07A4  0C4F               	rrf	DATAEE_WriteByte@GIEBitValue,w
 11627  07A5  1C03               	skipc
 11628  07A6  138B               	bcf	11,7	;volatile
 11629  07A7  1803               	skipnc
 11630  07A8  178B               	bsf	11,7	;volatile
 11631  07A9                     l960:	
 11632  07A9  0008               	return
 11633  07AA                     __end_of_DATAEE_WriteByte:	
 11634                           
 11635                           	psect	text10
 11636  027D                     __ptext10:	
 11637 ;; *************** function _config_routine *****************
 11638 ;; Defined at:
 11639 ;;		line 260 in file "main.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  select_mode     2   18[BANK0 ] unsigned int 
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      void 
 11646 ;; Registers used:
 11647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;Total ram usage:        3 bytes
 11658 ;; Hardware stack levels used:    1
 11659 ;; Hardware stack levels required when called:    9
 11660 ;; This function calls:
 11661 ;;		_all_LED
 11662 ;;		_checkDebounceSW1
 11663 ;;		_checkDebounceSW2
 11664 ;;		_clock_subfields
 11665 ;;		_mod1_LED
 11666 ;;		_mod2_LED
 11667 ;;		_mod3_LED
 11668 ;;		_mod4_LED
 11669 ;;		_mode_select_LED
 11670 ;; This function is called by:
 11671 ;;		_main
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           
 11676                           ;psect for function _config_routine
 11677  027D                     _config_routine:	
 11678  027D                     l6109:	
 11679                           ;incstack = 0
 11680                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11681                           
 11682                           
 11683                           ;main.c: 262:     unsigned int select_mode =0;
 11684  027D  0020               	movlb	0	; select bank0
 11685  027E  01D5               	clrf	config_routine@select_mode
 11686  027F  01D6               	clrf	config_routine@select_mode+1
 11687  0280                     l6111:	
 11688                           
 11689                           ;main.c: 263:       last_ms = clkms;
 11690  0280  087D               	movf	_clkms,w	;volatile
 11691  0281  00D4               	movwf	??_config_routine
 11692  0282  0854               	movf	??_config_routine,w
 11693  0283  00BD               	movwf	_last_ms
 11694  0284                     l6113:	
 11695                           
 11696                           ;main.c: 264:       last_ms2 = clkms;
 11697  0284  087D               	movf	_clkms,w	;volatile
 11698  0285  00D4               	movwf	??_config_routine
 11699  0286  0854               	movf	??_config_routine,w
 11700  0287  00BC               	movwf	_last_ms2
 11701  0288                     l6115:	
 11702                           
 11703                           ;main.c: 268:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 11704  0288  0A64               	incf	_mode_field_subfield,w
 11705  0289  1D03               	skipz
 11706  028A  2A8F               	goto	u3111
 11707  028B  0A65               	incf	_mode_field_subfield+1,w
 11708  028C  1D03               	btfss	3,2
 11709  028D  2A8F               	goto	u3111
 11710  028E  2A90               	goto	u3110
 11711  028F                     u3111:	
 11712  028F  2A99               	goto	l6121
 11713  0290                     u3110:	
 11714  0290                     l6117:	
 11715  0290  0855               	movf	config_routine@select_mode,w
 11716  0291  0456               	iorwf	config_routine@select_mode+1,w
 11717  0292  1D03               	btfss	3,2
 11718  0293  2A95               	goto	u3121
 11719  0294  2A96               	goto	u3120
 11720  0295                     u3121:	
 11721  0295  2A99               	goto	l6121
 11722  0296                     u3120:	
 11723  0296                     l6119:	
 11724                           
 11725                           ;main.c: 269:                         all_LED();}
 11726  0296  3183  236D  3182   	fcall	_all_LED
 11727  0299                     l6121:	
 11728                           
 11729                           ;main.c: 271:                 if(!PORTBbits.RB4){
 11730  0299  0020               	movlb	0	; select bank0
 11731  029A  1A0D               	btfsc	13,4	;volatile
 11732  029B  2A9D               	goto	u3131
 11733  029C  2A9E               	goto	u3130
 11734  029D                     u3131:	
 11735  029D  2AD9               	goto	l6143
 11736  029E                     u3130:	
 11737  029E                     l6123:	
 11738                           
 11739                           ;main.c: 272:                     if(checkDebounceSW1()){
 11740  029E  3183  23C8  3182   	fcall	_checkDebounceSW1
 11741  02A1  3A00               	xorlw	0
 11742  02A2  1903               	skipnz
 11743  02A3  2AA5               	goto	u3141
 11744  02A4  2AA6               	goto	u3140
 11745  02A5                     u3141:	
 11746  02A5  2AD4               	goto	l6141
 11747  02A6                     u3140:	
 11748  02A6                     l6125:	
 11749                           
 11750                           ;main.c: 274:                             select_mode +=1;
 11751  02A6  3001               	movlw	1
 11752  02A7  0020               	movlb	0	; select bank0
 11753  02A8  07D5               	addwf	config_routine@select_mode,f
 11754  02A9  3000               	movlw	0
 11755  02AA  3DD6               	addwfc	config_routine@select_mode+1,f
 11756                           
 11757                           ;main.c: 276:                         switch(select_mode){
 11758  02AB  2AC1               	goto	l6139
 11759  02AC                     l6127:	
 11760  02AC  318D  25A3  3182   	fcall	_mod1_LED
 11761  02AF  2AD4               	goto	l6141
 11762  02B0                     l6129:	
 11763  02B0  318D  2599  3182   	fcall	_mod2_LED
 11764  02B3  2AD4               	goto	l6141
 11765  02B4                     l6131:	
 11766  02B4  318D  25AE  3182   	fcall	_mod3_LED
 11767  02B7  2AD4               	goto	l6141
 11768  02B8                     l6133:	
 11769  02B8  318D  25B9  3182   	fcall	_mod4_LED
 11770  02BB  2AD4               	goto	l6141
 11771  02BC                     l6135:	
 11772  02BC  01D5               	clrf	config_routine@select_mode
 11773  02BD  01D6               	clrf	config_routine@select_mode+1
 11774  02BE  01B9               	clrf	_config_mode	;volatile
 11775  02BF  01B8               	clrf	_alarm	;volatile
 11776                           
 11777                           ;main.c: 282:                             break;
 11778  02C0  2AD4               	goto	l6141
 11779  02C1                     l6139:	
 11780                           
 11781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11782                           ; Switch size 1, requested type "simple"
 11783                           ; Number of cases is 1, Range of values is 0 to 0
 11784                           ; switch strategies available:
 11785                           ; Name         Instructions Cycles
 11786                           ; simple_byte            4     3 (average)
 11787                           ; direct_byte            8     6 (fixed)
 11788                           ; jumptable            260     6 (fixed)
 11789                           ;	Chosen strategy is simple_byte
 11790  02C1  0856               	movf	config_routine@select_mode+1,w
 11791  02C2  3A00               	xorlw	0	; case 0
 11792  02C3  1903               	skipnz
 11793  02C4  2AC6               	goto	l6443
 11794  02C5  2ABC               	goto	l6135
 11795  02C6                     l6443:	
 11796                           
 11797                           ; Switch size 1, requested type "simple"
 11798                           ; Number of cases is 4, Range of values is 1 to 4
 11799                           ; switch strategies available:
 11800                           ; Name         Instructions Cycles
 11801                           ; simple_byte           13     7 (average)
 11802                           ; direct_byte           17     9 (fixed)
 11803                           ; jumptable            263     9 (fixed)
 11804                           ;	Chosen strategy is simple_byte
 11805  02C6  0855               	movf	config_routine@select_mode,w
 11806  02C7  3A01               	xorlw	1	; case 1
 11807  02C8  1903               	skipnz
 11808  02C9  2AAC               	goto	l6127
 11809  02CA  3A03               	xorlw	3	; case 2
 11810  02CB  1903               	skipnz
 11811  02CC  2AB0               	goto	l6129
 11812  02CD  3A01               	xorlw	1	; case 3
 11813  02CE  1903               	skipnz
 11814  02CF  2AB4               	goto	l6131
 11815  02D0  3A07               	xorlw	7	; case 4
 11816  02D1  1903               	skipnz
 11817  02D2  2AB8               	goto	l6133
 11818  02D3  2ABC               	goto	l6135
 11819  02D4                     l6141:	
 11820                           
 11821                           ;main.c: 287:                         last_ms = clkms;
 11822  02D4  087D               	movf	_clkms,w	;volatile
 11823  02D5  0020               	movlb	0	; select bank0
 11824  02D6  00D4               	movwf	??_config_routine
 11825  02D7  0854               	movf	??_config_routine,w
 11826  02D8  00BD               	movwf	_last_ms
 11827  02D9                     l6143:	
 11828                           
 11829                           ;main.c: 291:                 if(!PORTCbits.RC5){
 11830  02D9  1A8E               	btfsc	14,5	;volatile
 11831  02DA  2ADC               	goto	u3151
 11832  02DB  2ADD               	goto	u3150
 11833  02DC                     u3151:	
 11834  02DC  2AF7               	goto	l6155
 11835  02DD                     u3150:	
 11836  02DD                     l6145:	
 11837                           
 11838                           ;main.c: 292:                     if(checkDebounceSW2()){
 11839  02DD  3184  24D0  3182   	fcall	_checkDebounceSW2
 11840  02E0  3A00               	xorlw	0
 11841  02E1  1903               	skipnz
 11842  02E2  2AE4               	goto	u3161
 11843  02E3  2AE5               	goto	u3160
 11844  02E4                     u3161:	
 11845  02E4  2AF7               	goto	l6155
 11846  02E5                     u3160:	
 11847  02E5                     l6147:	
 11848                           
 11849                           ;main.c: 293:                         mode_field_subfield[0] = select_mode;
 11850  02E5  0020               	movlb	0	; select bank0
 11851  02E6  0856               	movf	config_routine@select_mode+1,w
 11852  02E7  00E5               	movwf	_mode_field_subfield+1
 11853  02E8  0855               	movf	config_routine@select_mode,w
 11854  02E9  00E4               	movwf	_mode_field_subfield
 11855  02EA                     l6149:	
 11856                           
 11857                           ;main.c: 294:                         mode_select_LED();
 11858  02EA  318F  27E0  3182   	fcall	_mode_select_LED
 11859  02ED                     l6151:	
 11860                           
 11861                           ;main.c: 296:                         if(select_mode== 1){
 11862  02ED  0020               	movlb	0	; select bank0
 11863  02EE  0355               	decf	config_routine@select_mode,w
 11864  02EF  0456               	iorwf	config_routine@select_mode+1,w
 11865  02F0  1D03               	btfss	3,2
 11866  02F1  2AF3               	goto	u3171
 11867  02F2  2AF4               	goto	u3170
 11868  02F3                     u3171:	
 11869  02F3  2AF7               	goto	l6155
 11870  02F4                     u3170:	
 11871  02F4                     l6153:	
 11872                           
 11873                           ;main.c: 297:                             clock_subfields();
 11874  02F4  3183  230A  3182   	fcall	_clock_subfields
 11875  02F7                     l6155:	
 11876                           
 11877                           ;main.c: 303:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 11878  02F7  30A6               	movlw	166
 11879  02F8                     u3347:	
 11880  02F8  0B89               	decfsz	9,f
 11881  02F9  2AF8               	goto	u3347
 11882  02FA  3200               	nop2
 11883  02FB                     l6157:	
 11884                           
 11885                           ;main.c: 305:             }while(config_mode == 1);
 11886  02FB  0020               	movlb	0	; select bank0
 11887  02FC  0339               	decf	_config_mode,w	;volatile
 11888  02FD  1903               	btfsc	3,2
 11889  02FE  2B00               	goto	u3181
 11890  02FF  2B01               	goto	u3180
 11891  0300                     u3181:	
 11892  0300  2A88               	goto	l6115
 11893  0301                     u3180:	
 11894  0301                     l6159:	
 11895                           
 11896                           ;main.c: 307:     mode_field_subfield[0] = -1;
 11897  0301  30FF               	movlw	255
 11898  0302  00E4               	movwf	_mode_field_subfield
 11899  0303  30FF               	movlw	255
 11900  0304  00E5               	movwf	_mode_field_subfield+1
 11901                           
 11902                           ;main.c: 308:     mode_field_subfield[1] = -1;
 11903  0305  30FF               	movlw	255
 11904  0306  00E6               	movwf	_mode_field_subfield+2
 11905  0307  30FF               	movlw	255
 11906  0308  00E7               	movwf	_mode_field_subfield+3
 11907  0309                     l1253:	
 11908  0309  0008               	return
 11909  030A                     __end_of_config_routine:	
 11910                           
 11911                           	psect	text11
 11912  0FE0                     __ptext11:	
 11913 ;; *************** function _mode_select_LED *****************
 11914 ;; Defined at:
 11915 ;;		line 536 in file "main.c"
 11916 ;; Parameters:    Size  Location     Type
 11917 ;;		None
 11918 ;; Auto vars:     Size  Location     Type
 11919 ;;		None
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  1    wreg      void 
 11922 ;; Registers used:
 11923 ;;		wreg, status,2, status,0, pclath, cstack
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;Total ram usage:        1 bytes
 11934 ;; Hardware stack levels used:    1
 11935 ;; Hardware stack levels required when called:    7
 11936 ;; This function calls:
 11937 ;;		_PWM6_LoadDutyValue
 11938 ;; This function is called by:
 11939 ;;		_config_routine
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           
 11944                           ;psect for function _mode_select_LED
 11945  0FE0                     _mode_select_LED:	
 11946  0FE0                     l5943:	
 11947                           ;incstack = 0
 11948                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 11949                           
 11950                           
 11951                           ;main.c: 539:             PWM6_LoadDutyValue(1023);
 11952  0FE0  30FF               	movlw	255
 11953  0FE1  0020               	movlb	0	; select bank0
 11954  0FE2  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 11955  0FE3  3003               	movlw	3
 11956  0FE4  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11957  0FE5  318F  273C  318F   	fcall	_PWM6_LoadDutyValue
 11958  0FE8                     l5945:	
 11959  0FE8  0020               	movlb	0	; select bank0
 11960  0FE9  1616               	bsf	22,4	;volatile
 11961  0FEA                     l5947:	
 11962                           
 11963                           ;main.c: 541:             _delay((unsigned long)((500)*(1000000/4000.0)));
 11964  0FEA  30A3               	movlw	163
 11965  0FEB  0020               	movlb	0	; select bank0
 11966  0FEC  00CA               	movwf	??_mode_select_LED
 11967  0FED  3055               	movlw	85
 11968  0FEE                     u3357:	
 11969  0FEE  0B89               	decfsz	9,f
 11970  0FEF  2FEE               	goto	u3357
 11971  0FF0  0BCA               	decfsz	??_mode_select_LED,f
 11972  0FF1  2FEE               	goto	u3357
 11973  0FF2                     l5949:	
 11974  0FF2  0020               	movlb	0	; select bank0
 11975  0FF3  1696               	bsf	22,5	;volatile
 11976  0FF4                     l5951:	
 11977                           
 11978                           ;main.c: 543:             _delay((unsigned long)((500)*(1000000/4000.0)));
 11979  0FF4  30A3               	movlw	163
 11980  0FF5  0020               	movlb	0	; select bank0
 11981  0FF6  00CA               	movwf	??_mode_select_LED
 11982  0FF7  3055               	movlw	85
 11983  0FF8                     u3367:	
 11984  0FF8  0B89               	decfsz	9,f
 11985  0FF9  2FF8               	goto	u3367
 11986  0FFA  0BCA               	decfsz	??_mode_select_LED,f
 11987  0FFB  2FF8               	goto	u3367
 11988  0FFC                     l5953:	
 11989  0FFC  0020               	movlb	0	; select bank0
 11990  0FFD  1216               	bcf	22,4	;volatile
 11991  0FFE                     l5955:	
 11992  0FFE  1296               	bcf	22,5	;volatile
 11993  0FFF                     l1361:	
 11994  0FFF  0008               	return
 11995  1000                     __end_of_mode_select_LED:	
 11996                           
 11997                           	psect	text12
 11998  030A                     __ptext12:	
 11999 ;; *************** function _clock_subfields *****************
 12000 ;; Defined at:
 12001 ;;		line 335 in file "main.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;  subfield        2   15[BANK0 ] unsigned int 
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;Total ram usage:        3 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    8
 12022 ;; This function calls:
 12023 ;;		_checkDebounceSW1
 12024 ;;		_checkDebounceSW2
 12025 ;;		_increment_subfield
 12026 ;;		_mod1_LED
 12027 ;;		_mod2_LED
 12028 ;;		_mod3_LED
 12029 ;;		_mod4_LED
 12030 ;; This function is called by:
 12031 ;;		_config_routine
 12032 ;; This function uses a non-reentrant model
 12033 ;;
 12034                           
 12035                           
 12036                           ;psect for function _clock_subfields
 12037  030A                     _clock_subfields:	
 12038  030A                     l5957:	
 12039                           ;incstack = 0
 12040                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12041                           
 12042                           
 12043                           ;main.c: 337:     unsigned int subfield = 1;
 12044  030A  3001               	movlw	1
 12045  030B  0020               	movlb	0	; select bank0
 12046  030C  00D2               	movwf	clock_subfields@subfield
 12047  030D  3000               	movlw	0
 12048  030E  00D3               	movwf	clock_subfields@subfield+1
 12049  030F                     l5959:	
 12050                           
 12051                           ;main.c: 341:                 if(!PORTBbits.RB4){
 12052  030F  1A0D               	btfsc	13,4	;volatile
 12053  0310  2B12               	goto	u2941
 12054  0311  2B13               	goto	u2940
 12055  0312                     u2941:	
 12056  0312  2B36               	goto	l5975
 12057  0313                     u2940:	
 12058  0313                     l5961:	
 12059                           
 12060                           ;main.c: 342:                     if(checkDebounceSW1()){
 12061  0313  3183  23C8  3183   	fcall	_checkDebounceSW1
 12062  0316  3A00               	xorlw	0
 12063  0317  1903               	skipnz
 12064  0318  2B1A               	goto	u2951
 12065  0319  2B1B               	goto	u2950
 12066  031A                     u2951:	
 12067  031A  2B20               	goto	l1268
 12068  031B                     u2950:	
 12069  031B                     l5963:	
 12070                           
 12071                           ;main.c: 343:                             subfield +=1;
 12072  031B  3001               	movlw	1
 12073  031C  0020               	movlb	0	; select bank0
 12074  031D  07D2               	addwf	clock_subfields@subfield,f
 12075  031E  3000               	movlw	0
 12076  031F  3DD3               	addwfc	clock_subfields@subfield+1,f
 12077  0320                     l1268:	
 12078                           ;main.c: 344:                         }
 12079                           
 12080                           
 12081                           ;main.c: 345:                         last_ms = clkms;
 12082  0320  087D               	movf	_clkms,w	;volatile
 12083  0321  0020               	movlb	0	; select bank0
 12084  0322  00D1               	movwf	??_clock_subfields
 12085  0323  0851               	movf	??_clock_subfields,w
 12086  0324  00BD               	movwf	_last_ms
 12087  0325  2B36               	goto	l5975
 12088  0326                     l5965:	
 12089  0326  318D  25A3  3183   	fcall	_mod1_LED
 12090  0329  2B49               	goto	l1271
 12091  032A                     l5967:	
 12092  032A  318D  2599  3183   	fcall	_mod2_LED
 12093  032D  2B49               	goto	l1271
 12094  032E                     l5969:	
 12095  032E  318D  25AE  3183   	fcall	_mod3_LED
 12096  0331  2B49               	goto	l1271
 12097  0332                     l5971:	
 12098  0332  318D  25B9  3183   	fcall	_mod4_LED
 12099  0335  2B49               	goto	l1271
 12100  0336                     l5975:	
 12101                           
 12102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12103                           ; Switch size 1, requested type "simple"
 12104                           ; Number of cases is 1, Range of values is 0 to 0
 12105                           ; switch strategies available:
 12106                           ; Name         Instructions Cycles
 12107                           ; simple_byte            4     3 (average)
 12108                           ; direct_byte            8     6 (fixed)
 12109                           ; jumptable            260     6 (fixed)
 12110                           ;	Chosen strategy is simple_byte
 12111  0336  0853               	movf	clock_subfields@subfield+1,w
 12112  0337  3A00               	xorlw	0	; case 0
 12113  0338  1903               	skipnz
 12114  0339  2B3B               	goto	l6445
 12115  033A  2B49               	goto	l1271
 12116  033B                     l6445:	
 12117                           
 12118                           ; Switch size 1, requested type "simple"
 12119                           ; Number of cases is 4, Range of values is 1 to 4
 12120                           ; switch strategies available:
 12121                           ; Name         Instructions Cycles
 12122                           ; simple_byte           13     7 (average)
 12123                           ; direct_byte           17     9 (fixed)
 12124                           ; jumptable            263     9 (fixed)
 12125                           ;	Chosen strategy is simple_byte
 12126  033B  0852               	movf	clock_subfields@subfield,w
 12127  033C  3A01               	xorlw	1	; case 1
 12128  033D  1903               	skipnz
 12129  033E  2B26               	goto	l5965
 12130  033F  3A03               	xorlw	3	; case 2
 12131  0340  1903               	skipnz
 12132  0341  2B2A               	goto	l5967
 12133  0342  3A01               	xorlw	1	; case 3
 12134  0343  1903               	skipnz
 12135  0344  2B2E               	goto	l5969
 12136  0345  3A07               	xorlw	7	; case 4
 12137  0346  1903               	skipnz
 12138  0347  2B32               	goto	l5971
 12139  0348  2B49               	goto	l1271
 12140  0349                     l1271:	
 12141                           
 12142                           ;main.c: 359:                 if(!PORTCbits.RC5){
 12143  0349  0020               	movlb	0	; select bank0
 12144  034A  1A8E               	btfsc	14,5	;volatile
 12145  034B  2B4D               	goto	u2961
 12146  034C  2B4E               	goto	u2960
 12147  034D                     u2961:	
 12148  034D  2B5E               	goto	l5983
 12149  034E                     u2960:	
 12150  034E                     l5977:	
 12151                           
 12152                           ;main.c: 360:                     if(checkDebounceSW2()){
 12153  034E  3184  24D0  3183   	fcall	_checkDebounceSW2
 12154  0351  3A00               	xorlw	0
 12155  0352  1903               	skipnz
 12156  0353  2B55               	goto	u2971
 12157  0354  2B56               	goto	u2970
 12158  0355                     u2971:	
 12159  0355  2B5E               	goto	l5983
 12160  0356                     u2970:	
 12161  0356                     l5979:	
 12162                           
 12163                           ;main.c: 362:                         mode_field_subfield[1] = subfield;
 12164  0356  0020               	movlb	0	; select bank0
 12165  0357  0853               	movf	clock_subfields@subfield+1,w
 12166  0358  00E7               	movwf	_mode_field_subfield+3
 12167  0359  0852               	movf	clock_subfields@subfield,w
 12168  035A  00E6               	movwf	_mode_field_subfield+2
 12169  035B                     l5981:	
 12170                           
 12171                           ;main.c: 363:                         increment_subfield();
 12172  035B  3185  25F7  3183   	fcall	_increment_subfield
 12173  035E                     l5983:	
 12174                           
 12175                           ;main.c: 367:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 12176  035E  30A6               	movlw	166
 12177  035F                     u3377:	
 12178  035F  0B89               	decfsz	9,f
 12179  0360  2B5F               	goto	u3377
 12180  0361  3200               	nop2
 12181  0362                     l5985:	
 12182                           
 12183                           ;main.c: 369:             }while(subfield <= 4 );
 12184  0362  3000               	movlw	0
 12185  0363  0020               	movlb	0	; select bank0
 12186  0364  0253               	subwf	clock_subfields@subfield+1,w
 12187  0365  3005               	movlw	5
 12188  0366  1903               	skipnz
 12189  0367  0252               	subwf	clock_subfields@subfield,w
 12190  0368  1C03               	skipc
 12191  0369  2B6B               	goto	u2981
 12192  036A  2B6C               	goto	u2980
 12193  036B                     u2981:	
 12194  036B  2B0F               	goto	l5959
 12195  036C                     u2980:	
 12196  036C                     l1279:	
 12197  036C  0008               	return
 12198  036D                     __end_of_clock_subfields:	
 12199                           
 12200                           	psect	text13
 12201  0DB9                     __ptext13:	
 12202 ;; *************** function _mod4_LED *****************
 12203 ;; Defined at:
 12204 ;;		line 487 in file "main.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0, pclath, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;Total ram usage:        0 bytes
 12223 ;; Hardware stack levels used:    1
 12224 ;; Hardware stack levels required when called:    7
 12225 ;; This function calls:
 12226 ;;		_PWM6_LoadDutyValue
 12227 ;; This function is called by:
 12228 ;;		_config_routine
 12229 ;;		_clock_subfields
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           
 12234                           ;psect for function _mod4_LED
 12235  0DB9                     _mod4_LED:	
 12236  0DB9                     l5735:	
 12237                           ;incstack = 0
 12238                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 12239                           
 12240                           
 12241                           ;main.c: 488:     LATA = 0;
 12242  0DB9  0020               	movlb	0	; select bank0
 12243  0DBA  0196               	clrf	22	;volatile
 12244  0DBB                     l5737:	
 12245                           
 12246                           ;main.c: 489:     PWM6_LoadDutyValue(0);
 12247  0DBB  3000               	movlw	0
 12248  0DBC  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12249  0DBD  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12250  0DBE  318F  273C  318D   	fcall	_PWM6_LoadDutyValue
 12251  0DC1                     l5739:	
 12252  0DC1  0020               	movlb	0	; select bank0
 12253  0DC2  1616               	bsf	22,4	;volatile
 12254  0DC3                     l1336:	
 12255  0DC3  0008               	return
 12256  0DC4                     __end_of_mod4_LED:	
 12257                           
 12258                           	psect	text14
 12259  0DAE                     __ptext14:	
 12260 ;; *************** function _mod3_LED *****************
 12261 ;; Defined at:
 12262 ;;		line 480 in file "main.c"
 12263 ;; Parameters:    Size  Location     Type
 12264 ;;		None
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;		None
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  1    wreg      void 
 12269 ;; Registers used:
 12270 ;;		wreg, status,2, status,0, pclath, cstack
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;Total ram usage:        0 bytes
 12281 ;; Hardware stack levels used:    1
 12282 ;; Hardware stack levels required when called:    7
 12283 ;; This function calls:
 12284 ;;		_PWM6_LoadDutyValue
 12285 ;; This function is called by:
 12286 ;;		_config_routine
 12287 ;;		_clock_subfields
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           
 12292                           ;psect for function _mod3_LED
 12293  0DAE                     _mod3_LED:	
 12294  0DAE                     l5729:	
 12295                           ;incstack = 0
 12296                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 12297                           
 12298                           
 12299                           ;main.c: 481:     LATA = 0;
 12300  0DAE  0020               	movlb	0	; select bank0
 12301  0DAF  0196               	clrf	22	;volatile
 12302  0DB0                     l5731:	
 12303                           
 12304                           ;main.c: 482:     PWM6_LoadDutyValue(0);
 12305  0DB0  3000               	movlw	0
 12306  0DB1  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12307  0DB2  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12308  0DB3  318F  273C  318D   	fcall	_PWM6_LoadDutyValue
 12309  0DB6                     l5733:	
 12310  0DB6  0020               	movlb	0	; select bank0
 12311  0DB7  1696               	bsf	22,5	;volatile
 12312  0DB8                     l1331:	
 12313  0DB8  0008               	return
 12314  0DB9                     __end_of_mod3_LED:	
 12315                           
 12316                           	psect	text15
 12317  0D99                     __ptext15:	
 12318 ;; *************** function _mod2_LED *****************
 12319 ;; Defined at:
 12320 ;;		line 475 in file "main.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, status,2, status,0, pclath, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    7
 12341 ;; This function calls:
 12342 ;;		_PWM6_LoadDutyValue
 12343 ;; This function is called by:
 12344 ;;		_config_routine
 12345 ;;		_clock_subfields
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _mod2_LED
 12351  0D99                     _mod2_LED:	
 12352  0D99                     l5725:	
 12353                           ;incstack = 0
 12354                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 12355                           
 12356                           
 12357                           ;main.c: 476:     LATA = 0;
 12358  0D99  0020               	movlb	0	; select bank0
 12359  0D9A  0196               	clrf	22	;volatile
 12360  0D9B                     l5727:	
 12361                           
 12362                           ;main.c: 477:     PWM6_LoadDutyValue(1023);
 12363  0D9B  30FF               	movlw	255
 12364  0D9C  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12365  0D9D  3003               	movlw	3
 12366  0D9E  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12367  0D9F  318F  273C  318D   	fcall	_PWM6_LoadDutyValue
 12368  0DA2                     l1326:	
 12369  0DA2  0008               	return
 12370  0DA3                     __end_of_mod2_LED:	
 12371                           
 12372                           	psect	text16
 12373  0DA3                     __ptext16:	
 12374 ;; *************** function _mod1_LED *****************
 12375 ;; Defined at:
 12376 ;;		line 468 in file "main.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;		None
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      void 
 12383 ;; Registers used:
 12384 ;;		wreg, status,2, status,0, pclath, cstack
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;Total ram usage:        0 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; Hardware stack levels required when called:    7
 12397 ;; This function calls:
 12398 ;;		_PWM6_LoadDutyValue
 12399 ;; This function is called by:
 12400 ;;		_config_routine
 12401 ;;		_clock_subfields
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           
 12406                           ;psect for function _mod1_LED
 12407  0DA3                     _mod1_LED:	
 12408  0DA3                     l5719:	
 12409                           ;incstack = 0
 12410                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 12411                           
 12412                           
 12413                           ;main.c: 469:     LATA = 0;
 12414  0DA3  0020               	movlb	0	; select bank0
 12415  0DA4  0196               	clrf	22	;volatile
 12416  0DA5                     l5721:	
 12417                           
 12418                           ;main.c: 470:     PWM6_LoadDutyValue(0);
 12419  0DA5  3000               	movlw	0
 12420  0DA6  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12421  0DA7  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12422  0DA8  318F  273C  318D   	fcall	_PWM6_LoadDutyValue
 12423  0DAB                     l5723:	
 12424  0DAB  0020               	movlb	0	; select bank0
 12425  0DAC  1796               	bsf	22,7	;volatile
 12426  0DAD                     l1323:	
 12427  0DAD  0008               	return
 12428  0DAE                     __end_of_mod1_LED:	
 12429                           
 12430                           	psect	text17
 12431  05F7                     __ptext17:	
 12432 ;; *************** function _increment_subfield *****************
 12433 ;; Defined at:
 12434 ;;		line 311 in file "main.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  exit            2   12[BANK0 ] int 
 12439 ;;  plus            2   10[BANK0 ] int 
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1    wreg      void 
 12442 ;; Registers used:
 12443 ;;		wreg, status,2, status,0, pclath, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12453 ;;Total ram usage:        4 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:    7
 12456 ;; This function calls:
 12457 ;;		_PWM6_LoadDutyValue
 12458 ;;		_checkDebounceSW1
 12459 ;;		_checkDebounceSW2
 12460 ;; This function is called by:
 12461 ;;		_clock_subfields
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           
 12466                           ;psect for function _increment_subfield
 12467  05F7                     _increment_subfield:	
 12468  05F7                     l5741:	
 12469                           ;incstack = 0
 12470                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 12471                           
 12472                           
 12473                           ;main.c: 313:     int plus = 10;
 12474  05F7  300A               	movlw	10
 12475  05F8  0020               	movlb	0	; select bank0
 12476  05F9  00CD               	movwf	increment_subfield@plus
 12477  05FA  3000               	movlw	0
 12478  05FB  00CE               	movwf	increment_subfield@plus+1
 12479  05FC                     l5743:	
 12480                           
 12481                           ;main.c: 314:     int exit = 0;
 12482  05FC  01CF               	clrf	increment_subfield@exit
 12483  05FD  01D0               	clrf	increment_subfield@exit+1
 12484  05FE                     l5745:	
 12485                           
 12486                           ;main.c: 316:     PWM6_LoadDutyValue(0);
 12487  05FE  3000               	movlw	0
 12488  05FF  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12489  0600  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12490  0601  318F  273C  3185   	fcall	_PWM6_LoadDutyValue
 12491                           
 12492                           ;main.c: 318:            while(exit == 0) {
 12493  0604  2E2F               	goto	l5759
 12494  0605                     l1257:	
 12495                           
 12496                           ;main.c: 320:                if(!PORTCbits.RC5){
 12497  0605  1A8E               	btfsc	14,5	;volatile
 12498  0606  2E08               	goto	u2881
 12499  0607  2E09               	goto	u2880
 12500  0608                     u2881:	
 12501  0608  2E1D               	goto	l5753
 12502  0609                     u2880:	
 12503  0609                     l5747:	
 12504                           
 12505                           ;main.c: 321:                     if(checkDebounceSW2()){
 12506  0609  3184  24D0  3185   	fcall	_checkDebounceSW2
 12507  060C  3A00               	xorlw	0
 12508  060D  1903               	skipnz
 12509  060E  2E10               	goto	u2891
 12510  060F  2E11               	goto	u2890
 12511  0610                     u2891:	
 12512  0610  2E1D               	goto	l5753
 12513  0611                     u2890:	
 12514  0611                     l5749:	
 12515                           
 12516                           ;main.c: 322:                          plus += 100;
 12517  0611  3064               	movlw	100
 12518  0612  0020               	movlb	0	; select bank0
 12519  0613  07CD               	addwf	increment_subfield@plus,f
 12520  0614  3000               	movlw	0
 12521  0615  3DCE               	addwfc	increment_subfield@plus+1,f
 12522  0616                     l5751:	
 12523                           
 12524                           ;main.c: 323:                          PWM6_LoadDutyValue(plus);
 12525  0616  084E               	movf	increment_subfield@plus+1,w
 12526  0617  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12527  0618  084D               	movf	increment_subfield@plus,w
 12528  0619  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12529  061A  318F  273C  3185   	fcall	_PWM6_LoadDutyValue
 12530  061D                     l5753:	
 12531                           
 12532                           ;main.c: 326:                if(!PORTBbits.RB4){
 12533  061D  0020               	movlb	0	; select bank0
 12534  061E  1A0D               	btfsc	13,4	;volatile
 12535  061F  2E21               	goto	u2901
 12536  0620  2E22               	goto	u2900
 12537  0621                     u2901:	
 12538  0621  2E2F               	goto	l5759
 12539  0622                     u2900:	
 12540  0622                     l5755:	
 12541                           
 12542                           ;main.c: 327:                     if(checkDebounceSW1()){
 12543  0622  3183  23C8  3185   	fcall	_checkDebounceSW1
 12544  0625  3A00               	xorlw	0
 12545  0626  1903               	skipnz
 12546  0627  2E29               	goto	u2911
 12547  0628  2E2A               	goto	u2910
 12548  0629                     u2911:	
 12549  0629  2E2F               	goto	l5759
 12550  062A                     u2910:	
 12551  062A                     l5757:	
 12552                           
 12553                           ;main.c: 328:                         exit = 1;
 12554  062A  3001               	movlw	1
 12555  062B  0020               	movlb	0	; select bank0
 12556  062C  00CF               	movwf	increment_subfield@exit
 12557  062D  3000               	movlw	0
 12558  062E  00D0               	movwf	increment_subfield@exit+1
 12559  062F                     l5759:	
 12560                           
 12561                           ;main.c: 318:            while(exit == 0) {
 12562  062F  0020               	movlb	0	; select bank0
 12563  0630  084F               	movf	increment_subfield@exit,w
 12564  0631  0450               	iorwf	increment_subfield@exit+1,w
 12565  0632  1903               	btfsc	3,2
 12566  0633  2E35               	goto	u2921
 12567  0634  2E36               	goto	u2920
 12568  0635                     u2921:	
 12569  0635  2E05               	goto	l1257
 12570  0636                     u2920:	
 12571  0636                     l1263:	
 12572  0636  0008               	return
 12573  0637                     __end_of_increment_subfield:	
 12574                           
 12575                           	psect	text18
 12576  04D0                     __ptext18:	
 12577 ;; *************** function _checkDebounceSW2 *****************
 12578 ;; Defined at:
 12579 ;;		line 516 in file "main.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;		None
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;		None
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      unsigned char 
 12586 ;; Registers used:
 12587 ;;		wreg, status,2, status,0
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/0
 12590 ;;		On exit  : 0/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;Total ram usage:        7 bytes
 12598 ;; Hardware stack levels used:    1
 12599 ;; Hardware stack levels required when called:    6
 12600 ;; This function calls:
 12601 ;;		Nothing
 12602 ;; This function is called by:
 12603 ;;		_config_routine
 12604 ;;		_increment_subfield
 12605 ;;		_clock_subfields
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           
 12610                           ;psect for function _checkDebounceSW2
 12611  04D0                     _checkDebounceSW2:	
 12612  04D0                     l5671:	
 12613                           ;incstack = 0
 12614                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 12615                           
 12616                           
 12617                           ;main.c: 519:     if(clkms - last_ms2 < 0){
 12618  04D0  087D               	movf	_clkms,w	;volatile
 12619  04D1  0020               	movlb	0	; select bank0
 12620  04D2  00C6               	movwf	??_checkDebounceSW2
 12621  04D3  01C7               	clrf	??_checkDebounceSW2+1
 12622  04D4  0847               	movf	??_checkDebounceSW2+1,w
 12623  04D5  00C9               	movwf	??_checkDebounceSW2+3
 12624  04D6  083C               	movf	_last_ms2,w
 12625  04D7  0246               	subwf	??_checkDebounceSW2,w
 12626  04D8  00C8               	movwf	??_checkDebounceSW2+2
 12627  04D9  1C03               	skipc
 12628  04DA  03C9               	decf	??_checkDebounceSW2+3,f
 12629  04DB  1FC9               	btfss	??_checkDebounceSW2+3,7
 12630  04DC  2CDE               	goto	u2841
 12631  04DD  2CDF               	goto	u2840
 12632  04DE                     u2841:	
 12633  04DE  2D03               	goto	l5679
 12634  04DF                     u2840:	
 12635  04DF                     l5673:	
 12636                           
 12637                           ;main.c: 521:         if ((300 - last_ms2)+ clkms > 2 ){
 12638  04DF  087D               	movf	_clkms,w	;volatile
 12639  04E0  00C6               	movwf	??_checkDebounceSW2
 12640  04E1  01C7               	clrf	??_checkDebounceSW2+1
 12641  04E2  0847               	movf	??_checkDebounceSW2+1,w
 12642  04E3  00C9               	movwf	??_checkDebounceSW2+3
 12643  04E4  083C               	movf	_last_ms2,w
 12644  04E5  0246               	subwf	??_checkDebounceSW2,w
 12645  04E6  00C8               	movwf	??_checkDebounceSW2+2
 12646  04E7  1C03               	skipc
 12647  04E8  03C9               	decf	??_checkDebounceSW2+3,f
 12648  04E9  0848               	movf	??_checkDebounceSW2+2,w
 12649  04EA  3E2C               	addlw	44
 12650  04EB  00CA               	movwf	??_checkDebounceSW2+4
 12651  04EC  3001               	movlw	1
 12652  04ED  3D49               	addwfc	??_checkDebounceSW2+3,w
 12653  04EE  00CB               	movwf	??_checkDebounceSW2+5
 12654  04EF  084B               	movf	??_checkDebounceSW2+5,w
 12655  04F0  3A80               	xorlw	128
 12656  04F1  00CC               	movwf	??_checkDebounceSW2+6
 12657  04F2  3080               	movlw	128
 12658  04F3  024C               	subwf	??_checkDebounceSW2+6,w
 12659  04F4  1D03               	skipz
 12660  04F5  2CF8               	goto	u2855
 12661  04F6  3003               	movlw	3
 12662  04F7  024A               	subwf	??_checkDebounceSW2+4,w
 12663  04F8                     u2855:	
 12664  04F8  1C03               	skipc
 12665  04F9  2CFB               	goto	u2851
 12666  04FA  2CFC               	goto	u2850
 12667  04FB                     u2851:	
 12668  04FB  2D03               	goto	l5679
 12669  04FC                     u2850:	
 12670  04FC                     l5675:	
 12671                           
 12672                           ;main.c: 522:             last_ms2 = clkms;
 12673  04FC  087D               	movf	_clkms,w	;volatile
 12674  04FD  0020               	movlb	0	; select bank0
 12675  04FE  00C6               	movwf	??_checkDebounceSW2
 12676  04FF  0846               	movf	??_checkDebounceSW2,w
 12677  0500  00BC               	movwf	_last_ms2
 12678                           
 12679                           ;main.c: 523:             return 1;
 12680  0501  3001               	movlw	1
 12681  0502  2D1C               	goto	l1348
 12682  0503                     l5679:	
 12683                           
 12684                           ;main.c: 527:     if(clkms - last_ms2 < 2){
 12685  0503  087D               	movf	_clkms,w	;volatile
 12686  0504  0020               	movlb	0	; select bank0
 12687  0505  00C6               	movwf	??_checkDebounceSW2
 12688  0506  01C7               	clrf	??_checkDebounceSW2+1
 12689  0507  0847               	movf	??_checkDebounceSW2+1,w
 12690  0508  00C9               	movwf	??_checkDebounceSW2+3
 12691  0509  083C               	movf	_last_ms2,w
 12692  050A  0246               	subwf	??_checkDebounceSW2,w
 12693  050B  00C8               	movwf	??_checkDebounceSW2+2
 12694  050C  1C03               	skipc
 12695  050D  03C9               	decf	??_checkDebounceSW2+3,f
 12696  050E  0849               	movf	??_checkDebounceSW2+3,w
 12697  050F  3A80               	xorlw	128
 12698  0510  00CA               	movwf	??_checkDebounceSW2+4
 12699  0511  3080               	movlw	128
 12700  0512  024A               	subwf	??_checkDebounceSW2+4,w
 12701  0513  1D03               	skipz
 12702  0514  2D17               	goto	u2865
 12703  0515  3002               	movlw	2
 12704  0516  0248               	subwf	??_checkDebounceSW2+2,w
 12705  0517                     u2865:	
 12706  0517  1803               	skipnc
 12707  0518  2D1A               	goto	u2861
 12708  0519  2D1B               	goto	u2860
 12709  051A                     u2861:	
 12710  051A  2CFC               	goto	l5675
 12711  051B                     u2860:	
 12712  051B                     l5681:	
 12713                           
 12714                           ;main.c: 528:         return 0;
 12715  051B  3000               	movlw	0
 12716  051C                     l1348:	
 12717  051C  0008               	return
 12718  051D                     __end_of_checkDebounceSW2:	
 12719                           
 12720                           	psect	text19
 12721  03C8                     __ptext19:	
 12722 ;; *************** function _checkDebounceSW1 *****************
 12723 ;; Defined at:
 12724 ;;		line 493 in file "main.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;		None
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;		None
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  1    wreg      unsigned char 
 12731 ;; Registers used:
 12732 ;;		wreg, status,2, status,0
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/0
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;Total ram usage:        7 bytes
 12743 ;; Hardware stack levels used:    1
 12744 ;; Hardware stack levels required when called:    6
 12745 ;; This function calls:
 12746 ;;		Nothing
 12747 ;; This function is called by:
 12748 ;;		_config_routine
 12749 ;;		_increment_subfield
 12750 ;;		_clock_subfields
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           
 12755                           ;psect for function _checkDebounceSW1
 12756  03C8                     _checkDebounceSW1:	
 12757  03C8                     l5645:	
 12758                           ;incstack = 0
 12759                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 12760                           
 12761                           
 12762                           ;main.c: 494:    PIE4bits.TMR1IE = 0;
 12763  03C8  002E               	movlb	14	; select bank14
 12764  03C9  101A               	bcf	26,0	;volatile
 12765  03CA                     l5647:	
 12766                           
 12767                           ;main.c: 496:     if(clkms - last_ms < 0){
 12768  03CA  087D               	movf	_clkms,w	;volatile
 12769  03CB  0020               	movlb	0	; select bank0
 12770  03CC  00C6               	movwf	??_checkDebounceSW1
 12771  03CD  01C7               	clrf	??_checkDebounceSW1+1
 12772  03CE  0847               	movf	??_checkDebounceSW1+1,w
 12773  03CF  00C9               	movwf	??_checkDebounceSW1+3
 12774  03D0  083D               	movf	_last_ms,w
 12775  03D1  0246               	subwf	??_checkDebounceSW1,w
 12776  03D2  00C8               	movwf	??_checkDebounceSW1+2
 12777  03D3  1C03               	skipc
 12778  03D4  03C9               	decf	??_checkDebounceSW1+3,f
 12779  03D5  1FC9               	btfss	??_checkDebounceSW1+3,7
 12780  03D6  2BD8               	goto	u2811
 12781  03D7  2BD9               	goto	u2810
 12782  03D8                     u2811:	
 12783  03D8  2BFF               	goto	l5657
 12784  03D9                     u2810:	
 12785  03D9                     l5649:	
 12786                           
 12787                           ;main.c: 498:         if ((300 - last_ms)+ clkms > 2 ){
 12788  03D9  087D               	movf	_clkms,w	;volatile
 12789  03DA  00C6               	movwf	??_checkDebounceSW1
 12790  03DB  01C7               	clrf	??_checkDebounceSW1+1
 12791  03DC  0847               	movf	??_checkDebounceSW1+1,w
 12792  03DD  00C9               	movwf	??_checkDebounceSW1+3
 12793  03DE  083D               	movf	_last_ms,w
 12794  03DF  0246               	subwf	??_checkDebounceSW1,w
 12795  03E0  00C8               	movwf	??_checkDebounceSW1+2
 12796  03E1  1C03               	skipc
 12797  03E2  03C9               	decf	??_checkDebounceSW1+3,f
 12798  03E3  0848               	movf	??_checkDebounceSW1+2,w
 12799  03E4  3E2C               	addlw	44
 12800  03E5  00CA               	movwf	??_checkDebounceSW1+4
 12801  03E6  3001               	movlw	1
 12802  03E7  3D49               	addwfc	??_checkDebounceSW1+3,w
 12803  03E8  00CB               	movwf	??_checkDebounceSW1+5
 12804  03E9  084B               	movf	??_checkDebounceSW1+5,w
 12805  03EA  3A80               	xorlw	128
 12806  03EB  00CC               	movwf	??_checkDebounceSW1+6
 12807  03EC  3080               	movlw	128
 12808  03ED  024C               	subwf	??_checkDebounceSW1+6,w
 12809  03EE  1D03               	skipz
 12810  03EF  2BF2               	goto	u2825
 12811  03F0  3003               	movlw	3
 12812  03F1  024A               	subwf	??_checkDebounceSW1+4,w
 12813  03F2                     u2825:	
 12814  03F2  1C03               	skipc
 12815  03F3  2BF5               	goto	u2821
 12816  03F4  2BF6               	goto	u2820
 12817  03F5                     u2821:	
 12818  03F5  2BFF               	goto	l5657
 12819  03F6                     u2820:	
 12820  03F6                     l5651:	
 12821                           
 12822                           ;main.c: 499:             last_ms = clkms;
 12823  03F6  087D               	movf	_clkms,w	;volatile
 12824  03F7  0020               	movlb	0	; select bank0
 12825  03F8  00C6               	movwf	??_checkDebounceSW1
 12826  03F9  0846               	movf	??_checkDebounceSW1,w
 12827  03FA  00BD               	movwf	_last_ms
 12828  03FB                     l5653:	
 12829                           
 12830                           ;main.c: 500:             PIE4bits.TMR1IE = 1;
 12831  03FB  002E               	movlb	14	; select bank14
 12832  03FC  141A               	bsf	26,0	;volatile
 12833                           
 12834                           ;main.c: 501:             return 1;
 12835  03FD  3001               	movlw	1
 12836  03FE  2C21               	goto	l1341
 12837  03FF                     l5657:	
 12838                           
 12839                           ;main.c: 505:     if(clkms - last_ms < 2){
 12840  03FF  087D               	movf	_clkms,w	;volatile
 12841  0400  0020               	movlb	0	; select bank0
 12842  0401  00C6               	movwf	??_checkDebounceSW1
 12843  0402  01C7               	clrf	??_checkDebounceSW1+1
 12844  0403  0847               	movf	??_checkDebounceSW1+1,w
 12845  0404  00C9               	movwf	??_checkDebounceSW1+3
 12846  0405  083D               	movf	_last_ms,w
 12847  0406  0246               	subwf	??_checkDebounceSW1,w
 12848  0407  00C8               	movwf	??_checkDebounceSW1+2
 12849  0408  1C03               	skipc
 12850  0409  03C9               	decf	??_checkDebounceSW1+3,f
 12851  040A  0849               	movf	??_checkDebounceSW1+3,w
 12852  040B  3A80               	xorlw	128
 12853  040C  00CA               	movwf	??_checkDebounceSW1+4
 12854  040D  3080               	movlw	128
 12855  040E  024A               	subwf	??_checkDebounceSW1+4,w
 12856  040F  1D03               	skipz
 12857  0410  2C13               	goto	u2835
 12858  0411  3002               	movlw	2
 12859  0412  0248               	subwf	??_checkDebounceSW1+2,w
 12860  0413                     u2835:	
 12861  0413  1803               	skipnc
 12862  0414  2C16               	goto	u2831
 12863  0415  2C17               	goto	u2830
 12864  0416                     u2831:	
 12865  0416  2C19               	goto	l5665
 12866  0417                     u2830:	
 12867  0417                     l5659:	
 12868                           
 12869                           ;main.c: 506:         return 0;
 12870  0417  3000               	movlw	0
 12871  0418  2C21               	goto	l1341
 12872  0419                     l5665:	
 12873                           
 12874                           ;main.c: 509:         last_ms = clkms;
 12875  0419  087D               	movf	_clkms,w	;volatile
 12876  041A  0020               	movlb	0	; select bank0
 12877  041B  00C6               	movwf	??_checkDebounceSW1
 12878  041C  0846               	movf	??_checkDebounceSW1,w
 12879  041D  00BD               	movwf	_last_ms
 12880  041E                     l5667:	
 12881                           
 12882                           ;main.c: 510:         PIE4bits.TMR1IE = 1;
 12883  041E  002E               	movlb	14	; select bank14
 12884  041F  141A               	bsf	26,0	;volatile
 12885                           
 12886                           ;main.c: 511:         return 1;
 12887  0420  3001               	movlw	1
 12888  0421                     l1341:	
 12889  0421  0008               	return
 12890  0422                     __end_of_checkDebounceSW1:	
 12891                           
 12892                           	psect	text20
 12893  036D                     __ptext20:	
 12894 ;; *************** function _all_LED *****************
 12895 ;; Defined at:
 12896 ;;		line 384 in file "main.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;		None
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;		None
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      void 
 12903 ;; Registers used:
 12904 ;;		wreg, status,2, status,0, pclath, cstack
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;Total ram usage:        1 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; Hardware stack levels required when called:    7
 12917 ;; This function calls:
 12918 ;;		_PWM6_LoadDutyValue
 12919 ;; This function is called by:
 12920 ;;		_config_routine
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           
 12925                           ;psect for function _all_LED
 12926  036D                     _all_LED:	
 12927  036D                     l1282:	
 12928                           ;incstack = 0
 12929                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 12930                           ;main.c: 386:        do { LATAbits.LATA7 = 1; } while(0);
 12931                           
 12932  036D  0020               	movlb	0	; select bank0
 12933  036E  1796               	bsf	22,7	;volatile
 12934  036F                     l5919:	
 12935                           
 12936                           ;main.c: 387:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12937  036F  3021               	movlw	33
 12938  0370  0020               	movlb	0	; select bank0
 12939  0371  00CA               	movwf	??_all_LED
 12940  0372  3076               	movlw	118
 12941  0373                     u3387:	
 12942  0373  0B89               	decfsz	9,f
 12943  0374  2B73               	goto	u3387
 12944  0375  0BCA               	decfsz	??_all_LED,f
 12945  0376  2B73               	goto	u3387
 12946  0377  0000               	nop
 12947  0378                     l5921:	
 12948  0378  0020               	movlb	0	; select bank0
 12949  0379  1396               	bcf	22,7	;volatile
 12950  037A                     l1285:	
 12951                           
 12952                           ;main.c: 389:        _delay((unsigned long)((100)*(1000000/4000.0)));
 12953  037A  3021               	movlw	33
 12954  037B  0020               	movlb	0	; select bank0
 12955  037C  00CA               	movwf	??_all_LED
 12956  037D  3076               	movlw	118
 12957  037E                     u3397:	
 12958  037E  0B89               	decfsz	9,f
 12959  037F  2B7E               	goto	u3397
 12960  0380  0BCA               	decfsz	??_all_LED,f
 12961  0381  2B7E               	goto	u3397
 12962  0382  0000               	nop
 12963  0383                     l5923:	
 12964                           
 12965                           ;main.c: 391:        PWM6_LoadDutyValue(1023);
 12966  0383  30FF               	movlw	255
 12967  0384  0020               	movlb	0	; select bank0
 12968  0385  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12969  0386  3003               	movlw	3
 12970  0387  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12971  0388  318F  273C  3183   	fcall	_PWM6_LoadDutyValue
 12972  038B                     l5925:	
 12973                           
 12974                           ;main.c: 392:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12975  038B  3021               	movlw	33
 12976  038C  0020               	movlb	0	; select bank0
 12977  038D  00CA               	movwf	??_all_LED
 12978  038E  3076               	movlw	118
 12979  038F                     u3407:	
 12980  038F  0B89               	decfsz	9,f
 12981  0390  2B8F               	goto	u3407
 12982  0391  0BCA               	decfsz	??_all_LED,f
 12983  0392  2B8F               	goto	u3407
 12984  0393  0000               	nop
 12985                           
 12986                           ;main.c: 394:         PWM6_LoadDutyValue(0);
 12987  0394  3000               	movlw	0
 12988  0395  0020               	movlb	0	; select bank0
 12989  0396  00C6               	movwf	PWM6_LoadDutyValue@dutyValue
 12990  0397  00C7               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12991  0398  318F  273C  3183   	fcall	_PWM6_LoadDutyValue
 12992  039B                     l5927:	
 12993                           
 12994                           ;main.c: 395:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12995  039B  3021               	movlw	33
 12996  039C  0020               	movlb	0	; select bank0
 12997  039D  00CA               	movwf	??_all_LED
 12998  039E  3076               	movlw	118
 12999  039F                     u3417:	
 13000  039F  0B89               	decfsz	9,f
 13001  03A0  2B9F               	goto	u3417
 13002  03A1  0BCA               	decfsz	??_all_LED,f
 13003  03A2  2B9F               	goto	u3417
 13004  03A3  0000               	nop
 13005  03A4                     l5929:	
 13006  03A4  0020               	movlb	0	; select bank0
 13007  03A5  1696               	bsf	22,5	;volatile
 13008  03A6                     l5931:	
 13009                           
 13010                           ;main.c: 397:          _delay((unsigned long)((100)*(1000000/4000.0)));
 13011  03A6  3021               	movlw	33
 13012  03A7  0020               	movlb	0	; select bank0
 13013  03A8  00CA               	movwf	??_all_LED
 13014  03A9  3076               	movlw	118
 13015  03AA                     u3427:	
 13016  03AA  0B89               	decfsz	9,f
 13017  03AB  2BAA               	goto	u3427
 13018  03AC  0BCA               	decfsz	??_all_LED,f
 13019  03AD  2BAA               	goto	u3427
 13020  03AE  0000               	nop
 13021  03AF                     l5933:	
 13022  03AF  0020               	movlb	0	; select bank0
 13023  03B0  1296               	bcf	22,5	;volatile
 13024  03B1                     l5935:	
 13025                           
 13026                           ;main.c: 399:        _delay((unsigned long)((100)*(1000000/4000.0)));
 13027  03B1  3021               	movlw	33
 13028  03B2  0020               	movlb	0	; select bank0
 13029  03B3  00CA               	movwf	??_all_LED
 13030  03B4  3076               	movlw	118
 13031  03B5                     u3437:	
 13032  03B5  0B89               	decfsz	9,f
 13033  03B6  2BB5               	goto	u3437
 13034  03B7  0BCA               	decfsz	??_all_LED,f
 13035  03B8  2BB5               	goto	u3437
 13036  03B9  0000               	nop
 13037  03BA                     l5937:	
 13038  03BA  0020               	movlb	0	; select bank0
 13039  03BB  1616               	bsf	22,4	;volatile
 13040  03BC                     l5939:	
 13041                           
 13042                           ;main.c: 401:         _delay((unsigned long)((100)*(1000000/4000.0)));
 13043  03BC  3021               	movlw	33
 13044  03BD  0020               	movlb	0	; select bank0
 13045  03BE  00CA               	movwf	??_all_LED
 13046  03BF  3076               	movlw	118
 13047  03C0                     u3447:	
 13048  03C0  0B89               	decfsz	9,f
 13049  03C1  2BC0               	goto	u3447
 13050  03C2  0BCA               	decfsz	??_all_LED,f
 13051  03C3  2BC0               	goto	u3447
 13052  03C4  0000               	nop
 13053  03C5                     l5941:	
 13054  03C5  0020               	movlb	0	; select bank0
 13055  03C6  1216               	bcf	22,4	;volatile
 13056  03C7                     l1294:	
 13057  03C7  0008               	return
 13058  03C8                     __end_of_all_LED:	
 13059                           
 13060                           	psect	text21
 13061  0F3C                     __ptext21:	
 13062 ;; *************** function _PWM6_LoadDutyValue *****************
 13063 ;; Defined at:
 13064 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      void 
 13071 ;; Registers used:
 13072 ;;		wreg, status,2, status,0
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;Total ram usage:        4 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    6
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_main
 13089 ;;		_increment_subfield
 13090 ;;		_all_LED
 13091 ;;		_mod1_LED
 13092 ;;		_mod2_LED
 13093 ;;		_mod3_LED
 13094 ;;		_mod4_LED
 13095 ;;		_mode_select_LED
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099                           
 13100                           ;psect for function _PWM6_LoadDutyValue
 13101  0F3C                     _PWM6_LoadDutyValue:	
 13102  0F3C                     l5627:	
 13103                           ;incstack = 0
 13104                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13105                           
 13106                           
 13107                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13108  0F3C  0020               	movlb	0	; select bank0
 13109  0F3D  0847               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13110  0F3E  00C9               	movwf	??_PWM6_LoadDutyValue+1
 13111  0F3F  0846               	movf	PWM6_LoadDutyValue@dutyValue,w
 13112  0F40  00C8               	movwf	??_PWM6_LoadDutyValue
 13113  0F41  36C9               	lsrf	??_PWM6_LoadDutyValue+1,f
 13114  0F42  0CC8               	rrf	??_PWM6_LoadDutyValue,f
 13115  0F43  36C9               	lsrf	??_PWM6_LoadDutyValue+1,f
 13116  0F44  0CC8               	rrf	??_PWM6_LoadDutyValue,f
 13117  0F45  0848               	movf	??_PWM6_LoadDutyValue,w
 13118  0F46  0027               	movlb	7	; select bank7
 13119  0F47  008D               	movwf	13	;volatile
 13120                           
 13121                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13122  0F48  0020               	movlb	0	; select bank0
 13123  0F49  0846               	movf	PWM6_LoadDutyValue@dutyValue,w
 13124  0F4A  3903               	andlw	3
 13125  0F4B  00C8               	movwf	??_PWM6_LoadDutyValue
 13126  0F4C  3005               	movlw	5
 13127  0F4D                     u2805:	
 13128  0F4D  35C8               	lslf	??_PWM6_LoadDutyValue,f
 13129  0F4E  3EFF               	addlw	-1
 13130  0F4F  1D03               	skipz
 13131  0F50  2F4D               	goto	u2805
 13132  0F51  3548               	lslf	??_PWM6_LoadDutyValue,w
 13133  0F52  0027               	movlb	7	; select bank7
 13134  0F53  008C               	movwf	12	;volatile
 13135  0F54                     l916:	
 13136  0F54  0008               	return
 13137  0F55                     __end_of_PWM6_LoadDutyValue:	
 13138                           
 13139                           	psect	text22
 13140  0CD3                     __ptext22:	
 13141 ;; *************** function _TMR0_StartTimer *****************
 13142 ;; Defined at:
 13143 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;		None
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;		None
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  1    wreg      void 
 13150 ;; Registers used:
 13151 ;;		None
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13161 ;;Total ram usage:        0 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; Hardware stack levels required when called:    6
 13164 ;; This function calls:
 13165 ;;		Nothing
 13166 ;; This function is called by:
 13167 ;;		_main
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           
 13172                           ;psect for function _TMR0_StartTimer
 13173  0CD3                     _TMR0_StartTimer:	
 13174  0CD3                     l6107:	
 13175                           ;incstack = 0
 13176                           ; Regs used in _TMR0_StartTimer: []
 13177                           
 13178                           
 13179                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 13180  0CD3  0020               	movlb	0	; select bank0
 13181  0CD4  179E               	bsf	30,7	;volatile
 13182  0CD5                     l1599:	
 13183  0CD5  0008               	return
 13184  0CD6                     __end_of_TMR0_StartTimer:	
 13185                           
 13186                           	psect	text23
 13187  0F89                     __ptext23:	
 13188 ;; *************** function _SYSTEM_Initialize *****************
 13189 ;; Defined at:
 13190 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;		None
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;		None
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1    wreg      void 
 13197 ;; Registers used:
 13198 ;;		wreg, status,2, status,0, pclath, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;Total ram usage:        0 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:    8
 13211 ;; This function calls:
 13212 ;;		_ADCC_Initialize
 13213 ;;		_EXT_INT_Initialize
 13214 ;;		_OSCILLATOR_Initialize
 13215 ;;		_PIN_MANAGER_Initialize
 13216 ;;		_PMD_Initialize
 13217 ;;		_PWM6_Initialize
 13218 ;;		_TMR0_Initialize
 13219 ;;		_TMR1_Initialize
 13220 ;;		_TMR2_Initialize
 13221 ;; This function is called by:
 13222 ;;		_main
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _SYSTEM_Initialize
 13228  0F89                     _SYSTEM_Initialize:	
 13229  0F89                     l6015:	
 13230                           ;incstack = 0
 13231                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13232                           
 13233                           
 13234                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13235  0F89  318D  256D  318F   	fcall	_PMD_Initialize
 13236  0F8C                     l6017:	
 13237                           
 13238                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13239  0F8C  3185  2567  318F   	fcall	_PIN_MANAGER_Initialize
 13240  0F8F                     l6019:	
 13241                           
 13242                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13243  0F8F  318D  2587  318F   	fcall	_OSCILLATOR_Initialize
 13244  0F92                     l6021:	
 13245                           
 13246                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 13247  0F92  318D  25DE  318F   	fcall	_PWM6_Initialize
 13248  0F95                     l6023:	
 13249                           
 13250                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13251  0F95  318E  26C6  318F   	fcall	_ADCC_Initialize
 13252  0F98                     l6025:	
 13253                           
 13254                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 13255  0F98  318F  270B  318F   	fcall	_TMR2_Initialize
 13256  0F9B                     l6027:	
 13257                           
 13258                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13259  0F9B  318F  27C1  318F   	fcall	_TMR1_Initialize
 13260  0F9E                     l6029:	
 13261                           
 13262                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 13263  0F9E  318D  25EB  318F   	fcall	_EXT_INT_Initialize
 13264  0FA1                     l6031:	
 13265                           
 13266                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 13267  0FA1  318E  269B  318F   	fcall	_TMR0_Initialize
 13268  0FA4                     l439:	
 13269  0FA4  0008               	return
 13270  0FA5                     __end_of_SYSTEM_Initialize:	
 13271                           
 13272                           	psect	text24
 13273  0F0B                     __ptext24:	
 13274 ;; *************** function _TMR2_Initialize *****************
 13275 ;; Defined at:
 13276 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0, pclath, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;Total ram usage:        0 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    7
 13297 ;; This function calls:
 13298 ;;		_TMR2_SetInterruptHandler
 13299 ;; This function is called by:
 13300 ;;		_SYSTEM_Initialize
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           
 13305                           ;psect for function _TMR2_Initialize
 13306  0F0B                     _TMR2_Initialize:	
 13307  0F0B                     l5859:	
 13308                           ;incstack = 0
 13309                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13310                           
 13311                           
 13312                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 13313  0F0B  3001               	movlw	1
 13314  0F0C  0025               	movlb	5	; select bank5
 13315  0F0D  0090               	movwf	16	;volatile
 13316                           
 13317                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 13318  0F0E  3020               	movlw	32
 13319  0F0F  008F               	movwf	15	;volatile
 13320  0F10                     l5861:	
 13321                           
 13322                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 13323  0F10  0191               	clrf	17	;volatile
 13324  0F11                     l5863:	
 13325                           
 13326                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 13327  0F11  309B               	movlw	155
 13328  0F12  008D               	movwf	13	;volatile
 13329                           
 13330                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 13331  0F13  018C               	clrf	12	;volatile
 13332  0F14                     l5865:	
 13333                           
 13334                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 13335  0F14  002E               	movlb	14	; select bank14
 13336  0F15  1090               	bcf	16,1	;volatile
 13337  0F16                     l5867:	
 13338                           
 13339                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 13340  0F16  149A               	bsf	26,1	;volatile
 13341  0F17                     l5869:	
 13342                           
 13343                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 13344  0F17  30B5               	movlw	low _TMR2_DefaultInterruptHandler
 13345  0F18  0020               	movlb	0	; select bank0
 13346  0F19  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13347  0F1A  300C               	movlw	high _TMR2_DefaultInterruptHandler
 13348  0F1B  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13349  0F1C  318D  2526  318F   	fcall	_TMR2_SetInterruptHandler
 13350  0F1F                     l5871:	
 13351                           
 13352                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 13353  0F1F  30B1               	movlw	177
 13354  0F20  0025               	movlb	5	; select bank5
 13355  0F21  008E               	movwf	14	;volatile
 13356  0F22                     l998:	
 13357  0F22  0008               	return
 13358  0F23                     __end_of_TMR2_Initialize:	
 13359                           
 13360                           	psect	text25
 13361  0D26                     __ptext25:	
 13362 ;; *************** function _TMR2_SetInterruptHandler *****************
 13363 ;; Defined at:
 13364 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13367 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      void 
 13372 ;; Registers used:
 13373 ;;		wreg
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;Total ram usage:        2 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    6
 13386 ;; This function calls:
 13387 ;;		Nothing
 13388 ;; This function is called by:
 13389 ;;		_TMR2_Initialize
 13390 ;;		_main
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           
 13395                           ;psect for function _TMR2_SetInterruptHandler
 13396  0D26                     _TMR2_SetInterruptHandler:	
 13397  0D26                     l5715:	
 13398                           ;incstack = 0
 13399                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 13400                           
 13401                           
 13402                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 13403  0D26  0020               	movlb	0	; select bank0
 13404  0D27  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 13405  0D28  00DD               	movwf	_TMR2_InterruptHandler+1
 13406  0D29  0846               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 13407  0D2A  00DC               	movwf	_TMR2_InterruptHandler
 13408  0D2B                     l1041:	
 13409  0D2B  0008               	return
 13410  0D2C                     __end_of_TMR2_SetInterruptHandler:	
 13411                           
 13412                           	psect	text26
 13413  0FC1                     __ptext26:	
 13414 ;; *************** function _TMR1_Initialize *****************
 13415 ;; Defined at:
 13416 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      void 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0, pclath, cstack
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    7
 13437 ;; This function calls:
 13438 ;;		_TMR1_SetInterruptHandler
 13439 ;; This function is called by:
 13440 ;;		_SYSTEM_Initialize
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _TMR1_Initialize
 13446  0FC1                     _TMR1_Initialize:	
 13447  0FC1                     l5873:	
 13448                           ;incstack = 0
 13449                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13450                           
 13451                           
 13452                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13453  0FC1  0024               	movlb	4	; select bank4
 13454  0FC2  018F               	clrf	15	;volatile
 13455                           
 13456                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13457  0FC3  0190               	clrf	16	;volatile
 13458  0FC4                     l5875:	
 13459                           
 13460                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13461  0FC4  3004               	movlw	4
 13462  0FC5  0091               	movwf	17	;volatile
 13463  0FC6                     l5877:	
 13464                           
 13465                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 13466  0FC6  30E1               	movlw	225
 13467  0FC7  008D               	movwf	13	;volatile
 13468  0FC8                     l5879:	
 13469                           
 13470                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 13471  0FC8  30BA               	movlw	186
 13472  0FC9  008C               	movwf	12	;volatile
 13473  0FCA                     l5881:	
 13474                           
 13475                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13476  0FCA  080D               	movf	13,w	;volatile
 13477  0FCB  0020               	movlb	0	; select bank0
 13478  0FCC  00E1               	movwf	_timer1ReloadVal+1	;volatile
 13479  0FCD  0024               	movlb	4	; select bank4
 13480  0FCE  080C               	movf	12,w	;volatile
 13481  0FCF  0020               	movlb	0	; select bank0
 13482  0FD0  00E0               	movwf	_timer1ReloadVal	;volatile
 13483  0FD1                     l5883:	
 13484                           
 13485                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 13486  0FD1  002E               	movlb	14	; select bank14
 13487  0FD2  1010               	bcf	16,0	;volatile
 13488  0FD3                     l5885:	
 13489                           
 13490                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13491  0FD3  141A               	bsf	26,0	;volatile
 13492  0FD4                     l5887:	
 13493                           
 13494                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13495  0FD4  30B4               	movlw	low _TMR1_DefaultInterruptHandler
 13496  0FD5  0020               	movlb	0	; select bank0
 13497  0FD6  00C6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13498  0FD7  300C               	movlw	high _TMR1_DefaultInterruptHandler
 13499  0FD8  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13500  0FD9  318D  2520  318F   	fcall	_TMR1_SetInterruptHandler
 13501  0FDC                     l5889:	
 13502                           
 13503                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 13504  0FDC  3015               	movlw	21
 13505  0FDD  0024               	movlb	4	; select bank4
 13506  0FDE  008E               	movwf	14	;volatile
 13507  0FDF                     l869:	
 13508  0FDF  0008               	return
 13509  0FE0                     __end_of_TMR1_Initialize:	
 13510                           
 13511                           	psect	text27
 13512  0D20                     __ptext27:	
 13513 ;; *************** function _TMR1_SetInterruptHandler *****************
 13514 ;; Defined at:
 13515 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13518 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;Total ram usage:        2 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:    6
 13537 ;; This function calls:
 13538 ;;		Nothing
 13539 ;; This function is called by:
 13540 ;;		_TMR1_Initialize
 13541 ;;		_main
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           
 13546                           ;psect for function _TMR1_SetInterruptHandler
 13547  0D20                     _TMR1_SetInterruptHandler:	
 13548  0D20                     l5693:	
 13549                           ;incstack = 0
 13550                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13551                           
 13552                           
 13553                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 13554  0D20  0020               	movlb	0	; select bank0
 13555  0D21  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13556  0D22  00DF               	movwf	_TMR1_InterruptHandler+1
 13557  0D23  0846               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13558  0D24  00DE               	movwf	_TMR1_InterruptHandler
 13559  0D25                     l899:	
 13560  0D25  0008               	return
 13561  0D26                     __end_of_TMR1_SetInterruptHandler:	
 13562                           
 13563                           	psect	text28
 13564  0E9B                     __ptext28:	
 13565 ;; *************** function _TMR0_Initialize *****************
 13566 ;; Defined at:
 13567 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13568 ;; Parameters:    Size  Location     Type
 13569 ;;		None
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;		None
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  1    wreg      void 
 13574 ;; Registers used:
 13575 ;;		wreg, status,2, status,0, pclath, cstack
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13585 ;;Total ram usage:        0 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:    7
 13588 ;; This function calls:
 13589 ;;		_TMR0_SetInterruptHandler
 13590 ;; This function is called by:
 13591 ;;		_SYSTEM_Initialize
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           
 13596                           ;psect for function _TMR0_Initialize
 13597  0E9B                     _TMR0_Initialize:	
 13598  0E9B                     l5891:	
 13599                           ;incstack = 0
 13600                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13601                           
 13602                           
 13603                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 13604  0E9B  3095               	movlw	149
 13605  0E9C  0020               	movlb	0	; select bank0
 13606  0E9D  009F               	movwf	31	;volatile
 13607                           
 13608                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 13609  0E9E  30F1               	movlw	241
 13610  0E9F  009D               	movwf	29	;volatile
 13611  0EA0                     l5893:	
 13612                           
 13613                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13614  0EA0  019C               	clrf	28	;volatile
 13615  0EA1                     l5895:	
 13616                           
 13617                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13618  0EA1  002E               	movlb	14	; select bank14
 13619  0EA2  128C               	bcf	12,5	;volatile
 13620  0EA3                     l5897:	
 13621                           
 13622                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13623  0EA3  1696               	bsf	22,5	;volatile
 13624  0EA4                     l5899:	
 13625                           
 13626                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13627  0EA4  30B3               	movlw	low _TMR0_DefaultInterruptHandler
 13628  0EA5  0020               	movlb	0	; select bank0
 13629  0EA6  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13630  0EA7  300C               	movlw	high _TMR0_DefaultInterruptHandler
 13631  0EA8  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13632  0EA9  318D  2590  318E   	fcall	_TMR0_SetInterruptHandler
 13633  0EAC                     l5901:	
 13634                           
 13635                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 13636  0EAC  300B               	movlw	11
 13637  0EAD  0020               	movlb	0	; select bank0
 13638  0EAE  009E               	movwf	30	;volatile
 13639  0EAF                     l1596:	
 13640  0EAF  0008               	return
 13641  0EB0                     __end_of_TMR0_Initialize:	
 13642                           
 13643                           	psect	text29
 13644  0D90                     __ptext29:	
 13645 ;; *************** function _TMR0_SetInterruptHandler *****************
 13646 ;; Defined at:
 13647 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13650 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:    6
 13669 ;; This function calls:
 13670 ;;		Nothing
 13671 ;; This function is called by:
 13672 ;;		_main
 13673 ;;		_TMR0_Initialize
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           
 13678                           ;psect for function _TMR0_SetInterruptHandler
 13679  0D90                     _TMR0_SetInterruptHandler:	
 13680  0D90                     l5717:	
 13681                           ;incstack = 0
 13682                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13683                           
 13684                           
 13685                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 13686  0D90  0020               	movlb	0	; select bank0
 13687  0D91  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13688  0D92  0021               	movlb	1	; select bank1
 13689  0D93  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 13690  0D94  0020               	movlb	0	; select bank0
 13691  0D95  0846               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13692  0D96  0021               	movlb	1	; select bank1
 13693  0D97  00C6               	movwf	_TMR0_InterruptHandler^(0+128)
 13694  0D98                     l1618:	
 13695  0D98  0008               	return
 13696  0D99                     __end_of_TMR0_SetInterruptHandler:	
 13697                           
 13698                           	psect	text30
 13699  0DDE                     __ptext30:	
 13700 ;; *************** function _PWM6_Initialize *****************
 13701 ;; Defined at:
 13702 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;		None
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2, status,0
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;Total ram usage:        0 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:    6
 13723 ;; This function calls:
 13724 ;;		Nothing
 13725 ;; This function is called by:
 13726 ;;		_SYSTEM_Initialize
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730                           
 13731                           ;psect for function _PWM6_Initialize
 13732  0DDE                     _PWM6_Initialize:	
 13733  0DDE                     l5849:	
 13734                           ;incstack = 0
 13735                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 13736                           
 13737                           
 13738                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 13739  0DDE  3080               	movlw	128
 13740  0DDF  0027               	movlb	7	; select bank7
 13741  0DE0  008E               	movwf	14	;volatile
 13742                           
 13743                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 13744  0DE1  303E               	movlw	62
 13745  0DE2  008D               	movwf	13	;volatile
 13746                           
 13747                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 13748  0DE3  3040               	movlw	64
 13749  0DE4  008C               	movwf	12	;volatile
 13750  0DE5                     l5851:	
 13751                           
 13752                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 13753  0DE5  0024               	movlb	4	; select bank4
 13754  0DE6  081F               	movf	31,w	;volatile
 13755  0DE7  39F3               	andlw	-13
 13756  0DE8  3804               	iorlw	4
 13757  0DE9  009F               	movwf	31	;volatile
 13758  0DEA                     l913:	
 13759  0DEA  0008               	return
 13760  0DEB                     __end_of_PWM6_Initialize:	
 13761                           
 13762                           	psect	text31
 13763  0D6D                     __ptext31:	
 13764 ;; *************** function _PMD_Initialize *****************
 13765 ;; Defined at:
 13766 ;;		line 77 in file "mcc_generated_files/mcc.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		status,2
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;Total ram usage:        0 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:    6
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_SYSTEM_Initialize
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           
 13795                           ;psect for function _PMD_Initialize
 13796  0D6D                     _PMD_Initialize:	
 13797  0D6D                     l5785:	
 13798                           ;incstack = 0
 13799                           ; Regs used in _PMD_Initialize: [status,2]
 13800                           
 13801                           
 13802                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 13803  0D6D  002F               	movlb	15	; select bank15
 13804  0D6E  0196               	clrf	22	;volatile
 13805                           
 13806                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 13807  0D6F  0197               	clrf	23	;volatile
 13808                           
 13809                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 13810  0D70  0198               	clrf	24	;volatile
 13811                           
 13812                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 13813  0D71  0199               	clrf	25	;volatile
 13814                           
 13815                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 13816  0D72  019A               	clrf	26	;volatile
 13817                           
 13818                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 13819  0D73  019B               	clrf	27	;volatile
 13820  0D74                     l445:	
 13821  0D74  0008               	return
 13822  0D75                     __end_of_PMD_Initialize:	
 13823                           
 13824                           	psect	text32
 13825  0567                     __ptext32:	
 13826 ;; *************** function _PIN_MANAGER_Initialize *****************
 13827 ;; Defined at:
 13828 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, status,2
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;Total ram usage:        0 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    6
 13849 ;; This function calls:
 13850 ;;		Nothing
 13851 ;; This function is called by:
 13852 ;;		_SYSTEM_Initialize
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _PIN_MANAGER_Initialize
 13858  0567                     _PIN_MANAGER_Initialize:	
 13859  0567                     l5787:	
 13860                           ;incstack = 0
 13861                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13862                           
 13863                           
 13864                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13865  0567  0020               	movlb	0	; select bank0
 13866  0568  019A               	clrf	26	;volatile
 13867                           
 13868                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13869  0569  0199               	clrf	25	;volatile
 13870                           
 13871                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13872  056A  0196               	clrf	22	;volatile
 13873                           
 13874                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13875  056B  0197               	clrf	23	;volatile
 13876                           
 13877                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13878  056C  0198               	clrf	24	;volatile
 13879  056D                     l5789:	
 13880                           
 13881                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13882  056D  3007               	movlw	7
 13883  056E  0095               	movwf	21	;volatile
 13884  056F                     l5791:	
 13885                           
 13886                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 13887  056F  300F               	movlw	15
 13888  0570  0091               	movwf	17	;volatile
 13889  0571                     l5793:	
 13890                           
 13891                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 13892  0571  30FF               	movlw	255
 13893  0572  0092               	movwf	18	;volatile
 13894  0573                     l5795:	
 13895                           
 13896                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 13897  0573  30FF               	movlw	255
 13898  0574  0093               	movwf	19	;volatile
 13899  0575                     l5797:	
 13900                           
 13901                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 13902  0575  30FF               	movlw	255
 13903  0576  0094               	movwf	20	;volatile
 13904  0577                     l5799:	
 13905                           
 13906                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 13907  0577  30FF               	movlw	255
 13908  0578  003E               	movlb	30	; select bank30
 13909  0579  00D9               	movwf	89	;volatile
 13910  057A                     l5801:	
 13911                           
 13912                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 13913  057A  30C7               	movlw	199
 13914  057B  00CE               	movwf	78	;volatile
 13915  057C                     l5803:	
 13916                           
 13917                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 13918  057C  30EF               	movlw	239
 13919  057D  00C3               	movwf	67	;volatile
 13920  057E                     l5805:	
 13921                           
 13922                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 13923  057E  3007               	movlw	7
 13924  057F  00E4               	movwf	100	;volatile
 13925  0580                     l5807:	
 13926                           
 13927                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 13928  0580  30FF               	movlw	255
 13929  0581  00B8               	movwf	56	;volatile
 13930                           
 13931                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 13932  0582  01DA               	clrf	90	;volatile
 13933                           
 13934                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 13935  0583  01E5               	clrf	101	;volatile
 13936                           
 13937                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 13938  0584  01C4               	clrf	68	;volatile
 13939                           
 13940                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 13941  0585  01B9               	clrf	57	;volatile
 13942                           
 13943                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 13944  0586  01CF               	clrf	79	;volatile
 13945                           
 13946                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 13947  0587  01E6               	clrf	102	;volatile
 13948                           
 13949                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 13950  0588  01BA               	clrf	58	;volatile
 13951                           
 13952                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 13953  0589  01C5               	clrf	69	;volatile
 13954                           
 13955                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 13956  058A  01D0               	clrf	80	;volatile
 13957                           
 13958                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 13959  058B  01DB               	clrf	91	;volatile
 13960  058C                     l5809:	
 13961                           
 13962                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 13963  058C  30FF               	movlw	255
 13964  058D  00BB               	movwf	59	;volatile
 13965  058E                     l5811:	
 13966                           
 13967                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 13968  058E  30FF               	movlw	255
 13969  058F  00C6               	movwf	70	;volatile
 13970  0590                     l5813:	
 13971                           
 13972                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 13973  0590  30FF               	movlw	255
 13974  0591  00D1               	movwf	81	;volatile
 13975  0592                     l5815:	
 13976                           
 13977                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 13978  0592  30FF               	movlw	255
 13979  0593  00DC               	movwf	92	;volatile
 13980  0594                     l5817:	
 13981                           
 13982                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 13983  0594  3007               	movlw	7
 13984  0595  00E7               	movwf	103	;volatile
 13985  0596                     l5819:	
 13986                           
 13987                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 13988  0596  30FF               	movlw	255
 13989  0597  00BC               	movwf	60	;volatile
 13990  0598                     l5821:	
 13991                           
 13992                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 13993  0598  30FF               	movlw	255
 13994  0599  00C7               	movwf	71	;volatile
 13995  059A                     l5823:	
 13996                           
 13997                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 13998  059A  30FF               	movlw	255
 13999  059B  00D2               	movwf	82	;volatile
 14000  059C                     l5825:	
 14001                           
 14002                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 14003  059C  30FF               	movlw	255
 14004  059D  00DD               	movwf	93	;volatile
 14005  059E                     l5827:	
 14006                           
 14007                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 14008  059E  3007               	movlw	7
 14009  059F  00E8               	movwf	104	;volatile
 14010  05A0                     l5829:	
 14011                           
 14012                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 14013  05A0  300C               	movlw	12
 14014  05A1  003D               	movlb	29	; select bank29
 14015  05A2  0090               	movwf	16	;volatile
 14016  05A3                     l5831:	
 14017                           
 14018                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 14019  05A3  3013               	movlw	19
 14020  05A4  00C5               	movwf	69	;volatile
 14021  05A5                     l5833:	
 14022                           
 14023                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 14024  05A5  3014               	movlw	20
 14025  05A6  003E               	movlb	30	; select bank30
 14026  05A7  00A3               	movwf	35	;volatile
 14027  05A8                     l5835:	
 14028                           
 14029                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 14030  05A8  3015               	movlw	21
 14031  05A9  00A4               	movwf	36	;volatile
 14032  05AA                     l5837:	
 14033                           
 14034                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 14035  05AA  300E               	movlw	14
 14036  05AB  0096               	movwf	22	;volatile
 14037  05AC                     l5839:	
 14038                           
 14039                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 14040  05AC  3014               	movlw	20
 14041  05AD  003D               	movlb	29	; select bank29
 14042  05AE  00C6               	movwf	70	;volatile
 14043  05AF                     l530:	
 14044  05AF  0008               	return
 14045  05B0                     __end_of_PIN_MANAGER_Initialize:	
 14046                           
 14047                           	psect	text33
 14048  0D87                     __ptext33:	
 14049 ;; *************** function _OSCILLATOR_Initialize *****************
 14050 ;; Defined at:
 14051 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14052 ;; Parameters:    Size  Location     Type
 14053 ;;		None
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;		None
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  1    wreg      void 
 14058 ;; Registers used:
 14059 ;;		wreg, status,2
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;Total ram usage:        0 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:    6
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		_SYSTEM_Initialize
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           
 14080                           ;psect for function _OSCILLATOR_Initialize
 14081  0D87                     _OSCILLATOR_Initialize:	
 14082  0D87                     l5841:	
 14083                           ;incstack = 0
 14084                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14085                           
 14086                           
 14087                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 14088  0D87  3062               	movlw	98
 14089  0D88  0031               	movlb	17	; select bank17
 14090  0D89  008D               	movwf	13	;volatile
 14091  0D8A                     l5843:	
 14092                           
 14093                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 14094  0D8A  018F               	clrf	15	;volatile
 14095  0D8B                     l5845:	
 14096                           
 14097                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 14098  0D8B  0191               	clrf	17	;volatile
 14099                           
 14100                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 14101  0D8C  3002               	movlw	2
 14102  0D8D  0093               	movwf	19	;volatile
 14103  0D8E                     l5847:	
 14104                           
 14105                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 14106  0D8E  0192               	clrf	18	;volatile
 14107  0D8F                     l442:	
 14108  0D8F  0008               	return
 14109  0D90                     __end_of_OSCILLATOR_Initialize:	
 14110                           
 14111                           	psect	text34
 14112  0DEB                     __ptext34:	
 14113 ;; *************** function _EXT_INT_Initialize *****************
 14114 ;; Defined at:
 14115 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;		None
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;		None
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg, status,2, status,0, pclath, cstack
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14133 ;;Total ram usage:        0 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; Hardware stack levels required when called:    7
 14136 ;; This function calls:
 14137 ;;		_INT_SetInterruptHandler
 14138 ;; This function is called by:
 14139 ;;		_SYSTEM_Initialize
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           
 14144                           ;psect for function _EXT_INT_Initialize
 14145  0DEB                     _EXT_INT_Initialize:	
 14146  0DEB                     l5779:	
 14147                           ;incstack = 0
 14148                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14149                           
 14150                           
 14151                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 14152  0DEB  002E               	movlb	14	; select bank14
 14153  0DEC  100C               	bcf	12,0	;volatile
 14154                           
 14155                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 14156  0DED  140B               	bsf	11,0	;volatile
 14157  0DEE                     l5781:	
 14158                           
 14159                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 14160  0DEE  30B2               	movlw	low _INT_DefaultInterruptHandler
 14161  0DEF  0020               	movlb	0	; select bank0
 14162  0DF0  00C6               	movwf	INT_SetInterruptHandler@InterruptHandler
 14163  0DF1  300C               	movlw	high _INT_DefaultInterruptHandler
 14164  0DF2  00C7               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 14165  0DF3  318D  251A  318D   	fcall	_INT_SetInterruptHandler
 14166  0DF6                     l5783:	
 14167                           
 14168                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 14169  0DF6  002E               	movlb	14	; select bank14
 14170  0DF7  1416               	bsf	22,0	;volatile
 14171  0DF8                     l347:	
 14172  0DF8  0008               	return
 14173  0DF9                     __end_of_EXT_INT_Initialize:	
 14174                           
 14175                           	psect	text35
 14176  0D1A                     __ptext35:	
 14177 ;; *************** function _INT_SetInterruptHandler *****************
 14178 ;; Defined at:
 14179 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14182 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;		None
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  1    wreg      void 
 14187 ;; Registers used:
 14188 ;;		wreg
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;Total ram usage:        2 bytes
 14199 ;; Hardware stack levels used:    1
 14200 ;; Hardware stack levels required when called:    6
 14201 ;; This function calls:
 14202 ;;		Nothing
 14203 ;; This function is called by:
 14204 ;;		_EXT_INT_Initialize
 14205 ;;		_main
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           
 14210                           ;psect for function _INT_SetInterruptHandler
 14211  0D1A                     _INT_SetInterruptHandler:	
 14212  0D1A                     l5691:	
 14213                           ;incstack = 0
 14214                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 14215                           
 14216                           
 14217                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 14218  0D1A  0020               	movlb	0	; select bank0
 14219  0D1B  0847               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 14220  0D1C  00E3               	movwf	_INT_InterruptHandler+1
 14221  0D1D  0846               	movf	INT_SetInterruptHandler@InterruptHandler,w
 14222  0D1E  00E2               	movwf	_INT_InterruptHandler
 14223  0D1F                     l341:	
 14224  0D1F  0008               	return
 14225  0D20                     __end_of_INT_SetInterruptHandler:	
 14226                           
 14227                           	psect	text36
 14228  0EC6                     __ptext36:	
 14229 ;; *************** function _ADCC_Initialize *****************
 14230 ;; Defined at:
 14231 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;		None
 14234 ;; Auto vars:     Size  Location     Type
 14235 ;;		None
 14236 ;; Return value:  Size  Location     Type
 14237 ;;                  1    wreg      void 
 14238 ;; Registers used:
 14239 ;;		wreg, status,2
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14249 ;;Total ram usage:        0 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:    6
 14252 ;; This function calls:
 14253 ;;		Nothing
 14254 ;; This function is called by:
 14255 ;;		_SYSTEM_Initialize
 14256 ;; This function uses a non-reentrant model
 14257 ;;
 14258                           
 14259                           
 14260                           ;psect for function _ADCC_Initialize
 14261  0EC6                     _ADCC_Initialize:	
 14262  0EC6                     l5853:	
 14263                           ;incstack = 0
 14264                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14265                           
 14266                           
 14267                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 14268  0EC6  0022               	movlb	2	; select bank2
 14269  0EC7  018E               	clrf	14	;volatile
 14270                           
 14271                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 14272  0EC8  018F               	clrf	15	;volatile
 14273                           
 14274                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 14275  0EC9  0190               	clrf	16	;volatile
 14276                           
 14277                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 14278  0ECA  0191               	clrf	17	;volatile
 14279                           
 14280                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 14281  0ECB  0192               	clrf	18	;volatile
 14282                           
 14283                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 14284  0ECC  0193               	clrf	19	;volatile
 14285                           
 14286                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 14287  0ECD  018D               	clrf	13	;volatile
 14288                           
 14289                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 14290  0ECE  0021               	movlb	1	; select bank1
 14291  0ECF  019E               	clrf	30	;volatile
 14292                           
 14293                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 14294  0ED0  019B               	clrf	27	;volatile
 14295                           
 14296                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 14297  0ED1  0194               	clrf	20	;volatile
 14298                           
 14299                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 14300  0ED2  0195               	clrf	21	;volatile
 14301                           
 14302                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 14303  0ED3  0196               	clrf	22	;volatile
 14304                           
 14305                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 14306  0ED4  0197               	clrf	23	;volatile
 14307                           
 14308                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 14309  0ED5  019A               	clrf	26	;volatile
 14310                           
 14311                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 14312  0ED6  0199               	clrf	25	;volatile
 14313                           
 14314                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 14315  0ED7  0198               	clrf	24	;volatile
 14316  0ED8                     l5855:	
 14317                           
 14318                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 14319  0ED8  3084               	movlw	132
 14320  0ED9  0093               	movwf	19	;volatile
 14321  0EDA                     l5857:	
 14322                           
 14323                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 14324  0EDA  019D               	clrf	29	;volatile
 14325  0EDB                     l757:	
 14326  0EDB  0008               	return
 14327  0EDC                     __end_of_ADCC_Initialize:	
 14328                           
 14329                           	psect	text37
 14330  0F6F                     __ptext37:	
 14331 ;; *************** function _LED_bin *****************
 14332 ;; Defined at:
 14333 ;;		line 414 in file "main.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  value           2    3[BANK0 ] unsigned int 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      void 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;Total ram usage:        5 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    6
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_main
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           
 14362                           ;psect for function _LED_bin
 14363  0F6F                     _LED_bin:	
 14364  0F6F                     l6061:	
 14365                           ;incstack = 0
 14366                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 14367                           
 14368                           
 14369                           ;main.c: 416:     LATAbits.LATA4 = (value & 1);
 14370  0F6F  0020               	movlb	0	; select bank0
 14371  0F70  0846               	movf	LED_bin@value,w
 14372  0F71  3901               	andlw	1
 14373  0F72  00C8               	movwf	??_LED_bin
 14374  0F73  0EC8               	swapf	??_LED_bin,f
 14375  0F74  0816               	movf	22,w	;volatile
 14376  0F75  0648               	xorwf	??_LED_bin,w
 14377  0F76  39EF               	andlw	-17
 14378  0F77  0648               	xorwf	??_LED_bin,w
 14379  0F78  0096               	movwf	22	;volatile
 14380                           
 14381                           ;main.c: 417:     LATAbits.LATA5 = (value >>1);
 14382  0F79  0847               	movf	LED_bin@value+1,w
 14383  0F7A  00C9               	movwf	??_LED_bin+1
 14384  0F7B  0846               	movf	LED_bin@value,w
 14385  0F7C  00C8               	movwf	??_LED_bin
 14386  0F7D  36C9               	lsrf	??_LED_bin+1,f
 14387  0F7E  0CC8               	rrf	??_LED_bin,f
 14388  0F7F  0848               	movf	??_LED_bin,w
 14389  0F80  00CA               	movwf	??_LED_bin+2
 14390  0F81  0ECA               	swapf	??_LED_bin+2,f
 14391  0F82  0DCA               	rlf	??_LED_bin+2,f
 14392  0F83  0816               	movf	22,w	;volatile
 14393  0F84  064A               	xorwf	??_LED_bin+2,w
 14394  0F85  39DF               	andlw	-33
 14395  0F86  064A               	xorwf	??_LED_bin+2,w
 14396  0F87  0096               	movwf	22	;volatile
 14397  0F88                     l1297:	
 14398  0F88  0008               	return
 14399  0F89                     __end_of_LED_bin:	
 14400                           
 14401                           	psect	text38
 14402  0F55                     __ptext38:	
 14403 ;; *************** function _ADC_read *****************
 14404 ;; Defined at:
 14405 ;;		line 427 in file "main.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;		None
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;		None
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  2    5[BANK0 ] unsigned int 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0, pclath, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;Total ram usage:        2 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    7
 14426 ;; This function calls:
 14427 ;;		_ADCC_GetConversionResult
 14428 ;;		_ADCC_IsConversionDone
 14429 ;;		_ADCC_StartConversion
 14430 ;; This function is called by:
 14431 ;;		_main
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           
 14436                           ;psect for function _ADC_read
 14437  0F55                     _ADC_read:	
 14438  0F55                     l6051:	
 14439                           ;incstack = 0
 14440                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 14441                           
 14442                           
 14443                           ;main.c: 429:     ADCC_StartConversion(channel_ANA0);
 14444  0F55  3000               	movlw	0
 14445  0F56  318D  2565  318F   	fcall	_ADCC_StartConversion
 14446                           
 14447                           ;main.c: 430:     while(!ADCC_IsConversionDone()){
 14448  0F59  2F5E               	goto	l6055
 14449  0F5A                     l6053:	
 14450                           
 14451                           ;main.c: 431:         _delay((unsigned long)((1)*(1000000/4000.0)));
 14452  0F5A  3053               	movlw	83
 14453  0F5B                     u3457:	
 14454  0F5B  0B89               	decfsz	9,f
 14455  0F5C  2F5B               	goto	u3457
 14456  0F5D  0000               	nop
 14457  0F5E                     l6055:	
 14458                           
 14459                           ;main.c: 430:     while(!ADCC_IsConversionDone()){
 14460  0F5E  318D  253F  318F   	fcall	_ADCC_IsConversionDone
 14461  0F61  3A00               	xorlw	0
 14462  0F62  1903               	skipnz
 14463  0F63  2F65               	goto	u3041
 14464  0F64  2F66               	goto	u3040
 14465  0F65                     u3041:	
 14466  0F65  2F5A               	goto	l6053
 14467  0F66                     u3040:	
 14468  0F66                     l6057:	
 14469                           
 14470                           ;main.c: 434:     return ADCC_GetConversionResult();
 14471  0F66  318D  257E  318F   	fcall	_ADCC_GetConversionResult
 14472  0F69  0020               	movlb	0	; select bank0
 14473  0F6A  0847               	movf	?_ADCC_GetConversionResult+1,w
 14474  0F6B  00C9               	movwf	?_ADC_read+1
 14475  0F6C  0846               	movf	?_ADCC_GetConversionResult,w
 14476  0F6D  00C8               	movwf	?_ADC_read
 14477  0F6E                     l1303:	
 14478  0F6E  0008               	return
 14479  0F6F                     __end_of_ADC_read:	
 14480                           
 14481                           	psect	text39
 14482  0D65                     __ptext39:	
 14483 ;; *************** function _ADCC_StartConversion *****************
 14484 ;; Defined at:
 14485 ;;		line 106 in file "mcc_generated_files/adcc.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;  channel         1    wreg     enum E12246
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;  channel         1    3[BANK0 ] enum E12246
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		wreg
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;Total ram usage:        1 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:    6
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_ADC_read
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           
 14514                           ;psect for function _ADCC_StartConversion
 14515  0D65                     _ADCC_StartConversion:	
 14516                           
 14517                           ;incstack = 0
 14518                           ; Regs used in _ADCC_StartConversion: [wreg]
 14519                           ;ADCC_StartConversion@channel stored from wreg
 14520  0D65  0020               	movlb	0	; select bank0
 14521  0D66  00C6               	movwf	ADCC_StartConversion@channel
 14522  0D67                     l5903:	
 14523                           
 14524                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 14525  0D67  0846               	movf	ADCC_StartConversion@channel,w
 14526  0D68  0021               	movlb	1	; select bank1
 14527  0D69  009E               	movwf	30	;volatile
 14528  0D6A                     l5905:	
 14529                           
 14530                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 14531  0D6A  1793               	bsf	19,7	;volatile
 14532  0D6B                     l5907:	
 14533                           
 14534                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 14535  0D6B  1413               	bsf	19,0	;volatile
 14536  0D6C                     l760:	
 14537  0D6C  0008               	return
 14538  0D6D                     __end_of_ADCC_StartConversion:	
 14539                           
 14540                           	psect	text40
 14541  0D3F                     __ptext40:	
 14542 ;; *************** function _ADCC_IsConversionDone *****************
 14543 ;; Defined at:
 14544 ;;		line 118 in file "mcc_generated_files/adcc.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1    wreg      _Bool 
 14551 ;; Registers used:
 14552 ;;		wreg, status,0
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:    6
 14565 ;; This function calls:
 14566 ;;		Nothing
 14567 ;; This function is called by:
 14568 ;;		_ADC_read
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           
 14573                           ;psect for function _ADCC_IsConversionDone
 14574  0D3F                     _ADCC_IsConversionDone:	
 14575  0D3F                     l5909:	
 14576                           ;incstack = 0
 14577                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 14578                           
 14579                           
 14580                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 14581  0D3F  1003               	clrc
 14582  0D40  0021               	movlb	1	; select bank1
 14583  0D41  1C13               	btfss	19,0	;volatile
 14584  0D42  1403               	setc
 14585  0D43  3000               	movlw	0
 14586  0D44  3D09               	addwfc	9,w
 14587  0D45                     l763:	
 14588  0D45  0008               	return
 14589  0D46                     __end_of_ADCC_IsConversionDone:	
 14590                           
 14591                           	psect	text41
 14592  0D7E                     __ptext41:	
 14593 ;; *************** function _ADCC_GetConversionResult *****************
 14594 ;; Defined at:
 14595 ;;		line 124 in file "mcc_generated_files/adcc.c"
 14596 ;; Parameters:    Size  Location     Type
 14597 ;;		None
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;		None
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  2    3[BANK0 ] unsigned short 
 14602 ;; Registers used:
 14603 ;;		wreg
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14613 ;;Total ram usage:        2 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:    6
 14616 ;; This function calls:
 14617 ;;		Nothing
 14618 ;; This function is called by:
 14619 ;;		_ADC_read
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           
 14624                           ;psect for function _ADCC_GetConversionResult
 14625  0D7E                     _ADCC_GetConversionResult:	
 14626  0D7E                     l5913:	
 14627                           ;incstack = 0
 14628                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 14629                           
 14630                           
 14631                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14632  0D7E  0021               	movlb	1	; select bank1
 14633  0D7F  080D               	movf	13,w	;volatile
 14634  0D80  0020               	movlb	0	; select bank0
 14635  0D81  00C7               	movwf	?_ADCC_GetConversionResult+1
 14636  0D82  0021               	movlb	1	; select bank1
 14637  0D83  080C               	movf	12,w	;volatile
 14638  0D84  0020               	movlb	0	; select bank0
 14639  0D85  00C6               	movwf	?_ADCC_GetConversionResult
 14640  0D86                     l766:	
 14641  0D86  0008               	return
 14642  0D87                     __end_of_ADCC_GetConversionResult:	
 14643                           
 14644                           	psect	intentry
 14645  0004                     __pintentry:	
 14646 ;; *************** function _INTERRUPT_InterruptManager *****************
 14647 ;; Defined at:
 14648 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;		None
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;		None
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      void 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;Total ram usage:        0 bytes
 14667 ;; Hardware stack levels used:    1
 14668 ;; Hardware stack levels required when called:    5
 14669 ;; This function calls:
 14670 ;;		Absolute function
 14671 ;;		_INT_ISR
 14672 ;;		_TMR0_ISR
 14673 ;;		_TMR1_ISR
 14674 ;;		_TMR2_ISR
 14675 ;;		_i2c_ISR
 14676 ;;		_i2c_busCollisionISR
 14677 ;; This function is called by:
 14678 ;;		Interrupt level 1
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682  0004                     _INTERRUPT_InterruptManager:	
 14683                           
 14684                           ;incstack = 0
 14685  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14686                           
 14687                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14688  0005  3180               	pagesel	$
 14689  0006                     i1l5309:	
 14690                           
 14691                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 14692  0006  002E               	movlb	14	; select bank14
 14693  0007  1C16               	btfss	22,0	;volatile
 14694  0008  280A               	goto	u253_21
 14695  0009  280B               	goto	u253_20
 14696  000A                     u253_21:	
 14697  000A  2813               	goto	i1l378
 14698  000B                     u253_20:	
 14699  000B                     i1l5311:	
 14700  000B  1C0C               	btfss	12,0	;volatile
 14701  000C  280E               	goto	u254_21
 14702  000D  280F               	goto	u254_20
 14703  000E                     u254_21:	
 14704  000E  2813               	goto	i1l378
 14705  000F                     u254_20:	
 14706  000F                     i1l5313:	
 14707                           
 14708                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 14709  000F  318D  2514  3180   	fcall	_INT_ISR
 14710                           
 14711                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14712  0012  2859               	goto	i1l392
 14713  0013                     i1l378:	
 14714                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 14715                           
 14716  0013  1E96               	btfss	22,5	;volatile
 14717  0014  2816               	goto	u255_21
 14718  0015  2817               	goto	u255_20
 14719  0016                     u255_21:	
 14720  0016  281F               	goto	i1l380
 14721  0017                     u255_20:	
 14722  0017                     i1l5315:	
 14723  0017  1E8C               	btfss	12,5	;volatile
 14724  0018  281A               	goto	u256_21
 14725  0019  281B               	goto	u256_20
 14726  001A                     u256_21:	
 14727  001A  281F               	goto	i1l380
 14728  001B                     u256_20:	
 14729  001B                     i1l5317:	
 14730                           
 14731                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 14732  001B  318D  25F9  3180   	fcall	_TMR0_ISR
 14733                           
 14734                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 14735  001E  2859               	goto	i1l392
 14736  001F                     i1l380:	
 14737                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 14738                           
 14739  001F  1F0B               	btfss	11,6	;volatile
 14740  0020  2822               	goto	u257_21
 14741  0021  2823               	goto	u257_20
 14742  0022                     u257_21:	
 14743  0022  2859               	goto	i1l386
 14744  0023                     u257_20:	
 14745  0023                     i1l5319:	
 14746                           
 14747                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 14748  0023  1C1A               	btfss	26,0	;volatile
 14749  0024  2826               	goto	u258_21
 14750  0025  2827               	goto	u258_20
 14751  0026                     u258_21:	
 14752  0026  282F               	goto	i1l383
 14753  0027                     u258_20:	
 14754  0027                     i1l5321:	
 14755  0027  1C10               	btfss	16,0	;volatile
 14756  0028  282A               	goto	u259_21
 14757  0029  282B               	goto	u259_20
 14758  002A                     u259_21:	
 14759  002A  282F               	goto	i1l383
 14760  002B                     u259_20:	
 14761  002B                     i1l5323:	
 14762                           
 14763                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 14764  002B  318E  26DC  3180   	fcall	_TMR1_ISR
 14765                           
 14766                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14767  002E  2859               	goto	i1l392
 14768  002F                     i1l383:	
 14769                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 14770                           
 14771  002F  1C99               	btfss	25,1	;volatile
 14772  0030  2832               	goto	u260_21
 14773  0031  2833               	goto	u260_20
 14774  0032                     u260_21:	
 14775  0032  283E               	goto	i1l385
 14776  0033                     u260_20:	
 14777  0033                     i1l5325:	
 14778  0033  1C8F               	btfss	15,1	;volatile
 14779  0034  2836               	goto	u261_21
 14780  0035  2837               	goto	u261_20
 14781  0036                     u261_21:	
 14782  0036  283E               	goto	i1l385
 14783  0037                     u261_20:	
 14784  0037                     i1l5327:	
 14785                           
 14786                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_busCollisionISR();
 14787  0037  0020               	movlb	0	; select bank0
 14788  0038  0835               	movf	_i2c1_driver_busCollisionISR+1,w
 14789  0039  008A               	movwf	10
 14790  003A  0834               	movf	_i2c1_driver_busCollisionISR,w
 14791  003B  000A               	callw
 14792  003C  3180               	pagesel	$
 14793                           
 14794                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14795  003D  2859               	goto	i1l392
 14796  003E                     i1l385:	
 14797                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 14798                           
 14799  003E  1C19               	btfss	25,0	;volatile
 14800  003F  2841               	goto	u262_21
 14801  0040  2842               	goto	u262_20
 14802  0041                     u262_21:	
 14803  0041  284D               	goto	i1l387
 14804  0042                     u262_20:	
 14805  0042                     i1l5329:	
 14806  0042  1C0F               	btfss	15,0	;volatile
 14807  0043  2845               	goto	u263_21
 14808  0044  2846               	goto	u263_20
 14809  0045                     u263_21:	
 14810  0045  284D               	goto	i1l387
 14811  0046                     u263_20:	
 14812  0046                     i1l5331:	
 14813                           
 14814                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_i2cISR();
 14815  0046  0020               	movlb	0	; select bank0
 14816  0047  0833               	movf	_i2c1_driver_i2cISR+1,w
 14817  0048  008A               	movwf	10
 14818  0049  0832               	movf	_i2c1_driver_i2cISR,w
 14819  004A  000A               	callw
 14820  004B  3180               	pagesel	$
 14821                           
 14822                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14823  004C  2859               	goto	i1l392
 14824  004D                     i1l387:	
 14825                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 14826                           
 14827  004D  1C9A               	btfss	26,1	;volatile
 14828  004E  2850               	goto	u264_21
 14829  004F  2851               	goto	u264_20
 14830  0050                     u264_21:	
 14831  0050  2859               	goto	i1l386
 14832  0051                     u264_20:	
 14833  0051                     i1l5333:	
 14834  0051  1C90               	btfss	16,1	;volatile
 14835  0052  2854               	goto	u265_21
 14836  0053  2855               	goto	u265_20
 14837  0054                     u265_21:	
 14838  0054  2859               	goto	i1l386
 14839  0055                     u265_20:	
 14840  0055                     i1l5335:	
 14841                           
 14842                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 14843  0055  318E  2608  3180   	fcall	_TMR2_ISR
 14844                           
 14845                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 14846  0058  2859               	goto	i1l392
 14847  0059                     i1l386:	
 14848  0059                     i1l392:	
 14849  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14850  005A  0009               	retfie
 14851  005B                     __end_of_INTERRUPT_InterruptManager:	
 14852                           
 14853                           	psect	text43
 14854  0CDE                     __ptext43:	
 14855 ;; *************** function _i2c_busCollisionISR *****************
 14856 ;; Defined at:
 14857 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;		None
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;		None
 14862 ;; Return value:  Size  Location     Type
 14863 ;;                  1    wreg      void 
 14864 ;; Registers used:
 14865 ;;		status,2, status,0, pclath, cstack
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/0
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;Total ram usage:        0 bytes
 14876 ;; Hardware stack levels used:    1
 14877 ;; Hardware stack levels required when called:    1
 14878 ;; This function calls:
 14879 ;;		_i2c1_driver_clearBusCollision
 14880 ;; This function is called by:
 14881 ;;		_i2c_open
 14882 ;;		_INTERRUPT_InterruptManager
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           
 14887                           ;psect for function _i2c_busCollisionISR
 14888  0CDE                     _i2c_busCollisionISR:	
 14889  0CDE                     i1l4995:	
 14890                           ;incstack = 0
 14891                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 14892                           
 14893                           
 14894                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 14895  0CDE  318C  24D0  318C   	fcall	_i2c1_driver_clearBusCollision
 14896  0CE1                     i1l213:	
 14897  0CE1  0008               	return
 14898  0CE2                     __end_of_i2c_busCollisionISR:	
 14899                           
 14900                           	psect	text44
 14901  0CD0                     __ptext44:	
 14902 ;; *************** function _i2c1_driver_clearBusCollision *****************
 14903 ;; Defined at:
 14904 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;		None
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      void 
 14911 ;; Registers used:
 14912 ;;		None
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14922 ;;Total ram usage:        0 bytes
 14923 ;; Hardware stack levels used:    1
 14924 ;; This function calls:
 14925 ;;		Nothing
 14926 ;; This function is called by:
 14927 ;;		_i2c_busCollisionISR
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           
 14932                           ;psect for function _i2c1_driver_clearBusCollision
 14933  0CD0                     _i2c1_driver_clearBusCollision:	
 14934  0CD0                     i1l4627:	
 14935                           ;incstack = 0
 14936                           ; Regs used in _i2c1_driver_clearBusCollision: []
 14937                           
 14938                           
 14939                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 14940  0CD0  002E               	movlb	14	; select bank14
 14941  0CD1  108F               	bcf	15,1	;volatile
 14942  0CD2                     i1l672:	
 14943  0CD2  0008               	return
 14944  0CD3                     __end_of_i2c1_driver_clearBusCollision:	
 14945                           
 14946                           	psect	text45
 14947  0707                     __ptext45:	
 14948 ;; *************** function _i2c_ISR *****************
 14949 ;; Defined at:
 14950 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;		None
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;		None
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      void 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;Total ram usage:        3 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    4
 14971 ;; This function calls:
 14972 ;;		_do_I2C_DO_ACK
 14973 ;;		_do_I2C_DO_ADDRESS_NACK
 14974 ;;		_do_I2C_DO_NACK_RESTART
 14975 ;;		_do_I2C_DO_NACK_STOP
 14976 ;;		_do_I2C_IDLE
 14977 ;;		_do_I2C_RCEN
 14978 ;;		_do_I2C_RESET
 14979 ;;		_do_I2C_RX
 14980 ;;		_do_I2C_SEND_ADR_READ
 14981 ;;		_do_I2C_SEND_ADR_WRITE
 14982 ;;		_do_I2C_SEND_RESTART
 14983 ;;		_do_I2C_SEND_RESTART_READ
 14984 ;;		_do_I2C_SEND_RESTART_WRITE
 14985 ;;		_do_I2C_SEND_STOP
 14986 ;;		_do_I2C_TX
 14987 ;;		_do_I2C_TX_EMPTY
 14988 ;;		_i2c1_driver_isNACK
 14989 ;;		_mssp1_clearIRQ
 14990 ;; This function is called by:
 14991 ;;		_i2c_open
 14992 ;;		_i2c_poller
 14993 ;;		_INTERRUPT_InterruptManager
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           
 14998                           ;psect for function _i2c_ISR
 14999  0707                     _i2c_ISR:	
 15000  0707                     i1l4985:	
 15001                           ;incstack = 0
 15002                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15003                           
 15004                           
 15005                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 15006  0707  318C  24CD  3187   	fcall	_mssp1_clearIRQ
 15007  070A                     i1l4987:	
 15008                           
 15009                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 15010  070A  0021               	movlb	1	; select bank1
 15011  070B  1DA0               	btfss	_i2c_status^(0+128),3
 15012  070C  2F0E               	goto	u213_21
 15013  070D  2F0F               	goto	u213_20
 15014  070E                     u213_21:	
 15015  070E  2F1C               	goto	i1l4993
 15016  070F                     u213_20:	
 15017  070F                     i1l4989:	
 15018  070F  318D  254D  3187   	fcall	_i2c1_driver_isNACK
 15019  0712  1C03               	btfss	3,0
 15020  0713  2F15               	goto	u214_21
 15021  0714  2F16               	goto	u214_20
 15022  0715                     u214_21:	
 15023  0715  2F1C               	goto	i1l4993
 15024  0716                     u214_20:	
 15025  0716                     i1l4991:	
 15026                           
 15027                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 15028  0716  300F               	movlw	15
 15029  0717  0020               	movlb	0	; select bank0
 15030  0718  00C3               	movwf	??_i2c_ISR
 15031  0719  0843               	movf	??_i2c_ISR,w
 15032  071A  0021               	movlb	1	; select bank1
 15033  071B  00A9               	movwf	(_i2c_status^(0+128)+9)
 15034  071C                     i1l4993:	
 15035                           
 15036                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 15037  071C  0021               	movlb	1	; select bank1
 15038  071D  0829               	movf	(_i2c_status^(0+128)+9),w
 15039  071E  0020               	movlb	0	; select bank0
 15040  071F  00C3               	movwf	??_i2c_ISR
 15041  0720  01C4               	clrf	??_i2c_ISR+1
 15042  0721  35C3               	lslf	??_i2c_ISR,f
 15043  0722  0DC4               	rlf	??_i2c_ISR+1,f
 15044  0723  30AA               	movlw	low (_fsmStateTable| (0+32768))
 15045  0724  0743               	addwf	??_i2c_ISR,w
 15046  0725  0084               	movwf	4
 15047  0726  3087               	movlw	high (_fsmStateTable| (0+32768))
 15048  0727  3D44               	addwfc	??_i2c_ISR+1,w
 15049  0728  0085               	movwf	5
 15050  0729  3F01               	moviw [1]fsr0
 15051  072A  008A               	movwf	10
 15052  072B  3F00               	moviw [0]fsr0
 15053  072C  000A               	callw
 15054  072D  3187               	pagesel	$
 15055  072E  0020               	movlb	0	; select bank0
 15056  072F  00C5               	movwf	??_i2c_ISR+2
 15057  0730  0845               	movf	??_i2c_ISR+2,w
 15058  0731  0021               	movlb	1	; select bank1
 15059  0732  00A9               	movwf	(_i2c_status^(0+128)+9)
 15060  0733                     i1l210:	
 15061  0733  0008               	return
 15062  0734                     __end_of_i2c_ISR:	
 15063                           
 15064                           	psect	text46
 15065  0CCD                     __ptext46:	
 15066 ;; *************** function _mssp1_clearIRQ *****************
 15067 ;; Defined at:
 15068 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      void 
 15075 ;; Registers used:
 15076 ;;		None
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; This function calls:
 15089 ;;		Nothing
 15090 ;; This function is called by:
 15091 ;;		_i2c_ISR
 15092 ;;		_i2c_open
 15093 ;;		_i2c_close
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           
 15098                           ;psect for function _mssp1_clearIRQ
 15099  0CCD                     _mssp1_clearIRQ:	
 15100  0CCD                     i1l4443:	
 15101                           ;incstack = 0
 15102                           ; Regs used in _mssp1_clearIRQ: []
 15103                           
 15104                           
 15105                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 15106  0CCD  002E               	movlb	14	; select bank14
 15107  0CCE  100F               	bcf	15,0	;volatile
 15108  0CCF                     i1l576:	
 15109  0CCF  0008               	return
 15110  0CD0                     __end_of_mssp1_clearIRQ:	
 15111                           
 15112                           	psect	text47
 15113  051D                     __ptext47:	
 15114 ;; *************** function _do_I2C_RX *****************
 15115 ;; Defined at:
 15116 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;		None
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;		None
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1    wreg      enum E12722
 15123 ;; Registers used:
 15124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;Total ram usage:        3 bytes
 15135 ;; Hardware stack levels used:    1
 15136 ;; Hardware stack levels required when called:    3
 15137 ;; This function calls:
 15138 ;;		Absolute function
 15139 ;;		_do_I2C_DO_NACK_RESTART
 15140 ;;		_do_I2C_DO_NACK_STOP
 15141 ;;		_i2c1_driver_getRXData
 15142 ;;		_i2c1_driver_sendACK
 15143 ;;		_i2c_restartWrite
 15144 ;;		_rd1RegCompleteHandler
 15145 ;;		_rd2RegCompleteHandler
 15146 ;;		_rdBlkRegCompleteHandler
 15147 ;;		_returnReset
 15148 ;;		_returnStop
 15149 ;;		_wr1RegCompleteHandler
 15150 ;;		_wr2RegCompleteHandler
 15151 ;; This function is called by:
 15152 ;;		_i2c_ISR
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           
 15156                           
 15157                           ;psect for function _do_I2C_RX
 15158  051D                     _do_I2C_RX:	
 15159  051D                     i1l4569:	
 15160                           ;incstack = 0
 15161                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15162                           
 15163                           
 15164                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 15165  051D  318C  24C7  3185   	fcall	_i2c1_driver_getRXData
 15166  0520  00FA               	movwf	??_do_I2C_RX
 15167  0521  0021               	movlb	1	; select bank1
 15168  0522  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 15169  0523  0086               	movwf	6
 15170  0524  0187               	clrf	7
 15171  0525  087A               	movf	??_do_I2C_RX,w
 15172  0526  0081               	movwf	1
 15173  0527                     i1l4571:	
 15174  0527  3001               	movlw	1
 15175  0528  00FA               	movwf	??_do_I2C_RX
 15176  0529  087A               	movf	??_do_I2C_RX,w
 15177  052A  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 15178  052B                     i1l4573:	
 15179                           
 15180                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 15181  052B  3001               	movlw	1
 15182  052C  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15183  052D  3000               	movlw	0
 15184  052E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15185  052F  0823               	movf	(_i2c_status^(0+128)+3),w
 15186  0530  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15187  0531  1903               	btfsc	3,2
 15188  0532  2D34               	goto	u193_21
 15189  0533  2D35               	goto	u193_20
 15190  0534                     u193_21:	
 15191  0534  2D3A               	goto	i1l185
 15192  0535                     u193_20:	
 15193  0535                     i1l4575:	
 15194                           
 15195                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 15196  0535  318C  24D6  3185   	fcall	_i2c1_driver_sendACK
 15197  0538                     i1l4577:	
 15198                           
 15199                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 15200  0538  3005               	movlw	5
 15201  0539  2D66               	goto	i1l186
 15202  053A                     i1l185:	
 15203                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 15204                           
 15205                           
 15206                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 15207  053A  1520               	bsf	_i2c_status^(0+128),2
 15208                           
 15209                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15210  053B  2D44               	goto	i1l4593
 15211  053C                     i1l4583:	
 15212                           
 15213                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 15214  053C  318D  250F  3185   	fcall	_do_I2C_DO_NACK_RESTART
 15215  053F  2D66               	goto	i1l186
 15216  0540                     i1l4587:	
 15217                           
 15218                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 15219  0540  318D  250A  3185   	fcall	_do_I2C_DO_NACK_STOP
 15220  0543  2D66               	goto	i1l186
 15221  0544                     i1l4593:	
 15222  0544  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15223  0545  00FA               	movwf	??_do_I2C_RX
 15224  0546  087A               	movf	??_do_I2C_RX,w
 15225  0547  00F9               	movwf	rdBlkRegCompleteHandler@p
 15226  0548  300B               	movlw	11
 15227  0549  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15228  054A  0086               	movwf	6
 15229  054B  0187               	clrf	7
 15230  054C  3F41               	moviw [1]fsr1
 15231  054D  008A               	movwf	10
 15232  054E  3F40               	moviw [0]fsr1
 15233  054F  000A               	callw
 15234  0550  3185               	pagesel	$
 15235  0551  00FB               	movwf	??_do_I2C_RX+1
 15236  0552  01FC               	clrf	??_do_I2C_RX+2
 15237                           
 15238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15239                           ; Switch size 1, requested type "simple"
 15240                           ; Number of cases is 1, Range of values is 0 to 0
 15241                           ; switch strategies available:
 15242                           ; Name         Instructions Cycles
 15243                           ; simple_byte            4     3 (average)
 15244                           ; direct_byte            8     6 (fixed)
 15245                           ; jumptable            260     6 (fixed)
 15246                           ;	Chosen strategy is simple_byte
 15247  0553  087C               	movf	??_do_I2C_RX+2,w
 15248  0554  3A00               	xorlw	0	; case 0
 15249  0555  1903               	skipnz
 15250  0556  2D58               	goto	i1l6447
 15251  0557  2D40               	goto	i1l4587
 15252  0558                     i1l6447:	
 15253                           
 15254                           ; Switch size 1, requested type "simple"
 15255                           ; Number of cases is 4, Range of values is 1 to 4
 15256                           ; switch strategies available:
 15257                           ; Name         Instructions Cycles
 15258                           ; simple_byte           13     7 (average)
 15259                           ; direct_byte           17     9 (fixed)
 15260                           ; jumptable            263     9 (fixed)
 15261                           ;	Chosen strategy is simple_byte
 15262  0558  087B               	movf	??_do_I2C_RX+1,w
 15263  0559  3A01               	xorlw	1	; case 1
 15264  055A  1903               	skipnz
 15265  055B  2D40               	goto	i1l4587
 15266  055C  3A03               	xorlw	3	; case 2
 15267  055D  1903               	skipnz
 15268  055E  2D3C               	goto	i1l4583
 15269  055F  3A01               	xorlw	1	; case 3
 15270  0560  1903               	skipnz
 15271  0561  2D3C               	goto	i1l4583
 15272  0562  3A07               	xorlw	7	; case 4
 15273  0563  1903               	skipnz
 15274  0564  2D40               	goto	i1l4587
 15275  0565  2D40               	goto	i1l4587
 15276  0566                     i1l186:	
 15277  0566  0008               	return
 15278  0567                     __end_of_do_I2C_RX:	
 15279                           
 15280                           	psect	text48
 15281  047C                     __ptext48:	
 15282 ;; *************** function _do_I2C_TX *****************
 15283 ;; Defined at:
 15284 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;		None
 15287 ;; Auto vars:     Size  Location     Type
 15288 ;;		None
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  1    wreg      enum E12722
 15291 ;; Registers used:
 15292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/0
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15300 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15302 ;;Total ram usage:        3 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; Hardware stack levels required when called:    3
 15305 ;; This function calls:
 15306 ;;		Absolute function
 15307 ;;		_do_I2C_SEND_RESTART_READ
 15308 ;;		_do_I2C_SEND_RESTART_WRITE
 15309 ;;		_do_I2C_SEND_STOP
 15310 ;;		_i2c1_driver_TXData
 15311 ;;		_i2c1_driver_isNACK
 15312 ;;		_i2c_restartWrite
 15313 ;;		_rd1RegCompleteHandler
 15314 ;;		_rd2RegCompleteHandler
 15315 ;;		_rdBlkRegCompleteHandler
 15316 ;;		_returnReset
 15317 ;;		_returnStop
 15318 ;;		_wr1RegCompleteHandler
 15319 ;;		_wr2RegCompleteHandler
 15320 ;; This function is called by:
 15321 ;;		_i2c_ISR
 15322 ;; This function uses a non-reentrant model
 15323 ;;
 15324                           
 15325                           
 15326                           ;psect for function _do_I2C_TX
 15327  047C                     _do_I2C_TX:	
 15328  047C                     i1l4535:	
 15329                           ;incstack = 0
 15330                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15331                           
 15332                           
 15333                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 15334  047C  318D  254D  3184   	fcall	_i2c1_driver_isNACK
 15335  047F  1C03               	btfss	3,0
 15336  0480  2C82               	goto	u191_21
 15337  0481  2C83               	goto	u191_20
 15338  0482                     u191_21:	
 15339  0482  2CB3               	goto	i1l169
 15340  0483                     u191_20:	
 15341  0483  2C90               	goto	i1l4553
 15342  0484                     i1l4539:	
 15343                           
 15344                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 15345  0484  318C  24F1  3184   	fcall	_do_I2C_SEND_RESTART_READ
 15346  0487  2CCF               	goto	i1l172
 15347  0488                     i1l4543:	
 15348                           
 15349                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 15350  0488  318C  24F6  3184   	fcall	_do_I2C_SEND_RESTART_WRITE
 15351  048B  2CCF               	goto	i1l172
 15352  048C                     i1l4547:	
 15353                           
 15354                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 15355  048C  318D  2500  3184   	fcall	_do_I2C_SEND_STOP
 15356  048F  2CCF               	goto	i1l172
 15357  0490                     i1l4553:	
 15358  0490  0021               	movlb	1	; select bank1
 15359  0491  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 15360  0492  00FA               	movwf	??_do_I2C_TX
 15361  0493  087A               	movf	??_do_I2C_TX,w
 15362  0494  00F9               	movwf	rdBlkRegCompleteHandler@p
 15363  0495  3011               	movlw	17
 15364  0496  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15365  0497  0086               	movwf	6
 15366  0498  0187               	clrf	7
 15367  0499  3F41               	moviw [1]fsr1
 15368  049A  008A               	movwf	10
 15369  049B  3F40               	moviw [0]fsr1
 15370  049C  000A               	callw
 15371  049D  3184               	pagesel	$
 15372  049E  00FB               	movwf	??_do_I2C_TX+1
 15373  049F  01FC               	clrf	??_do_I2C_TX+2
 15374                           
 15375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15376                           ; Switch size 1, requested type "simple"
 15377                           ; Number of cases is 1, Range of values is 0 to 0
 15378                           ; switch strategies available:
 15379                           ; Name         Instructions Cycles
 15380                           ; simple_byte            4     3 (average)
 15381                           ; direct_byte            8     6 (fixed)
 15382                           ; jumptable            260     6 (fixed)
 15383                           ;	Chosen strategy is simple_byte
 15384  04A0  087C               	movf	??_do_I2C_TX+2,w
 15385  04A1  3A00               	xorlw	0	; case 0
 15386  04A2  1903               	skipnz
 15387  04A3  2CA5               	goto	i1l6449
 15388  04A4  2C8C               	goto	i1l4547
 15389  04A5                     i1l6449:	
 15390                           
 15391                           ; Switch size 1, requested type "simple"
 15392                           ; Number of cases is 4, Range of values is 1 to 4
 15393                           ; switch strategies available:
 15394                           ; Name         Instructions Cycles
 15395                           ; simple_byte           13     7 (average)
 15396                           ; direct_byte           17     9 (fixed)
 15397                           ; jumptable            263     9 (fixed)
 15398                           ;	Chosen strategy is simple_byte
 15399  04A5  087B               	movf	??_do_I2C_TX+1,w
 15400  04A6  3A01               	xorlw	1	; case 1
 15401  04A7  1903               	skipnz
 15402  04A8  2C8C               	goto	i1l4547
 15403  04A9  3A03               	xorlw	3	; case 2
 15404  04AA  1903               	skipnz
 15405  04AB  2C84               	goto	i1l4539
 15406  04AC  3A01               	xorlw	1	; case 3
 15407  04AD  1903               	skipnz
 15408  04AE  2C88               	goto	i1l4543
 15409  04AF  3A07               	xorlw	7	; case 4
 15410  04B0  1903               	skipnz
 15411  04B1  2C8C               	goto	i1l4547
 15412  04B2  2C8C               	goto	i1l4547
 15413  04B3                     i1l169:	
 15414                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 15415                           
 15416                           
 15417                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 15418  04B3  0021               	movlb	1	; select bank1
 15419  04B4  11A0               	bcf	_i2c_status^(0+128),3
 15420  04B5                     i1l4555:	
 15421                           
 15422                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 15423  04B5  3002               	movlw	2
 15424  04B6  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15425  04B7  0086               	movwf	6
 15426  04B8  0187               	clrf	7
 15427  04B9  3F40               	moviw [0]fsr1
 15428  04BA  0084               	movwf	4
 15429  04BB  0185               	clrf	5
 15430  04BC  0A81               	incf	1,f
 15431  04BD  0800               	movf	0,w
 15432  04BE  318C  24E7  3184   	fcall	_i2c1_driver_TXData
 15433  04C1                     i1l4557:	
 15434                           
 15435                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 15436  04C1  3001               	movlw	1
 15437  04C2  0021               	movlb	1	; select bank1
 15438  04C3  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15439  04C4  3000               	movlw	0
 15440  04C5  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15441  04C6  0823               	movf	(_i2c_status^(0+128)+3),w
 15442  04C7  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15443  04C8  1D03               	btfss	3,2
 15444  04C9  2CCB               	goto	u192_21
 15445  04CA  2CCC               	goto	u192_20
 15446  04CB                     u192_21:	
 15447  04CB  2CCE               	goto	i1l4561
 15448  04CC                     u192_20:	
 15449  04CC                     i1l4559:	
 15450  04CC  3006               	movlw	6
 15451  04CD  2CCF               	goto	i1l172
 15452  04CE                     i1l4561:	
 15453  04CE  3003               	movlw	3
 15454  04CF                     i1l172:	
 15455  04CF  0008               	return
 15456  04D0                     __end_of_do_I2C_TX:	
 15457                           
 15458                           	psect	text49
 15459  0734                     __ptext49:	
 15460 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 15461 ;; Defined at:
 15462 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;		None
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;		None
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  1    wreg      enum E12722
 15469 ;; Registers used:
 15470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;Total ram usage:        3 bytes
 15481 ;; Hardware stack levels used:    1
 15482 ;; Hardware stack levels required when called:    3
 15483 ;; This function calls:
 15484 ;;		Absolute function
 15485 ;;		_do_I2C_SEND_RESTART
 15486 ;;		_do_I2C_SEND_STOP
 15487 ;;		_i2c_restartWrite
 15488 ;;		_rd1RegCompleteHandler
 15489 ;;		_rd2RegCompleteHandler
 15490 ;;		_rdBlkRegCompleteHandler
 15491 ;;		_returnReset
 15492 ;;		_returnStop
 15493 ;;		_wr1RegCompleteHandler
 15494 ;;		_wr2RegCompleteHandler
 15495 ;; This function is called by:
 15496 ;;		_i2c_ISR
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500                           
 15501                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 15502  0734                     _do_I2C_DO_ADDRESS_NACK:	
 15503  0734                     i1l4513:	
 15504                           ;incstack = 0
 15505                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15506                           
 15507                           
 15508                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 15509  0734  0021               	movlb	1	; select bank1
 15510  0735  11A0               	bcf	_i2c_status^(0+128),3
 15511  0736                     i1l4515:	
 15512                           
 15513                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 15514  0736  3002               	movlw	2
 15515  0737  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15516  0738  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15517  0739  00AA               	movwf	(_i2c_status^(0+128)+10)
 15518                           
 15519                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 15520  073A  2F43               	goto	i1l4527
 15521  073B                     i1l4517:	
 15522                           
 15523                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 15524  073B  318C  24FB  3187   	fcall	_do_I2C_SEND_RESTART
 15525  073E  2F5F               	goto	i1l164
 15526  073F                     i1l4521:	
 15527                           
 15528                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 15529  073F  318D  2500  3187   	fcall	_do_I2C_SEND_STOP
 15530  0742  2F5F               	goto	i1l164
 15531  0743                     i1l4527:	
 15532  0743  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 15533  0744  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15534  0745  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15535  0746  00F9               	movwf	rdBlkRegCompleteHandler@p
 15536  0747  300F               	movlw	15
 15537  0748  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15538  0749  0086               	movwf	6
 15539  074A  0187               	clrf	7
 15540  074B  3F41               	moviw [1]fsr1
 15541  074C  008A               	movwf	10
 15542  074D  3F40               	moviw [0]fsr1
 15543  074E  000A               	callw
 15544  074F  3187               	pagesel	$
 15545  0750  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 15546  0751  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 15547                           
 15548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15549                           ; Switch size 1, requested type "simple"
 15550                           ; Number of cases is 1, Range of values is 0 to 0
 15551                           ; switch strategies available:
 15552                           ; Name         Instructions Cycles
 15553                           ; simple_byte            4     3 (average)
 15554                           ; direct_byte            8     6 (fixed)
 15555                           ; jumptable            260     6 (fixed)
 15556                           ;	Chosen strategy is simple_byte
 15557  0752  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 15558  0753  3A00               	xorlw	0	; case 0
 15559  0754  1903               	skipnz
 15560  0755  2F57               	goto	i1l6451
 15561  0756  2F3F               	goto	i1l4521
 15562  0757                     i1l6451:	
 15563                           
 15564                           ; Switch size 1, requested type "simple"
 15565                           ; Number of cases is 2, Range of values is 2 to 3
 15566                           ; switch strategies available:
 15567                           ; Name         Instructions Cycles
 15568                           ; simple_byte            7     4 (average)
 15569                           ; direct_byte           13     9 (fixed)
 15570                           ; jumptable            263     9 (fixed)
 15571                           ;	Chosen strategy is simple_byte
 15572  0757  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 15573  0758  3A02               	xorlw	2	; case 2
 15574  0759  1903               	skipnz
 15575  075A  2F3B               	goto	i1l4517
 15576  075B  3A01               	xorlw	1	; case 3
 15577  075C  1903               	skipnz
 15578  075D  2F3B               	goto	i1l4517
 15579  075E  2F3F               	goto	i1l4521
 15580  075F                     i1l164:	
 15581  075F  0008               	return
 15582  0760                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 15583                           
 15584                           	psect	text50
 15585  0D0F                     __ptext50:	
 15586 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 15587 ;; Defined at:
 15588 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      enum E12722
 15595 ;; Registers used:
 15596 ;;		wreg, status,2, status,0, pclath, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;Total ram usage:        0 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    1
 15609 ;; This function calls:
 15610 ;;		_i2c1_driver_sendNACK
 15611 ;; This function is called by:
 15612 ;;		_do_I2C_RX
 15613 ;;		_i2c_ISR
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           
 15618                           ;psect for function _do_I2C_DO_NACK_RESTART
 15619  0D0F                     _do_I2C_DO_NACK_RESTART:	
 15620  0D0F                     i1l4275:	
 15621                           ;incstack = 0
 15622                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15623                           
 15624                           
 15625                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 15626  0D0F  318C  24DA  318D   	fcall	_i2c1_driver_sendNACK
 15627  0D12                     i1l4277:	
 15628                           
 15629                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 15630  0D12  3009               	movlw	9
 15631  0D13                     i1l158:	
 15632  0D13  0008               	return
 15633  0D14                     __end_of_do_I2C_DO_NACK_RESTART:	
 15634                           
 15635                           	psect	text51
 15636  0D0A                     __ptext51:	
 15637 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 15638 ;; Defined at:
 15639 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 15640 ;; Parameters:    Size  Location     Type
 15641 ;;		None
 15642 ;; Auto vars:     Size  Location     Type
 15643 ;;		None
 15644 ;; Return value:  Size  Location     Type
 15645 ;;                  1    wreg      enum E12722
 15646 ;; Registers used:
 15647 ;;		wreg, status,2, status,0, pclath, cstack
 15648 ;; Tracked objects:
 15649 ;;		On entry : 0/0
 15650 ;;		On exit  : 0/0
 15651 ;;		Unchanged: 0/0
 15652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;Total ram usage:        0 bytes
 15658 ;; Hardware stack levels used:    1
 15659 ;; Hardware stack levels required when called:    1
 15660 ;; This function calls:
 15661 ;;		_i2c1_driver_sendNACK
 15662 ;; This function is called by:
 15663 ;;		_do_I2C_RX
 15664 ;;		_i2c_ISR
 15665 ;; This function uses a non-reentrant model
 15666 ;;
 15667                           
 15668                           
 15669                           ;psect for function _do_I2C_DO_NACK_STOP
 15670  0D0A                     _do_I2C_DO_NACK_STOP:	
 15671  0D0A                     i1l4269:	
 15672                           ;incstack = 0
 15673                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15674                           
 15675                           
 15676                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 15677  0D0A  318C  24DA  318D   	fcall	_i2c1_driver_sendNACK
 15678  0D0D                     i1l4271:	
 15679                           
 15680                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 15681  0D0D  300A               	movlw	10
 15682  0D0E                     i1l155:	
 15683  0D0E  0008               	return
 15684  0D0F                     __end_of_do_I2C_DO_NACK_STOP:	
 15685                           
 15686                           	psect	text52
 15687  0D05                     __ptext52:	
 15688 ;; *************** function _do_I2C_DO_ACK *****************
 15689 ;; Defined at:
 15690 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 15691 ;; Parameters:    Size  Location     Type
 15692 ;;		None
 15693 ;; Auto vars:     Size  Location     Type
 15694 ;;		None
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  1    wreg      enum E12722
 15697 ;; Registers used:
 15698 ;;		wreg, status,2, status,0, pclath, cstack
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;Total ram usage:        0 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:    1
 15711 ;; This function calls:
 15712 ;;		_i2c1_driver_sendACK
 15713 ;; This function is called by:
 15714 ;;		_i2c_ISR
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718                           
 15719                           ;psect for function _do_I2C_DO_ACK
 15720  0D05                     _do_I2C_DO_ACK:	
 15721  0D05                     i1l4507:	
 15722                           ;incstack = 0
 15723                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 15724                           
 15725                           
 15726                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 15727  0D05  318C  24D6  318D   	fcall	_i2c1_driver_sendACK
 15728  0D08                     i1l4509:	
 15729                           
 15730                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 15731  0D08  3005               	movlw	5
 15732  0D09                     i1l152:	
 15733  0D09  0008               	return
 15734  0D0A                     __end_of_do_I2C_DO_ACK:	
 15735                           
 15736                           	psect	text53
 15737  0D38                     __ptext53:	
 15738 ;; *************** function _do_I2C_RCEN *****************
 15739 ;; Defined at:
 15740 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 15741 ;; Parameters:    Size  Location     Type
 15742 ;;		None
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;		None
 15745 ;; Return value:  Size  Location     Type
 15746 ;;                  1    wreg      enum E12722
 15747 ;; Registers used:
 15748 ;;		wreg, status,2, status,0, pclath, cstack
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;Total ram usage:        0 bytes
 15759 ;; Hardware stack levels used:    1
 15760 ;; Hardware stack levels required when called:    1
 15761 ;; This function calls:
 15762 ;;		_i2c1_driver_startRX
 15763 ;; This function is called by:
 15764 ;;		_i2c_ISR
 15765 ;; This function uses a non-reentrant model
 15766 ;;
 15767                           
 15768                           
 15769                           ;psect for function _do_I2C_RCEN
 15770  0D38                     _do_I2C_RCEN:	
 15771  0D38                     i1l4499:	
 15772                           ;incstack = 0
 15773                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 15774                           
 15775                           
 15776                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 15777  0D38  0021               	movlb	1	; select bank1
 15778  0D39  11A0               	bcf	_i2c_status^(0+128),3
 15779  0D3A                     i1l4501:	
 15780                           
 15781                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 15782  0D3A  318C  24C4  318D   	fcall	_i2c1_driver_startRX
 15783  0D3D                     i1l4503:	
 15784                           
 15785                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 15786  0D3D  3004               	movlw	4
 15787  0D3E                     i1l149:	
 15788  0D3E  0008               	return
 15789  0D3F                     __end_of_do_I2C_RCEN:	
 15790                           
 15791                           	psect	text54
 15792  0D5D                     __ptext54:	
 15793 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 15794 ;; Defined at:
 15795 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;		None
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;		None
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      enum E12722
 15802 ;; Registers used:
 15803 ;;		wreg, status,2, status,0, pclath, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;Total ram usage:        0 bytes
 15814 ;; Hardware stack levels used:    1
 15815 ;; Hardware stack levels required when called:    1
 15816 ;; This function calls:
 15817 ;;		_i2c1_driver_TXData
 15818 ;; This function is called by:
 15819 ;;		_i2c_ISR
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           
 15824                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15825  0D5D                     _do_I2C_SEND_ADR_WRITE:	
 15826  0D5D                     i1l4491:	
 15827                           ;incstack = 0
 15828                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15829                           
 15830                           
 15831                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 15832  0D5D  0021               	movlb	1	; select bank1
 15833  0D5E  15A0               	bsf	_i2c_status^(0+128),3
 15834  0D5F                     i1l4493:	
 15835                           
 15836                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 15837  0D5F  3521               	lslf	(_i2c_status^(0+128)+1),w
 15838  0D60  318C  24E7  318D   	fcall	_i2c1_driver_TXData
 15839  0D63                     i1l4495:	
 15840                           
 15841                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 15842  0D63  3003               	movlw	3
 15843  0D64                     i1l146:	
 15844  0D64  0008               	return
 15845  0D65                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15846                           
 15847                           	psect	text55
 15848  0D75                     __ptext55:	
 15849 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15850 ;; Defined at:
 15851 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;		None
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;		None
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1    wreg      enum E12722
 15858 ;; Registers used:
 15859 ;;		wreg, status,2, status,0, pclath, cstack
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/0
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;Total ram usage:        0 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    1
 15872 ;; This function calls:
 15873 ;;		_i2c1_driver_TXData
 15874 ;; This function is called by:
 15875 ;;		_i2c_ISR
 15876 ;; This function uses a non-reentrant model
 15877 ;;
 15878                           
 15879                           
 15880                           ;psect for function _do_I2C_SEND_ADR_READ
 15881  0D75                     _do_I2C_SEND_ADR_READ:	
 15882  0D75                     i1l4483:	
 15883                           ;incstack = 0
 15884                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15885                           
 15886                           
 15887                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 15888  0D75  0021               	movlb	1	; select bank1
 15889  0D76  15A0               	bsf	_i2c_status^(0+128),3
 15890  0D77                     i1l4485:	
 15891                           
 15892                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 15893  0D77  1403               	setc
 15894  0D78  0D21               	rlf	(_i2c_status^(0+128)+1),w
 15895  0D79  318C  24E7  318D   	fcall	_i2c1_driver_TXData
 15896  0D7C                     i1l4487:	
 15897                           
 15898                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 15899  0D7C  3005               	movlw	5
 15900  0D7D                     i1l143:	
 15901  0D7D  0008               	return
 15902  0D7E                     __end_of_do_I2C_SEND_ADR_READ:	
 15903                           
 15904                           	psect	text56
 15905  0D00                     __ptext56:	
 15906 ;; *************** function _do_I2C_SEND_STOP *****************
 15907 ;; Defined at:
 15908 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15909 ;; Parameters:    Size  Location     Type
 15910 ;;		None
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;		None
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  1    wreg      enum E12722
 15915 ;; Registers used:
 15916 ;;		wreg, status,2, status,0, pclath, cstack
 15917 ;; Tracked objects:
 15918 ;;		On entry : 0/0
 15919 ;;		On exit  : 0/0
 15920 ;;		Unchanged: 0/0
 15921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15926 ;;Total ram usage:        0 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:    1
 15929 ;; This function calls:
 15930 ;;		_i2c1_driver_stop
 15931 ;; This function is called by:
 15932 ;;		_do_I2C_DO_ADDRESS_NACK
 15933 ;;		_do_I2C_TX
 15934 ;;		_do_I2C_TX_EMPTY
 15935 ;;		_i2c_ISR
 15936 ;; This function uses a non-reentrant model
 15937 ;;
 15938                           
 15939                           
 15940                           ;psect for function _do_I2C_SEND_STOP
 15941  0D00                     _do_I2C_SEND_STOP:	
 15942  0D00                     i1l4257:	
 15943                           ;incstack = 0
 15944                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15945                           
 15946                           
 15947                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 15948  0D00  318C  24C1  318D   	fcall	_i2c1_driver_stop
 15949  0D03                     i1l4259:	
 15950                           
 15951                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 15952  0D03  3000               	movlw	0
 15953  0D04                     i1l140:	
 15954  0D04  0008               	return
 15955  0D05                     __end_of_do_I2C_SEND_STOP:	
 15956                           
 15957                           	psect	text57
 15958  0CFB                     __ptext57:	
 15959 ;; *************** function _do_I2C_SEND_RESTART *****************
 15960 ;; Defined at:
 15961 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15962 ;; Parameters:    Size  Location     Type
 15963 ;;		None
 15964 ;; Auto vars:     Size  Location     Type
 15965 ;;		None
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  1    wreg      enum E12722
 15968 ;; Registers used:
 15969 ;;		wreg, status,2, status,0, pclath, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;Total ram usage:        0 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    1
 15982 ;; This function calls:
 15983 ;;		_i2c1_driver_restart
 15984 ;; This function is called by:
 15985 ;;		_do_I2C_DO_ADDRESS_NACK
 15986 ;;		_do_I2C_TX_EMPTY
 15987 ;;		_i2c_ISR
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           
 15992                           ;psect for function _do_I2C_SEND_RESTART
 15993  0CFB                     _do_I2C_SEND_RESTART:	
 15994  0CFB                     i1l4251:	
 15995                           ;incstack = 0
 15996                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15997                           
 15998                           
 15999                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 16000  0CFB  318C  24BE  318C   	fcall	_i2c1_driver_restart
 16001  0CFE                     i1l4253:	
 16002                           
 16003                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 16004  0CFE  3001               	movlw	1
 16005  0CFF                     i1l137:	
 16006  0CFF  0008               	return
 16007  0D00                     __end_of_do_I2C_SEND_RESTART:	
 16008                           
 16009                           	psect	text58
 16010  0CF6                     __ptext58:	
 16011 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16012 ;; Defined at:
 16013 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16014 ;; Parameters:    Size  Location     Type
 16015 ;;		None
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;		None
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      enum E12722
 16020 ;; Registers used:
 16021 ;;		wreg, status,2, status,0, pclath, cstack
 16022 ;; Tracked objects:
 16023 ;;		On entry : 0/0
 16024 ;;		On exit  : 0/0
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16031 ;;Total ram usage:        0 bytes
 16032 ;; Hardware stack levels used:    1
 16033 ;; Hardware stack levels required when called:    1
 16034 ;; This function calls:
 16035 ;;		_i2c1_driver_restart
 16036 ;; This function is called by:
 16037 ;;		_do_I2C_TX
 16038 ;;		_i2c_ISR
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           
 16043                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16044  0CF6                     _do_I2C_SEND_RESTART_WRITE:	
 16045  0CF6                     i1l4245:	
 16046                           ;incstack = 0
 16047                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16048                           
 16049                           
 16050                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 16051  0CF6  318C  24BE  318C   	fcall	_i2c1_driver_restart
 16052  0CF9                     i1l4247:	
 16053                           
 16054                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 16055  0CF9  3002               	movlw	2
 16056  0CFA                     i1l134:	
 16057  0CFA  0008               	return
 16058  0CFB                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16059                           
 16060                           	psect	text59
 16061  0CF1                     __ptext59:	
 16062 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16063 ;; Defined at:
 16064 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16065 ;; Parameters:    Size  Location     Type
 16066 ;;		None
 16067 ;; Auto vars:     Size  Location     Type
 16068 ;;		None
 16069 ;; Return value:  Size  Location     Type
 16070 ;;                  1    wreg      enum E12722
 16071 ;; Registers used:
 16072 ;;		wreg, status,2, status,0, pclath, cstack
 16073 ;; Tracked objects:
 16074 ;;		On entry : 0/0
 16075 ;;		On exit  : 0/0
 16076 ;;		Unchanged: 0/0
 16077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16082 ;;Total ram usage:        0 bytes
 16083 ;; Hardware stack levels used:    1
 16084 ;; Hardware stack levels required when called:    1
 16085 ;; This function calls:
 16086 ;;		_i2c1_driver_restart
 16087 ;; This function is called by:
 16088 ;;		_do_I2C_TX
 16089 ;;		_i2c_ISR
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093                           
 16094                           ;psect for function _do_I2C_SEND_RESTART_READ
 16095  0CF1                     _do_I2C_SEND_RESTART_READ:	
 16096  0CF1                     i1l4239:	
 16097                           ;incstack = 0
 16098                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16099                           
 16100                           
 16101                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 16102  0CF1  318C  24BE  318C   	fcall	_i2c1_driver_restart
 16103  0CF4                     i1l4241:	
 16104                           
 16105                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 16106  0CF4  3001               	movlw	1
 16107  0CF5                     i1l131:	
 16108  0CF5  0008               	return
 16109  0CF6                     __end_of_do_I2C_SEND_RESTART_READ:	
 16110                           
 16111                           	psect	text60
 16112  0CEC                     __ptext60:	
 16113 ;; *************** function _do_I2C_IDLE *****************
 16114 ;; Defined at:
 16115 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;		None
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      enum E12722
 16122 ;; Registers used:
 16123 ;;		wreg, status,2
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;Total ram usage:        0 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; This function calls:
 16136 ;;		Nothing
 16137 ;; This function is called by:
 16138 ;;		_i2c_ISR
 16139 ;; This function uses a non-reentrant model
 16140 ;;
 16141                           
 16142                           
 16143                           ;psect for function _do_I2C_IDLE
 16144  0CEC                     _do_I2C_IDLE:	
 16145  0CEC                     i1l4475:	
 16146                           ;incstack = 0
 16147                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16148                           
 16149                           
 16150                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 16151  0CEC  0021               	movlb	1	; select bank1
 16152  0CED  1020               	bcf	_i2c_status^(0+128),0
 16153  0CEE                     i1l4477:	
 16154                           
 16155                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 16156  0CEE  01AA               	clrf	(_i2c_status^(0+128)+10)
 16157  0CEF                     i1l4479:	
 16158                           
 16159                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 16160  0CEF  300E               	movlw	14
 16161  0CF0                     i1l128:	
 16162  0CF0  0008               	return
 16163  0CF1                     __end_of_do_I2C_IDLE:	
 16164                           
 16165                           	psect	text61
 16166  0D55                     __ptext61:	
 16167 ;; *************** function _do_I2C_RESET *****************
 16168 ;; Defined at:
 16169 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;		None
 16172 ;; Auto vars:     Size  Location     Type
 16173 ;;		None
 16174 ;; Return value:  Size  Location     Type
 16175 ;;                  1    wreg      enum E12722
 16176 ;; Registers used:
 16177 ;;		wreg, status,2, status,0, pclath, cstack
 16178 ;; Tracked objects:
 16179 ;;		On entry : 0/0
 16180 ;;		On exit  : 0/0
 16181 ;;		Unchanged: 0/0
 16182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;Total ram usage:        0 bytes
 16188 ;; Hardware stack levels used:    1
 16189 ;; Hardware stack levels required when called:    1
 16190 ;; This function calls:
 16191 ;;		_i2c1_driver_resetBus
 16192 ;; This function is called by:
 16193 ;;		_i2c_ISR
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           
 16198                           ;psect for function _do_I2C_RESET
 16199  0D55                     _do_I2C_RESET:	
 16200  0D55                     i1l4465:	
 16201                           ;incstack = 0
 16202                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16203                           
 16204                           
 16205                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 16206  0D55  318C  24B6  318D   	fcall	_i2c1_driver_resetBus
 16207  0D58                     i1l4467:	
 16208                           
 16209                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 16210  0D58  0021               	movlb	1	; select bank1
 16211  0D59  1020               	bcf	_i2c_status^(0+128),0
 16212  0D5A                     i1l4469:	
 16213                           
 16214                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 16215  0D5A  01AA               	clrf	(_i2c_status^(0+128)+10)
 16216  0D5B                     i1l4471:	
 16217                           
 16218                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 16219  0D5B  300E               	movlw	14
 16220  0D5C                     i1l125:	
 16221  0D5C  0008               	return
 16222  0D5D                     __end_of_do_I2C_RESET:	
 16223                           
 16224                           	psect	text62
 16225  0676                     __ptext62:	
 16226 ;; *************** function _do_I2C_TX_EMPTY *****************
 16227 ;; Defined at:
 16228 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      enum E12722
 16235 ;; Registers used:
 16236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;Total ram usage:        3 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    3
 16249 ;; This function calls:
 16250 ;;		Absolute function
 16251 ;;		_do_I2C_SEND_RESTART
 16252 ;;		_do_I2C_SEND_STOP
 16253 ;;		_i2c_restartWrite
 16254 ;;		_mssp1_setIRQ
 16255 ;;		_rd1RegCompleteHandler
 16256 ;;		_rd2RegCompleteHandler
 16257 ;;		_rdBlkRegCompleteHandler
 16258 ;;		_returnReset
 16259 ;;		_returnStop
 16260 ;;		_wr1RegCompleteHandler
 16261 ;;		_wr2RegCompleteHandler
 16262 ;; This function is called by:
 16263 ;;		_i2c_ISR
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           
 16268                           ;psect for function _do_I2C_TX_EMPTY
 16269  0676                     _do_I2C_TX_EMPTY:	
 16270  0676                     i1l4601:	
 16271                           ;incstack = 0
 16272                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16273                           
 16274                           
 16275                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 16276  0676  0021               	movlb	1	; select bank1
 16277  0677  1520               	bsf	_i2c_status^(0+128),2
 16278                           
 16279                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16280  0678  2E86               	goto	i1l4619
 16281  0679                     i1l4603:	
 16282                           
 16283                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 16284  0679  318C  24FB  3186   	fcall	_do_I2C_SEND_RESTART
 16285  067C  2EA8               	goto	i1l200
 16286  067D                     i1l4607:	
 16287                           
 16288                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 16289  067D  318C  24CA  3186   	fcall	_mssp1_setIRQ
 16290  0680                     i1l4609:	
 16291                           
 16292                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 16293  0680  3003               	movlw	3
 16294  0681  2EA8               	goto	i1l200
 16295  0682                     i1l4613:	
 16296                           
 16297                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 16298  0682  318D  2500  3186   	fcall	_do_I2C_SEND_STOP
 16299  0685  2EA8               	goto	i1l200
 16300  0686                     i1l4619:	
 16301  0686  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16302  0687  00FA               	movwf	??_do_I2C_TX_EMPTY
 16303  0688  087A               	movf	??_do_I2C_TX_EMPTY,w
 16304  0689  00F9               	movwf	rdBlkRegCompleteHandler@p
 16305  068A  300B               	movlw	11
 16306  068B  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16307  068C  0086               	movwf	6
 16308  068D  0187               	clrf	7
 16309  068E  3F41               	moviw [1]fsr1
 16310  068F  008A               	movwf	10
 16311  0690  3F40               	moviw [0]fsr1
 16312  0691  000A               	callw
 16313  0692  3186               	pagesel	$
 16314  0693  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 16315  0694  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 16316                           
 16317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16318                           ; Switch size 1, requested type "simple"
 16319                           ; Number of cases is 1, Range of values is 0 to 0
 16320                           ; switch strategies available:
 16321                           ; Name         Instructions Cycles
 16322                           ; simple_byte            4     3 (average)
 16323                           ; direct_byte            8     6 (fixed)
 16324                           ; jumptable            260     6 (fixed)
 16325                           ;	Chosen strategy is simple_byte
 16326  0695  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 16327  0696  3A00               	xorlw	0	; case 0
 16328  0697  1903               	skipnz
 16329  0698  2E9A               	goto	i1l6453
 16330  0699  2E82               	goto	i1l4613
 16331  069A                     i1l6453:	
 16332                           
 16333                           ; Switch size 1, requested type "simple"
 16334                           ; Number of cases is 4, Range of values is 1 to 4
 16335                           ; switch strategies available:
 16336                           ; Name         Instructions Cycles
 16337                           ; simple_byte           13     7 (average)
 16338                           ; direct_byte           17     9 (fixed)
 16339                           ; jumptable            263     9 (fixed)
 16340                           ;	Chosen strategy is simple_byte
 16341  069A  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 16342  069B  3A01               	xorlw	1	; case 1
 16343  069C  1903               	skipnz
 16344  069D  2E82               	goto	i1l4613
 16345  069E  3A03               	xorlw	3	; case 2
 16346  069F  1903               	skipnz
 16347  06A0  2E79               	goto	i1l4603
 16348  06A1  3A01               	xorlw	1	; case 3
 16349  06A2  1903               	skipnz
 16350  06A3  2E79               	goto	i1l4603
 16351  06A4  3A07               	xorlw	7	; case 4
 16352  06A5  1903               	skipnz
 16353  06A6  2E7D               	goto	i1l4607
 16354  06A7  2E82               	goto	i1l4613
 16355  06A8                     i1l200:	
 16356  06A8  0008               	return
 16357  06A9                     __end_of_do_I2C_TX_EMPTY:	
 16358                           
 16359                           	psect	text63
 16360  0CCA                     __ptext63:	
 16361 ;; *************** function _mssp1_setIRQ *****************
 16362 ;; Defined at:
 16363 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 16364 ;; Parameters:    Size  Location     Type
 16365 ;;		None
 16366 ;; Auto vars:     Size  Location     Type
 16367 ;;		None
 16368 ;; Return value:  Size  Location     Type
 16369 ;;                  1    wreg      void 
 16370 ;; Registers used:
 16371 ;;		None
 16372 ;; Tracked objects:
 16373 ;;		On entry : 0/0
 16374 ;;		On exit  : 0/0
 16375 ;;		Unchanged: 0/0
 16376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16381 ;;Total ram usage:        0 bytes
 16382 ;; Hardware stack levels used:    1
 16383 ;; This function calls:
 16384 ;;		Nothing
 16385 ;; This function is called by:
 16386 ;;		_do_I2C_TX_EMPTY
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           
 16391                           ;psect for function _mssp1_setIRQ
 16392  0CCA                     _mssp1_setIRQ:	
 16393  0CCA                     i1l4289:	
 16394                           ;incstack = 0
 16395                           ; Regs used in _mssp1_setIRQ: []
 16396                           
 16397                           
 16398                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 16399  0CCA  002E               	movlb	14	; select bank14
 16400  0CCB  140F               	bsf	15,0	;volatile
 16401  0CCC                     i1l579:	
 16402  0CCC  0008               	return
 16403  0CCD                     __end_of_mssp1_setIRQ:	
 16404                           
 16405                           	psect	text64
 16406  0D4D                     __ptext64:	
 16407 ;; *************** function _i2c1_driver_isNACK *****************
 16408 ;; Defined at:
 16409 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;		None
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;		None               void
 16416 ;; Registers used:
 16417 ;;		wreg, status,2, status,0
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16427 ;;Total ram usage:        1 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; This function calls:
 16430 ;;		Nothing
 16431 ;; This function is called by:
 16432 ;;		_do_I2C_TX
 16433 ;;		_i2c_ISR
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           
 16438                           ;psect for function _i2c1_driver_isNACK
 16439  0D4D                     _i2c1_driver_isNACK:	
 16440  0D4D                     i1l4281:	
 16441                           ;incstack = 0
 16442                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 16443                           
 16444                           
 16445                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 16446  0D4D  0023               	movlb	3	; select bank3
 16447  0D4E  0E11               	swapf	17,w	;volatile
 16448  0D4F  0C89               	rrf	9,f
 16449  0D50  0C89               	rrf	9,f
 16450  0D51  3901               	andlw	1
 16451  0D52  00F0               	movwf	??_i2c1_driver_isNACK
 16452  0D53  0C70               	rrf	??_i2c1_driver_isNACK,w
 16453  0D54                     i1l614:	
 16454  0D54  0008               	return
 16455  0D55                     __end_of_i2c1_driver_isNACK:	
 16456                           
 16457                           	psect	text65
 16458  0CE7                     __ptext65:	
 16459 ;; *************** function _i2c1_driver_TXData *****************
 16460 ;; Defined at:
 16461 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  d               1    wreg     unsigned char 
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;  d               1    0[COMMON] unsigned char 
 16466 ;; Return value:  Size  Location     Type
 16467 ;;                  1    wreg      void 
 16468 ;; Registers used:
 16469 ;;		wreg
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;Total ram usage:        1 bytes
 16480 ;; Hardware stack levels used:    1
 16481 ;; This function calls:
 16482 ;;		Nothing
 16483 ;; This function is called by:
 16484 ;;		_do_I2C_SEND_ADR_READ
 16485 ;;		_do_I2C_SEND_ADR_WRITE
 16486 ;;		_do_I2C_TX
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           
 16491                           ;psect for function _i2c1_driver_TXData
 16492  0CE7                     _i2c1_driver_TXData:	
 16493                           
 16494                           ;incstack = 0
 16495                           ; Regs used in _i2c1_driver_TXData: [wreg]
 16496                           ;i2c1_driver_TXData@d stored from wreg
 16497  0CE7  00F0               	movwf	i2c1_driver_TXData@d
 16498  0CE8                     i1l4263:	
 16499                           
 16500                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 16501  0CE8  0870               	movf	i2c1_driver_TXData@d,w
 16502  0CE9  0023               	movlb	3	; select bank3
 16503  0CEA  008C               	movwf	12	;volatile
 16504  0CEB                     i1l629:	
 16505  0CEB  0008               	return
 16506  0CEC                     __end_of_i2c1_driver_TXData:	
 16507                           
 16508                           	psect	text66
 16509  0CC7                     __ptext66:	
 16510 ;; *************** function _i2c1_driver_getRXData *****************
 16511 ;; Defined at:
 16512 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;		None
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      unsigned char 
 16519 ;; Registers used:
 16520 ;;		wreg
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;Total ram usage:        0 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; This function calls:
 16533 ;;		Nothing
 16534 ;; This function is called by:
 16535 ;;		_do_I2C_RX
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           
 16540                           ;psect for function _i2c1_driver_getRXData
 16541  0CC7                     _i2c1_driver_getRXData:	
 16542  0CC7                     i1l4285:	
 16543                           ;incstack = 0
 16544                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 16545                           
 16546                           
 16547                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 16548  0CC7  0023               	movlb	3	; select bank3
 16549  0CC8  080C               	movf	12,w	;volatile
 16550  0CC9                     i1l620:	
 16551  0CC9  0008               	return
 16552  0CCA                     __end_of_i2c1_driver_getRXData:	
 16553                           
 16554                           	psect	text67
 16555  0CDA                     __ptext67:	
 16556 ;; *************** function _i2c1_driver_sendNACK *****************
 16557 ;; Defined at:
 16558 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 16559 ;; Parameters:    Size  Location     Type
 16560 ;;		None
 16561 ;; Auto vars:     Size  Location     Type
 16562 ;;		None
 16563 ;; Return value:  Size  Location     Type
 16564 ;;                  1    wreg      void 
 16565 ;; Registers used:
 16566 ;;		None
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;Total ram usage:        0 bytes
 16577 ;; Hardware stack levels used:    1
 16578 ;; This function calls:
 16579 ;;		Nothing
 16580 ;; This function is called by:
 16581 ;;		_do_I2C_DO_NACK_STOP
 16582 ;;		_do_I2C_DO_NACK_RESTART
 16583 ;; This function uses a non-reentrant model
 16584 ;;
 16585                           
 16586                           
 16587                           ;psect for function _i2c1_driver_sendNACK
 16588  0CDA                     _i2c1_driver_sendNACK:	
 16589  0CDA                     i1l4133:	
 16590                           ;incstack = 0
 16591                           ; Regs used in _i2c1_driver_sendNACK: []
 16592                           
 16593                           
 16594                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 16595  0CDA  0023               	movlb	3	; select bank3
 16596  0CDB  1691               	bsf	17,5	;volatile
 16597                           
 16598                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 16599  0CDC  1611               	bsf	17,4	;volatile
 16600  0CDD                     i1l638:	
 16601  0CDD  0008               	return
 16602  0CDE                     __end_of_i2c1_driver_sendNACK:	
 16603                           
 16604                           	psect	text68
 16605  0CB6                     __ptext68:	
 16606 ;; *************** function _i2c1_driver_resetBus *****************
 16607 ;; Defined at:
 16608 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 16609 ;; Parameters:    Size  Location     Type
 16610 ;;		None
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;		None
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  1    wreg      void 
 16615 ;; Registers used:
 16616 ;;		None
 16617 ;; Tracked objects:
 16618 ;;		On entry : 0/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;Total ram usage:        0 bytes
 16627 ;; Hardware stack levels used:    1
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_do_I2C_RESET
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           
 16635                           
 16636                           ;psect for function _i2c1_driver_resetBus
 16637  0CB6                     _i2c1_driver_resetBus:	
 16638  0CB6                     i1l602:	
 16639                           ;incstack = 0
 16640                           ; Regs used in _i2c1_driver_resetBus: []
 16641                           
 16642  0CB6  0008               	return
 16643  0CB7                     __end_of_i2c1_driver_resetBus:	
 16644                           
 16645                           	psect	text69
 16646  0CC4                     __ptext69:	
 16647 ;; *************** function _i2c1_driver_startRX *****************
 16648 ;; Defined at:
 16649 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;		None
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;		None
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		None
 16658 ;; Tracked objects:
 16659 ;;		On entry : 0/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;Total ram usage:        0 bytes
 16668 ;; Hardware stack levels used:    1
 16669 ;; This function calls:
 16670 ;;		Nothing
 16671 ;; This function is called by:
 16672 ;;		_do_I2C_RCEN
 16673 ;; This function uses a non-reentrant model
 16674 ;;
 16675                           
 16676                           
 16677                           ;psect for function _i2c1_driver_startRX
 16678  0CC4                     _i2c1_driver_startRX:	
 16679  0CC4                     i1l4265:	
 16680                           ;incstack = 0
 16681                           ; Regs used in _i2c1_driver_startRX: []
 16682                           
 16683                           
 16684                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 16685  0CC4  0023               	movlb	3	; select bank3
 16686  0CC5  1591               	bsf	17,3	;volatile
 16687  0CC6                     i1l617:	
 16688  0CC6  0008               	return
 16689  0CC7                     __end_of_i2c1_driver_startRX:	
 16690                           
 16691                           	psect	text70
 16692  0EF3                     __ptext70:	
 16693 ;; *************** function _rdBlkRegCompleteHandler *****************
 16694 ;; Defined at:
 16695 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16696 ;; Parameters:    Size  Location     Type
 16697 ;;  p               1    9[COMMON] PTR void 
 16698 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16699 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;		None
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  1    wreg      enum E358
 16704 ;; Registers used:
 16705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16715 ;;Total ram usage:        1 bytes
 16716 ;; Hardware stack levels used:    1
 16717 ;; Hardware stack levels required when called:    2
 16718 ;; This function calls:
 16719 ;;		_i2c_setBuffer
 16720 ;;		_i2c_setDataCompleteCallback
 16721 ;; This function is called by:
 16722 ;;		_i2c_readDataBlock
 16723 ;;		_do_I2C_DO_ADDRESS_NACK
 16724 ;;		_do_I2C_TX
 16725 ;;		_do_I2C_RX
 16726 ;;		_do_I2C_TX_EMPTY
 16727 ;; This function uses a non-reentrant model
 16728 ;;
 16729                           
 16730                           
 16731                           ;psect for function _rdBlkRegCompleteHandler
 16732  0EF3                     _rdBlkRegCompleteHandler:	
 16733  0EF3                     i1l4331:	
 16734                           ;incstack = 0
 16735                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16736                           
 16737                           
 16738                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 16739  0EF3  0879               	movf	rdBlkRegCompleteHandler@p,w
 16740  0EF4  0086               	movwf	6
 16741  0EF5  0187               	clrf	7
 16742  0EF6  3F40               	moviw [0]fsr1
 16743  0EF7  00F0               	movwf	i2c_setBuffer@bufferSize
 16744  0EF8  3F41               	moviw [1]fsr1
 16745  0EF9  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16746  0EFA  0879               	movf	rdBlkRegCompleteHandler@p,w
 16747  0EFB  3E02               	addlw	2
 16748  0EFC  0086               	movwf	6
 16749  0EFD  0187               	clrf	7
 16750  0EFE  0801               	movf	1,w
 16751  0EFF  318E  2626  318E   	fcall	_i2c_setBuffer
 16752                           
 16753                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 16754  0F02  3000               	movlw	0
 16755  0F03  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16756  0F04  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16757  0F05  01F7               	clrf	i2c_setDataCompleteCallback@p
 16758  0F06  318D  25D1  318E   	fcall	_i2c_setDataCompleteCallback
 16759  0F09                     i1l4333:	
 16760                           
 16761                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 16762  0F09  3002               	movlw	2
 16763  0F0A                     i1l303:	
 16764  0F0A  0008               	return
 16765  0F0B                     __end_of_rdBlkRegCompleteHandler:	
 16766                           
 16767                           	psect	text71
 16768  0E8A                     __ptext71:	
 16769 ;; *************** function _rd2RegCompleteHandler *****************
 16770 ;; Defined at:
 16771 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16772 ;; Parameters:    Size  Location     Type
 16773 ;;  p               1    9[COMMON] PTR void 
 16774 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16775 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16776 ;; Auto vars:     Size  Location     Type
 16777 ;;		None
 16778 ;; Return value:  Size  Location     Type
 16779 ;;                  1    wreg      enum E358
 16780 ;; Registers used:
 16781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16782 ;; Tracked objects:
 16783 ;;		On entry : 0/0
 16784 ;;		On exit  : 0/0
 16785 ;;		Unchanged: 0/0
 16786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16787 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16791 ;;Total ram usage:        1 bytes
 16792 ;; Hardware stack levels used:    1
 16793 ;; Hardware stack levels required when called:    2
 16794 ;; This function calls:
 16795 ;;		_i2c_setBuffer
 16796 ;;		_i2c_setDataCompleteCallback
 16797 ;; This function is called by:
 16798 ;;		_i2c_read2ByteRegister
 16799 ;;		_do_I2C_DO_ADDRESS_NACK
 16800 ;;		_do_I2C_TX
 16801 ;;		_do_I2C_RX
 16802 ;;		_do_I2C_TX_EMPTY
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           
 16807                           ;psect for function _rd2RegCompleteHandler
 16808  0E8A                     _rd2RegCompleteHandler:	
 16809  0E8A                     i1l4315:	
 16810                           ;incstack = 0
 16811                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16812                           
 16813                           
 16814                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 16815  0E8A  3002               	movlw	2
 16816  0E8B  00F0               	movwf	i2c_setBuffer@bufferSize
 16817  0E8C  3000               	movlw	0
 16818  0E8D  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16819  0E8E  0879               	movf	rd2RegCompleteHandler@p,w
 16820  0E8F  318E  2626  318E   	fcall	_i2c_setBuffer
 16821  0E92                     i1l4317:	
 16822                           
 16823                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16824  0E92  3000               	movlw	0
 16825  0E93  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16826  0E94  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16827  0E95  01F7               	clrf	i2c_setDataCompleteCallback@p
 16828  0E96  318D  25D1  318E   	fcall	_i2c_setDataCompleteCallback
 16829  0E99                     i1l4319:	
 16830                           
 16831                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 16832  0E99  3002               	movlw	2
 16833  0E9A                     i1l279:	
 16834  0E9A  0008               	return
 16835  0E9B                     __end_of_rd2RegCompleteHandler:	
 16836                           
 16837                           	psect	text72
 16838  0E79                     __ptext72:	
 16839 ;; *************** function _rd1RegCompleteHandler *****************
 16840 ;; Defined at:
 16841 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16842 ;; Parameters:    Size  Location     Type
 16843 ;;  p               1    9[COMMON] PTR void 
 16844 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16845 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16846 ;; Auto vars:     Size  Location     Type
 16847 ;;		None
 16848 ;; Return value:  Size  Location     Type
 16849 ;;                  1    wreg      enum E358
 16850 ;; Registers used:
 16851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16852 ;; Tracked objects:
 16853 ;;		On entry : 0/0
 16854 ;;		On exit  : 0/0
 16855 ;;		Unchanged: 0/0
 16856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;Total ram usage:        1 bytes
 16862 ;; Hardware stack levels used:    1
 16863 ;; Hardware stack levels required when called:    2
 16864 ;; This function calls:
 16865 ;;		_i2c_setBuffer
 16866 ;;		_i2c_setDataCompleteCallback
 16867 ;; This function is called by:
 16868 ;;		_i2c_read1ByteRegister
 16869 ;;		_do_I2C_DO_ADDRESS_NACK
 16870 ;;		_do_I2C_TX
 16871 ;;		_do_I2C_RX
 16872 ;;		_do_I2C_TX_EMPTY
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           
 16877                           ;psect for function _rd1RegCompleteHandler
 16878  0E79                     _rd1RegCompleteHandler:	
 16879  0E79                     i1l4307:	
 16880                           ;incstack = 0
 16881                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16882                           
 16883                           
 16884                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 16885  0E79  3001               	movlw	1
 16886  0E7A  00F0               	movwf	i2c_setBuffer@bufferSize
 16887  0E7B  3000               	movlw	0
 16888  0E7C  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16889  0E7D  0879               	movf	rd1RegCompleteHandler@p,w
 16890  0E7E  318E  2626  318E   	fcall	_i2c_setBuffer
 16891  0E81                     i1l4309:	
 16892                           
 16893                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16894  0E81  3000               	movlw	0
 16895  0E82  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16896  0E83  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16897  0E84  01F7               	clrf	i2c_setDataCompleteCallback@p
 16898  0E85  318D  25D1  318E   	fcall	_i2c_setDataCompleteCallback
 16899  0E88                     i1l4311:	
 16900                           
 16901                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 16902  0E88  3002               	movlw	2
 16903  0E89                     i1l264:	
 16904  0E89  0008               	return
 16905  0E8A                     __end_of_rd1RegCompleteHandler:	
 16906                           
 16907                           	psect	text73
 16908  0E68                     __ptext73:	
 16909 ;; *************** function _wr1RegCompleteHandler *****************
 16910 ;; Defined at:
 16911 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  p               1    9[COMMON] PTR void 
 16914 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16915 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;		None
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  1    wreg      enum E358
 16920 ;; Registers used:
 16921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/0
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16927 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;Total ram usage:        1 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; Hardware stack levels required when called:    2
 16934 ;; This function calls:
 16935 ;;		_i2c_setBuffer
 16936 ;;		_i2c_setDataCompleteCallback
 16937 ;; This function is called by:
 16938 ;;		_i2c_write1ByteRegister
 16939 ;;		_do_I2C_DO_ADDRESS_NACK
 16940 ;;		_do_I2C_TX
 16941 ;;		_do_I2C_RX
 16942 ;;		_do_I2C_TX_EMPTY
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           
 16947                           ;psect for function _wr1RegCompleteHandler
 16948  0E68                     _wr1RegCompleteHandler:	
 16949  0E68                     i1l4299:	
 16950                           ;incstack = 0
 16951                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16952                           
 16953                           
 16954                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 16955  0E68  3001               	movlw	1
 16956  0E69  00F0               	movwf	i2c_setBuffer@bufferSize
 16957  0E6A  3000               	movlw	0
 16958  0E6B  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16959  0E6C  0879               	movf	wr1RegCompleteHandler@p,w
 16960  0E6D  318E  2626  318E   	fcall	_i2c_setBuffer
 16961  0E70                     i1l4301:	
 16962                           
 16963                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16964  0E70  3000               	movlw	0
 16965  0E71  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16966  0E72  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16967  0E73  01F7               	clrf	i2c_setDataCompleteCallback@p
 16968  0E74  318D  25D1  318E   	fcall	_i2c_setDataCompleteCallback
 16969  0E77                     i1l4303:	
 16970                           
 16971                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 16972  0E77  3004               	movlw	4
 16973  0E78                     i1l243:	
 16974  0E78  0008               	return
 16975  0E79                     __end_of_wr1RegCompleteHandler:	
 16976                           
 16977                           	psect	text74
 16978  0002                     __ptext74:	
 16979 ;; *************** function _returnReset *****************
 16980 ;; Defined at:
 16981 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16982 ;; Parameters:    Size  Location     Type
 16983 ;;  p               1    9[COMMON] PTR void 
 16984 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16985 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16986 ;; Auto vars:     Size  Location     Type
 16987 ;;		None
 16988 ;; Return value:  Size  Location     Type
 16989 ;;                  1    wreg      enum E12568
 16990 ;; Registers used:
 16991 ;;		wreg
 16992 ;; Tracked objects:
 16993 ;;		On entry : 0/0
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17001 ;;Total ram usage:        1 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_i2c_open
 17007 ;;		_do_I2C_DO_ADDRESS_NACK
 17008 ;;		_do_I2C_TX
 17009 ;;		_do_I2C_RX
 17010 ;;		_do_I2C_TX_EMPTY
 17011 ;; This function uses a non-reentrant model
 17012 ;;
 17013                           
 17014                           
 17015                           ;psect for function _returnReset
 17016  0002                     _returnReset:	
 17017  0002                     i1l4295:	
 17018                           ;incstack = 0
 17019                           ; Regs used in _returnReset: [wreg]
 17020                           
 17021                           
 17022                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 17023  0002  3005               	movlw	5
 17024  0003                     i1l219:	
 17025  0003  0008               	return
 17026  0004                     __end_of_returnReset:	
 17027                           
 17028                           	psect	text75
 17029  0CB9                     __ptext75:	
 17030 ;; *************** function _returnStop *****************
 17031 ;; Defined at:
 17032 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17033 ;; Parameters:    Size  Location     Type
 17034 ;;  p               1    9[COMMON] PTR void 
 17035 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17036 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;		None
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  1    wreg      enum E12568
 17041 ;; Registers used:
 17042 ;;		wreg
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17048 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17052 ;;Total ram usage:        1 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; This function calls:
 17055 ;;		Nothing
 17056 ;; This function is called by:
 17057 ;;		_setCallBack
 17058 ;;		_i2c_open
 17059 ;;		_do_I2C_DO_ADDRESS_NACK
 17060 ;;		_do_I2C_TX
 17061 ;;		_do_I2C_RX
 17062 ;;		_do_I2C_TX_EMPTY
 17063 ;; This function uses a non-reentrant model
 17064 ;;
 17065                           
 17066                           
 17067                           ;psect for function _returnStop
 17068  0CB9                     _returnStop:	
 17069  0CB9                     i1l4291:	
 17070                           ;incstack = 0
 17071                           ; Regs used in _returnStop: [wreg]
 17072                           
 17073                           
 17074                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 17075  0CB9  3001               	movlw	1
 17076  0CBA                     i1l216:	
 17077  0CBA  0008               	return
 17078  0CBB                     __end_of_returnStop:	
 17079                           
 17080                           	psect	text76
 17081  0CB7                     __ptext76:	
 17082 ;; *************** function _i2c_restartWrite *****************
 17083 ;; Defined at:
 17084 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17085 ;; Parameters:    Size  Location     Type
 17086 ;;  p               1    9[COMMON] PTR void 
 17087 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17088 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17089 ;; Auto vars:     Size  Location     Type
 17090 ;;		None
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  1    wreg      enum E358
 17093 ;; Registers used:
 17094 ;;		wreg
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;Total ram usage:        1 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; This function calls:
 17107 ;;		Nothing
 17108 ;; This function is called by:
 17109 ;;		_i2c_write1ByteRegister
 17110 ;;		_i2c_writeNBytes
 17111 ;;		_i2c_read1ByteRegister
 17112 ;;		_i2c_read2ByteRegister
 17113 ;;		_i2c_write2ByteRegister
 17114 ;;		_i2c_readDataBlock
 17115 ;;		_do_I2C_DO_ADDRESS_NACK
 17116 ;;		_do_I2C_TX
 17117 ;;		_do_I2C_RX
 17118 ;;		_do_I2C_TX_EMPTY
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           
 17123                           ;psect for function _i2c_restartWrite
 17124  0CB7                     _i2c_restartWrite:	
 17125  0CB7                     i1l4227:	
 17126                           ;incstack = 0
 17127                           ; Regs used in _i2c_restartWrite: [wreg]
 17128                           
 17129                           
 17130                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 17131  0CB7  3003               	movlw	3
 17132  0CB8                     i1l9:	
 17133  0CB8  0008               	return
 17134  0CB9                     __end_of_i2c_restartWrite:	
 17135                           
 17136                           	psect	text77
 17137  0E57                     __ptext77:	
 17138 ;; *************** function _wr2RegCompleteHandler *****************
 17139 ;; Defined at:
 17140 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;  p               1    9[COMMON] PTR void 
 17143 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17144 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17145 ;; Auto vars:     Size  Location     Type
 17146 ;;		None
 17147 ;; Return value:  Size  Location     Type
 17148 ;;                  1    wreg      enum E358
 17149 ;; Registers used:
 17150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17151 ;; Tracked objects:
 17152 ;;		On entry : 0/0
 17153 ;;		On exit  : 0/0
 17154 ;;		Unchanged: 0/0
 17155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17156 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;Total ram usage:        1 bytes
 17161 ;; Hardware stack levels used:    1
 17162 ;; Hardware stack levels required when called:    2
 17163 ;; This function calls:
 17164 ;;		_i2c_setBuffer
 17165 ;;		_i2c_setDataCompleteCallback
 17166 ;; This function is called by:
 17167 ;;		_i2c_write2ByteRegister
 17168 ;;		_do_I2C_DO_ADDRESS_NACK
 17169 ;;		_do_I2C_TX
 17170 ;;		_do_I2C_RX
 17171 ;;		_do_I2C_TX_EMPTY
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           
 17176                           ;psect for function _wr2RegCompleteHandler
 17177  0E57                     _wr2RegCompleteHandler:	
 17178  0E57                     i1l4323:	
 17179                           ;incstack = 0
 17180                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17181                           
 17182                           
 17183                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 17184  0E57  3002               	movlw	2
 17185  0E58  00F0               	movwf	i2c_setBuffer@bufferSize
 17186  0E59  3000               	movlw	0
 17187  0E5A  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17188  0E5B  0879               	movf	wr2RegCompleteHandler@p,w
 17189  0E5C  318E  2626  318E   	fcall	_i2c_setBuffer
 17190  0E5F                     i1l4325:	
 17191                           
 17192                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17193  0E5F  3000               	movlw	0
 17194  0E60  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17195  0E61  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17196  0E62  01F7               	clrf	i2c_setDataCompleteCallback@p
 17197  0E63  318D  25D1  318E   	fcall	_i2c_setDataCompleteCallback
 17198  0E66                     i1l4327:	
 17199                           
 17200                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 17201  0E66  3004               	movlw	4
 17202  0E67                     i1l291:	
 17203  0E67  0008               	return
 17204  0E68                     __end_of_wr2RegCompleteHandler:	
 17205                           
 17206                           	psect	text78
 17207  0DD1                     __ptext78:	
 17208 ;; *************** function _i2c_setDataCompleteCallback *****************
 17209 ;; Defined at:
 17210 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17213 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17214 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17215 ;;  p               1    7[COMMON] PTR void 
 17216 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17217 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;		None
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  1    wreg      void 
 17222 ;; Registers used:
 17223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17224 ;; Tracked objects:
 17225 ;;		On entry : 0/0
 17226 ;;		On exit  : 0/0
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;Total ram usage:        4 bytes
 17234 ;; Hardware stack levels used:    1
 17235 ;; Hardware stack levels required when called:    1
 17236 ;; This function calls:
 17237 ;;		_setCallBack
 17238 ;; This function is called by:
 17239 ;;		_wr1RegCompleteHandler
 17240 ;;		_rd1RegCompleteHandler
 17241 ;;		_rd2RegCompleteHandler
 17242 ;;		_wr2RegCompleteHandler
 17243 ;;		_rdBlkRegCompleteHandler
 17244 ;;		_i2c_write1ByteRegister
 17245 ;;		_i2c_read1ByteRegister
 17246 ;;		_i2c_read2ByteRegister
 17247 ;;		_i2c_write2ByteRegister
 17248 ;;		_i2c_readDataBlock
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           
 17252                           
 17253                           ;psect for function _i2c_setDataCompleteCallback
 17254  0DD1                     _i2c_setDataCompleteCallback:	
 17255  0DD1                     i1l4121:	
 17256                           ;incstack = 0
 17257                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17258                           
 17259                           
 17260                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 17261  0DD1  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17262  0DD2  00F1               	movwf	setCallBack@cb+1
 17263  0DD3  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17264  0DD4  00F0               	movwf	setCallBack@cb
 17265  0DD5  0877               	movf	i2c_setDataCompleteCallback@p,w
 17266  0DD6  00F8               	movwf	??_i2c_setDataCompleteCallback
 17267  0DD7  0878               	movf	??_i2c_setDataCompleteCallback,w
 17268  0DD8  00F2               	movwf	setCallBack@p
 17269  0DD9  3000               	movlw	0
 17270  0DDA  3187  2760  318D   	fcall	_setCallBack
 17271  0DDD                     i1l73:	
 17272  0DDD  0008               	return
 17273  0DDE                     __end_of_i2c_setDataCompleteCallback:	
 17274                           
 17275                           	psect	text79
 17276  0760                     __ptext79:	
 17277 ;; *************** function _setCallBack *****************
 17278 ;; Defined at:
 17279 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;  idx             1    wreg     enum E12740
 17282 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17283 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17284 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 17285 ;;  p               1    2[COMMON] PTR void 
 17286 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17287 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;  idx             1    4[COMMON] enum E12740
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  1    wreg      void 
 17292 ;; Registers used:
 17293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17302 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;Total ram usage:        5 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; This function calls:
 17306 ;;		Nothing
 17307 ;; This function is called by:
 17308 ;;		_i2c_setDataCompleteCallback
 17309 ;;		_i2c_setWriteCollisionCallback
 17310 ;;		_i2c_setAddressNACKCallback
 17311 ;;		_i2c_setDataNACKCallback
 17312 ;;		_i2c_setTimeOutCallback
 17313 ;; This function uses a non-reentrant model
 17314 ;;
 17315                           
 17316                           
 17317                           ;psect for function _setCallBack
 17318  0760                     _setCallBack:	
 17319                           
 17320                           ;incstack = 0
 17321                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17322                           ;setCallBack@idx stored from wreg
 17323  0760  00F4               	movwf	setCallBack@idx
 17324  0761                     i1l4115:	
 17325                           
 17326                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 17327  0761  0870               	movf	setCallBack@cb,w
 17328  0762  0471               	iorwf	setCallBack@cb+1,w
 17329  0763  1903               	btfsc	3,2
 17330  0764  2F66               	goto	u163_21
 17331  0765  2F67               	goto	u163_20
 17332  0766                     u163_21:	
 17333  0766  2F78               	goto	i1l4119
 17334  0767                     u163_20:	
 17335  0767                     i1l4117:	
 17336                           
 17337                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 17338  0767  3574               	lslf	setCallBack@idx,w
 17339  0768  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17340  0769  0086               	movwf	6
 17341  076A  0187               	clrf	7
 17342  076B  0870               	movf	setCallBack@cb,w
 17343  076C  3FC0               	movwi [0]fsr1
 17344  076D  0871               	movf	setCallBack@cb+1,w
 17345  076E  3FC1               	movwi [1]fsr1
 17346                           
 17347                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 17348  076F  0872               	movf	setCallBack@p,w
 17349  0770  00F3               	movwf	??_setCallBack
 17350  0771  0874               	movf	setCallBack@idx,w
 17351  0772  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17352  0773  0086               	movwf	6
 17353  0774  0187               	clrf	7
 17354  0775  0873               	movf	??_setCallBack,w
 17355  0776  0081               	movwf	1
 17356                           
 17357                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 17358  0777  2F85               	goto	i1l224
 17359  0778                     i1l4119:	
 17360                           
 17361                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 17362  0778  3574               	lslf	setCallBack@idx,w
 17363  0779  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17364  077A  0086               	movwf	6
 17365  077B  0187               	clrf	7
 17366  077C  30B9               	movlw	low _returnStop
 17367  077D  3FC0               	movwi [0]fsr1
 17368  077E  300C               	movlw	high _returnStop
 17369  077F  3FC1               	movwi [1]fsr1
 17370                           
 17371                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 17372  0780  0874               	movf	setCallBack@idx,w
 17373  0781  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17374  0782  0086               	movwf	6
 17375  0783  0187               	clrf	7
 17376  0784  0181               	clrf	1
 17377  0785                     i1l224:	
 17378  0785  0008               	return
 17379  0786                     __end_of_setCallBack:	
 17380                           
 17381                           	psect	text80
 17382  0E26                     __ptext80:	
 17383 ;; *************** function _i2c_setBuffer *****************
 17384 ;; Defined at:
 17385 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;  buffer          1    wreg     PTR void 
 17388 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17389 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17390 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17391 ;;  bufferSize      2    0[COMMON] unsigned int 
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;  buffer          1    3[COMMON] PTR void 
 17394 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17395 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17396 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17397 ;; Return value:  Size  Location     Type
 17398 ;;                  1    wreg      void 
 17399 ;; Registers used:
 17400 ;;		wreg
 17401 ;; Tracked objects:
 17402 ;;		On entry : 0/0
 17403 ;;		On exit  : 0/0
 17404 ;;		Unchanged: 0/0
 17405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17410 ;;Total ram usage:        4 bytes
 17411 ;; Hardware stack levels used:    1
 17412 ;; This function calls:
 17413 ;;		Nothing
 17414 ;; This function is called by:
 17415 ;;		_wr1RegCompleteHandler
 17416 ;;		_rd1RegCompleteHandler
 17417 ;;		_rd2RegCompleteHandler
 17418 ;;		_wr2RegCompleteHandler
 17419 ;;		_rdBlkRegCompleteHandler
 17420 ;;		_i2c_write1ByteRegister
 17421 ;;		_i2c_writeNBytes
 17422 ;;		_i2c_read1ByteRegister
 17423 ;;		_i2c_read2ByteRegister
 17424 ;;		_i2c_write2ByteRegister
 17425 ;;		_i2c_readDataBlock
 17426 ;;		_i2c_readNBytes
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           
 17431                           ;psect for function _i2c_setBuffer
 17432  0E26                     _i2c_setBuffer:	
 17433                           
 17434                           ;incstack = 0
 17435                           ; Regs used in _i2c_setBuffer: [wreg]
 17436                           ;i2c_setBuffer@buffer stored from wreg
 17437  0E26  00F3               	movwf	i2c_setBuffer@buffer
 17438  0E27                     i1l4123:	
 17439                           
 17440                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 17441  0E27  0021               	movlb	1	; select bank1
 17442  0E28  1D20               	btfss	_i2c_status^(0+128),2
 17443  0E29  2E2B               	goto	u164_21
 17444  0E2A  2E2C               	goto	u164_20
 17445  0E2B                     u164_21:	
 17446  0E2B  2E35               	goto	i1l103
 17447  0E2C                     u164_20:	
 17448  0E2C                     i1l4125:	
 17449                           
 17450                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 17451  0E2C  0873               	movf	i2c_setBuffer@buffer,w
 17452  0E2D  00F2               	movwf	??_i2c_setBuffer
 17453  0E2E  0872               	movf	??_i2c_setBuffer,w
 17454  0E2F  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 17455                           
 17456                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 17457  0E30  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17458  0E31  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 17459  0E32  0870               	movf	i2c_setBuffer@bufferSize,w
 17460  0E33  00A3               	movwf	(_i2c_status^(0+128)+3)
 17461  0E34                     i1l4127:	
 17462                           
 17463                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 17464  0E34  1120               	bcf	_i2c_status^(0+128),2
 17465  0E35                     i1l103:	
 17466  0E35  0008               	return
 17467  0E36                     __end_of_i2c_setBuffer:	
 17468                           
 17469                           	psect	text81
 17470  0CC1                     __ptext81:	
 17471 ;; *************** function _i2c1_driver_stop *****************
 17472 ;; Defined at:
 17473 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;		None
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;		None
 17478 ;; Return value:  Size  Location     Type
 17479 ;;                  1    wreg      void 
 17480 ;; Registers used:
 17481 ;;		None
 17482 ;; Tracked objects:
 17483 ;;		On entry : 0/0
 17484 ;;		On exit  : 0/0
 17485 ;;		Unchanged: 0/0
 17486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17491 ;;Total ram usage:        0 bytes
 17492 ;; Hardware stack levels used:    1
 17493 ;; This function calls:
 17494 ;;		Nothing
 17495 ;; This function is called by:
 17496 ;;		_do_I2C_SEND_STOP
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           
 17501                           ;psect for function _i2c1_driver_stop
 17502  0CC1                     _i2c1_driver_stop:	
 17503  0CC1                     i1l4131:	
 17504                           ;incstack = 0
 17505                           ; Regs used in _i2c1_driver_stop: []
 17506                           
 17507                           
 17508                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 17509  0CC1  0023               	movlb	3	; select bank3
 17510  0CC2  1511               	bsf	17,2	;volatile
 17511  0CC3                     i1l611:	
 17512  0CC3  0008               	return
 17513  0CC4                     __end_of_i2c1_driver_stop:	
 17514                           
 17515                           	psect	text82
 17516  0CBE                     __ptext82:	
 17517 ;; *************** function _i2c1_driver_restart *****************
 17518 ;; Defined at:
 17519 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;		None
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  1    wreg      void 
 17526 ;; Registers used:
 17527 ;;		None
 17528 ;; Tracked objects:
 17529 ;;		On entry : 0/0
 17530 ;;		On exit  : 0/0
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17537 ;;Total ram usage:        0 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; This function calls:
 17540 ;;		Nothing
 17541 ;; This function is called by:
 17542 ;;		_do_I2C_SEND_RESTART_READ
 17543 ;;		_do_I2C_SEND_RESTART_WRITE
 17544 ;;		_do_I2C_SEND_RESTART
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           
 17549                           ;psect for function _i2c1_driver_restart
 17550  0CBE                     _i2c1_driver_restart:	
 17551  0CBE                     i1l4129:	
 17552                           ;incstack = 0
 17553                           ; Regs used in _i2c1_driver_restart: []
 17554                           
 17555                           
 17556                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 17557  0CBE  0023               	movlb	3	; select bank3
 17558  0CBF  1491               	bsf	17,1	;volatile
 17559  0CC0                     i1l608:	
 17560  0CC0  0008               	return
 17561  0CC1                     __end_of_i2c1_driver_restart:	
 17562                           
 17563                           	psect	text83
 17564  0CD6                     __ptext83:	
 17565 ;; *************** function _i2c1_driver_sendACK *****************
 17566 ;; Defined at:
 17567 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 17568 ;; Parameters:    Size  Location     Type
 17569 ;;		None
 17570 ;; Auto vars:     Size  Location     Type
 17571 ;;		None
 17572 ;; Return value:  Size  Location     Type
 17573 ;;                  1    wreg      void 
 17574 ;; Registers used:
 17575 ;;		None
 17576 ;; Tracked objects:
 17577 ;;		On entry : 0/0
 17578 ;;		On exit  : 0/0
 17579 ;;		Unchanged: 0/0
 17580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17585 ;;Total ram usage:        0 bytes
 17586 ;; Hardware stack levels used:    1
 17587 ;; This function calls:
 17588 ;;		Nothing
 17589 ;; This function is called by:
 17590 ;;		_do_I2C_DO_ACK
 17591 ;;		_do_I2C_RX
 17592 ;; This function uses a non-reentrant model
 17593 ;;
 17594                           
 17595                           
 17596                           ;psect for function _i2c1_driver_sendACK
 17597  0CD6                     _i2c1_driver_sendACK:	
 17598  0CD6                     i1l4267:	
 17599                           ;incstack = 0
 17600                           ; Regs used in _i2c1_driver_sendACK: []
 17601                           
 17602                           
 17603                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 17604  0CD6  0023               	movlb	3	; select bank3
 17605  0CD7  1291               	bcf	17,5	;volatile
 17606                           
 17607                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 17608  0CD8  1611               	bsf	17,4	;volatile
 17609  0CD9                     i1l635:	
 17610  0CD9  0008               	return
 17611  0CDA                     __end_of_i2c1_driver_sendACK:	
 17612                           
 17613                           	psect	text84
 17614  0E08                     __ptext84:	
 17615 ;; *************** function _TMR2_ISR *****************
 17616 ;; Defined at:
 17617 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;		None
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;		None
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  1    wreg      void 
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0, pclath, cstack
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;Total ram usage:        0 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; Hardware stack levels required when called:    1
 17638 ;; This function calls:
 17639 ;;		Absolute function
 17640 ;;		_TMR2_DefaultInterruptHandler
 17641 ;;		_handler_clock_ms
 17642 ;; This function is called by:
 17643 ;;		_INTERRUPT_InterruptManager
 17644 ;; This function uses a non-reentrant model
 17645 ;;
 17646                           
 17647                           
 17648                           ;psect for function _TMR2_ISR
 17649  0E08                     _TMR2_ISR:	
 17650  0E08                     i1l5015:	
 17651                           ;incstack = 0
 17652                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17653                           
 17654                           
 17655                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 17656  0E08  002E               	movlb	14	; select bank14
 17657  0E09  1090               	bcf	16,1	;volatile
 17658  0E0A                     i1l5017:	
 17659                           
 17660                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 17661  0E0A  0020               	movlb	0	; select bank0
 17662  0E0B  085C               	movf	_TMR2_InterruptHandler,w
 17663  0E0C  045D               	iorwf	_TMR2_InterruptHandler+1,w
 17664  0E0D  1903               	btfsc	3,2
 17665  0E0E  2E10               	goto	u217_21
 17666  0E0F  2E11               	goto	u217_20
 17667  0E10                     u217_21:	
 17668  0E10  2E16               	goto	i1l1038
 17669  0E11                     u217_20:	
 17670  0E11                     i1l5019:	
 17671                           
 17672                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 17673  0E11  085D               	movf	_TMR2_InterruptHandler+1,w
 17674  0E12  008A               	movwf	10
 17675  0E13  085C               	movf	_TMR2_InterruptHandler,w
 17676  0E14  000A               	callw
 17677  0E15  318E               	pagesel	$
 17678  0E16                     i1l1038:	
 17679  0E16  0008               	return
 17680  0E17                     __end_of_TMR2_ISR:	
 17681                           
 17682                           	psect	text85
 17683  0CB5                     __ptext85:	
 17684 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17685 ;; Defined at:
 17686 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;		None
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;		None
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  1    wreg      void 
 17693 ;; Registers used:
 17694 ;;		None
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17704 ;;Total ram usage:        0 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; This function calls:
 17707 ;;		Nothing
 17708 ;; This function is called by:
 17709 ;;		_TMR2_Initialize
 17710 ;;		_TMR2_ISR
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           
 17715                           ;psect for function _TMR2_DefaultInterruptHandler
 17716  0CB5                     _TMR2_DefaultInterruptHandler:	
 17717  0CB5                     i1l1044:	
 17718                           ;incstack = 0
 17719                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17720                           
 17721  0CB5  0008               	return
 17722  0CB6                     __end_of_TMR2_DefaultInterruptHandler:	
 17723                           
 17724                           	psect	text86
 17725  0CE2                     __ptext86:	
 17726 ;; *************** function _handler_clock_ms *****************
 17727 ;; Defined at:
 17728 ;;		line 455 in file "main.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;		None
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;		None
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  1    wreg      void 
 17735 ;; Registers used:
 17736 ;;		wreg, status,2, status,0
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17746 ;;Total ram usage:        1 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; This function calls:
 17749 ;;		Nothing
 17750 ;; This function is called by:
 17751 ;;		_main
 17752 ;;		_TMR2_ISR
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           
 17757                           ;psect for function _handler_clock_ms
 17758  0CE2                     _handler_clock_ms:	
 17759  0CE2                     i1l4887:	
 17760                           ;incstack = 0
 17761                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 17762                           
 17763                           
 17764                           ;main.c: 456:     clkms++;
 17765  0CE2  3001               	movlw	1
 17766  0CE3  00F0               	movwf	??_handler_clock_ms
 17767  0CE4  0870               	movf	??_handler_clock_ms,w
 17768  0CE5  07FD               	addwf	_clkms,f	;volatile
 17769  0CE6                     i1l1315:	
 17770                           ;main.c: 458:     if(clkms > 300){
 17771                           
 17772  0CE6  0008               	return
 17773  0CE7                     __end_of_handler_clock_ms:	
 17774                           
 17775                           	psect	text87
 17776  0EDC                     __ptext87:	
 17777 ;; *************** function _TMR1_ISR *****************
 17778 ;; Defined at:
 17779 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;		None
 17782 ;; Auto vars:     Size  Location     Type
 17783 ;;		None
 17784 ;; Return value:  Size  Location     Type
 17785 ;;                  1    wreg      void 
 17786 ;; Registers used:
 17787 ;;		wreg, status,2, status,0, pclath, cstack
 17788 ;; Tracked objects:
 17789 ;;		On entry : 0/0
 17790 ;;		On exit  : 0/0
 17791 ;;		Unchanged: 0/0
 17792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17797 ;;Total ram usage:        0 bytes
 17798 ;; Hardware stack levels used:    1
 17799 ;; Hardware stack levels required when called:    1
 17800 ;; This function calls:
 17801 ;;		Absolute function
 17802 ;;		_TMR1_DefaultInterruptHandler
 17803 ;;		_TMR1_WriteTimer
 17804 ;;		_handler_clock_hms
 17805 ;; This function is called by:
 17806 ;;		_INTERRUPT_InterruptManager
 17807 ;; This function uses a non-reentrant model
 17808 ;;
 17809                           
 17810                           
 17811                           ;psect for function _TMR1_ISR
 17812  0EDC                     _TMR1_ISR:	
 17813  0EDC                     i1l5007:	
 17814                           ;incstack = 0
 17815                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17816                           
 17817                           
 17818                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 17819  0EDC  002E               	movlb	14	; select bank14
 17820  0EDD  1010               	bcf	16,0	;volatile
 17821  0EDE                     i1l5009:	
 17822                           
 17823                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 17824  0EDE  0020               	movlb	0	; select bank0
 17825  0EDF  0861               	movf	_timer1ReloadVal+1,w	;volatile
 17826  0EE0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17827  0EE1  0860               	movf	_timer1ReloadVal,w	;volatile
 17828  0EE2  00F0               	movwf	TMR1_WriteTimer@timerVal
 17829  0EE3  318E  2646  318E   	fcall	_TMR1_WriteTimer
 17830  0EE6                     i1l5011:	
 17831                           
 17832                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 17833  0EE6  0020               	movlb	0	; select bank0
 17834  0EE7  085E               	movf	_TMR1_InterruptHandler,w
 17835  0EE8  045F               	iorwf	_TMR1_InterruptHandler+1,w
 17836  0EE9  1903               	btfsc	3,2
 17837  0EEA  2EEC               	goto	u216_21
 17838  0EEB  2EED               	goto	u216_20
 17839  0EEC                     u216_21:	
 17840  0EEC  2EF2               	goto	i1l896
 17841  0EED                     u216_20:	
 17842  0EED                     i1l5013:	
 17843                           
 17844                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 17845  0EED  085F               	movf	_TMR1_InterruptHandler+1,w
 17846  0EEE  008A               	movwf	10
 17847  0EEF  085E               	movf	_TMR1_InterruptHandler,w
 17848  0EF0  000A               	callw
 17849  0EF1  318E               	pagesel	$
 17850  0EF2                     i1l896:	
 17851  0EF2  0008               	return
 17852  0EF3                     __end_of_TMR1_ISR:	
 17853                           
 17854                           	psect	text88
 17855  0CB4                     __ptext88:	
 17856 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17857 ;; Defined at:
 17858 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;		None
 17861 ;; Auto vars:     Size  Location     Type
 17862 ;;		None
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  1    wreg      void 
 17865 ;; Registers used:
 17866 ;;		None
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17876 ;;Total ram usage:        0 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; This function calls:
 17879 ;;		Nothing
 17880 ;; This function is called by:
 17881 ;;		_TMR1_Initialize
 17882 ;;		_TMR1_ISR
 17883 ;; This function uses a non-reentrant model
 17884 ;;
 17885                           
 17886                           
 17887                           ;psect for function _TMR1_DefaultInterruptHandler
 17888  0CB4                     _TMR1_DefaultInterruptHandler:	
 17889  0CB4                     i1l902:	
 17890                           ;incstack = 0
 17891                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17892                           
 17893  0CB4  0008               	return
 17894  0CB5                     __end_of_TMR1_DefaultInterruptHandler:	
 17895                           
 17896                           	psect	text89
 17897  06A9                     __ptext89:	
 17898 ;; *************** function _handler_clock_hms *****************
 17899 ;; Defined at:
 17900 ;;		line 437 in file "main.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;		None
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg, status,2, status,0
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;Total ram usage:        1 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; This function calls:
 17921 ;;		Nothing
 17922 ;; This function is called by:
 17923 ;;		_main
 17924 ;;		_TMR1_ISR
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           
 17929                           ;psect for function _handler_clock_hms
 17930  06A9                     _handler_clock_hms:	
 17931  06A9                     i1l4867:	
 17932                           ;incstack = 0
 17933                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 17934                           
 17935                           
 17936                           ;main.c: 439:     if(!config_mode){
 17937  06A9  0020               	movlb	0	; select bank0
 17938  06AA  0839               	movf	_config_mode,w	;volatile
 17939  06AB  1D03               	btfss	3,2
 17940  06AC  2EAE               	goto	u202_21
 17941  06AD  2EAF               	goto	u202_20
 17942  06AE                     u202_21:	
 17943  06AE  2EBA               	goto	i1l4871
 17944  06AF                     u202_20:	
 17945  06AF                     i1l4869:	
 17946  06AF  1003               	clrc
 17947  06B0  1F96               	btfss	22,7	;volatile
 17948  06B1  1403               	setc
 17949  06B2  1803               	btfsc	3,0
 17950  06B3  2EB5               	goto	u203_21
 17951  06B4  2EB8               	goto	u203_20
 17952  06B5                     u203_21:	
 17953  06B5  0020               	movlb	0	; select bank0
 17954  06B6  1796               	bsf	22,7	;volatile
 17955  06B7  2EBA               	goto	u204_24
 17956  06B8                     u203_20:	
 17957  06B8  0020               	movlb	0	; select bank0
 17958  06B9  1396               	bcf	22,7	;volatile
 17959  06BA                     u204_24:	
 17960  06BA                     i1l4871:	
 17961                           
 17962                           ;main.c: 443:     last5s++;
 17963  06BA  3001               	movlw	1
 17964  06BB  00F0               	movwf	??_handler_clock_hms
 17965  06BC  0870               	movf	??_handler_clock_hms,w
 17966  06BD  07BB               	addwf	_last5s,f	;volatile
 17967  06BE                     i1l4873:	
 17968                           
 17969                           ;main.c: 444:     seg++;
 17970  06BE  3001               	movlw	1
 17971  06BF  00F0               	movwf	??_handler_clock_hms
 17972  06C0  0870               	movf	??_handler_clock_hms,w
 17973  06C1  07BE               	addwf	_seg,f	;volatile
 17974  06C2                     i1l4875:	
 17975                           
 17976                           ;main.c: 445:     if(seg >= 60) {
 17977  06C2  303C               	movlw	60
 17978  06C3  023E               	subwf	_seg,w	;volatile
 17979  06C4  1C03               	skipc
 17980  06C5  2EC7               	goto	u205_21
 17981  06C6  2EC8               	goto	u205_20
 17982  06C7                     u205_21:	
 17983  06C7  2ED8               	goto	i1l1311
 17984  06C8                     u205_20:	
 17985  06C8                     i1l4877:	
 17986                           
 17987                           ;main.c: 446:         clkm++;
 17988  06C8  3001               	movlw	1
 17989  06C9  00F0               	movwf	??_handler_clock_hms
 17990  06CA  0870               	movf	??_handler_clock_hms,w
 17991  06CB  07BF               	addwf	_clkm,f	;volatile
 17992  06CC                     i1l4879:	
 17993                           
 17994                           ;main.c: 447:         seg = 0;
 17995  06CC  01BE               	clrf	_seg	;volatile
 17996  06CD                     i1l4881:	
 17997                           
 17998                           ;main.c: 448:         if(clkm >= 60) {
 17999  06CD  303C               	movlw	60
 18000  06CE  023F               	subwf	_clkm,w	;volatile
 18001  06CF  1C03               	skipc
 18002  06D0  2ED2               	goto	u206_21
 18003  06D1  2ED3               	goto	u206_20
 18004  06D2                     u206_21:	
 18005  06D2  2ED8               	goto	i1l1311
 18006  06D3                     u206_20:	
 18007  06D3                     i1l4883:	
 18008                           
 18009                           ;main.c: 449:             clkh++;
 18010  06D3  3001               	movlw	1
 18011  06D4  00F0               	movwf	??_handler_clock_hms
 18012  06D5  0870               	movf	??_handler_clock_hms,w
 18013  06D6  07C0               	addwf	_clkh,f	;volatile
 18014  06D7                     i1l4885:	
 18015                           
 18016                           ;main.c: 450:             clkm = 0;
 18017  06D7  01BF               	clrf	_clkm	;volatile
 18018  06D8                     i1l1311:	
 18019  06D8  0008               	return
 18020  06D9                     __end_of_handler_clock_hms:	
 18021                           
 18022                           	psect	text90
 18023  0E46                     __ptext90:	
 18024 ;; *************** function _TMR1_WriteTimer *****************
 18025 ;; Defined at:
 18026 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 18027 ;; Parameters:    Size  Location     Type
 18028 ;;  timerVal        2    0[COMMON] unsigned short 
 18029 ;; Auto vars:     Size  Location     Type
 18030 ;;		None
 18031 ;; Return value:  Size  Location     Type
 18032 ;;                  1    wreg      void 
 18033 ;; Registers used:
 18034 ;;		wreg, status,2
 18035 ;; Tracked objects:
 18036 ;;		On entry : 0/0
 18037 ;;		On exit  : 0/0
 18038 ;;		Unchanged: 0/0
 18039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18044 ;;Total ram usage:        2 bytes
 18045 ;; Hardware stack levels used:    1
 18046 ;; This function calls:
 18047 ;;		Nothing
 18048 ;; This function is called by:
 18049 ;;		_TMR1_ISR
 18050 ;;		_TMR1_Reload
 18051 ;; This function uses a non-reentrant model
 18052 ;;
 18053                           
 18054                           
 18055                           ;psect for function _TMR1_WriteTimer
 18056  0E46                     _TMR1_WriteTimer:	
 18057  0E46                     i1l4771:	
 18058                           ;incstack = 0
 18059                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 18060                           
 18061                           
 18062                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 18063  0E46  0024               	movlb	4	; select bank4
 18064  0E47  1D0E               	btfss	14,2	;volatile
 18065  0E48  2E4A               	goto	u195_21
 18066  0E49  2E4B               	goto	u195_20
 18067  0E4A                     u195_21:	
 18068  0E4A  2E52               	goto	i1l4781
 18069  0E4B                     u195_20:	
 18070  0E4B                     i1l4773:	
 18071                           
 18072                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 18073  0E4B  100E               	bcf	14,0	;volatile
 18074  0E4C                     i1l4775:	
 18075                           
 18076                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 18077  0E4C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18078  0E4D  008D               	movwf	13	;volatile
 18079  0E4E                     i1l4777:	
 18080                           
 18081                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 18082  0E4E  0870               	movf	TMR1_WriteTimer@timerVal,w
 18083  0E4F  008C               	movwf	12	;volatile
 18084  0E50                     i1l4779:	
 18085                           
 18086                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 18087  0E50  140E               	bsf	14,0	;volatile
 18088                           
 18089                           ;mcc_generated_files/tmr1.c: 140:     }
 18090  0E51  2E56               	goto	i1l883
 18091  0E52                     i1l4781:	
 18092                           
 18093                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 18094  0E52  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18095  0E53  008D               	movwf	13	;volatile
 18096  0E54                     i1l4783:	
 18097                           
 18098                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 18099  0E54  0870               	movf	TMR1_WriteTimer@timerVal,w
 18100  0E55  008C               	movwf	12	;volatile
 18101  0E56                     i1l883:	
 18102  0E56  0008               	return
 18103  0E57                     __end_of_TMR1_WriteTimer:	
 18104                           
 18105                           	psect	text91
 18106  0DF9                     __ptext91:	
 18107 ;; *************** function _TMR0_ISR *****************
 18108 ;; Defined at:
 18109 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 18110 ;; Parameters:    Size  Location     Type
 18111 ;;		None
 18112 ;; Auto vars:     Size  Location     Type
 18113 ;;		None
 18114 ;; Return value:  Size  Location     Type
 18115 ;;                  1    wreg      void 
 18116 ;; Registers used:
 18117 ;;		wreg, status,2, status,0, pclath, cstack
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18127 ;;Total ram usage:        0 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; Hardware stack levels required when called:    2
 18130 ;; This function calls:
 18131 ;;		Absolute function
 18132 ;;		_ISR_3s
 18133 ;;		_TMR0_DefaultInterruptHandler
 18134 ;; This function is called by:
 18135 ;;		_INTERRUPT_InterruptManager
 18136 ;; This function uses a non-reentrant model
 18137 ;;
 18138                           
 18139                           
 18140                           ;psect for function _TMR0_ISR
 18141  0DF9                     _TMR0_ISR:	
 18142  0DF9                     i1l5001:	
 18143                           ;incstack = 0
 18144                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18145                           
 18146                           
 18147                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 18148  0DF9  002E               	movlb	14	; select bank14
 18149  0DFA  128C               	bcf	12,5	;volatile
 18150  0DFB                     i1l5003:	
 18151                           
 18152                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 18153  0DFB  0021               	movlb	1	; select bank1
 18154  0DFC  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 18155  0DFD  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 18156  0DFE  1903               	btfsc	3,2
 18157  0DFF  2E01               	goto	u215_21
 18158  0E00  2E02               	goto	u215_20
 18159  0E01                     u215_21:	
 18160  0E01  2E07               	goto	i1l1615
 18161  0E02                     u215_20:	
 18162  0E02                     i1l5005:	
 18163                           
 18164                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 18165  0E02  0847               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 18166  0E03  008A               	movwf	10
 18167  0E04  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 18168  0E05  000A               	callw
 18169  0E06  318D               	pagesel	$
 18170  0E07                     i1l1615:	
 18171  0E07  0008               	return
 18172  0E08                     __end_of_TMR0_ISR:	
 18173                           
 18174                           	psect	text92
 18175  0F23                     __ptext92:	
 18176 ;; *************** function _ISR_3s *****************
 18177 ;; Defined at:
 18178 ;;		line 131 in file "main.c"
 18179 ;; Parameters:    Size  Location     Type
 18180 ;;		None
 18181 ;; Auto vars:     Size  Location     Type
 18182 ;;		None
 18183 ;; Return value:  Size  Location     Type
 18184 ;;                  1    wreg      void 
 18185 ;; Registers used:
 18186 ;;		wreg, status,2, status,0, pclath, cstack
 18187 ;; Tracked objects:
 18188 ;;		On entry : 0/0
 18189 ;;		On exit  : 0/0
 18190 ;;		Unchanged: 0/0
 18191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18196 ;;Total ram usage:        1 bytes
 18197 ;; Hardware stack levels used:    1
 18198 ;; Hardware stack levels required when called:    1
 18199 ;; This function calls:
 18200 ;;		_TMR0_StopTimer
 18201 ;;		i1_PWM6_LoadDutyValue
 18202 ;; This function is called by:
 18203 ;;		_main
 18204 ;;		_TMR0_ISR
 18205 ;; This function uses a non-reentrant model
 18206 ;;
 18207                           
 18208                           
 18209                           ;psect for function _ISR_3s
 18210  0F23                     _ISR_3s:	
 18211  0F23                     i1l4785:	
 18212                           ;incstack = 0
 18213                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 18214                           
 18215                           
 18216                           ;main.c: 133:     if (lum_threshold){
 18217  0F23  0020               	movlb	0	; select bank0
 18218  0F24  0820               	movf	_lum_threshold,w
 18219  0F25  0421               	iorwf	_lum_threshold+1,w
 18220  0F26  1903               	btfsc	3,2
 18221  0F27  2F29               	goto	u196_21
 18222  0F28  2F2A               	goto	u196_20
 18223  0F29                     u196_21:	
 18224  0F29  2F36               	goto	i1l1203
 18225  0F2A                     u196_20:	
 18226  0F2A                     i1l4787:	
 18227                           
 18228                           ;main.c: 134:         PWM6_LoadDutyValue(1023);
 18229  0F2A  30FF               	movlw	255
 18230  0F2B  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18231  0F2C  3003               	movlw	3
 18232  0F2D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18233  0F2E  318E  26B0  318F   	fcall	i1_PWM6_LoadDutyValue
 18234  0F31                     i1l4789:	
 18235                           
 18236                           ;main.c: 135:         alarm = 1;
 18237  0F31  3001               	movlw	1
 18238  0F32  00F4               	movwf	??_ISR_3s
 18239  0F33  0874               	movf	??_ISR_3s,w
 18240  0F34  0020               	movlb	0	; select bank0
 18241  0F35  00B8               	movwf	_alarm	;volatile
 18242  0F36                     i1l1203:	
 18243                           ;main.c: 137:     }
 18244                           
 18245                           
 18246                           ;main.c: 139:     TMR0_StopTimer();
 18247  0F36  318C  24BB  318F   	fcall	_TMR0_StopTimer
 18248  0F39                     i1l4791:	
 18249                           
 18250                           ;main.c: 140:     PIE0bits.TMR0IE = 0;
 18251  0F39  002E               	movlb	14	; select bank14
 18252  0F3A  1296               	bcf	22,5	;volatile
 18253  0F3B                     i1l1204:	
 18254  0F3B  0008               	return
 18255  0F3C                     __end_of_ISR_3s:	
 18256                           
 18257                           	psect	text93
 18258  0CB3                     __ptext93:	
 18259 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18260 ;; Defined at:
 18261 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 18262 ;; Parameters:    Size  Location     Type
 18263 ;;		None
 18264 ;; Auto vars:     Size  Location     Type
 18265 ;;		None
 18266 ;; Return value:  Size  Location     Type
 18267 ;;                  1    wreg      void 
 18268 ;; Registers used:
 18269 ;;		None
 18270 ;; Tracked objects:
 18271 ;;		On entry : 0/0
 18272 ;;		On exit  : 0/0
 18273 ;;		Unchanged: 0/0
 18274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18279 ;;Total ram usage:        0 bytes
 18280 ;; Hardware stack levels used:    1
 18281 ;; This function calls:
 18282 ;;		Nothing
 18283 ;; This function is called by:
 18284 ;;		_TMR0_Initialize
 18285 ;;		_TMR0_ISR
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           
 18289                           
 18290                           ;psect for function _TMR0_DefaultInterruptHandler
 18291  0CB3                     _TMR0_DefaultInterruptHandler:	
 18292  0CB3                     i1l1621:	
 18293                           ;incstack = 0
 18294                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18295                           
 18296  0CB3  0008               	return
 18297  0CB4                     __end_of_TMR0_DefaultInterruptHandler:	
 18298                           
 18299                           	psect	text94
 18300  0CBB                     __ptext94:	
 18301 ;; *************** function _TMR0_StopTimer *****************
 18302 ;; Defined at:
 18303 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;		None
 18306 ;; Auto vars:     Size  Location     Type
 18307 ;;		None
 18308 ;; Return value:  Size  Location     Type
 18309 ;;                  1    wreg      void 
 18310 ;; Registers used:
 18311 ;;		None
 18312 ;; Tracked objects:
 18313 ;;		On entry : 0/0
 18314 ;;		On exit  : 0/0
 18315 ;;		Unchanged: 0/0
 18316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18321 ;;Total ram usage:        0 bytes
 18322 ;; Hardware stack levels used:    1
 18323 ;; This function calls:
 18324 ;;		Nothing
 18325 ;; This function is called by:
 18326 ;;		_ISR_3s
 18327 ;; This function uses a non-reentrant model
 18328 ;;
 18329                           
 18330                           
 18331                           ;psect for function _TMR0_StopTimer
 18332  0CBB                     _TMR0_StopTimer:	
 18333  0CBB                     i1l4379:	
 18334                           ;incstack = 0
 18335                           ; Regs used in _TMR0_StopTimer: []
 18336                           
 18337                           
 18338                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 18339  0CBB  0020               	movlb	0	; select bank0
 18340  0CBC  139E               	bcf	30,7	;volatile
 18341  0CBD                     i1l1602:	
 18342  0CBD  0008               	return
 18343  0CBE                     __end_of_TMR0_StopTimer:	
 18344                           
 18345                           	psect	text95
 18346  0D14                     __ptext95:	
 18347 ;; *************** function _INT_ISR *****************
 18348 ;; Defined at:
 18349 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;		None
 18352 ;; Auto vars:     Size  Location     Type
 18353 ;;		None
 18354 ;; Return value:  Size  Location     Type
 18355 ;;                  1    wreg      void 
 18356 ;; Registers used:
 18357 ;;		wreg, status,2, status,0, pclath, cstack
 18358 ;; Tracked objects:
 18359 ;;		On entry : 0/0
 18360 ;;		On exit  : 0/0
 18361 ;;		Unchanged: 0/0
 18362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18367 ;;Total ram usage:        0 bytes
 18368 ;; Hardware stack levels used:    1
 18369 ;; Hardware stack levels required when called:    3
 18370 ;; This function calls:
 18371 ;;		_INT_CallBack
 18372 ;; This function is called by:
 18373 ;;		_INTERRUPT_InterruptManager
 18374 ;; This function uses a non-reentrant model
 18375 ;;
 18376                           
 18377                           
 18378                           ;psect for function _INT_ISR
 18379  0D14                     _INT_ISR:	
 18380  0D14                     i1l4997:	
 18381                           ;incstack = 0
 18382                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18383                           
 18384                           
 18385                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 18386  0D14  002E               	movlb	14	; select bank14
 18387  0D15  100C               	bcf	12,0	;volatile
 18388  0D16                     i1l4999:	
 18389                           
 18390                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 18391  0D16  318D  25C4  318D   	fcall	_INT_CallBack
 18392  0D19                     i1l334:	
 18393  0D19  0008               	return
 18394  0D1A                     __end_of_INT_ISR:	
 18395                           
 18396                           	psect	text96
 18397  0DC4                     __ptext96:	
 18398 ;; *************** function _INT_CallBack *****************
 18399 ;; Defined at:
 18400 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;		None
 18403 ;; Auto vars:     Size  Location     Type
 18404 ;;		None
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      void 
 18407 ;; Registers used:
 18408 ;;		wreg, status,2, status,0, pclath, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18418 ;;Total ram usage:        0 bytes
 18419 ;; Hardware stack levels used:    1
 18420 ;; Hardware stack levels required when called:    2
 18421 ;; This function calls:
 18422 ;;		Absolute function
 18423 ;;		_INT_DefaultInterruptHandler
 18424 ;;		_sw1_EXT
 18425 ;; This function is called by:
 18426 ;;		_INT_ISR
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           
 18431                           ;psect for function _INT_CallBack
 18432  0DC4                     _INT_CallBack:	
 18433  0DC4                     i1l4629:	
 18434                           ;incstack = 0
 18435                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18436                           
 18437                           
 18438                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 18439  0DC4  0020               	movlb	0	; select bank0
 18440  0DC5  0862               	movf	_INT_InterruptHandler,w
 18441  0DC6  0463               	iorwf	_INT_InterruptHandler+1,w
 18442  0DC7  1903               	btfsc	3,2
 18443  0DC8  2DCA               	goto	u194_21
 18444  0DC9  2DCB               	goto	u194_20
 18445  0DCA                     u194_21:	
 18446  0DCA  2DD0               	goto	i1l338
 18447  0DCB                     u194_20:	
 18448  0DCB                     i1l4631:	
 18449                           
 18450                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 18451  0DCB  0863               	movf	_INT_InterruptHandler+1,w
 18452  0DCC  008A               	movwf	10
 18453  0DCD  0862               	movf	_INT_InterruptHandler,w
 18454  0DCE  000A               	callw
 18455  0DCF  318D               	pagesel	$
 18456  0DD0                     i1l338:	
 18457  0DD0  0008               	return
 18458  0DD1                     __end_of_INT_CallBack:	
 18459                           
 18460                           	psect	text97
 18461  0CB2                     __ptext97:	
 18462 ;; *************** function _INT_DefaultInterruptHandler *****************
 18463 ;; Defined at:
 18464 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18465 ;; Parameters:    Size  Location     Type
 18466 ;;		None
 18467 ;; Auto vars:     Size  Location     Type
 18468 ;;		None
 18469 ;; Return value:  Size  Location     Type
 18470 ;;                  1    wreg      void 
 18471 ;; Registers used:
 18472 ;;		None
 18473 ;; Tracked objects:
 18474 ;;		On entry : 0/0
 18475 ;;		On exit  : 0/0
 18476 ;;		Unchanged: 0/0
 18477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18482 ;;Total ram usage:        0 bytes
 18483 ;; Hardware stack levels used:    1
 18484 ;; This function calls:
 18485 ;;		Nothing
 18486 ;; This function is called by:
 18487 ;;		_EXT_INT_Initialize
 18488 ;;		_INT_CallBack
 18489 ;; This function uses a non-reentrant model
 18490 ;;
 18491                           
 18492                           
 18493                           ;psect for function _INT_DefaultInterruptHandler
 18494  0CB2                     _INT_DefaultInterruptHandler:	
 18495  0CB2                     i1l344:	
 18496                           ;incstack = 0
 18497                           ; Regs used in _INT_DefaultInterruptHandler: []
 18498                           
 18499  0CB2  0008               	return
 18500  0CB3                     __end_of_INT_DefaultInterruptHandler:	
 18501                           
 18502                           	psect	text98
 18503  06D9                     __ptext98:	
 18504 ;; *************** function _sw1_EXT *****************
 18505 ;; Defined at:
 18506 ;;		line 99 in file "main.c"
 18507 ;; Parameters:    Size  Location     Type
 18508 ;;		None
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;		None
 18511 ;; Return value:  Size  Location     Type
 18512 ;;                  1    wreg      void 
 18513 ;; Registers used:
 18514 ;;		wreg, status,2, status,0, pclath, cstack
 18515 ;; Tracked objects:
 18516 ;;		On entry : 0/0
 18517 ;;		On exit  : 0/0
 18518 ;;		Unchanged: 0/0
 18519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18524 ;;Total ram usage:        1 bytes
 18525 ;; Hardware stack levels used:    1
 18526 ;; Hardware stack levels required when called:    1
 18527 ;; This function calls:
 18528 ;;		i1_PWM6_LoadDutyValue
 18529 ;;		i1_checkDebounceSW1
 18530 ;; This function is called by:
 18531 ;;		_main
 18532 ;;		_INT_CallBack
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           
 18537                           ;psect for function _sw1_EXT
 18538  06D9                     _sw1_EXT:	
 18539  06D9                     i1l4363:	
 18540                           ;incstack = 0
 18541                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 18542                           
 18543                           
 18544                           ;main.c: 102:     if(checkDebounceSW1()){
 18545  06D9  3184  2422  3186   	fcall	i1_checkDebounceSW1
 18546  06DC  3A00               	xorlw	0
 18547  06DD  1903               	skipnz
 18548  06DE  2EE0               	goto	u178_21
 18549  06DF  2EE1               	goto	u178_20
 18550  06E0                     u178_21:	
 18551  06E0  2F06               	goto	i1l1200
 18552  06E1                     u178_20:	
 18553  06E1                     i1l4365:	
 18554                           
 18555                           ;main.c: 103:         if (alarm == 1){
 18556  06E1  0020               	movlb	0	; select bank0
 18557  06E2  0338               	decf	_alarm,w	;volatile
 18558  06E3  1D03               	btfss	3,2
 18559  06E4  2EE6               	goto	u179_21
 18560  06E5  2EE7               	goto	u179_20
 18561  06E6                     u179_21:	
 18562  06E6  2EF5               	goto	i1l1194
 18563  06E7                     u179_20:	
 18564  06E7                     i1l4367:	
 18565                           
 18566                           ;main.c: 104:             alarm = 0;
 18567  06E7  01B8               	clrf	_alarm	;volatile
 18568  06E8                     i1l4369:	
 18569  06E8  1316               	bcf	22,6	;volatile
 18570  06E9                     i1l4371:	
 18571                           
 18572                           ;main.c: 106:             PWM6_LoadDutyValue(0);
 18573  06E9  3000               	movlw	0
 18574  06EA  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18575  06EB  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18576  06EC  318E  26B0  3186   	fcall	i1_PWM6_LoadDutyValue
 18577  06EF                     i1l4373:	
 18578                           
 18579                           ;main.c: 107:             last_ms = clkms;
 18580  06EF  087D               	movf	_clkms,w	;volatile
 18581  06F0  00F7               	movwf	??_sw1_EXT
 18582  06F1  0877               	movf	??_sw1_EXT,w
 18583  06F2  0020               	movlb	0	; select bank0
 18584  06F3  00BD               	movwf	_last_ms
 18585                           
 18586                           ;main.c: 108:         }
 18587  06F4  2F02               	goto	i1l1197
 18588  06F5                     i1l1194:	
 18589                           ;main.c: 109:         else{
 18590                           
 18591                           
 18592                           ;main.c: 110:             if(!PORTBbits.RB4){
 18593  06F5  1A0D               	btfsc	13,4	;volatile
 18594  06F6  2EF8               	goto	u180_21
 18595  06F7  2EF9               	goto	u180_20
 18596  06F8                     u180_21:	
 18597  06F8  2F02               	goto	i1l1197
 18598  06F9                     u180_20:	
 18599  06F9                     i1l4375:	
 18600                           
 18601                           ;main.c: 112:                 if(config_mode == 0){
 18602  06F9  0839               	movf	_config_mode,w	;volatile
 18603  06FA  1D03               	btfss	3,2
 18604  06FB  2EFD               	goto	u181_21
 18605  06FC  2EFE               	goto	u181_20
 18606  06FD                     u181_21:	
 18607  06FD  2F02               	goto	i1l1197
 18608  06FE                     u181_20:	
 18609  06FE                     i1l4377:	
 18610                           
 18611                           ;main.c: 113:                     config_mode = 1;
 18612  06FE  3001               	movlw	1
 18613  06FF  00F7               	movwf	??_sw1_EXT
 18614  0700  0877               	movf	??_sw1_EXT,w
 18615  0701  00B9               	movwf	_config_mode	;volatile
 18616  0702                     i1l1197:	
 18617                           ;main.c: 119:             }
 18618                           
 18619                           
 18620                           ;main.c: 120:             last_ms = clkms;
 18621  0702  087D               	movf	_clkms,w	;volatile
 18622  0703  00F7               	movwf	??_sw1_EXT
 18623  0704  0877               	movf	??_sw1_EXT,w
 18624  0705  00BD               	movwf	_last_ms
 18625  0706                     i1l1200:	
 18626  0706  0008               	return
 18627  0707                     __end_of_sw1_EXT:	
 18628                           
 18629                           	psect	text99
 18630  0422                     __ptext99:	
 18631 ;; *************** function i1_checkDebounceSW1 *****************
 18632 ;; Defined at:
 18633 ;;		line 493 in file "main.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;		None
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;		None
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      unsigned char 
 18640 ;; Registers used:
 18641 ;;		wreg, status,2, status,0
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18649 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18651 ;;Total ram usage:        7 bytes
 18652 ;; Hardware stack levels used:    1
 18653 ;; This function calls:
 18654 ;;		Nothing
 18655 ;; This function is called by:
 18656 ;;		_sw1_EXT
 18657 ;; This function uses a non-reentrant model
 18658 ;;
 18659                           
 18660                           
 18661                           ;psect for function i1_checkDebounceSW1
 18662  0422                     i1_checkDebounceSW1:	
 18663  0422                     i1l4201:	
 18664                           ;incstack = 0
 18665                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 18666                           
 18667                           
 18668                           ;main.c: 494:    PIE4bits.TMR1IE = 0;
 18669  0422  002E               	movlb	14	; select bank14
 18670  0423  101A               	bcf	26,0	;volatile
 18671  0424                     i1l4203:	
 18672                           
 18673                           ;main.c: 496:     if(clkms - last_ms < 0){
 18674  0424  087D               	movf	_clkms,w	;volatile
 18675  0425  00F0               	movwf	??i1_checkDebounceSW1
 18676  0426  01F1               	clrf	??i1_checkDebounceSW1+1
 18677  0427  0871               	movf	??i1_checkDebounceSW1+1,w
 18678  0428  00F3               	movwf	??i1_checkDebounceSW1+3
 18679  0429  0020               	movlb	0	; select bank0
 18680  042A  083D               	movf	_last_ms,w
 18681  042B  0270               	subwf	??i1_checkDebounceSW1,w
 18682  042C  00F2               	movwf	??i1_checkDebounceSW1+2
 18683  042D  1C03               	skipc
 18684  042E  03F3               	decf	??i1_checkDebounceSW1+3,f
 18685  042F  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 18686  0430  2C32               	goto	u173_21
 18687  0431  2C33               	goto	u173_20
 18688  0432                     u173_21:	
 18689  0432  2C59               	goto	i1l4213
 18690  0433                     u173_20:	
 18691  0433                     i1l4205:	
 18692                           
 18693                           ;main.c: 498:         if ((300 - last_ms)+ clkms > 2 ){
 18694  0433  087D               	movf	_clkms,w	;volatile
 18695  0434  00F0               	movwf	??i1_checkDebounceSW1
 18696  0435  01F1               	clrf	??i1_checkDebounceSW1+1
 18697  0436  0871               	movf	??i1_checkDebounceSW1+1,w
 18698  0437  00F3               	movwf	??i1_checkDebounceSW1+3
 18699  0438  083D               	movf	_last_ms,w
 18700  0439  0270               	subwf	??i1_checkDebounceSW1,w
 18701  043A  00F2               	movwf	??i1_checkDebounceSW1+2
 18702  043B  1C03               	skipc
 18703  043C  03F3               	decf	??i1_checkDebounceSW1+3,f
 18704  043D  0872               	movf	??i1_checkDebounceSW1+2,w
 18705  043E  3E2C               	addlw	44
 18706  043F  00F4               	movwf	??i1_checkDebounceSW1+4
 18707  0440  3001               	movlw	1
 18708  0441  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 18709  0442  00F5               	movwf	??i1_checkDebounceSW1+5
 18710  0443  0875               	movf	??i1_checkDebounceSW1+5,w
 18711  0444  3A80               	xorlw	128
 18712  0445  00F6               	movwf	??i1_checkDebounceSW1+6
 18713  0446  3080               	movlw	128
 18714  0447  0276               	subwf	??i1_checkDebounceSW1+6,w
 18715  0448  1D03               	skipz
 18716  0449  2C4C               	goto	u174_25
 18717  044A  3003               	movlw	3
 18718  044B  0274               	subwf	??i1_checkDebounceSW1+4,w
 18719  044C                     u174_25:	
 18720  044C  1C03               	skipc
 18721  044D  2C4F               	goto	u174_21
 18722  044E  2C50               	goto	u174_20
 18723  044F                     u174_21:	
 18724  044F  2C59               	goto	i1l4213
 18725  0450                     u174_20:	
 18726  0450                     i1l4207:	
 18727                           
 18728                           ;main.c: 499:             last_ms = clkms;
 18729  0450  087D               	movf	_clkms,w	;volatile
 18730  0451  00F0               	movwf	??i1_checkDebounceSW1
 18731  0452  0870               	movf	??i1_checkDebounceSW1,w
 18732  0453  0020               	movlb	0	; select bank0
 18733  0454  00BD               	movwf	_last_ms
 18734  0455                     i1l4209:	
 18735                           
 18736                           ;main.c: 500:             PIE4bits.TMR1IE = 1;
 18737  0455  002E               	movlb	14	; select bank14
 18738  0456  141A               	bsf	26,0	;volatile
 18739                           
 18740                           ;main.c: 501:             return 1;
 18741  0457  3001               	movlw	1
 18742  0458  2C7B               	goto	i1l1341
 18743  0459                     i1l4213:	
 18744                           
 18745                           ;main.c: 505:     if(clkms - last_ms < 2){
 18746  0459  087D               	movf	_clkms,w	;volatile
 18747  045A  00F0               	movwf	??i1_checkDebounceSW1
 18748  045B  01F1               	clrf	??i1_checkDebounceSW1+1
 18749  045C  0871               	movf	??i1_checkDebounceSW1+1,w
 18750  045D  00F3               	movwf	??i1_checkDebounceSW1+3
 18751  045E  0020               	movlb	0	; select bank0
 18752  045F  083D               	movf	_last_ms,w
 18753  0460  0270               	subwf	??i1_checkDebounceSW1,w
 18754  0461  00F2               	movwf	??i1_checkDebounceSW1+2
 18755  0462  1C03               	skipc
 18756  0463  03F3               	decf	??i1_checkDebounceSW1+3,f
 18757  0464  0873               	movf	??i1_checkDebounceSW1+3,w
 18758  0465  3A80               	xorlw	128
 18759  0466  00F4               	movwf	??i1_checkDebounceSW1+4
 18760  0467  3080               	movlw	128
 18761  0468  0274               	subwf	??i1_checkDebounceSW1+4,w
 18762  0469  1D03               	skipz
 18763  046A  2C6D               	goto	u175_25
 18764  046B  3002               	movlw	2
 18765  046C  0272               	subwf	??i1_checkDebounceSW1+2,w
 18766  046D                     u175_25:	
 18767  046D  1803               	skipnc
 18768  046E  2C70               	goto	u175_21
 18769  046F  2C71               	goto	u175_20
 18770  0470                     u175_21:	
 18771  0470  2C73               	goto	i1l4221
 18772  0471                     u175_20:	
 18773  0471                     i1l4215:	
 18774                           
 18775                           ;main.c: 506:         return 0;
 18776  0471  3000               	movlw	0
 18777  0472  2C7B               	goto	i1l1341
 18778  0473                     i1l4221:	
 18779                           
 18780                           ;main.c: 509:         last_ms = clkms;
 18781  0473  087D               	movf	_clkms,w	;volatile
 18782  0474  00F0               	movwf	??i1_checkDebounceSW1
 18783  0475  0870               	movf	??i1_checkDebounceSW1,w
 18784  0476  0020               	movlb	0	; select bank0
 18785  0477  00BD               	movwf	_last_ms
 18786  0478                     i1l4223:	
 18787                           
 18788                           ;main.c: 510:         PIE4bits.TMR1IE = 1;
 18789  0478  002E               	movlb	14	; select bank14
 18790  0479  141A               	bsf	26,0	;volatile
 18791                           
 18792                           ;main.c: 511:         return 1;
 18793  047A  3001               	movlw	1
 18794  047B                     i1l1341:	
 18795  047B  0008               	return
 18796  047C                     __end_ofi1_checkDebounceSW1:	
 18797                           
 18798                           	psect	text100
 18799  0EB0                     __ptext100:	
 18800 ;; *************** function i1_PWM6_LoadDutyValue *****************
 18801 ;; Defined at:
 18802 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 18803 ;; Parameters:    Size  Location     Type
 18804 ;;  dutyValue       2    0[COMMON] unsigned short 
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;		None
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      void 
 18809 ;; Registers used:
 18810 ;;		wreg, status,2, status,0
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18820 ;;Total ram usage:        4 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; This function calls:
 18823 ;;		Nothing
 18824 ;; This function is called by:
 18825 ;;		_sw1_EXT
 18826 ;;		_ISR_3s
 18827 ;; This function uses a non-reentrant model
 18828 ;;
 18829                           
 18830                           
 18831                           ;psect for function i1_PWM6_LoadDutyValue
 18832  0EB0                     i1_PWM6_LoadDutyValue:	
 18833  0EB0                     i1l4199:	
 18834                           ;incstack = 0
 18835                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18836                           
 18837                           
 18838                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18839  0EB0  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 18840  0EB1  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 18841  0EB2  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18842  0EB3  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18843  0EB4  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18844  0EB5  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18845  0EB6  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18846  0EB7  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18847  0EB8  0872               	movf	??i1_PWM6_LoadDutyValue,w
 18848  0EB9  0027               	movlb	7	; select bank7
 18849  0EBA  008D               	movwf	13	;volatile
 18850                           
 18851                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18852  0EBB  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18853  0EBC  3903               	andlw	3
 18854  0EBD  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18855  0EBE  3005               	movlw	5
 18856  0EBF                     u172_25:	
 18857  0EBF  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 18858  0EC0  3EFF               	addlw	-1
 18859  0EC1  1D03               	skipz
 18860  0EC2  2EBF               	goto	u172_25
 18861  0EC3  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 18862  0EC4  008C               	movwf	12	;volatile
 18863  0EC5                     i1l916:	
 18864  0EC5  0008               	return
 18865  0EC6                     __end_ofi1_PWM6_LoadDutyValue:	
 18866  007E                     btemp	set	126	;btemp
 18867  007E                     int$flags	set	126
 18868  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         70
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      75
    BANK1            80      4      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3626$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3632	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3631	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3626	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_push_ring
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _mode_select_LED->_PWM6_LoadDutyValue
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   41965
                                             20 BANK0      5     5      0
                                              0 BANK1      4     4      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                          _push_ring
                          _read_ring
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   12278
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2386
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4105
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2940
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2287
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   14078
                                             17 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    6433
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1326
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      81      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      81      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 18:39:42 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0D2C  
                          ___bmul@product 0048                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0CFB  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 004F                    increment_subfield@plus 004D  
                             __CFG_LVP$ON 0000                                       l341 0D1F  
                                     l442 0D8F                                       l530 05AF  
                                     l347 0DF8                                       l445 0D74  
                                     l439 0FA4                                       l760 0D6C  
                                     l913 0DEA                                       l763 0D45  
                                     l916 0F54                                       l757 0EDB  
                                     l766 0D86                                       l960 07A9  
                                     l963 0E25                                       l869 0FDF  
                                     l957 079E                                       l959 07A2  
                                     l899 0D25                                       l998 0F22  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0CB8                           _timer1ReloadVal 0060  
                                     _seg 003E             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0F0B  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 0F89                                      l1041 0D2B  
                                    l1212 00A1                   ??_rd2RegCompleteHandler 007A  
                                    l1303 0F6E                                      l1223 014B  
                                    l1215 00BB                                      l1323 0DAD  
                                    l1331 0DB8                                      l1228 01C5  
                                    l1341 0421                                      l1253 0309  
                                    l1326 0DA2                                      l1263 0636  
                                    l1271 0349                                      l1336 0DC3  
                                    l1257 0605                                      l1361 0FFF  
                                    l1282 036D                                      l1348 051C  
                                    l1268 0320                                      l1285 037A  
                                    l1294 03C7                                      l1279 036C  
                                    l1560 0675                                      l1297 0F88  
                                    l1553 05F6                                      l1618 0D98  
                                    l1546 027C                                      l1563 0E45  
                                    l1573 0FC0                                      l1568 07E9  
                                    l6001 07EC                                      l6011 07FE  
                                    l6003 07ED                                      l1596 0EAF  
                                    l6021 0F92                                      l6101 05E4  
                                    l6005 07F1                      _ADCC_StartConversion 0D65  
                                    l6031 0FA1                                      l6023 0F95  
                                    l6015 0F89                                      l1599 0CD5  
                                    l6111 0280                                      l6103 05EC  
                                    l6007 07F5                                      l6025 0F98  
                                    l6017 0F8C                                      l6121 0299  
                                    l6113 0284                                      l6105 05F0  
                                    l6009 07F7                                      l6041 0249  
                                    l6033 01E5                                      l6201 00D1  
                                    l6051 0F55                                      l6027 0F9B  
                                    l6019 0F8F                                      l6107 0CD3  
                                    l6131 02B4                                      l6123 029E  
                                    l6115 0288                                      l6043 0255  
                                    l6035 01F2                                      l6211 00EE  
                                    l6203 00D3                                      l6053 0F5A  
                                    l6061 0F6F                                      l6029 0F9E  
                                    l6133 02B8                                      l6125 02A6  
                                    l6141 02D4                                      l6117 0290  
                                    l6109 027D                                      l6045 0261  
                                    l6037 0204                                      l6221 0104  
                                    l6213 00F5                                      l6205 00D5  
                                    l6055 0F5E                                      l6151 02ED  
                                    l6135 02BC                                      l6127 02AC  
                                    l6143 02D9                                      l6119 0296  
                                    l1799 07FF                                      l6071 0651  
                                    l6063 0639                                      l6047 026D  
                                    l6039 0246                                      l6231 014D  
                                    l6223 010A                                      l6215 00F6  
                                    l6207 00DB                                      l6057 0F66  
                                    l6153 02F4                                      l6145 02DD  
                                    l6129 02B0                                      l6081 066B  
                                    l6073 0657                                      l6065 0639  
                                    l6049 0279                                      l6233 015F  
                                    l6241 018D                                      l6225 010C  
                                    l6217 00F7                                      l6209 00E3  
                                    l6147 02E5                                      l6155 02F7  
                                    l6139 02C1                                      l6075 065E  
                                    l6067 063F                                      l6251 01AB  
                                    l6243 0194                                      l6235 016D  
                                    l6227 0116                                      l6219 00FA  
                                    l6157 02FB                                      l6149 02EA  
                                    l5701 0796                                      l6085 05B2  
                                    l6069 0644                                      l6077 0669  
                                    l6261 01C2                                      l6253 01AD  
                                    l6245 019A                                      l6237 017E  
                                    l6229 012D                                      l6181 00AB  
                                    l6173 00A6                                      l6165 007E  
                                    l6159 0301                                      l5711 079D  
                                    l5703 0797                                      l6095 05C0  
                                    l6087 05BA                                      l5631 0E1B  
                                    l6255 01B0                                      l6271 01D2  
                                    l6247 019E                                      l6239 018A  
                                    l6263 01C6                                      l6191 00BA  
                                    l6183 00AE                                      l6175 00A7  
                                    l6167 00A1                                      l5801 057A  
                                    l5721 0DA5                                      l5713 07A3  
                                    l5705 0798                                      l6097 05C9  
                                    l6089 05BF                                      l5641 0E23  
                                    l5633 0E1F                                      l6273 01DB  
                                    l6265 01CB                                      l6249 01A6  
                                    l6257 01B6                                      l6193 00BC  
                                    l6185 00B5                                      l6177 00A8  
                                    l6169 00A1                                      l5811 058E  
                                    l5803 057C                                      l5715 0D26  
                                    l5627 0F3C                                      l5651 03F6  
                                    l5723 0DAB                                      l5731 0DB0  
                                    l6443 02C6                                      l5707 0799  
                                    l6099 05CD                                      l5635 0E20  
                                    l6267 01CD                                      l6259 01BC  
                                    l6195 00BD                                      l6187 00B7  
                                    l6179 00AA                                      l5821 0598  
                                    l5813 0590                                      l5805 057E  
                                    l5717 0D90                                      l5901 0EAC  
                                    l5653 03FB                                      l5645 03C8  
                                    l5741 05F7                                      l5725 0D99  
                                    l5733 0DB6                                      l6445 033B  
                                    l5709 079B                                      l5637 0E21  
                                    l5629 0E17                                      l6269 01D0  
                                    l6197 00C5                                      l6189 00B9  
                                    l5903 0D67                                      l5831 05A3  
                                    l5823 059A                                      l5815 0592  
                                    l5807 0580                                      l5647 03CA  
                                    l5671 04D0                                      l5751 0616  
                                    l5743 05FC                                      l5719 0DA3  
                                    l5727 0D9B                                      l5735 0DB9  
                                    l5639 0E22                                      l6199 00CF  
                                    l5913 0D7E                                      l5905 0D6A  
                                    l5841 0D87                                      l5833 05A5  
                                    l5825 059C                                      l5817 0594  
                                    l5809 058C                                      l5921 0378  
                                    l5665 0419                                      l5649 03D9  
                                    l5657 03FF                                      l5681 051B  
                                    l5673 04DF                                      l5753 061D  
                                    l5745 05FE                                      l5729 0DAE  
                                    l5737 0DBB                                      l5761 07CA  
                                    l5907 0D6B                                      l5691 0D1A  
                                    l5843 0D8A                                      l5835 05A8  
                                    l5827 059E                                      l5819 0596  
                                    l5851 0DE5                                      l5931 03A6  
                                    l5923 0383                                      l5667 041E  
                                    l5659 0417                                      l5675 04FC  
                                    l5755 0622                                      l5747 0609  
                                    l5739 0DC1                                      l5771 07DB  
                                    l5763 07CC                                      l5909 0D3F  
                                    l5853 0EC6                                      l5781 0DEE  
                                    l5845 0D8B                                      l5837 05AA  
                                    l5829 05A0                                      l5693 0D20  
                                    l5861 0F10                                      l5941 03C5  
                                    l5933 03AF                                      l5925 038B  
                                    l5757 062A                                      l5749 0611  
                                    l5773 07DF                                      l5917 0E36  
                                    l5855 0ED8                                      l5783 0DF6  
                                    l5847 0D8E                                      l5839 05AC  
                                    l5791 056F                                      l5871 0F1F  
                                    l5863 0F11                                      l5935 03B1  
                                    l5927 039B                                      l5919 036F  
                                    l5679 0503                                      l5759 062F  
                                    l5951 0FF4                                      l5943 0FE0  
                                    l5695 0786                                      l5775 07E8  
                                    l5857 0EDA                                      l5793 0571  
                                    l5785 0D6D                                      l5849 0DDE  
                                    l5881 0FCA                                      l5873 0FC1  
                                    l5865 0F14                                      l5937 03BA  
                                    l5929 03A4                                      l5961 0313  
                                    l5953 0FFC                                      l5945 0FE8  
                                    l5697 078E                                      l5769 07D0  
                                    l5779 0DEB                                      l5795 0573  
                                    l5787 0567                                      l5891 0E9B  
                                    l5883 0FD1                                      l5875 0FC4  
                                    l5867 0F16                                      l5859 0F0B  
                                    l5939 03BC                                      l5971 0332  
                                    l5963 031B                                      l5955 0FFE  
                                    l5947 0FEA                                      l5699 0792  
                                    l5797 0575                                      l5789 056D  
                                    l5893 0EA0                                      l5885 0FD3  
                                    l5877 0FC6                                      l5869 0F17  
                                    l5981 035B                                      l5965 0326  
                                    l5957 030A                                      l5949 0FF2  
                                    l5799 0577                                      l5895 0EA1  
                                    l5887 0FD4                                      l5879 0FC8  
                                    l5983 035E                                      l5967 032A  
                                    l5975 0336                                      l5959 030F  
                                    l5991 0FA5                                      l5897 0EA3  
                                    l5889 0FDC                                      l5985 0362  
                                    l5977 034E                                      l5969 032E  
                                    l5899 0EA4                                      l5979 0356  
                                    l5995 0FAA                                      l5997 0FB2  
                                    l5999 0FB7                                      u3000 07F1  
                                    u3001 07F0                                      u3010 07FE  
                                    u3011 07FD                                      u3100 05F6  
                                    u3020 01F2                                      u3101 05F5  
                                    u3021 01F1                                      _LATA 0016  
                                    u3110 0290                                      u3030 0204  
                                    _LATB 0017                           __end_of_INT_ISR 0D1A  
                                    u3111 028F                                      u3031 0203  
                                    _LATC 0018                                      u3040 0F66  
                                    u3120 0296                                      u3200 00DB  
                                    _LATD 0019                                      u3041 0F65  
                                    u3121 0295                                      u3201 00DA  
                                    _LATE 001A                                      u3130 029E  
                                    u3050 063F                                      u3210 0104  
                                    u3131 029D                                      u3051 063E  
                                    u3211 0103                                      u3140 02A6  
                                    u3060 0644                                      u3300 01E2  
                                    u3220 010A                                      u3141 02A5  
                                    u3061 0643                                      u3301 01E1  
                                    u3221 0109                                      u3150 02DD  
                                    u3070 0657                                      u3230 012D  
                                    u3151 02DC                                      u3071 0656  
                                    u3231 012C                                      u3160 02E5  
                                    u3080 05BA                                      u3240 014B  
                                    u3161 02E4                                      u3081 05B9  
                                    u3241 014A                                      u3170 02F4  
                                    u3090 05C9                                      u3250 0194  
                                    _T2PR 028D                                      u3171 02F3  
                                    u3091 05C8                                      u3251 0193  
                                    u3180 0301                                      u3260 019A  
                                    u3181 0300                                      u3261 0199  
                                    u3245 0147                                      u3270 01AB  
                                    u3190 00CF                                      u3407 038F  
                                    u3271 01AA                                      u3191 00CE  
                                    u3280 01BC                                      u3417 039F  
                                    u3337 01D6                                      u3281 01BB  
                                    u2810 03D9                                      u3290 01CB  
                                    u3427 03AA                                      u2811 03D8  
                                    u3347 02F8                                      u3291 01CA  
                                    u2820 03F6                                      u2900 0622  
                                    u2805 0F4D                                      u3437 03B5  
                                    u2821 03F5                                      u2901 0621  
                                    u3357 0FEE                                      u2830 0417  
                                    u2910 062A                                      u3447 03C0  
                                    u2831 0416                                      u2911 0629  
                                    u3367 0FF8                                      u2840 04DF  
                                    u2920 0636                                      u3457 0F5B  
                                    u2825 03F2                                      u2841 04DE  
                                    u2921 0635                                      u3377 035F  
                                    u2850 04FC                                      u2930 07E8  
                                    u3387 0373                                      u2835 0413  
                                    u2851 04FB                                      u2931 07E7  
                                    u2860 051B                                      u2940 0313  
                                    _PMD0 0796                                      u3397 037E  
                                    u2861 051A                                      u2941 0312  
                                    _PMD1 0797                                      u2950 031B  
                                    u2870 07A2                                      _PMD2 0798  
                                    u2855 04F8                                      u2951 031A  
                                    u2871 07A1                                      _PMD3 0799  
                                    u2880 0609                                      u2960 034E  
                                    _PMD4 079A                                      u2865 0517  
                                    u2881 0608                                      u2961 034D  
                                    _PMD5 079B                                      u2890 0611  
                                    u2970 0356                                      u2891 0610  
                                    u2971 0355                                      u2980 036C  
                                    u2981 036B                                      u2990 0FC0  
                                    u2991 0FBF                                      i1l73 0DDD  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0036  
                                    _clkh 0040                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 003F                                      _main 007E  
                                    _tala 0068                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 006A  
                         _TMR0_StartTimer 0CD3                                      _temp 0037  
                                    _pmon 0069                        _increment_subfield 05F7  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0CB3               _INT_DefaultInterruptHandler 0CB2  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0F6F  
         __end_of_INT_SetInterruptHandler 0D20                             _i2c_setBuffer 0E26  
              ??_TMR1_SetInterruptHandler 0048                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0049                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 0734                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0055                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0EB0                              _do_I2C_RESET 0D55  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0D90                         ??_clock_subfields 0051  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                __end_of_i2c1_driver_stop 0CC4                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 0CEC                            __CFG_DEBUG$OFF 0000  
                                   i1l103 0E35                                     i1l200 06A8  
                                   i1l210 0733                                     i1l131 0CF5  
                                   i1l140 0D04                                     _T2TMR 028C  
                                   i1l125 0D5C                                     i1l213 0CE1  
                                   i1l134 0CFA                                     i1l303 0F0A  
                                   i1l143 0D7D                                     i1l224 0785  
                                   i1l216 0CBA                                     i1l128 0CF0  
                                   i1l152 0D09                                     i1l137 0CFF  
                                   i1l146 0D64                                     _T2RST 0291  
                                   i1l219 0003                                     i1l243 0E78  
                                   i1l155 0D0E                                     i1l164 075F  
                                   i1l172 04CF                                     i1l149 0D3E  
                                   i1l334 0D19                                     i1l158 0D13  
                                   i1l344 0CB2                                     i1l264 0E89  
                                   i1l169 04B3                                     i1l185 053A  
                                   i1l338 0DD0                                     i1l602 0CB6  
                                   i1l186 0566                                     i1l611 0CC3  
                                   i1l291 0E67                                     i1l620 0CC9  
                                   i1l380 001F                                     i1l614 0D54  
                                   i1l279 0E9A                                     i1l383 002F  
                                   i1l608 0CC0                                     i1l392 0059  
                                   i1l617 0CC6                                     i1l385 003E  
                                   i1l386 0059                                     i1l378 0013  
                                   i1l635 0CD9                                     i1l387 004D  
                                   i1l629 0CEB                                     i1l902 0CB4  
                                   i1l638 0CDD                                     i1l576 0CCF  
                                   i1l672 0CD2                                     i1l579 0CCC  
                                   i1l916 0EC5                                     i1l883 0E56  
                                   i1l896 0EF2                                     _OSCEN 0891  
                         __end_of_all_LED 03C8                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 0DDE  
               ?_TMR0_SetInterruptHandler 0046                   ??_ADCC_IsConversionDone 0046  
                        __end_of_TMR0_ISR 0E08                          __end_of_TMR1_ISR 0EF3  
                        __end_of_TMR2_ISR 0E17                           __end_of_sw1_EXT 0707  
                         __end_of_cksum_w 0E46                      ??_increment_subfield 004D  
                         _DATAEE_ReadByte 0E17                                     _alarm 0038  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0D55  
                                   _cksum 07CA                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 0030  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0FE0  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0046                        ??_checkDebounceSW2 0046  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0E46  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 07AA                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 01E5  
                 __end_of_TMR2_Initialize 0F23               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0D05                  _TMR2_SetInterruptHandler 0D26  
                                  ??_main 0057                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 0048  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 0005  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0026  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0CD6               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1200 0706                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1203 0F36                                    _RC4PPS 0F24  
                                  i1l1204 0F3B                                    i1l1044 0CB5  
                                  i1l1038 0E16                                    i1l1311 06D8  
                                  i1l1315 0CE6                                    i1l1341 047B  
                                  _ODCONA 0F3A                                    i1l1194 06F5  
                                  i1l1602 0CBD                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l1197 0702                                    i1l1621 0CB3  
                                  _ODCONE 0F66                                    i1l1615 0E07  
                                  i1l4201 0422                                    i1l5001 0DF9  
                                  i1l4121 0DD1                                    i1l4203 0424  
                                  i1l5003 0DFB                                    i1l5011 0EE6  
                                  i1l4131 0CC1                                    i1l4123 0E27  
                                  i1l4115 0761                                    i1l4221 0473  
                                  i1l4205 0433                                    i1l4213 0459  
                                  i1l5005 0E02                                    i1l5013 0EED  
                                  i1l4125 0E2C                                    i1l4117 0767  
                                  i1l4301 0E70                                    i1l4133 0CDA  
                                  i1l4223 0478                                    i1l4215 0471  
                                  i1l4207 0450                                    i1l5007 0EDC  
                                  i1l5015 0E08                                    i1l4127 0E34  
                                  i1l4119 0778                                    i1l4303 0E77  
                                  i1l4311 0E88                                    u202_20 06AF  
                                  i1l4209 0455                                    u202_21 06AE  
                                  i1l5009 0EDE                                    i1l5017 0E0A  
                                  i1l4129 0CBE                                    i1l4241 0CF4  
                                  i1l5019 0E11                                    i1l4323 0E57  
                                  i1l4227 0CB7                                    i1l4307 0E79  
                                  i1l4315 0E8A                                    i1l4331 0EF3  
                                  i1l4251 0CFB                                    i1l4325 0E5F  
                                  i1l4309 0E81                                    i1l4317 0E92  
                                  i1l4333 0F09                                    i1l4245 0CF6  
                                  i1l4253 0CFE                                    i1l4501 0D3A  
                                  i1l4327 0E66                                    i1l4319 0E99  
                                  i1l4263 0CE8                                    i1l4239 0CF1  
                                  i1l4247 0CF9                                    i1l4503 0D3D  
                                  i1l4271 0D0D                                    i1l5311 000B  
                                  u203_20 06B8                                    u203_21 06B5  
                                  i1l4265 0CC4                                    i1l4281 0D4D  
                                  i1l4601 0676                                    i1l4257 0D00  
                                  i1l4521 073F                                    i1l4513 0734  
                                  i1l5321 0027                                    i1l5313 000F  
                                  i1l4371 06E9                                    i1l4363 06D9  
                                  i1l4267 0CD6                                    i1l4291 0CB9  
                                  i1l4603 0679                                    i1l4259 0D03  
                                  i1l4507 0D05                                    i1l4275 0D0F  
                                  i1l4515 0736                                    i1l4443 0CCD  
                                  i1l5331 0046                                    i1l5323 002B  
                                  i1l5315 0017                                    i1l4373 06EF  
                                  i1l4365 06E1                                    i1l4285 0CC7  
                                  i1l4613 0682                                    i1l4509 0D08  
                                  i1l4269 0D0A                                    i1l4277 0D12  
                                  i1l4517 073B                                    i1l5333 0051  
                                  i1l5325 0033                                    i1l5317 001B  
                                  i1l5309 0006                                    i1l4199 0EB0  
                                  i1l4375 06F9                                    i1l4367 06E7  
                                  i1l4631 0DCB                                    i1l4295 0002  
                                  i1l4607 067D                                    i1l4471 0D5B  
                                  i1l4527 0743                                    i1l4543 0488  
                                  i1l4535 047C                                    i1l5335 0055  
                                  i1l5327 0037                                    i1l5319 0023  
                                  i1l4377 06FE                                    i1l4369 06E8  
                                  i1l4289 0CCA                                    i1l4609 0680  
                                  i1l4465 0D55                                    i1l4561 04CE  
                                  i1l4553 0490                                    i1l5329 0042  
                                  i1l4379 0CBB                                    i1l4299 0E68  
                                  i1l4619 0686                                    i1l4467 0D58  
                                  i1l4475 0CEC                                    i1l4483 0D75  
                                  i1l4491 0D5D                                    i1l4555 04B5  
                                  i1l4547 048C                                    i1l4539 0484  
                                  i1l4571 0527                                    i1l4627 0CD0  
                                  u204_24 06BA                                    i1l4629 0DC4  
                                  i1l4469 0D5A                                    i1l4477 0CEE  
                                  i1l4485 0D77                                    i1l4493 0D5F  
                                  i1l4557 04C1                                    i1l4573 052B  
                                  i1l4479 0CEF                                    i1l4487 0D7C  
                                  i1l4495 0D63                                    i1l4559 04CC  
                                  i1l4583 053C                                    i1l4575 0535  
                                  u205_20 06C8                                    u213_20 070F  
                                  u205_21 06C7                                    i1l4593 0544  
                                  i1l4577 0538                                    i1l4569 051D  
                                  u213_21 070E                                    i1l4771 0E46  
                                  i1l4499 0D38                                    i1l6451 0757  
                                  i1l4587 0540                                    i1l4773 0E4B  
                                  i1l4781 0E52                                    i1l6453 069A  
                                  i1l4791 0F39                                    i1l4783 0E54  
                                  i1l4775 0E4C                                    i1l4871 06BA  
                                  i1l6447 0558                                    u206_20 06D3  
                                  u214_20 0716                                    i1l4785 0F23  
                                  i1l4777 0E4E                                    u206_21 06D2  
                                  i1l4881 06CD                                    i1l4873 06BE  
                                  i1l6449 04A5                                    u214_21 0715  
                                  i1l4787 0F2A                                    i1l4779 0E50  
                                  i1l4883 06D3                                    i1l4875 06C2  
                                  i1l4867 06A9                                    i1l4789 0F31  
                                  i1l4885 06D7                                    i1l4877 06C8  
                                  i1l4869 06AF                                    i1l4879 06CC  
                                  i1l4887 0CE2                                    i1l4991 0716  
                                  u215_20 0E02                                    u215_21 0E01  
                                  i1l4993 071C                                    i1l4985 0707  
                                  i1l4987 070A                                    i1l4995 0CDE  
                                  i1l4997 0D14                                    i1l4989 070F  
                                  i1l4999 0D16                                    u216_20 0EED  
                                  u216_21 0EEC                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u217_20 0E11                                    u217_21 0E10  
                                  u163_20 0767                                    u163_21 0766  
                                  u180_20 06F9                                    u164_20 0E2C  
                                  u260_20 0033                                    u180_21 06F8  
                                  u164_21 0E2B                                    u260_21 0032  
                                  u172_25 0EBF                                    u173_20 0433  
                                  u181_20 06FE                                    u261_20 0037  
                                  u253_20 000B                                    u173_21 0432  
                                  u181_21 06FD                                    u261_21 0036  
                                  u253_21 000A                                    u174_20 0450  
                                  u262_20 0042                                    u254_20 000F  
                                  u174_21 044F                                    u262_21 0041  
                                  u254_21 000E                                    u174_25 044C  
                                  u175_20 0471                                    u191_20 0483  
                                  u263_20 0046                                    u255_20 0017  
                                  u175_21 0470                                    u191_21 0482  
                                  u263_21 0045                                    u255_21 0016  
                                  u175_25 046D                                    u192_20 04CC  
                                  u264_20 0051                                    u256_20 001B  
                                  u192_21 04CB                                    u264_21 0050  
                                  u256_21 001A                                    _INTPPS 0E90  
                                  u193_20 0535                                    u265_20 0055  
                                  u257_20 0023                                    u193_21 0534  
                                  u265_21 0054                                    u257_21 0022  
                                  u178_20 06E1                                    u194_20 0DCB  
                                  u258_20 0027                                    u178_21 06E0  
                                  u194_21 0DCA                                    u258_21 0026  
                                  u179_20 06E7                                    u195_20 0E4B  
                                  u259_20 002B                                    u179_21 06E6  
                                  u195_21 0E4A                                    u259_21 002A  
                                  u196_20 0F2A                                    u196_21 0F29  
                                  _OSCFRQ 0893                                    _ISR_3s 0F23  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0043                ??_ADCC_GetConversionResult 0048  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0EC6  
                   _i2c1_driver_getRXData 0CC7                          __end_of_mod1_LED 0DAE  
                        __end_of_mod2_LED 0DA3                          __end_of_mod3_LED 0DB9  
                        __end_of_mod4_LED 0DC4      __end_of_TMR1_DefaultInterruptHandler 0CB5  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0CB4  
                            _CCPTMRS1bits 021F                                    ___bmul 07EA  
             __end_of_do_I2C_DO_NACK_STOP 0D0F       __end_of_i2c_setDataCompleteCallback 0DDE  
             _i2c_setDataCompleteCallback 0DD1     __end_of_i2c1_driver_clearBusCollision 0CD3  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 0CD0  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last5s 003B                                 ??_all_LED 004A  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0DEB  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 004A  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0E26  
                               ??_sw1_EXT 0077                                 ??_cksum_w 0050  
                         _ADCC_Initialize 0EC6               __end_of_i2c1_driver_sendACK 0CDA  
                          _PMD_Initialize 0D6D            __end_of_do_I2C_DO_ADDRESS_NACK 0760  
             __end_of_i2c1_driver_restart 0CC1                              ?_returnReset 0079  
                               ?_ADC_read 0048                    ??_ADCC_StartConversion 0046  
             __end_of_i2c1_driver_startRX 0CC7          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 0046  TMR2_SetInterruptHandler@InterruptHandler 0046  
TMR1_SetInterruptHandler@InterruptHandler 0046   INT_SetInterruptHandler@InterruptHandler 0046  
                 __end_of_TMR1_WriteTimer 0E57                          ??_config_routine 0054  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0F89  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0D00                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0046                   _rdBlkRegCompleteHandler 0EF3  
                          __pcstackCOMMON 0070                              __pidataBANK0 0D46  
                     ??_SYSTEM_Initialize 0048                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 07EA  
                        _DATAEE_WriteByte 0786                          ?_TMR2_Initialize 0070  
                            LED_bin@value 0046                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 0D75               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 004A               ADCC_StartConversion@channel 0046  
                          setCallBack@idx 0074                                   ??_cksum 0048  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0D0F  
               __end_of_SYSTEM_Initialize 0FA5                            _mssp1_clearIRQ 0CCD  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 0E9B                        read_ring@nreg_init 004B  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0E68  
                   _rd1RegCompleteHandler 0E79                    ?_i2c1_driver_getRXData 0070  
                         _clock_subfields 030A                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0E68              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0046          __end_of_TMR0_SetInterruptHandler 0D99  
                 __size_of_TMR0_StopTimer 0003                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 0EDC  
              __end_of_PWM6_LoadDutyValue 0F55                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0046  
                       __end_of_do_I2C_RX 0567                         __end_of_do_I2C_TX 04D0  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                    __size_of_recoverData 0098                                   _LED_bin 0F6F  
                        _handler_clock_ms 0CE2                                   _INT_ISR 0D14  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0EB0                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0CD0  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 0D46                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0CE7  
                    DATAEE_WriteByte@bAdd 004C                        _i2c1_driver_i2cISR 0032  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0707  
               ??_rdBlkRegCompleteHandler 007A                        _i2c1_driver_isNACK 0D4D  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 0048  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                       ??_mode_select_LED 004A                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 036D                       ?_i2c1_driver_isNACK 0070  
                                 __ptext1 01E5                                   __ptext2 0FA5  
                                 __ptext3 0E36                                   __ptext4 07CA  
                                 __ptext5 0637                                   __ptext6 07EA  
                                 __ptext7 0E17                                   __ptext8 05B0  
                                 __ptext9 0786                       __end_of_do_I2C_IDLE 0CF1  
                     __end_of_do_I2C_RCEN 0D3F                                   _sw1_EXT 06D9  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 0E36  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0D87  
                                 _last_ms 003D                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0D00                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 0024                               reset_recv@i 0050  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0676  
                ??_PIN_MANAGER_Initialize 0046                 ?_TMR1_SetInterruptHandler 0046  
                               _T2HLTbits 028F                                   _nreg_pt 0041  
                 _INT_SetInterruptHandler 0D1A                                   _lum_bin 0022  
             __size_of_increment_subfield 0040                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 004A                                ??_mod2_LED 004A  
                              ??_mod3_LED 004A                                ??_mod4_LED 004A  
                                 main@t5s 00C4                  _do_I2C_SEND_RESTART_READ 0CF1  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0D2D  
                              _hours_tens 002E                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 036D  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 0D32  
            __end_of_i2c1_driver_sendNACK 0CDE                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0D33                      __end_of_INT_CallBack 0DD1  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0CB7  
                              _reset_recv 0FA5                             push_ring@nreg 0050  
               _do_I2C_SEND_RESTART_WRITE 0CF6                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 05F7                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0CB9                  _TMR0_SetInterruptHandler 0D90  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0F0B                  __end_of_do_I2C_SEND_STOP 0D05  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 047C  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 07AA  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0F3C  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0CBB  
                             _do_I2C_IDLE 0CEC                               _do_I2C_RCEN 0D38  
    __end_of_TMR2_DefaultInterruptHandler 0CB6     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0CB5                            __end_of___bmul 0800  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0048  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0046  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0CDE  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                          ?_clock_subfields 0070  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003                   clock_subfields@subfield 0052  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0046  
                   __end_of_i2c_setBuffer 0E36              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0CBE                  __end_of_handler_clock_ms 0CE7  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0CCD  
                __size_of_TMR1_Initialize 001F                                  ??___bmul 0047  
                        ??_PMD_Initialize 0046                          _checkDebounceSW1 03C8  
                        _checkDebounceSW2 04D0                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0064  
              __end_of_EXT_INT_Initialize 0DF9             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0D14  
                              read_ring@i 0050                      _i2c1_driver_sendNACK 0CDA  
                       read_ring@absindex 0052                                  ?_LED_bin 0046  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0CB6                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0043                             __pcstackBANK1 00C2  
                      _PWM6_LoadDutyValue 0F3C                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 051D                                 _do_I2C_TX 047C  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0D65                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0046  
                        _i2c_restartWrite 0CB7                           _mode_select_LED 0FE0  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0676                     _TMR0_InterruptHandler 00C6  
                           ??_setCallBack 0073                                 __pnvBANK0 005C  
                               __pnvBANK1 00C6                     _rd2RegCompleteHandler 0E8A  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 07CA  
                               _main$2302 00C5                    _PIN_MANAGER_Initialize 0567  
                   _wr2RegCompleteHandler 0E57             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 008D          __end_of_TMR1_SetInterruptHandler 0D26  
                       read_ring@subindex 004D                            ??_do_I2C_RESET 0070  
                               __ptext100 0EB0                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 0034                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0D0A                      ??_PWM6_LoadDutyValue 0048  
                           ??_recoverData 0052              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0DC4                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0F55                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                                 _read_ring 0637  
                               _min_units 0028                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 0D3F                         ??_TMR0_Initialize 0048  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0D2C                                  _PIE0bits 0716  
                       _handler_clock_hms 06A9                                 _nreg_init 0042  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0020                ??_TMR0_SetInterruptHandler 0048  
                                _PIR0bits 070C                               _config_mode 0039  
                                _PIR3bits 070F                                 _ring_byte 00BD  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0DF9                                  _TMR1_ISR 0EDC  
                                _TMR2_ISR 0E08              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 0786  
                        push_ring@nreg_pt 0056                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 0048                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 05B0  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 0637      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0006  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0046  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 004E  
                     __end_of_recoverData 027D         __end_of_do_I2C_SEND_RESTART_WRITE 0CFB  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 1000  
                 __end_of_do_I2C_TX_EMPTY 06A9                                ?_read_ring 004A  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 004C  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 06D9                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0048                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 004F                        i1_checkDebounceSW1 0422  
                     _do_I2C_DO_NACK_STOP 0D0A                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0D87                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0055                   ??_OSCILLATOR_Initialize 0046  
                       ??_TMR0_StartTimer 0046                       _i2c1_driver_sendACK 0CD6  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0CBE  
                _TMR1_SetInterruptHandler 0D20                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0CC4              __end_of_do_I2C_SEND_ADR_READ 0D7E  
                              ?_push_ring 0050                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 005E                          __size_of_sw1_EXT 002E  
                        __size_of_cksum_w 0010                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 0051  
                            _mssp1_setIRQ 0CCA                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 027D                                  __ptext11 0FE0  
                                __ptext20 036D                                  __ptext12 030A  
                                __ptext21 0F3C                                  __ptext13 0DB9  
                              _T1GCONbits 020F                                  __ptext30 0DDE  
                                __ptext22 0CD3                                  __ptext14 0DAE  
                                __ptext31 0D6D                                  __ptext23 0F89  
                                __ptext15 0D99                                  __ptext40 0D3F  
                                __ptext32 0567                                  __ptext24 0F0B  
                                __ptext16 0DA3                                  __ptext41 0D7E  
                                __ptext33 0D87                                  __ptext25 0D26  
                                __ptext17 05F7                                  __ptext50 0D0F  
                                __ptext34 0DEB                                  __ptext26 0FC1  
                                __ptext18 04D0                                  __ptext51 0D0A  
                                __ptext43 0CDE                                  __ptext35 0D1A  
                                __ptext27 0D20                                  __ptext19 03C8  
                                __ptext60 0CEC                                  __ptext52 0D05  
                                __ptext44 0CD0                                  __ptext36 0EC6  
                                __ptext28 0E9B                                  __ptext61 0D55  
                                __ptext53 0D38                                  __ptext45 0707  
                                __ptext37 0F6F                                  __ptext29 0D90  
                                __ptext70 0EF3                                  __ptext62 0676  
                                __ptext54 0D5D                                  __ptext46 0CCD  
                                __ptext38 0F55                                  __ptext71 0E8A  
                                __ptext63 0CCA                                  __ptext55 0D75  
                                __ptext47 051D                                  __ptext39 0D65  
                                __ptext80 0E26                                  __ptext72 0E79  
                                __ptext64 0D4D                                  __ptext56 0D00  
                                __ptext48 047C                                  __ptext81 0CC1  
                                __ptext73 0E68                                  __ptext65 0CE7  
                                __ptext57 0CFB                                  __ptext49 0734  
                                __ptext90 0E46                                  __ptext82 0CBE  
                                __ptext74 0002                                  __ptext66 0CC7  
                                __ptext58 0CF6                                  __ptext91 0DF9  
                                __ptext83 0CD6                                  __ptext75 0CB9  
                                __ptext67 0CDA                                  __ptext59 0CF1  
                                __ptext92 0F23                                  __ptext84 0E08  
                                __ptext76 0CB7                                  __ptext68 0CB6  
                                __ptext93 0CB3                                  __ptext85 0CB5  
                                __ptext77 0E57                                  __ptext69 0CC4  
                                __ptext94 0CBB                                  __ptext86 0CE2  
                                __ptext78 0DD1                                  __ptext95 0D14  
                                __ptext87 0EDC                                  __ptext79 0760  
                                __ptext96 0DC4                                  __ptext88 0CB4  
                                __ptext97 0CB2                                  __ptext89 06A9  
                                __ptext98 06D9                                  __ptext99 0422  
                                _mod1_LED 0DA3                              _SSP1CON1bits 0190  
                                _mod2_LED 0D99                  __end_of_checkDebounceSW1 0422  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 051D  
                                _mod3_LED 0DAE                                  _mod4_LED 0DB9  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0D5D               DATAEE_WriteByte@GIEBitValue 004F  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 003C                         ??_PWM6_Initialize 0046  
                        _i2c1_driver_stop 0CC1                             __size_of_main 0167  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 002A             __end_of_i2c1_driver_getRXData 0CCA  
    __end_of_TMR0_DefaultInterruptHandler 0CB4     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0CB3                         ??_DATAEE_ReadByte 0048  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0760  
                            ??_reset_recv 0050                         ?_handler_clock_ms 0070  
                                _set_mode 003A                            _config_routine 027D  
            __end_of_ADCC_StartConversion 0D6D                                  int$flags 007E  
                      ??_handler_clock_ms 0070        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 0064  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0049          __end_of_do_I2C_SEND_RESTART_READ 0CF6  
                            ??_returnStop 007A                               _hours_units 002C  
                __end_of_i2c_restartWrite 0CB9                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 01E5                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 0062                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0FC1                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0DEB                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 004E                    _do_I2C_DO_ADDRESS_NACK 0734  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0030  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0CBB                    __end_of_config_routine 030A  
           ?_TMR0_DefaultInterruptHandler 0070                  __size_of_clock_subfields 0063  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0046  
                _ADCC_GetConversionResult 0D7E                             __pstringtext1 07AA  
                    ??_EXT_INT_Initialize 0048                            read_ring@index 004C  
                             ??_push_ring 0053                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0E9B  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 0046                             read_ring@nreg 004A  
          __end_of_PIN_MANAGER_Initialize 05B0                         ??_ADCC_Initialize 0046  
             __end_of_i2c_busCollisionISR 0CE2            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0E8A                        push_ring@nreg_init 0051  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0E79  
                   _TMR2_InterruptHandler 005C                     _do_I2C_SEND_ADR_WRITE 0D5D  
                      push_ring@ring_byte 0052                      _do_I2C_SEND_ADR_READ 0D75  
                         ?_config_routine 0070                           _TMR1_Initialize 0FC1  
