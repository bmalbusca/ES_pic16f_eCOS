

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 23:58:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,delta=2
   133                           	dabs	1,0x7E,2
   134  0000                     
   135                           ; Version 2.10
   136                           ; Generated 31/07/2019 GMT
   137                           ; 
   138                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18875 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001C                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  008C                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0110                     	;# 
   229  0110                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0114                     	;# 
   236  0115                     	;# 
   237  0116                     	;# 
   238  0116                     	;# 
   239  0117                     	;# 
   240  0119                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  011A                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011C                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011D                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011E                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011F                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  018F                     	;# 
   269  0190                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0196                     	;# 
   273  0197                     	;# 
   274  0198                     	;# 
   275  0199                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019C                     	;# 
   279  020C                     	;# 
   280  020C                     	;# 
   281  020D                     	;# 
   282  020E                     	;# 
   283  020F                     	;# 
   284  020F                     	;# 
   285  0210                     	;# 
   286  0210                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0214                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0216                     	;# 
   296  0216                     	;# 
   297  0217                     	;# 
   298  0217                     	;# 
   299  0218                     	;# 
   300  0218                     	;# 
   301  0219                     	;# 
   302  021A                     	;# 
   303  021B                     	;# 
   304  021B                     	;# 
   305  021C                     	;# 
   306  021C                     	;# 
   307  021D                     	;# 
   308  021D                     	;# 
   309  021E                     	;# 
   310  021F                     	;# 
   311  028C                     	;# 
   312  028C                     	;# 
   313  028D                     	;# 
   314  028D                     	;# 
   315  028E                     	;# 
   316  028F                     	;# 
   317  0290                     	;# 
   318  0290                     	;# 
   319  0291                     	;# 
   320  0292                     	;# 
   321  0292                     	;# 
   322  0293                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0296                     	;# 
   327  0296                     	;# 
   328  0297                     	;# 
   329  0298                     	;# 
   330  0298                     	;# 
   331  0299                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  030C                     	;# 
   339  030C                     	;# 
   340  030D                     	;# 
   341  030E                     	;# 
   342  030F                     	;# 
   343  0310                     	;# 
   344  0310                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0317                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031B                     	;# 
   358  031C                     	;# 
   359  031C                     	;# 
   360  031D                     	;# 
   361  031E                     	;# 
   362  031F                     	;# 
   363  038C                     	;# 
   364  038C                     	;# 
   365  038D                     	;# 
   366  038E                     	;# 
   367  0390                     	;# 
   368  0390                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  040C                     	;# 
   372  040D                     	;# 
   373  040E                     	;# 
   374  040F                     	;# 
   375  0410                     	;# 
   376  0411                     	;# 
   377  0416                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  0418                     	;# 
   381  0418                     	;# 
   382  0419                     	;# 
   383  041A                     	;# 
   384  041A                     	;# 
   385  041B                     	;# 
   386  041C                     	;# 
   387  041C                     	;# 
   388  041D                     	;# 
   389  041E                     	;# 
   390  041F                     	;# 
   391  048C                     	;# 
   392  048C                     	;# 
   393  048D                     	;# 
   394  048E                     	;# 
   395  048F                     	;# 
   396  048F                     	;# 
   397  0490                     	;# 
   398  0491                     	;# 
   399  0492                     	;# 
   400  0492                     	;# 
   401  0493                     	;# 
   402  0494                     	;# 
   403  0495                     	;# 
   404  0495                     	;# 
   405  0496                     	;# 
   406  0497                     	;# 
   407  0498                     	;# 
   408  0499                     	;# 
   409  049A                     	;# 
   410  049B                     	;# 
   411  049C                     	;# 
   412  049D                     	;# 
   413  050C                     	;# 
   414  050C                     	;# 
   415  050D                     	;# 
   416  050E                     	;# 
   417  050F                     	;# 
   418  050F                     	;# 
   419  0510                     	;# 
   420  0511                     	;# 
   421  0512                     	;# 
   422  0512                     	;# 
   423  0513                     	;# 
   424  0514                     	;# 
   425  0515                     	;# 
   426  0515                     	;# 
   427  0516                     	;# 
   428  0517                     	;# 
   429  0518                     	;# 
   430  0519                     	;# 
   431  051A                     	;# 
   432  051B                     	;# 
   433  051C                     	;# 
   434  051D                     	;# 
   435  058C                     	;# 
   436  058C                     	;# 
   437  058D                     	;# 
   438  058E                     	;# 
   439  058F                     	;# 
   440  058F                     	;# 
   441  0590                     	;# 
   442  0591                     	;# 
   443  0592                     	;# 
   444  0593                     	;# 
   445  060C                     	;# 
   446  060D                     	;# 
   447  060E                     	;# 
   448  060F                     	;# 
   449  0610                     	;# 
   450  0611                     	;# 
   451  0612                     	;# 
   452  0613                     	;# 
   453  0614                     	;# 
   454  0616                     	;# 
   455  0617                     	;# 
   456  0618                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061D                     	;# 
   462  061E                     	;# 
   463  068C                     	;# 
   464  068D                     	;# 
   465  068E                     	;# 
   466  068F                     	;# 
   467  0690                     	;# 
   468  0691                     	;# 
   469  0692                     	;# 
   470  0693                     	;# 
   471  0694                     	;# 
   472  070C                     	;# 
   473  070D                     	;# 
   474  070E                     	;# 
   475  070F                     	;# 
   476  0710                     	;# 
   477  0711                     	;# 
   478  0712                     	;# 
   479  0713                     	;# 
   480  0714                     	;# 
   481  0716                     	;# 
   482  0717                     	;# 
   483  0718                     	;# 
   484  0719                     	;# 
   485  071A                     	;# 
   486  071B                     	;# 
   487  071C                     	;# 
   488  071D                     	;# 
   489  071E                     	;# 
   490  0796                     	;# 
   491  0797                     	;# 
   492  0798                     	;# 
   493  0799                     	;# 
   494  079A                     	;# 
   495  079B                     	;# 
   496  080C                     	;# 
   497  080D                     	;# 
   498  080E                     	;# 
   499  080F                     	;# 
   500  0810                     	;# 
   501  0811                     	;# 
   502  0812                     	;# 
   503  0813                     	;# 
   504  0814                     	;# 
   505  081A                     	;# 
   506  081B                     	;# 
   507  081C                     	;# 
   508  081D                     	;# 
   509  081E                     	;# 
   510  081F                     	;# 
   511  088C                     	;# 
   512  088D                     	;# 
   513  088E                     	;# 
   514  088F                     	;# 
   515  0890                     	;# 
   516  0891                     	;# 
   517  0892                     	;# 
   518  0893                     	;# 
   519  0895                     	;# 
   520  0896                     	;# 
   521  0897                     	;# 
   522  0898                     	;# 
   523  0899                     	;# 
   524  089A                     	;# 
   525  089B                     	;# 
   526  090C                     	;# 
   527  090E                     	;# 
   528  090F                     	;# 
   529  091F                     	;# 
   530  091F                     	;# 
   531  098F                     	;# 
   532  098F                     	;# 
   533  0990                     	;# 
   534  0991                     	;# 
   535  0992                     	;# 
   536  0993                     	;# 
   537  0994                     	;# 
   538  0995                     	;# 
   539  0996                     	;# 
   540  0997                     	;# 
   541  0E0F                     	;# 
   542  0E10                     	;# 
   543  0E11                     	;# 
   544  0E12                     	;# 
   545  0E13                     	;# 
   546  0E14                     	;# 
   547  0E15                     	;# 
   548  0E16                     	;# 
   549  0E17                     	;# 
   550  0E18                     	;# 
   551  0E19                     	;# 
   552  0E1A                     	;# 
   553  0E1B                     	;# 
   554  0E1C                     	;# 
   555  0E1D                     	;# 
   556  0E1E                     	;# 
   557  0E1F                     	;# 
   558  0E20                     	;# 
   559  0E21                     	;# 
   560  0E22                     	;# 
   561  0E23                     	;# 
   562  0E24                     	;# 
   563  0E25                     	;# 
   564  0E26                     	;# 
   565  0E27                     	;# 
   566  0E28                     	;# 
   567  0E29                     	;# 
   568  0E2A                     	;# 
   569  0E2B                     	;# 
   570  0E2C                     	;# 
   571  0E2D                     	;# 
   572  0E2E                     	;# 
   573  0E2F                     	;# 
   574  0E30                     	;# 
   575  0E31                     	;# 
   576  0E32                     	;# 
   577  0E33                     	;# 
   578  0E34                     	;# 
   579  0E35                     	;# 
   580  0E36                     	;# 
   581  0E37                     	;# 
   582  0E8F                     	;# 
   583  0E90                     	;# 
   584  0E91                     	;# 
   585  0E92                     	;# 
   586  0E93                     	;# 
   587  0E94                     	;# 
   588  0E95                     	;# 
   589  0E96                     	;# 
   590  0E97                     	;# 
   591  0E9C                     	;# 
   592  0E9D                     	;# 
   593  0E9E                     	;# 
   594  0EA1                     	;# 
   595  0EA2                     	;# 
   596  0EA3                     	;# 
   597  0EA4                     	;# 
   598  0EA5                     	;# 
   599  0EA9                     	;# 
   600  0EAA                     	;# 
   601  0EAB                     	;# 
   602  0EAC                     	;# 
   603  0EB1                     	;# 
   604  0EB2                     	;# 
   605  0EB3                     	;# 
   606  0EB8                     	;# 
   607  0EB9                     	;# 
   608  0EBA                     	;# 
   609  0EBB                     	;# 
   610  0EBC                     	;# 
   611  0EBD                     	;# 
   612  0EBE                     	;# 
   613  0EC3                     	;# 
   614  0EC5                     	;# 
   615  0EC6                     	;# 
   616  0EC7                     	;# 
   617  0EC8                     	;# 
   618  0EC9                     	;# 
   619  0ECA                     	;# 
   620  0ECB                     	;# 
   621  0ECC                     	;# 
   622  0F10                     	;# 
   623  0F11                     	;# 
   624  0F12                     	;# 
   625  0F13                     	;# 
   626  0F14                     	;# 
   627  0F15                     	;# 
   628  0F16                     	;# 
   629  0F17                     	;# 
   630  0F18                     	;# 
   631  0F19                     	;# 
   632  0F1A                     	;# 
   633  0F1B                     	;# 
   634  0F1C                     	;# 
   635  0F1D                     	;# 
   636  0F1E                     	;# 
   637  0F1F                     	;# 
   638  0F20                     	;# 
   639  0F21                     	;# 
   640  0F22                     	;# 
   641  0F23                     	;# 
   642  0F24                     	;# 
   643  0F25                     	;# 
   644  0F26                     	;# 
   645  0F27                     	;# 
   646  0F28                     	;# 
   647  0F29                     	;# 
   648  0F2A                     	;# 
   649  0F2B                     	;# 
   650  0F2C                     	;# 
   651  0F2D                     	;# 
   652  0F2E                     	;# 
   653  0F2F                     	;# 
   654  0F30                     	;# 
   655  0F31                     	;# 
   656  0F32                     	;# 
   657  0F38                     	;# 
   658  0F39                     	;# 
   659  0F3A                     	;# 
   660  0F3B                     	;# 
   661  0F3C                     	;# 
   662  0F3D                     	;# 
   663  0F3E                     	;# 
   664  0F3F                     	;# 
   665  0F40                     	;# 
   666  0F41                     	;# 
   667  0F43                     	;# 
   668  0F44                     	;# 
   669  0F45                     	;# 
   670  0F46                     	;# 
   671  0F47                     	;# 
   672  0F48                     	;# 
   673  0F49                     	;# 
   674  0F4A                     	;# 
   675  0F4B                     	;# 
   676  0F4C                     	;# 
   677  0F4E                     	;# 
   678  0F4F                     	;# 
   679  0F50                     	;# 
   680  0F51                     	;# 
   681  0F52                     	;# 
   682  0F53                     	;# 
   683  0F54                     	;# 
   684  0F55                     	;# 
   685  0F56                     	;# 
   686  0F57                     	;# 
   687  0F59                     	;# 
   688  0F5A                     	;# 
   689  0F5B                     	;# 
   690  0F5C                     	;# 
   691  0F5D                     	;# 
   692  0F61                     	;# 
   693  0F62                     	;# 
   694  0F64                     	;# 
   695  0F65                     	;# 
   696  0F66                     	;# 
   697  0F67                     	;# 
   698  0F68                     	;# 
   699  0F69                     	;# 
   700  0F6A                     	;# 
   701  0F6B                     	;# 
   702  0F6C                     	;# 
   703  0F6D                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  000F                     	;# 
   731  0010                     	;# 
   732  0011                     	;# 
   733  0012                     	;# 
   734  0013                     	;# 
   735  0014                     	;# 
   736  0015                     	;# 
   737  0016                     	;# 
   738  0017                     	;# 
   739  0018                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001C                     	;# 
   743  001C                     	;# 
   744  001D                     	;# 
   745  001D                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008C                     	;# 
   750  008D                     	;# 
   751  008E                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009C                     	;# 
   767  009D                     	;# 
   768  009E                     	;# 
   769  010C                     	;# 
   770  010D                     	;# 
   771  010E                     	;# 
   772  010E                     	;# 
   773  010F                     	;# 
   774  0110                     	;# 
   775  0110                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0112                     	;# 
   779  0113                     	;# 
   780  0114                     	;# 
   781  0114                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0119                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011C                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011D                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011F                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  018F                     	;# 
   815  0190                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0196                     	;# 
   819  0197                     	;# 
   820  0198                     	;# 
   821  0199                     	;# 
   822  019A                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  020C                     	;# 
   826  020C                     	;# 
   827  020D                     	;# 
   828  020E                     	;# 
   829  020F                     	;# 
   830  020F                     	;# 
   831  0210                     	;# 
   832  0210                     	;# 
   833  0211                     	;# 
   834  0211                     	;# 
   835  0212                     	;# 
   836  0212                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0216                     	;# 
   842  0216                     	;# 
   843  0217                     	;# 
   844  0217                     	;# 
   845  0218                     	;# 
   846  0218                     	;# 
   847  0219                     	;# 
   848  021A                     	;# 
   849  021B                     	;# 
   850  021B                     	;# 
   851  021C                     	;# 
   852  021C                     	;# 
   853  021D                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  028C                     	;# 
   858  028C                     	;# 
   859  028D                     	;# 
   860  028D                     	;# 
   861  028E                     	;# 
   862  028F                     	;# 
   863  0290                     	;# 
   864  0290                     	;# 
   865  0291                     	;# 
   866  0292                     	;# 
   867  0292                     	;# 
   868  0293                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0296                     	;# 
   873  0296                     	;# 
   874  0297                     	;# 
   875  0298                     	;# 
   876  0298                     	;# 
   877  0299                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029C                     	;# 
   883  029D                     	;# 
   884  030C                     	;# 
   885  030C                     	;# 
   886  030D                     	;# 
   887  030E                     	;# 
   888  030F                     	;# 
   889  0310                     	;# 
   890  0310                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0314                     	;# 
   895  0314                     	;# 
   896  0315                     	;# 
   897  0316                     	;# 
   898  0317                     	;# 
   899  0318                     	;# 
   900  0318                     	;# 
   901  0319                     	;# 
   902  031A                     	;# 
   903  031B                     	;# 
   904  031C                     	;# 
   905  031C                     	;# 
   906  031D                     	;# 
   907  031E                     	;# 
   908  031F                     	;# 
   909  038C                     	;# 
   910  038C                     	;# 
   911  038D                     	;# 
   912  038E                     	;# 
   913  0390                     	;# 
   914  0390                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  040C                     	;# 
   918  040D                     	;# 
   919  040E                     	;# 
   920  040F                     	;# 
   921  0410                     	;# 
   922  0411                     	;# 
   923  0416                     	;# 
   924  0416                     	;# 
   925  0417                     	;# 
   926  0418                     	;# 
   927  0418                     	;# 
   928  0419                     	;# 
   929  041A                     	;# 
   930  041A                     	;# 
   931  041B                     	;# 
   932  041C                     	;# 
   933  041C                     	;# 
   934  041D                     	;# 
   935  041E                     	;# 
   936  041F                     	;# 
   937  048C                     	;# 
   938  048C                     	;# 
   939  048D                     	;# 
   940  048E                     	;# 
   941  048F                     	;# 
   942  048F                     	;# 
   943  0490                     	;# 
   944  0491                     	;# 
   945  0492                     	;# 
   946  0492                     	;# 
   947  0493                     	;# 
   948  0494                     	;# 
   949  0495                     	;# 
   950  0495                     	;# 
   951  0496                     	;# 
   952  0497                     	;# 
   953  0498                     	;# 
   954  0499                     	;# 
   955  049A                     	;# 
   956  049B                     	;# 
   957  049C                     	;# 
   958  049D                     	;# 
   959  050C                     	;# 
   960  050C                     	;# 
   961  050D                     	;# 
   962  050E                     	;# 
   963  050F                     	;# 
   964  050F                     	;# 
   965  0510                     	;# 
   966  0511                     	;# 
   967  0512                     	;# 
   968  0512                     	;# 
   969  0513                     	;# 
   970  0514                     	;# 
   971  0515                     	;# 
   972  0515                     	;# 
   973  0516                     	;# 
   974  0517                     	;# 
   975  0518                     	;# 
   976  0519                     	;# 
   977  051A                     	;# 
   978  051B                     	;# 
   979  051C                     	;# 
   980  051D                     	;# 
   981  058C                     	;# 
   982  058C                     	;# 
   983  058D                     	;# 
   984  058E                     	;# 
   985  058F                     	;# 
   986  058F                     	;# 
   987  0590                     	;# 
   988  0591                     	;# 
   989  0592                     	;# 
   990  0593                     	;# 
   991  060C                     	;# 
   992  060D                     	;# 
   993  060E                     	;# 
   994  060F                     	;# 
   995  0610                     	;# 
   996  0611                     	;# 
   997  0612                     	;# 
   998  0613                     	;# 
   999  0614                     	;# 
  1000  0616                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061D                     	;# 
  1008  061E                     	;# 
  1009  068C                     	;# 
  1010  068D                     	;# 
  1011  068E                     	;# 
  1012  068F                     	;# 
  1013  0690                     	;# 
  1014  0691                     	;# 
  1015  0692                     	;# 
  1016  0693                     	;# 
  1017  0694                     	;# 
  1018  070C                     	;# 
  1019  070D                     	;# 
  1020  070E                     	;# 
  1021  070F                     	;# 
  1022  0710                     	;# 
  1023  0711                     	;# 
  1024  0712                     	;# 
  1025  0713                     	;# 
  1026  0714                     	;# 
  1027  0716                     	;# 
  1028  0717                     	;# 
  1029  0718                     	;# 
  1030  0719                     	;# 
  1031  071A                     	;# 
  1032  071B                     	;# 
  1033  071C                     	;# 
  1034  071D                     	;# 
  1035  071E                     	;# 
  1036  0796                     	;# 
  1037  0797                     	;# 
  1038  0798                     	;# 
  1039  0799                     	;# 
  1040  079A                     	;# 
  1041  079B                     	;# 
  1042  080C                     	;# 
  1043  080D                     	;# 
  1044  080E                     	;# 
  1045  080F                     	;# 
  1046  0810                     	;# 
  1047  0811                     	;# 
  1048  0812                     	;# 
  1049  0813                     	;# 
  1050  0814                     	;# 
  1051  081A                     	;# 
  1052  081B                     	;# 
  1053  081C                     	;# 
  1054  081D                     	;# 
  1055  081E                     	;# 
  1056  081F                     	;# 
  1057  088C                     	;# 
  1058  088D                     	;# 
  1059  088E                     	;# 
  1060  088F                     	;# 
  1061  0890                     	;# 
  1062  0891                     	;# 
  1063  0892                     	;# 
  1064  0893                     	;# 
  1065  0895                     	;# 
  1066  0896                     	;# 
  1067  0897                     	;# 
  1068  0898                     	;# 
  1069  0899                     	;# 
  1070  089A                     	;# 
  1071  089B                     	;# 
  1072  090C                     	;# 
  1073  090E                     	;# 
  1074  090F                     	;# 
  1075  091F                     	;# 
  1076  091F                     	;# 
  1077  098F                     	;# 
  1078  098F                     	;# 
  1079  0990                     	;# 
  1080  0991                     	;# 
  1081  0992                     	;# 
  1082  0993                     	;# 
  1083  0994                     	;# 
  1084  0995                     	;# 
  1085  0996                     	;# 
  1086  0997                     	;# 
  1087  0E0F                     	;# 
  1088  0E10                     	;# 
  1089  0E11                     	;# 
  1090  0E12                     	;# 
  1091  0E13                     	;# 
  1092  0E14                     	;# 
  1093  0E15                     	;# 
  1094  0E16                     	;# 
  1095  0E17                     	;# 
  1096  0E18                     	;# 
  1097  0E19                     	;# 
  1098  0E1A                     	;# 
  1099  0E1B                     	;# 
  1100  0E1C                     	;# 
  1101  0E1D                     	;# 
  1102  0E1E                     	;# 
  1103  0E1F                     	;# 
  1104  0E20                     	;# 
  1105  0E21                     	;# 
  1106  0E22                     	;# 
  1107  0E23                     	;# 
  1108  0E24                     	;# 
  1109  0E25                     	;# 
  1110  0E26                     	;# 
  1111  0E27                     	;# 
  1112  0E28                     	;# 
  1113  0E29                     	;# 
  1114  0E2A                     	;# 
  1115  0E2B                     	;# 
  1116  0E2C                     	;# 
  1117  0E2D                     	;# 
  1118  0E2E                     	;# 
  1119  0E2F                     	;# 
  1120  0E30                     	;# 
  1121  0E31                     	;# 
  1122  0E32                     	;# 
  1123  0E33                     	;# 
  1124  0E34                     	;# 
  1125  0E35                     	;# 
  1126  0E36                     	;# 
  1127  0E37                     	;# 
  1128  0E8F                     	;# 
  1129  0E90                     	;# 
  1130  0E91                     	;# 
  1131  0E92                     	;# 
  1132  0E93                     	;# 
  1133  0E94                     	;# 
  1134  0E95                     	;# 
  1135  0E96                     	;# 
  1136  0E97                     	;# 
  1137  0E9C                     	;# 
  1138  0E9D                     	;# 
  1139  0E9E                     	;# 
  1140  0EA1                     	;# 
  1141  0EA2                     	;# 
  1142  0EA3                     	;# 
  1143  0EA4                     	;# 
  1144  0EA5                     	;# 
  1145  0EA9                     	;# 
  1146  0EAA                     	;# 
  1147  0EAB                     	;# 
  1148  0EAC                     	;# 
  1149  0EB1                     	;# 
  1150  0EB2                     	;# 
  1151  0EB3                     	;# 
  1152  0EB8                     	;# 
  1153  0EB9                     	;# 
  1154  0EBA                     	;# 
  1155  0EBB                     	;# 
  1156  0EBC                     	;# 
  1157  0EBD                     	;# 
  1158  0EBE                     	;# 
  1159  0EC3                     	;# 
  1160  0EC5                     	;# 
  1161  0EC6                     	;# 
  1162  0EC7                     	;# 
  1163  0EC8                     	;# 
  1164  0EC9                     	;# 
  1165  0ECA                     	;# 
  1166  0ECB                     	;# 
  1167  0ECC                     	;# 
  1168  0F10                     	;# 
  1169  0F11                     	;# 
  1170  0F12                     	;# 
  1171  0F13                     	;# 
  1172  0F14                     	;# 
  1173  0F15                     	;# 
  1174  0F16                     	;# 
  1175  0F17                     	;# 
  1176  0F18                     	;# 
  1177  0F19                     	;# 
  1178  0F1A                     	;# 
  1179  0F1B                     	;# 
  1180  0F1C                     	;# 
  1181  0F1D                     	;# 
  1182  0F1E                     	;# 
  1183  0F1F                     	;# 
  1184  0F20                     	;# 
  1185  0F21                     	;# 
  1186  0F22                     	;# 
  1187  0F23                     	;# 
  1188  0F24                     	;# 
  1189  0F25                     	;# 
  1190  0F26                     	;# 
  1191  0F27                     	;# 
  1192  0F28                     	;# 
  1193  0F29                     	;# 
  1194  0F2A                     	;# 
  1195  0F2B                     	;# 
  1196  0F2C                     	;# 
  1197  0F2D                     	;# 
  1198  0F2E                     	;# 
  1199  0F2F                     	;# 
  1200  0F30                     	;# 
  1201  0F31                     	;# 
  1202  0F32                     	;# 
  1203  0F38                     	;# 
  1204  0F39                     	;# 
  1205  0F3A                     	;# 
  1206  0F3B                     	;# 
  1207  0F3C                     	;# 
  1208  0F3D                     	;# 
  1209  0F3E                     	;# 
  1210  0F3F                     	;# 
  1211  0F40                     	;# 
  1212  0F41                     	;# 
  1213  0F43                     	;# 
  1214  0F44                     	;# 
  1215  0F45                     	;# 
  1216  0F46                     	;# 
  1217  0F47                     	;# 
  1218  0F48                     	;# 
  1219  0F49                     	;# 
  1220  0F4A                     	;# 
  1221  0F4B                     	;# 
  1222  0F4C                     	;# 
  1223  0F4E                     	;# 
  1224  0F4F                     	;# 
  1225  0F50                     	;# 
  1226  0F51                     	;# 
  1227  0F52                     	;# 
  1228  0F53                     	;# 
  1229  0F54                     	;# 
  1230  0F55                     	;# 
  1231  0F56                     	;# 
  1232  0F57                     	;# 
  1233  0F59                     	;# 
  1234  0F5A                     	;# 
  1235  0F5B                     	;# 
  1236  0F5C                     	;# 
  1237  0F5D                     	;# 
  1238  0F61                     	;# 
  1239  0F62                     	;# 
  1240  0F64                     	;# 
  1241  0F65                     	;# 
  1242  0F66                     	;# 
  1243  0F67                     	;# 
  1244  0F68                     	;# 
  1245  0F69                     	;# 
  1246  0F6A                     	;# 
  1247  0F6B                     	;# 
  1248  0F6C                     	;# 
  1249  0F6D                     	;# 
  1250  0FE4                     	;# 
  1251  0FE5                     	;# 
  1252  0FE6                     	;# 
  1253  0FE7                     	;# 
  1254  0FE8                     	;# 
  1255  0FE9                     	;# 
  1256  0FEA                     	;# 
  1257  0FEB                     	;# 
  1258  0FED                     	;# 
  1259  0FEE                     	;# 
  1260  0FEF                     	;# 
  1261  0000                     	;# 
  1262  0001                     	;# 
  1263  0002                     	;# 
  1264  0003                     	;# 
  1265  0004                     	;# 
  1266  0005                     	;# 
  1267  0006                     	;# 
  1268  0007                     	;# 
  1269  0008                     	;# 
  1270  0009                     	;# 
  1271  000A                     	;# 
  1272  000B                     	;# 
  1273  000C                     	;# 
  1274  000D                     	;# 
  1275  000E                     	;# 
  1276  000F                     	;# 
  1277  0010                     	;# 
  1278  0011                     	;# 
  1279  0012                     	;# 
  1280  0013                     	;# 
  1281  0014                     	;# 
  1282  0015                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001C                     	;# 
  1289  001C                     	;# 
  1290  001D                     	;# 
  1291  001D                     	;# 
  1292  001E                     	;# 
  1293  001F                     	;# 
  1294  008C                     	;# 
  1295  008C                     	;# 
  1296  008D                     	;# 
  1297  008E                     	;# 
  1298  008E                     	;# 
  1299  008F                     	;# 
  1300  0090                     	;# 
  1301  0090                     	;# 
  1302  0091                     	;# 
  1303  0093                     	;# 
  1304  0094                     	;# 
  1305  0095                     	;# 
  1306  0096                     	;# 
  1307  0097                     	;# 
  1308  0098                     	;# 
  1309  0099                     	;# 
  1310  009A                     	;# 
  1311  009B                     	;# 
  1312  009C                     	;# 
  1313  009D                     	;# 
  1314  009E                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010E                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0110                     	;# 
  1321  0110                     	;# 
  1322  0111                     	;# 
  1323  0112                     	;# 
  1324  0112                     	;# 
  1325  0113                     	;# 
  1326  0114                     	;# 
  1327  0114                     	;# 
  1328  0115                     	;# 
  1329  0116                     	;# 
  1330  0116                     	;# 
  1331  0117                     	;# 
  1332  0119                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  011A                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011B                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011C                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011D                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011E                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011F                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  018C                     	;# 
  1358  018D                     	;# 
  1359  018E                     	;# 
  1360  018F                     	;# 
  1361  0190                     	;# 
  1362  0191                     	;# 
  1363  0192                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0198                     	;# 
  1367  0199                     	;# 
  1368  019A                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  020C                     	;# 
  1372  020C                     	;# 
  1373  020D                     	;# 
  1374  020E                     	;# 
  1375  020F                     	;# 
  1376  020F                     	;# 
  1377  0210                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0214                     	;# 
  1385  0215                     	;# 
  1386  0215                     	;# 
  1387  0216                     	;# 
  1388  0216                     	;# 
  1389  0217                     	;# 
  1390  0217                     	;# 
  1391  0218                     	;# 
  1392  0218                     	;# 
  1393  0219                     	;# 
  1394  021A                     	;# 
  1395  021B                     	;# 
  1396  021B                     	;# 
  1397  021C                     	;# 
  1398  021C                     	;# 
  1399  021D                     	;# 
  1400  021D                     	;# 
  1401  021E                     	;# 
  1402  021F                     	;# 
  1403  028C                     	;# 
  1404  028C                     	;# 
  1405  028D                     	;# 
  1406  028D                     	;# 
  1407  028E                     	;# 
  1408  028F                     	;# 
  1409  0290                     	;# 
  1410  0290                     	;# 
  1411  0291                     	;# 
  1412  0292                     	;# 
  1413  0292                     	;# 
  1414  0293                     	;# 
  1415  0293                     	;# 
  1416  0294                     	;# 
  1417  0295                     	;# 
  1418  0296                     	;# 
  1419  0296                     	;# 
  1420  0297                     	;# 
  1421  0298                     	;# 
  1422  0298                     	;# 
  1423  0299                     	;# 
  1424  0299                     	;# 
  1425  029A                     	;# 
  1426  029B                     	;# 
  1427  029C                     	;# 
  1428  029C                     	;# 
  1429  029D                     	;# 
  1430  030C                     	;# 
  1431  030C                     	;# 
  1432  030D                     	;# 
  1433  030E                     	;# 
  1434  030F                     	;# 
  1435  0310                     	;# 
  1436  0310                     	;# 
  1437  0311                     	;# 
  1438  0312                     	;# 
  1439  0313                     	;# 
  1440  0314                     	;# 
  1441  0314                     	;# 
  1442  0315                     	;# 
  1443  0316                     	;# 
  1444  0317                     	;# 
  1445  0318                     	;# 
  1446  0318                     	;# 
  1447  0319                     	;# 
  1448  031A                     	;# 
  1449  031B                     	;# 
  1450  031C                     	;# 
  1451  031C                     	;# 
  1452  031D                     	;# 
  1453  031E                     	;# 
  1454  031F                     	;# 
  1455  038C                     	;# 
  1456  038C                     	;# 
  1457  038D                     	;# 
  1458  038E                     	;# 
  1459  0390                     	;# 
  1460  0390                     	;# 
  1461  0391                     	;# 
  1462  0392                     	;# 
  1463  040C                     	;# 
  1464  040D                     	;# 
  1465  040E                     	;# 
  1466  040F                     	;# 
  1467  0410                     	;# 
  1468  0411                     	;# 
  1469  0416                     	;# 
  1470  0416                     	;# 
  1471  0417                     	;# 
  1472  0418                     	;# 
  1473  0418                     	;# 
  1474  0419                     	;# 
  1475  041A                     	;# 
  1476  041A                     	;# 
  1477  041B                     	;# 
  1478  041C                     	;# 
  1479  041C                     	;# 
  1480  041D                     	;# 
  1481  041E                     	;# 
  1482  041F                     	;# 
  1483  048C                     	;# 
  1484  048C                     	;# 
  1485  048D                     	;# 
  1486  048E                     	;# 
  1487  048F                     	;# 
  1488  048F                     	;# 
  1489  0490                     	;# 
  1490  0491                     	;# 
  1491  0492                     	;# 
  1492  0492                     	;# 
  1493  0493                     	;# 
  1494  0494                     	;# 
  1495  0495                     	;# 
  1496  0495                     	;# 
  1497  0496                     	;# 
  1498  0497                     	;# 
  1499  0498                     	;# 
  1500  0499                     	;# 
  1501  049A                     	;# 
  1502  049B                     	;# 
  1503  049C                     	;# 
  1504  049D                     	;# 
  1505  050C                     	;# 
  1506  050C                     	;# 
  1507  050D                     	;# 
  1508  050E                     	;# 
  1509  050F                     	;# 
  1510  050F                     	;# 
  1511  0510                     	;# 
  1512  0511                     	;# 
  1513  0512                     	;# 
  1514  0512                     	;# 
  1515  0513                     	;# 
  1516  0514                     	;# 
  1517  0515                     	;# 
  1518  0515                     	;# 
  1519  0516                     	;# 
  1520  0517                     	;# 
  1521  0518                     	;# 
  1522  0519                     	;# 
  1523  051A                     	;# 
  1524  051B                     	;# 
  1525  051C                     	;# 
  1526  051D                     	;# 
  1527  058C                     	;# 
  1528  058C                     	;# 
  1529  058D                     	;# 
  1530  058E                     	;# 
  1531  058F                     	;# 
  1532  058F                     	;# 
  1533  0590                     	;# 
  1534  0591                     	;# 
  1535  0592                     	;# 
  1536  0593                     	;# 
  1537  060C                     	;# 
  1538  060D                     	;# 
  1539  060E                     	;# 
  1540  060F                     	;# 
  1541  0610                     	;# 
  1542  0611                     	;# 
  1543  0612                     	;# 
  1544  0613                     	;# 
  1545  0614                     	;# 
  1546  0616                     	;# 
  1547  0617                     	;# 
  1548  0618                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061B                     	;# 
  1552  061C                     	;# 
  1553  061D                     	;# 
  1554  061E                     	;# 
  1555  068C                     	;# 
  1556  068D                     	;# 
  1557  068E                     	;# 
  1558  068F                     	;# 
  1559  0690                     	;# 
  1560  0691                     	;# 
  1561  0692                     	;# 
  1562  0693                     	;# 
  1563  0694                     	;# 
  1564  070C                     	;# 
  1565  070D                     	;# 
  1566  070E                     	;# 
  1567  070F                     	;# 
  1568  0710                     	;# 
  1569  0711                     	;# 
  1570  0712                     	;# 
  1571  0713                     	;# 
  1572  0714                     	;# 
  1573  0716                     	;# 
  1574  0717                     	;# 
  1575  0718                     	;# 
  1576  0719                     	;# 
  1577  071A                     	;# 
  1578  071B                     	;# 
  1579  071C                     	;# 
  1580  071D                     	;# 
  1581  071E                     	;# 
  1582  0796                     	;# 
  1583  0797                     	;# 
  1584  0798                     	;# 
  1585  0799                     	;# 
  1586  079A                     	;# 
  1587  079B                     	;# 
  1588  080C                     	;# 
  1589  080D                     	;# 
  1590  080E                     	;# 
  1591  080F                     	;# 
  1592  0810                     	;# 
  1593  0811                     	;# 
  1594  0812                     	;# 
  1595  0813                     	;# 
  1596  0814                     	;# 
  1597  081A                     	;# 
  1598  081B                     	;# 
  1599  081C                     	;# 
  1600  081D                     	;# 
  1601  081E                     	;# 
  1602  081F                     	;# 
  1603  088C                     	;# 
  1604  088D                     	;# 
  1605  088E                     	;# 
  1606  088F                     	;# 
  1607  0890                     	;# 
  1608  0891                     	;# 
  1609  0892                     	;# 
  1610  0893                     	;# 
  1611  0895                     	;# 
  1612  0896                     	;# 
  1613  0897                     	;# 
  1614  0898                     	;# 
  1615  0899                     	;# 
  1616  089A                     	;# 
  1617  089B                     	;# 
  1618  090C                     	;# 
  1619  090E                     	;# 
  1620  090F                     	;# 
  1621  091F                     	;# 
  1622  091F                     	;# 
  1623  098F                     	;# 
  1624  098F                     	;# 
  1625  0990                     	;# 
  1626  0991                     	;# 
  1627  0992                     	;# 
  1628  0993                     	;# 
  1629  0994                     	;# 
  1630  0995                     	;# 
  1631  0996                     	;# 
  1632  0997                     	;# 
  1633  0E0F                     	;# 
  1634  0E10                     	;# 
  1635  0E11                     	;# 
  1636  0E12                     	;# 
  1637  0E13                     	;# 
  1638  0E14                     	;# 
  1639  0E15                     	;# 
  1640  0E16                     	;# 
  1641  0E17                     	;# 
  1642  0E18                     	;# 
  1643  0E19                     	;# 
  1644  0E1A                     	;# 
  1645  0E1B                     	;# 
  1646  0E1C                     	;# 
  1647  0E1D                     	;# 
  1648  0E1E                     	;# 
  1649  0E1F                     	;# 
  1650  0E20                     	;# 
  1651  0E21                     	;# 
  1652  0E22                     	;# 
  1653  0E23                     	;# 
  1654  0E24                     	;# 
  1655  0E25                     	;# 
  1656  0E26                     	;# 
  1657  0E27                     	;# 
  1658  0E28                     	;# 
  1659  0E29                     	;# 
  1660  0E2A                     	;# 
  1661  0E2B                     	;# 
  1662  0E2C                     	;# 
  1663  0E2D                     	;# 
  1664  0E2E                     	;# 
  1665  0E2F                     	;# 
  1666  0E30                     	;# 
  1667  0E31                     	;# 
  1668  0E32                     	;# 
  1669  0E33                     	;# 
  1670  0E34                     	;# 
  1671  0E35                     	;# 
  1672  0E36                     	;# 
  1673  0E37                     	;# 
  1674  0E8F                     	;# 
  1675  0E90                     	;# 
  1676  0E91                     	;# 
  1677  0E92                     	;# 
  1678  0E93                     	;# 
  1679  0E94                     	;# 
  1680  0E95                     	;# 
  1681  0E96                     	;# 
  1682  0E97                     	;# 
  1683  0E9C                     	;# 
  1684  0E9D                     	;# 
  1685  0E9E                     	;# 
  1686  0EA1                     	;# 
  1687  0EA2                     	;# 
  1688  0EA3                     	;# 
  1689  0EA4                     	;# 
  1690  0EA5                     	;# 
  1691  0EA9                     	;# 
  1692  0EAA                     	;# 
  1693  0EAB                     	;# 
  1694  0EAC                     	;# 
  1695  0EB1                     	;# 
  1696  0EB2                     	;# 
  1697  0EB3                     	;# 
  1698  0EB8                     	;# 
  1699  0EB9                     	;# 
  1700  0EBA                     	;# 
  1701  0EBB                     	;# 
  1702  0EBC                     	;# 
  1703  0EBD                     	;# 
  1704  0EBE                     	;# 
  1705  0EC3                     	;# 
  1706  0EC5                     	;# 
  1707  0EC6                     	;# 
  1708  0EC7                     	;# 
  1709  0EC8                     	;# 
  1710  0EC9                     	;# 
  1711  0ECA                     	;# 
  1712  0ECB                     	;# 
  1713  0ECC                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F38                     	;# 
  1750  0F39                     	;# 
  1751  0F3A                     	;# 
  1752  0F3B                     	;# 
  1753  0F3C                     	;# 
  1754  0F3D                     	;# 
  1755  0F3E                     	;# 
  1756  0F3F                     	;# 
  1757  0F40                     	;# 
  1758  0F41                     	;# 
  1759  0F43                     	;# 
  1760  0F44                     	;# 
  1761  0F45                     	;# 
  1762  0F46                     	;# 
  1763  0F47                     	;# 
  1764  0F48                     	;# 
  1765  0F49                     	;# 
  1766  0F4A                     	;# 
  1767  0F4B                     	;# 
  1768  0F4C                     	;# 
  1769  0F4E                     	;# 
  1770  0F4F                     	;# 
  1771  0F50                     	;# 
  1772  0F51                     	;# 
  1773  0F52                     	;# 
  1774  0F53                     	;# 
  1775  0F54                     	;# 
  1776  0F55                     	;# 
  1777  0F56                     	;# 
  1778  0F57                     	;# 
  1779  0F59                     	;# 
  1780  0F5A                     	;# 
  1781  0F5B                     	;# 
  1782  0F5C                     	;# 
  1783  0F5D                     	;# 
  1784  0F61                     	;# 
  1785  0F62                     	;# 
  1786  0F64                     	;# 
  1787  0F65                     	;# 
  1788  0F66                     	;# 
  1789  0F67                     	;# 
  1790  0F68                     	;# 
  1791  0F69                     	;# 
  1792  0F6A                     	;# 
  1793  0F6B                     	;# 
  1794  0F6C                     	;# 
  1795  0F6D                     	;# 
  1796  0FE4                     	;# 
  1797  0FE5                     	;# 
  1798  0FE6                     	;# 
  1799  0FE7                     	;# 
  1800  0FE8                     	;# 
  1801  0FE9                     	;# 
  1802  0FEA                     	;# 
  1803  0FEB                     	;# 
  1804  0FED                     	;# 
  1805  0FEE                     	;# 
  1806  0FEF                     	;# 
  1807  0000                     	;# 
  1808  0001                     	;# 
  1809  0002                     	;# 
  1810  0003                     	;# 
  1811  0004                     	;# 
  1812  0005                     	;# 
  1813  0006                     	;# 
  1814  0007                     	;# 
  1815  0008                     	;# 
  1816  0009                     	;# 
  1817  000A                     	;# 
  1818  000B                     	;# 
  1819  000C                     	;# 
  1820  000D                     	;# 
  1821  000E                     	;# 
  1822  000F                     	;# 
  1823  0010                     	;# 
  1824  0011                     	;# 
  1825  0012                     	;# 
  1826  0013                     	;# 
  1827  0014                     	;# 
  1828  0015                     	;# 
  1829  0016                     	;# 
  1830  0017                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001C                     	;# 
  1835  001C                     	;# 
  1836  001D                     	;# 
  1837  001D                     	;# 
  1838  001E                     	;# 
  1839  001F                     	;# 
  1840  008C                     	;# 
  1841  008C                     	;# 
  1842  008D                     	;# 
  1843  008E                     	;# 
  1844  008E                     	;# 
  1845  008F                     	;# 
  1846  0090                     	;# 
  1847  0090                     	;# 
  1848  0091                     	;# 
  1849  0093                     	;# 
  1850  0094                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0098                     	;# 
  1855  0099                     	;# 
  1856  009A                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  010E                     	;# 
  1865  010F                     	;# 
  1866  0110                     	;# 
  1867  0110                     	;# 
  1868  0111                     	;# 
  1869  0112                     	;# 
  1870  0112                     	;# 
  1871  0113                     	;# 
  1872  0114                     	;# 
  1873  0114                     	;# 
  1874  0115                     	;# 
  1875  0116                     	;# 
  1876  0116                     	;# 
  1877  0117                     	;# 
  1878  0119                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  011A                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011B                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011C                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011D                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011E                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011F                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  018F                     	;# 
  1907  0190                     	;# 
  1908  0191                     	;# 
  1909  0192                     	;# 
  1910  0196                     	;# 
  1911  0197                     	;# 
  1912  0198                     	;# 
  1913  0199                     	;# 
  1914  019A                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  020C                     	;# 
  1918  020C                     	;# 
  1919  020D                     	;# 
  1920  020E                     	;# 
  1921  020F                     	;# 
  1922  020F                     	;# 
  1923  0210                     	;# 
  1924  0210                     	;# 
  1925  0211                     	;# 
  1926  0211                     	;# 
  1927  0212                     	;# 
  1928  0212                     	;# 
  1929  0213                     	;# 
  1930  0214                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0218                     	;# 
  1938  0218                     	;# 
  1939  0219                     	;# 
  1940  021A                     	;# 
  1941  021B                     	;# 
  1942  021B                     	;# 
  1943  021C                     	;# 
  1944  021C                     	;# 
  1945  021D                     	;# 
  1946  021D                     	;# 
  1947  021E                     	;# 
  1948  021F                     	;# 
  1949  028C                     	;# 
  1950  028C                     	;# 
  1951  028D                     	;# 
  1952  028D                     	;# 
  1953  028E                     	;# 
  1954  028F                     	;# 
  1955  0290                     	;# 
  1956  0290                     	;# 
  1957  0291                     	;# 
  1958  0292                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0293                     	;# 
  1962  0294                     	;# 
  1963  0295                     	;# 
  1964  0296                     	;# 
  1965  0296                     	;# 
  1966  0297                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  0299                     	;# 
  1971  029A                     	;# 
  1972  029B                     	;# 
  1973  029C                     	;# 
  1974  029C                     	;# 
  1975  029D                     	;# 
  1976  030C                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  030F                     	;# 
  1981  0310                     	;# 
  1982  0310                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  0314                     	;# 
  1987  0314                     	;# 
  1988  0315                     	;# 
  1989  0316                     	;# 
  1990  0317                     	;# 
  1991  0318                     	;# 
  1992  0318                     	;# 
  1993  0319                     	;# 
  1994  031A                     	;# 
  1995  031B                     	;# 
  1996  031C                     	;# 
  1997  031C                     	;# 
  1998  031D                     	;# 
  1999  031E                     	;# 
  2000  031F                     	;# 
  2001  038C                     	;# 
  2002  038C                     	;# 
  2003  038D                     	;# 
  2004  038E                     	;# 
  2005  0390                     	;# 
  2006  0390                     	;# 
  2007  0391                     	;# 
  2008  0392                     	;# 
  2009  040C                     	;# 
  2010  040D                     	;# 
  2011  040E                     	;# 
  2012  040F                     	;# 
  2013  0410                     	;# 
  2014  0411                     	;# 
  2015  0416                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  0418                     	;# 
  2020  0419                     	;# 
  2021  041A                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041C                     	;# 
  2025  041C                     	;# 
  2026  041D                     	;# 
  2027  041E                     	;# 
  2028  041F                     	;# 
  2029  048C                     	;# 
  2030  048C                     	;# 
  2031  048D                     	;# 
  2032  048E                     	;# 
  2033  048F                     	;# 
  2034  048F                     	;# 
  2035  0490                     	;# 
  2036  0491                     	;# 
  2037  0492                     	;# 
  2038  0492                     	;# 
  2039  0493                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0497                     	;# 
  2045  0498                     	;# 
  2046  0499                     	;# 
  2047  049A                     	;# 
  2048  049B                     	;# 
  2049  049C                     	;# 
  2050  049D                     	;# 
  2051  050C                     	;# 
  2052  050C                     	;# 
  2053  050D                     	;# 
  2054  050E                     	;# 
  2055  050F                     	;# 
  2056  050F                     	;# 
  2057  0510                     	;# 
  2058  0511                     	;# 
  2059  0512                     	;# 
  2060  0512                     	;# 
  2061  0513                     	;# 
  2062  0514                     	;# 
  2063  0515                     	;# 
  2064  0515                     	;# 
  2065  0516                     	;# 
  2066  0517                     	;# 
  2067  0518                     	;# 
  2068  0519                     	;# 
  2069  051A                     	;# 
  2070  051B                     	;# 
  2071  051C                     	;# 
  2072  051D                     	;# 
  2073  058C                     	;# 
  2074  058C                     	;# 
  2075  058D                     	;# 
  2076  058E                     	;# 
  2077  058F                     	;# 
  2078  058F                     	;# 
  2079  0590                     	;# 
  2080  0591                     	;# 
  2081  0592                     	;# 
  2082  0593                     	;# 
  2083  060C                     	;# 
  2084  060D                     	;# 
  2085  060E                     	;# 
  2086  060F                     	;# 
  2087  0610                     	;# 
  2088  0611                     	;# 
  2089  0612                     	;# 
  2090  0613                     	;# 
  2091  0614                     	;# 
  2092  0616                     	;# 
  2093  0617                     	;# 
  2094  0618                     	;# 
  2095  0619                     	;# 
  2096  061A                     	;# 
  2097  061B                     	;# 
  2098  061C                     	;# 
  2099  061D                     	;# 
  2100  061E                     	;# 
  2101  068C                     	;# 
  2102  068D                     	;# 
  2103  068E                     	;# 
  2104  068F                     	;# 
  2105  0690                     	;# 
  2106  0691                     	;# 
  2107  0692                     	;# 
  2108  0693                     	;# 
  2109  0694                     	;# 
  2110  070C                     	;# 
  2111  070D                     	;# 
  2112  070E                     	;# 
  2113  070F                     	;# 
  2114  0710                     	;# 
  2115  0711                     	;# 
  2116  0712                     	;# 
  2117  0713                     	;# 
  2118  0714                     	;# 
  2119  0716                     	;# 
  2120  0717                     	;# 
  2121  0718                     	;# 
  2122  0719                     	;# 
  2123  071A                     	;# 
  2124  071B                     	;# 
  2125  071C                     	;# 
  2126  071D                     	;# 
  2127  071E                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  079B                     	;# 
  2134  080C                     	;# 
  2135  080D                     	;# 
  2136  080E                     	;# 
  2137  080F                     	;# 
  2138  0810                     	;# 
  2139  0811                     	;# 
  2140  0812                     	;# 
  2141  0813                     	;# 
  2142  0814                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081D                     	;# 
  2147  081E                     	;# 
  2148  081F                     	;# 
  2149  088C                     	;# 
  2150  088D                     	;# 
  2151  088E                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0895                     	;# 
  2158  0896                     	;# 
  2159  0897                     	;# 
  2160  0898                     	;# 
  2161  0899                     	;# 
  2162  089A                     	;# 
  2163  089B                     	;# 
  2164  090C                     	;# 
  2165  090E                     	;# 
  2166  090F                     	;# 
  2167  091F                     	;# 
  2168  091F                     	;# 
  2169  098F                     	;# 
  2170  098F                     	;# 
  2171  0990                     	;# 
  2172  0991                     	;# 
  2173  0992                     	;# 
  2174  0993                     	;# 
  2175  0994                     	;# 
  2176  0995                     	;# 
  2177  0996                     	;# 
  2178  0997                     	;# 
  2179  0E0F                     	;# 
  2180  0E10                     	;# 
  2181  0E11                     	;# 
  2182  0E12                     	;# 
  2183  0E13                     	;# 
  2184  0E14                     	;# 
  2185  0E15                     	;# 
  2186  0E16                     	;# 
  2187  0E17                     	;# 
  2188  0E18                     	;# 
  2189  0E19                     	;# 
  2190  0E1A                     	;# 
  2191  0E1B                     	;# 
  2192  0E1C                     	;# 
  2193  0E1D                     	;# 
  2194  0E1E                     	;# 
  2195  0E1F                     	;# 
  2196  0E20                     	;# 
  2197  0E21                     	;# 
  2198  0E22                     	;# 
  2199  0E23                     	;# 
  2200  0E24                     	;# 
  2201  0E25                     	;# 
  2202  0E26                     	;# 
  2203  0E27                     	;# 
  2204  0E28                     	;# 
  2205  0E29                     	;# 
  2206  0E2A                     	;# 
  2207  0E2B                     	;# 
  2208  0E2C                     	;# 
  2209  0E2D                     	;# 
  2210  0E2E                     	;# 
  2211  0E2F                     	;# 
  2212  0E30                     	;# 
  2213  0E31                     	;# 
  2214  0E32                     	;# 
  2215  0E33                     	;# 
  2216  0E34                     	;# 
  2217  0E35                     	;# 
  2218  0E36                     	;# 
  2219  0E37                     	;# 
  2220  0E8F                     	;# 
  2221  0E90                     	;# 
  2222  0E91                     	;# 
  2223  0E92                     	;# 
  2224  0E93                     	;# 
  2225  0E94                     	;# 
  2226  0E95                     	;# 
  2227  0E96                     	;# 
  2228  0E97                     	;# 
  2229  0E9C                     	;# 
  2230  0E9D                     	;# 
  2231  0E9E                     	;# 
  2232  0EA1                     	;# 
  2233  0EA2                     	;# 
  2234  0EA3                     	;# 
  2235  0EA4                     	;# 
  2236  0EA5                     	;# 
  2237  0EA9                     	;# 
  2238  0EAA                     	;# 
  2239  0EAB                     	;# 
  2240  0EAC                     	;# 
  2241  0EB1                     	;# 
  2242  0EB2                     	;# 
  2243  0EB3                     	;# 
  2244  0EB8                     	;# 
  2245  0EB9                     	;# 
  2246  0EBA                     	;# 
  2247  0EBB                     	;# 
  2248  0EBC                     	;# 
  2249  0EBD                     	;# 
  2250  0EBE                     	;# 
  2251  0EC3                     	;# 
  2252  0EC5                     	;# 
  2253  0EC6                     	;# 
  2254  0EC7                     	;# 
  2255  0EC8                     	;# 
  2256  0EC9                     	;# 
  2257  0ECA                     	;# 
  2258  0ECB                     	;# 
  2259  0ECC                     	;# 
  2260  0F10                     	;# 
  2261  0F11                     	;# 
  2262  0F12                     	;# 
  2263  0F13                     	;# 
  2264  0F14                     	;# 
  2265  0F15                     	;# 
  2266  0F16                     	;# 
  2267  0F17                     	;# 
  2268  0F18                     	;# 
  2269  0F19                     	;# 
  2270  0F1A                     	;# 
  2271  0F1B                     	;# 
  2272  0F1C                     	;# 
  2273  0F1D                     	;# 
  2274  0F1E                     	;# 
  2275  0F1F                     	;# 
  2276  0F20                     	;# 
  2277  0F21                     	;# 
  2278  0F22                     	;# 
  2279  0F23                     	;# 
  2280  0F24                     	;# 
  2281  0F25                     	;# 
  2282  0F26                     	;# 
  2283  0F27                     	;# 
  2284  0F28                     	;# 
  2285  0F29                     	;# 
  2286  0F2A                     	;# 
  2287  0F2B                     	;# 
  2288  0F2C                     	;# 
  2289  0F2D                     	;# 
  2290  0F2E                     	;# 
  2291  0F2F                     	;# 
  2292  0F30                     	;# 
  2293  0F31                     	;# 
  2294  0F32                     	;# 
  2295  0F38                     	;# 
  2296  0F39                     	;# 
  2297  0F3A                     	;# 
  2298  0F3B                     	;# 
  2299  0F3C                     	;# 
  2300  0F3D                     	;# 
  2301  0F3E                     	;# 
  2302  0F3F                     	;# 
  2303  0F40                     	;# 
  2304  0F41                     	;# 
  2305  0F43                     	;# 
  2306  0F44                     	;# 
  2307  0F45                     	;# 
  2308  0F46                     	;# 
  2309  0F47                     	;# 
  2310  0F48                     	;# 
  2311  0F49                     	;# 
  2312  0F4A                     	;# 
  2313  0F4B                     	;# 
  2314  0F4C                     	;# 
  2315  0F4E                     	;# 
  2316  0F4F                     	;# 
  2317  0F50                     	;# 
  2318  0F51                     	;# 
  2319  0F52                     	;# 
  2320  0F53                     	;# 
  2321  0F54                     	;# 
  2322  0F55                     	;# 
  2323  0F56                     	;# 
  2324  0F57                     	;# 
  2325  0F59                     	;# 
  2326  0F5A                     	;# 
  2327  0F5B                     	;# 
  2328  0F5C                     	;# 
  2329  0F5D                     	;# 
  2330  0F61                     	;# 
  2331  0F62                     	;# 
  2332  0F64                     	;# 
  2333  0F65                     	;# 
  2334  0F66                     	;# 
  2335  0F67                     	;# 
  2336  0F68                     	;# 
  2337  0F69                     	;# 
  2338  0F6A                     	;# 
  2339  0F6B                     	;# 
  2340  0F6C                     	;# 
  2341  0F6D                     	;# 
  2342  0FE4                     	;# 
  2343  0FE5                     	;# 
  2344  0FE6                     	;# 
  2345  0FE7                     	;# 
  2346  0FE8                     	;# 
  2347  0FE9                     	;# 
  2348  0FEA                     	;# 
  2349  0FEB                     	;# 
  2350  0FED                     	;# 
  2351  0FEE                     	;# 
  2352  0FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  000F                     	;# 
  2369  0010                     	;# 
  2370  0011                     	;# 
  2371  0012                     	;# 
  2372  0013                     	;# 
  2373  0014                     	;# 
  2374  0015                     	;# 
  2375  0016                     	;# 
  2376  0017                     	;# 
  2377  0018                     	;# 
  2378  0019                     	;# 
  2379  001A                     	;# 
  2380  001C                     	;# 
  2381  001C                     	;# 
  2382  001D                     	;# 
  2383  001D                     	;# 
  2384  001E                     	;# 
  2385  001F                     	;# 
  2386  008C                     	;# 
  2387  008C                     	;# 
  2388  008D                     	;# 
  2389  008E                     	;# 
  2390  008E                     	;# 
  2391  008F                     	;# 
  2392  0090                     	;# 
  2393  0090                     	;# 
  2394  0091                     	;# 
  2395  0093                     	;# 
  2396  0094                     	;# 
  2397  0095                     	;# 
  2398  0096                     	;# 
  2399  0097                     	;# 
  2400  0098                     	;# 
  2401  0099                     	;# 
  2402  009A                     	;# 
  2403  009B                     	;# 
  2404  009C                     	;# 
  2405  009D                     	;# 
  2406  009E                     	;# 
  2407  010C                     	;# 
  2408  010D                     	;# 
  2409  010E                     	;# 
  2410  010E                     	;# 
  2411  010F                     	;# 
  2412  0110                     	;# 
  2413  0110                     	;# 
  2414  0111                     	;# 
  2415  0112                     	;# 
  2416  0112                     	;# 
  2417  0113                     	;# 
  2418  0114                     	;# 
  2419  0114                     	;# 
  2420  0115                     	;# 
  2421  0116                     	;# 
  2422  0116                     	;# 
  2423  0117                     	;# 
  2424  0119                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  011A                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011B                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011C                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011D                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011E                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011F                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  018C                     	;# 
  2450  018D                     	;# 
  2451  018E                     	;# 
  2452  018F                     	;# 
  2453  0190                     	;# 
  2454  0191                     	;# 
  2455  0192                     	;# 
  2456  0196                     	;# 
  2457  0197                     	;# 
  2458  0198                     	;# 
  2459  0199                     	;# 
  2460  019A                     	;# 
  2461  019B                     	;# 
  2462  019C                     	;# 
  2463  020C                     	;# 
  2464  020C                     	;# 
  2465  020D                     	;# 
  2466  020E                     	;# 
  2467  020F                     	;# 
  2468  020F                     	;# 
  2469  0210                     	;# 
  2470  0210                     	;# 
  2471  0211                     	;# 
  2472  0211                     	;# 
  2473  0212                     	;# 
  2474  0212                     	;# 
  2475  0213                     	;# 
  2476  0214                     	;# 
  2477  0215                     	;# 
  2478  0215                     	;# 
  2479  0216                     	;# 
  2480  0216                     	;# 
  2481  0217                     	;# 
  2482  0217                     	;# 
  2483  0218                     	;# 
  2484  0218                     	;# 
  2485  0219                     	;# 
  2486  021A                     	;# 
  2487  021B                     	;# 
  2488  021B                     	;# 
  2489  021C                     	;# 
  2490  021C                     	;# 
  2491  021D                     	;# 
  2492  021D                     	;# 
  2493  021E                     	;# 
  2494  021F                     	;# 
  2495  028C                     	;# 
  2496  028C                     	;# 
  2497  028D                     	;# 
  2498  028D                     	;# 
  2499  028E                     	;# 
  2500  028F                     	;# 
  2501  0290                     	;# 
  2502  0290                     	;# 
  2503  0291                     	;# 
  2504  0292                     	;# 
  2505  0292                     	;# 
  2506  0293                     	;# 
  2507  0293                     	;# 
  2508  0294                     	;# 
  2509  0295                     	;# 
  2510  0296                     	;# 
  2511  0296                     	;# 
  2512  0297                     	;# 
  2513  0298                     	;# 
  2514  0298                     	;# 
  2515  0299                     	;# 
  2516  0299                     	;# 
  2517  029A                     	;# 
  2518  029B                     	;# 
  2519  029C                     	;# 
  2520  029C                     	;# 
  2521  029D                     	;# 
  2522  030C                     	;# 
  2523  030C                     	;# 
  2524  030D                     	;# 
  2525  030E                     	;# 
  2526  030F                     	;# 
  2527  0310                     	;# 
  2528  0310                     	;# 
  2529  0311                     	;# 
  2530  0312                     	;# 
  2531  0313                     	;# 
  2532  0314                     	;# 
  2533  0314                     	;# 
  2534  0315                     	;# 
  2535  0316                     	;# 
  2536  0317                     	;# 
  2537  0318                     	;# 
  2538  0318                     	;# 
  2539  0319                     	;# 
  2540  031A                     	;# 
  2541  031B                     	;# 
  2542  031C                     	;# 
  2543  031C                     	;# 
  2544  031D                     	;# 
  2545  031E                     	;# 
  2546  031F                     	;# 
  2547  038C                     	;# 
  2548  038C                     	;# 
  2549  038D                     	;# 
  2550  038E                     	;# 
  2551  0390                     	;# 
  2552  0390                     	;# 
  2553  0391                     	;# 
  2554  0392                     	;# 
  2555  040C                     	;# 
  2556  040D                     	;# 
  2557  040E                     	;# 
  2558  040F                     	;# 
  2559  0410                     	;# 
  2560  0411                     	;# 
  2561  0416                     	;# 
  2562  0416                     	;# 
  2563  0417                     	;# 
  2564  0418                     	;# 
  2565  0418                     	;# 
  2566  0419                     	;# 
  2567  041A                     	;# 
  2568  041A                     	;# 
  2569  041B                     	;# 
  2570  041C                     	;# 
  2571  041C                     	;# 
  2572  041D                     	;# 
  2573  041E                     	;# 
  2574  041F                     	;# 
  2575  048C                     	;# 
  2576  048C                     	;# 
  2577  048D                     	;# 
  2578  048E                     	;# 
  2579  048F                     	;# 
  2580  048F                     	;# 
  2581  0490                     	;# 
  2582  0491                     	;# 
  2583  0492                     	;# 
  2584  0492                     	;# 
  2585  0493                     	;# 
  2586  0494                     	;# 
  2587  0495                     	;# 
  2588  0495                     	;# 
  2589  0496                     	;# 
  2590  0497                     	;# 
  2591  0498                     	;# 
  2592  0499                     	;# 
  2593  049A                     	;# 
  2594  049B                     	;# 
  2595  049C                     	;# 
  2596  049D                     	;# 
  2597  050C                     	;# 
  2598  050C                     	;# 
  2599  050D                     	;# 
  2600  050E                     	;# 
  2601  050F                     	;# 
  2602  050F                     	;# 
  2603  0510                     	;# 
  2604  0511                     	;# 
  2605  0512                     	;# 
  2606  0512                     	;# 
  2607  0513                     	;# 
  2608  0514                     	;# 
  2609  0515                     	;# 
  2610  0515                     	;# 
  2611  0516                     	;# 
  2612  0517                     	;# 
  2613  0518                     	;# 
  2614  0519                     	;# 
  2615  051A                     	;# 
  2616  051B                     	;# 
  2617  051C                     	;# 
  2618  051D                     	;# 
  2619  058C                     	;# 
  2620  058C                     	;# 
  2621  058D                     	;# 
  2622  058E                     	;# 
  2623  058F                     	;# 
  2624  058F                     	;# 
  2625  0590                     	;# 
  2626  0591                     	;# 
  2627  0592                     	;# 
  2628  0593                     	;# 
  2629  060C                     	;# 
  2630  060D                     	;# 
  2631  060E                     	;# 
  2632  060F                     	;# 
  2633  0610                     	;# 
  2634  0611                     	;# 
  2635  0612                     	;# 
  2636  0613                     	;# 
  2637  0614                     	;# 
  2638  0616                     	;# 
  2639  0617                     	;# 
  2640  0618                     	;# 
  2641  0619                     	;# 
  2642  061A                     	;# 
  2643  061B                     	;# 
  2644  061C                     	;# 
  2645  061D                     	;# 
  2646  061E                     	;# 
  2647  068C                     	;# 
  2648  068D                     	;# 
  2649  068E                     	;# 
  2650  068F                     	;# 
  2651  0690                     	;# 
  2652  0691                     	;# 
  2653  0692                     	;# 
  2654  0693                     	;# 
  2655  0694                     	;# 
  2656  070C                     	;# 
  2657  070D                     	;# 
  2658  070E                     	;# 
  2659  070F                     	;# 
  2660  0710                     	;# 
  2661  0711                     	;# 
  2662  0712                     	;# 
  2663  0713                     	;# 
  2664  0714                     	;# 
  2665  0716                     	;# 
  2666  0717                     	;# 
  2667  0718                     	;# 
  2668  0719                     	;# 
  2669  071A                     	;# 
  2670  071B                     	;# 
  2671  071C                     	;# 
  2672  071D                     	;# 
  2673  071E                     	;# 
  2674  0796                     	;# 
  2675  0797                     	;# 
  2676  0798                     	;# 
  2677  0799                     	;# 
  2678  079A                     	;# 
  2679  079B                     	;# 
  2680  080C                     	;# 
  2681  080D                     	;# 
  2682  080E                     	;# 
  2683  080F                     	;# 
  2684  0810                     	;# 
  2685  0811                     	;# 
  2686  0812                     	;# 
  2687  0813                     	;# 
  2688  0814                     	;# 
  2689  081A                     	;# 
  2690  081B                     	;# 
  2691  081C                     	;# 
  2692  081D                     	;# 
  2693  081E                     	;# 
  2694  081F                     	;# 
  2695  088C                     	;# 
  2696  088D                     	;# 
  2697  088E                     	;# 
  2698  088F                     	;# 
  2699  0890                     	;# 
  2700  0891                     	;# 
  2701  0892                     	;# 
  2702  0893                     	;# 
  2703  0895                     	;# 
  2704  0896                     	;# 
  2705  0897                     	;# 
  2706  0898                     	;# 
  2707  0899                     	;# 
  2708  089A                     	;# 
  2709  089B                     	;# 
  2710  090C                     	;# 
  2711  090E                     	;# 
  2712  090F                     	;# 
  2713  091F                     	;# 
  2714  091F                     	;# 
  2715  098F                     	;# 
  2716  098F                     	;# 
  2717  0990                     	;# 
  2718  0991                     	;# 
  2719  0992                     	;# 
  2720  0993                     	;# 
  2721  0994                     	;# 
  2722  0995                     	;# 
  2723  0996                     	;# 
  2724  0997                     	;# 
  2725  0E0F                     	;# 
  2726  0E10                     	;# 
  2727  0E11                     	;# 
  2728  0E12                     	;# 
  2729  0E13                     	;# 
  2730  0E14                     	;# 
  2731  0E15                     	;# 
  2732  0E16                     	;# 
  2733  0E17                     	;# 
  2734  0E18                     	;# 
  2735  0E19                     	;# 
  2736  0E1A                     	;# 
  2737  0E1B                     	;# 
  2738  0E1C                     	;# 
  2739  0E1D                     	;# 
  2740  0E1E                     	;# 
  2741  0E1F                     	;# 
  2742  0E20                     	;# 
  2743  0E21                     	;# 
  2744  0E22                     	;# 
  2745  0E23                     	;# 
  2746  0E24                     	;# 
  2747  0E25                     	;# 
  2748  0E26                     	;# 
  2749  0E27                     	;# 
  2750  0E28                     	;# 
  2751  0E29                     	;# 
  2752  0E2A                     	;# 
  2753  0E2B                     	;# 
  2754  0E2C                     	;# 
  2755  0E2D                     	;# 
  2756  0E2E                     	;# 
  2757  0E2F                     	;# 
  2758  0E30                     	;# 
  2759  0E31                     	;# 
  2760  0E32                     	;# 
  2761  0E33                     	;# 
  2762  0E34                     	;# 
  2763  0E35                     	;# 
  2764  0E36                     	;# 
  2765  0E37                     	;# 
  2766  0E8F                     	;# 
  2767  0E90                     	;# 
  2768  0E91                     	;# 
  2769  0E92                     	;# 
  2770  0E93                     	;# 
  2771  0E94                     	;# 
  2772  0E95                     	;# 
  2773  0E96                     	;# 
  2774  0E97                     	;# 
  2775  0E9C                     	;# 
  2776  0E9D                     	;# 
  2777  0E9E                     	;# 
  2778  0EA1                     	;# 
  2779  0EA2                     	;# 
  2780  0EA3                     	;# 
  2781  0EA4                     	;# 
  2782  0EA5                     	;# 
  2783  0EA9                     	;# 
  2784  0EAA                     	;# 
  2785  0EAB                     	;# 
  2786  0EAC                     	;# 
  2787  0EB1                     	;# 
  2788  0EB2                     	;# 
  2789  0EB3                     	;# 
  2790  0EB8                     	;# 
  2791  0EB9                     	;# 
  2792  0EBA                     	;# 
  2793  0EBB                     	;# 
  2794  0EBC                     	;# 
  2795  0EBD                     	;# 
  2796  0EBE                     	;# 
  2797  0EC3                     	;# 
  2798  0EC5                     	;# 
  2799  0EC6                     	;# 
  2800  0EC7                     	;# 
  2801  0EC8                     	;# 
  2802  0EC9                     	;# 
  2803  0ECA                     	;# 
  2804  0ECB                     	;# 
  2805  0ECC                     	;# 
  2806  0F10                     	;# 
  2807  0F11                     	;# 
  2808  0F12                     	;# 
  2809  0F13                     	;# 
  2810  0F14                     	;# 
  2811  0F15                     	;# 
  2812  0F16                     	;# 
  2813  0F17                     	;# 
  2814  0F18                     	;# 
  2815  0F19                     	;# 
  2816  0F1A                     	;# 
  2817  0F1B                     	;# 
  2818  0F1C                     	;# 
  2819  0F1D                     	;# 
  2820  0F1E                     	;# 
  2821  0F1F                     	;# 
  2822  0F20                     	;# 
  2823  0F21                     	;# 
  2824  0F22                     	;# 
  2825  0F23                     	;# 
  2826  0F24                     	;# 
  2827  0F25                     	;# 
  2828  0F26                     	;# 
  2829  0F27                     	;# 
  2830  0F28                     	;# 
  2831  0F29                     	;# 
  2832  0F2A                     	;# 
  2833  0F2B                     	;# 
  2834  0F2C                     	;# 
  2835  0F2D                     	;# 
  2836  0F2E                     	;# 
  2837  0F2F                     	;# 
  2838  0F30                     	;# 
  2839  0F31                     	;# 
  2840  0F32                     	;# 
  2841  0F38                     	;# 
  2842  0F39                     	;# 
  2843  0F3A                     	;# 
  2844  0F3B                     	;# 
  2845  0F3C                     	;# 
  2846  0F3D                     	;# 
  2847  0F3E                     	;# 
  2848  0F3F                     	;# 
  2849  0F40                     	;# 
  2850  0F41                     	;# 
  2851  0F43                     	;# 
  2852  0F44                     	;# 
  2853  0F45                     	;# 
  2854  0F46                     	;# 
  2855  0F47                     	;# 
  2856  0F48                     	;# 
  2857  0F49                     	;# 
  2858  0F4A                     	;# 
  2859  0F4B                     	;# 
  2860  0F4C                     	;# 
  2861  0F4E                     	;# 
  2862  0F4F                     	;# 
  2863  0F50                     	;# 
  2864  0F51                     	;# 
  2865  0F52                     	;# 
  2866  0F53                     	;# 
  2867  0F54                     	;# 
  2868  0F55                     	;# 
  2869  0F56                     	;# 
  2870  0F57                     	;# 
  2871  0F59                     	;# 
  2872  0F5A                     	;# 
  2873  0F5B                     	;# 
  2874  0F5C                     	;# 
  2875  0F5D                     	;# 
  2876  0F61                     	;# 
  2877  0F62                     	;# 
  2878  0F64                     	;# 
  2879  0F65                     	;# 
  2880  0F66                     	;# 
  2881  0F67                     	;# 
  2882  0F68                     	;# 
  2883  0F69                     	;# 
  2884  0F6A                     	;# 
  2885  0F6B                     	;# 
  2886  0F6C                     	;# 
  2887  0F6D                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE9                     	;# 
  2894  0FEA                     	;# 
  2895  0FEB                     	;# 
  2896  0FED                     	;# 
  2897  0FEE                     	;# 
  2898  0FEF                     	;# 
  2899  0000                     	;# 
  2900  0001                     	;# 
  2901  0002                     	;# 
  2902  0003                     	;# 
  2903  0004                     	;# 
  2904  0005                     	;# 
  2905  0006                     	;# 
  2906  0007                     	;# 
  2907  0008                     	;# 
  2908  0009                     	;# 
  2909  000A                     	;# 
  2910  000B                     	;# 
  2911  000C                     	;# 
  2912  000D                     	;# 
  2913  000E                     	;# 
  2914  000F                     	;# 
  2915  0010                     	;# 
  2916  0011                     	;# 
  2917  0012                     	;# 
  2918  0013                     	;# 
  2919  0014                     	;# 
  2920  0015                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  001A                     	;# 
  2926  001C                     	;# 
  2927  001C                     	;# 
  2928  001D                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008C                     	;# 
  2934  008D                     	;# 
  2935  008E                     	;# 
  2936  008E                     	;# 
  2937  008F                     	;# 
  2938  0090                     	;# 
  2939  0090                     	;# 
  2940  0091                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0095                     	;# 
  2944  0096                     	;# 
  2945  0097                     	;# 
  2946  0098                     	;# 
  2947  0099                     	;# 
  2948  009A                     	;# 
  2949  009B                     	;# 
  2950  009C                     	;# 
  2951  009D                     	;# 
  2952  009E                     	;# 
  2953  010C                     	;# 
  2954  010D                     	;# 
  2955  010E                     	;# 
  2956  010E                     	;# 
  2957  010F                     	;# 
  2958  0110                     	;# 
  2959  0110                     	;# 
  2960  0111                     	;# 
  2961  0112                     	;# 
  2962  0112                     	;# 
  2963  0113                     	;# 
  2964  0114                     	;# 
  2965  0114                     	;# 
  2966  0115                     	;# 
  2967  0116                     	;# 
  2968  0116                     	;# 
  2969  0117                     	;# 
  2970  0119                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  011A                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011C                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011D                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011E                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  018C                     	;# 
  2996  018D                     	;# 
  2997  018E                     	;# 
  2998  018F                     	;# 
  2999  0190                     	;# 
  3000  0191                     	;# 
  3001  0192                     	;# 
  3002  0196                     	;# 
  3003  0197                     	;# 
  3004  0198                     	;# 
  3005  0199                     	;# 
  3006  019A                     	;# 
  3007  019B                     	;# 
  3008  019C                     	;# 
  3009  020C                     	;# 
  3010  020C                     	;# 
  3011  020D                     	;# 
  3012  020E                     	;# 
  3013  020F                     	;# 
  3014  020F                     	;# 
  3015  0210                     	;# 
  3016  0210                     	;# 
  3017  0211                     	;# 
  3018  0211                     	;# 
  3019  0212                     	;# 
  3020  0212                     	;# 
  3021  0213                     	;# 
  3022  0214                     	;# 
  3023  0215                     	;# 
  3024  0215                     	;# 
  3025  0216                     	;# 
  3026  0216                     	;# 
  3027  0217                     	;# 
  3028  0217                     	;# 
  3029  0218                     	;# 
  3030  0218                     	;# 
  3031  0219                     	;# 
  3032  021A                     	;# 
  3033  021B                     	;# 
  3034  021B                     	;# 
  3035  021C                     	;# 
  3036  021C                     	;# 
  3037  021D                     	;# 
  3038  021D                     	;# 
  3039  021E                     	;# 
  3040  021F                     	;# 
  3041  028C                     	;# 
  3042  028C                     	;# 
  3043  028D                     	;# 
  3044  028D                     	;# 
  3045  028E                     	;# 
  3046  028F                     	;# 
  3047  0290                     	;# 
  3048  0290                     	;# 
  3049  0291                     	;# 
  3050  0292                     	;# 
  3051  0292                     	;# 
  3052  0293                     	;# 
  3053  0293                     	;# 
  3054  0294                     	;# 
  3055  0295                     	;# 
  3056  0296                     	;# 
  3057  0296                     	;# 
  3058  0297                     	;# 
  3059  0298                     	;# 
  3060  0298                     	;# 
  3061  0299                     	;# 
  3062  0299                     	;# 
  3063  029A                     	;# 
  3064  029B                     	;# 
  3065  029C                     	;# 
  3066  029C                     	;# 
  3067  029D                     	;# 
  3068  030C                     	;# 
  3069  030C                     	;# 
  3070  030D                     	;# 
  3071  030E                     	;# 
  3072  030F                     	;# 
  3073  0310                     	;# 
  3074  0310                     	;# 
  3075  0311                     	;# 
  3076  0312                     	;# 
  3077  0313                     	;# 
  3078  0314                     	;# 
  3079  0314                     	;# 
  3080  0315                     	;# 
  3081  0316                     	;# 
  3082  0317                     	;# 
  3083  0318                     	;# 
  3084  0318                     	;# 
  3085  0319                     	;# 
  3086  031A                     	;# 
  3087  031B                     	;# 
  3088  031C                     	;# 
  3089  031C                     	;# 
  3090  031D                     	;# 
  3091  031E                     	;# 
  3092  031F                     	;# 
  3093  038C                     	;# 
  3094  038C                     	;# 
  3095  038D                     	;# 
  3096  038E                     	;# 
  3097  0390                     	;# 
  3098  0390                     	;# 
  3099  0391                     	;# 
  3100  0392                     	;# 
  3101  040C                     	;# 
  3102  040D                     	;# 
  3103  040E                     	;# 
  3104  040F                     	;# 
  3105  0410                     	;# 
  3106  0411                     	;# 
  3107  0416                     	;# 
  3108  0416                     	;# 
  3109  0417                     	;# 
  3110  0418                     	;# 
  3111  0418                     	;# 
  3112  0419                     	;# 
  3113  041A                     	;# 
  3114  041A                     	;# 
  3115  041B                     	;# 
  3116  041C                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  048C                     	;# 
  3122  048C                     	;# 
  3123  048D                     	;# 
  3124  048E                     	;# 
  3125  048F                     	;# 
  3126  048F                     	;# 
  3127  0490                     	;# 
  3128  0491                     	;# 
  3129  0492                     	;# 
  3130  0492                     	;# 
  3131  0493                     	;# 
  3132  0494                     	;# 
  3133  0495                     	;# 
  3134  0495                     	;# 
  3135  0496                     	;# 
  3136  0497                     	;# 
  3137  0498                     	;# 
  3138  0499                     	;# 
  3139  049A                     	;# 
  3140  049B                     	;# 
  3141  049C                     	;# 
  3142  049D                     	;# 
  3143  050C                     	;# 
  3144  050C                     	;# 
  3145  050D                     	;# 
  3146  050E                     	;# 
  3147  050F                     	;# 
  3148  050F                     	;# 
  3149  0510                     	;# 
  3150  0511                     	;# 
  3151  0512                     	;# 
  3152  0512                     	;# 
  3153  0513                     	;# 
  3154  0514                     	;# 
  3155  0515                     	;# 
  3156  0515                     	;# 
  3157  0516                     	;# 
  3158  0517                     	;# 
  3159  0518                     	;# 
  3160  0519                     	;# 
  3161  051A                     	;# 
  3162  051B                     	;# 
  3163  051C                     	;# 
  3164  051D                     	;# 
  3165  058C                     	;# 
  3166  058C                     	;# 
  3167  058D                     	;# 
  3168  058E                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0591                     	;# 
  3173  0592                     	;# 
  3174  0593                     	;# 
  3175  060C                     	;# 
  3176  060D                     	;# 
  3177  060E                     	;# 
  3178  060F                     	;# 
  3179  0610                     	;# 
  3180  0611                     	;# 
  3181  0612                     	;# 
  3182  0613                     	;# 
  3183  0614                     	;# 
  3184  0616                     	;# 
  3185  0617                     	;# 
  3186  0618                     	;# 
  3187  0619                     	;# 
  3188  061A                     	;# 
  3189  061B                     	;# 
  3190  061C                     	;# 
  3191  061D                     	;# 
  3192  061E                     	;# 
  3193  068C                     	;# 
  3194  068D                     	;# 
  3195  068E                     	;# 
  3196  068F                     	;# 
  3197  0690                     	;# 
  3198  0691                     	;# 
  3199  0692                     	;# 
  3200  0693                     	;# 
  3201  0694                     	;# 
  3202  070C                     	;# 
  3203  070D                     	;# 
  3204  070E                     	;# 
  3205  070F                     	;# 
  3206  0710                     	;# 
  3207  0711                     	;# 
  3208  0712                     	;# 
  3209  0713                     	;# 
  3210  0714                     	;# 
  3211  0716                     	;# 
  3212  0717                     	;# 
  3213  0718                     	;# 
  3214  0719                     	;# 
  3215  071A                     	;# 
  3216  071B                     	;# 
  3217  071C                     	;# 
  3218  071D                     	;# 
  3219  071E                     	;# 
  3220  0796                     	;# 
  3221  0797                     	;# 
  3222  0798                     	;# 
  3223  0799                     	;# 
  3224  079A                     	;# 
  3225  079B                     	;# 
  3226  080C                     	;# 
  3227  080D                     	;# 
  3228  080E                     	;# 
  3229  080F                     	;# 
  3230  0810                     	;# 
  3231  0811                     	;# 
  3232  0812                     	;# 
  3233  0813                     	;# 
  3234  0814                     	;# 
  3235  081A                     	;# 
  3236  081B                     	;# 
  3237  081C                     	;# 
  3238  081D                     	;# 
  3239  081E                     	;# 
  3240  081F                     	;# 
  3241  088C                     	;# 
  3242  088D                     	;# 
  3243  088E                     	;# 
  3244  088F                     	;# 
  3245  0890                     	;# 
  3246  0891                     	;# 
  3247  0892                     	;# 
  3248  0893                     	;# 
  3249  0895                     	;# 
  3250  0896                     	;# 
  3251  0897                     	;# 
  3252  0898                     	;# 
  3253  0899                     	;# 
  3254  089A                     	;# 
  3255  089B                     	;# 
  3256  090C                     	;# 
  3257  090E                     	;# 
  3258  090F                     	;# 
  3259  091F                     	;# 
  3260  091F                     	;# 
  3261  098F                     	;# 
  3262  098F                     	;# 
  3263  0990                     	;# 
  3264  0991                     	;# 
  3265  0992                     	;# 
  3266  0993                     	;# 
  3267  0994                     	;# 
  3268  0995                     	;# 
  3269  0996                     	;# 
  3270  0997                     	;# 
  3271  0E0F                     	;# 
  3272  0E10                     	;# 
  3273  0E11                     	;# 
  3274  0E12                     	;# 
  3275  0E13                     	;# 
  3276  0E14                     	;# 
  3277  0E15                     	;# 
  3278  0E16                     	;# 
  3279  0E17                     	;# 
  3280  0E18                     	;# 
  3281  0E19                     	;# 
  3282  0E1A                     	;# 
  3283  0E1B                     	;# 
  3284  0E1C                     	;# 
  3285  0E1D                     	;# 
  3286  0E1E                     	;# 
  3287  0E1F                     	;# 
  3288  0E20                     	;# 
  3289  0E21                     	;# 
  3290  0E22                     	;# 
  3291  0E23                     	;# 
  3292  0E24                     	;# 
  3293  0E25                     	;# 
  3294  0E26                     	;# 
  3295  0E27                     	;# 
  3296  0E28                     	;# 
  3297  0E29                     	;# 
  3298  0E2A                     	;# 
  3299  0E2B                     	;# 
  3300  0E2C                     	;# 
  3301  0E2D                     	;# 
  3302  0E2E                     	;# 
  3303  0E2F                     	;# 
  3304  0E30                     	;# 
  3305  0E31                     	;# 
  3306  0E32                     	;# 
  3307  0E33                     	;# 
  3308  0E34                     	;# 
  3309  0E35                     	;# 
  3310  0E36                     	;# 
  3311  0E37                     	;# 
  3312  0E8F                     	;# 
  3313  0E90                     	;# 
  3314  0E91                     	;# 
  3315  0E92                     	;# 
  3316  0E93                     	;# 
  3317  0E94                     	;# 
  3318  0E95                     	;# 
  3319  0E96                     	;# 
  3320  0E97                     	;# 
  3321  0E9C                     	;# 
  3322  0E9D                     	;# 
  3323  0E9E                     	;# 
  3324  0EA1                     	;# 
  3325  0EA2                     	;# 
  3326  0EA3                     	;# 
  3327  0EA4                     	;# 
  3328  0EA5                     	;# 
  3329  0EA9                     	;# 
  3330  0EAA                     	;# 
  3331  0EAB                     	;# 
  3332  0EAC                     	;# 
  3333  0EB1                     	;# 
  3334  0EB2                     	;# 
  3335  0EB3                     	;# 
  3336  0EB8                     	;# 
  3337  0EB9                     	;# 
  3338  0EBA                     	;# 
  3339  0EBB                     	;# 
  3340  0EBC                     	;# 
  3341  0EBD                     	;# 
  3342  0EBE                     	;# 
  3343  0EC3                     	;# 
  3344  0EC5                     	;# 
  3345  0EC6                     	;# 
  3346  0EC7                     	;# 
  3347  0EC8                     	;# 
  3348  0EC9                     	;# 
  3349  0ECA                     	;# 
  3350  0ECB                     	;# 
  3351  0ECC                     	;# 
  3352  0F10                     	;# 
  3353  0F11                     	;# 
  3354  0F12                     	;# 
  3355  0F13                     	;# 
  3356  0F14                     	;# 
  3357  0F15                     	;# 
  3358  0F16                     	;# 
  3359  0F17                     	;# 
  3360  0F18                     	;# 
  3361  0F19                     	;# 
  3362  0F1A                     	;# 
  3363  0F1B                     	;# 
  3364  0F1C                     	;# 
  3365  0F1D                     	;# 
  3366  0F1E                     	;# 
  3367  0F1F                     	;# 
  3368  0F20                     	;# 
  3369  0F21                     	;# 
  3370  0F22                     	;# 
  3371  0F23                     	;# 
  3372  0F24                     	;# 
  3373  0F25                     	;# 
  3374  0F26                     	;# 
  3375  0F27                     	;# 
  3376  0F28                     	;# 
  3377  0F29                     	;# 
  3378  0F2A                     	;# 
  3379  0F2B                     	;# 
  3380  0F2C                     	;# 
  3381  0F2D                     	;# 
  3382  0F2E                     	;# 
  3383  0F2F                     	;# 
  3384  0F30                     	;# 
  3385  0F31                     	;# 
  3386  0F32                     	;# 
  3387  0F38                     	;# 
  3388  0F39                     	;# 
  3389  0F3A                     	;# 
  3390  0F3B                     	;# 
  3391  0F3C                     	;# 
  3392  0F3D                     	;# 
  3393  0F3E                     	;# 
  3394  0F3F                     	;# 
  3395  0F40                     	;# 
  3396  0F41                     	;# 
  3397  0F43                     	;# 
  3398  0F44                     	;# 
  3399  0F45                     	;# 
  3400  0F46                     	;# 
  3401  0F47                     	;# 
  3402  0F48                     	;# 
  3403  0F49                     	;# 
  3404  0F4A                     	;# 
  3405  0F4B                     	;# 
  3406  0F4C                     	;# 
  3407  0F4E                     	;# 
  3408  0F4F                     	;# 
  3409  0F50                     	;# 
  3410  0F51                     	;# 
  3411  0F52                     	;# 
  3412  0F53                     	;# 
  3413  0F54                     	;# 
  3414  0F55                     	;# 
  3415  0F56                     	;# 
  3416  0F57                     	;# 
  3417  0F59                     	;# 
  3418  0F5A                     	;# 
  3419  0F5B                     	;# 
  3420  0F5C                     	;# 
  3421  0F5D                     	;# 
  3422  0F61                     	;# 
  3423  0F62                     	;# 
  3424  0F64                     	;# 
  3425  0F65                     	;# 
  3426  0F66                     	;# 
  3427  0F67                     	;# 
  3428  0F68                     	;# 
  3429  0F69                     	;# 
  3430  0F6A                     	;# 
  3431  0F6B                     	;# 
  3432  0F6C                     	;# 
  3433  0F6D                     	;# 
  3434  0FE4                     	;# 
  3435  0FE5                     	;# 
  3436  0FE6                     	;# 
  3437  0FE7                     	;# 
  3438  0FE8                     	;# 
  3439  0FE9                     	;# 
  3440  0FEA                     	;# 
  3441  0FEB                     	;# 
  3442  0FED                     	;# 
  3443  0FEE                     	;# 
  3444  0FEF                     	;# 
  3445  0000                     	;# 
  3446  0001                     	;# 
  3447  0002                     	;# 
  3448  0003                     	;# 
  3449  0004                     	;# 
  3450  0005                     	;# 
  3451  0006                     	;# 
  3452  0007                     	;# 
  3453  0008                     	;# 
  3454  0009                     	;# 
  3455  000A                     	;# 
  3456  000B                     	;# 
  3457  000C                     	;# 
  3458  000D                     	;# 
  3459  000E                     	;# 
  3460  000F                     	;# 
  3461  0010                     	;# 
  3462  0011                     	;# 
  3463  0012                     	;# 
  3464  0013                     	;# 
  3465  0014                     	;# 
  3466  0015                     	;# 
  3467  0016                     	;# 
  3468  0017                     	;# 
  3469  0018                     	;# 
  3470  0019                     	;# 
  3471  001A                     	;# 
  3472  001C                     	;# 
  3473  001C                     	;# 
  3474  001D                     	;# 
  3475  001D                     	;# 
  3476  001E                     	;# 
  3477  001F                     	;# 
  3478  008C                     	;# 
  3479  008C                     	;# 
  3480  008D                     	;# 
  3481  008E                     	;# 
  3482  008E                     	;# 
  3483  008F                     	;# 
  3484  0090                     	;# 
  3485  0090                     	;# 
  3486  0091                     	;# 
  3487  0093                     	;# 
  3488  0094                     	;# 
  3489  0095                     	;# 
  3490  0096                     	;# 
  3491  0097                     	;# 
  3492  0098                     	;# 
  3493  0099                     	;# 
  3494  009A                     	;# 
  3495  009B                     	;# 
  3496  009C                     	;# 
  3497  009D                     	;# 
  3498  009E                     	;# 
  3499  010C                     	;# 
  3500  010D                     	;# 
  3501  010E                     	;# 
  3502  010E                     	;# 
  3503  010F                     	;# 
  3504  0110                     	;# 
  3505  0110                     	;# 
  3506  0111                     	;# 
  3507  0112                     	;# 
  3508  0112                     	;# 
  3509  0113                     	;# 
  3510  0114                     	;# 
  3511  0114                     	;# 
  3512  0115                     	;# 
  3513  0116                     	;# 
  3514  0116                     	;# 
  3515  0117                     	;# 
  3516  0119                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  011A                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011B                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011C                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011D                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011E                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011F                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  018C                     	;# 
  3542  018D                     	;# 
  3543  018E                     	;# 
  3544  018F                     	;# 
  3545  0190                     	;# 
  3546  0191                     	;# 
  3547  0192                     	;# 
  3548  0196                     	;# 
  3549  0197                     	;# 
  3550  0198                     	;# 
  3551  0199                     	;# 
  3552  019A                     	;# 
  3553  019B                     	;# 
  3554  019C                     	;# 
  3555  020C                     	;# 
  3556  020C                     	;# 
  3557  020D                     	;# 
  3558  020E                     	;# 
  3559  020F                     	;# 
  3560  020F                     	;# 
  3561  0210                     	;# 
  3562  0210                     	;# 
  3563  0211                     	;# 
  3564  0211                     	;# 
  3565  0212                     	;# 
  3566  0212                     	;# 
  3567  0213                     	;# 
  3568  0214                     	;# 
  3569  0215                     	;# 
  3570  0215                     	;# 
  3571  0216                     	;# 
  3572  0216                     	;# 
  3573  0217                     	;# 
  3574  0217                     	;# 
  3575  0218                     	;# 
  3576  0218                     	;# 
  3577  0219                     	;# 
  3578  021A                     	;# 
  3579  021B                     	;# 
  3580  021B                     	;# 
  3581  021C                     	;# 
  3582  021C                     	;# 
  3583  021D                     	;# 
  3584  021D                     	;# 
  3585  021E                     	;# 
  3586  021F                     	;# 
  3587  028C                     	;# 
  3588  028C                     	;# 
  3589  028D                     	;# 
  3590  028D                     	;# 
  3591  028E                     	;# 
  3592  028F                     	;# 
  3593  0290                     	;# 
  3594  0290                     	;# 
  3595  0291                     	;# 
  3596  0292                     	;# 
  3597  0292                     	;# 
  3598  0293                     	;# 
  3599  0293                     	;# 
  3600  0294                     	;# 
  3601  0295                     	;# 
  3602  0296                     	;# 
  3603  0296                     	;# 
  3604  0297                     	;# 
  3605  0298                     	;# 
  3606  0298                     	;# 
  3607  0299                     	;# 
  3608  0299                     	;# 
  3609  029A                     	;# 
  3610  029B                     	;# 
  3611  029C                     	;# 
  3612  029C                     	;# 
  3613  029D                     	;# 
  3614  030C                     	;# 
  3615  030C                     	;# 
  3616  030D                     	;# 
  3617  030E                     	;# 
  3618  030F                     	;# 
  3619  0310                     	;# 
  3620  0310                     	;# 
  3621  0311                     	;# 
  3622  0312                     	;# 
  3623  0313                     	;# 
  3624  0314                     	;# 
  3625  0314                     	;# 
  3626  0315                     	;# 
  3627  0316                     	;# 
  3628  0317                     	;# 
  3629  0318                     	;# 
  3630  0318                     	;# 
  3631  0319                     	;# 
  3632  031A                     	;# 
  3633  031B                     	;# 
  3634  031C                     	;# 
  3635  031C                     	;# 
  3636  031D                     	;# 
  3637  031E                     	;# 
  3638  031F                     	;# 
  3639  038C                     	;# 
  3640  038C                     	;# 
  3641  038D                     	;# 
  3642  038E                     	;# 
  3643  0390                     	;# 
  3644  0390                     	;# 
  3645  0391                     	;# 
  3646  0392                     	;# 
  3647  040C                     	;# 
  3648  040D                     	;# 
  3649  040E                     	;# 
  3650  040F                     	;# 
  3651  0410                     	;# 
  3652  0411                     	;# 
  3653  0416                     	;# 
  3654  0416                     	;# 
  3655  0417                     	;# 
  3656  0418                     	;# 
  3657  0418                     	;# 
  3658  0419                     	;# 
  3659  041A                     	;# 
  3660  041A                     	;# 
  3661  041B                     	;# 
  3662  041C                     	;# 
  3663  041C                     	;# 
  3664  041D                     	;# 
  3665  041E                     	;# 
  3666  041F                     	;# 
  3667  048C                     	;# 
  3668  048C                     	;# 
  3669  048D                     	;# 
  3670  048E                     	;# 
  3671  048F                     	;# 
  3672  048F                     	;# 
  3673  0490                     	;# 
  3674  0491                     	;# 
  3675  0492                     	;# 
  3676  0492                     	;# 
  3677  0493                     	;# 
  3678  0494                     	;# 
  3679  0495                     	;# 
  3680  0495                     	;# 
  3681  0496                     	;# 
  3682  0497                     	;# 
  3683  0498                     	;# 
  3684  0499                     	;# 
  3685  049A                     	;# 
  3686  049B                     	;# 
  3687  049C                     	;# 
  3688  049D                     	;# 
  3689  050C                     	;# 
  3690  050C                     	;# 
  3691  050D                     	;# 
  3692  050E                     	;# 
  3693  050F                     	;# 
  3694  050F                     	;# 
  3695  0510                     	;# 
  3696  0511                     	;# 
  3697  0512                     	;# 
  3698  0512                     	;# 
  3699  0513                     	;# 
  3700  0514                     	;# 
  3701  0515                     	;# 
  3702  0515                     	;# 
  3703  0516                     	;# 
  3704  0517                     	;# 
  3705  0518                     	;# 
  3706  0519                     	;# 
  3707  051A                     	;# 
  3708  051B                     	;# 
  3709  051C                     	;# 
  3710  051D                     	;# 
  3711  058C                     	;# 
  3712  058C                     	;# 
  3713  058D                     	;# 
  3714  058E                     	;# 
  3715  058F                     	;# 
  3716  058F                     	;# 
  3717  0590                     	;# 
  3718  0591                     	;# 
  3719  0592                     	;# 
  3720  0593                     	;# 
  3721  060C                     	;# 
  3722  060D                     	;# 
  3723  060E                     	;# 
  3724  060F                     	;# 
  3725  0610                     	;# 
  3726  0611                     	;# 
  3727  0612                     	;# 
  3728  0613                     	;# 
  3729  0614                     	;# 
  3730  0616                     	;# 
  3731  0617                     	;# 
  3732  0618                     	;# 
  3733  0619                     	;# 
  3734  061A                     	;# 
  3735  061B                     	;# 
  3736  061C                     	;# 
  3737  061D                     	;# 
  3738  061E                     	;# 
  3739  068C                     	;# 
  3740  068D                     	;# 
  3741  068E                     	;# 
  3742  068F                     	;# 
  3743  0690                     	;# 
  3744  0691                     	;# 
  3745  0692                     	;# 
  3746  0693                     	;# 
  3747  0694                     	;# 
  3748  070C                     	;# 
  3749  070D                     	;# 
  3750  070E                     	;# 
  3751  070F                     	;# 
  3752  0710                     	;# 
  3753  0711                     	;# 
  3754  0712                     	;# 
  3755  0713                     	;# 
  3756  0714                     	;# 
  3757  0716                     	;# 
  3758  0717                     	;# 
  3759  0718                     	;# 
  3760  0719                     	;# 
  3761  071A                     	;# 
  3762  071B                     	;# 
  3763  071C                     	;# 
  3764  071D                     	;# 
  3765  071E                     	;# 
  3766  0796                     	;# 
  3767  0797                     	;# 
  3768  0798                     	;# 
  3769  0799                     	;# 
  3770  079A                     	;# 
  3771  079B                     	;# 
  3772  080C                     	;# 
  3773  080D                     	;# 
  3774  080E                     	;# 
  3775  080F                     	;# 
  3776  0810                     	;# 
  3777  0811                     	;# 
  3778  0812                     	;# 
  3779  0813                     	;# 
  3780  0814                     	;# 
  3781  081A                     	;# 
  3782  081B                     	;# 
  3783  081C                     	;# 
  3784  081D                     	;# 
  3785  081E                     	;# 
  3786  081F                     	;# 
  3787  088C                     	;# 
  3788  088D                     	;# 
  3789  088E                     	;# 
  3790  088F                     	;# 
  3791  0890                     	;# 
  3792  0891                     	;# 
  3793  0892                     	;# 
  3794  0893                     	;# 
  3795  0895                     	;# 
  3796  0896                     	;# 
  3797  0897                     	;# 
  3798  0898                     	;# 
  3799  0899                     	;# 
  3800  089A                     	;# 
  3801  089B                     	;# 
  3802  090C                     	;# 
  3803  090E                     	;# 
  3804  090F                     	;# 
  3805  091F                     	;# 
  3806  091F                     	;# 
  3807  098F                     	;# 
  3808  098F                     	;# 
  3809  0990                     	;# 
  3810  0991                     	;# 
  3811  0992                     	;# 
  3812  0993                     	;# 
  3813  0994                     	;# 
  3814  0995                     	;# 
  3815  0996                     	;# 
  3816  0997                     	;# 
  3817  0E0F                     	;# 
  3818  0E10                     	;# 
  3819  0E11                     	;# 
  3820  0E12                     	;# 
  3821  0E13                     	;# 
  3822  0E14                     	;# 
  3823  0E15                     	;# 
  3824  0E16                     	;# 
  3825  0E17                     	;# 
  3826  0E18                     	;# 
  3827  0E19                     	;# 
  3828  0E1A                     	;# 
  3829  0E1B                     	;# 
  3830  0E1C                     	;# 
  3831  0E1D                     	;# 
  3832  0E1E                     	;# 
  3833  0E1F                     	;# 
  3834  0E20                     	;# 
  3835  0E21                     	;# 
  3836  0E22                     	;# 
  3837  0E23                     	;# 
  3838  0E24                     	;# 
  3839  0E25                     	;# 
  3840  0E26                     	;# 
  3841  0E27                     	;# 
  3842  0E28                     	;# 
  3843  0E29                     	;# 
  3844  0E2A                     	;# 
  3845  0E2B                     	;# 
  3846  0E2C                     	;# 
  3847  0E2D                     	;# 
  3848  0E2E                     	;# 
  3849  0E2F                     	;# 
  3850  0E30                     	;# 
  3851  0E31                     	;# 
  3852  0E32                     	;# 
  3853  0E33                     	;# 
  3854  0E34                     	;# 
  3855  0E35                     	;# 
  3856  0E36                     	;# 
  3857  0E37                     	;# 
  3858  0E8F                     	;# 
  3859  0E90                     	;# 
  3860  0E91                     	;# 
  3861  0E92                     	;# 
  3862  0E93                     	;# 
  3863  0E94                     	;# 
  3864  0E95                     	;# 
  3865  0E96                     	;# 
  3866  0E97                     	;# 
  3867  0E9C                     	;# 
  3868  0E9D                     	;# 
  3869  0E9E                     	;# 
  3870  0EA1                     	;# 
  3871  0EA2                     	;# 
  3872  0EA3                     	;# 
  3873  0EA4                     	;# 
  3874  0EA5                     	;# 
  3875  0EA9                     	;# 
  3876  0EAA                     	;# 
  3877  0EAB                     	;# 
  3878  0EAC                     	;# 
  3879  0EB1                     	;# 
  3880  0EB2                     	;# 
  3881  0EB3                     	;# 
  3882  0EB8                     	;# 
  3883  0EB9                     	;# 
  3884  0EBA                     	;# 
  3885  0EBB                     	;# 
  3886  0EBC                     	;# 
  3887  0EBD                     	;# 
  3888  0EBE                     	;# 
  3889  0EC3                     	;# 
  3890  0EC5                     	;# 
  3891  0EC6                     	;# 
  3892  0EC7                     	;# 
  3893  0EC8                     	;# 
  3894  0EC9                     	;# 
  3895  0ECA                     	;# 
  3896  0ECB                     	;# 
  3897  0ECC                     	;# 
  3898  0F10                     	;# 
  3899  0F11                     	;# 
  3900  0F12                     	;# 
  3901  0F13                     	;# 
  3902  0F14                     	;# 
  3903  0F15                     	;# 
  3904  0F16                     	;# 
  3905  0F17                     	;# 
  3906  0F18                     	;# 
  3907  0F19                     	;# 
  3908  0F1A                     	;# 
  3909  0F1B                     	;# 
  3910  0F1C                     	;# 
  3911  0F1D                     	;# 
  3912  0F1E                     	;# 
  3913  0F1F                     	;# 
  3914  0F20                     	;# 
  3915  0F21                     	;# 
  3916  0F22                     	;# 
  3917  0F23                     	;# 
  3918  0F24                     	;# 
  3919  0F25                     	;# 
  3920  0F26                     	;# 
  3921  0F27                     	;# 
  3922  0F28                     	;# 
  3923  0F29                     	;# 
  3924  0F2A                     	;# 
  3925  0F2B                     	;# 
  3926  0F2C                     	;# 
  3927  0F2D                     	;# 
  3928  0F2E                     	;# 
  3929  0F2F                     	;# 
  3930  0F30                     	;# 
  3931  0F31                     	;# 
  3932  0F32                     	;# 
  3933  0F38                     	;# 
  3934  0F39                     	;# 
  3935  0F3A                     	;# 
  3936  0F3B                     	;# 
  3937  0F3C                     	;# 
  3938  0F3D                     	;# 
  3939  0F3E                     	;# 
  3940  0F3F                     	;# 
  3941  0F40                     	;# 
  3942  0F41                     	;# 
  3943  0F43                     	;# 
  3944  0F44                     	;# 
  3945  0F45                     	;# 
  3946  0F46                     	;# 
  3947  0F47                     	;# 
  3948  0F48                     	;# 
  3949  0F49                     	;# 
  3950  0F4A                     	;# 
  3951  0F4B                     	;# 
  3952  0F4C                     	;# 
  3953  0F4E                     	;# 
  3954  0F4F                     	;# 
  3955  0F50                     	;# 
  3956  0F51                     	;# 
  3957  0F52                     	;# 
  3958  0F53                     	;# 
  3959  0F54                     	;# 
  3960  0F55                     	;# 
  3961  0F56                     	;# 
  3962  0F57                     	;# 
  3963  0F59                     	;# 
  3964  0F5A                     	;# 
  3965  0F5B                     	;# 
  3966  0F5C                     	;# 
  3967  0F5D                     	;# 
  3968  0F61                     	;# 
  3969  0F62                     	;# 
  3970  0F64                     	;# 
  3971  0F65                     	;# 
  3972  0F66                     	;# 
  3973  0F67                     	;# 
  3974  0F68                     	;# 
  3975  0F69                     	;# 
  3976  0F6A                     	;# 
  3977  0F6B                     	;# 
  3978  0F6C                     	;# 
  3979  0F6D                     	;# 
  3980  0FE4                     	;# 
  3981  0FE5                     	;# 
  3982  0FE6                     	;# 
  3983  0FE7                     	;# 
  3984  0FE8                     	;# 
  3985  0FE9                     	;# 
  3986  0FEA                     	;# 
  3987  0FEB                     	;# 
  3988  0FED                     	;# 
  3989  0FEE                     	;# 
  3990  0FEF                     	;# 
  3991  0000                     	;# 
  3992  0001                     	;# 
  3993  0002                     	;# 
  3994  0003                     	;# 
  3995  0004                     	;# 
  3996  0005                     	;# 
  3997  0006                     	;# 
  3998  0007                     	;# 
  3999  0008                     	;# 
  4000  0009                     	;# 
  4001  000A                     	;# 
  4002  000B                     	;# 
  4003  000C                     	;# 
  4004  000D                     	;# 
  4005  000E                     	;# 
  4006  000F                     	;# 
  4007  0010                     	;# 
  4008  0011                     	;# 
  4009  0012                     	;# 
  4010  0013                     	;# 
  4011  0014                     	;# 
  4012  0015                     	;# 
  4013  0016                     	;# 
  4014  0017                     	;# 
  4015  0018                     	;# 
  4016  0019                     	;# 
  4017  001A                     	;# 
  4018  001C                     	;# 
  4019  001C                     	;# 
  4020  001D                     	;# 
  4021  001D                     	;# 
  4022  001E                     	;# 
  4023  001F                     	;# 
  4024  008C                     	;# 
  4025  008C                     	;# 
  4026  008D                     	;# 
  4027  008E                     	;# 
  4028  008E                     	;# 
  4029  008F                     	;# 
  4030  0090                     	;# 
  4031  0090                     	;# 
  4032  0091                     	;# 
  4033  0093                     	;# 
  4034  0094                     	;# 
  4035  0095                     	;# 
  4036  0096                     	;# 
  4037  0097                     	;# 
  4038  0098                     	;# 
  4039  0099                     	;# 
  4040  009A                     	;# 
  4041  009B                     	;# 
  4042  009C                     	;# 
  4043  009D                     	;# 
  4044  009E                     	;# 
  4045  010C                     	;# 
  4046  010D                     	;# 
  4047  010E                     	;# 
  4048  010E                     	;# 
  4049  010F                     	;# 
  4050  0110                     	;# 
  4051  0110                     	;# 
  4052  0111                     	;# 
  4053  0112                     	;# 
  4054  0112                     	;# 
  4055  0113                     	;# 
  4056  0114                     	;# 
  4057  0114                     	;# 
  4058  0115                     	;# 
  4059  0116                     	;# 
  4060  0116                     	;# 
  4061  0117                     	;# 
  4062  0119                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  011A                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011B                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011C                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011D                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011E                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011F                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  018C                     	;# 
  4088  018D                     	;# 
  4089  018E                     	;# 
  4090  018F                     	;# 
  4091  0190                     	;# 
  4092  0191                     	;# 
  4093  0192                     	;# 
  4094  0196                     	;# 
  4095  0197                     	;# 
  4096  0198                     	;# 
  4097  0199                     	;# 
  4098  019A                     	;# 
  4099  019B                     	;# 
  4100  019C                     	;# 
  4101  020C                     	;# 
  4102  020C                     	;# 
  4103  020D                     	;# 
  4104  020E                     	;# 
  4105  020F                     	;# 
  4106  020F                     	;# 
  4107  0210                     	;# 
  4108  0210                     	;# 
  4109  0211                     	;# 
  4110  0211                     	;# 
  4111  0212                     	;# 
  4112  0212                     	;# 
  4113  0213                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0216                     	;# 
  4118  0216                     	;# 
  4119  0217                     	;# 
  4120  0217                     	;# 
  4121  0218                     	;# 
  4122  0218                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021B                     	;# 
  4127  021C                     	;# 
  4128  021C                     	;# 
  4129  021D                     	;# 
  4130  021D                     	;# 
  4131  021E                     	;# 
  4132  021F                     	;# 
  4133  028C                     	;# 
  4134  028C                     	;# 
  4135  028D                     	;# 
  4136  028D                     	;# 
  4137  028E                     	;# 
  4138  028F                     	;# 
  4139  0290                     	;# 
  4140  0290                     	;# 
  4141  0291                     	;# 
  4142  0292                     	;# 
  4143  0292                     	;# 
  4144  0293                     	;# 
  4145  0293                     	;# 
  4146  0294                     	;# 
  4147  0295                     	;# 
  4148  0296                     	;# 
  4149  0296                     	;# 
  4150  0297                     	;# 
  4151  0298                     	;# 
  4152  0298                     	;# 
  4153  0299                     	;# 
  4154  0299                     	;# 
  4155  029A                     	;# 
  4156  029B                     	;# 
  4157  029C                     	;# 
  4158  029C                     	;# 
  4159  029D                     	;# 
  4160  030C                     	;# 
  4161  030C                     	;# 
  4162  030D                     	;# 
  4163  030E                     	;# 
  4164  030F                     	;# 
  4165  0310                     	;# 
  4166  0310                     	;# 
  4167  0311                     	;# 
  4168  0312                     	;# 
  4169  0313                     	;# 
  4170  0314                     	;# 
  4171  0314                     	;# 
  4172  0315                     	;# 
  4173  0316                     	;# 
  4174  0317                     	;# 
  4175  0318                     	;# 
  4176  0318                     	;# 
  4177  0319                     	;# 
  4178  031A                     	;# 
  4179  031B                     	;# 
  4180  031C                     	;# 
  4181  031C                     	;# 
  4182  031D                     	;# 
  4183  031E                     	;# 
  4184  031F                     	;# 
  4185  038C                     	;# 
  4186  038C                     	;# 
  4187  038D                     	;# 
  4188  038E                     	;# 
  4189  0390                     	;# 
  4190  0390                     	;# 
  4191  0391                     	;# 
  4192  0392                     	;# 
  4193  040C                     	;# 
  4194  040D                     	;# 
  4195  040E                     	;# 
  4196  040F                     	;# 
  4197  0410                     	;# 
  4198  0411                     	;# 
  4199  0416                     	;# 
  4200  0416                     	;# 
  4201  0417                     	;# 
  4202  0418                     	;# 
  4203  0418                     	;# 
  4204  0419                     	;# 
  4205  041A                     	;# 
  4206  041A                     	;# 
  4207  041B                     	;# 
  4208  041C                     	;# 
  4209  041C                     	;# 
  4210  041D                     	;# 
  4211  041E                     	;# 
  4212  041F                     	;# 
  4213  048C                     	;# 
  4214  048C                     	;# 
  4215  048D                     	;# 
  4216  048E                     	;# 
  4217  048F                     	;# 
  4218  048F                     	;# 
  4219  0490                     	;# 
  4220  0491                     	;# 
  4221  0492                     	;# 
  4222  0492                     	;# 
  4223  0493                     	;# 
  4224  0494                     	;# 
  4225  0495                     	;# 
  4226  0495                     	;# 
  4227  0496                     	;# 
  4228  0497                     	;# 
  4229  0498                     	;# 
  4230  0499                     	;# 
  4231  049A                     	;# 
  4232  049B                     	;# 
  4233  049C                     	;# 
  4234  049D                     	;# 
  4235  050C                     	;# 
  4236  050C                     	;# 
  4237  050D                     	;# 
  4238  050E                     	;# 
  4239  050F                     	;# 
  4240  050F                     	;# 
  4241  0510                     	;# 
  4242  0511                     	;# 
  4243  0512                     	;# 
  4244  0512                     	;# 
  4245  0513                     	;# 
  4246  0514                     	;# 
  4247  0515                     	;# 
  4248  0515                     	;# 
  4249  0516                     	;# 
  4250  0517                     	;# 
  4251  0518                     	;# 
  4252  0519                     	;# 
  4253  051A                     	;# 
  4254  051B                     	;# 
  4255  051C                     	;# 
  4256  051D                     	;# 
  4257  058C                     	;# 
  4258  058C                     	;# 
  4259  058D                     	;# 
  4260  058E                     	;# 
  4261  058F                     	;# 
  4262  058F                     	;# 
  4263  0590                     	;# 
  4264  0591                     	;# 
  4265  0592                     	;# 
  4266  0593                     	;# 
  4267  060C                     	;# 
  4268  060D                     	;# 
  4269  060E                     	;# 
  4270  060F                     	;# 
  4271  0610                     	;# 
  4272  0611                     	;# 
  4273  0612                     	;# 
  4274  0613                     	;# 
  4275  0614                     	;# 
  4276  0616                     	;# 
  4277  0617                     	;# 
  4278  0618                     	;# 
  4279  0619                     	;# 
  4280  061A                     	;# 
  4281  061B                     	;# 
  4282  061C                     	;# 
  4283  061D                     	;# 
  4284  061E                     	;# 
  4285  068C                     	;# 
  4286  068D                     	;# 
  4287  068E                     	;# 
  4288  068F                     	;# 
  4289  0690                     	;# 
  4290  0691                     	;# 
  4291  0692                     	;# 
  4292  0693                     	;# 
  4293  0694                     	;# 
  4294  070C                     	;# 
  4295  070D                     	;# 
  4296  070E                     	;# 
  4297  070F                     	;# 
  4298  0710                     	;# 
  4299  0711                     	;# 
  4300  0712                     	;# 
  4301  0713                     	;# 
  4302  0714                     	;# 
  4303  0716                     	;# 
  4304  0717                     	;# 
  4305  0718                     	;# 
  4306  0719                     	;# 
  4307  071A                     	;# 
  4308  071B                     	;# 
  4309  071C                     	;# 
  4310  071D                     	;# 
  4311  071E                     	;# 
  4312  0796                     	;# 
  4313  0797                     	;# 
  4314  0798                     	;# 
  4315  0799                     	;# 
  4316  079A                     	;# 
  4317  079B                     	;# 
  4318  080C                     	;# 
  4319  080D                     	;# 
  4320  080E                     	;# 
  4321  080F                     	;# 
  4322  0810                     	;# 
  4323  0811                     	;# 
  4324  0812                     	;# 
  4325  0813                     	;# 
  4326  0814                     	;# 
  4327  081A                     	;# 
  4328  081B                     	;# 
  4329  081C                     	;# 
  4330  081D                     	;# 
  4331  081E                     	;# 
  4332  081F                     	;# 
  4333  088C                     	;# 
  4334  088D                     	;# 
  4335  088E                     	;# 
  4336  088F                     	;# 
  4337  0890                     	;# 
  4338  0891                     	;# 
  4339  0892                     	;# 
  4340  0893                     	;# 
  4341  0895                     	;# 
  4342  0896                     	;# 
  4343  0897                     	;# 
  4344  0898                     	;# 
  4345  0899                     	;# 
  4346  089A                     	;# 
  4347  089B                     	;# 
  4348  090C                     	;# 
  4349  090E                     	;# 
  4350  090F                     	;# 
  4351  091F                     	;# 
  4352  091F                     	;# 
  4353  098F                     	;# 
  4354  098F                     	;# 
  4355  0990                     	;# 
  4356  0991                     	;# 
  4357  0992                     	;# 
  4358  0993                     	;# 
  4359  0994                     	;# 
  4360  0995                     	;# 
  4361  0996                     	;# 
  4362  0997                     	;# 
  4363  0E0F                     	;# 
  4364  0E10                     	;# 
  4365  0E11                     	;# 
  4366  0E12                     	;# 
  4367  0E13                     	;# 
  4368  0E14                     	;# 
  4369  0E15                     	;# 
  4370  0E16                     	;# 
  4371  0E17                     	;# 
  4372  0E18                     	;# 
  4373  0E19                     	;# 
  4374  0E1A                     	;# 
  4375  0E1B                     	;# 
  4376  0E1C                     	;# 
  4377  0E1D                     	;# 
  4378  0E1E                     	;# 
  4379  0E1F                     	;# 
  4380  0E20                     	;# 
  4381  0E21                     	;# 
  4382  0E22                     	;# 
  4383  0E23                     	;# 
  4384  0E24                     	;# 
  4385  0E25                     	;# 
  4386  0E26                     	;# 
  4387  0E27                     	;# 
  4388  0E28                     	;# 
  4389  0E29                     	;# 
  4390  0E2A                     	;# 
  4391  0E2B                     	;# 
  4392  0E2C                     	;# 
  4393  0E2D                     	;# 
  4394  0E2E                     	;# 
  4395  0E2F                     	;# 
  4396  0E30                     	;# 
  4397  0E31                     	;# 
  4398  0E32                     	;# 
  4399  0E33                     	;# 
  4400  0E34                     	;# 
  4401  0E35                     	;# 
  4402  0E36                     	;# 
  4403  0E37                     	;# 
  4404  0E8F                     	;# 
  4405  0E90                     	;# 
  4406  0E91                     	;# 
  4407  0E92                     	;# 
  4408  0E93                     	;# 
  4409  0E94                     	;# 
  4410  0E95                     	;# 
  4411  0E96                     	;# 
  4412  0E97                     	;# 
  4413  0E9C                     	;# 
  4414  0E9D                     	;# 
  4415  0E9E                     	;# 
  4416  0EA1                     	;# 
  4417  0EA2                     	;# 
  4418  0EA3                     	;# 
  4419  0EA4                     	;# 
  4420  0EA5                     	;# 
  4421  0EA9                     	;# 
  4422  0EAA                     	;# 
  4423  0EAB                     	;# 
  4424  0EAC                     	;# 
  4425  0EB1                     	;# 
  4426  0EB2                     	;# 
  4427  0EB3                     	;# 
  4428  0EB8                     	;# 
  4429  0EB9                     	;# 
  4430  0EBA                     	;# 
  4431  0EBB                     	;# 
  4432  0EBC                     	;# 
  4433  0EBD                     	;# 
  4434  0EBE                     	;# 
  4435  0EC3                     	;# 
  4436  0EC5                     	;# 
  4437  0EC6                     	;# 
  4438  0EC7                     	;# 
  4439  0EC8                     	;# 
  4440  0EC9                     	;# 
  4441  0ECA                     	;# 
  4442  0ECB                     	;# 
  4443  0ECC                     	;# 
  4444  0F10                     	;# 
  4445  0F11                     	;# 
  4446  0F12                     	;# 
  4447  0F13                     	;# 
  4448  0F14                     	;# 
  4449  0F15                     	;# 
  4450  0F16                     	;# 
  4451  0F17                     	;# 
  4452  0F18                     	;# 
  4453  0F19                     	;# 
  4454  0F1A                     	;# 
  4455  0F1B                     	;# 
  4456  0F1C                     	;# 
  4457  0F1D                     	;# 
  4458  0F1E                     	;# 
  4459  0F1F                     	;# 
  4460  0F20                     	;# 
  4461  0F21                     	;# 
  4462  0F22                     	;# 
  4463  0F23                     	;# 
  4464  0F24                     	;# 
  4465  0F25                     	;# 
  4466  0F26                     	;# 
  4467  0F27                     	;# 
  4468  0F28                     	;# 
  4469  0F29                     	;# 
  4470  0F2A                     	;# 
  4471  0F2B                     	;# 
  4472  0F2C                     	;# 
  4473  0F2D                     	;# 
  4474  0F2E                     	;# 
  4475  0F2F                     	;# 
  4476  0F30                     	;# 
  4477  0F31                     	;# 
  4478  0F32                     	;# 
  4479  0F38                     	;# 
  4480  0F39                     	;# 
  4481  0F3A                     	;# 
  4482  0F3B                     	;# 
  4483  0F3C                     	;# 
  4484  0F3D                     	;# 
  4485  0F3E                     	;# 
  4486  0F3F                     	;# 
  4487  0F40                     	;# 
  4488  0F41                     	;# 
  4489  0F43                     	;# 
  4490  0F44                     	;# 
  4491  0F45                     	;# 
  4492  0F46                     	;# 
  4493  0F47                     	;# 
  4494  0F48                     	;# 
  4495  0F49                     	;# 
  4496  0F4A                     	;# 
  4497  0F4B                     	;# 
  4498  0F4C                     	;# 
  4499  0F4E                     	;# 
  4500  0F4F                     	;# 
  4501  0F50                     	;# 
  4502  0F51                     	;# 
  4503  0F52                     	;# 
  4504  0F53                     	;# 
  4505  0F54                     	;# 
  4506  0F55                     	;# 
  4507  0F56                     	;# 
  4508  0F57                     	;# 
  4509  0F59                     	;# 
  4510  0F5A                     	;# 
  4511  0F5B                     	;# 
  4512  0F5C                     	;# 
  4513  0F5D                     	;# 
  4514  0F61                     	;# 
  4515  0F62                     	;# 
  4516  0F64                     	;# 
  4517  0F65                     	;# 
  4518  0F66                     	;# 
  4519  0F67                     	;# 
  4520  0F68                     	;# 
  4521  0F69                     	;# 
  4522  0F6A                     	;# 
  4523  0F6B                     	;# 
  4524  0F6C                     	;# 
  4525  0F6D                     	;# 
  4526  0FE4                     	;# 
  4527  0FE5                     	;# 
  4528  0FE6                     	;# 
  4529  0FE7                     	;# 
  4530  0FE8                     	;# 
  4531  0FE9                     	;# 
  4532  0FEA                     	;# 
  4533  0FEB                     	;# 
  4534  0FED                     	;# 
  4535  0FEE                     	;# 
  4536  0FEF                     	;# 
  4537  0000                     	;# 
  4538  0001                     	;# 
  4539  0002                     	;# 
  4540  0003                     	;# 
  4541  0004                     	;# 
  4542  0005                     	;# 
  4543  0006                     	;# 
  4544  0007                     	;# 
  4545  0008                     	;# 
  4546  0009                     	;# 
  4547  000A                     	;# 
  4548  000B                     	;# 
  4549  000C                     	;# 
  4550  000D                     	;# 
  4551  000E                     	;# 
  4552  000F                     	;# 
  4553  0010                     	;# 
  4554  0011                     	;# 
  4555  0012                     	;# 
  4556  0013                     	;# 
  4557  0014                     	;# 
  4558  0015                     	;# 
  4559  0016                     	;# 
  4560  0017                     	;# 
  4561  0018                     	;# 
  4562  0019                     	;# 
  4563  001A                     	;# 
  4564  001C                     	;# 
  4565  001C                     	;# 
  4566  001D                     	;# 
  4567  001D                     	;# 
  4568  001E                     	;# 
  4569  001F                     	;# 
  4570  008C                     	;# 
  4571  008C                     	;# 
  4572  008D                     	;# 
  4573  008E                     	;# 
  4574  008E                     	;# 
  4575  008F                     	;# 
  4576  0090                     	;# 
  4577  0090                     	;# 
  4578  0091                     	;# 
  4579  0093                     	;# 
  4580  0094                     	;# 
  4581  0095                     	;# 
  4582  0096                     	;# 
  4583  0097                     	;# 
  4584  0098                     	;# 
  4585  0099                     	;# 
  4586  009A                     	;# 
  4587  009B                     	;# 
  4588  009C                     	;# 
  4589  009D                     	;# 
  4590  009E                     	;# 
  4591  010C                     	;# 
  4592  010D                     	;# 
  4593  010E                     	;# 
  4594  010E                     	;# 
  4595  010F                     	;# 
  4596  0110                     	;# 
  4597  0110                     	;# 
  4598  0111                     	;# 
  4599  0112                     	;# 
  4600  0112                     	;# 
  4601  0113                     	;# 
  4602  0114                     	;# 
  4603  0114                     	;# 
  4604  0115                     	;# 
  4605  0116                     	;# 
  4606  0116                     	;# 
  4607  0117                     	;# 
  4608  0119                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  011A                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011B                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011C                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011D                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011E                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011F                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  018C                     	;# 
  4634  018D                     	;# 
  4635  018E                     	;# 
  4636  018F                     	;# 
  4637  0190                     	;# 
  4638  0191                     	;# 
  4639  0192                     	;# 
  4640  0196                     	;# 
  4641  0197                     	;# 
  4642  0198                     	;# 
  4643  0199                     	;# 
  4644  019A                     	;# 
  4645  019B                     	;# 
  4646  019C                     	;# 
  4647  020C                     	;# 
  4648  020C                     	;# 
  4649  020D                     	;# 
  4650  020E                     	;# 
  4651  020F                     	;# 
  4652  020F                     	;# 
  4653  0210                     	;# 
  4654  0210                     	;# 
  4655  0211                     	;# 
  4656  0211                     	;# 
  4657  0212                     	;# 
  4658  0212                     	;# 
  4659  0213                     	;# 
  4660  0214                     	;# 
  4661  0215                     	;# 
  4662  0215                     	;# 
  4663  0216                     	;# 
  4664  0216                     	;# 
  4665  0217                     	;# 
  4666  0217                     	;# 
  4667  0218                     	;# 
  4668  0218                     	;# 
  4669  0219                     	;# 
  4670  021A                     	;# 
  4671  021B                     	;# 
  4672  021B                     	;# 
  4673  021C                     	;# 
  4674  021C                     	;# 
  4675  021D                     	;# 
  4676  021D                     	;# 
  4677  021E                     	;# 
  4678  021F                     	;# 
  4679  028C                     	;# 
  4680  028C                     	;# 
  4681  028D                     	;# 
  4682  028D                     	;# 
  4683  028E                     	;# 
  4684  028F                     	;# 
  4685  0290                     	;# 
  4686  0290                     	;# 
  4687  0291                     	;# 
  4688  0292                     	;# 
  4689  0292                     	;# 
  4690  0293                     	;# 
  4691  0293                     	;# 
  4692  0294                     	;# 
  4693  0295                     	;# 
  4694  0296                     	;# 
  4695  0296                     	;# 
  4696  0297                     	;# 
  4697  0298                     	;# 
  4698  0298                     	;# 
  4699  0299                     	;# 
  4700  0299                     	;# 
  4701  029A                     	;# 
  4702  029B                     	;# 
  4703  029C                     	;# 
  4704  029C                     	;# 
  4705  029D                     	;# 
  4706  030C                     	;# 
  4707  030C                     	;# 
  4708  030D                     	;# 
  4709  030E                     	;# 
  4710  030F                     	;# 
  4711  0310                     	;# 
  4712  0310                     	;# 
  4713  0311                     	;# 
  4714  0312                     	;# 
  4715  0313                     	;# 
  4716  0314                     	;# 
  4717  0314                     	;# 
  4718  0315                     	;# 
  4719  0316                     	;# 
  4720  0317                     	;# 
  4721  0318                     	;# 
  4722  0318                     	;# 
  4723  0319                     	;# 
  4724  031A                     	;# 
  4725  031B                     	;# 
  4726  031C                     	;# 
  4727  031C                     	;# 
  4728  031D                     	;# 
  4729  031E                     	;# 
  4730  031F                     	;# 
  4731  038C                     	;# 
  4732  038C                     	;# 
  4733  038D                     	;# 
  4734  038E                     	;# 
  4735  0390                     	;# 
  4736  0390                     	;# 
  4737  0391                     	;# 
  4738  0392                     	;# 
  4739  040C                     	;# 
  4740  040D                     	;# 
  4741  040E                     	;# 
  4742  040F                     	;# 
  4743  0410                     	;# 
  4744  0411                     	;# 
  4745  0416                     	;# 
  4746  0416                     	;# 
  4747  0417                     	;# 
  4748  0418                     	;# 
  4749  0418                     	;# 
  4750  0419                     	;# 
  4751  041A                     	;# 
  4752  041A                     	;# 
  4753  041B                     	;# 
  4754  041C                     	;# 
  4755  041C                     	;# 
  4756  041D                     	;# 
  4757  041E                     	;# 
  4758  041F                     	;# 
  4759  048C                     	;# 
  4760  048C                     	;# 
  4761  048D                     	;# 
  4762  048E                     	;# 
  4763  048F                     	;# 
  4764  048F                     	;# 
  4765  0490                     	;# 
  4766  0491                     	;# 
  4767  0492                     	;# 
  4768  0492                     	;# 
  4769  0493                     	;# 
  4770  0494                     	;# 
  4771  0495                     	;# 
  4772  0495                     	;# 
  4773  0496                     	;# 
  4774  0497                     	;# 
  4775  0498                     	;# 
  4776  0499                     	;# 
  4777  049A                     	;# 
  4778  049B                     	;# 
  4779  049C                     	;# 
  4780  049D                     	;# 
  4781  050C                     	;# 
  4782  050C                     	;# 
  4783  050D                     	;# 
  4784  050E                     	;# 
  4785  050F                     	;# 
  4786  050F                     	;# 
  4787  0510                     	;# 
  4788  0511                     	;# 
  4789  0512                     	;# 
  4790  0512                     	;# 
  4791  0513                     	;# 
  4792  0514                     	;# 
  4793  0515                     	;# 
  4794  0515                     	;# 
  4795  0516                     	;# 
  4796  0517                     	;# 
  4797  0518                     	;# 
  4798  0519                     	;# 
  4799  051A                     	;# 
  4800  051B                     	;# 
  4801  051C                     	;# 
  4802  051D                     	;# 
  4803  058C                     	;# 
  4804  058C                     	;# 
  4805  058D                     	;# 
  4806  058E                     	;# 
  4807  058F                     	;# 
  4808  058F                     	;# 
  4809  0590                     	;# 
  4810  0591                     	;# 
  4811  0592                     	;# 
  4812  0593                     	;# 
  4813  060C                     	;# 
  4814  060D                     	;# 
  4815  060E                     	;# 
  4816  060F                     	;# 
  4817  0610                     	;# 
  4818  0611                     	;# 
  4819  0612                     	;# 
  4820  0613                     	;# 
  4821  0614                     	;# 
  4822  0616                     	;# 
  4823  0617                     	;# 
  4824  0618                     	;# 
  4825  0619                     	;# 
  4826  061A                     	;# 
  4827  061B                     	;# 
  4828  061C                     	;# 
  4829  061D                     	;# 
  4830  061E                     	;# 
  4831  068C                     	;# 
  4832  068D                     	;# 
  4833  068E                     	;# 
  4834  068F                     	;# 
  4835  0690                     	;# 
  4836  0691                     	;# 
  4837  0692                     	;# 
  4838  0693                     	;# 
  4839  0694                     	;# 
  4840  070C                     	;# 
  4841  070D                     	;# 
  4842  070E                     	;# 
  4843  070F                     	;# 
  4844  0710                     	;# 
  4845  0711                     	;# 
  4846  0712                     	;# 
  4847  0713                     	;# 
  4848  0714                     	;# 
  4849  0716                     	;# 
  4850  0717                     	;# 
  4851  0718                     	;# 
  4852  0719                     	;# 
  4853  071A                     	;# 
  4854  071B                     	;# 
  4855  071C                     	;# 
  4856  071D                     	;# 
  4857  071E                     	;# 
  4858  0796                     	;# 
  4859  0797                     	;# 
  4860  0798                     	;# 
  4861  0799                     	;# 
  4862  079A                     	;# 
  4863  079B                     	;# 
  4864  080C                     	;# 
  4865  080D                     	;# 
  4866  080E                     	;# 
  4867  080F                     	;# 
  4868  0810                     	;# 
  4869  0811                     	;# 
  4870  0812                     	;# 
  4871  0813                     	;# 
  4872  0814                     	;# 
  4873  081A                     	;# 
  4874  081B                     	;# 
  4875  081C                     	;# 
  4876  081D                     	;# 
  4877  081E                     	;# 
  4878  081F                     	;# 
  4879  088C                     	;# 
  4880  088D                     	;# 
  4881  088E                     	;# 
  4882  088F                     	;# 
  4883  0890                     	;# 
  4884  0891                     	;# 
  4885  0892                     	;# 
  4886  0893                     	;# 
  4887  0895                     	;# 
  4888  0896                     	;# 
  4889  0897                     	;# 
  4890  0898                     	;# 
  4891  0899                     	;# 
  4892  089A                     	;# 
  4893  089B                     	;# 
  4894  090C                     	;# 
  4895  090E                     	;# 
  4896  090F                     	;# 
  4897  091F                     	;# 
  4898  091F                     	;# 
  4899  098F                     	;# 
  4900  098F                     	;# 
  4901  0990                     	;# 
  4902  0991                     	;# 
  4903  0992                     	;# 
  4904  0993                     	;# 
  4905  0994                     	;# 
  4906  0995                     	;# 
  4907  0996                     	;# 
  4908  0997                     	;# 
  4909  0E0F                     	;# 
  4910  0E10                     	;# 
  4911  0E11                     	;# 
  4912  0E12                     	;# 
  4913  0E13                     	;# 
  4914  0E14                     	;# 
  4915  0E15                     	;# 
  4916  0E16                     	;# 
  4917  0E17                     	;# 
  4918  0E18                     	;# 
  4919  0E19                     	;# 
  4920  0E1A                     	;# 
  4921  0E1B                     	;# 
  4922  0E1C                     	;# 
  4923  0E1D                     	;# 
  4924  0E1E                     	;# 
  4925  0E1F                     	;# 
  4926  0E20                     	;# 
  4927  0E21                     	;# 
  4928  0E22                     	;# 
  4929  0E23                     	;# 
  4930  0E24                     	;# 
  4931  0E25                     	;# 
  4932  0E26                     	;# 
  4933  0E27                     	;# 
  4934  0E28                     	;# 
  4935  0E29                     	;# 
  4936  0E2A                     	;# 
  4937  0E2B                     	;# 
  4938  0E2C                     	;# 
  4939  0E2D                     	;# 
  4940  0E2E                     	;# 
  4941  0E2F                     	;# 
  4942  0E30                     	;# 
  4943  0E31                     	;# 
  4944  0E32                     	;# 
  4945  0E33                     	;# 
  4946  0E34                     	;# 
  4947  0E35                     	;# 
  4948  0E36                     	;# 
  4949  0E37                     	;# 
  4950  0E8F                     	;# 
  4951  0E90                     	;# 
  4952  0E91                     	;# 
  4953  0E92                     	;# 
  4954  0E93                     	;# 
  4955  0E94                     	;# 
  4956  0E95                     	;# 
  4957  0E96                     	;# 
  4958  0E97                     	;# 
  4959  0E9C                     	;# 
  4960  0E9D                     	;# 
  4961  0E9E                     	;# 
  4962  0EA1                     	;# 
  4963  0EA2                     	;# 
  4964  0EA3                     	;# 
  4965  0EA4                     	;# 
  4966  0EA5                     	;# 
  4967  0EA9                     	;# 
  4968  0EAA                     	;# 
  4969  0EAB                     	;# 
  4970  0EAC                     	;# 
  4971  0EB1                     	;# 
  4972  0EB2                     	;# 
  4973  0EB3                     	;# 
  4974  0EB8                     	;# 
  4975  0EB9                     	;# 
  4976  0EBA                     	;# 
  4977  0EBB                     	;# 
  4978  0EBC                     	;# 
  4979  0EBD                     	;# 
  4980  0EBE                     	;# 
  4981  0EC3                     	;# 
  4982  0EC5                     	;# 
  4983  0EC6                     	;# 
  4984  0EC7                     	;# 
  4985  0EC8                     	;# 
  4986  0EC9                     	;# 
  4987  0ECA                     	;# 
  4988  0ECB                     	;# 
  4989  0ECC                     	;# 
  4990  0F10                     	;# 
  4991  0F11                     	;# 
  4992  0F12                     	;# 
  4993  0F13                     	;# 
  4994  0F14                     	;# 
  4995  0F15                     	;# 
  4996  0F16                     	;# 
  4997  0F17                     	;# 
  4998  0F18                     	;# 
  4999  0F19                     	;# 
  5000  0F1A                     	;# 
  5001  0F1B                     	;# 
  5002  0F1C                     	;# 
  5003  0F1D                     	;# 
  5004  0F1E                     	;# 
  5005  0F1F                     	;# 
  5006  0F20                     	;# 
  5007  0F21                     	;# 
  5008  0F22                     	;# 
  5009  0F23                     	;# 
  5010  0F24                     	;# 
  5011  0F25                     	;# 
  5012  0F26                     	;# 
  5013  0F27                     	;# 
  5014  0F28                     	;# 
  5015  0F29                     	;# 
  5016  0F2A                     	;# 
  5017  0F2B                     	;# 
  5018  0F2C                     	;# 
  5019  0F2D                     	;# 
  5020  0F2E                     	;# 
  5021  0F2F                     	;# 
  5022  0F30                     	;# 
  5023  0F31                     	;# 
  5024  0F32                     	;# 
  5025  0F38                     	;# 
  5026  0F39                     	;# 
  5027  0F3A                     	;# 
  5028  0F3B                     	;# 
  5029  0F3C                     	;# 
  5030  0F3D                     	;# 
  5031  0F3E                     	;# 
  5032  0F3F                     	;# 
  5033  0F40                     	;# 
  5034  0F41                     	;# 
  5035  0F43                     	;# 
  5036  0F44                     	;# 
  5037  0F45                     	;# 
  5038  0F46                     	;# 
  5039  0F47                     	;# 
  5040  0F48                     	;# 
  5041  0F49                     	;# 
  5042  0F4A                     	;# 
  5043  0F4B                     	;# 
  5044  0F4C                     	;# 
  5045  0F4E                     	;# 
  5046  0F4F                     	;# 
  5047  0F50                     	;# 
  5048  0F51                     	;# 
  5049  0F52                     	;# 
  5050  0F53                     	;# 
  5051  0F54                     	;# 
  5052  0F55                     	;# 
  5053  0F56                     	;# 
  5054  0F57                     	;# 
  5055  0F59                     	;# 
  5056  0F5A                     	;# 
  5057  0F5B                     	;# 
  5058  0F5C                     	;# 
  5059  0F5D                     	;# 
  5060  0F61                     	;# 
  5061  0F62                     	;# 
  5062  0F64                     	;# 
  5063  0F65                     	;# 
  5064  0F66                     	;# 
  5065  0F67                     	;# 
  5066  0F68                     	;# 
  5067  0F69                     	;# 
  5068  0F6A                     	;# 
  5069  0F6B                     	;# 
  5070  0F6C                     	;# 
  5071  0F6D                     	;# 
  5072  0FE4                     	;# 
  5073  0FE5                     	;# 
  5074  0FE6                     	;# 
  5075  0FE7                     	;# 
  5076  0FE8                     	;# 
  5077  0FE9                     	;# 
  5078  0FEA                     	;# 
  5079  0FEB                     	;# 
  5080  0FED                     	;# 
  5081  0FEE                     	;# 
  5082  0FEF                     	;# 
  5083  0000                     	;# 
  5084  0001                     	;# 
  5085  0002                     	;# 
  5086  0003                     	;# 
  5087  0004                     	;# 
  5088  0005                     	;# 
  5089  0006                     	;# 
  5090  0007                     	;# 
  5091  0008                     	;# 
  5092  0009                     	;# 
  5093  000A                     	;# 
  5094  000B                     	;# 
  5095  000C                     	;# 
  5096  000D                     	;# 
  5097  000E                     	;# 
  5098  000F                     	;# 
  5099  0010                     	;# 
  5100  0011                     	;# 
  5101  0012                     	;# 
  5102  0013                     	;# 
  5103  0014                     	;# 
  5104  0015                     	;# 
  5105  0016                     	;# 
  5106  0017                     	;# 
  5107  0018                     	;# 
  5108  0019                     	;# 
  5109  001A                     	;# 
  5110  001C                     	;# 
  5111  001C                     	;# 
  5112  001D                     	;# 
  5113  001D                     	;# 
  5114  001E                     	;# 
  5115  001F                     	;# 
  5116  008C                     	;# 
  5117  008C                     	;# 
  5118  008D                     	;# 
  5119  008E                     	;# 
  5120  008E                     	;# 
  5121  008F                     	;# 
  5122  0090                     	;# 
  5123  0090                     	;# 
  5124  0091                     	;# 
  5125  0093                     	;# 
  5126  0094                     	;# 
  5127  0095                     	;# 
  5128  0096                     	;# 
  5129  0097                     	;# 
  5130  0098                     	;# 
  5131  0099                     	;# 
  5132  009A                     	;# 
  5133  009B                     	;# 
  5134  009C                     	;# 
  5135  009D                     	;# 
  5136  009E                     	;# 
  5137  010C                     	;# 
  5138  010D                     	;# 
  5139  010E                     	;# 
  5140  010E                     	;# 
  5141  010F                     	;# 
  5142  0110                     	;# 
  5143  0110                     	;# 
  5144  0111                     	;# 
  5145  0112                     	;# 
  5146  0112                     	;# 
  5147  0113                     	;# 
  5148  0114                     	;# 
  5149  0114                     	;# 
  5150  0115                     	;# 
  5151  0116                     	;# 
  5152  0116                     	;# 
  5153  0117                     	;# 
  5154  0119                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  011A                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011B                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011C                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011D                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011E                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011F                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  018C                     	;# 
  5180  018D                     	;# 
  5181  018E                     	;# 
  5182  018F                     	;# 
  5183  0190                     	;# 
  5184  0191                     	;# 
  5185  0192                     	;# 
  5186  0196                     	;# 
  5187  0197                     	;# 
  5188  0198                     	;# 
  5189  0199                     	;# 
  5190  019A                     	;# 
  5191  019B                     	;# 
  5192  019C                     	;# 
  5193  020C                     	;# 
  5194  020C                     	;# 
  5195  020D                     	;# 
  5196  020E                     	;# 
  5197  020F                     	;# 
  5198  020F                     	;# 
  5199  0210                     	;# 
  5200  0210                     	;# 
  5201  0211                     	;# 
  5202  0211                     	;# 
  5203  0212                     	;# 
  5204  0212                     	;# 
  5205  0213                     	;# 
  5206  0214                     	;# 
  5207  0215                     	;# 
  5208  0215                     	;# 
  5209  0216                     	;# 
  5210  0216                     	;# 
  5211  0217                     	;# 
  5212  0217                     	;# 
  5213  0218                     	;# 
  5214  0218                     	;# 
  5215  0219                     	;# 
  5216  021A                     	;# 
  5217  021B                     	;# 
  5218  021B                     	;# 
  5219  021C                     	;# 
  5220  021C                     	;# 
  5221  021D                     	;# 
  5222  021D                     	;# 
  5223  021E                     	;# 
  5224  021F                     	;# 
  5225  028C                     	;# 
  5226  028C                     	;# 
  5227  028D                     	;# 
  5228  028D                     	;# 
  5229  028E                     	;# 
  5230  028F                     	;# 
  5231  0290                     	;# 
  5232  0290                     	;# 
  5233  0291                     	;# 
  5234  0292                     	;# 
  5235  0292                     	;# 
  5236  0293                     	;# 
  5237  0293                     	;# 
  5238  0294                     	;# 
  5239  0295                     	;# 
  5240  0296                     	;# 
  5241  0296                     	;# 
  5242  0297                     	;# 
  5243  0298                     	;# 
  5244  0298                     	;# 
  5245  0299                     	;# 
  5246  0299                     	;# 
  5247  029A                     	;# 
  5248  029B                     	;# 
  5249  029C                     	;# 
  5250  029C                     	;# 
  5251  029D                     	;# 
  5252  030C                     	;# 
  5253  030C                     	;# 
  5254  030D                     	;# 
  5255  030E                     	;# 
  5256  030F                     	;# 
  5257  0310                     	;# 
  5258  0310                     	;# 
  5259  0311                     	;# 
  5260  0312                     	;# 
  5261  0313                     	;# 
  5262  0314                     	;# 
  5263  0314                     	;# 
  5264  0315                     	;# 
  5265  0316                     	;# 
  5266  0317                     	;# 
  5267  0318                     	;# 
  5268  0318                     	;# 
  5269  0319                     	;# 
  5270  031A                     	;# 
  5271  031B                     	;# 
  5272  031C                     	;# 
  5273  031C                     	;# 
  5274  031D                     	;# 
  5275  031E                     	;# 
  5276  031F                     	;# 
  5277  038C                     	;# 
  5278  038C                     	;# 
  5279  038D                     	;# 
  5280  038E                     	;# 
  5281  0390                     	;# 
  5282  0390                     	;# 
  5283  0391                     	;# 
  5284  0392                     	;# 
  5285  040C                     	;# 
  5286  040D                     	;# 
  5287  040E                     	;# 
  5288  040F                     	;# 
  5289  0410                     	;# 
  5290  0411                     	;# 
  5291  0416                     	;# 
  5292  0416                     	;# 
  5293  0417                     	;# 
  5294  0418                     	;# 
  5295  0418                     	;# 
  5296  0419                     	;# 
  5297  041A                     	;# 
  5298  041A                     	;# 
  5299  041B                     	;# 
  5300  041C                     	;# 
  5301  041C                     	;# 
  5302  041D                     	;# 
  5303  041E                     	;# 
  5304  041F                     	;# 
  5305  048C                     	;# 
  5306  048C                     	;# 
  5307  048D                     	;# 
  5308  048E                     	;# 
  5309  048F                     	;# 
  5310  048F                     	;# 
  5311  0490                     	;# 
  5312  0491                     	;# 
  5313  0492                     	;# 
  5314  0492                     	;# 
  5315  0493                     	;# 
  5316  0494                     	;# 
  5317  0495                     	;# 
  5318  0495                     	;# 
  5319  0496                     	;# 
  5320  0497                     	;# 
  5321  0498                     	;# 
  5322  0499                     	;# 
  5323  049A                     	;# 
  5324  049B                     	;# 
  5325  049C                     	;# 
  5326  049D                     	;# 
  5327  050C                     	;# 
  5328  050C                     	;# 
  5329  050D                     	;# 
  5330  050E                     	;# 
  5331  050F                     	;# 
  5332  050F                     	;# 
  5333  0510                     	;# 
  5334  0511                     	;# 
  5335  0512                     	;# 
  5336  0512                     	;# 
  5337  0513                     	;# 
  5338  0514                     	;# 
  5339  0515                     	;# 
  5340  0515                     	;# 
  5341  0516                     	;# 
  5342  0517                     	;# 
  5343  0518                     	;# 
  5344  0519                     	;# 
  5345  051A                     	;# 
  5346  051B                     	;# 
  5347  051C                     	;# 
  5348  051D                     	;# 
  5349  058C                     	;# 
  5350  058C                     	;# 
  5351  058D                     	;# 
  5352  058E                     	;# 
  5353  058F                     	;# 
  5354  058F                     	;# 
  5355  0590                     	;# 
  5356  0591                     	;# 
  5357  0592                     	;# 
  5358  0593                     	;# 
  5359  060C                     	;# 
  5360  060D                     	;# 
  5361  060E                     	;# 
  5362  060F                     	;# 
  5363  0610                     	;# 
  5364  0611                     	;# 
  5365  0612                     	;# 
  5366  0613                     	;# 
  5367  0614                     	;# 
  5368  0616                     	;# 
  5369  0617                     	;# 
  5370  0618                     	;# 
  5371  0619                     	;# 
  5372  061A                     	;# 
  5373  061B                     	;# 
  5374  061C                     	;# 
  5375  061D                     	;# 
  5376  061E                     	;# 
  5377  068C                     	;# 
  5378  068D                     	;# 
  5379  068E                     	;# 
  5380  068F                     	;# 
  5381  0690                     	;# 
  5382  0691                     	;# 
  5383  0692                     	;# 
  5384  0693                     	;# 
  5385  0694                     	;# 
  5386  070C                     	;# 
  5387  070D                     	;# 
  5388  070E                     	;# 
  5389  070F                     	;# 
  5390  0710                     	;# 
  5391  0711                     	;# 
  5392  0712                     	;# 
  5393  0713                     	;# 
  5394  0714                     	;# 
  5395  0716                     	;# 
  5396  0717                     	;# 
  5397  0718                     	;# 
  5398  0719                     	;# 
  5399  071A                     	;# 
  5400  071B                     	;# 
  5401  071C                     	;# 
  5402  071D                     	;# 
  5403  071E                     	;# 
  5404  0796                     	;# 
  5405  0797                     	;# 
  5406  0798                     	;# 
  5407  0799                     	;# 
  5408  079A                     	;# 
  5409  079B                     	;# 
  5410  080C                     	;# 
  5411  080D                     	;# 
  5412  080E                     	;# 
  5413  080F                     	;# 
  5414  0810                     	;# 
  5415  0811                     	;# 
  5416  0812                     	;# 
  5417  0813                     	;# 
  5418  0814                     	;# 
  5419  081A                     	;# 
  5420  081B                     	;# 
  5421  081C                     	;# 
  5422  081D                     	;# 
  5423  081E                     	;# 
  5424  081F                     	;# 
  5425  088C                     	;# 
  5426  088D                     	;# 
  5427  088E                     	;# 
  5428  088F                     	;# 
  5429  0890                     	;# 
  5430  0891                     	;# 
  5431  0892                     	;# 
  5432  0893                     	;# 
  5433  0895                     	;# 
  5434  0896                     	;# 
  5435  0897                     	;# 
  5436  0898                     	;# 
  5437  0899                     	;# 
  5438  089A                     	;# 
  5439  089B                     	;# 
  5440  090C                     	;# 
  5441  090E                     	;# 
  5442  090F                     	;# 
  5443  091F                     	;# 
  5444  091F                     	;# 
  5445  098F                     	;# 
  5446  098F                     	;# 
  5447  0990                     	;# 
  5448  0991                     	;# 
  5449  0992                     	;# 
  5450  0993                     	;# 
  5451  0994                     	;# 
  5452  0995                     	;# 
  5453  0996                     	;# 
  5454  0997                     	;# 
  5455  0E0F                     	;# 
  5456  0E10                     	;# 
  5457  0E11                     	;# 
  5458  0E12                     	;# 
  5459  0E13                     	;# 
  5460  0E14                     	;# 
  5461  0E15                     	;# 
  5462  0E16                     	;# 
  5463  0E17                     	;# 
  5464  0E18                     	;# 
  5465  0E19                     	;# 
  5466  0E1A                     	;# 
  5467  0E1B                     	;# 
  5468  0E1C                     	;# 
  5469  0E1D                     	;# 
  5470  0E1E                     	;# 
  5471  0E1F                     	;# 
  5472  0E20                     	;# 
  5473  0E21                     	;# 
  5474  0E22                     	;# 
  5475  0E23                     	;# 
  5476  0E24                     	;# 
  5477  0E25                     	;# 
  5478  0E26                     	;# 
  5479  0E27                     	;# 
  5480  0E28                     	;# 
  5481  0E29                     	;# 
  5482  0E2A                     	;# 
  5483  0E2B                     	;# 
  5484  0E2C                     	;# 
  5485  0E2D                     	;# 
  5486  0E2E                     	;# 
  5487  0E2F                     	;# 
  5488  0E30                     	;# 
  5489  0E31                     	;# 
  5490  0E32                     	;# 
  5491  0E33                     	;# 
  5492  0E34                     	;# 
  5493  0E35                     	;# 
  5494  0E36                     	;# 
  5495  0E37                     	;# 
  5496  0E8F                     	;# 
  5497  0E90                     	;# 
  5498  0E91                     	;# 
  5499  0E92                     	;# 
  5500  0E93                     	;# 
  5501  0E94                     	;# 
  5502  0E95                     	;# 
  5503  0E96                     	;# 
  5504  0E97                     	;# 
  5505  0E9C                     	;# 
  5506  0E9D                     	;# 
  5507  0E9E                     	;# 
  5508  0EA1                     	;# 
  5509  0EA2                     	;# 
  5510  0EA3                     	;# 
  5511  0EA4                     	;# 
  5512  0EA5                     	;# 
  5513  0EA9                     	;# 
  5514  0EAA                     	;# 
  5515  0EAB                     	;# 
  5516  0EAC                     	;# 
  5517  0EB1                     	;# 
  5518  0EB2                     	;# 
  5519  0EB3                     	;# 
  5520  0EB8                     	;# 
  5521  0EB9                     	;# 
  5522  0EBA                     	;# 
  5523  0EBB                     	;# 
  5524  0EBC                     	;# 
  5525  0EBD                     	;# 
  5526  0EBE                     	;# 
  5527  0EC3                     	;# 
  5528  0EC5                     	;# 
  5529  0EC6                     	;# 
  5530  0EC7                     	;# 
  5531  0EC8                     	;# 
  5532  0EC9                     	;# 
  5533  0ECA                     	;# 
  5534  0ECB                     	;# 
  5535  0ECC                     	;# 
  5536  0F10                     	;# 
  5537  0F11                     	;# 
  5538  0F12                     	;# 
  5539  0F13                     	;# 
  5540  0F14                     	;# 
  5541  0F15                     	;# 
  5542  0F16                     	;# 
  5543  0F17                     	;# 
  5544  0F18                     	;# 
  5545  0F19                     	;# 
  5546  0F1A                     	;# 
  5547  0F1B                     	;# 
  5548  0F1C                     	;# 
  5549  0F1D                     	;# 
  5550  0F1E                     	;# 
  5551  0F1F                     	;# 
  5552  0F20                     	;# 
  5553  0F21                     	;# 
  5554  0F22                     	;# 
  5555  0F23                     	;# 
  5556  0F24                     	;# 
  5557  0F25                     	;# 
  5558  0F26                     	;# 
  5559  0F27                     	;# 
  5560  0F28                     	;# 
  5561  0F29                     	;# 
  5562  0F2A                     	;# 
  5563  0F2B                     	;# 
  5564  0F2C                     	;# 
  5565  0F2D                     	;# 
  5566  0F2E                     	;# 
  5567  0F2F                     	;# 
  5568  0F30                     	;# 
  5569  0F31                     	;# 
  5570  0F32                     	;# 
  5571  0F38                     	;# 
  5572  0F39                     	;# 
  5573  0F3A                     	;# 
  5574  0F3B                     	;# 
  5575  0F3C                     	;# 
  5576  0F3D                     	;# 
  5577  0F3E                     	;# 
  5578  0F3F                     	;# 
  5579  0F40                     	;# 
  5580  0F41                     	;# 
  5581  0F43                     	;# 
  5582  0F44                     	;# 
  5583  0F45                     	;# 
  5584  0F46                     	;# 
  5585  0F47                     	;# 
  5586  0F48                     	;# 
  5587  0F49                     	;# 
  5588  0F4A                     	;# 
  5589  0F4B                     	;# 
  5590  0F4C                     	;# 
  5591  0F4E                     	;# 
  5592  0F4F                     	;# 
  5593  0F50                     	;# 
  5594  0F51                     	;# 
  5595  0F52                     	;# 
  5596  0F53                     	;# 
  5597  0F54                     	;# 
  5598  0F55                     	;# 
  5599  0F56                     	;# 
  5600  0F57                     	;# 
  5601  0F59                     	;# 
  5602  0F5A                     	;# 
  5603  0F5B                     	;# 
  5604  0F5C                     	;# 
  5605  0F5D                     	;# 
  5606  0F61                     	;# 
  5607  0F62                     	;# 
  5608  0F64                     	;# 
  5609  0F65                     	;# 
  5610  0F66                     	;# 
  5611  0F67                     	;# 
  5612  0F68                     	;# 
  5613  0F69                     	;# 
  5614  0F6A                     	;# 
  5615  0F6B                     	;# 
  5616  0F6C                     	;# 
  5617  0F6D                     	;# 
  5618  0FE4                     	;# 
  5619  0FE5                     	;# 
  5620  0FE6                     	;# 
  5621  0FE7                     	;# 
  5622  0FE8                     	;# 
  5623  0FE9                     	;# 
  5624  0FEA                     	;# 
  5625  0FEB                     	;# 
  5626  0FED                     	;# 
  5627  0FEE                     	;# 
  5628  0FEF                     	;# 
  5629  0000                     	;# 
  5630  0001                     	;# 
  5631  0002                     	;# 
  5632  0003                     	;# 
  5633  0004                     	;# 
  5634  0005                     	;# 
  5635  0006                     	;# 
  5636  0007                     	;# 
  5637  0008                     	;# 
  5638  0009                     	;# 
  5639  000A                     	;# 
  5640  000B                     	;# 
  5641  000C                     	;# 
  5642  000D                     	;# 
  5643  000E                     	;# 
  5644  000F                     	;# 
  5645  0010                     	;# 
  5646  0011                     	;# 
  5647  0012                     	;# 
  5648  0013                     	;# 
  5649  0014                     	;# 
  5650  0015                     	;# 
  5651  0016                     	;# 
  5652  0017                     	;# 
  5653  0018                     	;# 
  5654  0019                     	;# 
  5655  001A                     	;# 
  5656  001C                     	;# 
  5657  001C                     	;# 
  5658  001D                     	;# 
  5659  001D                     	;# 
  5660  001E                     	;# 
  5661  001F                     	;# 
  5662  008C                     	;# 
  5663  008C                     	;# 
  5664  008D                     	;# 
  5665  008E                     	;# 
  5666  008E                     	;# 
  5667  008F                     	;# 
  5668  0090                     	;# 
  5669  0090                     	;# 
  5670  0091                     	;# 
  5671  0093                     	;# 
  5672  0094                     	;# 
  5673  0095                     	;# 
  5674  0096                     	;# 
  5675  0097                     	;# 
  5676  0098                     	;# 
  5677  0099                     	;# 
  5678  009A                     	;# 
  5679  009B                     	;# 
  5680  009C                     	;# 
  5681  009D                     	;# 
  5682  009E                     	;# 
  5683  010C                     	;# 
  5684  010D                     	;# 
  5685  010E                     	;# 
  5686  010E                     	;# 
  5687  010F                     	;# 
  5688  0110                     	;# 
  5689  0110                     	;# 
  5690  0111                     	;# 
  5691  0112                     	;# 
  5692  0112                     	;# 
  5693  0113                     	;# 
  5694  0114                     	;# 
  5695  0114                     	;# 
  5696  0115                     	;# 
  5697  0116                     	;# 
  5698  0116                     	;# 
  5699  0117                     	;# 
  5700  0119                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  011A                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011B                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011C                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011D                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011E                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011F                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  018C                     	;# 
  5726  018D                     	;# 
  5727  018E                     	;# 
  5728  018F                     	;# 
  5729  0190                     	;# 
  5730  0191                     	;# 
  5731  0192                     	;# 
  5732  0196                     	;# 
  5733  0197                     	;# 
  5734  0198                     	;# 
  5735  0199                     	;# 
  5736  019A                     	;# 
  5737  019B                     	;# 
  5738  019C                     	;# 
  5739  020C                     	;# 
  5740  020C                     	;# 
  5741  020D                     	;# 
  5742  020E                     	;# 
  5743  020F                     	;# 
  5744  020F                     	;# 
  5745  0210                     	;# 
  5746  0210                     	;# 
  5747  0211                     	;# 
  5748  0211                     	;# 
  5749  0212                     	;# 
  5750  0212                     	;# 
  5751  0213                     	;# 
  5752  0214                     	;# 
  5753  0215                     	;# 
  5754  0215                     	;# 
  5755  0216                     	;# 
  5756  0216                     	;# 
  5757  0217                     	;# 
  5758  0217                     	;# 
  5759  0218                     	;# 
  5760  0218                     	;# 
  5761  0219                     	;# 
  5762  021A                     	;# 
  5763  021B                     	;# 
  5764  021B                     	;# 
  5765  021C                     	;# 
  5766  021C                     	;# 
  5767  021D                     	;# 
  5768  021D                     	;# 
  5769  021E                     	;# 
  5770  021F                     	;# 
  5771  028C                     	;# 
  5772  028C                     	;# 
  5773  028D                     	;# 
  5774  028D                     	;# 
  5775  028E                     	;# 
  5776  028F                     	;# 
  5777  0290                     	;# 
  5778  0290                     	;# 
  5779  0291                     	;# 
  5780  0292                     	;# 
  5781  0292                     	;# 
  5782  0293                     	;# 
  5783  0293                     	;# 
  5784  0294                     	;# 
  5785  0295                     	;# 
  5786  0296                     	;# 
  5787  0296                     	;# 
  5788  0297                     	;# 
  5789  0298                     	;# 
  5790  0298                     	;# 
  5791  0299                     	;# 
  5792  0299                     	;# 
  5793  029A                     	;# 
  5794  029B                     	;# 
  5795  029C                     	;# 
  5796  029C                     	;# 
  5797  029D                     	;# 
  5798  030C                     	;# 
  5799  030C                     	;# 
  5800  030D                     	;# 
  5801  030E                     	;# 
  5802  030F                     	;# 
  5803  0310                     	;# 
  5804  0310                     	;# 
  5805  0311                     	;# 
  5806  0312                     	;# 
  5807  0313                     	;# 
  5808  0314                     	;# 
  5809  0314                     	;# 
  5810  0315                     	;# 
  5811  0316                     	;# 
  5812  0317                     	;# 
  5813  0318                     	;# 
  5814  0318                     	;# 
  5815  0319                     	;# 
  5816  031A                     	;# 
  5817  031B                     	;# 
  5818  031C                     	;# 
  5819  031C                     	;# 
  5820  031D                     	;# 
  5821  031E                     	;# 
  5822  031F                     	;# 
  5823  038C                     	;# 
  5824  038C                     	;# 
  5825  038D                     	;# 
  5826  038E                     	;# 
  5827  0390                     	;# 
  5828  0390                     	;# 
  5829  0391                     	;# 
  5830  0392                     	;# 
  5831  040C                     	;# 
  5832  040D                     	;# 
  5833  040E                     	;# 
  5834  040F                     	;# 
  5835  0410                     	;# 
  5836  0411                     	;# 
  5837  0416                     	;# 
  5838  0416                     	;# 
  5839  0417                     	;# 
  5840  0418                     	;# 
  5841  0418                     	;# 
  5842  0419                     	;# 
  5843  041A                     	;# 
  5844  041A                     	;# 
  5845  041B                     	;# 
  5846  041C                     	;# 
  5847  041C                     	;# 
  5848  041D                     	;# 
  5849  041E                     	;# 
  5850  041F                     	;# 
  5851  048C                     	;# 
  5852  048C                     	;# 
  5853  048D                     	;# 
  5854  048E                     	;# 
  5855  048F                     	;# 
  5856  048F                     	;# 
  5857  0490                     	;# 
  5858  0491                     	;# 
  5859  0492                     	;# 
  5860  0492                     	;# 
  5861  0493                     	;# 
  5862  0494                     	;# 
  5863  0495                     	;# 
  5864  0495                     	;# 
  5865  0496                     	;# 
  5866  0497                     	;# 
  5867  0498                     	;# 
  5868  0499                     	;# 
  5869  049A                     	;# 
  5870  049B                     	;# 
  5871  049C                     	;# 
  5872  049D                     	;# 
  5873  050C                     	;# 
  5874  050C                     	;# 
  5875  050D                     	;# 
  5876  050E                     	;# 
  5877  050F                     	;# 
  5878  050F                     	;# 
  5879  0510                     	;# 
  5880  0511                     	;# 
  5881  0512                     	;# 
  5882  0512                     	;# 
  5883  0513                     	;# 
  5884  0514                     	;# 
  5885  0515                     	;# 
  5886  0515                     	;# 
  5887  0516                     	;# 
  5888  0517                     	;# 
  5889  0518                     	;# 
  5890  0519                     	;# 
  5891  051A                     	;# 
  5892  051B                     	;# 
  5893  051C                     	;# 
  5894  051D                     	;# 
  5895  058C                     	;# 
  5896  058C                     	;# 
  5897  058D                     	;# 
  5898  058E                     	;# 
  5899  058F                     	;# 
  5900  058F                     	;# 
  5901  0590                     	;# 
  5902  0591                     	;# 
  5903  0592                     	;# 
  5904  0593                     	;# 
  5905  060C                     	;# 
  5906  060D                     	;# 
  5907  060E                     	;# 
  5908  060F                     	;# 
  5909  0610                     	;# 
  5910  0611                     	;# 
  5911  0612                     	;# 
  5912  0613                     	;# 
  5913  0614                     	;# 
  5914  0616                     	;# 
  5915  0617                     	;# 
  5916  0618                     	;# 
  5917  0619                     	;# 
  5918  061A                     	;# 
  5919  061B                     	;# 
  5920  061C                     	;# 
  5921  061D                     	;# 
  5922  061E                     	;# 
  5923  068C                     	;# 
  5924  068D                     	;# 
  5925  068E                     	;# 
  5926  068F                     	;# 
  5927  0690                     	;# 
  5928  0691                     	;# 
  5929  0692                     	;# 
  5930  0693                     	;# 
  5931  0694                     	;# 
  5932  070C                     	;# 
  5933  070D                     	;# 
  5934  070E                     	;# 
  5935  070F                     	;# 
  5936  0710                     	;# 
  5937  0711                     	;# 
  5938  0712                     	;# 
  5939  0713                     	;# 
  5940  0714                     	;# 
  5941  0716                     	;# 
  5942  0717                     	;# 
  5943  0718                     	;# 
  5944  0719                     	;# 
  5945  071A                     	;# 
  5946  071B                     	;# 
  5947  071C                     	;# 
  5948  071D                     	;# 
  5949  071E                     	;# 
  5950  0796                     	;# 
  5951  0797                     	;# 
  5952  0798                     	;# 
  5953  0799                     	;# 
  5954  079A                     	;# 
  5955  079B                     	;# 
  5956  080C                     	;# 
  5957  080D                     	;# 
  5958  080E                     	;# 
  5959  080F                     	;# 
  5960  0810                     	;# 
  5961  0811                     	;# 
  5962  0812                     	;# 
  5963  0813                     	;# 
  5964  0814                     	;# 
  5965  081A                     	;# 
  5966  081B                     	;# 
  5967  081C                     	;# 
  5968  081D                     	;# 
  5969  081E                     	;# 
  5970  081F                     	;# 
  5971  088C                     	;# 
  5972  088D                     	;# 
  5973  088E                     	;# 
  5974  088F                     	;# 
  5975  0890                     	;# 
  5976  0891                     	;# 
  5977  0892                     	;# 
  5978  0893                     	;# 
  5979  0895                     	;# 
  5980  0896                     	;# 
  5981  0897                     	;# 
  5982  0898                     	;# 
  5983  0899                     	;# 
  5984  089A                     	;# 
  5985  089B                     	;# 
  5986  090C                     	;# 
  5987  090E                     	;# 
  5988  090F                     	;# 
  5989  091F                     	;# 
  5990  091F                     	;# 
  5991  098F                     	;# 
  5992  098F                     	;# 
  5993  0990                     	;# 
  5994  0991                     	;# 
  5995  0992                     	;# 
  5996  0993                     	;# 
  5997  0994                     	;# 
  5998  0995                     	;# 
  5999  0996                     	;# 
  6000  0997                     	;# 
  6001  0E0F                     	;# 
  6002  0E10                     	;# 
  6003  0E11                     	;# 
  6004  0E12                     	;# 
  6005  0E13                     	;# 
  6006  0E14                     	;# 
  6007  0E15                     	;# 
  6008  0E16                     	;# 
  6009  0E17                     	;# 
  6010  0E18                     	;# 
  6011  0E19                     	;# 
  6012  0E1A                     	;# 
  6013  0E1B                     	;# 
  6014  0E1C                     	;# 
  6015  0E1D                     	;# 
  6016  0E1E                     	;# 
  6017  0E1F                     	;# 
  6018  0E20                     	;# 
  6019  0E21                     	;# 
  6020  0E22                     	;# 
  6021  0E23                     	;# 
  6022  0E24                     	;# 
  6023  0E25                     	;# 
  6024  0E26                     	;# 
  6025  0E27                     	;# 
  6026  0E28                     	;# 
  6027  0E29                     	;# 
  6028  0E2A                     	;# 
  6029  0E2B                     	;# 
  6030  0E2C                     	;# 
  6031  0E2D                     	;# 
  6032  0E2E                     	;# 
  6033  0E2F                     	;# 
  6034  0E30                     	;# 
  6035  0E31                     	;# 
  6036  0E32                     	;# 
  6037  0E33                     	;# 
  6038  0E34                     	;# 
  6039  0E35                     	;# 
  6040  0E36                     	;# 
  6041  0E37                     	;# 
  6042  0E8F                     	;# 
  6043  0E90                     	;# 
  6044  0E91                     	;# 
  6045  0E92                     	;# 
  6046  0E93                     	;# 
  6047  0E94                     	;# 
  6048  0E95                     	;# 
  6049  0E96                     	;# 
  6050  0E97                     	;# 
  6051  0E9C                     	;# 
  6052  0E9D                     	;# 
  6053  0E9E                     	;# 
  6054  0EA1                     	;# 
  6055  0EA2                     	;# 
  6056  0EA3                     	;# 
  6057  0EA4                     	;# 
  6058  0EA5                     	;# 
  6059  0EA9                     	;# 
  6060  0EAA                     	;# 
  6061  0EAB                     	;# 
  6062  0EAC                     	;# 
  6063  0EB1                     	;# 
  6064  0EB2                     	;# 
  6065  0EB3                     	;# 
  6066  0EB8                     	;# 
  6067  0EB9                     	;# 
  6068  0EBA                     	;# 
  6069  0EBB                     	;# 
  6070  0EBC                     	;# 
  6071  0EBD                     	;# 
  6072  0EBE                     	;# 
  6073  0EC3                     	;# 
  6074  0EC5                     	;# 
  6075  0EC6                     	;# 
  6076  0EC7                     	;# 
  6077  0EC8                     	;# 
  6078  0EC9                     	;# 
  6079  0ECA                     	;# 
  6080  0ECB                     	;# 
  6081  0ECC                     	;# 
  6082  0F10                     	;# 
  6083  0F11                     	;# 
  6084  0F12                     	;# 
  6085  0F13                     	;# 
  6086  0F14                     	;# 
  6087  0F15                     	;# 
  6088  0F16                     	;# 
  6089  0F17                     	;# 
  6090  0F18                     	;# 
  6091  0F19                     	;# 
  6092  0F1A                     	;# 
  6093  0F1B                     	;# 
  6094  0F1C                     	;# 
  6095  0F1D                     	;# 
  6096  0F1E                     	;# 
  6097  0F1F                     	;# 
  6098  0F20                     	;# 
  6099  0F21                     	;# 
  6100  0F22                     	;# 
  6101  0F23                     	;# 
  6102  0F24                     	;# 
  6103  0F25                     	;# 
  6104  0F26                     	;# 
  6105  0F27                     	;# 
  6106  0F28                     	;# 
  6107  0F29                     	;# 
  6108  0F2A                     	;# 
  6109  0F2B                     	;# 
  6110  0F2C                     	;# 
  6111  0F2D                     	;# 
  6112  0F2E                     	;# 
  6113  0F2F                     	;# 
  6114  0F30                     	;# 
  6115  0F31                     	;# 
  6116  0F32                     	;# 
  6117  0F38                     	;# 
  6118  0F39                     	;# 
  6119  0F3A                     	;# 
  6120  0F3B                     	;# 
  6121  0F3C                     	;# 
  6122  0F3D                     	;# 
  6123  0F3E                     	;# 
  6124  0F3F                     	;# 
  6125  0F40                     	;# 
  6126  0F41                     	;# 
  6127  0F43                     	;# 
  6128  0F44                     	;# 
  6129  0F45                     	;# 
  6130  0F46                     	;# 
  6131  0F47                     	;# 
  6132  0F48                     	;# 
  6133  0F49                     	;# 
  6134  0F4A                     	;# 
  6135  0F4B                     	;# 
  6136  0F4C                     	;# 
  6137  0F4E                     	;# 
  6138  0F4F                     	;# 
  6139  0F50                     	;# 
  6140  0F51                     	;# 
  6141  0F52                     	;# 
  6142  0F53                     	;# 
  6143  0F54                     	;# 
  6144  0F55                     	;# 
  6145  0F56                     	;# 
  6146  0F57                     	;# 
  6147  0F59                     	;# 
  6148  0F5A                     	;# 
  6149  0F5B                     	;# 
  6150  0F5C                     	;# 
  6151  0F5D                     	;# 
  6152  0F61                     	;# 
  6153  0F62                     	;# 
  6154  0F64                     	;# 
  6155  0F65                     	;# 
  6156  0F66                     	;# 
  6157  0F67                     	;# 
  6158  0F68                     	;# 
  6159  0F69                     	;# 
  6160  0F6A                     	;# 
  6161  0F6B                     	;# 
  6162  0F6C                     	;# 
  6163  0F6D                     	;# 
  6164  0FE4                     	;# 
  6165  0FE5                     	;# 
  6166  0FE6                     	;# 
  6167  0FE7                     	;# 
  6168  0FE8                     	;# 
  6169  0FE9                     	;# 
  6170  0FEA                     	;# 
  6171  0FEB                     	;# 
  6172  0FED                     	;# 
  6173  0FEE                     	;# 
  6174  0FEF                     	;# 
  6175  0000                     	;# 
  6176  0001                     	;# 
  6177  0002                     	;# 
  6178  0003                     	;# 
  6179  0004                     	;# 
  6180  0005                     	;# 
  6181  0006                     	;# 
  6182  0007                     	;# 
  6183  0008                     	;# 
  6184  0009                     	;# 
  6185  000A                     	;# 
  6186  000B                     	;# 
  6187  000C                     	;# 
  6188  000D                     	;# 
  6189  000E                     	;# 
  6190  000F                     	;# 
  6191  0010                     	;# 
  6192  0011                     	;# 
  6193  0012                     	;# 
  6194  0013                     	;# 
  6195  0014                     	;# 
  6196  0015                     	;# 
  6197  0016                     	;# 
  6198  0017                     	;# 
  6199  0018                     	;# 
  6200  0019                     	;# 
  6201  001A                     	;# 
  6202  001C                     	;# 
  6203  001C                     	;# 
  6204  001D                     	;# 
  6205  001D                     	;# 
  6206  001E                     	;# 
  6207  001F                     	;# 
  6208  008C                     	;# 
  6209  008C                     	;# 
  6210  008D                     	;# 
  6211  008E                     	;# 
  6212  008E                     	;# 
  6213  008F                     	;# 
  6214  0090                     	;# 
  6215  0090                     	;# 
  6216  0091                     	;# 
  6217  0093                     	;# 
  6218  0094                     	;# 
  6219  0095                     	;# 
  6220  0096                     	;# 
  6221  0097                     	;# 
  6222  0098                     	;# 
  6223  0099                     	;# 
  6224  009A                     	;# 
  6225  009B                     	;# 
  6226  009C                     	;# 
  6227  009D                     	;# 
  6228  009E                     	;# 
  6229  010C                     	;# 
  6230  010D                     	;# 
  6231  010E                     	;# 
  6232  010E                     	;# 
  6233  010F                     	;# 
  6234  0110                     	;# 
  6235  0110                     	;# 
  6236  0111                     	;# 
  6237  0112                     	;# 
  6238  0112                     	;# 
  6239  0113                     	;# 
  6240  0114                     	;# 
  6241  0114                     	;# 
  6242  0115                     	;# 
  6243  0116                     	;# 
  6244  0116                     	;# 
  6245  0117                     	;# 
  6246  0119                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  011A                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011B                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011C                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011D                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011E                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011F                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  018C                     	;# 
  6272  018D                     	;# 
  6273  018E                     	;# 
  6274  018F                     	;# 
  6275  0190                     	;# 
  6276  0191                     	;# 
  6277  0192                     	;# 
  6278  0196                     	;# 
  6279  0197                     	;# 
  6280  0198                     	;# 
  6281  0199                     	;# 
  6282  019A                     	;# 
  6283  019B                     	;# 
  6284  019C                     	;# 
  6285  020C                     	;# 
  6286  020C                     	;# 
  6287  020D                     	;# 
  6288  020E                     	;# 
  6289  020F                     	;# 
  6290  020F                     	;# 
  6291  0210                     	;# 
  6292  0210                     	;# 
  6293  0211                     	;# 
  6294  0211                     	;# 
  6295  0212                     	;# 
  6296  0212                     	;# 
  6297  0213                     	;# 
  6298  0214                     	;# 
  6299  0215                     	;# 
  6300  0215                     	;# 
  6301  0216                     	;# 
  6302  0216                     	;# 
  6303  0217                     	;# 
  6304  0217                     	;# 
  6305  0218                     	;# 
  6306  0218                     	;# 
  6307  0219                     	;# 
  6308  021A                     	;# 
  6309  021B                     	;# 
  6310  021B                     	;# 
  6311  021C                     	;# 
  6312  021C                     	;# 
  6313  021D                     	;# 
  6314  021D                     	;# 
  6315  021E                     	;# 
  6316  021F                     	;# 
  6317  028C                     	;# 
  6318  028C                     	;# 
  6319  028D                     	;# 
  6320  028D                     	;# 
  6321  028E                     	;# 
  6322  028F                     	;# 
  6323  0290                     	;# 
  6324  0290                     	;# 
  6325  0291                     	;# 
  6326  0292                     	;# 
  6327  0292                     	;# 
  6328  0293                     	;# 
  6329  0293                     	;# 
  6330  0294                     	;# 
  6331  0295                     	;# 
  6332  0296                     	;# 
  6333  0296                     	;# 
  6334  0297                     	;# 
  6335  0298                     	;# 
  6336  0298                     	;# 
  6337  0299                     	;# 
  6338  0299                     	;# 
  6339  029A                     	;# 
  6340  029B                     	;# 
  6341  029C                     	;# 
  6342  029C                     	;# 
  6343  029D                     	;# 
  6344  030C                     	;# 
  6345  030C                     	;# 
  6346  030D                     	;# 
  6347  030E                     	;# 
  6348  030F                     	;# 
  6349  0310                     	;# 
  6350  0310                     	;# 
  6351  0311                     	;# 
  6352  0312                     	;# 
  6353  0313                     	;# 
  6354  0314                     	;# 
  6355  0314                     	;# 
  6356  0315                     	;# 
  6357  0316                     	;# 
  6358  0317                     	;# 
  6359  0318                     	;# 
  6360  0318                     	;# 
  6361  0319                     	;# 
  6362  031A                     	;# 
  6363  031B                     	;# 
  6364  031C                     	;# 
  6365  031C                     	;# 
  6366  031D                     	;# 
  6367  031E                     	;# 
  6368  031F                     	;# 
  6369  038C                     	;# 
  6370  038C                     	;# 
  6371  038D                     	;# 
  6372  038E                     	;# 
  6373  0390                     	;# 
  6374  0390                     	;# 
  6375  0391                     	;# 
  6376  0392                     	;# 
  6377  040C                     	;# 
  6378  040D                     	;# 
  6379  040E                     	;# 
  6380  040F                     	;# 
  6381  0410                     	;# 
  6382  0411                     	;# 
  6383  0416                     	;# 
  6384  0416                     	;# 
  6385  0417                     	;# 
  6386  0418                     	;# 
  6387  0418                     	;# 
  6388  0419                     	;# 
  6389  041A                     	;# 
  6390  041A                     	;# 
  6391  041B                     	;# 
  6392  041C                     	;# 
  6393  041C                     	;# 
  6394  041D                     	;# 
  6395  041E                     	;# 
  6396  041F                     	;# 
  6397  048C                     	;# 
  6398  048C                     	;# 
  6399  048D                     	;# 
  6400  048E                     	;# 
  6401  048F                     	;# 
  6402  048F                     	;# 
  6403  0490                     	;# 
  6404  0491                     	;# 
  6405  0492                     	;# 
  6406  0492                     	;# 
  6407  0493                     	;# 
  6408  0494                     	;# 
  6409  0495                     	;# 
  6410  0495                     	;# 
  6411  0496                     	;# 
  6412  0497                     	;# 
  6413  0498                     	;# 
  6414  0499                     	;# 
  6415  049A                     	;# 
  6416  049B                     	;# 
  6417  049C                     	;# 
  6418  049D                     	;# 
  6419  050C                     	;# 
  6420  050C                     	;# 
  6421  050D                     	;# 
  6422  050E                     	;# 
  6423  050F                     	;# 
  6424  050F                     	;# 
  6425  0510                     	;# 
  6426  0511                     	;# 
  6427  0512                     	;# 
  6428  0512                     	;# 
  6429  0513                     	;# 
  6430  0514                     	;# 
  6431  0515                     	;# 
  6432  0515                     	;# 
  6433  0516                     	;# 
  6434  0517                     	;# 
  6435  0518                     	;# 
  6436  0519                     	;# 
  6437  051A                     	;# 
  6438  051B                     	;# 
  6439  051C                     	;# 
  6440  051D                     	;# 
  6441  058C                     	;# 
  6442  058C                     	;# 
  6443  058D                     	;# 
  6444  058E                     	;# 
  6445  058F                     	;# 
  6446  058F                     	;# 
  6447  0590                     	;# 
  6448  0591                     	;# 
  6449  0592                     	;# 
  6450  0593                     	;# 
  6451  060C                     	;# 
  6452  060D                     	;# 
  6453  060E                     	;# 
  6454  060F                     	;# 
  6455  0610                     	;# 
  6456  0611                     	;# 
  6457  0612                     	;# 
  6458  0613                     	;# 
  6459  0614                     	;# 
  6460  0616                     	;# 
  6461  0617                     	;# 
  6462  0618                     	;# 
  6463  0619                     	;# 
  6464  061A                     	;# 
  6465  061B                     	;# 
  6466  061C                     	;# 
  6467  061D                     	;# 
  6468  061E                     	;# 
  6469  068C                     	;# 
  6470  068D                     	;# 
  6471  068E                     	;# 
  6472  068F                     	;# 
  6473  0690                     	;# 
  6474  0691                     	;# 
  6475  0692                     	;# 
  6476  0693                     	;# 
  6477  0694                     	;# 
  6478  070C                     	;# 
  6479  070D                     	;# 
  6480  070E                     	;# 
  6481  070F                     	;# 
  6482  0710                     	;# 
  6483  0711                     	;# 
  6484  0712                     	;# 
  6485  0713                     	;# 
  6486  0714                     	;# 
  6487  0716                     	;# 
  6488  0717                     	;# 
  6489  0718                     	;# 
  6490  0719                     	;# 
  6491  071A                     	;# 
  6492  071B                     	;# 
  6493  071C                     	;# 
  6494  071D                     	;# 
  6495  071E                     	;# 
  6496  0796                     	;# 
  6497  0797                     	;# 
  6498  0798                     	;# 
  6499  0799                     	;# 
  6500  079A                     	;# 
  6501  079B                     	;# 
  6502  080C                     	;# 
  6503  080D                     	;# 
  6504  080E                     	;# 
  6505  080F                     	;# 
  6506  0810                     	;# 
  6507  0811                     	;# 
  6508  0812                     	;# 
  6509  0813                     	;# 
  6510  0814                     	;# 
  6511  081A                     	;# 
  6512  081B                     	;# 
  6513  081C                     	;# 
  6514  081D                     	;# 
  6515  081E                     	;# 
  6516  081F                     	;# 
  6517  088C                     	;# 
  6518  088D                     	;# 
  6519  088E                     	;# 
  6520  088F                     	;# 
  6521  0890                     	;# 
  6522  0891                     	;# 
  6523  0892                     	;# 
  6524  0893                     	;# 
  6525  0895                     	;# 
  6526  0896                     	;# 
  6527  0897                     	;# 
  6528  0898                     	;# 
  6529  0899                     	;# 
  6530  089A                     	;# 
  6531  089B                     	;# 
  6532  090C                     	;# 
  6533  090E                     	;# 
  6534  090F                     	;# 
  6535  091F                     	;# 
  6536  091F                     	;# 
  6537  098F                     	;# 
  6538  098F                     	;# 
  6539  0990                     	;# 
  6540  0991                     	;# 
  6541  0992                     	;# 
  6542  0993                     	;# 
  6543  0994                     	;# 
  6544  0995                     	;# 
  6545  0996                     	;# 
  6546  0997                     	;# 
  6547  0E0F                     	;# 
  6548  0E10                     	;# 
  6549  0E11                     	;# 
  6550  0E12                     	;# 
  6551  0E13                     	;# 
  6552  0E14                     	;# 
  6553  0E15                     	;# 
  6554  0E16                     	;# 
  6555  0E17                     	;# 
  6556  0E18                     	;# 
  6557  0E19                     	;# 
  6558  0E1A                     	;# 
  6559  0E1B                     	;# 
  6560  0E1C                     	;# 
  6561  0E1D                     	;# 
  6562  0E1E                     	;# 
  6563  0E1F                     	;# 
  6564  0E20                     	;# 
  6565  0E21                     	;# 
  6566  0E22                     	;# 
  6567  0E23                     	;# 
  6568  0E24                     	;# 
  6569  0E25                     	;# 
  6570  0E26                     	;# 
  6571  0E27                     	;# 
  6572  0E28                     	;# 
  6573  0E29                     	;# 
  6574  0E2A                     	;# 
  6575  0E2B                     	;# 
  6576  0E2C                     	;# 
  6577  0E2D                     	;# 
  6578  0E2E                     	;# 
  6579  0E2F                     	;# 
  6580  0E30                     	;# 
  6581  0E31                     	;# 
  6582  0E32                     	;# 
  6583  0E33                     	;# 
  6584  0E34                     	;# 
  6585  0E35                     	;# 
  6586  0E36                     	;# 
  6587  0E37                     	;# 
  6588  0E8F                     	;# 
  6589  0E90                     	;# 
  6590  0E91                     	;# 
  6591  0E92                     	;# 
  6592  0E93                     	;# 
  6593  0E94                     	;# 
  6594  0E95                     	;# 
  6595  0E96                     	;# 
  6596  0E97                     	;# 
  6597  0E9C                     	;# 
  6598  0E9D                     	;# 
  6599  0E9E                     	;# 
  6600  0EA1                     	;# 
  6601  0EA2                     	;# 
  6602  0EA3                     	;# 
  6603  0EA4                     	;# 
  6604  0EA5                     	;# 
  6605  0EA9                     	;# 
  6606  0EAA                     	;# 
  6607  0EAB                     	;# 
  6608  0EAC                     	;# 
  6609  0EB1                     	;# 
  6610  0EB2                     	;# 
  6611  0EB3                     	;# 
  6612  0EB8                     	;# 
  6613  0EB9                     	;# 
  6614  0EBA                     	;# 
  6615  0EBB                     	;# 
  6616  0EBC                     	;# 
  6617  0EBD                     	;# 
  6618  0EBE                     	;# 
  6619  0EC3                     	;# 
  6620  0EC5                     	;# 
  6621  0EC6                     	;# 
  6622  0EC7                     	;# 
  6623  0EC8                     	;# 
  6624  0EC9                     	;# 
  6625  0ECA                     	;# 
  6626  0ECB                     	;# 
  6627  0ECC                     	;# 
  6628  0F10                     	;# 
  6629  0F11                     	;# 
  6630  0F12                     	;# 
  6631  0F13                     	;# 
  6632  0F14                     	;# 
  6633  0F15                     	;# 
  6634  0F16                     	;# 
  6635  0F17                     	;# 
  6636  0F18                     	;# 
  6637  0F19                     	;# 
  6638  0F1A                     	;# 
  6639  0F1B                     	;# 
  6640  0F1C                     	;# 
  6641  0F1D                     	;# 
  6642  0F1E                     	;# 
  6643  0F1F                     	;# 
  6644  0F20                     	;# 
  6645  0F21                     	;# 
  6646  0F22                     	;# 
  6647  0F23                     	;# 
  6648  0F24                     	;# 
  6649  0F25                     	;# 
  6650  0F26                     	;# 
  6651  0F27                     	;# 
  6652  0F28                     	;# 
  6653  0F29                     	;# 
  6654  0F2A                     	;# 
  6655  0F2B                     	;# 
  6656  0F2C                     	;# 
  6657  0F2D                     	;# 
  6658  0F2E                     	;# 
  6659  0F2F                     	;# 
  6660  0F30                     	;# 
  6661  0F31                     	;# 
  6662  0F32                     	;# 
  6663  0F38                     	;# 
  6664  0F39                     	;# 
  6665  0F3A                     	;# 
  6666  0F3B                     	;# 
  6667  0F3C                     	;# 
  6668  0F3D                     	;# 
  6669  0F3E                     	;# 
  6670  0F3F                     	;# 
  6671  0F40                     	;# 
  6672  0F41                     	;# 
  6673  0F43                     	;# 
  6674  0F44                     	;# 
  6675  0F45                     	;# 
  6676  0F46                     	;# 
  6677  0F47                     	;# 
  6678  0F48                     	;# 
  6679  0F49                     	;# 
  6680  0F4A                     	;# 
  6681  0F4B                     	;# 
  6682  0F4C                     	;# 
  6683  0F4E                     	;# 
  6684  0F4F                     	;# 
  6685  0F50                     	;# 
  6686  0F51                     	;# 
  6687  0F52                     	;# 
  6688  0F53                     	;# 
  6689  0F54                     	;# 
  6690  0F55                     	;# 
  6691  0F56                     	;# 
  6692  0F57                     	;# 
  6693  0F59                     	;# 
  6694  0F5A                     	;# 
  6695  0F5B                     	;# 
  6696  0F5C                     	;# 
  6697  0F5D                     	;# 
  6698  0F61                     	;# 
  6699  0F62                     	;# 
  6700  0F64                     	;# 
  6701  0F65                     	;# 
  6702  0F66                     	;# 
  6703  0F67                     	;# 
  6704  0F68                     	;# 
  6705  0F69                     	;# 
  6706  0F6A                     	;# 
  6707  0F6B                     	;# 
  6708  0F6C                     	;# 
  6709  0F6D                     	;# 
  6710  0FE4                     	;# 
  6711  0FE5                     	;# 
  6712  0FE6                     	;# 
  6713  0FE7                     	;# 
  6714  0FE8                     	;# 
  6715  0FE9                     	;# 
  6716  0FEA                     	;# 
  6717  0FEB                     	;# 
  6718  0FED                     	;# 
  6719  0FEE                     	;# 
  6720  0FEF                     	;# 
  6721  0000                     	;# 
  6722  0001                     	;# 
  6723  0002                     	;# 
  6724  0003                     	;# 
  6725  0004                     	;# 
  6726  0005                     	;# 
  6727  0006                     	;# 
  6728  0007                     	;# 
  6729  0008                     	;# 
  6730  0009                     	;# 
  6731  000A                     	;# 
  6732  000B                     	;# 
  6733  000C                     	;# 
  6734  000D                     	;# 
  6735  000E                     	;# 
  6736  000F                     	;# 
  6737  0010                     	;# 
  6738  0011                     	;# 
  6739  0012                     	;# 
  6740  0013                     	;# 
  6741  0014                     	;# 
  6742  0015                     	;# 
  6743  0016                     	;# 
  6744  0017                     	;# 
  6745  0018                     	;# 
  6746  0019                     	;# 
  6747  001A                     	;# 
  6748  001C                     	;# 
  6749  001C                     	;# 
  6750  001D                     	;# 
  6751  001D                     	;# 
  6752  001E                     	;# 
  6753  001F                     	;# 
  6754  008C                     	;# 
  6755  008C                     	;# 
  6756  008D                     	;# 
  6757  008E                     	;# 
  6758  008E                     	;# 
  6759  008F                     	;# 
  6760  0090                     	;# 
  6761  0090                     	;# 
  6762  0091                     	;# 
  6763  0093                     	;# 
  6764  0094                     	;# 
  6765  0095                     	;# 
  6766  0096                     	;# 
  6767  0097                     	;# 
  6768  0098                     	;# 
  6769  0099                     	;# 
  6770  009A                     	;# 
  6771  009B                     	;# 
  6772  009C                     	;# 
  6773  009D                     	;# 
  6774  009E                     	;# 
  6775  010C                     	;# 
  6776  010D                     	;# 
  6777  010E                     	;# 
  6778  010E                     	;# 
  6779  010F                     	;# 
  6780  0110                     	;# 
  6781  0110                     	;# 
  6782  0111                     	;# 
  6783  0112                     	;# 
  6784  0112                     	;# 
  6785  0113                     	;# 
  6786  0114                     	;# 
  6787  0114                     	;# 
  6788  0115                     	;# 
  6789  0116                     	;# 
  6790  0116                     	;# 
  6791  0117                     	;# 
  6792  0119                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  011A                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011B                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011C                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011D                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011E                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011F                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  018C                     	;# 
  6818  018D                     	;# 
  6819  018E                     	;# 
  6820  018F                     	;# 
  6821  0190                     	;# 
  6822  0191                     	;# 
  6823  0192                     	;# 
  6824  0196                     	;# 
  6825  0197                     	;# 
  6826  0198                     	;# 
  6827  0199                     	;# 
  6828  019A                     	;# 
  6829  019B                     	;# 
  6830  019C                     	;# 
  6831  020C                     	;# 
  6832  020C                     	;# 
  6833  020D                     	;# 
  6834  020E                     	;# 
  6835  020F                     	;# 
  6836  020F                     	;# 
  6837  0210                     	;# 
  6838  0210                     	;# 
  6839  0211                     	;# 
  6840  0211                     	;# 
  6841  0212                     	;# 
  6842  0212                     	;# 
  6843  0213                     	;# 
  6844  0214                     	;# 
  6845  0215                     	;# 
  6846  0215                     	;# 
  6847  0216                     	;# 
  6848  0216                     	;# 
  6849  0217                     	;# 
  6850  0217                     	;# 
  6851  0218                     	;# 
  6852  0218                     	;# 
  6853  0219                     	;# 
  6854  021A                     	;# 
  6855  021B                     	;# 
  6856  021B                     	;# 
  6857  021C                     	;# 
  6858  021C                     	;# 
  6859  021D                     	;# 
  6860  021D                     	;# 
  6861  021E                     	;# 
  6862  021F                     	;# 
  6863  028C                     	;# 
  6864  028C                     	;# 
  6865  028D                     	;# 
  6866  028D                     	;# 
  6867  028E                     	;# 
  6868  028F                     	;# 
  6869  0290                     	;# 
  6870  0290                     	;# 
  6871  0291                     	;# 
  6872  0292                     	;# 
  6873  0292                     	;# 
  6874  0293                     	;# 
  6875  0293                     	;# 
  6876  0294                     	;# 
  6877  0295                     	;# 
  6878  0296                     	;# 
  6879  0296                     	;# 
  6880  0297                     	;# 
  6881  0298                     	;# 
  6882  0298                     	;# 
  6883  0299                     	;# 
  6884  0299                     	;# 
  6885  029A                     	;# 
  6886  029B                     	;# 
  6887  029C                     	;# 
  6888  029C                     	;# 
  6889  029D                     	;# 
  6890  030C                     	;# 
  6891  030C                     	;# 
  6892  030D                     	;# 
  6893  030E                     	;# 
  6894  030F                     	;# 
  6895  0310                     	;# 
  6896  0310                     	;# 
  6897  0311                     	;# 
  6898  0312                     	;# 
  6899  0313                     	;# 
  6900  0314                     	;# 
  6901  0314                     	;# 
  6902  0315                     	;# 
  6903  0316                     	;# 
  6904  0317                     	;# 
  6905  0318                     	;# 
  6906  0318                     	;# 
  6907  0319                     	;# 
  6908  031A                     	;# 
  6909  031B                     	;# 
  6910  031C                     	;# 
  6911  031C                     	;# 
  6912  031D                     	;# 
  6913  031E                     	;# 
  6914  031F                     	;# 
  6915  038C                     	;# 
  6916  038C                     	;# 
  6917  038D                     	;# 
  6918  038E                     	;# 
  6919  0390                     	;# 
  6920  0390                     	;# 
  6921  0391                     	;# 
  6922  0392                     	;# 
  6923  040C                     	;# 
  6924  040D                     	;# 
  6925  040E                     	;# 
  6926  040F                     	;# 
  6927  0410                     	;# 
  6928  0411                     	;# 
  6929  0416                     	;# 
  6930  0416                     	;# 
  6931  0417                     	;# 
  6932  0418                     	;# 
  6933  0418                     	;# 
  6934  0419                     	;# 
  6935  041A                     	;# 
  6936  041A                     	;# 
  6937  041B                     	;# 
  6938  041C                     	;# 
  6939  041C                     	;# 
  6940  041D                     	;# 
  6941  041E                     	;# 
  6942  041F                     	;# 
  6943  048C                     	;# 
  6944  048C                     	;# 
  6945  048D                     	;# 
  6946  048E                     	;# 
  6947  048F                     	;# 
  6948  048F                     	;# 
  6949  0490                     	;# 
  6950  0491                     	;# 
  6951  0492                     	;# 
  6952  0492                     	;# 
  6953  0493                     	;# 
  6954  0494                     	;# 
  6955  0495                     	;# 
  6956  0495                     	;# 
  6957  0496                     	;# 
  6958  0497                     	;# 
  6959  0498                     	;# 
  6960  0499                     	;# 
  6961  049A                     	;# 
  6962  049B                     	;# 
  6963  049C                     	;# 
  6964  049D                     	;# 
  6965  050C                     	;# 
  6966  050C                     	;# 
  6967  050D                     	;# 
  6968  050E                     	;# 
  6969  050F                     	;# 
  6970  050F                     	;# 
  6971  0510                     	;# 
  6972  0511                     	;# 
  6973  0512                     	;# 
  6974  0512                     	;# 
  6975  0513                     	;# 
  6976  0514                     	;# 
  6977  0515                     	;# 
  6978  0515                     	;# 
  6979  0516                     	;# 
  6980  0517                     	;# 
  6981  0518                     	;# 
  6982  0519                     	;# 
  6983  051A                     	;# 
  6984  051B                     	;# 
  6985  051C                     	;# 
  6986  051D                     	;# 
  6987  058C                     	;# 
  6988  058C                     	;# 
  6989  058D                     	;# 
  6990  058E                     	;# 
  6991  058F                     	;# 
  6992  058F                     	;# 
  6993  0590                     	;# 
  6994  0591                     	;# 
  6995  0592                     	;# 
  6996  0593                     	;# 
  6997  060C                     	;# 
  6998  060D                     	;# 
  6999  060E                     	;# 
  7000  060F                     	;# 
  7001  0610                     	;# 
  7002  0611                     	;# 
  7003  0612                     	;# 
  7004  0613                     	;# 
  7005  0614                     	;# 
  7006  0616                     	;# 
  7007  0617                     	;# 
  7008  0618                     	;# 
  7009  0619                     	;# 
  7010  061A                     	;# 
  7011  061B                     	;# 
  7012  061C                     	;# 
  7013  061D                     	;# 
  7014  061E                     	;# 
  7015  068C                     	;# 
  7016  068D                     	;# 
  7017  068E                     	;# 
  7018  068F                     	;# 
  7019  0690                     	;# 
  7020  0691                     	;# 
  7021  0692                     	;# 
  7022  0693                     	;# 
  7023  0694                     	;# 
  7024  070C                     	;# 
  7025  070D                     	;# 
  7026  070E                     	;# 
  7027  070F                     	;# 
  7028  0710                     	;# 
  7029  0711                     	;# 
  7030  0712                     	;# 
  7031  0713                     	;# 
  7032  0714                     	;# 
  7033  0716                     	;# 
  7034  0717                     	;# 
  7035  0718                     	;# 
  7036  0719                     	;# 
  7037  071A                     	;# 
  7038  071B                     	;# 
  7039  071C                     	;# 
  7040  071D                     	;# 
  7041  071E                     	;# 
  7042  0796                     	;# 
  7043  0797                     	;# 
  7044  0798                     	;# 
  7045  0799                     	;# 
  7046  079A                     	;# 
  7047  079B                     	;# 
  7048  080C                     	;# 
  7049  080D                     	;# 
  7050  080E                     	;# 
  7051  080F                     	;# 
  7052  0810                     	;# 
  7053  0811                     	;# 
  7054  0812                     	;# 
  7055  0813                     	;# 
  7056  0814                     	;# 
  7057  081A                     	;# 
  7058  081B                     	;# 
  7059  081C                     	;# 
  7060  081D                     	;# 
  7061  081E                     	;# 
  7062  081F                     	;# 
  7063  088C                     	;# 
  7064  088D                     	;# 
  7065  088E                     	;# 
  7066  088F                     	;# 
  7067  0890                     	;# 
  7068  0891                     	;# 
  7069  0892                     	;# 
  7070  0893                     	;# 
  7071  0895                     	;# 
  7072  0896                     	;# 
  7073  0897                     	;# 
  7074  0898                     	;# 
  7075  0899                     	;# 
  7076  089A                     	;# 
  7077  089B                     	;# 
  7078  090C                     	;# 
  7079  090E                     	;# 
  7080  090F                     	;# 
  7081  091F                     	;# 
  7082  091F                     	;# 
  7083  098F                     	;# 
  7084  098F                     	;# 
  7085  0990                     	;# 
  7086  0991                     	;# 
  7087  0992                     	;# 
  7088  0993                     	;# 
  7089  0994                     	;# 
  7090  0995                     	;# 
  7091  0996                     	;# 
  7092  0997                     	;# 
  7093  0E0F                     	;# 
  7094  0E10                     	;# 
  7095  0E11                     	;# 
  7096  0E12                     	;# 
  7097  0E13                     	;# 
  7098  0E14                     	;# 
  7099  0E15                     	;# 
  7100  0E16                     	;# 
  7101  0E17                     	;# 
  7102  0E18                     	;# 
  7103  0E19                     	;# 
  7104  0E1A                     	;# 
  7105  0E1B                     	;# 
  7106  0E1C                     	;# 
  7107  0E1D                     	;# 
  7108  0E1E                     	;# 
  7109  0E1F                     	;# 
  7110  0E20                     	;# 
  7111  0E21                     	;# 
  7112  0E22                     	;# 
  7113  0E23                     	;# 
  7114  0E24                     	;# 
  7115  0E25                     	;# 
  7116  0E26                     	;# 
  7117  0E27                     	;# 
  7118  0E28                     	;# 
  7119  0E29                     	;# 
  7120  0E2A                     	;# 
  7121  0E2B                     	;# 
  7122  0E2C                     	;# 
  7123  0E2D                     	;# 
  7124  0E2E                     	;# 
  7125  0E2F                     	;# 
  7126  0E30                     	;# 
  7127  0E31                     	;# 
  7128  0E32                     	;# 
  7129  0E33                     	;# 
  7130  0E34                     	;# 
  7131  0E35                     	;# 
  7132  0E36                     	;# 
  7133  0E37                     	;# 
  7134  0E8F                     	;# 
  7135  0E90                     	;# 
  7136  0E91                     	;# 
  7137  0E92                     	;# 
  7138  0E93                     	;# 
  7139  0E94                     	;# 
  7140  0E95                     	;# 
  7141  0E96                     	;# 
  7142  0E97                     	;# 
  7143  0E9C                     	;# 
  7144  0E9D                     	;# 
  7145  0E9E                     	;# 
  7146  0EA1                     	;# 
  7147  0EA2                     	;# 
  7148  0EA3                     	;# 
  7149  0EA4                     	;# 
  7150  0EA5                     	;# 
  7151  0EA9                     	;# 
  7152  0EAA                     	;# 
  7153  0EAB                     	;# 
  7154  0EAC                     	;# 
  7155  0EB1                     	;# 
  7156  0EB2                     	;# 
  7157  0EB3                     	;# 
  7158  0EB8                     	;# 
  7159  0EB9                     	;# 
  7160  0EBA                     	;# 
  7161  0EBB                     	;# 
  7162  0EBC                     	;# 
  7163  0EBD                     	;# 
  7164  0EBE                     	;# 
  7165  0EC3                     	;# 
  7166  0EC5                     	;# 
  7167  0EC6                     	;# 
  7168  0EC7                     	;# 
  7169  0EC8                     	;# 
  7170  0EC9                     	;# 
  7171  0ECA                     	;# 
  7172  0ECB                     	;# 
  7173  0ECC                     	;# 
  7174  0F10                     	;# 
  7175  0F11                     	;# 
  7176  0F12                     	;# 
  7177  0F13                     	;# 
  7178  0F14                     	;# 
  7179  0F15                     	;# 
  7180  0F16                     	;# 
  7181  0F17                     	;# 
  7182  0F18                     	;# 
  7183  0F19                     	;# 
  7184  0F1A                     	;# 
  7185  0F1B                     	;# 
  7186  0F1C                     	;# 
  7187  0F1D                     	;# 
  7188  0F1E                     	;# 
  7189  0F1F                     	;# 
  7190  0F20                     	;# 
  7191  0F21                     	;# 
  7192  0F22                     	;# 
  7193  0F23                     	;# 
  7194  0F24                     	;# 
  7195  0F25                     	;# 
  7196  0F26                     	;# 
  7197  0F27                     	;# 
  7198  0F28                     	;# 
  7199  0F29                     	;# 
  7200  0F2A                     	;# 
  7201  0F2B                     	;# 
  7202  0F2C                     	;# 
  7203  0F2D                     	;# 
  7204  0F2E                     	;# 
  7205  0F2F                     	;# 
  7206  0F30                     	;# 
  7207  0F31                     	;# 
  7208  0F32                     	;# 
  7209  0F38                     	;# 
  7210  0F39                     	;# 
  7211  0F3A                     	;# 
  7212  0F3B                     	;# 
  7213  0F3C                     	;# 
  7214  0F3D                     	;# 
  7215  0F3E                     	;# 
  7216  0F3F                     	;# 
  7217  0F40                     	;# 
  7218  0F41                     	;# 
  7219  0F43                     	;# 
  7220  0F44                     	;# 
  7221  0F45                     	;# 
  7222  0F46                     	;# 
  7223  0F47                     	;# 
  7224  0F48                     	;# 
  7225  0F49                     	;# 
  7226  0F4A                     	;# 
  7227  0F4B                     	;# 
  7228  0F4C                     	;# 
  7229  0F4E                     	;# 
  7230  0F4F                     	;# 
  7231  0F50                     	;# 
  7232  0F51                     	;# 
  7233  0F52                     	;# 
  7234  0F53                     	;# 
  7235  0F54                     	;# 
  7236  0F55                     	;# 
  7237  0F56                     	;# 
  7238  0F57                     	;# 
  7239  0F59                     	;# 
  7240  0F5A                     	;# 
  7241  0F5B                     	;# 
  7242  0F5C                     	;# 
  7243  0F5D                     	;# 
  7244  0F61                     	;# 
  7245  0F62                     	;# 
  7246  0F64                     	;# 
  7247  0F65                     	;# 
  7248  0F66                     	;# 
  7249  0F67                     	;# 
  7250  0F68                     	;# 
  7251  0F69                     	;# 
  7252  0F6A                     	;# 
  7253  0F6B                     	;# 
  7254  0F6C                     	;# 
  7255  0F6D                     	;# 
  7256  0FE4                     	;# 
  7257  0FE5                     	;# 
  7258  0FE6                     	;# 
  7259  0FE7                     	;# 
  7260  0FE8                     	;# 
  7261  0FE9                     	;# 
  7262  0FEA                     	;# 
  7263  0FEB                     	;# 
  7264  0FED                     	;# 
  7265  0FEE                     	;# 
  7266  0FEF                     	;# 
  7267  0000                     	;# 
  7268  0001                     	;# 
  7269  0002                     	;# 
  7270  0003                     	;# 
  7271  0004                     	;# 
  7272  0005                     	;# 
  7273  0006                     	;# 
  7274  0007                     	;# 
  7275  0008                     	;# 
  7276  0009                     	;# 
  7277  000A                     	;# 
  7278  000B                     	;# 
  7279  000C                     	;# 
  7280  000D                     	;# 
  7281  000E                     	;# 
  7282  000F                     	;# 
  7283  0010                     	;# 
  7284  0011                     	;# 
  7285  0012                     	;# 
  7286  0013                     	;# 
  7287  0014                     	;# 
  7288  0015                     	;# 
  7289  0016                     	;# 
  7290  0017                     	;# 
  7291  0018                     	;# 
  7292  0019                     	;# 
  7293  001A                     	;# 
  7294  001C                     	;# 
  7295  001C                     	;# 
  7296  001D                     	;# 
  7297  001D                     	;# 
  7298  001E                     	;# 
  7299  001F                     	;# 
  7300  008C                     	;# 
  7301  008C                     	;# 
  7302  008D                     	;# 
  7303  008E                     	;# 
  7304  008E                     	;# 
  7305  008F                     	;# 
  7306  0090                     	;# 
  7307  0090                     	;# 
  7308  0091                     	;# 
  7309  0093                     	;# 
  7310  0094                     	;# 
  7311  0095                     	;# 
  7312  0096                     	;# 
  7313  0097                     	;# 
  7314  0098                     	;# 
  7315  0099                     	;# 
  7316  009A                     	;# 
  7317  009B                     	;# 
  7318  009C                     	;# 
  7319  009D                     	;# 
  7320  009E                     	;# 
  7321  010C                     	;# 
  7322  010D                     	;# 
  7323  010E                     	;# 
  7324  010E                     	;# 
  7325  010F                     	;# 
  7326  0110                     	;# 
  7327  0110                     	;# 
  7328  0111                     	;# 
  7329  0112                     	;# 
  7330  0112                     	;# 
  7331  0113                     	;# 
  7332  0114                     	;# 
  7333  0114                     	;# 
  7334  0115                     	;# 
  7335  0116                     	;# 
  7336  0116                     	;# 
  7337  0117                     	;# 
  7338  0119                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  011A                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011B                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011C                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011D                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011E                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011F                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  018C                     	;# 
  7364  018D                     	;# 
  7365  018E                     	;# 
  7366  018F                     	;# 
  7367  0190                     	;# 
  7368  0191                     	;# 
  7369  0192                     	;# 
  7370  0196                     	;# 
  7371  0197                     	;# 
  7372  0198                     	;# 
  7373  0199                     	;# 
  7374  019A                     	;# 
  7375  019B                     	;# 
  7376  019C                     	;# 
  7377  020C                     	;# 
  7378  020C                     	;# 
  7379  020D                     	;# 
  7380  020E                     	;# 
  7381  020F                     	;# 
  7382  020F                     	;# 
  7383  0210                     	;# 
  7384  0210                     	;# 
  7385  0211                     	;# 
  7386  0211                     	;# 
  7387  0212                     	;# 
  7388  0212                     	;# 
  7389  0213                     	;# 
  7390  0214                     	;# 
  7391  0215                     	;# 
  7392  0215                     	;# 
  7393  0216                     	;# 
  7394  0216                     	;# 
  7395  0217                     	;# 
  7396  0217                     	;# 
  7397  0218                     	;# 
  7398  0218                     	;# 
  7399  0219                     	;# 
  7400  021A                     	;# 
  7401  021B                     	;# 
  7402  021B                     	;# 
  7403  021C                     	;# 
  7404  021C                     	;# 
  7405  021D                     	;# 
  7406  021D                     	;# 
  7407  021E                     	;# 
  7408  021F                     	;# 
  7409  028C                     	;# 
  7410  028C                     	;# 
  7411  028D                     	;# 
  7412  028D                     	;# 
  7413  028E                     	;# 
  7414  028F                     	;# 
  7415  0290                     	;# 
  7416  0290                     	;# 
  7417  0291                     	;# 
  7418  0292                     	;# 
  7419  0292                     	;# 
  7420  0293                     	;# 
  7421  0293                     	;# 
  7422  0294                     	;# 
  7423  0295                     	;# 
  7424  0296                     	;# 
  7425  0296                     	;# 
  7426  0297                     	;# 
  7427  0298                     	;# 
  7428  0298                     	;# 
  7429  0299                     	;# 
  7430  0299                     	;# 
  7431  029A                     	;# 
  7432  029B                     	;# 
  7433  029C                     	;# 
  7434  029C                     	;# 
  7435  029D                     	;# 
  7436  030C                     	;# 
  7437  030C                     	;# 
  7438  030D                     	;# 
  7439  030E                     	;# 
  7440  030F                     	;# 
  7441  0310                     	;# 
  7442  0310                     	;# 
  7443  0311                     	;# 
  7444  0312                     	;# 
  7445  0313                     	;# 
  7446  0314                     	;# 
  7447  0314                     	;# 
  7448  0315                     	;# 
  7449  0316                     	;# 
  7450  0317                     	;# 
  7451  0318                     	;# 
  7452  0318                     	;# 
  7453  0319                     	;# 
  7454  031A                     	;# 
  7455  031B                     	;# 
  7456  031C                     	;# 
  7457  031C                     	;# 
  7458  031D                     	;# 
  7459  031E                     	;# 
  7460  031F                     	;# 
  7461  038C                     	;# 
  7462  038C                     	;# 
  7463  038D                     	;# 
  7464  038E                     	;# 
  7465  0390                     	;# 
  7466  0390                     	;# 
  7467  0391                     	;# 
  7468  0392                     	;# 
  7469  040C                     	;# 
  7470  040D                     	;# 
  7471  040E                     	;# 
  7472  040F                     	;# 
  7473  0410                     	;# 
  7474  0411                     	;# 
  7475  0416                     	;# 
  7476  0416                     	;# 
  7477  0417                     	;# 
  7478  0418                     	;# 
  7479  0418                     	;# 
  7480  0419                     	;# 
  7481  041A                     	;# 
  7482  041A                     	;# 
  7483  041B                     	;# 
  7484  041C                     	;# 
  7485  041C                     	;# 
  7486  041D                     	;# 
  7487  041E                     	;# 
  7488  041F                     	;# 
  7489  048C                     	;# 
  7490  048C                     	;# 
  7491  048D                     	;# 
  7492  048E                     	;# 
  7493  048F                     	;# 
  7494  048F                     	;# 
  7495  0490                     	;# 
  7496  0491                     	;# 
  7497  0492                     	;# 
  7498  0492                     	;# 
  7499  0493                     	;# 
  7500  0494                     	;# 
  7501  0495                     	;# 
  7502  0495                     	;# 
  7503  0496                     	;# 
  7504  0497                     	;# 
  7505  0498                     	;# 
  7506  0499                     	;# 
  7507  049A                     	;# 
  7508  049B                     	;# 
  7509  049C                     	;# 
  7510  049D                     	;# 
  7511  050C                     	;# 
  7512  050C                     	;# 
  7513  050D                     	;# 
  7514  050E                     	;# 
  7515  050F                     	;# 
  7516  050F                     	;# 
  7517  0510                     	;# 
  7518  0511                     	;# 
  7519  0512                     	;# 
  7520  0512                     	;# 
  7521  0513                     	;# 
  7522  0514                     	;# 
  7523  0515                     	;# 
  7524  0515                     	;# 
  7525  0516                     	;# 
  7526  0517                     	;# 
  7527  0518                     	;# 
  7528  0519                     	;# 
  7529  051A                     	;# 
  7530  051B                     	;# 
  7531  051C                     	;# 
  7532  051D                     	;# 
  7533  058C                     	;# 
  7534  058C                     	;# 
  7535  058D                     	;# 
  7536  058E                     	;# 
  7537  058F                     	;# 
  7538  058F                     	;# 
  7539  0590                     	;# 
  7540  0591                     	;# 
  7541  0592                     	;# 
  7542  0593                     	;# 
  7543  060C                     	;# 
  7544  060D                     	;# 
  7545  060E                     	;# 
  7546  060F                     	;# 
  7547  0610                     	;# 
  7548  0611                     	;# 
  7549  0612                     	;# 
  7550  0613                     	;# 
  7551  0614                     	;# 
  7552  0616                     	;# 
  7553  0617                     	;# 
  7554  0618                     	;# 
  7555  0619                     	;# 
  7556  061A                     	;# 
  7557  061B                     	;# 
  7558  061C                     	;# 
  7559  061D                     	;# 
  7560  061E                     	;# 
  7561  068C                     	;# 
  7562  068D                     	;# 
  7563  068E                     	;# 
  7564  068F                     	;# 
  7565  0690                     	;# 
  7566  0691                     	;# 
  7567  0692                     	;# 
  7568  0693                     	;# 
  7569  0694                     	;# 
  7570  070C                     	;# 
  7571  070D                     	;# 
  7572  070E                     	;# 
  7573  070F                     	;# 
  7574  0710                     	;# 
  7575  0711                     	;# 
  7576  0712                     	;# 
  7577  0713                     	;# 
  7578  0714                     	;# 
  7579  0716                     	;# 
  7580  0717                     	;# 
  7581  0718                     	;# 
  7582  0719                     	;# 
  7583  071A                     	;# 
  7584  071B                     	;# 
  7585  071C                     	;# 
  7586  071D                     	;# 
  7587  071E                     	;# 
  7588  0796                     	;# 
  7589  0797                     	;# 
  7590  0798                     	;# 
  7591  0799                     	;# 
  7592  079A                     	;# 
  7593  079B                     	;# 
  7594  080C                     	;# 
  7595  080D                     	;# 
  7596  080E                     	;# 
  7597  080F                     	;# 
  7598  0810                     	;# 
  7599  0811                     	;# 
  7600  0812                     	;# 
  7601  0813                     	;# 
  7602  0814                     	;# 
  7603  081A                     	;# 
  7604  081B                     	;# 
  7605  081C                     	;# 
  7606  081D                     	;# 
  7607  081E                     	;# 
  7608  081F                     	;# 
  7609  088C                     	;# 
  7610  088D                     	;# 
  7611  088E                     	;# 
  7612  088F                     	;# 
  7613  0890                     	;# 
  7614  0891                     	;# 
  7615  0892                     	;# 
  7616  0893                     	;# 
  7617  0895                     	;# 
  7618  0896                     	;# 
  7619  0897                     	;# 
  7620  0898                     	;# 
  7621  0899                     	;# 
  7622  089A                     	;# 
  7623  089B                     	;# 
  7624  090C                     	;# 
  7625  090E                     	;# 
  7626  090F                     	;# 
  7627  091F                     	;# 
  7628  091F                     	;# 
  7629  098F                     	;# 
  7630  098F                     	;# 
  7631  0990                     	;# 
  7632  0991                     	;# 
  7633  0992                     	;# 
  7634  0993                     	;# 
  7635  0994                     	;# 
  7636  0995                     	;# 
  7637  0996                     	;# 
  7638  0997                     	;# 
  7639  0E0F                     	;# 
  7640  0E10                     	;# 
  7641  0E11                     	;# 
  7642  0E12                     	;# 
  7643  0E13                     	;# 
  7644  0E14                     	;# 
  7645  0E15                     	;# 
  7646  0E16                     	;# 
  7647  0E17                     	;# 
  7648  0E18                     	;# 
  7649  0E19                     	;# 
  7650  0E1A                     	;# 
  7651  0E1B                     	;# 
  7652  0E1C                     	;# 
  7653  0E1D                     	;# 
  7654  0E1E                     	;# 
  7655  0E1F                     	;# 
  7656  0E20                     	;# 
  7657  0E21                     	;# 
  7658  0E22                     	;# 
  7659  0E23                     	;# 
  7660  0E24                     	;# 
  7661  0E25                     	;# 
  7662  0E26                     	;# 
  7663  0E27                     	;# 
  7664  0E28                     	;# 
  7665  0E29                     	;# 
  7666  0E2A                     	;# 
  7667  0E2B                     	;# 
  7668  0E2C                     	;# 
  7669  0E2D                     	;# 
  7670  0E2E                     	;# 
  7671  0E2F                     	;# 
  7672  0E30                     	;# 
  7673  0E31                     	;# 
  7674  0E32                     	;# 
  7675  0E33                     	;# 
  7676  0E34                     	;# 
  7677  0E35                     	;# 
  7678  0E36                     	;# 
  7679  0E37                     	;# 
  7680  0E8F                     	;# 
  7681  0E90                     	;# 
  7682  0E91                     	;# 
  7683  0E92                     	;# 
  7684  0E93                     	;# 
  7685  0E94                     	;# 
  7686  0E95                     	;# 
  7687  0E96                     	;# 
  7688  0E97                     	;# 
  7689  0E9C                     	;# 
  7690  0E9D                     	;# 
  7691  0E9E                     	;# 
  7692  0EA1                     	;# 
  7693  0EA2                     	;# 
  7694  0EA3                     	;# 
  7695  0EA4                     	;# 
  7696  0EA5                     	;# 
  7697  0EA9                     	;# 
  7698  0EAA                     	;# 
  7699  0EAB                     	;# 
  7700  0EAC                     	;# 
  7701  0EB1                     	;# 
  7702  0EB2                     	;# 
  7703  0EB3                     	;# 
  7704  0EB8                     	;# 
  7705  0EB9                     	;# 
  7706  0EBA                     	;# 
  7707  0EBB                     	;# 
  7708  0EBC                     	;# 
  7709  0EBD                     	;# 
  7710  0EBE                     	;# 
  7711  0EC3                     	;# 
  7712  0EC5                     	;# 
  7713  0EC6                     	;# 
  7714  0EC7                     	;# 
  7715  0EC8                     	;# 
  7716  0EC9                     	;# 
  7717  0ECA                     	;# 
  7718  0ECB                     	;# 
  7719  0ECC                     	;# 
  7720  0F10                     	;# 
  7721  0F11                     	;# 
  7722  0F12                     	;# 
  7723  0F13                     	;# 
  7724  0F14                     	;# 
  7725  0F15                     	;# 
  7726  0F16                     	;# 
  7727  0F17                     	;# 
  7728  0F18                     	;# 
  7729  0F19                     	;# 
  7730  0F1A                     	;# 
  7731  0F1B                     	;# 
  7732  0F1C                     	;# 
  7733  0F1D                     	;# 
  7734  0F1E                     	;# 
  7735  0F1F                     	;# 
  7736  0F20                     	;# 
  7737  0F21                     	;# 
  7738  0F22                     	;# 
  7739  0F23                     	;# 
  7740  0F24                     	;# 
  7741  0F25                     	;# 
  7742  0F26                     	;# 
  7743  0F27                     	;# 
  7744  0F28                     	;# 
  7745  0F29                     	;# 
  7746  0F2A                     	;# 
  7747  0F2B                     	;# 
  7748  0F2C                     	;# 
  7749  0F2D                     	;# 
  7750  0F2E                     	;# 
  7751  0F2F                     	;# 
  7752  0F30                     	;# 
  7753  0F31                     	;# 
  7754  0F32                     	;# 
  7755  0F38                     	;# 
  7756  0F39                     	;# 
  7757  0F3A                     	;# 
  7758  0F3B                     	;# 
  7759  0F3C                     	;# 
  7760  0F3D                     	;# 
  7761  0F3E                     	;# 
  7762  0F3F                     	;# 
  7763  0F40                     	;# 
  7764  0F41                     	;# 
  7765  0F43                     	;# 
  7766  0F44                     	;# 
  7767  0F45                     	;# 
  7768  0F46                     	;# 
  7769  0F47                     	;# 
  7770  0F48                     	;# 
  7771  0F49                     	;# 
  7772  0F4A                     	;# 
  7773  0F4B                     	;# 
  7774  0F4C                     	;# 
  7775  0F4E                     	;# 
  7776  0F4F                     	;# 
  7777  0F50                     	;# 
  7778  0F51                     	;# 
  7779  0F52                     	;# 
  7780  0F53                     	;# 
  7781  0F54                     	;# 
  7782  0F55                     	;# 
  7783  0F56                     	;# 
  7784  0F57                     	;# 
  7785  0F59                     	;# 
  7786  0F5A                     	;# 
  7787  0F5B                     	;# 
  7788  0F5C                     	;# 
  7789  0F5D                     	;# 
  7790  0F61                     	;# 
  7791  0F62                     	;# 
  7792  0F64                     	;# 
  7793  0F65                     	;# 
  7794  0F66                     	;# 
  7795  0F67                     	;# 
  7796  0F68                     	;# 
  7797  0F69                     	;# 
  7798  0F6A                     	;# 
  7799  0F6B                     	;# 
  7800  0F6C                     	;# 
  7801  0F6D                     	;# 
  7802  0FE4                     	;# 
  7803  0FE5                     	;# 
  7804  0FE6                     	;# 
  7805  0FE7                     	;# 
  7806  0FE8                     	;# 
  7807  0FE9                     	;# 
  7808  0FEA                     	;# 
  7809  0FEB                     	;# 
  7810  0FED                     	;# 
  7811  0FEE                     	;# 
  7812  0FEF                     	;# 
  7813  0000                     	;# 
  7814  0001                     	;# 
  7815  0002                     	;# 
  7816  0003                     	;# 
  7817  0004                     	;# 
  7818  0005                     	;# 
  7819  0006                     	;# 
  7820  0007                     	;# 
  7821  0008                     	;# 
  7822  0009                     	;# 
  7823  000A                     	;# 
  7824  000B                     	;# 
  7825  000C                     	;# 
  7826  000D                     	;# 
  7827  000E                     	;# 
  7828  000F                     	;# 
  7829  0010                     	;# 
  7830  0011                     	;# 
  7831  0012                     	;# 
  7832  0013                     	;# 
  7833  0014                     	;# 
  7834  0015                     	;# 
  7835  0016                     	;# 
  7836  0017                     	;# 
  7837  0018                     	;# 
  7838  0019                     	;# 
  7839  001A                     	;# 
  7840  001C                     	;# 
  7841  001C                     	;# 
  7842  001D                     	;# 
  7843  001D                     	;# 
  7844  001E                     	;# 
  7845  001F                     	;# 
  7846  008C                     	;# 
  7847  008C                     	;# 
  7848  008D                     	;# 
  7849  008E                     	;# 
  7850  008E                     	;# 
  7851  008F                     	;# 
  7852  0090                     	;# 
  7853  0090                     	;# 
  7854  0091                     	;# 
  7855  0093                     	;# 
  7856  0094                     	;# 
  7857  0095                     	;# 
  7858  0096                     	;# 
  7859  0097                     	;# 
  7860  0098                     	;# 
  7861  0099                     	;# 
  7862  009A                     	;# 
  7863  009B                     	;# 
  7864  009C                     	;# 
  7865  009D                     	;# 
  7866  009E                     	;# 
  7867  010C                     	;# 
  7868  010D                     	;# 
  7869  010E                     	;# 
  7870  010E                     	;# 
  7871  010F                     	;# 
  7872  0110                     	;# 
  7873  0110                     	;# 
  7874  0111                     	;# 
  7875  0112                     	;# 
  7876  0112                     	;# 
  7877  0113                     	;# 
  7878  0114                     	;# 
  7879  0114                     	;# 
  7880  0115                     	;# 
  7881  0116                     	;# 
  7882  0116                     	;# 
  7883  0117                     	;# 
  7884  0119                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  011A                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011B                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011C                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011D                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011E                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011F                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  018C                     	;# 
  7910  018D                     	;# 
  7911  018E                     	;# 
  7912  018F                     	;# 
  7913  0190                     	;# 
  7914  0191                     	;# 
  7915  0192                     	;# 
  7916  0196                     	;# 
  7917  0197                     	;# 
  7918  0198                     	;# 
  7919  0199                     	;# 
  7920  019A                     	;# 
  7921  019B                     	;# 
  7922  019C                     	;# 
  7923  020C                     	;# 
  7924  020C                     	;# 
  7925  020D                     	;# 
  7926  020E                     	;# 
  7927  020F                     	;# 
  7928  020F                     	;# 
  7929  0210                     	;# 
  7930  0210                     	;# 
  7931  0211                     	;# 
  7932  0211                     	;# 
  7933  0212                     	;# 
  7934  0212                     	;# 
  7935  0213                     	;# 
  7936  0214                     	;# 
  7937  0215                     	;# 
  7938  0215                     	;# 
  7939  0216                     	;# 
  7940  0216                     	;# 
  7941  0217                     	;# 
  7942  0217                     	;# 
  7943  0218                     	;# 
  7944  0218                     	;# 
  7945  0219                     	;# 
  7946  021A                     	;# 
  7947  021B                     	;# 
  7948  021B                     	;# 
  7949  021C                     	;# 
  7950  021C                     	;# 
  7951  021D                     	;# 
  7952  021D                     	;# 
  7953  021E                     	;# 
  7954  021F                     	;# 
  7955  028C                     	;# 
  7956  028C                     	;# 
  7957  028D                     	;# 
  7958  028D                     	;# 
  7959  028E                     	;# 
  7960  028F                     	;# 
  7961  0290                     	;# 
  7962  0290                     	;# 
  7963  0291                     	;# 
  7964  0292                     	;# 
  7965  0292                     	;# 
  7966  0293                     	;# 
  7967  0293                     	;# 
  7968  0294                     	;# 
  7969  0295                     	;# 
  7970  0296                     	;# 
  7971  0296                     	;# 
  7972  0297                     	;# 
  7973  0298                     	;# 
  7974  0298                     	;# 
  7975  0299                     	;# 
  7976  0299                     	;# 
  7977  029A                     	;# 
  7978  029B                     	;# 
  7979  029C                     	;# 
  7980  029C                     	;# 
  7981  029D                     	;# 
  7982  030C                     	;# 
  7983  030C                     	;# 
  7984  030D                     	;# 
  7985  030E                     	;# 
  7986  030F                     	;# 
  7987  0310                     	;# 
  7988  0310                     	;# 
  7989  0311                     	;# 
  7990  0312                     	;# 
  7991  0313                     	;# 
  7992  0314                     	;# 
  7993  0314                     	;# 
  7994  0315                     	;# 
  7995  0316                     	;# 
  7996  0317                     	;# 
  7997  0318                     	;# 
  7998  0318                     	;# 
  7999  0319                     	;# 
  8000  031A                     	;# 
  8001  031B                     	;# 
  8002  031C                     	;# 
  8003  031C                     	;# 
  8004  031D                     	;# 
  8005  031E                     	;# 
  8006  031F                     	;# 
  8007  038C                     	;# 
  8008  038C                     	;# 
  8009  038D                     	;# 
  8010  038E                     	;# 
  8011  0390                     	;# 
  8012  0390                     	;# 
  8013  0391                     	;# 
  8014  0392                     	;# 
  8015  040C                     	;# 
  8016  040D                     	;# 
  8017  040E                     	;# 
  8018  040F                     	;# 
  8019  0410                     	;# 
  8020  0411                     	;# 
  8021  0416                     	;# 
  8022  0416                     	;# 
  8023  0417                     	;# 
  8024  0418                     	;# 
  8025  0418                     	;# 
  8026  0419                     	;# 
  8027  041A                     	;# 
  8028  041A                     	;# 
  8029  041B                     	;# 
  8030  041C                     	;# 
  8031  041C                     	;# 
  8032  041D                     	;# 
  8033  041E                     	;# 
  8034  041F                     	;# 
  8035  048C                     	;# 
  8036  048C                     	;# 
  8037  048D                     	;# 
  8038  048E                     	;# 
  8039  048F                     	;# 
  8040  048F                     	;# 
  8041  0490                     	;# 
  8042  0491                     	;# 
  8043  0492                     	;# 
  8044  0492                     	;# 
  8045  0493                     	;# 
  8046  0494                     	;# 
  8047  0495                     	;# 
  8048  0495                     	;# 
  8049  0496                     	;# 
  8050  0497                     	;# 
  8051  0498                     	;# 
  8052  0499                     	;# 
  8053  049A                     	;# 
  8054  049B                     	;# 
  8055  049C                     	;# 
  8056  049D                     	;# 
  8057  050C                     	;# 
  8058  050C                     	;# 
  8059  050D                     	;# 
  8060  050E                     	;# 
  8061  050F                     	;# 
  8062  050F                     	;# 
  8063  0510                     	;# 
  8064  0511                     	;# 
  8065  0512                     	;# 
  8066  0512                     	;# 
  8067  0513                     	;# 
  8068  0514                     	;# 
  8069  0515                     	;# 
  8070  0515                     	;# 
  8071  0516                     	;# 
  8072  0517                     	;# 
  8073  0518                     	;# 
  8074  0519                     	;# 
  8075  051A                     	;# 
  8076  051B                     	;# 
  8077  051C                     	;# 
  8078  051D                     	;# 
  8079  058C                     	;# 
  8080  058C                     	;# 
  8081  058D                     	;# 
  8082  058E                     	;# 
  8083  058F                     	;# 
  8084  058F                     	;# 
  8085  0590                     	;# 
  8086  0591                     	;# 
  8087  0592                     	;# 
  8088  0593                     	;# 
  8089  060C                     	;# 
  8090  060D                     	;# 
  8091  060E                     	;# 
  8092  060F                     	;# 
  8093  0610                     	;# 
  8094  0611                     	;# 
  8095  0612                     	;# 
  8096  0613                     	;# 
  8097  0614                     	;# 
  8098  0616                     	;# 
  8099  0617                     	;# 
  8100  0618                     	;# 
  8101  0619                     	;# 
  8102  061A                     	;# 
  8103  061B                     	;# 
  8104  061C                     	;# 
  8105  061D                     	;# 
  8106  061E                     	;# 
  8107  068C                     	;# 
  8108  068D                     	;# 
  8109  068E                     	;# 
  8110  068F                     	;# 
  8111  0690                     	;# 
  8112  0691                     	;# 
  8113  0692                     	;# 
  8114  0693                     	;# 
  8115  0694                     	;# 
  8116  070C                     	;# 
  8117  070D                     	;# 
  8118  070E                     	;# 
  8119  070F                     	;# 
  8120  0710                     	;# 
  8121  0711                     	;# 
  8122  0712                     	;# 
  8123  0713                     	;# 
  8124  0714                     	;# 
  8125  0716                     	;# 
  8126  0717                     	;# 
  8127  0718                     	;# 
  8128  0719                     	;# 
  8129  071A                     	;# 
  8130  071B                     	;# 
  8131  071C                     	;# 
  8132  071D                     	;# 
  8133  071E                     	;# 
  8134  0796                     	;# 
  8135  0797                     	;# 
  8136  0798                     	;# 
  8137  0799                     	;# 
  8138  079A                     	;# 
  8139  079B                     	;# 
  8140  080C                     	;# 
  8141  080D                     	;# 
  8142  080E                     	;# 
  8143  080F                     	;# 
  8144  0810                     	;# 
  8145  0811                     	;# 
  8146  0812                     	;# 
  8147  0813                     	;# 
  8148  0814                     	;# 
  8149  081A                     	;# 
  8150  081B                     	;# 
  8151  081C                     	;# 
  8152  081D                     	;# 
  8153  081E                     	;# 
  8154  081F                     	;# 
  8155  088C                     	;# 
  8156  088D                     	;# 
  8157  088E                     	;# 
  8158  088F                     	;# 
  8159  0890                     	;# 
  8160  0891                     	;# 
  8161  0892                     	;# 
  8162  0893                     	;# 
  8163  0895                     	;# 
  8164  0896                     	;# 
  8165  0897                     	;# 
  8166  0898                     	;# 
  8167  0899                     	;# 
  8168  089A                     	;# 
  8169  089B                     	;# 
  8170  090C                     	;# 
  8171  090E                     	;# 
  8172  090F                     	;# 
  8173  091F                     	;# 
  8174  091F                     	;# 
  8175  098F                     	;# 
  8176  098F                     	;# 
  8177  0990                     	;# 
  8178  0991                     	;# 
  8179  0992                     	;# 
  8180  0993                     	;# 
  8181  0994                     	;# 
  8182  0995                     	;# 
  8183  0996                     	;# 
  8184  0997                     	;# 
  8185  0E0F                     	;# 
  8186  0E10                     	;# 
  8187  0E11                     	;# 
  8188  0E12                     	;# 
  8189  0E13                     	;# 
  8190  0E14                     	;# 
  8191  0E15                     	;# 
  8192  0E16                     	;# 
  8193  0E17                     	;# 
  8194  0E18                     	;# 
  8195  0E19                     	;# 
  8196  0E1A                     	;# 
  8197  0E1B                     	;# 
  8198  0E1C                     	;# 
  8199  0E1D                     	;# 
  8200  0E1E                     	;# 
  8201  0E1F                     	;# 
  8202  0E20                     	;# 
  8203  0E21                     	;# 
  8204  0E22                     	;# 
  8205  0E23                     	;# 
  8206  0E24                     	;# 
  8207  0E25                     	;# 
  8208  0E26                     	;# 
  8209  0E27                     	;# 
  8210  0E28                     	;# 
  8211  0E29                     	;# 
  8212  0E2A                     	;# 
  8213  0E2B                     	;# 
  8214  0E2C                     	;# 
  8215  0E2D                     	;# 
  8216  0E2E                     	;# 
  8217  0E2F                     	;# 
  8218  0E30                     	;# 
  8219  0E31                     	;# 
  8220  0E32                     	;# 
  8221  0E33                     	;# 
  8222  0E34                     	;# 
  8223  0E35                     	;# 
  8224  0E36                     	;# 
  8225  0E37                     	;# 
  8226  0E8F                     	;# 
  8227  0E90                     	;# 
  8228  0E91                     	;# 
  8229  0E92                     	;# 
  8230  0E93                     	;# 
  8231  0E94                     	;# 
  8232  0E95                     	;# 
  8233  0E96                     	;# 
  8234  0E97                     	;# 
  8235  0E9C                     	;# 
  8236  0E9D                     	;# 
  8237  0E9E                     	;# 
  8238  0EA1                     	;# 
  8239  0EA2                     	;# 
  8240  0EA3                     	;# 
  8241  0EA4                     	;# 
  8242  0EA5                     	;# 
  8243  0EA9                     	;# 
  8244  0EAA                     	;# 
  8245  0EAB                     	;# 
  8246  0EAC                     	;# 
  8247  0EB1                     	;# 
  8248  0EB2                     	;# 
  8249  0EB3                     	;# 
  8250  0EB8                     	;# 
  8251  0EB9                     	;# 
  8252  0EBA                     	;# 
  8253  0EBB                     	;# 
  8254  0EBC                     	;# 
  8255  0EBD                     	;# 
  8256  0EBE                     	;# 
  8257  0EC3                     	;# 
  8258  0EC5                     	;# 
  8259  0EC6                     	;# 
  8260  0EC7                     	;# 
  8261  0EC8                     	;# 
  8262  0EC9                     	;# 
  8263  0ECA                     	;# 
  8264  0ECB                     	;# 
  8265  0ECC                     	;# 
  8266  0F10                     	;# 
  8267  0F11                     	;# 
  8268  0F12                     	;# 
  8269  0F13                     	;# 
  8270  0F14                     	;# 
  8271  0F15                     	;# 
  8272  0F16                     	;# 
  8273  0F17                     	;# 
  8274  0F18                     	;# 
  8275  0F19                     	;# 
  8276  0F1A                     	;# 
  8277  0F1B                     	;# 
  8278  0F1C                     	;# 
  8279  0F1D                     	;# 
  8280  0F1E                     	;# 
  8281  0F1F                     	;# 
  8282  0F20                     	;# 
  8283  0F21                     	;# 
  8284  0F22                     	;# 
  8285  0F23                     	;# 
  8286  0F24                     	;# 
  8287  0F25                     	;# 
  8288  0F26                     	;# 
  8289  0F27                     	;# 
  8290  0F28                     	;# 
  8291  0F29                     	;# 
  8292  0F2A                     	;# 
  8293  0F2B                     	;# 
  8294  0F2C                     	;# 
  8295  0F2D                     	;# 
  8296  0F2E                     	;# 
  8297  0F2F                     	;# 
  8298  0F30                     	;# 
  8299  0F31                     	;# 
  8300  0F32                     	;# 
  8301  0F38                     	;# 
  8302  0F39                     	;# 
  8303  0F3A                     	;# 
  8304  0F3B                     	;# 
  8305  0F3C                     	;# 
  8306  0F3D                     	;# 
  8307  0F3E                     	;# 
  8308  0F3F                     	;# 
  8309  0F40                     	;# 
  8310  0F41                     	;# 
  8311  0F43                     	;# 
  8312  0F44                     	;# 
  8313  0F45                     	;# 
  8314  0F46                     	;# 
  8315  0F47                     	;# 
  8316  0F48                     	;# 
  8317  0F49                     	;# 
  8318  0F4A                     	;# 
  8319  0F4B                     	;# 
  8320  0F4C                     	;# 
  8321  0F4E                     	;# 
  8322  0F4F                     	;# 
  8323  0F50                     	;# 
  8324  0F51                     	;# 
  8325  0F52                     	;# 
  8326  0F53                     	;# 
  8327  0F54                     	;# 
  8328  0F55                     	;# 
  8329  0F56                     	;# 
  8330  0F57                     	;# 
  8331  0F59                     	;# 
  8332  0F5A                     	;# 
  8333  0F5B                     	;# 
  8334  0F5C                     	;# 
  8335  0F5D                     	;# 
  8336  0F61                     	;# 
  8337  0F62                     	;# 
  8338  0F64                     	;# 
  8339  0F65                     	;# 
  8340  0F66                     	;# 
  8341  0F67                     	;# 
  8342  0F68                     	;# 
  8343  0F69                     	;# 
  8344  0F6A                     	;# 
  8345  0F6B                     	;# 
  8346  0F6C                     	;# 
  8347  0F6D                     	;# 
  8348  0FE4                     	;# 
  8349  0FE5                     	;# 
  8350  0FE6                     	;# 
  8351  0FE7                     	;# 
  8352  0FE8                     	;# 
  8353  0FE9                     	;# 
  8354  0FEA                     	;# 
  8355  0FEB                     	;# 
  8356  0FED                     	;# 
  8357  0FEE                     	;# 
  8358  0FEF                     	;# 
  8359  0000                     	;# 
  8360  0001                     	;# 
  8361  0002                     	;# 
  8362  0003                     	;# 
  8363  0004                     	;# 
  8364  0005                     	;# 
  8365  0006                     	;# 
  8366  0007                     	;# 
  8367  0008                     	;# 
  8368  0009                     	;# 
  8369  000A                     	;# 
  8370  000B                     	;# 
  8371  000C                     	;# 
  8372  000D                     	;# 
  8373  000E                     	;# 
  8374  000F                     	;# 
  8375  0010                     	;# 
  8376  0011                     	;# 
  8377  0012                     	;# 
  8378  0013                     	;# 
  8379  0014                     	;# 
  8380  0015                     	;# 
  8381  0016                     	;# 
  8382  0017                     	;# 
  8383  0018                     	;# 
  8384  0019                     	;# 
  8385  001A                     	;# 
  8386  001C                     	;# 
  8387  001C                     	;# 
  8388  001D                     	;# 
  8389  001D                     	;# 
  8390  001E                     	;# 
  8391  001F                     	;# 
  8392  008C                     	;# 
  8393  008C                     	;# 
  8394  008D                     	;# 
  8395  008E                     	;# 
  8396  008E                     	;# 
  8397  008F                     	;# 
  8398  0090                     	;# 
  8399  0090                     	;# 
  8400  0091                     	;# 
  8401  0093                     	;# 
  8402  0094                     	;# 
  8403  0095                     	;# 
  8404  0096                     	;# 
  8405  0097                     	;# 
  8406  0098                     	;# 
  8407  0099                     	;# 
  8408  009A                     	;# 
  8409  009B                     	;# 
  8410  009C                     	;# 
  8411  009D                     	;# 
  8412  009E                     	;# 
  8413  010C                     	;# 
  8414  010D                     	;# 
  8415  010E                     	;# 
  8416  010E                     	;# 
  8417  010F                     	;# 
  8418  0110                     	;# 
  8419  0110                     	;# 
  8420  0111                     	;# 
  8421  0112                     	;# 
  8422  0112                     	;# 
  8423  0113                     	;# 
  8424  0114                     	;# 
  8425  0114                     	;# 
  8426  0115                     	;# 
  8427  0116                     	;# 
  8428  0116                     	;# 
  8429  0117                     	;# 
  8430  0119                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  011A                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011B                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011C                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011D                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011E                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011F                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  018C                     	;# 
  8456  018D                     	;# 
  8457  018E                     	;# 
  8458  018F                     	;# 
  8459  0190                     	;# 
  8460  0191                     	;# 
  8461  0192                     	;# 
  8462  0196                     	;# 
  8463  0197                     	;# 
  8464  0198                     	;# 
  8465  0199                     	;# 
  8466  019A                     	;# 
  8467  019B                     	;# 
  8468  019C                     	;# 
  8469  020C                     	;# 
  8470  020C                     	;# 
  8471  020D                     	;# 
  8472  020E                     	;# 
  8473  020F                     	;# 
  8474  020F                     	;# 
  8475  0210                     	;# 
  8476  0210                     	;# 
  8477  0211                     	;# 
  8478  0211                     	;# 
  8479  0212                     	;# 
  8480  0212                     	;# 
  8481  0213                     	;# 
  8482  0214                     	;# 
  8483  0215                     	;# 
  8484  0215                     	;# 
  8485  0216                     	;# 
  8486  0216                     	;# 
  8487  0217                     	;# 
  8488  0217                     	;# 
  8489  0218                     	;# 
  8490  0218                     	;# 
  8491  0219                     	;# 
  8492  021A                     	;# 
  8493  021B                     	;# 
  8494  021B                     	;# 
  8495  021C                     	;# 
  8496  021C                     	;# 
  8497  021D                     	;# 
  8498  021D                     	;# 
  8499  021E                     	;# 
  8500  021F                     	;# 
  8501  028C                     	;# 
  8502  028C                     	;# 
  8503  028D                     	;# 
  8504  028D                     	;# 
  8505  028E                     	;# 
  8506  028F                     	;# 
  8507  0290                     	;# 
  8508  0290                     	;# 
  8509  0291                     	;# 
  8510  0292                     	;# 
  8511  0292                     	;# 
  8512  0293                     	;# 
  8513  0293                     	;# 
  8514  0294                     	;# 
  8515  0295                     	;# 
  8516  0296                     	;# 
  8517  0296                     	;# 
  8518  0297                     	;# 
  8519  0298                     	;# 
  8520  0298                     	;# 
  8521  0299                     	;# 
  8522  0299                     	;# 
  8523  029A                     	;# 
  8524  029B                     	;# 
  8525  029C                     	;# 
  8526  029C                     	;# 
  8527  029D                     	;# 
  8528  030C                     	;# 
  8529  030C                     	;# 
  8530  030D                     	;# 
  8531  030E                     	;# 
  8532  030F                     	;# 
  8533  0310                     	;# 
  8534  0310                     	;# 
  8535  0311                     	;# 
  8536  0312                     	;# 
  8537  0313                     	;# 
  8538  0314                     	;# 
  8539  0314                     	;# 
  8540  0315                     	;# 
  8541  0316                     	;# 
  8542  0317                     	;# 
  8543  0318                     	;# 
  8544  0318                     	;# 
  8545  0319                     	;# 
  8546  031A                     	;# 
  8547  031B                     	;# 
  8548  031C                     	;# 
  8549  031C                     	;# 
  8550  031D                     	;# 
  8551  031E                     	;# 
  8552  031F                     	;# 
  8553  038C                     	;# 
  8554  038C                     	;# 
  8555  038D                     	;# 
  8556  038E                     	;# 
  8557  0390                     	;# 
  8558  0390                     	;# 
  8559  0391                     	;# 
  8560  0392                     	;# 
  8561  040C                     	;# 
  8562  040D                     	;# 
  8563  040E                     	;# 
  8564  040F                     	;# 
  8565  0410                     	;# 
  8566  0411                     	;# 
  8567  0416                     	;# 
  8568  0416                     	;# 
  8569  0417                     	;# 
  8570  0418                     	;# 
  8571  0418                     	;# 
  8572  0419                     	;# 
  8573  041A                     	;# 
  8574  041A                     	;# 
  8575  041B                     	;# 
  8576  041C                     	;# 
  8577  041C                     	;# 
  8578  041D                     	;# 
  8579  041E                     	;# 
  8580  041F                     	;# 
  8581  048C                     	;# 
  8582  048C                     	;# 
  8583  048D                     	;# 
  8584  048E                     	;# 
  8585  048F                     	;# 
  8586  048F                     	;# 
  8587  0490                     	;# 
  8588  0491                     	;# 
  8589  0492                     	;# 
  8590  0492                     	;# 
  8591  0493                     	;# 
  8592  0494                     	;# 
  8593  0495                     	;# 
  8594  0495                     	;# 
  8595  0496                     	;# 
  8596  0497                     	;# 
  8597  0498                     	;# 
  8598  0499                     	;# 
  8599  049A                     	;# 
  8600  049B                     	;# 
  8601  049C                     	;# 
  8602  049D                     	;# 
  8603  050C                     	;# 
  8604  050C                     	;# 
  8605  050D                     	;# 
  8606  050E                     	;# 
  8607  050F                     	;# 
  8608  050F                     	;# 
  8609  0510                     	;# 
  8610  0511                     	;# 
  8611  0512                     	;# 
  8612  0512                     	;# 
  8613  0513                     	;# 
  8614  0514                     	;# 
  8615  0515                     	;# 
  8616  0515                     	;# 
  8617  0516                     	;# 
  8618  0517                     	;# 
  8619  0518                     	;# 
  8620  0519                     	;# 
  8621  051A                     	;# 
  8622  051B                     	;# 
  8623  051C                     	;# 
  8624  051D                     	;# 
  8625  058C                     	;# 
  8626  058C                     	;# 
  8627  058D                     	;# 
  8628  058E                     	;# 
  8629  058F                     	;# 
  8630  058F                     	;# 
  8631  0590                     	;# 
  8632  0591                     	;# 
  8633  0592                     	;# 
  8634  0593                     	;# 
  8635  060C                     	;# 
  8636  060D                     	;# 
  8637  060E                     	;# 
  8638  060F                     	;# 
  8639  0610                     	;# 
  8640  0611                     	;# 
  8641  0612                     	;# 
  8642  0613                     	;# 
  8643  0614                     	;# 
  8644  0616                     	;# 
  8645  0617                     	;# 
  8646  0618                     	;# 
  8647  0619                     	;# 
  8648  061A                     	;# 
  8649  061B                     	;# 
  8650  061C                     	;# 
  8651  061D                     	;# 
  8652  061E                     	;# 
  8653  068C                     	;# 
  8654  068D                     	;# 
  8655  068E                     	;# 
  8656  068F                     	;# 
  8657  0690                     	;# 
  8658  0691                     	;# 
  8659  0692                     	;# 
  8660  0693                     	;# 
  8661  0694                     	;# 
  8662  070C                     	;# 
  8663  070D                     	;# 
  8664  070E                     	;# 
  8665  070F                     	;# 
  8666  0710                     	;# 
  8667  0711                     	;# 
  8668  0712                     	;# 
  8669  0713                     	;# 
  8670  0714                     	;# 
  8671  0716                     	;# 
  8672  0717                     	;# 
  8673  0718                     	;# 
  8674  0719                     	;# 
  8675  071A                     	;# 
  8676  071B                     	;# 
  8677  071C                     	;# 
  8678  071D                     	;# 
  8679  071E                     	;# 
  8680  0796                     	;# 
  8681  0797                     	;# 
  8682  0798                     	;# 
  8683  0799                     	;# 
  8684  079A                     	;# 
  8685  079B                     	;# 
  8686  080C                     	;# 
  8687  080D                     	;# 
  8688  080E                     	;# 
  8689  080F                     	;# 
  8690  0810                     	;# 
  8691  0811                     	;# 
  8692  0812                     	;# 
  8693  0813                     	;# 
  8694  0814                     	;# 
  8695  081A                     	;# 
  8696  081B                     	;# 
  8697  081C                     	;# 
  8698  081D                     	;# 
  8699  081E                     	;# 
  8700  081F                     	;# 
  8701  088C                     	;# 
  8702  088D                     	;# 
  8703  088E                     	;# 
  8704  088F                     	;# 
  8705  0890                     	;# 
  8706  0891                     	;# 
  8707  0892                     	;# 
  8708  0893                     	;# 
  8709  0895                     	;# 
  8710  0896                     	;# 
  8711  0897                     	;# 
  8712  0898                     	;# 
  8713  0899                     	;# 
  8714  089A                     	;# 
  8715  089B                     	;# 
  8716  090C                     	;# 
  8717  090E                     	;# 
  8718  090F                     	;# 
  8719  091F                     	;# 
  8720  091F                     	;# 
  8721  098F                     	;# 
  8722  098F                     	;# 
  8723  0990                     	;# 
  8724  0991                     	;# 
  8725  0992                     	;# 
  8726  0993                     	;# 
  8727  0994                     	;# 
  8728  0995                     	;# 
  8729  0996                     	;# 
  8730  0997                     	;# 
  8731  0E0F                     	;# 
  8732  0E10                     	;# 
  8733  0E11                     	;# 
  8734  0E12                     	;# 
  8735  0E13                     	;# 
  8736  0E14                     	;# 
  8737  0E15                     	;# 
  8738  0E16                     	;# 
  8739  0E17                     	;# 
  8740  0E18                     	;# 
  8741  0E19                     	;# 
  8742  0E1A                     	;# 
  8743  0E1B                     	;# 
  8744  0E1C                     	;# 
  8745  0E1D                     	;# 
  8746  0E1E                     	;# 
  8747  0E1F                     	;# 
  8748  0E20                     	;# 
  8749  0E21                     	;# 
  8750  0E22                     	;# 
  8751  0E23                     	;# 
  8752  0E24                     	;# 
  8753  0E25                     	;# 
  8754  0E26                     	;# 
  8755  0E27                     	;# 
  8756  0E28                     	;# 
  8757  0E29                     	;# 
  8758  0E2A                     	;# 
  8759  0E2B                     	;# 
  8760  0E2C                     	;# 
  8761  0E2D                     	;# 
  8762  0E2E                     	;# 
  8763  0E2F                     	;# 
  8764  0E30                     	;# 
  8765  0E31                     	;# 
  8766  0E32                     	;# 
  8767  0E33                     	;# 
  8768  0E34                     	;# 
  8769  0E35                     	;# 
  8770  0E36                     	;# 
  8771  0E37                     	;# 
  8772  0E8F                     	;# 
  8773  0E90                     	;# 
  8774  0E91                     	;# 
  8775  0E92                     	;# 
  8776  0E93                     	;# 
  8777  0E94                     	;# 
  8778  0E95                     	;# 
  8779  0E96                     	;# 
  8780  0E97                     	;# 
  8781  0E9C                     	;# 
  8782  0E9D                     	;# 
  8783  0E9E                     	;# 
  8784  0EA1                     	;# 
  8785  0EA2                     	;# 
  8786  0EA3                     	;# 
  8787  0EA4                     	;# 
  8788  0EA5                     	;# 
  8789  0EA9                     	;# 
  8790  0EAA                     	;# 
  8791  0EAB                     	;# 
  8792  0EAC                     	;# 
  8793  0EB1                     	;# 
  8794  0EB2                     	;# 
  8795  0EB3                     	;# 
  8796  0EB8                     	;# 
  8797  0EB9                     	;# 
  8798  0EBA                     	;# 
  8799  0EBB                     	;# 
  8800  0EBC                     	;# 
  8801  0EBD                     	;# 
  8802  0EBE                     	;# 
  8803  0EC3                     	;# 
  8804  0EC5                     	;# 
  8805  0EC6                     	;# 
  8806  0EC7                     	;# 
  8807  0EC8                     	;# 
  8808  0EC9                     	;# 
  8809  0ECA                     	;# 
  8810  0ECB                     	;# 
  8811  0ECC                     	;# 
  8812  0F10                     	;# 
  8813  0F11                     	;# 
  8814  0F12                     	;# 
  8815  0F13                     	;# 
  8816  0F14                     	;# 
  8817  0F15                     	;# 
  8818  0F16                     	;# 
  8819  0F17                     	;# 
  8820  0F18                     	;# 
  8821  0F19                     	;# 
  8822  0F1A                     	;# 
  8823  0F1B                     	;# 
  8824  0F1C                     	;# 
  8825  0F1D                     	;# 
  8826  0F1E                     	;# 
  8827  0F1F                     	;# 
  8828  0F20                     	;# 
  8829  0F21                     	;# 
  8830  0F22                     	;# 
  8831  0F23                     	;# 
  8832  0F24                     	;# 
  8833  0F25                     	;# 
  8834  0F26                     	;# 
  8835  0F27                     	;# 
  8836  0F28                     	;# 
  8837  0F29                     	;# 
  8838  0F2A                     	;# 
  8839  0F2B                     	;# 
  8840  0F2C                     	;# 
  8841  0F2D                     	;# 
  8842  0F2E                     	;# 
  8843  0F2F                     	;# 
  8844  0F30                     	;# 
  8845  0F31                     	;# 
  8846  0F32                     	;# 
  8847  0F38                     	;# 
  8848  0F39                     	;# 
  8849  0F3A                     	;# 
  8850  0F3B                     	;# 
  8851  0F3C                     	;# 
  8852  0F3D                     	;# 
  8853  0F3E                     	;# 
  8854  0F3F                     	;# 
  8855  0F40                     	;# 
  8856  0F41                     	;# 
  8857  0F43                     	;# 
  8858  0F44                     	;# 
  8859  0F45                     	;# 
  8860  0F46                     	;# 
  8861  0F47                     	;# 
  8862  0F48                     	;# 
  8863  0F49                     	;# 
  8864  0F4A                     	;# 
  8865  0F4B                     	;# 
  8866  0F4C                     	;# 
  8867  0F4E                     	;# 
  8868  0F4F                     	;# 
  8869  0F50                     	;# 
  8870  0F51                     	;# 
  8871  0F52                     	;# 
  8872  0F53                     	;# 
  8873  0F54                     	;# 
  8874  0F55                     	;# 
  8875  0F56                     	;# 
  8876  0F57                     	;# 
  8877  0F59                     	;# 
  8878  0F5A                     	;# 
  8879  0F5B                     	;# 
  8880  0F5C                     	;# 
  8881  0F5D                     	;# 
  8882  0F61                     	;# 
  8883  0F62                     	;# 
  8884  0F64                     	;# 
  8885  0F65                     	;# 
  8886  0F66                     	;# 
  8887  0F67                     	;# 
  8888  0F68                     	;# 
  8889  0F69                     	;# 
  8890  0F6A                     	;# 
  8891  0F6B                     	;# 
  8892  0F6C                     	;# 
  8893  0F6D                     	;# 
  8894  0FE4                     	;# 
  8895  0FE5                     	;# 
  8896  0FE6                     	;# 
  8897  0FE7                     	;# 
  8898  0FE8                     	;# 
  8899  0FE9                     	;# 
  8900  0FEA                     	;# 
  8901  0FEB                     	;# 
  8902  0FED                     	;# 
  8903  0FEE                     	;# 
  8904  0FEF                     	;# 
  8905                           
  8906 ;; Function _limitTempThreshUnits is unused but had its address taken
  8907  0000                     
  8908 ;; Function _limitHoursUnits is unused but had its address taken
  8909  0000                     
  8910                           	psect	idataBANK0
  8911  0918                     __pidataBANK0:	
  8912                           
  8913                           ;initializer for _mode_field_subfield
  8914  0918  34FF               	retlw	255
  8915  0919  34FF               	retlw	255
  8916  091A  34FF               	retlw	255
  8917  091B  34FF               	retlw	255
  8918                           
  8919                           ;initializer for _lum_thresh
  8920  091C  3402               	retlw	2
  8921                           
  8922                           ;initializer for _temp_thresh
  8923  091D  3464               	retlw	100
  8924                           
  8925                           ;initializer for _tala
  8926  091E  3403               	retlw	3
  8927                           
  8928                           ;initializer for _pmon
  8929  091F  3405               	retlw	5
  8930                           
  8931                           ;initializer for _nreg
  8932  0920  341E               	retlw	30
  8933                           
  8934                           	psect	stringtext1
  8935  1000                     __pstringtext1:	
  8936  1000                     _fsmStateTable:	
  8937  1000  3462               	retlw	low _do_I2C_IDLE
  8938  1001  3408               	retlw	high _do_I2C_IDLE
  8939  1002  34D9               	retlw	low _do_I2C_SEND_ADR_READ
  8940  1003  3408               	retlw	high _do_I2C_SEND_ADR_READ
  8941  1004  34C1               	retlw	low _do_I2C_SEND_ADR_WRITE
  8942  1005  3408               	retlw	high _do_I2C_SEND_ADR_WRITE
  8943  1006  3401               	retlw	low _do_I2C_TX
  8944  1007  340F               	retlw	high _do_I2C_TX
  8945  1008  346A               	retlw	low _do_I2C_RX
  8946  1009  340E               	retlw	high _do_I2C_RX
  8947  100A  34A3               	retlw	low _do_I2C_RCEN
  8948  100B  3408               	retlw	high _do_I2C_RCEN
  8949  100C  3434               	retlw	low _do_I2C_TX_EMPTY
  8950  100D  340D               	retlw	high _do_I2C_TX_EMPTY
  8951  100E  3467               	retlw	low _do_I2C_SEND_RESTART_READ
  8952  100F  3408               	retlw	high _do_I2C_SEND_RESTART_READ
  8953  1010  346C               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8954  1011  3408               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8955  1012  3471               	retlw	low _do_I2C_SEND_RESTART
  8956  1013  3408               	retlw	high _do_I2C_SEND_RESTART
  8957  1014  3476               	retlw	low _do_I2C_SEND_STOP
  8958  1015  3408               	retlw	high _do_I2C_SEND_STOP
  8959  1016  347B               	retlw	low _do_I2C_DO_ACK
  8960  1017  3408               	retlw	high _do_I2C_DO_ACK
  8961  1018  3480               	retlw	low _do_I2C_DO_NACK_STOP
  8962  1019  3408               	retlw	high _do_I2C_DO_NACK_STOP
  8963  101A  34FB               	retlw	low _do_I2C_DO_NACK_RESTART
  8964  101B  3407               	retlw	high _do_I2C_DO_NACK_RESTART
  8965  101C  34B9               	retlw	low _do_I2C_RESET
  8966  101D  3408               	retlw	high _do_I2C_RESET
  8967  101E  3419               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8968  101F  340C               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8969  1020                     __end_of_fsmStateTable:	
  8970                           
  8971                           	psect	stringtext2
  8972  1020                     __pstringtext2:	
  8973  1020                     _num_subfields:	
  8974  1020  3404               	retlw	4
  8975  1021  3401               	retlw	1
  8976  1022  3402               	retlw	2
  8977  1023  3401               	retlw	1
  8978  1024                     __end_of_num_subfields:	
  8979                           
  8980                           	psect	nvBANK0
  8981  0068                     __pnvBANK0:	
  8982  0068                     _timer1ReloadVal:	
  8983  0068                     	ds	2
  8984                           
  8985                           	psect	nvBANK1
  8986  00CE                     __pnvBANK1:	
  8987  00CE                     _TMR0_InterruptHandler:	
  8988  00CE                     	ds	2
  8989  00D0                     _TMR2_InterruptHandler:	
  8990  00D0                     	ds	2
  8991  00D2                     _TMR1_InterruptHandler:	
  8992  00D2                     	ds	2
  8993  00D4                     _INT_InterruptHandler:	
  8994  00D4                     	ds	2
  8995  001E                     _T0CON0bits	set	30
  8996  001E                     _T0CON0	set	30
  8997  001C                     _TMR0L	set	28
  8998  001D                     _TMR0H	set	29
  8999  001F                     _T0CON1	set	31
  9000  000E                     _PORTCbits	set	14
  9001  0013                     _TRISCbits	set	19
  9002  000D                     _PORTBbits	set	13
  9003  0016                     _LATAbits	set	22
  9004  0014                     _TRISD	set	20
  9005  0013                     _TRISC	set	19
  9006  0012                     _TRISB	set	18
  9007  0011                     _TRISA	set	17
  9008  0015                     _TRISE	set	21
  9009  0018                     _LATC	set	24
  9010  0017                     _LATB	set	23
  9011  0016                     _LATA	set	22
  9012  0019                     _LATD	set	25
  9013  001A                     _LATE	set	26
  9014  000B                     _INTCONbits	set	11
  9015  0094                     _ADCON1bits	set	148
  9016  008E                     _ADPREVL	set	142
  9017  008F                     _ADPREVH	set	143
  9018  0097                     _ADSTATbits	set	151
  9019  0090                     _ADACCL	set	144
  9020  0091                     _ADACCH	set	145
  9021  0095                     _ADCON2bits	set	149
  9022  009C                     _ADPRE	set	156
  9023  0096                     _ADCON3bits	set	150
  9024  008C                     _ADRESL	set	140
  9025  008D                     _ADRESH	set	141
  9026  0093                     _ADCON0bits	set	147
  9027  009D                     _ADACQ	set	157
  9028  0093                     _ADCON0	set	147
  9029  0098                     _ADCLK	set	152
  9030  0099                     _ADACT	set	153
  9031  009A                     _ADREF	set	154
  9032  0097                     _ADSTAT	set	151
  9033  0096                     _ADCON3	set	150
  9034  0095                     _ADCON2	set	149
  9035  0094                     _ADCON1	set	148
  9036  009B                     _ADCAP	set	155
  9037  009E                     _ADPCH	set	158
  9038  0116                     _ADERRL	set	278
  9039  0117                     _ADERRH	set	279
  9040  0114                     _ADFLTRL	set	276
  9041  0115                     _ADFLTRH	set	277
  9042  010C                     _ADCNT	set	268
  9043  010D                     _ADRPT	set	269
  9044  0113                     _ADSTPTH	set	275
  9045  0112                     _ADSTPTL	set	274
  9046  0111                     _ADUTHH	set	273
  9047  0110                     _ADUTHL	set	272
  9048  010F                     _ADLTHH	set	271
  9049  010E                     _ADLTHL	set	270
  9050  018F                     _SSP1STATbits	set	399
  9051  018E                     _SSP1MSK	set	398
  9052  018C                     _SSP1BUF	set	396
  9053  0191                     _SSP1CON2bits	set	401
  9054  018D                     _SSP1ADD	set	397
  9055  0191                     _SSP1CON2	set	401
  9056  0190                     _SSP1CON1	set	400
  9057  018F                     _SSP1STAT	set	399
  9058  0190                     _SSP1CON1bits	set	400
  9059  021F                     _CCPTMRS1bits	set	543
  9060  020F                     _T1GCONbits	set	527
  9061  020E                     _T1CONbits	set	526
  9062  020E                     _T1CON	set	526
  9063  020C                     _TMR1L	set	524
  9064  020D                     _TMR1H	set	525
  9065  0211                     _T1CLK	set	529
  9066  0210                     _T1GATE	set	528
  9067  020F                     _T1GCON	set	527
  9068  028D                     _PR2	set	653
  9069  028C                     _TMR2	set	652
  9070  028E                     _T2CONbits	set	654
  9071  0291                     _T2RSTbits	set	657
  9072  028F                     _T2HLTbits	set	655
  9073  028E                     _T2CON	set	654
  9074  028C                     _T2TMR	set	652
  9075  028D                     _T2PR	set	653
  9076  0291                     _T2RST	set	657
  9077  028F                     _T2HLT	set	655
  9078  0290                     _T2CLKCON	set	656
  9079  038C                     _PWM6DCL	set	908
  9080  038D                     _PWM6DCH	set	909
  9081  038E                     _PWM6CON	set	910
  9082  0710                     _PIR4bits	set	1808
  9083  071A                     _PIE4bits	set	1818
  9084  070F                     _PIR3bits	set	1807
  9085  0719                     _PIE3bits	set	1817
  9086  0716                     _PIE0bits	set	1814
  9087  070C                     _PIR0bits	set	1804
  9088  079B                     _PMD5	set	1947
  9089  079A                     _PMD4	set	1946
  9090  0799                     _PMD3	set	1945
  9091  0798                     _PMD2	set	1944
  9092  0797                     _PMD1	set	1943
  9093  0796                     _PMD0	set	1942
  9094  081F                     _NVMCON2	set	2079
  9095  081C                     _NVMDATL	set	2076
  9096  081D                     _NVMDATH	set	2077
  9097  081E                     _NVMCON1bits	set	2078
  9098  081B                     _NVMADRH	set	2075
  9099  081A                     _NVMADRL	set	2074
  9100  0892                     _OSCTUNE	set	2194
  9101  0893                     _OSCFRQ	set	2195
  9102  0891                     _OSCEN	set	2193
  9103  088F                     _OSCCON3	set	2191
  9104  088D                     _OSCCON1	set	2189
  9105  0EC6                     _SSP1DATPPS	set	3782
  9106  0EC5                     _SSP1CLKPPS	set	3781
  9107  0E90                     _INTPPS	set	3728
  9108  0F44                     _WPUBbits	set	3908
  9109  0F16                     _RA6PPS	set	3862
  9110  0F24                     _RC4PPS	set	3876
  9111  0F23                     _RC3PPS	set	3875
  9112  0F68                     _INLVLE	set	3944
  9113  0F5D                     _INLVLD	set	3933
  9114  0F52                     _INLVLC	set	3922
  9115  0F47                     _INLVLB	set	3911
  9116  0F3C                     _INLVLA	set	3900
  9117  0F67                     _SLRCONE	set	3943
  9118  0F5C                     _SLRCOND	set	3932
  9119  0F51                     _SLRCONC	set	3921
  9120  0F46                     _SLRCONB	set	3910
  9121  0F3B                     _SLRCONA	set	3899
  9122  0F5B                     _ODCOND	set	3931
  9123  0F50                     _ODCONC	set	3920
  9124  0F45                     _ODCONB	set	3909
  9125  0F3A                     _ODCONA	set	3898
  9126  0F66                     _ODCONE	set	3942
  9127  0F4F                     _WPUC	set	3919
  9128  0F39                     _WPUA	set	3897
  9129  0F44                     _WPUB	set	3908
  9130  0F65                     _WPUE	set	3941
  9131  0F5A                     _WPUD	set	3930
  9132  0F38                     _ANSELA	set	3896
  9133  0F64                     _ANSELE	set	3940
  9134  0F43                     _ANSELB	set	3907
  9135  0F4E                     _ANSELC	set	3918
  9136  0F59                     _ANSELD	set	3929
  9137  7A7C                     _WPUC4	set	31356
  9138  7A7B                     _WPUC3	set	31355
  9139                           
  9140                           ; #config settings
  9141  0000                     
  9142                           	psect	cinit
  9143  005D                     start_initialization:	
  9144  005D                     __initialization:	
  9145                           
  9146                           ; Initialize objects allocated to BANK0
  9147  005D  3018               	movlw	low __pidataBANK0
  9148  005E  0084               	movwf	4
  9149  005F  3089               	movlw	(high __pidataBANK0)| (0+128)
  9150  0060  0085               	movwf	5
  9151  0061  305F               	movlw	low __pdataBANK0
  9152  0062  0086               	movwf	6
  9153  0063  3000               	movlw	high __pdataBANK0
  9154  0064  0087               	movwf	7
  9155  0065  3009               	movlw	9
  9156  0066  3188  209D  3180   	fcall	init_ram
  9157                           
  9158                           ; Clear objects allocated to COMMON
  9159  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9160                           
  9161                           ; Clear objects allocated to BANK0
  9162  006A  3043               	movlw	low __pbssBANK0
  9163  006B  0084               	movwf	4
  9164  006C  3000               	movlw	high __pbssBANK0
  9165  006D  0085               	movwf	5
  9166  006E  301C               	movlw	28
  9167  006F  3188  2097  3180   	fcall	clear_ram0
  9168                           
  9169                           ; Clear objects allocated to BANK1
  9170  0072  30A0               	movlw	low __pbssBANK1
  9171  0073  0084               	movwf	4
  9172  0074  3000               	movlw	high __pbssBANK1
  9173  0075  0085               	movwf	5
  9174  0076  302E               	movlw	46
  9175  0077  3188  2097  3180   	fcall	clear_ram0
  9176  007A                     end_of_initialization:	
  9177                           ;End of C runtime variable initialization code
  9178                           
  9179  007A                     __end_of__initialization:	
  9180  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9181  007B  0020               	movlb	0
  9182  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9183                           
  9184                           	psect	bssCOMMON
  9185  007D                     __pbssCOMMON:	
  9186  007D                     _clkms:	
  9187  007D                     	ds	1
  9188                           
  9189                           	psect	bssBANK0
  9190  0043                     __pbssBANK0:	
  9191  0043                     _subfield_info:	
  9192  0043                     	ds	4
  9193  0047                     _lum_threshold:	
  9194  0047                     	ds	2
  9195  0049                     _lum_bin:	
  9196  0049                     	ds	2
  9197  004B                     _convertedValue:	
  9198  004B                     	ds	2
  9199  004D                     _i2c1_driver_i2cISR:	
  9200  004D                     	ds	2
  9201  004F                     _i2c1_driver_busCollisionISR:	
  9202  004F                     	ds	2
  9203  0051                     _alaf:	
  9204  0051                     	ds	1
  9205  0052                     _temp:	
  9206  0052                     	ds	1
  9207  0053                     _alarm:	
  9208  0053                     	ds	1
  9209  0054                     _config_mode:	
  9210  0054                     	ds	1
  9211  0055                     _set_mode:	
  9212  0055                     	ds	1
  9213  0056                     _last1m:	
  9214  0056                     	ds	1
  9215  0057                     _last5s:	
  9216  0057                     	ds	1
  9217  0058                     _last_ms2:	
  9218  0058                     	ds	1
  9219  0059                     _last_ms:	
  9220  0059                     	ds	1
  9221  005A                     _seg:	
  9222  005A                     	ds	1
  9223  005B                     _clkm:	
  9224  005B                     	ds	1
  9225  005C                     _clkh:	
  9226  005C                     	ds	1
  9227  005D                     _nreg_pt:	
  9228  005D                     	ds	1
  9229  005E                     _nreg_init:	
  9230  005E                     	ds	1
  9231                           
  9232                           	psect	dataBANK0
  9233  005F                     __pdataBANK0:	
  9234  005F                     _mode_field_subfield:	
  9235  005F                     	ds	4
  9236  0063                     _lum_thresh:	
  9237  0063                     	ds	1
  9238  0064                     _temp_thresh:	
  9239  0064                     	ds	1
  9240  0065                     _tala:	
  9241  0065                     	ds	1
  9242  0066                     _pmon:	
  9243  0066                     	ds	1
  9244  0067                     _nreg:	
  9245  0067                     	ds	1
  9246                           
  9247                           	psect	bssBANK1
  9248  00A0                     __pbssBANK1:	
  9249  00A0                     _i2c_status:	
  9250  00A0                     	ds	29
  9251  00BD                     _duty_cycle:	
  9252  00BD                     	ds	2
  9253  00BF                     _min_units:	
  9254  00BF                     	ds	2
  9255  00C1                     _min_tens:	
  9256  00C1                     	ds	2
  9257  00C3                     _hours_units:	
  9258  00C3                     	ds	2
  9259  00C5                     _hours_tens:	
  9260  00C5                     	ds	2
  9261  00C7                     _value:	
  9262  00C7                     	ds	2
  9263  00C9                     _ring_byte:	
  9264  00C9                     	ds	5
  9265                           
  9266                           	psect	inittext
  9267  089D                     init_ram:	
  9268  089D  00FE               	movwf	btemp
  9269  089E                     initloop:	
  9270  089E  0012               	moviw fsr0++
  9271  089F  001E               	movwi fsr1++
  9272  08A0  0BFE               	decfsz	btemp,f
  9273  08A1  289E               	goto	initloop
  9274  08A2  3400               	retlw	0
  9275                           
  9276                           	psect	clrtext
  9277  0897                     clear_ram0:	
  9278                           ;	Called with FSR0 containing the base address, and
  9279                           ;	WREG with the size to clear
  9280                           
  9281  0897  0064               	clrwdt	;clear the watchdog before getting into this loop
  9282  0898                     clrloop0:	
  9283  0898  0180               	clrf	0	;clear RAM location pointed to by FSR
  9284  0899  3101               	addfsr 0,1
  9285  089A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9286  089B  2898               	goto	clrloop0	;have we reached the end yet?
  9287  089C  3400               	retlw	0	;all done for this memory range, return
  9288                           
  9289                           	psect	cstackBANK1
  9290  00D6                     __pcstackBANK1:	
  9291  00D6                     main@aux:	
  9292                           
  9293                           ; 1 bytes @ 0x0
  9294  00D6                     	ds	1
  9295  00D7                     main@aux1:	
  9296                           
  9297                           ; 1 bytes @ 0x1
  9298  00D7                     	ds	3
  9299  00DA                     main@t5s:	
  9300                           
  9301                           ; 1 bytes @ 0x4
  9302  00DA                     	ds	1
  9303  00DB                     _main$2410:	
  9304                           
  9305                           ; 1 bytes @ 0x5
  9306  00DB                     	ds	1
  9307                           
  9308                           	psect	cstackCOMMON
  9309  0070                     __pcstackCOMMON:	
  9310  0070                     ?_i2c1_driver_open:	
  9311  0070                     ?_i2c1_driver_isNACK:	
  9312                           ; 1 bit 
  9313                           
  9314  0070                     ?_setCallBack:	
  9315                           ; 1 bit 
  9316                           
  9317  0070                     ?_mssp1_clearIRQ:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  0070                     ??_mssp1_clearIRQ:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  0070                     ?_i2c_busCollisionISR:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  0070                     ??_i2c_busCollisionISR:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  0070                     ?_i2c_ISR:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  0070                     ?_i2c1_driver_resetBus:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  0070                     ??_i2c1_driver_resetBus:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  0070                     ?_i2c1_driver_restart:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  0070                     ??_i2c1_driver_restart:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  0070                     ?_i2c1_driver_stop:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  0070                     ??_i2c1_driver_stop:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  0070                     ?_i2c1_driver_TXData:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  0070                     ??_i2c1_driver_TXData:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  0070                     ?_i2c1_driver_startRX:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  0070                     ??_i2c1_driver_startRX:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  0070                     ?_i2c1_driver_sendACK:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  0070                     ??_i2c1_driver_sendACK:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  0070                     ?_i2c1_driver_sendNACK:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  0070                     ??_i2c1_driver_sendNACK:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  0070                     ??_i2c1_driver_isNACK:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  0070                     ?_i2c1_driver_getRXData:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  0070                     ??_i2c1_driver_getRXData:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  0070                     ?_mssp1_setIRQ:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  0070                     ??_mssp1_setIRQ:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  0070                     ?_i2c1_driver_clearBusCollision:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  0070                     ??_i2c1_driver_clearBusCollision:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  0070                     ?_INT_CallBack:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  0070                     ?_TMR0_ISR:	
  9399                           ; 1 bytes @ 0x0
  9400                           
  9401  0070                     ?_TMR1_ISR:	
  9402                           ; 1 bytes @ 0x0
  9403                           
  9404  0070                     ?_TMR2_ISR:	
  9405                           ; 1 bytes @ 0x0
  9406                           
  9407  0070                     ?_PMD_Initialize:	
  9408                           ; 1 bytes @ 0x0
  9409                           
  9410  0070                     ?_PIN_MANAGER_Initialize:	
  9411                           ; 1 bytes @ 0x0
  9412                           
  9413  0070                     ?_OSCILLATOR_Initialize:	
  9414                           ; 1 bytes @ 0x0
  9415                           
  9416  0070                     ?_PWM6_Initialize:	
  9417                           ; 1 bytes @ 0x0
  9418                           
  9419  0070                     ?_ADCC_Initialize:	
  9420                           ; 1 bytes @ 0x0
  9421                           
  9422  0070                     ?_TMR2_Initialize:	
  9423                           ; 1 bytes @ 0x0
  9424                           
  9425  0070                     ?_TMR1_Initialize:	
  9426                           ; 1 bytes @ 0x0
  9427                           
  9428  0070                     ?_TMR0_Initialize:	
  9429                           ; 1 bytes @ 0x0
  9430                           
  9431  0070                     ?_TMR1_DefaultInterruptHandler:	
  9432                           ; 1 bytes @ 0x0
  9433                           
  9434  0070                     ??_TMR1_DefaultInterruptHandler:	
  9435                           ; 1 bytes @ 0x0
  9436                           
  9437  0070                     ?_TMR2_DefaultInterruptHandler:	
  9438                           ; 1 bytes @ 0x0
  9439                           
  9440  0070                     ??_TMR2_DefaultInterruptHandler:	
  9441                           ; 1 bytes @ 0x0
  9442                           
  9443  0070                     ?_checkDebounceSW1:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0070                     ?_TMR0_StopTimer:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0070                     ??_TMR0_StopTimer:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0070                     ?_handler_clock_hms:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0070                     ??_handler_clock_hms:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0070                     ?_handler_clock_ms:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0070                     ??_handler_clock_ms:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0070                     ?_recoverData:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0070                     ?_tsttc:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0070                     ?_cksum_w:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0070                     ?_TMR0_StartTimer:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0070                     ?_config_routine:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0070                     ?_all_LED:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0070                     ?_mod1_LED:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0070                     ?_mod2_LED:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ?_mod3_LED:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ?_mod4_LED:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ?_checkDebounceSW2:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ?_mode_select_LED:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ?_selectSubfield:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ?_getSubfieldInfo:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ?_increment_subfield:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ?_representLed:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ?_cksum:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?_reset_recv:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     ?_WriteI2C:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     ?_ReadI2C:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     ?_TMR0_DefaultInterruptHandler:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0070                     ??_TMR0_DefaultInterruptHandler:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0070                     ?_i2c_setBuffer:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0070                     ?_do_I2C_RESET:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0070                     ??_do_I2C_RESET:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0070                     ?_do_I2C_IDLE:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0070                     ??_do_I2C_IDLE:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0070                     ?_do_I2C_SEND_RESTART:	
  9558                           ; 1 bytes @ 0x0
  9559                           
  9560  0070                     ??_do_I2C_SEND_RESTART:	
  9561                           ; 1 bytes @ 0x0
  9562                           
  9563  0070                     ?_do_I2C_SEND_STOP:	
  9564                           ; 1 bytes @ 0x0
  9565                           
  9566  0070                     ??_do_I2C_SEND_STOP:	
  9567                           ; 1 bytes @ 0x0
  9568                           
  9569  0070                     ?_do_I2C_SEND_ADR_READ:	
  9570                           ; 1 bytes @ 0x0
  9571                           
  9572  0070                     ??_do_I2C_SEND_ADR_READ:	
  9573                           ; 1 bytes @ 0x0
  9574                           
  9575  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9576                           ; 1 bytes @ 0x0
  9577                           
  9578  0070                     ?_do_I2C_RCEN:	
  9579                           ; 1 bytes @ 0x0
  9580                           
  9581  0070                     ??_do_I2C_RCEN:	
  9582                           ; 1 bytes @ 0x0
  9583                           
  9584  0070                     ?_do_I2C_DO_ACK:	
  9585                           ; 1 bytes @ 0x0
  9586                           
  9587  0070                     ??_do_I2C_DO_ACK:	
  9588                           ; 1 bytes @ 0x0
  9589                           
  9590  0070                     ?_do_I2C_DO_NACK_STOP:	
  9591                           ; 1 bytes @ 0x0
  9592                           
  9593  0070                     ??_do_I2C_DO_NACK_STOP:	
  9594                           ; 1 bytes @ 0x0
  9595                           
  9596  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9597                           ; 1 bytes @ 0x0
  9598                           
  9599  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9600                           ; 1 bytes @ 0x0
  9601                           
  9602  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9603                           ; 1 bytes @ 0x0
  9604                           
  9605  0070                     ?_do_I2C_TX:	
  9606                           ; 1 bytes @ 0x0
  9607                           
  9608  0070                     ?_do_I2C_RX:	
  9609                           ; 1 bytes @ 0x0
  9610                           
  9611  0070                     ?_do_I2C_TX_EMPTY:	
  9612                           ; 1 bytes @ 0x0
  9613                           
  9614  0070                     ?_INT_ISR:	
  9615                           ; 1 bytes @ 0x0
  9616                           
  9617  0070                     ?_INT_DefaultInterruptHandler:	
  9618                           ; 1 bytes @ 0x0
  9619                           
  9620  0070                     ??_INT_DefaultInterruptHandler:	
  9621                           ; 1 bytes @ 0x0
  9622                           
  9623  0070                     ?_EXT_INT_Initialize:	
  9624                           ; 1 bytes @ 0x0
  9625                           
  9626  0070                     ?_INTERRUPT_InterruptManager:	
  9627                           ; 1 bytes @ 0x0
  9628                           
  9629  0070                     ?_SYSTEM_Initialize:	
  9630                           ; 1 bytes @ 0x0
  9631                           
  9632  0070                     ?_ADCC_StartConversion:	
  9633                           ; 1 bytes @ 0x0
  9634                           
  9635  0070                     ?_ADCC_IsConversionDone:	
  9636                           ; 1 bytes @ 0x0
  9637                           
  9638  0070                     ?_TMR1_WriteTimer:	
  9639                           ; 1 bytes @ 0x0
  9640                           
  9641  0070                     ?_sw1_EXT:	
  9642                           ; 1 bytes @ 0x0
  9643                           
  9644  0070                     ?_ISR_3s:	
  9645                           ; 1 bytes @ 0x0
  9646                           
  9647  0070                     ?_main:	
  9648                           ; 1 bytes @ 0x0
  9649                           
  9650  0070                     ?i1_PWM6_LoadDutyValue:	
  9651                           ; 1 bytes @ 0x0
  9652                           
  9653  0070                     ?i1_checkDebounceSW1:	
  9654                           ; 1 bytes @ 0x0
  9655                           
  9656  0070                     ??i1_checkDebounceSW1:	
  9657                           ; 1 bytes @ 0x0
  9658                           
  9659  0070                     i2c1_driver_TXData@d:	
  9660                           ; 1 bytes @ 0x0
  9661                           
  9662  0070                     i2c_setBuffer@bufferSize:	
  9663                           ; 1 bytes @ 0x0
  9664                           
  9665  0070                     setCallBack@cb:	
  9666                           ; 2 bytes @ 0x0
  9667                           
  9668  0070                     TMR1_WriteTimer@timerVal:	
  9669                           ; 2 bytes @ 0x0
  9670                           
  9671  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9672                           ; 2 bytes @ 0x0
  9673                           
  9674                           
  9675                           ; 2 bytes @ 0x0
  9676  0070                     	ds	1
  9677  0071                     ??_TMR2_ISR:	
  9678  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9679                           ; 1 bytes @ 0x1
  9680                           
  9681                           
  9682                           ; 1 bytes @ 0x1
  9683  0071                     	ds	1
  9684  0072                     ??_TMR1_ISR:	
  9685  0072                     ??_i2c_setBuffer:	
  9686                           ; 1 bytes @ 0x2
  9687                           
  9688  0072                     ??_TMR1_WriteTimer:	
  9689                           ; 1 bytes @ 0x2
  9690                           
  9691  0072                     ??i1_PWM6_LoadDutyValue:	
  9692                           ; 1 bytes @ 0x2
  9693                           
  9694  0072                     setCallBack@p:	
  9695                           ; 1 bytes @ 0x2
  9696                           
  9697                           
  9698                           ; 1 bytes @ 0x2
  9699  0072                     	ds	1
  9700  0073                     ??_setCallBack:	
  9701  0073                     i2c_setBuffer@buffer:	
  9702                           ; 1 bytes @ 0x3
  9703                           
  9704                           
  9705                           ; 1 bytes @ 0x3
  9706  0073                     	ds	1
  9707  0074                     ??_ISR_3s:	
  9708  0074                     setCallBack@idx:	
  9709                           ; 1 bytes @ 0x4
  9710                           
  9711                           
  9712                           ; 1 bytes @ 0x4
  9713  0074                     	ds	1
  9714  0075                     ??_TMR0_ISR:	
  9715  0075                     ?_i2c_setDataCompleteCallback:	
  9716                           ; 1 bytes @ 0x5
  9717                           
  9718  0075                     i2c_setDataCompleteCallback@cb:	
  9719                           ; 1 bytes @ 0x5
  9720                           
  9721                           
  9722                           ; 2 bytes @ 0x5
  9723  0075                     	ds	2
  9724  0077                     ??_sw1_EXT:	
  9725  0077                     i2c_setDataCompleteCallback@p:	
  9726                           ; 1 bytes @ 0x7
  9727                           
  9728                           
  9729                           ; 1 bytes @ 0x7
  9730  0077                     	ds	1
  9731  0078                     ??_INT_CallBack:	
  9732  0078                     ??_i2c_setDataCompleteCallback:	
  9733                           ; 1 bytes @ 0x8
  9734                           
  9735  0078                     ??_INT_ISR:	
  9736                           ; 1 bytes @ 0x8
  9737                           
  9738                           
  9739                           ; 1 bytes @ 0x8
  9740  0078                     	ds	1
  9741  0079                     ?_returnStop:	
  9742  0079                     ?_returnReset:	
  9743                           ; 1 bytes @ 0x9
  9744                           
  9745  0079                     ?_i2c_restartWrite:	
  9746                           ; 1 bytes @ 0x9
  9747                           
  9748  0079                     ?_wr1RegCompleteHandler:	
  9749                           ; 1 bytes @ 0x9
  9750                           
  9751  0079                     ?_rd1RegCompleteHandler:	
  9752                           ; 1 bytes @ 0x9
  9753                           
  9754  0079                     ?_rd2RegCompleteHandler:	
  9755                           ; 1 bytes @ 0x9
  9756                           
  9757  0079                     ?_wr2RegCompleteHandler:	
  9758                           ; 1 bytes @ 0x9
  9759                           
  9760  0079                     ?_rdBlkRegCompleteHandler:	
  9761                           ; 1 bytes @ 0x9
  9762                           
  9763  0079                     i2c_restartWrite@p:	
  9764                           ; 1 bytes @ 0x9
  9765                           
  9766  0079                     returnStop@p:	
  9767                           ; 1 bytes @ 0x9
  9768                           
  9769  0079                     returnReset@p:	
  9770                           ; 1 bytes @ 0x9
  9771                           
  9772  0079                     wr1RegCompleteHandler@p:	
  9773                           ; 1 bytes @ 0x9
  9774                           
  9775  0079                     rd1RegCompleteHandler@p:	
  9776                           ; 1 bytes @ 0x9
  9777                           
  9778  0079                     rd2RegCompleteHandler@p:	
  9779                           ; 1 bytes @ 0x9
  9780                           
  9781  0079                     wr2RegCompleteHandler@p:	
  9782                           ; 1 bytes @ 0x9
  9783                           
  9784  0079                     rdBlkRegCompleteHandler@p:	
  9785                           ; 1 bytes @ 0x9
  9786                           
  9787                           
  9788                           ; 1 bytes @ 0x9
  9789  0079                     	ds	1
  9790  007A                     ??_returnStop:	
  9791  007A                     ??_returnReset:	
  9792                           ; 1 bytes @ 0xA
  9793                           
  9794  007A                     ??_i2c_restartWrite:	
  9795                           ; 1 bytes @ 0xA
  9796                           
  9797  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9798                           ; 1 bytes @ 0xA
  9799                           
  9800  007A                     ??_do_I2C_TX:	
  9801                           ; 1 bytes @ 0xA
  9802                           
  9803  007A                     ??_do_I2C_RX:	
  9804                           ; 1 bytes @ 0xA
  9805                           
  9806  007A                     ??_do_I2C_TX_EMPTY:	
  9807                           ; 1 bytes @ 0xA
  9808                           
  9809  007A                     ??_wr1RegCompleteHandler:	
  9810                           ; 1 bytes @ 0xA
  9811                           
  9812  007A                     ??_rd1RegCompleteHandler:	
  9813                           ; 1 bytes @ 0xA
  9814                           
  9815  007A                     ??_rd2RegCompleteHandler:	
  9816                           ; 1 bytes @ 0xA
  9817                           
  9818  007A                     ??_wr2RegCompleteHandler:	
  9819                           ; 1 bytes @ 0xA
  9820                           
  9821  007A                     ??_rdBlkRegCompleteHandler:	
  9822                           ; 1 bytes @ 0xA
  9823                           
  9824                           
  9825                           ; 1 bytes @ 0xA
  9826  007A                     	ds	3
  9827  007D                     ??_INTERRUPT_InterruptManager:	
  9828                           
  9829                           	psect	cstackBANK0
  9830  0020                     __pcstackBANK0:	
  9831                           ; 1 bytes @ 0xD
  9832                           
  9833  0020                     ??_i2c_ISR:	
  9834                           
  9835                           ; 1 bytes @ 0x0
  9836  0020                     	ds	3
  9837  0023                     ??_i2c1_driver_open:	
  9838  0023                     ??_PMD_Initialize:	
  9839                           ; 1 bytes @ 0x3
  9840                           
  9841  0023                     ??_PIN_MANAGER_Initialize:	
  9842                           ; 1 bytes @ 0x3
  9843                           
  9844  0023                     ??_OSCILLATOR_Initialize:	
  9845                           ; 1 bytes @ 0x3
  9846                           
  9847  0023                     ??_PWM6_Initialize:	
  9848                           ; 1 bytes @ 0x3
  9849                           
  9850  0023                     ??_ADCC_Initialize:	
  9851                           ; 1 bytes @ 0x3
  9852                           
  9853  0023                     ?_TMR1_SetInterruptHandler:	
  9854                           ; 1 bytes @ 0x3
  9855                           
  9856  0023                     ?_TMR2_SetInterruptHandler:	
  9857                           ; 1 bytes @ 0x3
  9858                           
  9859  0023                     ??_checkDebounceSW1:	
  9860                           ; 1 bytes @ 0x3
  9861                           
  9862  0023                     ?_TMR0_SetInterruptHandler:	
  9863                           ; 1 bytes @ 0x3
  9864                           
  9865  0023                     ?_LED_bin:	
  9866                           ; 1 bytes @ 0x3
  9867                           
  9868  0023                     ??_TMR0_StartTimer:	
  9869                           ; 1 bytes @ 0x3
  9870                           
  9871  0023                     ??_checkDebounceSW2:	
  9872                           ; 1 bytes @ 0x3
  9873                           
  9874  0023                     ??_getSubfieldInfo:	
  9875                           ; 1 bytes @ 0x3
  9876                           
  9877  0023                     ??_WriteI2C:	
  9878                           ; 1 bytes @ 0x3
  9879                           
  9880  0023                     ??_ReadI2C:	
  9881                           ; 1 bytes @ 0x3
  9882                           
  9883  0023                     ?_INT_SetInterruptHandler:	
  9884                           ; 1 bytes @ 0x3
  9885                           
  9886  0023                     ??_ADCC_StartConversion:	
  9887                           ; 1 bytes @ 0x3
  9888                           
  9889  0023                     ??_ADCC_IsConversionDone:	
  9890                           ; 1 bytes @ 0x3
  9891                           
  9892  0023                     ?_PWM6_LoadDutyValue:	
  9893                           ; 1 bytes @ 0x3
  9894                           
  9895  0023                     ?_DATAEE_ReadByte:	
  9896                           ; 1 bytes @ 0x3
  9897                           
  9898  0023                     ?___bmul:	
  9899                           ; 1 bytes @ 0x3
  9900                           
  9901  0023                     ?_ADCC_GetConversionResult:	
  9902                           ; 1 bytes @ 0x3
  9903                           
  9904  0023                     ?___awdiv:	
  9905                           ; 2 bytes @ 0x3
  9906                           
  9907  0023                     ?___awmod:	
  9908                           ; 2 bytes @ 0x3
  9909                           
  9910  0023                     ADCC_StartConversion@channel:	
  9911                           ; 2 bytes @ 0x3
  9912                           
  9913  0023                     ___bmul@multiplicand:	
  9914                           ; 1 bytes @ 0x3
  9915                           
  9916  0023                     INT_SetInterruptHandler@InterruptHandler:	
  9917                           ; 1 bytes @ 0x3
  9918                           
  9919  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
  9920                           ; 2 bytes @ 0x3
  9921                           
  9922  0023                     PWM6_LoadDutyValue@dutyValue:	
  9923                           ; 2 bytes @ 0x3
  9924                           
  9925  0023                     DATAEE_ReadByte@bAdd:	
  9926                           ; 2 bytes @ 0x3
  9927                           
  9928  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
  9929                           ; 2 bytes @ 0x3
  9930                           
  9931  0023                     LED_bin@value:	
  9932                           ; 2 bytes @ 0x3
  9933                           
  9934  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
  9935                           ; 2 bytes @ 0x3
  9936                           
  9937  0023                     ___awdiv@divisor:	
  9938                           ; 2 bytes @ 0x3
  9939                           
  9940  0023                     ___awmod@divisor:	
  9941                           ; 2 bytes @ 0x3
  9942                           
  9943                           
  9944                           ; 2 bytes @ 0x3
  9945  0023                     	ds	1
  9946  0024                     ??___bmul:	
  9947  0024                     WriteI2C@data_out:	
  9948                           ; 1 bytes @ 0x4
  9949                           
  9950                           
  9951                           ; 1 bytes @ 0x4
  9952  0024                     	ds	1
  9953  0025                     ??_TMR2_Initialize:	
  9954  0025                     ??_TMR1_Initialize:	
  9955                           ; 1 bytes @ 0x5
  9956                           
  9957  0025                     ??_TMR0_Initialize:	
  9958                           ; 1 bytes @ 0x5
  9959                           
  9960  0025                     ??_TMR1_SetInterruptHandler:	
  9961                           ; 1 bytes @ 0x5
  9962                           
  9963  0025                     ??_TMR2_SetInterruptHandler:	
  9964                           ; 1 bytes @ 0x5
  9965                           
  9966  0025                     ??_TMR0_SetInterruptHandler:	
  9967                           ; 1 bytes @ 0x5
  9968                           
  9969  0025                     ??_LED_bin:	
  9970                           ; 1 bytes @ 0x5
  9971                           
  9972  0025                     ??_tsttc:	
  9973                           ; 1 bytes @ 0x5
  9974                           
  9975  0025                     ??_cksum:	
  9976                           ; 1 bytes @ 0x5
  9977                           
  9978  0025                     ??_INT_SetInterruptHandler:	
  9979                           ; 1 bytes @ 0x5
  9980                           
  9981  0025                     ??_EXT_INT_Initialize:	
  9982                           ; 1 bytes @ 0x5
  9983                           
  9984  0025                     ??_SYSTEM_Initialize:	
  9985                           ; 1 bytes @ 0x5
  9986                           
  9987  0025                     ??_ADCC_GetConversionResult:	
  9988                           ; 1 bytes @ 0x5
  9989                           
  9990  0025                     ??_PWM6_LoadDutyValue:	
  9991                           ; 1 bytes @ 0x5
  9992                           
  9993  0025                     ??_DATAEE_ReadByte:	
  9994                           ; 1 bytes @ 0x5
  9995                           
  9996  0025                     ?_ADC_read:	
  9997                           ; 1 bytes @ 0x5
  9998                           
  9999  0025                     ___bmul@product:	
 10000                           ; 2 bytes @ 0x5
 10001                           
 10002  0025                     ___awdiv@dividend:	
 10003                           ; 1 bytes @ 0x5
 10004                           
 10005  0025                     ___awmod@dividend:	
 10006                           ; 2 bytes @ 0x5
 10007                           
 10008                           
 10009                           ; 2 bytes @ 0x5
 10010  0025                     	ds	1
 10011  0026                     tsttc@value:	
 10012  0026                     cksum@res:	
 10013                           ; 1 bytes @ 0x6
 10014                           
 10015  0026                     ___bmul@multiplier:	
 10016                           ; 1 bytes @ 0x6
 10017                           
 10018                           
 10019                           ; 1 bytes @ 0x6
 10020  0026                     	ds	1
 10021  0027                     ??_ADC_read:	
 10022  0027                     ?_read_ring:	
 10023                           ; 1 bytes @ 0x7
 10024                           
 10025  0027                     ??_all_LED:	
 10026                           ; 1 bytes @ 0x7
 10027                           
 10028  0027                     ??_mod1_LED:	
 10029                           ; 1 bytes @ 0x7
 10030                           
 10031  0027                     ??_mod2_LED:	
 10032                           ; 1 bytes @ 0x7
 10033                           
 10034  0027                     ??_mod3_LED:	
 10035                           ; 1 bytes @ 0x7
 10036                           
 10037  0027                     ??_mod4_LED:	
 10038                           ; 1 bytes @ 0x7
 10039                           
 10040  0027                     ??_mode_select_LED:	
 10041                           ; 1 bytes @ 0x7
 10042                           
 10043  0027                     ??___awdiv:	
 10044                           ; 1 bytes @ 0x7
 10045                           
 10046  0027                     ??___awmod:	
 10047                           ; 1 bytes @ 0x7
 10048                           
 10049  0027                     read_ring@nreg:	
 10050                           ; 1 bytes @ 0x7
 10051                           
 10052  0027                     cksum@i:	
 10053                           ; 1 bytes @ 0x7
 10054                           
 10055                           
 10056                           ; 2 bytes @ 0x7
 10057  0027                     	ds	1
 10058  0028                     read_ring@nreg_init:	
 10059  0028                     ___awdiv@counter:	
 10060                           ; 1 bytes @ 0x8
 10061                           
 10062  0028                     ___awmod@counter:	
 10063                           ; 1 bytes @ 0x8
 10064                           
 10065                           
 10066                           ; 1 bytes @ 0x8
 10067  0028                     	ds	1
 10068  0029                     ?_DATAEE_WriteByte:	
 10069  0029                     read_ring@index:	
 10070                           ; 1 bytes @ 0x9
 10071                           
 10072  0029                     ___awdiv@sign:	
 10073                           ; 1 bytes @ 0x9
 10074                           
 10075  0029                     ___awmod@sign:	
 10076                           ; 1 bytes @ 0x9
 10077                           
 10078  0029                     DATAEE_WriteByte@bAdd:	
 10079                           ; 1 bytes @ 0x9
 10080                           
 10081                           
 10082                           ; 2 bytes @ 0x9
 10083  0029                     	ds	1
 10084  002A                     read_ring@subindex:	
 10085  002A                     ___awdiv@quotient:	
 10086                           ; 1 bytes @ 0xA
 10087                           
 10088                           
 10089                           ; 2 bytes @ 0xA
 10090  002A                     	ds	1
 10091  002B                     ??_read_ring:	
 10092  002B                     DATAEE_WriteByte@bData:	
 10093                           ; 1 bytes @ 0xB
 10094                           
 10095                           
 10096                           ; 1 bytes @ 0xB
 10097  002B                     	ds	1
 10098  002C                     ?_recHour:	
 10099  002C                     ?_recMinutes:	
 10100                           ; 1 bytes @ 0xC
 10101                           
 10102  002C                     ?_recAlarm:	
 10103                           ; 1 bytes @ 0xC
 10104                           
 10105  002C                     ?_recTempThresh:	
 10106                           ; 1 bytes @ 0xC
 10107                           
 10108  002C                     ?_recLumThresh:	
 10109                           ; 1 bytes @ 0xC
 10110                           
 10111  002C                     ??_representLed:	
 10112                           ; 1 bytes @ 0xC
 10113                           
 10114  002C                     ??_DATAEE_WriteByte:	
 10115                           ; 1 bytes @ 0xC
 10116                           
 10117  002C                     DATAEE_WriteByte@GIEBitValue:	
 10118                           ; 1 bytes @ 0xC
 10119                           
 10120  002C                     recLumThresh@_value:	
 10121                           ; 1 bytes @ 0xC
 10122                           
 10123  002C                     recTempThresh@_value:	
 10124                           ; 1 bytes @ 0xC
 10125                           
 10126  002C                     recAlarm@_value:	
 10127                           ; 1 bytes @ 0xC
 10128                           
 10129  002C                     recMinutes@_value:	
 10130                           ; 1 bytes @ 0xC
 10131                           
 10132  002C                     recHour@_value:	
 10133                           ; 1 bytes @ 0xC
 10134                           
 10135                           
 10136                           ; 1 bytes @ 0xC
 10137  002C                     	ds	1
 10138  002D                     ?_push_ring:	
 10139  002D                     ??_cksum_w:	
 10140                           ; 1 bytes @ 0xD
 10141                           
 10142  002D                     ??_recHour:	
 10143                           ; 1 bytes @ 0xD
 10144                           
 10145  002D                     ??_recMinutes:	
 10146                           ; 1 bytes @ 0xD
 10147                           
 10148  002D                     ??_recAlarm:	
 10149                           ; 1 bytes @ 0xD
 10150                           
 10151  002D                     ??_recTempThresh:	
 10152                           ; 1 bytes @ 0xD
 10153                           
 10154  002D                     ??_recLumThresh:	
 10155                           ; 1 bytes @ 0xD
 10156                           
 10157  002D                     ??_reset_recv:	
 10158                           ; 1 bytes @ 0xD
 10159                           
 10160  002D                     push_ring@nreg:	
 10161                           ; 1 bytes @ 0xD
 10162                           
 10163  002D                     read_ring@i:	
 10164                           ; 1 bytes @ 0xD
 10165                           
 10166  002D                     reset_recv@i:	
 10167                           ; 1 bytes @ 0xD
 10168                           
 10169                           
 10170                           ; 2 bytes @ 0xD
 10171  002D                     	ds	1
 10172  002E                     push_ring@nreg_init:	
 10173  002E                     read_ring@nreg_pt:	
 10174                           ; 1 bytes @ 0xE
 10175                           
 10176                           
 10177                           ; 1 bytes @ 0xE
 10178  002E                     	ds	1
 10179  002F                     ??_recoverData:	
 10180  002F                     push_ring@ring_byte:	
 10181                           ; 1 bytes @ 0xF
 10182                           
 10183  002F                     read_ring@absindex:	
 10184                           ; 1 bytes @ 0xF
 10185                           
 10186                           
 10187                           ; 1 bytes @ 0xF
 10188  002F                     	ds	1
 10189  0030                     ??_push_ring:	
 10190                           
 10191                           ; 1 bytes @ 0x10
 10192  0030                     	ds	1
 10193  0031                     representLed@val:	
 10194                           
 10195                           ; 1 bytes @ 0x11
 10196  0031                     	ds	1
 10197  0032                     representLed@aux:	
 10198  0032                     push_ring@i:	
 10199                           ; 1 bytes @ 0x12
 10200                           
 10201                           
 10202                           ; 1 bytes @ 0x12
 10203  0032                     	ds	1
 10204  0033                     ??_increment_subfield:	
 10205  0033                     push_ring@nreg_pt:	
 10206                           ; 1 bytes @ 0x13
 10207                           
 10208                           
 10209                           ; 1 bytes @ 0x13
 10210  0033                     	ds	2
 10211  0035                     increment_subfield@exit:	
 10212                           
 10213                           ; 1 bytes @ 0x15
 10214  0035                     	ds	1
 10215  0036                     increment_subfield@_value:	
 10216                           
 10217                           ; 1 bytes @ 0x16
 10218  0036                     	ds	1
 10219  0037                     ??_selectSubfield:	
 10220                           
 10221                           ; 1 bytes @ 0x17
 10222  0037                     	ds	2
 10223  0039                     selectSubfield@subfield:	
 10224                           
 10225                           ; 2 bytes @ 0x19
 10226  0039                     	ds	2
 10227  003B                     ??_config_routine:	
 10228                           
 10229                           ; 1 bytes @ 0x1B
 10230  003B                     	ds	1
 10231  003C                     config_routine@select_mode:	
 10232                           
 10233                           ; 2 bytes @ 0x1C
 10234  003C                     	ds	2
 10235  003E                     ??_main:	
 10236                           
 10237                           ; 1 bytes @ 0x1E
 10238  003E                     	ds	5
 10239                           
 10240                           	psect	maintext
 10241  007E                     __pmaintext:	
 10242 ;;
 10243 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10244 ;;
 10245 ;; *************** function _main *****************
 10246 ;; Defined at:
 10247 ;;		line 179 in file "main.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  t5s             1    4[BANK1 ] unsigned char 
 10252 ;;  aux1            1    1[BANK1 ] unsigned char 
 10253 ;;  aux             1    0[BANK1 ] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10258 ;; Tracked objects:
 10259 ;;		On entry : B1F/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Totals:         0       5       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;Total ram usage:       11 bytes
 10268 ;; Hardware stack levels required when called:   11
 10269 ;; This function calls:
 10270 ;;		_ADC_read
 10271 ;;		_DATAEE_WriteByte
 10272 ;;		_INT_SetInterruptHandler
 10273 ;;		_LED_bin
 10274 ;;		_PWM6_LoadDutyValue
 10275 ;;		_SYSTEM_Initialize
 10276 ;;		_TMR0_SetInterruptHandler
 10277 ;;		_TMR0_StartTimer
 10278 ;;		_TMR1_SetInterruptHandler
 10279 ;;		_TMR2_SetInterruptHandler
 10280 ;;		_cksum_w
 10281 ;;		_config_routine
 10282 ;;		_i2c1_driver_open
 10283 ;;		_push_ring
 10284 ;;		_read_ring
 10285 ;;		_recoverData
 10286 ;;		_tsttc
 10287 ;; This function is called by:
 10288 ;;		Startup code after reset
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           
 10293                           ;psect for function _main
 10294  007E                     _main:	
 10295  007E                     l7315:	
 10296                           ;incstack = 0
 10297                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10298                           
 10299                           
 10300                           ;main.c: 181:     SYSTEM_Initialize();
 10301  007E  318B  233F  3180   	fcall	_SYSTEM_Initialize
 10302                           
 10303                           ;main.c: 182:     TMR0_SetInterruptHandler(ISR_3s);
 10304  0081  30D9               	movlw	low _ISR_3s
 10305  0082  0020               	movlb	0	; select bank0
 10306  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10307  0084  300A               	movlw	high _ISR_3s
 10308  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10309  0086  3188  20FD  3180   	fcall	_TMR0_SetInterruptHandler
 10310                           
 10311                           ;main.c: 183:     TMR1_SetInterruptHandler(handler_clock_hms);
 10312  0089  3067               	movlw	low _handler_clock_hms
 10313  008A  0020               	movlb	0	; select bank0
 10314  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10315  008C  300D               	movlw	high _handler_clock_hms
 10316  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10317  008E  3189  2106  3180   	fcall	_TMR1_SetInterruptHandler
 10318                           
 10319                           ;main.c: 184:     INT_SetInterruptHandler(sw1_EXT);
 10320  0091  3072               	movlw	low _sw1_EXT
 10321  0092  0020               	movlb	0	; select bank0
 10322  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10323  0094  300C               	movlw	high _sw1_EXT
 10324  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10325  0096  3188  20EB  3180   	fcall	_INT_SetInterruptHandler
 10326                           
 10327                           ;main.c: 185:     TMR2_SetInterruptHandler(handler_clock_ms);
 10328  0099  304C               	movlw	low _handler_clock_ms
 10329  009A  0020               	movlb	0	; select bank0
 10330  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10331  009C  3009               	movlw	high _handler_clock_ms
 10332  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10333  009E  3189  210F  3180   	fcall	_TMR2_SetInterruptHandler
 10334  00A1                     l7317:	
 10335  00A1                     l7319:	
 10336  00A1                     l1252:	
 10337  00A1  3096               	movlw	150
 10338  00A2  0020               	movlb	0	; select bank0
 10339  00A3  00BE               	movwf	??_main
 10340  00A4  083E               	movf	??_main,w
 10341  00A5  00E7               	movwf	_nreg
 10342  00A6                     l7323:	
 10343                           
 10344                           ;main.c: 193:     nreg_pt = 0;
 10345  00A6  01DD               	clrf	_nreg_pt
 10346  00A7                     l7325:	
 10347                           
 10348                           ;main.c: 194:     nreg_init = 0;
 10349  00A7  01DE               	clrf	_nreg_init
 10350  00A8                     l7327:	
 10351                           
 10352                           ;main.c: 195:     alaf = 0;
 10353  00A8  01D1               	clrf	_alaf
 10354  00A9                     l7329:	
 10355                           
 10356                           ;main.c: 196:     temp = 0;
 10357  00A9  01D2               	clrf	_temp
 10358  00AA                     l7331:	
 10359                           
 10360                           ;main.c: 197:     lum_bin = 0;
 10361  00AA  01C9               	clrf	_lum_bin
 10362  00AB  01CA               	clrf	_lum_bin+1
 10363  00AC                     l7333:	
 10364                           
 10365                           ;main.c: 198:     lum_threshold = 0;
 10366  00AC  01C7               	clrf	_lum_threshold
 10367  00AD  01C8               	clrf	_lum_threshold+1
 10368  00AE                     l7335:	
 10369                           
 10370                           ;main.c: 199:     duty_cycle = 0;
 10371  00AE  0021               	movlb	1	; select bank1
 10372  00AF  01BD               	clrf	_duty_cycle^(0+128)
 10373  00B0  01BE               	clrf	(_duty_cycle+1)^(0+128)
 10374  00B1                     l7337:	
 10375                           
 10376                           ;main.c: 200:     set_mode= 0;
 10377  00B1  0020               	movlb	0	; select bank0
 10378  00B2  01D5               	clrf	_set_mode	;volatile
 10379  00B3                     l7339:	
 10380                           
 10381                           ;main.c: 203:     i2c1_driver_open();
 10382  00B3  3189  2158  3180   	fcall	_i2c1_driver_open
 10383  00B6                     l7341:	
 10384                           
 10385                           ;main.c: 204:     TRISCbits.TRISC3 = 1;
 10386  00B6  0020               	movlb	0	; select bank0
 10387  00B7  1593               	bsf	19,3	;volatile
 10388  00B8                     l7343:	
 10389                           
 10390                           ;main.c: 205:     TRISCbits.TRISC4 = 1;
 10391  00B8  1613               	bsf	19,4	;volatile
 10392  00B9                     l7345:	
 10393                           
 10394                           ;main.c: 206:     WPUC3 = 1;
 10395  00B9  003E               	movlb	30	; select bank30
 10396  00BA  15CF               	bsf	79,3	;volatile
 10397  00BB                     l7347:	
 10398                           
 10399                           ;main.c: 207:     WPUC4 = 1;
 10400  00BB  164F               	bsf	79,4	;volatile
 10401  00BC                     l7349:	
 10402                           
 10403                           ;main.c: 210:     recoverData();
 10404  00BC  3183  2389  3180   	fcall	_recoverData
 10405  00BF                     l7351:	
 10406                           
 10407                           ;main.c: 212:     PWM6_LoadDutyValue(0);
 10408  00BF  3000               	movlw	0
 10409  00C0  0020               	movlb	0	; select bank0
 10410  00C1  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 10411  00C2  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10412  00C3  318A  22F2  3180   	fcall	_PWM6_LoadDutyValue
 10413  00C6                     l7353:	
 10414                           
 10415                           ;main.c: 213:     alarm = 0 ;
 10416  00C6  0020               	movlb	0	; select bank0
 10417  00C7  01D3               	clrf	_alarm	;volatile
 10418  00C8                     l7355:	
 10419  00C8  003E               	movlb	30	; select bank30
 10420  00C9  1644               	bsf	68,4	;volatile
 10421  00CA                     l7357:	
 10422                           
 10423                           ;main.c: 217:     (INTCONbits.GIE = 1);
 10424  00CA  178B               	bsf	11,7	;volatile
 10425  00CB                     l7359:	
 10426                           
 10427                           ;main.c: 220:     (INTCONbits.PEIE = 1);
 10428  00CB  170B               	bsf	11,6	;volatile
 10429  00CC                     l1255:	
 10430                           ;main.c: 223:     while (1)
 10431                           
 10432  00CC  0063               	sleep	;# 
 10433  00CD                     l7361:	
 10434                           
 10435                           ;main.c: 227:         __nop();
 10436  00CD  0000               	nop
 10437  00CE                     l7363:	
 10438                           
 10439                           ;main.c: 229:         PIE4bits.TMR1IE = 0;
 10440  00CE  002E               	movlb	14	; select bank14
 10441  00CF  101A               	bcf	26,0	;volatile
 10442  00D0                     l7365:	
 10443                           
 10444                           ;main.c: 230:         t5s = last5s;
 10445  00D0  0020               	movlb	0	; select bank0
 10446  00D1  0857               	movf	_last5s,w	;volatile
 10447  00D2  00BE               	movwf	??_main
 10448  00D3  083E               	movf	??_main,w
 10449  00D4  0021               	movlb	1	; select bank1
 10450  00D5  00DA               	movwf	main@t5s^(0+128)
 10451  00D6                     l7367:	
 10452                           
 10453                           ;main.c: 231:         PIE4bits.TMR1IE = 1;
 10454  00D6  002E               	movlb	14	; select bank14
 10455  00D7  141A               	bsf	26,0	;volatile
 10456  00D8                     l7369:	
 10457                           
 10458                           ;main.c: 233:         if(t5s >= pmon){
 10459  00D8  0020               	movlb	0	; select bank0
 10460  00D9  0866               	movf	_pmon,w
 10461  00DA  0021               	movlb	1	; select bank1
 10462  00DB  025A               	subwf	main@t5s^(0+128),w
 10463  00DC  1C03               	skipc
 10464  00DD  28DF               	goto	u4881
 10465  00DE  28E0               	goto	u4880
 10466  00DF                     u4881:	
 10467  00DF  28CC               	goto	l1255
 10468  00E0                     u4880:	
 10469  00E0                     l7371:	
 10470                           
 10471                           ;main.c: 234:             PIE4bits.TMR1IE = 0;
 10472  00E0  002E               	movlb	14	; select bank14
 10473  00E1  101A               	bcf	26,0	;volatile
 10474  00E2                     l7373:	
 10475                           
 10476                           ;main.c: 235:             last5s =0;
 10477  00E2  0020               	movlb	0	; select bank0
 10478  00E3  01D7               	clrf	_last5s	;volatile
 10479  00E4                     l7375:	
 10480                           
 10481                           ;main.c: 236:             PIE4bits.TMR1IE = 1;
 10482  00E4  002E               	movlb	14	; select bank14
 10483  00E5  141A               	bsf	26,0	;volatile
 10484  00E6                     l7377:	
 10485                           
 10486                           ;main.c: 239:                 if(!config_mode){
 10487  00E6  0020               	movlb	0	; select bank0
 10488  00E7  0854               	movf	_config_mode,w	;volatile
 10489  00E8  1D03               	btfss	3,2
 10490  00E9  28EB               	goto	u4891
 10491  00EA  28EC               	goto	u4890
 10492  00EB                     u4891:	
 10493  00EB  29E2               	goto	l7437
 10494  00EC                     u4890:	
 10495  00EC                     l7379:	
 10496                           
 10497                           ;main.c: 241:                     convertedValue = ADC_read();
 10498  00EC  318B  230B  3180   	fcall	_ADC_read
 10499  00EF  0020               	movlb	0	; select bank0
 10500  00F0  0826               	movf	?_ADC_read+1,w
 10501  00F1  00CC               	movwf	_convertedValue+1
 10502  00F2  0825               	movf	?_ADC_read,w
 10503  00F3  00CB               	movwf	_convertedValue
 10504  00F4                     l7381:	
 10505                           
 10506                           ;main.c: 243:                     lum_bin = (convertedValue >> 8);
 10507  00F4  084C               	movf	_convertedValue+1,w
 10508  00F5  00BF               	movwf	??_main+1
 10509  00F6  084B               	movf	_convertedValue,w
 10510  00F7  00BE               	movwf	??_main
 10511  00F8  083F               	movf	??_main+1,w
 10512  00F9  00BE               	movwf	??_main
 10513  00FA  01BF               	clrf	??_main+1
 10514  00FB  083E               	movf	??_main,w
 10515  00FC  00C9               	movwf	_lum_bin
 10516  00FD  083F               	movf	??_main+1,w
 10517  00FE  00CA               	movwf	_lum_bin+1
 10518  00FF                     l7383:	
 10519                           
 10520                           ;main.c: 245:                     LED_bin(lum_bin);
 10521  00FF  084A               	movf	_lum_bin+1,w
 10522  0100  00A4               	movwf	LED_bin@value+1
 10523  0101  0849               	movf	_lum_bin,w
 10524  0102  00A3               	movwf	LED_bin@value
 10525  0103  318B  2325  3180   	fcall	_LED_bin
 10526  0106                     l7385:	
 10527                           
 10528                           ;main.c: 248:                     __nop();
 10529  0106  0000               	nop
 10530  0107                     l7387:	
 10531                           
 10532                           ;main.c: 249:                     temp = tsttc();
 10533  0107  3182  2239  3180   	fcall	_tsttc
 10534  010A  0020               	movlb	0	; select bank0
 10535  010B  00BE               	movwf	??_main
 10536  010C  083E               	movf	??_main,w
 10537  010D  00D2               	movwf	_temp
 10538  010E                     l7389:	
 10539                           
 10540                           ;main.c: 250:                     __nop();
 10541  010E  0000               	nop
 10542  010F                     l7391:	
 10543                           
 10544                           ;main.c: 253:                     lum_threshold = (lum_bin > 2 || temp > 100 ) & alaf;
 10545  010F  0021               	movlb	1	; select bank1
 10546  0110  01DB               	clrf	_main$2410^(0+128)
 10547  0111  0ADB               	incf	_main$2410^(0+128),f
 10548  0112                     l7393:	
 10549  0112  3000               	movlw	0
 10550  0113  0020               	movlb	0	; select bank0
 10551  0114  024A               	subwf	_lum_bin+1,w
 10552  0115  3003               	movlw	3
 10553  0116  1903               	skipnz
 10554  0117  0249               	subwf	_lum_bin,w
 10555  0118  1803               	skipnc
 10556  0119  291B               	goto	u4901
 10557  011A  291C               	goto	u4900
 10558  011B                     u4901:	
 10559  011B  2924               	goto	l7399
 10560  011C                     u4900:	
 10561  011C                     l7395:	
 10562  011C  3065               	movlw	101
 10563  011D  0252               	subwf	_temp,w
 10564  011E  1803               	skipnc
 10565  011F  2921               	goto	u4911
 10566  0120  2922               	goto	u4910
 10567  0121                     u4911:	
 10568  0121  2924               	goto	l7399
 10569  0122                     u4910:	
 10570  0122                     l7397:	
 10571  0122  0021               	movlb	1	; select bank1
 10572  0123  01DB               	clrf	_main$2410^(0+128)
 10573  0124                     l7399:	
 10574  0124  0021               	movlb	1	; select bank1
 10575  0125  085B               	movf	_main$2410^(0+128),w
 10576  0126  0020               	movlb	0	; select bank0
 10577  0127  0551               	andwf	_alaf,w
 10578  0128  00BE               	movwf	??_main
 10579  0129  01BF               	clrf	??_main+1
 10580  012A  083E               	movf	??_main,w
 10581  012B  00C7               	movwf	_lum_threshold
 10582  012C  083F               	movf	??_main+1,w
 10583  012D  00C8               	movwf	_lum_threshold+1
 10584  012E                     l7401:	
 10585                           
 10586                           ;main.c: 255:                     if (temp != read_ring(nreg_pt, nreg, nreg_init, 0, 3) 
      +                          || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10587  012E  0867               	movf	_nreg,w
 10588  012F  00BE               	movwf	??_main
 10589  0130  083E               	movf	??_main,w
 10590  0131  00A7               	movwf	read_ring@nreg
 10591  0132  085E               	movf	_nreg_init,w
 10592  0133  00BF               	movwf	??_main+1
 10593  0134  083F               	movf	??_main+1,w
 10594  0135  00A8               	movwf	read_ring@nreg_init
 10595  0136  01A9               	clrf	read_ring@index
 10596  0137  3003               	movlw	3
 10597  0138  00C0               	movwf	??_main+2
 10598  0139  0840               	movf	??_main+2,w
 10599  013A  00AA               	movwf	read_ring@subindex
 10600  013B  085D               	movf	_nreg_pt,w
 10601  013C  318D  259B  3180   	fcall	_read_ring
 10602  013F  0020               	movlb	0	; select bank0
 10603  0140  0652               	xorwf	_temp,w
 10604  0141  1D03               	skipz
 10605  0142  2944               	goto	u4921
 10606  0143  2945               	goto	u4920
 10607  0144                     u4921:	
 10608  0144  2963               	goto	l1263
 10609  0145                     u4920:	
 10610  0145                     l7403:	
 10611  0145  0867               	movf	_nreg,w
 10612  0146  00BE               	movwf	??_main
 10613  0147  083E               	movf	??_main,w
 10614  0148  00A7               	movwf	read_ring@nreg
 10615  0149  085E               	movf	_nreg_init,w
 10616  014A  00BF               	movwf	??_main+1
 10617  014B  083F               	movf	??_main+1,w
 10618  014C  00A8               	movwf	read_ring@nreg_init
 10619  014D  01A9               	clrf	read_ring@index
 10620  014E  3004               	movlw	4
 10621  014F  00C0               	movwf	??_main+2
 10622  0150  0840               	movf	??_main+2,w
 10623  0151  00AA               	movwf	read_ring@subindex
 10624  0152  085D               	movf	_nreg_pt,w
 10625  0153  318D  259B  3180   	fcall	_read_ring
 10626  0156  0020               	movlb	0	; select bank0
 10627  0157  00C1               	movwf	??_main+3
 10628  0158  01C2               	clrf	??_main+4
 10629  0159  084A               	movf	_lum_bin+1,w
 10630  015A  0642               	xorwf	??_main+4,w
 10631  015B  1D03               	skipz
 10632  015C  295F               	goto	u4935
 10633  015D  0849               	movf	_lum_bin,w
 10634  015E  0641               	xorwf	??_main+3,w
 10635  015F                     u4935:	
 10636  015F  1903               	skipnz
 10637  0160  2962               	goto	u4931
 10638  0161  2963               	goto	u4930
 10639  0162                     u4931:	
 10640  0162  29A5               	goto	l7415
 10641  0163                     u4930:	
 10642  0163                     l1263:	
 10643                           
 10644                           ;main.c: 257:                         PIE4bits.TMR1IE = 0;
 10645  0163  002E               	movlb	14	; select bank14
 10646  0164  101A               	bcf	26,0	;volatile
 10647  0165                     l7405:	
 10648                           
 10649                           ;main.c: 258:                         ring_byte[0] = clkh;
 10650  0165  0020               	movlb	0	; select bank0
 10651  0166  085C               	movf	_clkh,w	;volatile
 10652  0167  00BE               	movwf	??_main
 10653  0168  083E               	movf	??_main,w
 10654  0169  0021               	movlb	1	; select bank1
 10655  016A  00C9               	movwf	_ring_byte^(0+128)
 10656                           
 10657                           ;main.c: 259:                         ring_byte[1] = clkm;
 10658  016B  0020               	movlb	0	; select bank0
 10659  016C  085B               	movf	_clkm,w	;volatile
 10660  016D  00BE               	movwf	??_main
 10661  016E  083E               	movf	??_main,w
 10662  016F  0021               	movlb	1	; select bank1
 10663  0170  00CA               	movwf	(_ring_byte^(0+128)+1)
 10664                           
 10665                           ;main.c: 260:                         ring_byte[2] = seg;
 10666  0171  0020               	movlb	0	; select bank0
 10667  0172  085A               	movf	_seg,w	;volatile
 10668  0173  00BE               	movwf	??_main
 10669  0174  083E               	movf	??_main,w
 10670  0175  0021               	movlb	1	; select bank1
 10671  0176  00CB               	movwf	(_ring_byte^(0+128)+2)
 10672  0177                     l7407:	
 10673                           
 10674                           ;main.c: 261:                         PIE4bits.TMR1IE = 1;
 10675  0177  002E               	movlb	14	; select bank14
 10676  0178  141A               	bsf	26,0	;volatile
 10677                           
 10678                           ;main.c: 262:                         ring_byte[3] = temp;
 10679  0179  0020               	movlb	0	; select bank0
 10680  017A  0852               	movf	_temp,w
 10681  017B  00BE               	movwf	??_main
 10682  017C  083E               	movf	??_main,w
 10683  017D  0021               	movlb	1	; select bank1
 10684  017E  00CC               	movwf	(_ring_byte^(0+128)+3)
 10685                           
 10686                           ;main.c: 263:                         ring_byte[4] = lum_bin;
 10687  017F  0020               	movlb	0	; select bank0
 10688  0180  0849               	movf	_lum_bin,w
 10689  0181  00BE               	movwf	??_main
 10690  0182  083E               	movf	??_main,w
 10691  0183  0021               	movlb	1	; select bank1
 10692  0184  00CD               	movwf	(_ring_byte^(0+128)+4)
 10693  0185                     l7409:	
 10694                           
 10695                           ;main.c: 264:                         push_ring(&nreg_pt, nreg, &nreg_init, ring_byte);
 10696  0185  0020               	movlb	0	; select bank0
 10697  0186  0867               	movf	_nreg,w
 10698  0187  00BE               	movwf	??_main
 10699  0188  083E               	movf	??_main,w
 10700  0189  00AD               	movwf	push_ring@nreg
 10701  018A  305E               	movlw	(low (_nreg_init| 0))& (0+255)
 10702  018B  00BF               	movwf	??_main+1
 10703  018C  083F               	movf	??_main+1,w
 10704  018D  00AE               	movwf	push_ring@nreg_init
 10705  018E  30C9               	movlw	(low (_ring_byte| 0))& (0+255)
 10706  018F  00C0               	movwf	??_main+2
 10707  0190  0840               	movf	??_main+2,w
 10708  0191  00AF               	movwf	push_ring@ring_byte
 10709  0192  305D               	movlw	(low (_nreg_pt| 0))& (0+255)
 10710  0193  318D  25DA  3180   	fcall	_push_ring
 10711  0196                     l7411:	
 10712                           
 10713                           ;main.c: 266:                         DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt);
 10714  0196  30F9               	movlw	249
 10715  0197  0020               	movlb	0	; select bank0
 10716  0198  00A9               	movwf	DATAEE_WriteByte@bAdd
 10717  0199  30F0               	movlw	240
 10718  019A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10719  019B  085D               	movf	_nreg_pt,w
 10720  019C  00BE               	movwf	??_main
 10721  019D  083E               	movf	??_main,w
 10722  019E  00AB               	movwf	DATAEE_WriteByte@bData
 10723  019F  318B  23F5  3180   	fcall	_DATAEE_WriteByte
 10724  01A2                     l7413:	
 10725                           
 10726                           ;main.c: 267:                         cksum_w();
 10727  01A2  3189  21D6  3180   	fcall	_cksum_w
 10728  01A5                     l7415:	
 10729                           
 10730                           ;main.c: 272:                     if(lum_threshold){
 10731  01A5  0020               	movlb	0	; select bank0
 10732  01A6  0847               	movf	_lum_threshold,w
 10733  01A7  0448               	iorwf	_lum_threshold+1,w
 10734  01A8  1903               	btfsc	3,2
 10735  01A9  29AB               	goto	u4941
 10736  01AA  29AC               	goto	u4940
 10737  01AB                     u4941:	
 10738  01AB  29D2               	goto	l7431
 10739  01AC                     u4940:	
 10740  01AC                     l7417:	
 10741                           
 10742                           ;main.c: 273:                         if(alarm == 2){
 10743  01AC  3002               	movlw	2
 10744  01AD  0653               	xorwf	_alarm,w	;volatile
 10745  01AE  1D03               	btfss	3,2
 10746  01AF  29B1               	goto	u4951
 10747  01B0  29B2               	goto	u4950
 10748  01B1                     u4951:	
 10749  01B1  29C2               	goto	l7423
 10750  01B2                     u4950:	
 10751  01B2                     l7419:	
 10752                           
 10753                           ;main.c: 274:                             duty_cycle +=1 ;
 10754  01B2  3001               	movlw	1
 10755  01B3  0021               	movlb	1	; select bank1
 10756  01B4  07BD               	addwf	_duty_cycle^(0+128),f
 10757  01B5  3000               	movlw	0
 10758  01B6  3DBE               	addwfc	(_duty_cycle+1)^(0+128),f
 10759  01B7                     l7421:	
 10760                           
 10761                           ;main.c: 275:                             PWM6_LoadDutyValue(duty_cycle);
 10762  01B7  083E               	movf	(_duty_cycle+1)^(0+128),w
 10763  01B8  0020               	movlb	0	; select bank0
 10764  01B9  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10765  01BA  0021               	movlb	1	; select bank1
 10766  01BB  083D               	movf	_duty_cycle^(0+128),w
 10767  01BC  0020               	movlb	0	; select bank0
 10768  01BD  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 10769  01BE  318A  22F2  3180   	fcall	_PWM6_LoadDutyValue
 10770                           
 10771                           ;main.c: 276:                         }
 10772  01C1  29EE               	goto	l7445
 10773  01C2                     l7423:	
 10774  01C2  0853               	movf	_alarm,w	;volatile
 10775  01C3  1D03               	btfss	3,2
 10776  01C4  29C6               	goto	u4961
 10777  01C5  29C7               	goto	u4960
 10778  01C6                     u4961:	
 10779  01C6  29E1               	goto	l1268
 10780  01C7                     u4960:	
 10781  01C7                     l7425:	
 10782                           
 10783                           ;main.c: 278:                             PIE0bits.TMR0IE = 1;
 10784  01C7  002E               	movlb	14	; select bank14
 10785  01C8  1696               	bsf	22,5	;volatile
 10786  01C9                     l7427:	
 10787                           
 10788                           ;main.c: 279:                             TMR0_StartTimer();
 10789  01C9  3188  204E  3180   	fcall	_TMR0_StartTimer
 10790  01CC                     l7429:	
 10791                           
 10792                           ;main.c: 280:                             alarm = 2 ;
 10793  01CC  3002               	movlw	2
 10794  01CD  0020               	movlb	0	; select bank0
 10795  01CE  00BE               	movwf	??_main
 10796  01CF  083E               	movf	??_main,w
 10797  01D0  00D3               	movwf	_alarm	;volatile
 10798  01D1  29EE               	goto	l7445
 10799  01D2                     l7431:	
 10800                           
 10801                           ;main.c: 284:                         if(alarm == 2){
 10802  01D2  3002               	movlw	2
 10803  01D3  0653               	xorwf	_alarm,w	;volatile
 10804  01D4  1D03               	btfss	3,2
 10805  01D5  29D7               	goto	u4971
 10806  01D6  29D8               	goto	u4970
 10807  01D7                     u4971:	
 10808  01D7  29EE               	goto	l7445
 10809  01D8                     u4970:	
 10810  01D8                     l7433:	
 10811                           
 10812                           ;main.c: 285:                             PWM6_LoadDutyValue(0);
 10813  01D8  3000               	movlw	0
 10814  01D9  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 10815  01DA  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10816  01DB  318A  22F2  3180   	fcall	_PWM6_LoadDutyValue
 10817  01DE                     l7435:	
 10818                           
 10819                           ;main.c: 286:                             alarm = 0 ;
 10820  01DE  0020               	movlb	0	; select bank0
 10821  01DF  01D3               	clrf	_alarm	;volatile
 10822  01E0  29EE               	goto	l7445
 10823  01E1                     l1268:	
 10824                           ;main.c: 288:                     }
 10825                           
 10826                           
 10827                           ;main.c: 290:                 }
 10828  01E1  29EE               	goto	l7445
 10829  01E2                     l7437:	
 10830  01E2  0354               	decf	_config_mode,w	;volatile
 10831  01E3  1D03               	btfss	3,2
 10832  01E4  29E6               	goto	u4981
 10833  01E5  29E7               	goto	u4980
 10834  01E6                     u4981:	
 10835  01E6  29EE               	goto	l7445
 10836  01E7                     u4980:	
 10837  01E7                     l7439:	
 10838                           
 10839                           ;main.c: 294:                     (PIE0bits.INTE = 0);
 10840  01E7  002E               	movlb	14	; select bank14
 10841  01E8  1016               	bcf	22,0	;volatile
 10842  01E9                     l7441:	
 10843                           
 10844                           ;main.c: 295:                     config_routine();
 10845  01E9  3184  2421  3180   	fcall	_config_routine
 10846  01EC                     l7443:	
 10847                           
 10848                           ;main.c: 296:                     (PIE0bits.INTE = 1);
 10849  01EC  002E               	movlb	14	; select bank14
 10850  01ED  1416               	bsf	22,0	;volatile
 10851  01EE                     l7445:	
 10852                           
 10853                           ;main.c: 299:                 _delay((unsigned long)((10)*(1000000/4000.0)));
 10854  01EE  3004               	movlw	4
 10855  01EF  0020               	movlb	0	; select bank0
 10856  01F0  00BE               	movwf	??_main
 10857  01F1  303D               	movlw	61
 10858  01F2                     u5037:	
 10859  01F2  0B89               	decfsz	9,f
 10860  01F3  29F2               	goto	u5037
 10861  01F4  0BBE               	decfsz	??_main,f
 10862  01F5  29F2               	goto	u5037
 10863  01F6  3200               	nop2
 10864  01F7                     l7447:	
 10865                           
 10866                           ;main.c: 301:             }while(alarm == 2);
 10867  01F7  3002               	movlw	2
 10868  01F8  0020               	movlb	0	; select bank0
 10869  01F9  0653               	xorwf	_alarm,w	;volatile
 10870  01FA  1903               	btfsc	3,2
 10871  01FB  29FD               	goto	u4991
 10872  01FC  29FE               	goto	u4990
 10873  01FD                     u4991:	
 10874  01FD  28E6               	goto	l7377
 10875  01FE                     u4990:	
 10876  01FE                     l1272:	
 10877                           
 10878                           ;main.c: 303:             PIE4bits.TMR1IE = 0;
 10879  01FE  002E               	movlb	14	; select bank14
 10880  01FF  101A               	bcf	26,0	;volatile
 10881  0200                     l7449:	
 10882                           
 10883                           ;main.c: 304:             if (last1m >= 1) {
 10884  0200  0020               	movlb	0	; select bank0
 10885  0201  0856               	movf	_last1m,w	;volatile
 10886  0202  1903               	btfsc	3,2
 10887  0203  2A05               	goto	u5001
 10888  0204  2A06               	goto	u5000
 10889  0205                     u5001:	
 10890  0205  2A34               	goto	l1273
 10891  0206                     u5000:	
 10892  0206                     l7451:	
 10893                           
 10894                           ;main.c: 306:                 last1m = 0;
 10895  0206  01D6               	clrf	_last1m	;volatile
 10896  0207                     l7453:	
 10897                           
 10898                           ;main.c: 307:                 aux = clkh;
 10899  0207  085C               	movf	_clkh,w	;volatile
 10900  0208  00BE               	movwf	??_main
 10901  0209  083E               	movf	??_main,w
 10902  020A  0021               	movlb	1	; select bank1
 10903  020B  00D6               	movwf	main@aux^(0+128)
 10904  020C                     l7455:	
 10905                           
 10906                           ;main.c: 308:                 aux1 = clkm;
 10907  020C  0020               	movlb	0	; select bank0
 10908  020D  085B               	movf	_clkm,w	;volatile
 10909  020E  00BE               	movwf	??_main
 10910  020F  083E               	movf	??_main,w
 10911  0210  0021               	movlb	1	; select bank1
 10912  0211  00D7               	movwf	main@aux1^(0+128)
 10913  0212                     l7457:	
 10914                           
 10915                           ;main.c: 309:                 PIE4bits.TMR1IE = 1;
 10916  0212  002E               	movlb	14	; select bank14
 10917  0213  141A               	bsf	26,0	;volatile
 10918  0214                     l7459:	
 10919                           
 10920                           ;main.c: 310:                 DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10921  0214  30F6               	movlw	246
 10922  0215  0020               	movlb	0	; select bank0
 10923  0216  00A9               	movwf	DATAEE_WriteByte@bAdd
 10924  0217  30F0               	movlw	240
 10925  0218  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10926  0219  0021               	movlb	1	; select bank1
 10927  021A  0856               	movf	main@aux^(0+128),w
 10928  021B  0020               	movlb	0	; select bank0
 10929  021C  00BE               	movwf	??_main
 10930  021D  083E               	movf	??_main,w
 10931  021E  00AB               	movwf	DATAEE_WriteByte@bData
 10932  021F  318B  23F5  3180   	fcall	_DATAEE_WriteByte
 10933  0222                     l7461:	
 10934                           
 10935                           ;main.c: 311:                 DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10936  0222  30F7               	movlw	247
 10937  0223  0020               	movlb	0	; select bank0
 10938  0224  00A9               	movwf	DATAEE_WriteByte@bAdd
 10939  0225  30F0               	movlw	240
 10940  0226  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10941  0227  0021               	movlb	1	; select bank1
 10942  0228  0857               	movf	main@aux1^(0+128),w
 10943  0229  0020               	movlb	0	; select bank0
 10944  022A  00BE               	movwf	??_main
 10945  022B  083E               	movf	??_main,w
 10946  022C  00AB               	movwf	DATAEE_WriteByte@bData
 10947  022D  318B  23F5  3180   	fcall	_DATAEE_WriteByte
 10948  0230                     l7463:	
 10949                           
 10950                           ;main.c: 312:                 cksum_w();
 10951  0230  3189  21D6  3180   	fcall	_cksum_w
 10952                           
 10953                           ;main.c: 314:             }else{
 10954  0233  28CC               	goto	l1255
 10955  0234                     l1273:	
 10956                           
 10957                           ;main.c: 315:                 PIE4bits.TMR1IE = 1;}
 10958  0234  002E               	movlb	14	; select bank14
 10959  0235  141A               	bsf	26,0	;volatile
 10960  0236  28CC               	goto	l1255
 10961  0237  3180  285B         	ljmp	start
 10962  0239                     __end_of_main:	
 10963                           
 10964                           	psect	text1
 10965  0239                     __ptext1:	
 10966 ;; *************** function _tsttc *****************
 10967 ;; Defined at:
 10968 ;;		line 15 in file "I2C/i2c.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;		None
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  value           1    6[BANK0 ] unsigned char 
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      unsigned char 
 10975 ;; Registers used:
 10976 ;;		wreg, status,2, status,0, pclath, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;Total ram usage:        2 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; Hardware stack levels required when called:    7
 10989 ;; This function calls:
 10990 ;;		_ReadI2C
 10991 ;;		_WriteI2C
 10992 ;; This function is called by:
 10993 ;;		_main
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           
 10998                           ;psect for function _tsttc
 10999  0239                     _tsttc:	
 11000  0239                     l1496:	
 11001                           ;incstack = 0
 11002                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11003                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 11004                           
 11005  0239                     l7057:	
 11006                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11007                           
 11008  0239  0023               	movlb	3	; select bank3
 11009  023A  0C0F               	rrf	15,w	;volatile
 11010  023B  0C89               	rrf	9,f
 11011  023C  3901               	andlw	1
 11012  023D  0020               	movlb	0	; select bank0
 11013  023E  00A5               	movwf	??_tsttc
 11014  023F  0023               	movlb	3	; select bank3
 11015  0240  0811               	movf	17,w	;volatile
 11016  0241  391F               	andlw	31
 11017  0242  0020               	movlb	0	; select bank0
 11018  0243  0425               	iorwf	??_tsttc,w
 11019  0244  1D03               	btfss	3,2
 11020  0245  2A47               	goto	u4341
 11021  0246  2A48               	goto	u4340
 11022  0247                     u4341:	
 11023  0247  2A39               	goto	l7057
 11024  0248                     u4340:	
 11025  0248                     l1499:	
 11026                           
 11027                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 11028  0248  0023               	movlb	3	; select bank3
 11029  0249  1411               	bsf	17,0	;volatile
 11030  024A                     l1500:	
 11031  024A  1811               	btfsc	17,0	;volatile
 11032  024B  2A4D               	goto	u4351
 11033  024C  2A4E               	goto	u4350
 11034  024D                     u4351:	
 11035  024D  2A4A               	goto	l1500
 11036  024E                     u4350:	
 11037  024E                     l7059:	
 11038  024E  0023               	movlb	3	; select bank3
 11039  024F  0C0F               	rrf	15,w	;volatile
 11040  0250  0C89               	rrf	9,f
 11041  0251  3901               	andlw	1
 11042  0252  0020               	movlb	0	; select bank0
 11043  0253  00A5               	movwf	??_tsttc
 11044  0254  0023               	movlb	3	; select bank3
 11045  0255  0811               	movf	17,w	;volatile
 11046  0256  391F               	andlw	31
 11047  0257  0020               	movlb	0	; select bank0
 11048  0258  0425               	iorwf	??_tsttc,w
 11049  0259  1D03               	btfss	3,2
 11050  025A  2A5C               	goto	u4361
 11051  025B  2A5D               	goto	u4360
 11052  025C                     u4361:	
 11053  025C  2A4E               	goto	l7059
 11054  025D                     u4360:	
 11055  025D                     l7061:	
 11056                           
 11057                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11058  025D  309A               	movlw	154
 11059  025E  3186  26C7  3182   	fcall	_WriteI2C
 11060  0261                     l7063:	
 11061  0261  0023               	movlb	3	; select bank3
 11062  0262  0C0F               	rrf	15,w	;volatile
 11063  0263  0C89               	rrf	9,f
 11064  0264  3901               	andlw	1
 11065  0265  0020               	movlb	0	; select bank0
 11066  0266  00A5               	movwf	??_tsttc
 11067  0267  0023               	movlb	3	; select bank3
 11068  0268  0811               	movf	17,w	;volatile
 11069  0269  391F               	andlw	31
 11070  026A  0020               	movlb	0	; select bank0
 11071  026B  0425               	iorwf	??_tsttc,w
 11072  026C  1D03               	btfss	3,2
 11073  026D  2A6F               	goto	u4371
 11074  026E  2A70               	goto	u4370
 11075  026F                     u4371:	
 11076  026F  2A61               	goto	l7063
 11077  0270                     u4370:	
 11078  0270                     l7065:	
 11079                           
 11080                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11081  0270  3001               	movlw	1
 11082  0271  3186  26C7  3182   	fcall	_WriteI2C
 11083  0274                     l7067:	
 11084  0274  0023               	movlb	3	; select bank3
 11085  0275  0C0F               	rrf	15,w	;volatile
 11086  0276  0C89               	rrf	9,f
 11087  0277  3901               	andlw	1
 11088  0278  0020               	movlb	0	; select bank0
 11089  0279  00A5               	movwf	??_tsttc
 11090  027A  0023               	movlb	3	; select bank3
 11091  027B  0811               	movf	17,w	;volatile
 11092  027C  391F               	andlw	31
 11093  027D  0020               	movlb	0	; select bank0
 11094  027E  0425               	iorwf	??_tsttc,w
 11095  027F  1D03               	btfss	3,2
 11096  0280  2A82               	goto	u4381
 11097  0281  2A83               	goto	u4380
 11098  0282                     u4381:	
 11099  0282  2A74               	goto	l7067
 11100  0283                     u4380:	
 11101  0283                     l1511:	
 11102                           
 11103                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 11104  0283  0023               	movlb	3	; select bank3
 11105  0284  1491               	bsf	17,1	;volatile
 11106  0285                     l1512:	
 11107  0285  1891               	btfsc	17,1	;volatile
 11108  0286  2A88               	goto	u4391
 11109  0287  2A89               	goto	u4390
 11110  0288                     u4391:	
 11111  0288  2A85               	goto	l1512
 11112  0289                     u4390:	
 11113  0289                     l7069:	
 11114  0289  0023               	movlb	3	; select bank3
 11115  028A  0C0F               	rrf	15,w	;volatile
 11116  028B  0C89               	rrf	9,f
 11117  028C  3901               	andlw	1
 11118  028D  0020               	movlb	0	; select bank0
 11119  028E  00A5               	movwf	??_tsttc
 11120  028F  0023               	movlb	3	; select bank3
 11121  0290  0811               	movf	17,w	;volatile
 11122  0291  391F               	andlw	31
 11123  0292  0020               	movlb	0	; select bank0
 11124  0293  0425               	iorwf	??_tsttc,w
 11125  0294  1D03               	btfss	3,2
 11126  0295  2A97               	goto	u4401
 11127  0296  2A98               	goto	u4400
 11128  0297                     u4401:	
 11129  0297  2A89               	goto	l7069
 11130  0298                     u4400:	
 11131  0298                     l7071:	
 11132                           
 11133                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11134  0298  309B               	movlw	155
 11135  0299  3186  26C7  3182   	fcall	_WriteI2C
 11136  029C                     l7073:	
 11137  029C  0023               	movlb	3	; select bank3
 11138  029D  0C0F               	rrf	15,w	;volatile
 11139  029E  0C89               	rrf	9,f
 11140  029F  3901               	andlw	1
 11141  02A0  0020               	movlb	0	; select bank0
 11142  02A1  00A5               	movwf	??_tsttc
 11143  02A2  0023               	movlb	3	; select bank3
 11144  02A3  0811               	movf	17,w	;volatile
 11145  02A4  391F               	andlw	31
 11146  02A5  0020               	movlb	0	; select bank0
 11147  02A6  0425               	iorwf	??_tsttc,w
 11148  02A7  1D03               	btfss	3,2
 11149  02A8  2AAA               	goto	u4411
 11150  02A9  2AAB               	goto	u4410
 11151  02AA                     u4411:	
 11152  02AA  2A9C               	goto	l7073
 11153  02AB                     u4410:	
 11154  02AB                     l7075:	
 11155                           
 11156                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11157  02AB  318B  2396  3182   	fcall	_ReadI2C
 11158  02AE  0020               	movlb	0	; select bank0
 11159  02AF  00A5               	movwf	??_tsttc
 11160  02B0  0825               	movf	??_tsttc,w
 11161  02B1  00A6               	movwf	tsttc@value
 11162  02B2                     l7077:	
 11163  02B2  0023               	movlb	3	; select bank3
 11164  02B3  0C0F               	rrf	15,w	;volatile
 11165  02B4  0C89               	rrf	9,f
 11166  02B5  3901               	andlw	1
 11167  02B6  0020               	movlb	0	; select bank0
 11168  02B7  00A5               	movwf	??_tsttc
 11169  02B8  0023               	movlb	3	; select bank3
 11170  02B9  0811               	movf	17,w	;volatile
 11171  02BA  391F               	andlw	31
 11172  02BB  0020               	movlb	0	; select bank0
 11173  02BC  0425               	iorwf	??_tsttc,w
 11174  02BD  1D03               	btfss	3,2
 11175  02BE  2AC0               	goto	u4421
 11176  02BF  2AC1               	goto	u4420
 11177  02C0                     u4421:	
 11178  02C0  2AB2               	goto	l7077
 11179  02C1                     u4420:	
 11180  02C1                     l1523:	
 11181                           
 11182                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11183  02C1  0023               	movlb	3	; select bank3
 11184  02C2  1691               	bsf	17,5	;volatile
 11185  02C3  1611               	bsf	17,4	;volatile
 11186  02C4                     l1524:	
 11187  02C4  1A11               	btfsc	17,4	;volatile
 11188  02C5  2AC7               	goto	u4431
 11189  02C6  2AC8               	goto	u4430
 11190  02C7                     u4431:	
 11191  02C7  2AC4               	goto	l1524
 11192  02C8                     u4430:	
 11193  02C8                     l7079:	
 11194  02C8  0023               	movlb	3	; select bank3
 11195  02C9  0C0F               	rrf	15,w	;volatile
 11196  02CA  0C89               	rrf	9,f
 11197  02CB  3901               	andlw	1
 11198  02CC  0020               	movlb	0	; select bank0
 11199  02CD  00A5               	movwf	??_tsttc
 11200  02CE  0023               	movlb	3	; select bank3
 11201  02CF  0811               	movf	17,w	;volatile
 11202  02D0  391F               	andlw	31
 11203  02D1  0020               	movlb	0	; select bank0
 11204  02D2  0425               	iorwf	??_tsttc,w
 11205  02D3  1D03               	btfss	3,2
 11206  02D4  2AD6               	goto	u4441
 11207  02D5  2AD7               	goto	u4440
 11208  02D6                     u4441:	
 11209  02D6  2AC8               	goto	l7079
 11210  02D7                     u4440:	
 11211  02D7                     l1529:	
 11212                           
 11213                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11214  02D7  0023               	movlb	3	; select bank3
 11215  02D8  1511               	bsf	17,2	;volatile
 11216  02D9                     l1530:	
 11217  02D9  1911               	btfsc	17,2	;volatile
 11218  02DA  2ADC               	goto	u4451
 11219  02DB  2ADD               	goto	u4450
 11220  02DC                     u4451:	
 11221  02DC  2AD9               	goto	l1530
 11222  02DD                     u4450:	
 11223  02DD                     l1532:	
 11224                           
 11225                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11226  02DD  0020               	movlb	0	; select bank0
 11227  02DE  1F26               	btfss	tsttc@value,6
 11228  02DF  2AE1               	goto	u4461
 11229  02E0  2AE2               	goto	u4460
 11230  02E1                     u4461:	
 11231  02E1  2A39               	goto	l1496
 11232  02E2                     u4460:	
 11233  02E2                     l7081:	
 11234  02E2  0023               	movlb	3	; select bank3
 11235  02E3  0C0F               	rrf	15,w	;volatile
 11236  02E4  0C89               	rrf	9,f
 11237  02E5  3901               	andlw	1
 11238  02E6  0020               	movlb	0	; select bank0
 11239  02E7  00A5               	movwf	??_tsttc
 11240  02E8  0023               	movlb	3	; select bank3
 11241  02E9  0811               	movf	17,w	;volatile
 11242  02EA  391F               	andlw	31
 11243  02EB  0020               	movlb	0	; select bank0
 11244  02EC  0425               	iorwf	??_tsttc,w
 11245  02ED  1D03               	btfss	3,2
 11246  02EE  2AF0               	goto	u4471
 11247  02EF  2AF1               	goto	u4470
 11248  02F0                     u4471:	
 11249  02F0  2AE2               	goto	l7081
 11250  02F1                     u4470:	
 11251  02F1                     l1536:	
 11252                           
 11253                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11254  02F1  0023               	movlb	3	; select bank3
 11255  02F2  1411               	bsf	17,0	;volatile
 11256  02F3                     l1537:	
 11257  02F3  1811               	btfsc	17,0	;volatile
 11258  02F4  2AF6               	goto	u4481
 11259  02F5  2AF7               	goto	u4480
 11260  02F6                     u4481:	
 11261  02F6  2AF3               	goto	l1537
 11262  02F7                     u4480:	
 11263  02F7                     l7083:	
 11264  02F7  0023               	movlb	3	; select bank3
 11265  02F8  0C0F               	rrf	15,w	;volatile
 11266  02F9  0C89               	rrf	9,f
 11267  02FA  3901               	andlw	1
 11268  02FB  0020               	movlb	0	; select bank0
 11269  02FC  00A5               	movwf	??_tsttc
 11270  02FD  0023               	movlb	3	; select bank3
 11271  02FE  0811               	movf	17,w	;volatile
 11272  02FF  391F               	andlw	31
 11273  0300  0020               	movlb	0	; select bank0
 11274  0301  0425               	iorwf	??_tsttc,w
 11275  0302  1D03               	btfss	3,2
 11276  0303  2B05               	goto	u4491
 11277  0304  2B06               	goto	u4490
 11278  0305                     u4491:	
 11279  0305  2AF7               	goto	l7083
 11280  0306                     u4490:	
 11281  0306                     l7085:	
 11282                           
 11283                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11284  0306  309A               	movlw	154
 11285  0307  3186  26C7  3182   	fcall	_WriteI2C
 11286  030A                     l7087:	
 11287  030A  0023               	movlb	3	; select bank3
 11288  030B  0C0F               	rrf	15,w	;volatile
 11289  030C  0C89               	rrf	9,f
 11290  030D  3901               	andlw	1
 11291  030E  0020               	movlb	0	; select bank0
 11292  030F  00A5               	movwf	??_tsttc
 11293  0310  0023               	movlb	3	; select bank3
 11294  0311  0811               	movf	17,w	;volatile
 11295  0312  391F               	andlw	31
 11296  0313  0020               	movlb	0	; select bank0
 11297  0314  0425               	iorwf	??_tsttc,w
 11298  0315  1D03               	btfss	3,2
 11299  0316  2B18               	goto	u4501
 11300  0317  2B19               	goto	u4500
 11301  0318                     u4501:	
 11302  0318  2B0A               	goto	l7087
 11303  0319                     u4500:	
 11304  0319                     l7089:	
 11305                           
 11306                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11307  0319  3000               	movlw	0
 11308  031A  3186  26C7  3182   	fcall	_WriteI2C
 11309  031D                     l7091:	
 11310  031D  0023               	movlb	3	; select bank3
 11311  031E  0C0F               	rrf	15,w	;volatile
 11312  031F  0C89               	rrf	9,f
 11313  0320  3901               	andlw	1
 11314  0321  0020               	movlb	0	; select bank0
 11315  0322  00A5               	movwf	??_tsttc
 11316  0323  0023               	movlb	3	; select bank3
 11317  0324  0811               	movf	17,w	;volatile
 11318  0325  391F               	andlw	31
 11319  0326  0020               	movlb	0	; select bank0
 11320  0327  0425               	iorwf	??_tsttc,w
 11321  0328  1D03               	btfss	3,2
 11322  0329  2B2B               	goto	u4511
 11323  032A  2B2C               	goto	u4510
 11324  032B                     u4511:	
 11325  032B  2B1D               	goto	l7091
 11326  032C                     u4510:	
 11327  032C                     l1548:	
 11328                           
 11329                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11330  032C  0023               	movlb	3	; select bank3
 11331  032D  1491               	bsf	17,1	;volatile
 11332  032E                     l1549:	
 11333  032E  1891               	btfsc	17,1	;volatile
 11334  032F  2B31               	goto	u4521
 11335  0330  2B32               	goto	u4520
 11336  0331                     u4521:	
 11337  0331  2B2E               	goto	l1549
 11338  0332                     u4520:	
 11339  0332                     l7093:	
 11340  0332  0023               	movlb	3	; select bank3
 11341  0333  0C0F               	rrf	15,w	;volatile
 11342  0334  0C89               	rrf	9,f
 11343  0335  3901               	andlw	1
 11344  0336  0020               	movlb	0	; select bank0
 11345  0337  00A5               	movwf	??_tsttc
 11346  0338  0023               	movlb	3	; select bank3
 11347  0339  0811               	movf	17,w	;volatile
 11348  033A  391F               	andlw	31
 11349  033B  0020               	movlb	0	; select bank0
 11350  033C  0425               	iorwf	??_tsttc,w
 11351  033D  1D03               	btfss	3,2
 11352  033E  2B40               	goto	u4531
 11353  033F  2B41               	goto	u4530
 11354  0340                     u4531:	
 11355  0340  2B32               	goto	l7093
 11356  0341                     u4530:	
 11357  0341                     l7095:	
 11358                           
 11359                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11360  0341  309B               	movlw	155
 11361  0342  3186  26C7  3182   	fcall	_WriteI2C
 11362  0345                     l7097:	
 11363  0345  0023               	movlb	3	; select bank3
 11364  0346  0C0F               	rrf	15,w	;volatile
 11365  0347  0C89               	rrf	9,f
 11366  0348  3901               	andlw	1
 11367  0349  0020               	movlb	0	; select bank0
 11368  034A  00A5               	movwf	??_tsttc
 11369  034B  0023               	movlb	3	; select bank3
 11370  034C  0811               	movf	17,w	;volatile
 11371  034D  391F               	andlw	31
 11372  034E  0020               	movlb	0	; select bank0
 11373  034F  0425               	iorwf	??_tsttc,w
 11374  0350  1D03               	btfss	3,2
 11375  0351  2B53               	goto	u4541
 11376  0352  2B54               	goto	u4540
 11377  0353                     u4541:	
 11378  0353  2B45               	goto	l7097
 11379  0354                     u4540:	
 11380  0354                     l7099:	
 11381                           
 11382                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11383  0354  318B  2396  3182   	fcall	_ReadI2C
 11384  0357  0020               	movlb	0	; select bank0
 11385  0358  00A5               	movwf	??_tsttc
 11386  0359  0825               	movf	??_tsttc,w
 11387  035A  00A6               	movwf	tsttc@value
 11388  035B                     l7101:	
 11389  035B  0023               	movlb	3	; select bank3
 11390  035C  0C0F               	rrf	15,w	;volatile
 11391  035D  0C89               	rrf	9,f
 11392  035E  3901               	andlw	1
 11393  035F  0020               	movlb	0	; select bank0
 11394  0360  00A5               	movwf	??_tsttc
 11395  0361  0023               	movlb	3	; select bank3
 11396  0362  0811               	movf	17,w	;volatile
 11397  0363  391F               	andlw	31
 11398  0364  0020               	movlb	0	; select bank0
 11399  0365  0425               	iorwf	??_tsttc,w
 11400  0366  1D03               	btfss	3,2
 11401  0367  2B69               	goto	u4551
 11402  0368  2B6A               	goto	u4550
 11403  0369                     u4551:	
 11404  0369  2B5B               	goto	l7101
 11405  036A                     u4550:	
 11406  036A                     l1560:	
 11407                           
 11408                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11409  036A  0023               	movlb	3	; select bank3
 11410  036B  1691               	bsf	17,5	;volatile
 11411  036C  1611               	bsf	17,4	;volatile
 11412  036D                     l1561:	
 11413  036D  1A11               	btfsc	17,4	;volatile
 11414  036E  2B70               	goto	u4561
 11415  036F  2B71               	goto	u4560
 11416  0370                     u4561:	
 11417  0370  2B6D               	goto	l1561
 11418  0371                     u4560:	
 11419  0371                     l7103:	
 11420  0371  0023               	movlb	3	; select bank3
 11421  0372  0C0F               	rrf	15,w	;volatile
 11422  0373  0C89               	rrf	9,f
 11423  0374  3901               	andlw	1
 11424  0375  0020               	movlb	0	; select bank0
 11425  0376  00A5               	movwf	??_tsttc
 11426  0377  0023               	movlb	3	; select bank3
 11427  0378  0811               	movf	17,w	;volatile
 11428  0379  391F               	andlw	31
 11429  037A  0020               	movlb	0	; select bank0
 11430  037B  0425               	iorwf	??_tsttc,w
 11431  037C  1D03               	btfss	3,2
 11432  037D  2B7F               	goto	u4571
 11433  037E  2B80               	goto	u4570
 11434  037F                     u4571:	
 11435  037F  2B71               	goto	l7103
 11436  0380                     u4570:	
 11437  0380                     l1566:	
 11438                           
 11439                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11440  0380  0023               	movlb	3	; select bank3
 11441  0381  1511               	bsf	17,2	;volatile
 11442  0382                     l1567:	
 11443  0382  1911               	btfsc	17,2	;volatile
 11444  0383  2B85               	goto	u4581
 11445  0384  2B86               	goto	u4580
 11446  0385                     u4581:	
 11447  0385  2B82               	goto	l1567
 11448  0386                     u4580:	
 11449  0386                     l7105:	
 11450                           
 11451                           ;I2C/i2c.c: 42:  return value;
 11452  0386  0020               	movlb	0	; select bank0
 11453  0387  0826               	movf	tsttc@value,w
 11454  0388                     l1570:	
 11455  0388  0008               	return
 11456  0389                     __end_of_tsttc:	
 11457                           
 11458                           	psect	text2
 11459  06C7                     __ptext2:	
 11460 ;; *************** function _WriteI2C *****************
 11461 ;; Defined at:
 11462 ;;		line 88 in file "I2C/i2c.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  data_out        1    wreg     unsigned char 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  data_out        1    4[BANK0 ] unsigned char 
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      char 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2, status,0
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;Total ram usage:        2 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    6
 11483 ;; This function calls:
 11484 ;;		Nothing
 11485 ;; This function is called by:
 11486 ;;		_tsttc
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           
 11491                           ;psect for function _WriteI2C
 11492  06C7                     _WriteI2C:	
 11493                           
 11494                           ;incstack = 0
 11495                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11496                           ;WriteI2C@data_out stored from wreg
 11497  06C7  0020               	movlb	0	; select bank0
 11498  06C8  00A4               	movwf	WriteI2C@data_out
 11499  06C9                     l6909:	
 11500                           
 11501                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11502  06C9  0824               	movf	WriteI2C@data_out,w
 11503  06CA  0023               	movlb	3	; select bank3
 11504  06CB  008C               	movwf	12	;volatile
 11505  06CC                     l6911:	
 11506                           
 11507                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11508  06CC  1F90               	btfss	16,7	;volatile
 11509  06CD  2ECF               	goto	u4151
 11510  06CE  2ED0               	goto	u4150
 11511  06CF                     u4151:	
 11512  06CF  2ED1               	goto	l6917
 11513  06D0                     u4150:	
 11514  06D0  2F20               	goto	l1586
 11515  06D1                     l6917:	
 11516                           
 11517                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11518  06D1  300F               	movlw	15
 11519  06D2  0510               	andwf	16,w	;volatile
 11520  06D3  0020               	movlb	0	; select bank0
 11521  06D4  00A3               	movwf	??_WriteI2C
 11522  06D5  3008               	movlw	8
 11523  06D6  0623               	xorwf	??_WriteI2C,w
 11524  06D7  1903               	btfsc	3,2
 11525  06D8  2EDA               	goto	u4161
 11526  06D9  2EDB               	goto	u4160
 11527  06DA                     u4161:	
 11528  06DA  2EF4               	goto	l6929
 11529  06DB                     u4160:	
 11530  06DB                     l6919:	
 11531  06DB  300F               	movlw	15
 11532  06DC  0023               	movlb	3	; select bank3
 11533  06DD  0510               	andwf	16,w	;volatile
 11534  06DE  0020               	movlb	0	; select bank0
 11535  06DF  00A3               	movwf	??_WriteI2C
 11536  06E0  300B               	movlw	11
 11537  06E1  0623               	xorwf	??_WriteI2C,w
 11538  06E2  1903               	btfsc	3,2
 11539  06E3  2EE5               	goto	u4171
 11540  06E4  2EE6               	goto	u4170
 11541  06E5                     u4171:	
 11542  06E5  2EF4               	goto	l6929
 11543  06E6                     u4170:	
 11544  06E6                     l6921:	
 11545                           
 11546                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11547  06E6  0023               	movlb	3	; select bank3
 11548  06E7  1610               	bsf	16,4	;volatile
 11549  06E8                     l1589:	
 11550                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11551                           
 11552  06E8  002E               	movlb	14	; select bank14
 11553  06E9  1C0F               	btfss	15,0	;volatile
 11554  06EA  2EEC               	goto	u4181
 11555  06EB  2EED               	goto	u4180
 11556  06EC                     u4181:	
 11557  06EC  2EE8               	goto	l1589
 11558  06ED                     u4180:	
 11559  06ED                     l1591:	
 11560                           
 11561                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11562  06ED  0023               	movlb	3	; select bank3
 11563  06EE  190F               	btfsc	15,2	;volatile
 11564  06EF  2EF1               	goto	u4191
 11565  06F0  2EF2               	goto	u4190
 11566  06F1                     u4191:	
 11567  06F1  2F20               	goto	l1586
 11568  06F2                     u4190:	
 11569  06F2                     l6923:	
 11570  06F2  080F               	movf	15,w	;volatile
 11571  06F3  2F20               	goto	l1586
 11572  06F4                     l6929:	
 11573  06F4  300F               	movlw	15
 11574  06F5  0023               	movlb	3	; select bank3
 11575  06F6  0510               	andwf	16,w	;volatile
 11576  06F7  0020               	movlb	0	; select bank0
 11577  06F8  00A3               	movwf	??_WriteI2C
 11578  06F9  3008               	movlw	8
 11579  06FA  0623               	xorwf	??_WriteI2C,w
 11580  06FB  1903               	btfsc	3,2
 11581  06FC  2EFE               	goto	u4201
 11582  06FD  2EFF               	goto	u4200
 11583  06FE                     u4201:	
 11584  06FE  2F0A               	goto	l1598
 11585  06FF                     u4200:	
 11586  06FF                     l6931:	
 11587  06FF  300F               	movlw	15
 11588  0700  0023               	movlb	3	; select bank3
 11589  0701  0510               	andwf	16,w	;volatile
 11590  0702  0020               	movlb	0	; select bank0
 11591  0703  00A3               	movwf	??_WriteI2C
 11592  0704  300B               	movlw	11
 11593  0705  0623               	xorwf	??_WriteI2C,w
 11594  0706  1D03               	btfss	3,2
 11595  0707  2F09               	goto	u4211
 11596  0708  2F0A               	goto	u4210
 11597  0709                     u4211:	
 11598  0709  2F20               	goto	l1586
 11599  070A                     u4210:	
 11600  070A                     l1598:	
 11601  070A  0023               	movlb	3	; select bank3
 11602  070B  180F               	btfsc	15,0	;volatile
 11603  070C  2F0E               	goto	u4221
 11604  070D  2F0F               	goto	u4220
 11605  070E                     u4221:	
 11606  070E  2F0A               	goto	l1598
 11607  070F                     u4220:	
 11608  070F                     l6933:	
 11609  070F  0023               	movlb	3	; select bank3
 11610  0710  0C0F               	rrf	15,w	;volatile
 11611  0711  0C89               	rrf	9,f
 11612  0712  3901               	andlw	1
 11613  0713  0020               	movlb	0	; select bank0
 11614  0714  00A3               	movwf	??_WriteI2C
 11615  0715  0023               	movlb	3	; select bank3
 11616  0716  0811               	movf	17,w	;volatile
 11617  0717  391F               	andlw	31
 11618  0718  0020               	movlb	0	; select bank0
 11619  0719  0423               	iorwf	??_WriteI2C,w
 11620  071A  1D03               	btfss	3,2
 11621  071B  2F1D               	goto	u4231
 11622  071C  2F1E               	goto	u4230
 11623  071D                     u4231:	
 11624  071D  2F0F               	goto	l6933
 11625  071E                     u4230:	
 11626  071E                     l1603:	
 11627                           
 11628                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 11629  071E  0023               	movlb	3	; select bank3
 11630  071F  0811               	movf	17,w	;volatile
 11631  0720                     l1586:	
 11632  0720  0008               	return
 11633  0721                     __end_of_WriteI2C:	
 11634                           
 11635                           	psect	text3
 11636  0B96                     __ptext3:	
 11637 ;; *************** function _ReadI2C *****************
 11638 ;; Defined at:
 11639 ;;		line 73 in file "I2C/i2c.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      unsigned char 
 11646 ;; Registers used:
 11647 ;;		wreg, status,2, status,0
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;Total ram usage:        1 bytes
 11658 ;; Hardware stack levels used:    1
 11659 ;; Hardware stack levels required when called:    6
 11660 ;; This function calls:
 11661 ;;		Nothing
 11662 ;; This function is called by:
 11663 ;;		_tsttc
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           
 11668                           ;psect for function _ReadI2C
 11669  0B96                     _ReadI2C:	
 11670  0B96                     l6939:	
 11671                           ;incstack = 0
 11672                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11673                           
 11674                           
 11675                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11676  0B96  300F               	movlw	15
 11677  0B97  0023               	movlb	3	; select bank3
 11678  0B98  0510               	andwf	16,w	;volatile
 11679  0B99  0020               	movlb	0	; select bank0
 11680  0B9A  00A3               	movwf	??_ReadI2C
 11681  0B9B  3008               	movlw	8
 11682  0B9C  0623               	xorwf	??_ReadI2C,w
 11683  0B9D  1903               	btfsc	3,2
 11684  0B9E  2BA0               	goto	u4241
 11685  0B9F  2BA1               	goto	u4240
 11686  0BA0                     u4241:	
 11687  0BA0  2BAC               	goto	l1578
 11688  0BA1                     u4240:	
 11689  0BA1                     l6941:	
 11690  0BA1  300F               	movlw	15
 11691  0BA2  0023               	movlb	3	; select bank3
 11692  0BA3  0510               	andwf	16,w	;volatile
 11693  0BA4  0020               	movlb	0	; select bank0
 11694  0BA5  00A3               	movwf	??_ReadI2C
 11695  0BA6  300B               	movlw	11
 11696  0BA7  0623               	xorwf	??_ReadI2C,w
 11697  0BA8  1D03               	btfss	3,2
 11698  0BA9  2BAB               	goto	u4251
 11699  0BAA  2BAC               	goto	u4250
 11700  0BAB                     u4251:	
 11701  0BAB  2BAE               	goto	l1579
 11702  0BAC                     u4250:	
 11703  0BAC                     l1578:	
 11704                           
 11705                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 11706  0BAC  0023               	movlb	3	; select bank3
 11707  0BAD  1591               	bsf	17,3	;volatile
 11708  0BAE                     l1579:	
 11709  0BAE  0023               	movlb	3	; select bank3
 11710  0BAF  1C0F               	btfss	15,0	;volatile
 11711  0BB0  2BB2               	goto	u4261
 11712  0BB1  2BB3               	goto	u4260
 11713  0BB2                     u4261:	
 11714  0BB2  2BAE               	goto	l1579
 11715  0BB3                     u4260:	
 11716  0BB3                     l6943:	
 11717                           
 11718                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 11719  0BB3  080C               	movf	12,w	;volatile
 11720  0BB4                     l1582:	
 11721  0BB4  0008               	return
 11722  0BB5                     __end_of_ReadI2C:	
 11723                           
 11724                           	psect	text4
 11725  0389                     __ptext4:	
 11726 ;; *************** function _recoverData *****************
 11727 ;; Defined at:
 11728 ;;		line 11 in file "eeprom_rw.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;		None
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;		None
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  1    wreg      void 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0, pclath, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11746 ;;Total ram usage:        1 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    9
 11749 ;; This function calls:
 11750 ;;		_DATAEE_ReadByte
 11751 ;;		_DATAEE_WriteByte
 11752 ;;		_cksum
 11753 ;;		_cksum_w
 11754 ;;		_reset_recv
 11755 ;; This function is called by:
 11756 ;;		_main
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           
 11761                           ;psect for function _recoverData
 11762  0389                     _recoverData:	
 11763  0389                     l7027:	
 11764                           ;incstack = 0
 11765                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11766                           
 11767                           
 11768                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11769  0389  30F5               	movlw	245
 11770  038A  0020               	movlb	0	; select bank0
 11771  038B  00A3               	movwf	DATAEE_ReadByte@bAdd
 11772  038C  30F0               	movlw	240
 11773  038D  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11774  038E  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11775  0391  3AAB               	xorlw	171
 11776  0392  1D03               	skipz
 11777  0393  2B95               	goto	u4311
 11778  0394  2B96               	goto	u4310
 11779  0395                     u4311:	
 11780  0395  2BEA               	goto	l7033
 11781  0396                     u4310:	
 11782  0396                     l7029:	
 11783                           
 11784                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11785  0396  318B  23D5  3183   	fcall	_cksum
 11786  0399  0020               	movlb	0	; select bank0
 11787  039A  00AF               	movwf	??_recoverData
 11788  039B  30FF               	movlw	255
 11789  039C  00A3               	movwf	DATAEE_ReadByte@bAdd
 11790  039D  30F0               	movlw	240
 11791  039E  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11792  039F  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11793  03A2  0020               	movlb	0	; select bank0
 11794  03A3  062F               	xorwf	??_recoverData,w
 11795  03A4  1D03               	skipz
 11796  03A5  2BA7               	goto	u4321
 11797  03A6  2BA8               	goto	u4320
 11798  03A7                     u4321:	
 11799  03A7  2BEA               	goto	l7033
 11800  03A8                     u4320:	
 11801  03A8                     l7031:	
 11802                           
 11803                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11804  03A8  30F6               	movlw	246
 11805  03A9  00A3               	movwf	DATAEE_ReadByte@bAdd
 11806  03AA  30F0               	movlw	240
 11807  03AB  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11808  03AC  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11809  03AF  0020               	movlb	0	; select bank0
 11810  03B0  00AF               	movwf	??_recoverData
 11811  03B1  082F               	movf	??_recoverData,w
 11812  03B2  00DC               	movwf	_clkh	;volatile
 11813                           
 11814                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11815  03B3  30F7               	movlw	247
 11816  03B4  00A3               	movwf	DATAEE_ReadByte@bAdd
 11817  03B5  30F0               	movlw	240
 11818  03B6  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11819  03B7  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11820  03BA  0020               	movlb	0	; select bank0
 11821  03BB  00AF               	movwf	??_recoverData
 11822  03BC  082F               	movf	??_recoverData,w
 11823  03BD  00DB               	movwf	_clkm	;volatile
 11824                           
 11825                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11826  03BE  30F8               	movlw	248
 11827  03BF  00A3               	movwf	DATAEE_ReadByte@bAdd
 11828  03C0  30F0               	movlw	240
 11829  03C1  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11830  03C2  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11831  03C5  0020               	movlb	0	; select bank0
 11832  03C6  00AF               	movwf	??_recoverData
 11833  03C7  082F               	movf	??_recoverData,w
 11834  03C8  00E7               	movwf	_nreg
 11835                           
 11836                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11837  03C9  30F9               	movlw	249
 11838  03CA  00A3               	movwf	DATAEE_ReadByte@bAdd
 11839  03CB  30F0               	movlw	240
 11840  03CC  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11841  03CD  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11842  03D0  0020               	movlb	0	; select bank0
 11843  03D1  00AF               	movwf	??_recoverData
 11844  03D2  082F               	movf	??_recoverData,w
 11845  03D3  00DD               	movwf	_nreg_pt
 11846                           
 11847                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11848  03D4  30FA               	movlw	250
 11849  03D5  00A3               	movwf	DATAEE_ReadByte@bAdd
 11850  03D6  30F0               	movlw	240
 11851  03D7  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11852  03D8  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11853  03DB  0020               	movlb	0	; select bank0
 11854  03DC  00AF               	movwf	??_recoverData
 11855  03DD  082F               	movf	??_recoverData,w
 11856  03DE  00E6               	movwf	_pmon
 11857                           
 11858                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11859  03DF  30FB               	movlw	251
 11860  03E0  00A3               	movwf	DATAEE_ReadByte@bAdd
 11861  03E1  30F0               	movlw	240
 11862  03E2  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11863  03E3  3189  21B7  3183   	fcall	_DATAEE_ReadByte
 11864  03E6  0020               	movlb	0	; select bank0
 11865  03E7  00AF               	movwf	??_recoverData
 11866  03E8  082F               	movf	??_recoverData,w
 11867  03E9  00E5               	movwf	_tala
 11868  03EA                     l7033:	
 11869                           
 11870                           ;eeprom_rw.c: 24:     reset_recv();
 11871  03EA  318B  235B  3183   	fcall	_reset_recv
 11872  03ED                     l7035:	
 11873                           
 11874                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11875  03ED  30F5               	movlw	245
 11876  03EE  0020               	movlb	0	; select bank0
 11877  03EF  00A9               	movwf	DATAEE_WriteByte@bAdd
 11878  03F0  30F0               	movlw	240
 11879  03F1  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11880  03F2  30AB               	movlw	171
 11881  03F3  00AF               	movwf	??_recoverData
 11882  03F4  082F               	movf	??_recoverData,w
 11883  03F5  00AB               	movwf	DATAEE_WriteByte@bData
 11884  03F6  318B  23F5  3183   	fcall	_DATAEE_WriteByte
 11885  03F9                     l7037:	
 11886                           
 11887                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11888  03F9  30F8               	movlw	248
 11889  03FA  0020               	movlb	0	; select bank0
 11890  03FB  00A9               	movwf	DATAEE_WriteByte@bAdd
 11891  03FC  30F0               	movlw	240
 11892  03FD  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11893  03FE  0867               	movf	_nreg,w
 11894  03FF  00AF               	movwf	??_recoverData
 11895  0400  082F               	movf	??_recoverData,w
 11896  0401  00AB               	movwf	DATAEE_WriteByte@bData
 11897  0402  318B  23F5  3183   	fcall	_DATAEE_WriteByte
 11898  0405                     l7039:	
 11899                           
 11900                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11901  0405  30FA               	movlw	250
 11902  0406  0020               	movlb	0	; select bank0
 11903  0407  00A9               	movwf	DATAEE_WriteByte@bAdd
 11904  0408  30F0               	movlw	240
 11905  0409  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11906  040A  0866               	movf	_pmon,w
 11907  040B  00AF               	movwf	??_recoverData
 11908  040C  082F               	movf	??_recoverData,w
 11909  040D  00AB               	movwf	DATAEE_WriteByte@bData
 11910  040E  318B  23F5  3183   	fcall	_DATAEE_WriteByte
 11911  0411                     l7041:	
 11912                           
 11913                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11914  0411  30FB               	movlw	251
 11915  0412  0020               	movlb	0	; select bank0
 11916  0413  00A9               	movwf	DATAEE_WriteByte@bAdd
 11917  0414  30F0               	movlw	240
 11918  0415  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11919  0416  0865               	movf	_tala,w
 11920  0417  00AF               	movwf	??_recoverData
 11921  0418  082F               	movf	??_recoverData,w
 11922  0419  00AB               	movwf	DATAEE_WriteByte@bData
 11923  041A  318B  23F5  3183   	fcall	_DATAEE_WriteByte
 11924  041D                     l7043:	
 11925                           
 11926                           ;eeprom_rw.c: 31:     cksum_w();
 11927  041D  3189  21D6  3183   	fcall	_cksum_w
 11928  0420                     l1636:	
 11929  0420  0008               	return
 11930  0421                     __end_of_recoverData:	
 11931                           
 11932                           	psect	text5
 11933  0B5B                     __ptext5:	
 11934 ;; *************** function _reset_recv *****************
 11935 ;; Defined at:
 11936 ;;		line 75 in file "eeprom_rw.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;		None
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  i               2   13[BANK0 ] unsigned int 
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      void 
 11943 ;; Registers used:
 11944 ;;		wreg, status,2, status,0, pclath, cstack
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;Total ram usage:        2 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:    7
 11957 ;; This function calls:
 11958 ;;		_DATAEE_WriteByte
 11959 ;; This function is called by:
 11960 ;;		_recoverData
 11961 ;;		_recover
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _reset_recv
 11967  0B5B                     _reset_recv:	
 11968  0B5B                     l6899:	
 11969                           ;incstack = 0
 11970                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11971                           
 11972                           
 11973                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11974  0B5B  30F5               	movlw	245
 11975  0B5C  0020               	movlb	0	; select bank0
 11976  0B5D  00AD               	movwf	reset_recv@i
 11977  0B5E  30F0               	movlw	240
 11978  0B5F  00AE               	movwf	reset_recv@i+1
 11979  0B60                     l6903:	
 11980                           
 11981                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11982  0B60  082E               	movf	reset_recv@i+1,w
 11983  0B61  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11984  0B62  082D               	movf	reset_recv@i,w
 11985  0B63  00A9               	movwf	DATAEE_WriteByte@bAdd
 11986  0B64  01AB               	clrf	DATAEE_WriteByte@bData
 11987  0B65  318B  23F5  318B   	fcall	_DATAEE_WriteByte
 11988  0B68                     l6905:	
 11989  0B68  3001               	movlw	1
 11990  0B69  0020               	movlb	0	; select bank0
 11991  0B6A  07AD               	addwf	reset_recv@i,f
 11992  0B6B  3000               	movlw	0
 11993  0B6C  3DAE               	addwfc	reset_recv@i+1,f
 11994  0B6D                     l6907:	
 11995  0B6D  30F1               	movlw	241
 11996  0B6E  022E               	subwf	reset_recv@i+1,w
 11997  0B6F  3000               	movlw	0
 11998  0B70  1903               	skipnz
 11999  0B71  022D               	subwf	reset_recv@i,w
 12000  0B72  1C03               	skipc
 12001  0B73  2B75               	goto	u4141
 12002  0B74  2B76               	goto	u4140
 12003  0B75                     u4141:	
 12004  0B75  2B60               	goto	l6903
 12005  0B76                     u4140:	
 12006  0B76                     l1663:	
 12007  0B76  0008               	return
 12008  0B77                     __end_of_reset_recv:	
 12009                           
 12010                           	psect	text6
 12011  09D6                     __ptext6:	
 12012 ;; *************** function _cksum_w *****************
 12013 ;; Defined at:
 12014 ;;		line 61 in file "eeprom_rw.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, status,2, status,0, pclath, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;Total ram usage:        1 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    8
 12035 ;; This function calls:
 12036 ;;		_DATAEE_WriteByte
 12037 ;;		_cksum
 12038 ;; This function is called by:
 12039 ;;		_main
 12040 ;;		_recoverData
 12041 ;;		_recover
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function _cksum_w
 12047  09D6                     _cksum_w:	
 12048  09D6                     l6819:	
 12049                           ;incstack = 0
 12050                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 12051                           
 12052                           
 12053                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 12054  09D6  30FF               	movlw	255
 12055  09D7  0020               	movlb	0	; select bank0
 12056  09D8  00A9               	movwf	DATAEE_WriteByte@bAdd
 12057  09D9  30F0               	movlw	240
 12058  09DA  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12059  09DB  318B  23D5  3189   	fcall	_cksum
 12060  09DE  0020               	movlb	0	; select bank0
 12061  09DF  00AD               	movwf	??_cksum_w
 12062  09E0  082D               	movf	??_cksum_w,w
 12063  09E1  00AB               	movwf	DATAEE_WriteByte@bData
 12064  09E2  318B  23F5  3189   	fcall	_DATAEE_WriteByte
 12065  09E5                     l1653:	
 12066  09E5  0008               	return
 12067  09E6                     __end_of_cksum_w:	
 12068                           
 12069                           	psect	text7
 12070  0BD5                     __ptext7:	
 12071 ;; *************** function _cksum *****************
 12072 ;; Defined at:
 12073 ;;		line 66 in file "eeprom_rw.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;		None
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  i               2    7[BANK0 ] unsigned int 
 12078 ;;  res             1    6[BANK0 ] unsigned char 
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1    wreg      unsigned char 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2, status,0, pclath, cstack
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;Total ram usage:        4 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:    7
 12095 ;; This function calls:
 12096 ;;		_DATAEE_ReadByte
 12097 ;; This function is called by:
 12098 ;;		_recoverData
 12099 ;;		_cksum_w
 12100 ;;		_recover
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           
 12105                           ;psect for function _cksum
 12106  0BD5                     _cksum:	
 12107  0BD5                     l6663:	
 12108                           ;incstack = 0
 12109                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12110                           
 12111                           
 12112                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 12113  0BD5  0020               	movlb	0	; select bank0
 12114  0BD6  01A6               	clrf	cksum@res
 12115  0BD7                     l6665:	
 12116                           
 12117                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12118  0BD7  30F5               	movlw	245
 12119  0BD8  00A7               	movwf	cksum@i
 12120  0BD9  30F0               	movlw	240
 12121  0BDA  00A8               	movwf	cksum@i+1
 12122  0BDB                     l6671:	
 12123                           
 12124                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 12125  0BDB  0828               	movf	cksum@i+1,w
 12126  0BDC  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12127  0BDD  0827               	movf	cksum@i,w
 12128  0BDE  00A3               	movwf	DATAEE_ReadByte@bAdd
 12129  0BDF  3189  21B7  318B   	fcall	_DATAEE_ReadByte
 12130  0BE2  0020               	movlb	0	; select bank0
 12131  0BE3  00A5               	movwf	??_cksum
 12132  0BE4  0825               	movf	??_cksum,w
 12133  0BE5  07A6               	addwf	cksum@res,f
 12134  0BE6                     l6673:	
 12135                           
 12136                           ;eeprom_rw.c: 71:     }
 12137  0BE6  3001               	movlw	1
 12138  0BE7  07A7               	addwf	cksum@i,f
 12139  0BE8  3000               	movlw	0
 12140  0BE9  3DA8               	addwfc	cksum@i+1,f
 12141  0BEA                     l6675:	
 12142  0BEA  30F0               	movlw	240
 12143  0BEB  0228               	subwf	cksum@i+1,w
 12144  0BEC  30FF               	movlw	255
 12145  0BED  1903               	skipnz
 12146  0BEE  0227               	subwf	cksum@i,w
 12147  0BEF  1C03               	skipc
 12148  0BF0  2BF2               	goto	u4081
 12149  0BF1  2BF3               	goto	u4080
 12150  0BF2                     u4081:	
 12151  0BF2  2BDB               	goto	l6671
 12152  0BF3                     u4080:	
 12153  0BF3                     l6677:	
 12154                           
 12155                           ;eeprom_rw.c: 72:     return res;
 12156  0BF3  0826               	movf	cksum@res,w
 12157  0BF4                     l1658:	
 12158  0BF4  0008               	return
 12159  0BF5                     __end_of_cksum:	
 12160                           
 12161                           	psect	text8
 12162  0D9B                     __ptext8:	
 12163 ;; *************** function _read_ring *****************
 12164 ;; Defined at:
 12165 ;;		line 43 in file "eeprom_rw.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  nreg_pt         1    wreg     unsigned char 
 12168 ;;  nreg            1    7[BANK0 ] unsigned char 
 12169 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12170 ;;  index           1    9[BANK0 ] unsigned char 
 12171 ;;  subindex        1   10[BANK0 ] unsigned char 
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12174 ;;  absindex        1   15[BANK0 ] unsigned char 
 12175 ;;  i               1   13[BANK0 ] unsigned char 
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      unsigned char 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0, pclath, cstack
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;Total ram usage:        9 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    7
 12192 ;; This function calls:
 12193 ;;		_DATAEE_ReadByte
 12194 ;;		___bmul
 12195 ;; This function is called by:
 12196 ;;		_main
 12197 ;; This function uses a non-reentrant model
 12198 ;;
 12199                           
 12200                           
 12201                           ;psect for function _read_ring
 12202  0D9B                     _read_ring:	
 12203                           
 12204                           ;incstack = 0
 12205                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12206                           ;read_ring@nreg_pt stored from wreg
 12207  0D9B  0020               	movlb	0	; select bank0
 12208  0D9C  00AE               	movwf	read_ring@nreg_pt
 12209  0D9D                     l7109:	
 12210  0D9D                     l7111:	
 12211                           
 12212                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12213  0D9D  0829               	movf	read_ring@index,w
 12214  0D9E  0227               	subwf	read_ring@nreg,w
 12215  0D9F  1C03               	skipc
 12216  0DA0  2DA2               	goto	u4591
 12217  0DA1  2DA3               	goto	u4590
 12218  0DA2                     u4591:	
 12219  0DA2  2DCD               	goto	l7123
 12220  0DA3                     u4590:	
 12221  0DA3                     l7113:	
 12222  0DA3  0828               	movf	read_ring@nreg_init,w
 12223  0DA4  1903               	btfsc	3,2
 12224  0DA5  2DA7               	goto	u4601
 12225  0DA6  2DA8               	goto	u4600
 12226  0DA7                     u4601:	
 12227  0DA7  2DCD               	goto	l7123
 12228  0DA8                     u4600:	
 12229  0DA8                     l7115:	
 12230                           
 12231                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12232  0DA8  3005               	movlw	5
 12233  0DA9  00AB               	movwf	??_read_ring
 12234  0DAA  082B               	movf	??_read_ring,w
 12235  0DAB  00A3               	movwf	___bmul@multiplicand
 12236  0DAC  0829               	movf	read_ring@index,w
 12237  0DAD  318A  227C  318D   	fcall	___bmul
 12238  0DB0  0020               	movlb	0	; select bank0
 12239  0DB1  072A               	addwf	read_ring@subindex,w
 12240  0DB2  00AC               	movwf	??_read_ring+1
 12241  0DB3  082C               	movf	??_read_ring+1,w
 12242  0DB4  00AF               	movwf	read_ring@absindex
 12243  0DB5                     l7117:	
 12244                           
 12245                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12246  0DB5  082F               	movf	read_ring@absindex,w
 12247  0DB6  022E               	subwf	read_ring@nreg_pt,w
 12248  0DB7  1C03               	skipc
 12249  0DB8  2DBA               	goto	u4611
 12250  0DB9  2DBB               	goto	u4610
 12251  0DBA                     u4611:	
 12252  0DBA  2DC2               	goto	l7121
 12253  0DBB                     u4610:	
 12254  0DBB                     l7119:	
 12255                           
 12256                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12257  0DBB  082E               	movf	read_ring@nreg_pt,w
 12258  0DBC  072F               	addwf	read_ring@absindex,w
 12259  0DBD  3EFB               	addlw	251
 12260  0DBE  00AB               	movwf	??_read_ring
 12261  0DBF  082B               	movf	??_read_ring,w
 12262  0DC0  00AD               	movwf	read_ring@i
 12263  0DC1  2DCF               	goto	l7127
 12264  0DC2                     l7121:	
 12265                           
 12266                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12267  0DC2  032E               	decf	read_ring@nreg_pt,w
 12268  0DC3  3AFF               	xorlw	255
 12269  0DC4  00AB               	movwf	??_read_ring
 12270  0DC5  082F               	movf	read_ring@absindex,w
 12271  0DC6  022B               	subwf	??_read_ring,w
 12272  0DC7  0727               	addwf	read_ring@nreg,w
 12273  0DC8  3E05               	addlw	5
 12274  0DC9  00AC               	movwf	??_read_ring+1
 12275  0DCA  082C               	movf	??_read_ring+1,w
 12276  0DCB  00AD               	movwf	read_ring@i
 12277  0DCC  2DCF               	goto	l7127
 12278  0DCD                     l7123:	
 12279                           
 12280                           ;eeprom_rw.c: 56:         return 0;
 12281  0DCD  3000               	movlw	0
 12282  0DCE  2DD9               	goto	l1650
 12283  0DCF                     l7127:	
 12284                           
 12285                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12286  0DCF  082D               	movf	read_ring@i,w
 12287  0DD0  3E00               	addlw	0
 12288  0DD1  00A3               	movwf	DATAEE_ReadByte@bAdd
 12289  0DD2  30F0               	movlw	240
 12290  0DD3  1803               	skipnc
 12291  0DD4  30F1               	movlw	241
 12292  0DD5  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12293  0DD6  3189  21B7  318D   	fcall	_DATAEE_ReadByte
 12294  0DD9                     l1650:	
 12295  0DD9  0008               	return
 12296  0DDA                     __end_of_read_ring:	
 12297                           
 12298                           	psect	text9
 12299  0A7C                     __ptext9:	
 12300 ;; *************** function ___bmul *****************
 12301 ;; Defined at:
 12302 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  multiplier      1    wreg     unsigned char 
 12305 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12308 ;;  product         1    5[BANK0 ] unsigned char 
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      unsigned char 
 12311 ;; Registers used:
 12312 ;;		wreg, status,2, status,0
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12318 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;Total ram usage:        4 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; Hardware stack levels required when called:    6
 12325 ;; This function calls:
 12326 ;;		Nothing
 12327 ;; This function is called by:
 12328 ;;		_read_ring
 12329 ;; This function uses a non-reentrant model
 12330 ;;
 12331                           
 12332                           
 12333                           ;psect for function ___bmul
 12334  0A7C                     ___bmul:	
 12335                           
 12336                           ;incstack = 0
 12337                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12338                           ;___bmul@multiplier stored from wreg
 12339  0A7C  0020               	movlb	0	; select bank0
 12340  0A7D  00A6               	movwf	___bmul@multiplier
 12341  0A7E                     l6947:	
 12342  0A7E  01A5               	clrf	___bmul@product
 12343  0A7F                     l6949:	
 12344  0A7F  1C26               	btfss	___bmul@multiplier,0
 12345  0A80  2A82               	goto	u4271
 12346  0A81  2A83               	goto	u4270
 12347  0A82                     u4271:	
 12348  0A82  2A87               	goto	l6953
 12349  0A83                     u4270:	
 12350  0A83                     l6951:	
 12351  0A83  0823               	movf	___bmul@multiplicand,w
 12352  0A84  00A4               	movwf	??___bmul
 12353  0A85  0824               	movf	??___bmul,w
 12354  0A86  07A5               	addwf	___bmul@product,f
 12355  0A87                     l6953:	
 12356  0A87  1003               	clrc
 12357  0A88  0DA3               	rlf	___bmul@multiplicand,f
 12358  0A89                     l6955:	
 12359  0A89  1003               	clrc
 12360  0A8A  0CA6               	rrf	___bmul@multiplier,f
 12361  0A8B  0826               	movf	___bmul@multiplier,w
 12362  0A8C  1D03               	btfss	3,2
 12363  0A8D  2A8F               	goto	u4281
 12364  0A8E  2A90               	goto	u4280
 12365  0A8F                     u4281:	
 12366  0A8F  2A7F               	goto	l6949
 12367  0A90                     u4280:	
 12368  0A90                     l6957:	
 12369  0A90  0825               	movf	___bmul@product,w
 12370  0A91                     l1889:	
 12371  0A91  0008               	return
 12372  0A92                     __end_of___bmul:	
 12373                           
 12374                           	psect	text10
 12375  09B7                     __ptext10:	
 12376 ;; *************** function _DATAEE_ReadByte *****************
 12377 ;; Defined at:
 12378 ;;		line 202 in file "mcc_generated_files/memory.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;		None
 12383 ;; Return value:  Size  Location     Type
 12384 ;;                  1    wreg      unsigned char 
 12385 ;; Registers used:
 12386 ;;		wreg, status,2
 12387 ;; Tracked objects:
 12388 ;;		On entry : 0/0
 12389 ;;		On exit  : 0/0
 12390 ;;		Unchanged: 0/0
 12391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12396 ;;Total ram usage:        2 bytes
 12397 ;; Hardware stack levels used:    1
 12398 ;; Hardware stack levels required when called:    6
 12399 ;; This function calls:
 12400 ;;		Nothing
 12401 ;; This function is called by:
 12402 ;;		_recoverData
 12403 ;;		_read_ring
 12404 ;;		_cksum
 12405 ;;		_recover
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           
 12410                           ;psect for function _DATAEE_ReadByte
 12411  09B7                     _DATAEE_ReadByte:	
 12412  09B7                     l6451:	
 12413                           ;incstack = 0
 12414                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12415                           
 12416                           
 12417                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12418  09B7  0020               	movlb	0	; select bank0
 12419  09B8  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 12420  09B9  0030               	movlb	16	; select bank16
 12421  09BA  009B               	movwf	27	;volatile
 12422  09BB                     l6453:	
 12423                           
 12424                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12425  09BB  0020               	movlb	0	; select bank0
 12426  09BC  0823               	movf	DATAEE_ReadByte@bAdd,w
 12427  09BD  0030               	movlb	16	; select bank16
 12428  09BE  009A               	movwf	26	;volatile
 12429  09BF                     l6455:	
 12430                           
 12431                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12432  09BF  171E               	bsf	30,6	;volsfr
 12433  09C0                     l6457:	
 12434                           
 12435                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12436  09C0  141E               	bsf	30,0	;volsfr
 12437  09C1                     l6459:	
 12438                           
 12439                           ;mcc_generated_files/memory.c: 208:     __nop();
 12440  09C1  0000               	nop
 12441  09C2                     l6461:	
 12442                           
 12443                           ;mcc_generated_files/memory.c: 209:     __nop();
 12444  09C2  0000               	nop
 12445  09C3                     l6463:	
 12446                           
 12447                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12448  09C3  0030               	movlb	16	; select bank16
 12449  09C4  081C               	movf	28,w	;volatile
 12450  09C5                     l963:	
 12451  09C5  0008               	return
 12452  09C6                     __end_of_DATAEE_ReadByte:	
 12453                           
 12454                           	psect	text11
 12455  0DDA                     __ptext11:	
 12456 ;; *************** function _push_ring *****************
 12457 ;; Defined at:
 12458 ;;		line 34 in file "eeprom_rw.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12461 ;;		 -> nreg_pt(1), 
 12462 ;;  nreg            1   13[BANK0 ] unsigned char 
 12463 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12464 ;;		 -> nreg_init(1), 
 12465 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12466 ;;		 -> ring_byte(5), 
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12469 ;;		 -> nreg_pt(1), 
 12470 ;;  i               1   18[BANK0 ] unsigned char 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12480 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;Total ram usage:        7 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    7
 12487 ;; This function calls:
 12488 ;;		_DATAEE_WriteByte
 12489 ;; This function is called by:
 12490 ;;		_main
 12491 ;; This function uses a non-reentrant model
 12492 ;;
 12493                           
 12494                           
 12495                           ;psect for function _push_ring
 12496  0DDA                     _push_ring:	
 12497                           
 12498                           ;incstack = 0
 12499                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12500                           ;push_ring@nreg_pt stored from wreg
 12501  0DDA  0020               	movlb	0	; select bank0
 12502  0DDB  00B3               	movwf	push_ring@nreg_pt
 12503  0DDC                     l7131:	
 12504                           
 12505                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12506  0DDC  082E               	movf	push_ring@nreg_init,w
 12507  0DDD  0086               	movwf	6
 12508  0DDE  0187               	clrf	7
 12509  0DDF  0801               	movf	1,w
 12510  0DE0  1D03               	btfss	3,2
 12511  0DE1  2DE3               	goto	u4621
 12512  0DE2  2DE4               	goto	u4620
 12513  0DE3                     u4621:	
 12514  0DE3  2DE9               	goto	l7135
 12515  0DE4                     u4620:	
 12516  0DE4                     l7133:	
 12517  0DE4  082E               	movf	push_ring@nreg_init,w
 12518  0DE5  0086               	movwf	6
 12519  0DE6  0187               	clrf	7
 12520  0DE7  0181               	clrf	1
 12521  0DE8  0A81               	incf	1,f
 12522  0DE9                     l7135:	
 12523                           
 12524                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12525  0DE9  01B2               	clrf	push_ring@i
 12526  0DEA                     l7141:	
 12527                           
 12528                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12529  0DEA  0833               	movf	push_ring@nreg_pt,w
 12530  0DEB  0086               	movwf	6
 12531  0DEC  0187               	clrf	7
 12532  0DED  082D               	movf	push_ring@nreg,w
 12533  0DEE  0201               	subwf	1,w
 12534  0DEF  1C03               	skipc
 12535  0DF0  2DF2               	goto	u4631
 12536  0DF1  2DF3               	goto	u4630
 12537  0DF2                     u4631:	
 12538  0DF2  2DF7               	goto	l7145
 12539  0DF3                     u4630:	
 12540  0DF3                     l7143:	
 12541  0DF3  0833               	movf	push_ring@nreg_pt,w
 12542  0DF4  0086               	movwf	6
 12543  0DF5  0187               	clrf	7
 12544  0DF6  0181               	clrf	1
 12545  0DF7                     l7145:	
 12546                           
 12547                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12548  0DF7  0833               	movf	push_ring@nreg_pt,w
 12549  0DF8  0086               	movwf	6
 12550  0DF9  0187               	clrf	7
 12551  0DFA  0801               	movf	1,w
 12552  0DFB  3E00               	addlw	0
 12553  0DFC  00A9               	movwf	DATAEE_WriteByte@bAdd
 12554  0DFD  30F0               	movlw	240
 12555  0DFE  1803               	skipnc
 12556  0DFF  30F1               	movlw	241
 12557  0E00  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12558  0E01  0832               	movf	push_ring@i,w
 12559  0E02  072F               	addwf	push_ring@ring_byte,w
 12560  0E03  00B0               	movwf	??_push_ring
 12561  0E04  0830               	movf	??_push_ring,w
 12562  0E05  0086               	movwf	6
 12563  0E06  0187               	clrf	7
 12564  0E07  0801               	movf	1,w
 12565  0E08  00B1               	movwf	??_push_ring+1
 12566  0E09  0831               	movf	??_push_ring+1,w
 12567  0E0A  00AB               	movwf	DATAEE_WriteByte@bData
 12568  0E0B  318B  23F5  318D   	fcall	_DATAEE_WriteByte
 12569  0E0E                     l7147:	
 12570                           
 12571                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12572  0E0E  3001               	movlw	1
 12573  0E0F  0020               	movlb	0	; select bank0
 12574  0E10  00B0               	movwf	??_push_ring
 12575  0E11  0833               	movf	push_ring@nreg_pt,w
 12576  0E12  0086               	movwf	6
 12577  0E13  0187               	clrf	7
 12578  0E14  0830               	movf	??_push_ring,w
 12579  0E15  0781               	addwf	1,f
 12580  0E16                     l7149:	
 12581                           
 12582                           ;eeprom_rw.c: 40:     }
 12583  0E16  3001               	movlw	1
 12584  0E17  00B0               	movwf	??_push_ring
 12585  0E18  0830               	movf	??_push_ring,w
 12586  0E19  07B2               	addwf	push_ring@i,f
 12587  0E1A                     l7151:	
 12588  0E1A  3005               	movlw	5
 12589  0E1B  0232               	subwf	push_ring@i,w
 12590  0E1C  1C03               	skipc
 12591  0E1D  2E1F               	goto	u4641
 12592  0E1E  2E20               	goto	u4640
 12593  0E1F                     u4641:	
 12594  0E1F  2DEA               	goto	l7141
 12595  0E20                     u4640:	
 12596  0E20                     l1643:	
 12597  0E20  0008               	return
 12598  0E21                     __end_of_push_ring:	
 12599                           
 12600                           	psect	text12
 12601  0BF5                     __ptext12:	
 12602 ;; *************** function _DATAEE_WriteByte *****************
 12603 ;; Defined at:
 12604 ;;		line 180 in file "mcc_generated_files/memory.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12607 ;;  bData           1   11[BANK0 ] unsigned char 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      void 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12619 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;Total ram usage:        4 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    6
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		_main
 12630 ;;		_recoverData
 12631 ;;		_push_ring
 12632 ;;		_cksum_w
 12633 ;;		_reset_recv
 12634 ;;		_recover
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           
 12639                           ;psect for function _DATAEE_WriteByte
 12640  0BF5                     _DATAEE_WriteByte:	
 12641  0BF5                     l6549:	
 12642                           ;incstack = 0
 12643                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12644                           
 12645                           
 12646                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12647  0BF5  3000               	movlw	0
 12648  0BF6  1B8B               	btfsc	11,7	;volatile
 12649  0BF7  3001               	movlw	1
 12650  0BF8  0020               	movlb	0	; select bank0
 12651  0BF9  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 12652                           
 12653                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12654  0BFA  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 12655  0BFB  0030               	movlb	16	; select bank16
 12656  0BFC  009B               	movwf	27	;volatile
 12657  0BFD                     l6551:	
 12658                           
 12659                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12660  0BFD  0020               	movlb	0	; select bank0
 12661  0BFE  0829               	movf	DATAEE_WriteByte@bAdd,w
 12662  0BFF  0030               	movlb	16	; select bank16
 12663  0C00  009A               	movwf	26	;volatile
 12664  0C01                     l6553:	
 12665                           
 12666                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12667  0C01  0020               	movlb	0	; select bank0
 12668  0C02  082B               	movf	DATAEE_WriteByte@bData,w
 12669  0C03  0030               	movlb	16	; select bank16
 12670  0C04  009C               	movwf	28	;volatile
 12671  0C05                     l6555:	
 12672                           
 12673                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12674  0C05  171E               	bsf	30,6	;volsfr
 12675  0C06                     l6557:	
 12676                           
 12677                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12678  0C06  151E               	bsf	30,2	;volsfr
 12679  0C07                     l6559:	
 12680                           
 12681                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12682  0C07  138B               	bcf	11,7	;volatile
 12683  0C08                     l6561:	
 12684                           
 12685                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12686  0C08  3055               	movlw	85
 12687  0C09  009F               	movwf	31	;volsfr
 12688  0C0A                     l6563:	
 12689                           
 12690                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12691  0C0A  30AA               	movlw	170
 12692  0C0B  009F               	movwf	31	;volsfr
 12693  0C0C                     l6565:	
 12694                           
 12695                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12696  0C0C  149E               	bsf	30,1	;volsfr
 12697  0C0D                     l957:	
 12698                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12699                           
 12700                           
 12701                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12702  0C0D  189E               	btfsc	30,1	;volsfr
 12703  0C0E  2C10               	goto	u4021
 12704  0C0F  2C11               	goto	u4020
 12705  0C10                     u4021:	
 12706  0C10  2C0D               	goto	l957
 12707  0C11                     u4020:	
 12708  0C11                     l959:	
 12709                           
 12710                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12711  0C11  111E               	bcf	30,2	;volsfr
 12712  0C12                     l6567:	
 12713                           
 12714                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12715  0C12  0020               	movlb	0	; select bank0
 12716  0C13  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12717  0C14  1C03               	skipc
 12718  0C15  138B               	bcf	11,7	;volatile
 12719  0C16  1803               	skipnc
 12720  0C17  178B               	bsf	11,7	;volatile
 12721  0C18                     l960:	
 12722  0C18  0008               	return
 12723  0C19                     __end_of_DATAEE_WriteByte:	
 12724                           
 12725                           	psect	text13
 12726  0958                     __ptext13:	
 12727 ;; *************** function _i2c1_driver_open *****************
 12728 ;; Defined at:
 12729 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;		None
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;		None               void
 12736 ;; Registers used:
 12737 ;;		wreg, status,2
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;Total ram usage:        0 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:    6
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_main
 12754 ;;		_i2c_open
 12755 ;;		_I2C_Initialize
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           
 12760                           ;psect for function _i2c1_driver_open
 12761  0958                     _i2c1_driver_open:	
 12762  0958                     l6997:	
 12763                           ;incstack = 0
 12764                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12765                           
 12766  0958  0023               	movlb	3	; select bank3
 12767  0959  1A90               	btfsc	16,5	;volatile
 12768  095A  295C               	goto	u4301
 12769  095B  295D               	goto	u4300
 12770  095C                     u4301:	
 12771  095C  2963               	goto	l594
 12772  095D                     u4300:	
 12773  095D                     l6999:	
 12774  095D  018F               	clrf	15	;volatile
 12775  095E                     l7001:	
 12776  095E  3028               	movlw	40
 12777  095F  0090               	movwf	16	;volatile
 12778  0960                     l7003:	
 12779  0960  0191               	clrf	17	;volatile
 12780  0961  3003               	movlw	3
 12781  0962  008D               	movwf	13	;volatile
 12782  0963                     l594:	
 12783  0963  0008               	return
 12784  0964                     __end_of_i2c1_driver_open:	
 12785                           
 12786                           	psect	text14
 12787  0421                     __ptext14:	
 12788 ;; *************** function _config_routine *****************
 12789 ;; Defined at:
 12790 ;;		line 329 in file "main.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  select_mode     2   28[BANK0 ] unsigned int 
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;Total ram usage:        3 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:   10
 12811 ;; This function calls:
 12812 ;;		_all_LED
 12813 ;;		_checkDebounceSW1
 12814 ;;		_checkDebounceSW2
 12815 ;;		_mod1_LED
 12816 ;;		_mod2_LED
 12817 ;;		_mod3_LED
 12818 ;;		_mod4_LED
 12819 ;;		_mode_select_LED
 12820 ;;		_selectSubfield
 12821 ;; This function is called by:
 12822 ;;		_main
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function _config_routine
 12828  0421                     _config_routine:	
 12829  0421                     l7155:	
 12830                           ;incstack = 0
 12831                           ; Regs used in _config_routine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12832                           
 12833                           
 12834                           ;main.c: 331:     unsigned int select_mode =0;
 12835  0421  0020               	movlb	0	; select bank0
 12836  0422  01BC               	clrf	config_routine@select_mode
 12837  0423  01BD               	clrf	config_routine@select_mode+1
 12838  0424                     l7157:	
 12839                           
 12840                           ;main.c: 332:     last_ms = clkms;
 12841  0424  087D               	movf	_clkms,w	;volatile
 12842  0425  00BB               	movwf	??_config_routine
 12843  0426  083B               	movf	??_config_routine,w
 12844  0427  00D9               	movwf	_last_ms
 12845  0428                     l7159:	
 12846                           
 12847                           ;main.c: 333:     last_ms2 = clkms;
 12848  0428  087D               	movf	_clkms,w	;volatile
 12849  0429  00BB               	movwf	??_config_routine
 12850  042A  083B               	movf	??_config_routine,w
 12851  042B  00D8               	movwf	_last_ms2
 12852  042C                     l7161:	
 12853                           
 12854                           ;main.c: 336:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 12855  042C  0A5F               	incf	_mode_field_subfield,w
 12856  042D  1D03               	skipz
 12857  042E  2C33               	goto	u4651
 12858  042F  0A60               	incf	_mode_field_subfield+1,w
 12859  0430  1D03               	btfss	3,2
 12860  0431  2C33               	goto	u4651
 12861  0432  2C34               	goto	u4650
 12862  0433                     u4651:	
 12863  0433  2C3D               	goto	l7167
 12864  0434                     u4650:	
 12865  0434                     l7163:	
 12866  0434  083C               	movf	config_routine@select_mode,w
 12867  0435  043D               	iorwf	config_routine@select_mode+1,w
 12868  0436  1D03               	btfss	3,2
 12869  0437  2C39               	goto	u4661
 12870  0438  2C3A               	goto	u4660
 12871  0439                     u4661:	
 12872  0439  2C3D               	goto	l7167
 12873  043A                     u4660:	
 12874  043A                     l7165:	
 12875                           
 12876                           ;main.c: 337:             all_LED();
 12877  043A  3186  266C  3184   	fcall	_all_LED
 12878  043D                     l7167:	
 12879                           
 12880                           ;main.c: 340:         if(!PORTBbits.RB4){
 12881  043D  0020               	movlb	0	; select bank0
 12882  043E  1A0D               	btfsc	13,4	;volatile
 12883  043F  2C41               	goto	u4671
 12884  0440  2C42               	goto	u4670
 12885  0441                     u4671:	
 12886  0441  2C7D               	goto	l7189
 12887  0442                     u4670:	
 12888  0442                     l7169:	
 12889                           
 12890                           ;main.c: 341:             if(checkDebounceSW1()){
 12891  0442  3187  2721  3184   	fcall	_checkDebounceSW1
 12892  0445  3A00               	xorlw	0
 12893  0446  1903               	skipnz
 12894  0447  2C49               	goto	u4681
 12895  0448  2C4A               	goto	u4680
 12896  0449                     u4681:	
 12897  0449  2C78               	goto	l7187
 12898  044A                     u4680:	
 12899  044A                     l7171:	
 12900                           
 12901                           ;main.c: 343:                 select_mode +=1;
 12902  044A  3001               	movlw	1
 12903  044B  0020               	movlb	0	; select bank0
 12904  044C  07BC               	addwf	config_routine@select_mode,f
 12905  044D  3000               	movlw	0
 12906  044E  3DBD               	addwfc	config_routine@select_mode+1,f
 12907                           
 12908                           ;main.c: 345:                 switch(select_mode){
 12909  044F  2C65               	goto	l7185
 12910  0450                     l7173:	
 12911  0450  3189  212B  3184   	fcall	_mod1_LED
 12912  0453  2C78               	goto	l7187
 12913  0454                     l7175:	
 12914  0454  3189  2121  3184   	fcall	_mod2_LED
 12915  0457  2C78               	goto	l7187
 12916  0458                     l7177:	
 12917  0458  3189  2136  3184   	fcall	_mod3_LED
 12918  045B  2C78               	goto	l7187
 12919  045C                     l7179:	
 12920  045C  3189  2141  3184   	fcall	_mod4_LED
 12921  045F  2C78               	goto	l7187
 12922  0460                     l7181:	
 12923  0460  01BC               	clrf	config_routine@select_mode
 12924  0461  01BD               	clrf	config_routine@select_mode+1
 12925  0462  01D4               	clrf	_config_mode	;volatile
 12926  0463  01D3               	clrf	_alarm	;volatile
 12927                           
 12928                           ;main.c: 351:                     break;
 12929  0464  2C78               	goto	l7187
 12930  0465                     l7185:	
 12931                           
 12932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12933                           ; Switch size 1, requested type "simple"
 12934                           ; Number of cases is 1, Range of values is 0 to 0
 12935                           ; switch strategies available:
 12936                           ; Name         Instructions Cycles
 12937                           ; simple_byte            4     3 (average)
 12938                           ; direct_byte            8     6 (fixed)
 12939                           ; jumptable            260     6 (fixed)
 12940                           ;	Chosen strategy is simple_byte
 12941  0465  083D               	movf	config_routine@select_mode+1,w
 12942  0466  3A00               	xorlw	0	; case 0
 12943  0467  1903               	skipnz
 12944  0468  2C6A               	goto	l7715
 12945  0469  2C60               	goto	l7181
 12946  046A                     l7715:	
 12947                           
 12948                           ; Switch size 1, requested type "simple"
 12949                           ; Number of cases is 4, Range of values is 1 to 4
 12950                           ; switch strategies available:
 12951                           ; Name         Instructions Cycles
 12952                           ; simple_byte           13     7 (average)
 12953                           ; direct_byte           17     9 (fixed)
 12954                           ; jumptable            263     9 (fixed)
 12955                           ;	Chosen strategy is simple_byte
 12956  046A  083C               	movf	config_routine@select_mode,w
 12957  046B  3A01               	xorlw	1	; case 1
 12958  046C  1903               	skipnz
 12959  046D  2C50               	goto	l7173
 12960  046E  3A03               	xorlw	3	; case 2
 12961  046F  1903               	skipnz
 12962  0470  2C54               	goto	l7175
 12963  0471  3A01               	xorlw	1	; case 3
 12964  0472  1903               	skipnz
 12965  0473  2C58               	goto	l7177
 12966  0474  3A07               	xorlw	7	; case 4
 12967  0475  1903               	skipnz
 12968  0476  2C5C               	goto	l7179
 12969  0477  2C60               	goto	l7181
 12970  0478                     l7187:	
 12971                           
 12972                           ;main.c: 356:             last_ms = clkms;
 12973  0478  087D               	movf	_clkms,w	;volatile
 12974  0479  0020               	movlb	0	; select bank0
 12975  047A  00BB               	movwf	??_config_routine
 12976  047B  083B               	movf	??_config_routine,w
 12977  047C  00D9               	movwf	_last_ms
 12978  047D                     l7189:	
 12979                           
 12980                           ;main.c: 360:         if(!PORTCbits.RC5){
 12981  047D  1A8E               	btfsc	14,5	;volatile
 12982  047E  2C80               	goto	u4691
 12983  047F  2C81               	goto	u4690
 12984  0480                     u4691:	
 12985  0480  2C99               	goto	l7201
 12986  0481                     u4690:	
 12987  0481                     l7191:	
 12988                           
 12989                           ;main.c: 361:             if(checkDebounceSW2()){
 12990  0481  318E  26B4  3184   	fcall	_checkDebounceSW2
 12991  0484  3A00               	xorlw	0
 12992  0485  1903               	skipnz
 12993  0486  2C88               	goto	u4701
 12994  0487  2C89               	goto	u4700
 12995  0488                     u4701:	
 12996  0488  2C94               	goto	l7199
 12997  0489                     u4700:	
 12998  0489                     l7193:	
 12999                           
 13000                           ;main.c: 362:                 mode_field_subfield[0] = select_mode;
 13001  0489  0020               	movlb	0	; select bank0
 13002  048A  083D               	movf	config_routine@select_mode+1,w
 13003  048B  00E0               	movwf	_mode_field_subfield+1
 13004  048C  083C               	movf	config_routine@select_mode,w
 13005  048D  00DF               	movwf	_mode_field_subfield
 13006  048E                     l7195:	
 13007                           
 13008                           ;main.c: 363:                 mode_select_LED();
 13009  048E  318B  23B5  3184   	fcall	_mode_select_LED
 13010  0491                     l7197:	
 13011                           
 13012                           ;main.c: 366:                 selectSubfield();
 13013  0491  3185  252A  3184   	fcall	_selectSubfield
 13014  0494                     l7199:	
 13015                           
 13016                           ;main.c: 369:             last_ms2 = clkms;
 13017  0494  087D               	movf	_clkms,w	;volatile
 13018  0495  0020               	movlb	0	; select bank0
 13019  0496  00BB               	movwf	??_config_routine
 13020  0497  083B               	movf	??_config_routine,w
 13021  0498  00D8               	movwf	_last_ms2
 13022  0499                     l7201:	
 13023                           
 13024                           ;main.c: 372:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13025  0499  30A6               	movlw	166
 13026  049A                     u5047:	
 13027  049A  0B89               	decfsz	9,f
 13028  049B  2C9A               	goto	u5047
 13029  049C  3200               	nop2
 13030  049D                     l7203:	
 13031                           
 13032                           ;main.c: 374:     }while(config_mode == 1);
 13033  049D  0020               	movlb	0	; select bank0
 13034  049E  0354               	decf	_config_mode,w	;volatile
 13035  049F  1903               	btfsc	3,2
 13036  04A0  2CA2               	goto	u4711
 13037  04A1  2CA3               	goto	u4710
 13038  04A2                     u4711:	
 13039  04A2  2C2C               	goto	l7161
 13040  04A3                     u4710:	
 13041  04A3                     l7205:	
 13042                           
 13043                           ;main.c: 376:     mode_field_subfield[0] = -1;
 13044  04A3  30FF               	movlw	255
 13045  04A4  00DF               	movwf	_mode_field_subfield
 13046  04A5  30FF               	movlw	255
 13047  04A6  00E0               	movwf	_mode_field_subfield+1
 13048                           
 13049                           ;main.c: 377:     mode_field_subfield[1] = -1;
 13050  04A7  30FF               	movlw	255
 13051  04A8  00E1               	movwf	_mode_field_subfield+2
 13052  04A9  30FF               	movlw	255
 13053  04AA  00E2               	movwf	_mode_field_subfield+3
 13054  04AB                     l1294:	
 13055  04AB  0008               	return
 13056  04AC                     __end_of_config_routine:	
 13057                           
 13058                           	psect	text15
 13059  052A                     __ptext15:	
 13060 ;; *************** function _selectSubfield *****************
 13061 ;; Defined at:
 13062 ;;		line 386 in file "main.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  subfield        2   25[BANK0 ] unsigned int 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;Total ram usage:        4 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:    9
 13083 ;; This function calls:
 13084 ;;		_checkDebounceSW1
 13085 ;;		_checkDebounceSW2
 13086 ;;		_getSubfieldInfo
 13087 ;;		_increment_subfield
 13088 ;;		_mod1_LED
 13089 ;;		_mod2_LED
 13090 ;;		_mod3_LED
 13091 ;;		_mod4_LED
 13092 ;; This function is called by:
 13093 ;;		_config_routine
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           
 13098                           ;psect for function _selectSubfield
 13099  052A                     _selectSubfield:	
 13100  052A                     l6859:	
 13101                           ;incstack = 0
 13102                           ; Regs used in _selectSubfield: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13103                           
 13104                           
 13105                           ;main.c: 387:     unsigned int subfield = 1;
 13106  052A  3001               	movlw	1
 13107  052B  0020               	movlb	0	; select bank0
 13108  052C  00B9               	movwf	selectSubfield@subfield
 13109  052D  3000               	movlw	0
 13110  052E  00BA               	movwf	selectSubfield@subfield+1
 13111  052F                     l1298:	
 13112                           ;main.c: 393:     do{
 13113                           
 13114                           
 13115                           ;main.c: 394:         if(!PORTBbits.RB4){
 13116  052F  1A0D               	btfsc	13,4	;volatile
 13117  0530  2D32               	goto	u4091
 13118  0531  2D33               	goto	u4090
 13119  0532                     u4091:	
 13120  0532  2D56               	goto	l6877
 13121  0533                     u4090:	
 13122  0533                     l6863:	
 13123                           
 13124                           ;main.c: 395:             if(checkDebounceSW1()){
 13125  0533  3187  2721  3185   	fcall	_checkDebounceSW1
 13126  0536  3A00               	xorlw	0
 13127  0537  1903               	skipnz
 13128  0538  2D3A               	goto	u4101
 13129  0539  2D3B               	goto	u4100
 13130  053A                     u4101:	
 13131  053A  2D40               	goto	l1300
 13132  053B                     u4100:	
 13133  053B                     l6865:	
 13134                           
 13135                           ;main.c: 396:                 subfield +=1;
 13136  053B  3001               	movlw	1
 13137  053C  0020               	movlb	0	; select bank0
 13138  053D  07B9               	addwf	selectSubfield@subfield,f
 13139  053E  3000               	movlw	0
 13140  053F  3DBA               	addwfc	selectSubfield@subfield+1,f
 13141  0540                     l1300:	
 13142                           ;main.c: 397:             }
 13143                           
 13144                           
 13145                           ;main.c: 398:             last_ms = clkms;
 13146  0540  087D               	movf	_clkms,w	;volatile
 13147  0541  0020               	movlb	0	; select bank0
 13148  0542  00B7               	movwf	??_selectSubfield
 13149  0543  0837               	movf	??_selectSubfield,w
 13150  0544  00D9               	movwf	_last_ms
 13151  0545  2D56               	goto	l6877
 13152  0546                     l6867:	
 13153  0546  3189  212B  3185   	fcall	_mod1_LED
 13154  0549  2D69               	goto	l1303
 13155  054A                     l6869:	
 13156  054A  3189  2121  3185   	fcall	_mod2_LED
 13157  054D  2D69               	goto	l1303
 13158  054E                     l6871:	
 13159  054E  3189  2136  3185   	fcall	_mod3_LED
 13160  0551  2D69               	goto	l1303
 13161  0552                     l6873:	
 13162  0552  3189  2141  3185   	fcall	_mod4_LED
 13163  0555  2D69               	goto	l1303
 13164  0556                     l6877:	
 13165                           
 13166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13167                           ; Switch size 1, requested type "simple"
 13168                           ; Number of cases is 1, Range of values is 0 to 0
 13169                           ; switch strategies available:
 13170                           ; Name         Instructions Cycles
 13171                           ; simple_byte            4     3 (average)
 13172                           ; direct_byte            8     6 (fixed)
 13173                           ; jumptable            260     6 (fixed)
 13174                           ;	Chosen strategy is simple_byte
 13175  0556  083A               	movf	selectSubfield@subfield+1,w
 13176  0557  3A00               	xorlw	0	; case 0
 13177  0558  1903               	skipnz
 13178  0559  2D5B               	goto	l7717
 13179  055A  2D69               	goto	l1303
 13180  055B                     l7717:	
 13181                           
 13182                           ; Switch size 1, requested type "simple"
 13183                           ; Number of cases is 4, Range of values is 1 to 4
 13184                           ; switch strategies available:
 13185                           ; Name         Instructions Cycles
 13186                           ; simple_byte           13     7 (average)
 13187                           ; direct_byte           17     9 (fixed)
 13188                           ; jumptable            263     9 (fixed)
 13189                           ;	Chosen strategy is simple_byte
 13190  055B  0839               	movf	selectSubfield@subfield,w
 13191  055C  3A01               	xorlw	1	; case 1
 13192  055D  1903               	skipnz
 13193  055E  2D46               	goto	l6867
 13194  055F  3A03               	xorlw	3	; case 2
 13195  0560  1903               	skipnz
 13196  0561  2D4A               	goto	l6869
 13197  0562  3A01               	xorlw	1	; case 3
 13198  0563  1903               	skipnz
 13199  0564  2D4E               	goto	l6871
 13200  0565  3A07               	xorlw	7	; case 4
 13201  0566  1903               	skipnz
 13202  0567  2D52               	goto	l6873
 13203  0568  2D69               	goto	l1303
 13204  0569                     l1303:	
 13205                           
 13206                           ;main.c: 412:         if(!PORTCbits.RC5){
 13207  0569  0020               	movlb	0	; select bank0
 13208  056A  1A8E               	btfsc	14,5	;volatile
 13209  056B  2D6D               	goto	u4111
 13210  056C  2D6E               	goto	u4110
 13211  056D                     u4111:	
 13212  056D  2D86               	goto	l6889
 13213  056E                     u4110:	
 13214  056E                     l6879:	
 13215                           
 13216                           ;main.c: 413:             if(checkDebounceSW2()){
 13217  056E  318E  26B4  3185   	fcall	_checkDebounceSW2
 13218  0571  3A00               	xorlw	0
 13219  0572  1903               	skipnz
 13220  0573  2D75               	goto	u4121
 13221  0574  2D76               	goto	u4120
 13222  0575                     u4121:	
 13223  0575  2D81               	goto	l6887
 13224  0576                     u4120:	
 13225  0576                     l6881:	
 13226                           
 13227                           ;main.c: 414:                 mode_field_subfield[1] = subfield;
 13228  0576  0020               	movlb	0	; select bank0
 13229  0577  083A               	movf	selectSubfield@subfield+1,w
 13230  0578  00E2               	movwf	_mode_field_subfield+3
 13231  0579  0839               	movf	selectSubfield@subfield,w
 13232  057A  00E1               	movwf	_mode_field_subfield+2
 13233  057B                     l6883:	
 13234                           
 13235                           ;main.c: 415:                 getSubfieldInfo();
 13236  057B  3184  24AC  3185   	fcall	_getSubfieldInfo
 13237  057E                     l6885:	
 13238                           
 13239                           ;main.c: 416:                 increment_subfield();
 13240  057E  318F  27A9  3185   	fcall	_increment_subfield
 13241  0581                     l6887:	
 13242                           
 13243                           ;main.c: 418:             last_ms2 = clkms;
 13244  0581  087D               	movf	_clkms,w	;volatile
 13245  0582  0020               	movlb	0	; select bank0
 13246  0583  00B7               	movwf	??_selectSubfield
 13247  0584  0837               	movf	??_selectSubfield,w
 13248  0585  00D8               	movwf	_last_ms2
 13249  0586                     l6889:	
 13250                           
 13251                           ;main.c: 421:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13252  0586  30A6               	movlw	166
 13253  0587                     u5057:	
 13254  0587  0B89               	decfsz	9,f
 13255  0588  2D87               	goto	u5057
 13256  0589  3200               	nop2
 13257  058A                     l6891:	
 13258                           
 13259                           ;main.c: 423:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13260  058A  0020               	movlb	0	; select bank0
 13261  058B  0860               	movf	_mode_field_subfield+1,w
 13262  058C  0085               	movwf	5
 13263  058D  085F               	movf	_mode_field_subfield,w
 13264  058E  0084               	movwf	4
 13265  058F  3020               	movlw	low (_num_subfields| (0+32768))
 13266  0590  0784               	addwf	4,f
 13267  0591  3090               	movlw	high (_num_subfields| (0+32768))
 13268  0592  3D85               	addwfc	5,f
 13269  0593  0800               	movf	0,w	;code access
 13270  0594  00B7               	movwf	??_selectSubfield
 13271  0595  01B8               	clrf	??_selectSubfield+1
 13272  0596  083A               	movf	selectSubfield@subfield+1,w
 13273  0597  0238               	subwf	??_selectSubfield+1,w
 13274  0598  1D03               	skipz
 13275  0599  2D9C               	goto	u4135
 13276  059A  0839               	movf	selectSubfield@subfield,w
 13277  059B  0237               	subwf	??_selectSubfield,w
 13278  059C                     u4135:	
 13279  059C  1803               	skipnc
 13280  059D  2D9F               	goto	u4131
 13281  059E  2DA0               	goto	u4130
 13282  059F                     u4131:	
 13283  059F  2D2F               	goto	l1298
 13284  05A0                     u4130:	
 13285  05A0                     l1312:	
 13286  05A0  0008               	return
 13287  05A1                     __end_of_selectSubfield:	
 13288                           
 13289                           	psect	text16
 13290  0941                     __ptext16:	
 13291 ;; *************** function _mod4_LED *****************
 13292 ;; Defined at:
 13293 ;;		line 745 in file "main.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;		None
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;		None
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  1    wreg      void 
 13300 ;; Registers used:
 13301 ;;		wreg, status,2, status,0, pclath, cstack
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;Total ram usage:        0 bytes
 13312 ;; Hardware stack levels used:    1
 13313 ;; Hardware stack levels required when called:    7
 13314 ;; This function calls:
 13315 ;;		_PWM6_LoadDutyValue
 13316 ;; This function is called by:
 13317 ;;		_config_routine
 13318 ;;		_selectSubfield
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           
 13323                           ;psect for function _mod4_LED
 13324  0941                     _mod4_LED:	
 13325  0941                     l6589:	
 13326                           ;incstack = 0
 13327                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13328                           
 13329                           
 13330                           ;main.c: 746:     LATA = 0;
 13331  0941  0020               	movlb	0	; select bank0
 13332  0942  0196               	clrf	22	;volatile
 13333  0943                     l6591:	
 13334                           
 13335                           ;main.c: 747:     PWM6_LoadDutyValue(0);
 13336  0943  3000               	movlw	0
 13337  0944  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13338  0945  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13339  0946  318A  22F2  3189   	fcall	_PWM6_LoadDutyValue
 13340  0949                     l6593:	
 13341  0949  0020               	movlb	0	; select bank0
 13342  094A  1616               	bsf	22,4	;volatile
 13343  094B                     l1426:	
 13344  094B  0008               	return
 13345  094C                     __end_of_mod4_LED:	
 13346                           
 13347                           	psect	text17
 13348  0936                     __ptext17:	
 13349 ;; *************** function _mod3_LED *****************
 13350 ;; Defined at:
 13351 ;;		line 738 in file "main.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0, pclath, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; Hardware stack levels required when called:    7
 13372 ;; This function calls:
 13373 ;;		_PWM6_LoadDutyValue
 13374 ;; This function is called by:
 13375 ;;		_config_routine
 13376 ;;		_selectSubfield
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           
 13381                           ;psect for function _mod3_LED
 13382  0936                     _mod3_LED:	
 13383  0936                     l6583:	
 13384                           ;incstack = 0
 13385                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13386                           
 13387                           
 13388                           ;main.c: 739:     LATA = 0;
 13389  0936  0020               	movlb	0	; select bank0
 13390  0937  0196               	clrf	22	;volatile
 13391  0938                     l6585:	
 13392                           
 13393                           ;main.c: 740:     PWM6_LoadDutyValue(0);
 13394  0938  3000               	movlw	0
 13395  0939  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13396  093A  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13397  093B  318A  22F2  3189   	fcall	_PWM6_LoadDutyValue
 13398  093E                     l6587:	
 13399  093E  0020               	movlb	0	; select bank0
 13400  093F  1696               	bsf	22,5	;volatile
 13401  0940                     l1421:	
 13402  0940  0008               	return
 13403  0941                     __end_of_mod3_LED:	
 13404                           
 13405                           	psect	text18
 13406  0921                     __ptext18:	
 13407 ;; *************** function _mod2_LED *****************
 13408 ;; Defined at:
 13409 ;;		line 733 in file "main.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      void 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0, pclath, cstack
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    7
 13430 ;; This function calls:
 13431 ;;		_PWM6_LoadDutyValue
 13432 ;; This function is called by:
 13433 ;;		_config_routine
 13434 ;;		_selectSubfield
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           
 13439                           ;psect for function _mod2_LED
 13440  0921                     _mod2_LED:	
 13441  0921                     l6579:	
 13442                           ;incstack = 0
 13443                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13444                           
 13445                           
 13446                           ;main.c: 734:     LATA = 0;
 13447  0921  0020               	movlb	0	; select bank0
 13448  0922  0196               	clrf	22	;volatile
 13449  0923                     l6581:	
 13450                           
 13451                           ;main.c: 735:     PWM6_LoadDutyValue(1023);
 13452  0923  30FF               	movlw	255
 13453  0924  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13454  0925  3003               	movlw	3
 13455  0926  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13456  0927  318A  22F2  3189   	fcall	_PWM6_LoadDutyValue
 13457  092A                     l1416:	
 13458  092A  0008               	return
 13459  092B                     __end_of_mod2_LED:	
 13460                           
 13461                           	psect	text19
 13462  092B                     __ptext19:	
 13463 ;; *************** function _mod1_LED *****************
 13464 ;; Defined at:
 13465 ;;		line 726 in file "main.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;		None
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;		None
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      void 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0, pclath, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;Total ram usage:        0 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    7
 13486 ;; This function calls:
 13487 ;;		_PWM6_LoadDutyValue
 13488 ;; This function is called by:
 13489 ;;		_config_routine
 13490 ;;		_selectSubfield
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           
 13495                           ;psect for function _mod1_LED
 13496  092B                     _mod1_LED:	
 13497  092B                     l6573:	
 13498                           ;incstack = 0
 13499                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13500                           
 13501                           
 13502                           ;main.c: 727:     LATA = 0;
 13503  092B  0020               	movlb	0	; select bank0
 13504  092C  0196               	clrf	22	;volatile
 13505  092D                     l6575:	
 13506                           
 13507                           ;main.c: 728:     PWM6_LoadDutyValue(0);
 13508  092D  3000               	movlw	0
 13509  092E  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13510  092F  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13511  0930  318A  22F2  3189   	fcall	_PWM6_LoadDutyValue
 13512  0933                     l6577:	
 13513  0933  0020               	movlb	0	; select bank0
 13514  0934  1796               	bsf	22,7	;volatile
 13515  0935                     l1413:	
 13516  0935  0008               	return
 13517  0936                     __end_of_mod1_LED:	
 13518                           
 13519                           	psect	text20
 13520  0FA9                     __ptext20:	
 13521 ;; *************** function _increment_subfield *****************
 13522 ;; Defined at:
 13523 ;;		line 583 in file "main.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  _value          1   22[BANK0 ] unsigned char 
 13528 ;;  exit            1   21[BANK0 ] unsigned char 
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;Total ram usage:        4 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:    8
 13545 ;; This function calls:
 13546 ;;		Absolute function
 13547 ;;		_PWM6_LoadDutyValue
 13548 ;;		_checkDebounceSW1
 13549 ;;		_checkDebounceSW2
 13550 ;;		_recAlarm
 13551 ;;		_recHour
 13552 ;;		_recLumThresh
 13553 ;;		_recMinutes
 13554 ;;		_recTempThresh
 13555 ;;		_representLed
 13556 ;; This function is called by:
 13557 ;;		_selectSubfield
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           
 13562                           ;psect for function _increment_subfield
 13563  0FA9                     _increment_subfield:	
 13564  0FA9                     l6637:	
 13565                           ;incstack = 0
 13566                           ; Regs used in _increment_subfield: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13567                           
 13568                           
 13569                           ;main.c: 585:     unsigned char exit = 0;
 13570  0FA9  0020               	movlb	0	; select bank0
 13571  0FAA  01B5               	clrf	increment_subfield@exit
 13572                           
 13573                           ;main.c: 586:     unsigned char _value = 0;
 13574  0FAB  01B6               	clrf	increment_subfield@_value
 13575  0FAC                     l6639:	
 13576                           
 13577                           ;main.c: 588:     PWM6_LoadDutyValue(0);
 13578  0FAC  3000               	movlw	0
 13579  0FAD  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13580  0FAE  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13581  0FAF  318A  22F2  318F   	fcall	_PWM6_LoadDutyValue
 13582                           
 13583                           ;main.c: 591:     while(exit == 0){
 13584  0FB2  2FEC               	goto	l6659
 13585  0FB3                     l1366:	
 13586                           
 13587                           ;main.c: 593:         if(!PORTCbits.RC5){
 13588  0FB3  1A8E               	btfsc	14,5	;volatile
 13589  0FB4  2FB6               	goto	u4031
 13590  0FB5  2FB7               	goto	u4030
 13591  0FB6                     u4031:	
 13592  0FB6  2FD8               	goto	l6651
 13593  0FB7                     u4030:	
 13594  0FB7                     l6641:	
 13595                           
 13596                           ;main.c: 594:             if(checkDebounceSW2()){
 13597  0FB7  318E  26B4  318F   	fcall	_checkDebounceSW2
 13598  0FBA  3A00               	xorlw	0
 13599  0FBB  1903               	skipnz
 13600  0FBC  2FBE               	goto	u4041
 13601  0FBD  2FBF               	goto	u4040
 13602  0FBE                     u4041:	
 13603  0FBE  2FD3               	goto	l6649
 13604  0FBF                     u4040:	
 13605  0FBF                     l6643:	
 13606                           
 13607                           ;main.c: 596:                 _value++;
 13608  0FBF  3001               	movlw	1
 13609  0FC0  0020               	movlb	0	; select bank0
 13610  0FC1  00B3               	movwf	??_increment_subfield
 13611  0FC2  0833               	movf	??_increment_subfield,w
 13612  0FC3  07B6               	addwf	increment_subfield@_value,f
 13613  0FC4                     l6645:	
 13614                           
 13615                           ;main.c: 597:                  PWM6_LoadDutyValue(_value);
 13616  0FC4  0836               	movf	increment_subfield@_value,w
 13617  0FC5  00B3               	movwf	??_increment_subfield
 13618  0FC6  01B4               	clrf	??_increment_subfield+1
 13619  0FC7  0833               	movf	??_increment_subfield,w
 13620  0FC8  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 13621  0FC9  0834               	movf	??_increment_subfield+1,w
 13622  0FCA  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13623  0FCB  318A  22F2  318F   	fcall	_PWM6_LoadDutyValue
 13624  0FCE                     l6647:	
 13625                           
 13626                           ;main.c: 598:                  representLed(_value);
 13627  0FCE  0020               	movlb	0	; select bank0
 13628  0FCF  0836               	movf	increment_subfield@_value,w
 13629  0FD0  3185  25A1  318F   	fcall	_representLed
 13630  0FD3                     l6649:	
 13631                           
 13632                           ;main.c: 601:             last_ms2 = clkms;
 13633  0FD3  087D               	movf	_clkms,w	;volatile
 13634  0FD4  0020               	movlb	0	; select bank0
 13635  0FD5  00B3               	movwf	??_increment_subfield
 13636  0FD6  0833               	movf	??_increment_subfield,w
 13637  0FD7  00D8               	movwf	_last_ms2
 13638  0FD8                     l6651:	
 13639                           
 13640                           ;main.c: 604:         if(!PORTBbits.RB4){
 13641  0FD8  1A0D               	btfsc	13,4	;volatile
 13642  0FD9  2FDB               	goto	u4051
 13643  0FDA  2FDC               	goto	u4050
 13644  0FDB                     u4051:	
 13645  0FDB  2FEC               	goto	l6659
 13646  0FDC                     u4050:	
 13647  0FDC                     l6653:	
 13648                           
 13649                           ;main.c: 605:             if(checkDebounceSW1()){
 13650  0FDC  3187  2721  318F   	fcall	_checkDebounceSW1
 13651  0FDF  3A00               	xorlw	0
 13652  0FE0  1903               	skipnz
 13653  0FE1  2FE3               	goto	u4061
 13654  0FE2  2FE4               	goto	u4060
 13655  0FE3                     u4061:	
 13656  0FE3  2FE7               	goto	l6657
 13657  0FE4                     u4060:	
 13658  0FE4                     l6655:	
 13659                           
 13660                           ;main.c: 606:                 exit = 1;
 13661  0FE4  0020               	movlb	0	; select bank0
 13662  0FE5  01B5               	clrf	increment_subfield@exit
 13663  0FE6  0AB5               	incf	increment_subfield@exit,f
 13664  0FE7                     l6657:	
 13665                           
 13666                           ;main.c: 608:             last_ms = clkms;
 13667  0FE7  087D               	movf	_clkms,w	;volatile
 13668  0FE8  0020               	movlb	0	; select bank0
 13669  0FE9  00B3               	movwf	??_increment_subfield
 13670  0FEA  0833               	movf	??_increment_subfield,w
 13671  0FEB  00D9               	movwf	_last_ms
 13672  0FEC                     l6659:	
 13673                           
 13674                           ;main.c: 591:     while(exit == 0){
 13675  0FEC  0020               	movlb	0	; select bank0
 13676  0FED  0835               	movf	increment_subfield@exit,w
 13677  0FEE  1903               	btfsc	3,2
 13678  0FEF  2FF1               	goto	u4071
 13679  0FF0  2FF2               	goto	u4070
 13680  0FF1                     u4071:	
 13681  0FF1  2FB3               	goto	l1366
 13682  0FF2                     u4070:	
 13683  0FF2                     l6661:	
 13684                           
 13685                           ;main.c: 611:     subfield_info.reconstruct_subfield(_value);
 13686  0FF2  0836               	movf	increment_subfield@_value,w
 13687  0FF3  00B3               	movwf	??_increment_subfield
 13688  0FF4  0833               	movf	??_increment_subfield,w
 13689  0FF5  00AC               	movwf	recLumThresh@_value
 13690  0FF6  3002               	movlw	2
 13691  0FF7  3E43               	addlw	(low (_subfield_info| 0))& (0+255)
 13692  0FF8  0086               	movwf	6
 13693  0FF9  0187               	clrf	7
 13694  0FFA  3F41               	moviw [1]fsr1
 13695  0FFB  008A               	movwf	10
 13696  0FFC  3F40               	moviw [0]fsr1
 13697  0FFD  000A               	callw
 13698  0FFE  318F               	pagesel	$
 13699  0FFF                     l1372:	
 13700  0FFF  0008               	return
 13701  1000                     __end_of_increment_subfield:	
 13702                           
 13703                           	psect	text21
 13704  05A1                     __ptext21:	
 13705 ;; *************** function _representLed *****************
 13706 ;; Defined at:
 13707 ;;		line 861 in file "main.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;  val             1    wreg     unsigned char 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  val             1   17[BANK0 ] unsigned char 
 13712 ;;  aux             1   18[BANK0 ] unsigned char 
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, status,2, status,0, pclath, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;Total ram usage:        7 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    7
 13729 ;; This function calls:
 13730 ;;		___awdiv
 13731 ;; This function is called by:
 13732 ;;		_increment_subfield
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           
 13736                           
 13737                           ;psect for function _representLed
 13738  05A1                     _representLed:	
 13739                           
 13740                           ;incstack = 0
 13741                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 13742                           ;representLed@val stored from wreg
 13743  05A1  0020               	movlb	0	; select bank0
 13744  05A2  00B1               	movwf	representLed@val
 13745  05A3                     l6535:	
 13746                           
 13747                           ;main.c: 864:     if(val > 99)
 13748  05A3  3064               	movlw	100
 13749  05A4  0231               	subwf	representLed@val,w
 13750  05A5  1C03               	skipc
 13751  05A6  2DA8               	goto	u3981
 13752  05A7  2DA9               	goto	u3980
 13753  05A8                     u3981:	
 13754  05A8  2DAA               	goto	l6539
 13755  05A9                     u3980:	
 13756  05A9  2E0B               	goto	l1460
 13757  05AA                     l6539:	
 13758                           
 13759                           ;main.c: 867:     aux = val >> 2;
 13760  05AA  0831               	movf	representLed@val,w
 13761  05AB  00AC               	movwf	??_representLed
 13762  05AC  3002               	movlw	2
 13763  05AD                     u3995:	
 13764  05AD  36AC               	lsrf	??_representLed,f
 13765  05AE  0B89               	decfsz	9,f
 13766  05AF  2DAD               	goto	u3995
 13767  05B0  082C               	movf	??_representLed,w
 13768  05B1  00AD               	movwf	??_representLed+1
 13769  05B2  082D               	movf	??_representLed+1,w
 13770  05B3  00B2               	movwf	representLed@aux
 13771                           
 13772                           ;main.c: 869:     LATAbits.LATA4 = aux >> 3;
 13773  05B4  0832               	movf	representLed@aux,w
 13774  05B5  00AC               	movwf	??_representLed
 13775  05B6  3003               	movlw	3
 13776  05B7                     u4005:	
 13777  05B7  36AC               	lsrf	??_representLed,f
 13778  05B8  0B89               	decfsz	9,f
 13779  05B9  2DB7               	goto	u4005
 13780  05BA  082C               	movf	??_representLed,w
 13781  05BB  00AD               	movwf	??_representLed+1
 13782  05BC  0EAD               	swapf	??_representLed+1,f
 13783  05BD  0816               	movf	22,w	;volatile
 13784  05BE  062D               	xorwf	??_representLed+1,w
 13785  05BF  39EF               	andlw	-17
 13786  05C0  062D               	xorwf	??_representLed+1,w
 13787  05C1  0096               	movwf	22	;volatile
 13788                           
 13789                           ;main.c: 870:     LATAbits.LATA5 = aux >> 2 & 1;
 13790  05C2  0832               	movf	representLed@aux,w
 13791  05C3  00AC               	movwf	??_representLed
 13792  05C4  3002               	movlw	2
 13793  05C5                     u4015:	
 13794  05C5  36AC               	lsrf	??_representLed,f
 13795  05C6  0B89               	decfsz	9,f
 13796  05C7  2DC5               	goto	u4015
 13797  05C8  082C               	movf	??_representLed,w
 13798  05C9  3901               	andlw	1
 13799  05CA  00AD               	movwf	??_representLed+1
 13800  05CB  0EAD               	swapf	??_representLed+1,f
 13801  05CC  0DAD               	rlf	??_representLed+1,f
 13802  05CD  0816               	movf	22,w	;volatile
 13803  05CE  062D               	xorwf	??_representLed+1,w
 13804  05CF  39DF               	andlw	-33
 13805  05D0  062D               	xorwf	??_representLed+1,w
 13806  05D1  0096               	movwf	22	;volatile
 13807  05D2                     l6541:	
 13808                           
 13809                           ;main.c: 871:     LATAbits.LATA6 = (aux /10) >>1 & 1;
 13810  05D2  300A               	movlw	10
 13811  05D3  00A3               	movwf	___awdiv@divisor
 13812  05D4  3000               	movlw	0
 13813  05D5  00A4               	movwf	___awdiv@divisor+1
 13814  05D6  0832               	movf	representLed@aux,w
 13815  05D7  00AC               	movwf	??_representLed
 13816  05D8  01AD               	clrf	??_representLed+1
 13817  05D9  082C               	movf	??_representLed,w
 13818  05DA  00A5               	movwf	___awdiv@dividend
 13819  05DB  082D               	movf	??_representLed+1,w
 13820  05DC  00A6               	movwf	___awdiv@dividend+1
 13821  05DD  3186  260C  3185   	fcall	___awdiv
 13822  05E0  0020               	movlb	0	; select bank0
 13823  05E1  0823               	movf	?___awdiv,w
 13824  05E2  00AE               	movwf	??_representLed+2
 13825  05E3  0824               	movf	?___awdiv+1,w
 13826  05E4  00AF               	movwf	??_representLed+3
 13827  05E5  0D2F               	rlf	??_representLed+3,w
 13828  05E6  0CAF               	rrf	??_representLed+3,f
 13829  05E7  0CAE               	rrf	??_representLed+2,f
 13830  05E8  082E               	movf	??_representLed+2,w
 13831  05E9  3901               	andlw	1
 13832  05EA  00B0               	movwf	??_representLed+4
 13833  05EB  0EB0               	swapf	??_representLed+4,f
 13834  05EC  0DB0               	rlf	??_representLed+4,f
 13835  05ED  0DB0               	rlf	??_representLed+4,f
 13836  05EE  0816               	movf	22,w	;volatile
 13837  05EF  0630               	xorwf	??_representLed+4,w
 13838  05F0  39BF               	andlw	-65
 13839  05F1  0630               	xorwf	??_representLed+4,w
 13840  05F2  0096               	movwf	22	;volatile
 13841  05F3                     l6543:	
 13842                           
 13843                           ;main.c: 872:     LATAbits.LATA7 = (aux /100);
 13844  05F3  3064               	movlw	100
 13845  05F4  00A3               	movwf	___awdiv@divisor
 13846  05F5  3000               	movlw	0
 13847  05F6  00A4               	movwf	___awdiv@divisor+1
 13848  05F7  0832               	movf	representLed@aux,w
 13849  05F8  00AC               	movwf	??_representLed
 13850  05F9  01AD               	clrf	??_representLed+1
 13851  05FA  082C               	movf	??_representLed,w
 13852  05FB  00A5               	movwf	___awdiv@dividend
 13853  05FC  082D               	movf	??_representLed+1,w
 13854  05FD  00A6               	movwf	___awdiv@dividend+1
 13855  05FE  3186  260C  3185   	fcall	___awdiv
 13856  0601  0020               	movlb	0	; select bank0
 13857  0602  0823               	movf	?___awdiv,w
 13858  0603  00AE               	movwf	??_representLed+2
 13859  0604  0CAE               	rrf	??_representLed+2,f
 13860  0605  0CAE               	rrf	??_representLed+2,f
 13861  0606  0816               	movf	22,w	;volatile
 13862  0607  062E               	xorwf	??_representLed+2,w
 13863  0608  397F               	andlw	-129
 13864  0609  062E               	xorwf	??_representLed+2,w
 13865  060A  0096               	movwf	22	;volatile
 13866  060B                     l1460:	
 13867  060B  0008               	return
 13868  060C                     __end_of_representLed:	
 13869                           
 13870                           	psect	text22
 13871  0891                     __ptext22:	
 13872 ;; *************** function _recLumThresh *****************
 13873 ;; Defined at:
 13874 ;;		line 491 in file "main.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  _value          1   12[BANK0 ] unsigned char 
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      void 
 13881 ;; Registers used:
 13882 ;;		wreg
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13888 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;Total ram usage:        2 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    6
 13895 ;; This function calls:
 13896 ;;		Nothing
 13897 ;; This function is called by:
 13898 ;;		_getSubfieldInfo
 13899 ;;		_increment_subfield
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           
 13904                           ;psect for function _recLumThresh
 13905  0891                     _recLumThresh:	
 13906  0891                     l6513:	
 13907                           ;incstack = 0
 13908                           ; Regs used in _recLumThresh: [wreg]
 13909                           
 13910                           
 13911                           ;main.c: 492:     lum_thresh = _value;
 13912  0891  0020               	movlb	0	; select bank0
 13913  0892  082C               	movf	recLumThresh@_value,w
 13914  0893  00AD               	movwf	??_recLumThresh
 13915  0894  082D               	movf	??_recLumThresh,w
 13916  0895  00E3               	movwf	_lum_thresh
 13917  0896                     l1334:	
 13918  0896  0008               	return
 13919  0897                     __end_of_recLumThresh:	
 13920                           
 13921                           	psect	text23
 13922  088B                     __ptext23:	
 13923 ;; *************** function _recAlarm *****************
 13924 ;; Defined at:
 13925 ;;		line 506 in file "main.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  _value          1   12[BANK0 ] unsigned char 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13939 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;Total ram usage:        2 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:    6
 13946 ;; This function calls:
 13947 ;;		Nothing
 13948 ;; This function is called by:
 13949 ;;		_getSubfieldInfo
 13950 ;;		_increment_subfield
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           
 13955                           ;psect for function _recAlarm
 13956  088B                     _recAlarm:	
 13957  088B                     l6521:	
 13958                           ;incstack = 0
 13959                           ; Regs used in _recAlarm: [wreg]
 13960                           
 13961                           
 13962                           ;main.c: 507:     alarm = _value;
 13963  088B  0020               	movlb	0	; select bank0
 13964  088C  082C               	movf	recAlarm@_value,w
 13965  088D  00AD               	movwf	??_recAlarm
 13966  088E  082D               	movf	??_recAlarm,w
 13967  088F  00D3               	movwf	_alarm	;volatile
 13968  0890                     l1342:	
 13969  0890  0008               	return
 13970  0891                     __end_of_recAlarm:	
 13971                           
 13972                           	psect	text24
 13973  0D02                     __ptext24:	
 13974 ;; *************** function _recMinutes *****************
 13975 ;; Defined at:
 13976 ;;		line 517 in file "main.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;  _value          1   12[BANK0 ] unsigned char 
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;		None
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      void 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2, status,0, pclath, cstack
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;Total ram usage:        4 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; Hardware stack levels required when called:    7
 13997 ;; This function calls:
 13998 ;;		___awdiv
 13999 ;;		___awmod
 14000 ;; This function is called by:
 14001 ;;		_getSubfieldInfo
 14002 ;;		_increment_subfield
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           
 14007                           ;psect for function _recMinutes
 14008  0D02                     _recMinutes:	
 14009  0D02                     l6523:	
 14010                           ;incstack = 0
 14011                           ; Regs used in _recMinutes: [wreg+status,2+status,0+pclath+cstack]
 14012                           
 14013                           
 14014                           ;main.c: 518:     if(mode_field_subfield[1] == 3){
 14015  0D02  3003               	movlw	3
 14016  0D03  0020               	movlb	0	; select bank0
 14017  0D04  0661               	xorwf	_mode_field_subfield+2,w
 14018  0D05  0462               	iorwf	_mode_field_subfield+3,w
 14019  0D06  1D03               	btfss	3,2
 14020  0D07  2D09               	goto	u3961
 14021  0D08  2D0A               	goto	u3960
 14022  0D09                     u3961:	
 14023  0D09  2D1F               	goto	l6527
 14024  0D0A                     u3960:	
 14025  0D0A                     l6525:	
 14026                           
 14027                           ;main.c: 520:         clkm = _value + (clkm % 10);
 14028  0D0A  300A               	movlw	10
 14029  0D0B  00A3               	movwf	___awmod@divisor
 14030  0D0C  3000               	movlw	0
 14031  0D0D  00A4               	movwf	___awmod@divisor+1
 14032  0D0E  085B               	movf	_clkm,w	;volatile
 14033  0D0F  00AD               	movwf	??_recMinutes
 14034  0D10  01AE               	clrf	??_recMinutes+1
 14035  0D11  082D               	movf	??_recMinutes,w
 14036  0D12  00A5               	movwf	___awmod@dividend
 14037  0D13  082E               	movf	??_recMinutes+1,w
 14038  0D14  00A6               	movwf	___awmod@dividend+1
 14039  0D15  318F  2755  318D   	fcall	___awmod
 14040  0D18  0020               	movlb	0	; select bank0
 14041  0D19  0823               	movf	?___awmod,w
 14042  0D1A  072C               	addwf	recMinutes@_value,w
 14043  0D1B  00AF               	movwf	??_recMinutes+2
 14044  0D1C  082F               	movf	??_recMinutes+2,w
 14045  0D1D  00DB               	movwf	_clkm	;volatile
 14046                           
 14047                           ;main.c: 522:     }else{
 14048  0D1E  2D33               	goto	l1347
 14049  0D1F                     l6527:	
 14050                           
 14051                           ;main.c: 523:         clkm = (clkm / 10) + _value;
 14052  0D1F  300A               	movlw	10
 14053  0D20  00A3               	movwf	___awdiv@divisor
 14054  0D21  3000               	movlw	0
 14055  0D22  00A4               	movwf	___awdiv@divisor+1
 14056  0D23  085B               	movf	_clkm,w	;volatile
 14057  0D24  00AD               	movwf	??_recMinutes
 14058  0D25  01AE               	clrf	??_recMinutes+1
 14059  0D26  082D               	movf	??_recMinutes,w
 14060  0D27  00A5               	movwf	___awdiv@dividend
 14061  0D28  082E               	movf	??_recMinutes+1,w
 14062  0D29  00A6               	movwf	___awdiv@dividend+1
 14063  0D2A  3186  260C  318D   	fcall	___awdiv
 14064  0D2D  0020               	movlb	0	; select bank0
 14065  0D2E  0823               	movf	?___awdiv,w
 14066  0D2F  072C               	addwf	recMinutes@_value,w
 14067  0D30  00AF               	movwf	??_recMinutes+2
 14068  0D31  082F               	movf	??_recMinutes+2,w
 14069  0D32  00DB               	movwf	_clkm	;volatile
 14070  0D33                     l1347:	
 14071  0D33  0008               	return
 14072  0D34                     __end_of_recMinutes:	
 14073                           
 14074                           	psect	text25
 14075  0CD1                     __ptext25:	
 14076 ;; *************** function _recHour *****************
 14077 ;; Defined at:
 14078 ;;		line 534 in file "main.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;  _value          1   12[BANK0 ] unsigned char 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      void 
 14085 ;; Registers used:
 14086 ;;		wreg, status,2, status,0, pclath, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14092 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;Total ram usage:        4 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:    7
 14099 ;; This function calls:
 14100 ;;		___awdiv
 14101 ;;		___awmod
 14102 ;; This function is called by:
 14103 ;;		_getSubfieldInfo
 14104 ;;		_increment_subfield
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _recHour
 14110  0CD1                     _recHour:	
 14111  0CD1                     l6529:	
 14112                           ;incstack = 0
 14113                           ; Regs used in _recHour: [wreg+status,2+status,0+pclath+cstack]
 14114                           
 14115                           
 14116                           ;main.c: 535:     if(mode_field_subfield[1] == 1){
 14117  0CD1  0020               	movlb	0	; select bank0
 14118  0CD2  0361               	decf	_mode_field_subfield+2,w
 14119  0CD3  0462               	iorwf	_mode_field_subfield+3,w
 14120  0CD4  1D03               	btfss	3,2
 14121  0CD5  2CD7               	goto	u3971
 14122  0CD6  2CD8               	goto	u3970
 14123  0CD7                     u3971:	
 14124  0CD7  2CED               	goto	l6533
 14125  0CD8                     u3970:	
 14126  0CD8                     l6531:	
 14127                           
 14128                           ;main.c: 537:         clkh = _value + (clkh % 10);
 14129  0CD8  300A               	movlw	10
 14130  0CD9  00A3               	movwf	___awmod@divisor
 14131  0CDA  3000               	movlw	0
 14132  0CDB  00A4               	movwf	___awmod@divisor+1
 14133  0CDC  085C               	movf	_clkh,w	;volatile
 14134  0CDD  00AD               	movwf	??_recHour
 14135  0CDE  01AE               	clrf	??_recHour+1
 14136  0CDF  082D               	movf	??_recHour,w
 14137  0CE0  00A5               	movwf	___awmod@dividend
 14138  0CE1  082E               	movf	??_recHour+1,w
 14139  0CE2  00A6               	movwf	___awmod@dividend+1
 14140  0CE3  318F  2755  318C   	fcall	___awmod
 14141  0CE6  0020               	movlb	0	; select bank0
 14142  0CE7  0823               	movf	?___awmod,w
 14143  0CE8  072C               	addwf	recHour@_value,w
 14144  0CE9  00AF               	movwf	??_recHour+2
 14145  0CEA  082F               	movf	??_recHour+2,w
 14146  0CEB  00DC               	movwf	_clkh	;volatile
 14147                           
 14148                           ;main.c: 539:     }else{
 14149  0CEC  2D01               	goto	l1352
 14150  0CED                     l6533:	
 14151                           
 14152                           ;main.c: 540:         clkh = (clkh / 10) + _value;
 14153  0CED  300A               	movlw	10
 14154  0CEE  00A3               	movwf	___awdiv@divisor
 14155  0CEF  3000               	movlw	0
 14156  0CF0  00A4               	movwf	___awdiv@divisor+1
 14157  0CF1  085C               	movf	_clkh,w	;volatile
 14158  0CF2  00AD               	movwf	??_recHour
 14159  0CF3  01AE               	clrf	??_recHour+1
 14160  0CF4  082D               	movf	??_recHour,w
 14161  0CF5  00A5               	movwf	___awdiv@dividend
 14162  0CF6  082E               	movf	??_recHour+1,w
 14163  0CF7  00A6               	movwf	___awdiv@dividend+1
 14164  0CF8  3186  260C  318C   	fcall	___awdiv
 14165  0CFB  0020               	movlb	0	; select bank0
 14166  0CFC  0823               	movf	?___awdiv,w
 14167  0CFD  072C               	addwf	recHour@_value,w
 14168  0CFE  00AF               	movwf	??_recHour+2
 14169  0CFF  082F               	movf	??_recHour+2,w
 14170  0D00  00DC               	movwf	_clkh	;volatile
 14171  0D01                     l1352:	
 14172  0D01  0008               	return
 14173  0D02                     __end_of_recHour:	
 14174                           
 14175                           	psect	text26
 14176  0CA0                     __ptext26:	
 14177 ;; *************** function _recTempThresh *****************
 14178 ;; Defined at:
 14179 ;;		line 495 in file "main.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;  _value          1   12[BANK0 ] unsigned char 
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      void 
 14186 ;; Registers used:
 14187 ;;		wreg, status,2, status,0, pclath, cstack
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14193 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;Total ram usage:        4 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    7
 14200 ;; This function calls:
 14201 ;;		___awdiv
 14202 ;;		___awmod
 14203 ;; This function is called by:
 14204 ;;		_getSubfieldInfo
 14205 ;;		_increment_subfield
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           
 14210                           ;psect for function _recTempThresh
 14211  0CA0                     _recTempThresh:	
 14212  0CA0                     l6515:	
 14213                           ;incstack = 0
 14214                           ; Regs used in _recTempThresh: [wreg+status,2+status,0+pclath+cstack]
 14215                           
 14216                           
 14217                           ;main.c: 496:     if(mode_field_subfield[1] == 1){
 14218  0CA0  0020               	movlb	0	; select bank0
 14219  0CA1  0361               	decf	_mode_field_subfield+2,w
 14220  0CA2  0462               	iorwf	_mode_field_subfield+3,w
 14221  0CA3  1D03               	btfss	3,2
 14222  0CA4  2CA6               	goto	u3951
 14223  0CA5  2CA7               	goto	u3950
 14224  0CA6                     u3951:	
 14225  0CA6  2CBC               	goto	l6519
 14226  0CA7                     u3950:	
 14227  0CA7                     l6517:	
 14228                           
 14229                           ;main.c: 498:         temp_thresh = _value + (temp_thresh % 10);
 14230  0CA7  300A               	movlw	10
 14231  0CA8  00A3               	movwf	___awmod@divisor
 14232  0CA9  3000               	movlw	0
 14233  0CAA  00A4               	movwf	___awmod@divisor+1
 14234  0CAB  0864               	movf	_temp_thresh,w
 14235  0CAC  00AD               	movwf	??_recTempThresh
 14236  0CAD  01AE               	clrf	??_recTempThresh+1
 14237  0CAE  082D               	movf	??_recTempThresh,w
 14238  0CAF  00A5               	movwf	___awmod@dividend
 14239  0CB0  082E               	movf	??_recTempThresh+1,w
 14240  0CB1  00A6               	movwf	___awmod@dividend+1
 14241  0CB2  318F  2755  318C   	fcall	___awmod
 14242  0CB5  0020               	movlb	0	; select bank0
 14243  0CB6  0823               	movf	?___awmod,w
 14244  0CB7  072C               	addwf	recTempThresh@_value,w
 14245  0CB8  00AF               	movwf	??_recTempThresh+2
 14246  0CB9  082F               	movf	??_recTempThresh+2,w
 14247  0CBA  00E4               	movwf	_temp_thresh
 14248                           
 14249                           ;main.c: 500:     }else{
 14250  0CBB  2CD0               	goto	l1339
 14251  0CBC                     l6519:	
 14252                           
 14253                           ;main.c: 501:         temp_thresh = (temp_thresh / 10) + _value;
 14254  0CBC  300A               	movlw	10
 14255  0CBD  00A3               	movwf	___awdiv@divisor
 14256  0CBE  3000               	movlw	0
 14257  0CBF  00A4               	movwf	___awdiv@divisor+1
 14258  0CC0  0864               	movf	_temp_thresh,w
 14259  0CC1  00AD               	movwf	??_recTempThresh
 14260  0CC2  01AE               	clrf	??_recTempThresh+1
 14261  0CC3  082D               	movf	??_recTempThresh,w
 14262  0CC4  00A5               	movwf	___awdiv@dividend
 14263  0CC5  082E               	movf	??_recTempThresh+1,w
 14264  0CC6  00A6               	movwf	___awdiv@dividend+1
 14265  0CC7  3186  260C  318C   	fcall	___awdiv
 14266  0CCA  0020               	movlb	0	; select bank0
 14267  0CCB  0823               	movf	?___awdiv,w
 14268  0CCC  072C               	addwf	recTempThresh@_value,w
 14269  0CCD  00AF               	movwf	??_recTempThresh+2
 14270  0CCE  082F               	movf	??_recTempThresh+2,w
 14271  0CCF  00E4               	movwf	_temp_thresh
 14272  0CD0                     l1339:	
 14273  0CD0  0008               	return
 14274  0CD1                     __end_of_recTempThresh:	
 14275                           
 14276                           	psect	text27
 14277  0F55                     __ptext27:	
 14278 ;; *************** function ___awmod *****************
 14279 ;; Defined at:
 14280 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  divisor         2    3[BANK0 ] int 
 14283 ;;  dividend        2    5[BANK0 ] int 
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;  sign            1    9[BANK0 ] unsigned char 
 14286 ;;  counter         1    8[BANK0 ] unsigned char 
 14287 ;; Return value:  Size  Location     Type
 14288 ;;                  2    3[BANK0 ] int 
 14289 ;; Registers used:
 14290 ;;		wreg, status,2, status,0
 14291 ;; Tracked objects:
 14292 ;;		On entry : 0/0
 14293 ;;		On exit  : 0/0
 14294 ;;		Unchanged: 0/0
 14295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14296 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14299 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14300 ;;Total ram usage:        7 bytes
 14301 ;; Hardware stack levels used:    1
 14302 ;; Hardware stack levels required when called:    6
 14303 ;; This function calls:
 14304 ;;		Nothing
 14305 ;; This function is called by:
 14306 ;;		_recTempThresh
 14307 ;;		_recMinutes
 14308 ;;		_recHour
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           
 14313                           ;psect for function ___awmod
 14314  0F55                     ___awmod:	
 14315  0F55                     l6411:	
 14316                           ;incstack = 0
 14317                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14318                           
 14319  0F55  0020               	movlb	0	; select bank0
 14320  0F56  01A9               	clrf	___awmod@sign
 14321  0F57                     l6413:	
 14322  0F57  1FA6               	btfss	___awmod@dividend+1,7
 14323  0F58  2F5A               	goto	u3791
 14324  0F59  2F5B               	goto	u3790
 14325  0F5A                     u3791:	
 14326  0F5A  2F62               	goto	l6419
 14327  0F5B                     u3790:	
 14328  0F5B                     l6415:	
 14329  0F5B  09A5               	comf	___awmod@dividend,f
 14330  0F5C  09A6               	comf	___awmod@dividend+1,f
 14331  0F5D  0AA5               	incf	___awmod@dividend,f
 14332  0F5E  1903               	skipnz
 14333  0F5F  0AA6               	incf	___awmod@dividend+1,f
 14334  0F60                     l6417:	
 14335  0F60  01A9               	clrf	___awmod@sign
 14336  0F61  0AA9               	incf	___awmod@sign,f
 14337  0F62                     l6419:	
 14338  0F62  1FA4               	btfss	___awmod@divisor+1,7
 14339  0F63  2F65               	goto	u3801
 14340  0F64  2F66               	goto	u3800
 14341  0F65                     u3801:	
 14342  0F65  2F6B               	goto	l6423
 14343  0F66                     u3800:	
 14344  0F66                     l6421:	
 14345  0F66  09A3               	comf	___awmod@divisor,f
 14346  0F67  09A4               	comf	___awmod@divisor+1,f
 14347  0F68  0AA3               	incf	___awmod@divisor,f
 14348  0F69  1903               	skipnz
 14349  0F6A  0AA4               	incf	___awmod@divisor+1,f
 14350  0F6B                     l6423:	
 14351  0F6B  0823               	movf	___awmod@divisor,w
 14352  0F6C  0424               	iorwf	___awmod@divisor+1,w
 14353  0F6D  1903               	btfsc	3,2
 14354  0F6E  2F70               	goto	u3811
 14355  0F6F  2F71               	goto	u3810
 14356  0F70                     u3811:	
 14357  0F70  2F9A               	goto	l6441
 14358  0F71                     u3810:	
 14359  0F71                     l6425:	
 14360  0F71  01A8               	clrf	___awmod@counter
 14361  0F72  0AA8               	incf	___awmod@counter,f
 14362  0F73  2F7D               	goto	l6431
 14363  0F74                     l6427:	
 14364  0F74  3001               	movlw	1
 14365  0F75                     u3825:	
 14366  0F75  35A3               	lslf	___awmod@divisor,f
 14367  0F76  0DA4               	rlf	___awmod@divisor+1,f
 14368  0F77  0B89               	decfsz	9,f
 14369  0F78  2F75               	goto	u3825
 14370  0F79                     l6429:	
 14371  0F79  3001               	movlw	1
 14372  0F7A  00A7               	movwf	??___awmod
 14373  0F7B  0827               	movf	??___awmod,w
 14374  0F7C  07A8               	addwf	___awmod@counter,f
 14375  0F7D                     l6431:	
 14376  0F7D  1FA4               	btfss	___awmod@divisor+1,7
 14377  0F7E  2F80               	goto	u3831
 14378  0F7F  2F81               	goto	u3830
 14379  0F80                     u3831:	
 14380  0F80  2F74               	goto	l6427
 14381  0F81                     u3830:	
 14382  0F81                     l6433:	
 14383  0F81  0824               	movf	___awmod@divisor+1,w
 14384  0F82  0226               	subwf	___awmod@dividend+1,w
 14385  0F83  1D03               	skipz
 14386  0F84  2F87               	goto	u3845
 14387  0F85  0823               	movf	___awmod@divisor,w
 14388  0F86  0225               	subwf	___awmod@dividend,w
 14389  0F87                     u3845:	
 14390  0F87  1C03               	skipc
 14391  0F88  2F8A               	goto	u3841
 14392  0F89  2F8B               	goto	u3840
 14393  0F8A                     u3841:	
 14394  0F8A  2F8F               	goto	l6437
 14395  0F8B                     u3840:	
 14396  0F8B                     l6435:	
 14397  0F8B  0823               	movf	___awmod@divisor,w
 14398  0F8C  02A5               	subwf	___awmod@dividend,f
 14399  0F8D  0824               	movf	___awmod@divisor+1,w
 14400  0F8E  3BA6               	subwfb	___awmod@dividend+1,f
 14401  0F8F                     l6437:	
 14402  0F8F  3001               	movlw	1
 14403  0F90                     u3855:	
 14404  0F90  36A4               	lsrf	___awmod@divisor+1,f
 14405  0F91  0CA3               	rrf	___awmod@divisor,f
 14406  0F92  0B89               	decfsz	9,f
 14407  0F93  2F90               	goto	u3855
 14408  0F94                     l6439:	
 14409  0F94  3001               	movlw	1
 14410  0F95  02A8               	subwf	___awmod@counter,f
 14411  0F96  1D03               	btfss	3,2
 14412  0F97  2F99               	goto	u3861
 14413  0F98  2F9A               	goto	u3860
 14414  0F99                     u3861:	
 14415  0F99  2F81               	goto	l6433
 14416  0F9A                     u3860:	
 14417  0F9A                     l6441:	
 14418  0F9A  0829               	movf	___awmod@sign,w
 14419  0F9B  1903               	btfsc	3,2
 14420  0F9C  2F9E               	goto	u3871
 14421  0F9D  2F9F               	goto	u3870
 14422  0F9E                     u3871:	
 14423  0F9E  2FA4               	goto	l6445
 14424  0F9F                     u3870:	
 14425  0F9F                     l6443:	
 14426  0F9F  09A5               	comf	___awmod@dividend,f
 14427  0FA0  09A6               	comf	___awmod@dividend+1,f
 14428  0FA1  0AA5               	incf	___awmod@dividend,f
 14429  0FA2  1903               	skipnz
 14430  0FA3  0AA6               	incf	___awmod@dividend+1,f
 14431  0FA4                     l6445:	
 14432  0FA4  0826               	movf	___awmod@dividend+1,w
 14433  0FA5  00A4               	movwf	?___awmod+1
 14434  0FA6  0825               	movf	___awmod@dividend,w
 14435  0FA7  00A3               	movwf	?___awmod
 14436  0FA8                     l2029:	
 14437  0FA8  0008               	return
 14438  0FA9                     __end_of___awmod:	
 14439                           
 14440                           	psect	text28
 14441  060C                     __ptext28:	
 14442 ;; *************** function ___awdiv *****************
 14443 ;; Defined at:
 14444 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  divisor         2    3[BANK0 ] int 
 14447 ;;  dividend        2    5[BANK0 ] int 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;  quotient        2   10[BANK0 ] int 
 14450 ;;  sign            1    9[BANK0 ] unsigned char 
 14451 ;;  counter         1    8[BANK0 ] unsigned char 
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  2    3[BANK0 ] int 
 14454 ;; Registers used:
 14455 ;;		wreg, status,2, status,0
 14456 ;; Tracked objects:
 14457 ;;		On entry : 0/0
 14458 ;;		On exit  : 0/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;Total ram usage:        9 bytes
 14466 ;; Hardware stack levels used:    1
 14467 ;; Hardware stack levels required when called:    6
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_recTempThresh
 14472 ;;		_recMinutes
 14473 ;;		_recHour
 14474 ;;		_limitTempThreshUnits
 14475 ;;		_limitHoursUnits
 14476 ;;		_representLed
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           
 14481                           ;psect for function ___awdiv
 14482  060C                     ___awdiv:	
 14483  060C                     l6367:	
 14484                           ;incstack = 0
 14485                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14486                           
 14487  060C  0020               	movlb	0	; select bank0
 14488  060D  01A9               	clrf	___awdiv@sign
 14489  060E                     l6369:	
 14490  060E  1FA4               	btfss	___awdiv@divisor+1,7
 14491  060F  2E11               	goto	u3691
 14492  0610  2E12               	goto	u3690
 14493  0611                     u3691:	
 14494  0611  2E19               	goto	l6375
 14495  0612                     u3690:	
 14496  0612                     l6371:	
 14497  0612  09A3               	comf	___awdiv@divisor,f
 14498  0613  09A4               	comf	___awdiv@divisor+1,f
 14499  0614  0AA3               	incf	___awdiv@divisor,f
 14500  0615  1903               	skipnz
 14501  0616  0AA4               	incf	___awdiv@divisor+1,f
 14502  0617                     l6373:	
 14503  0617  01A9               	clrf	___awdiv@sign
 14504  0618  0AA9               	incf	___awdiv@sign,f
 14505  0619                     l6375:	
 14506  0619  1FA6               	btfss	___awdiv@dividend+1,7
 14507  061A  2E1C               	goto	u3701
 14508  061B  2E1D               	goto	u3700
 14509  061C                     u3701:	
 14510  061C  2E26               	goto	l6381
 14511  061D                     u3700:	
 14512  061D                     l6377:	
 14513  061D  09A5               	comf	___awdiv@dividend,f
 14514  061E  09A6               	comf	___awdiv@dividend+1,f
 14515  061F  0AA5               	incf	___awdiv@dividend,f
 14516  0620  1903               	skipnz
 14517  0621  0AA6               	incf	___awdiv@dividend+1,f
 14518  0622                     l6379:	
 14519  0622  3001               	movlw	1
 14520  0623  00A7               	movwf	??___awdiv
 14521  0624  0827               	movf	??___awdiv,w
 14522  0625  06A9               	xorwf	___awdiv@sign,f
 14523  0626                     l6381:	
 14524  0626  01AA               	clrf	___awdiv@quotient
 14525  0627  01AB               	clrf	___awdiv@quotient+1
 14526  0628                     l6383:	
 14527  0628  0823               	movf	___awdiv@divisor,w
 14528  0629  0424               	iorwf	___awdiv@divisor+1,w
 14529  062A  1903               	btfsc	3,2
 14530  062B  2E2D               	goto	u3711
 14531  062C  2E2E               	goto	u3710
 14532  062D                     u3711:	
 14533  062D  2E5D               	goto	l6403
 14534  062E                     u3710:	
 14535  062E                     l6385:	
 14536  062E  01A8               	clrf	___awdiv@counter
 14537  062F  0AA8               	incf	___awdiv@counter,f
 14538  0630  2E3A               	goto	l6391
 14539  0631                     l6387:	
 14540  0631  3001               	movlw	1
 14541  0632                     u3725:	
 14542  0632  35A3               	lslf	___awdiv@divisor,f
 14543  0633  0DA4               	rlf	___awdiv@divisor+1,f
 14544  0634  0B89               	decfsz	9,f
 14545  0635  2E32               	goto	u3725
 14546  0636                     l6389:	
 14547  0636  3001               	movlw	1
 14548  0637  00A7               	movwf	??___awdiv
 14549  0638  0827               	movf	??___awdiv,w
 14550  0639  07A8               	addwf	___awdiv@counter,f
 14551  063A                     l6391:	
 14552  063A  1FA4               	btfss	___awdiv@divisor+1,7
 14553  063B  2E3D               	goto	u3731
 14554  063C  2E3E               	goto	u3730
 14555  063D                     u3731:	
 14556  063D  2E31               	goto	l6387
 14557  063E                     u3730:	
 14558  063E                     l6393:	
 14559  063E  3001               	movlw	1
 14560  063F                     u3745:	
 14561  063F  35AA               	lslf	___awdiv@quotient,f
 14562  0640  0DAB               	rlf	___awdiv@quotient+1,f
 14563  0641  0B89               	decfsz	9,f
 14564  0642  2E3F               	goto	u3745
 14565  0643  0824               	movf	___awdiv@divisor+1,w
 14566  0644  0226               	subwf	___awdiv@dividend+1,w
 14567  0645  1D03               	skipz
 14568  0646  2E49               	goto	u3755
 14569  0647  0823               	movf	___awdiv@divisor,w
 14570  0648  0225               	subwf	___awdiv@dividend,w
 14571  0649                     u3755:	
 14572  0649  1C03               	skipc
 14573  064A  2E4C               	goto	u3751
 14574  064B  2E4D               	goto	u3750
 14575  064C                     u3751:	
 14576  064C  2E52               	goto	l6399
 14577  064D                     u3750:	
 14578  064D                     l6395:	
 14579  064D  0823               	movf	___awdiv@divisor,w
 14580  064E  02A5               	subwf	___awdiv@dividend,f
 14581  064F  0824               	movf	___awdiv@divisor+1,w
 14582  0650  3BA6               	subwfb	___awdiv@dividend+1,f
 14583  0651                     l6397:	
 14584  0651  142A               	bsf	___awdiv@quotient,0
 14585  0652                     l6399:	
 14586  0652  3001               	movlw	1
 14587  0653                     u3765:	
 14588  0653  36A4               	lsrf	___awdiv@divisor+1,f
 14589  0654  0CA3               	rrf	___awdiv@divisor,f
 14590  0655  0B89               	decfsz	9,f
 14591  0656  2E53               	goto	u3765
 14592  0657                     l6401:	
 14593  0657  3001               	movlw	1
 14594  0658  02A8               	subwf	___awdiv@counter,f
 14595  0659  1D03               	btfss	3,2
 14596  065A  2E5C               	goto	u3771
 14597  065B  2E5D               	goto	u3770
 14598  065C                     u3771:	
 14599  065C  2E3E               	goto	l6393
 14600  065D                     u3770:	
 14601  065D                     l6403:	
 14602  065D  0829               	movf	___awdiv@sign,w
 14603  065E  1903               	btfsc	3,2
 14604  065F  2E61               	goto	u3781
 14605  0660  2E62               	goto	u3780
 14606  0661                     u3781:	
 14607  0661  2E67               	goto	l6407
 14608  0662                     u3780:	
 14609  0662                     l6405:	
 14610  0662  09AA               	comf	___awdiv@quotient,f
 14611  0663  09AB               	comf	___awdiv@quotient+1,f
 14612  0664  0AAA               	incf	___awdiv@quotient,f
 14613  0665  1903               	skipnz
 14614  0666  0AAB               	incf	___awdiv@quotient+1,f
 14615  0667                     l6407:	
 14616  0667  082B               	movf	___awdiv@quotient+1,w
 14617  0668  00A4               	movwf	?___awdiv+1
 14618  0669  082A               	movf	___awdiv@quotient,w
 14619  066A  00A3               	movwf	?___awdiv
 14620  066B                     l2016:	
 14621  066B  0008               	return
 14622  066C                     __end_of___awdiv:	
 14623                           
 14624                           	psect	text29
 14625  0EB4                     __ptext29:	
 14626 ;; *************** function _checkDebounceSW2 *****************
 14627 ;; Defined at:
 14628 ;;		line 786 in file "main.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;		None
 14631 ;; Auto vars:     Size  Location     Type
 14632 ;;		None
 14633 ;; Return value:  Size  Location     Type
 14634 ;;                  1    wreg      unsigned char 
 14635 ;; Registers used:
 14636 ;;		wreg, status,2, status,0
 14637 ;; Tracked objects:
 14638 ;;		On entry : 0/0
 14639 ;;		On exit  : 0/0
 14640 ;;		Unchanged: 0/0
 14641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;Total ram usage:        7 bytes
 14647 ;; Hardware stack levels used:    1
 14648 ;; Hardware stack levels required when called:    6
 14649 ;; This function calls:
 14650 ;;		Nothing
 14651 ;; This function is called by:
 14652 ;;		_config_routine
 14653 ;;		_selectSubfield
 14654 ;;		_increment_subfield
 14655 ;; This function uses a non-reentrant model
 14656 ;;
 14657                           
 14658                           
 14659                           ;psect for function _checkDebounceSW2
 14660  0EB4                     _checkDebounceSW2:	
 14661  0EB4                     l6493:	
 14662                           ;incstack = 0
 14663                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 14664                           
 14665                           
 14666                           ;main.c: 789:     if(clkms - last_ms2 < 0){
 14667  0EB4  087D               	movf	_clkms,w	;volatile
 14668  0EB5  0020               	movlb	0	; select bank0
 14669  0EB6  00A3               	movwf	??_checkDebounceSW2
 14670  0EB7  01A4               	clrf	??_checkDebounceSW2+1
 14671  0EB8  0824               	movf	??_checkDebounceSW2+1,w
 14672  0EB9  00A6               	movwf	??_checkDebounceSW2+3
 14673  0EBA  0858               	movf	_last_ms2,w
 14674  0EBB  0223               	subwf	??_checkDebounceSW2,w
 14675  0EBC  00A5               	movwf	??_checkDebounceSW2+2
 14676  0EBD  1C03               	skipc
 14677  0EBE  03A6               	decf	??_checkDebounceSW2+3,f
 14678  0EBF  1FA6               	btfss	??_checkDebounceSW2+3,7
 14679  0EC0  2EC2               	goto	u3921
 14680  0EC1  2EC3               	goto	u3920
 14681  0EC2                     u3921:	
 14682  0EC2  2EE7               	goto	l6501
 14683  0EC3                     u3920:	
 14684  0EC3                     l6495:	
 14685                           
 14686                           ;main.c: 791:         if ((200 - last_ms2)+ clkms > 2 ){
 14687  0EC3  087D               	movf	_clkms,w	;volatile
 14688  0EC4  00A3               	movwf	??_checkDebounceSW2
 14689  0EC5  01A4               	clrf	??_checkDebounceSW2+1
 14690  0EC6  0824               	movf	??_checkDebounceSW2+1,w
 14691  0EC7  00A6               	movwf	??_checkDebounceSW2+3
 14692  0EC8  0858               	movf	_last_ms2,w
 14693  0EC9  0223               	subwf	??_checkDebounceSW2,w
 14694  0ECA  00A5               	movwf	??_checkDebounceSW2+2
 14695  0ECB  1C03               	skipc
 14696  0ECC  03A6               	decf	??_checkDebounceSW2+3,f
 14697  0ECD  0825               	movf	??_checkDebounceSW2+2,w
 14698  0ECE  3EC8               	addlw	200
 14699  0ECF  00A7               	movwf	??_checkDebounceSW2+4
 14700  0ED0  3000               	movlw	0
 14701  0ED1  3D26               	addwfc	??_checkDebounceSW2+3,w
 14702  0ED2  00A8               	movwf	??_checkDebounceSW2+5
 14703  0ED3  0828               	movf	??_checkDebounceSW2+5,w
 14704  0ED4  3A80               	xorlw	128
 14705  0ED5  00A9               	movwf	??_checkDebounceSW2+6
 14706  0ED6  3080               	movlw	128
 14707  0ED7  0229               	subwf	??_checkDebounceSW2+6,w
 14708  0ED8  1D03               	skipz
 14709  0ED9  2EDC               	goto	u3935
 14710  0EDA  3003               	movlw	3
 14711  0EDB  0227               	subwf	??_checkDebounceSW2+4,w
 14712  0EDC                     u3935:	
 14713  0EDC  1C03               	skipc
 14714  0EDD  2EDF               	goto	u3931
 14715  0EDE  2EE0               	goto	u3930
 14716  0EDF                     u3931:	
 14717  0EDF  2EE7               	goto	l6501
 14718  0EE0                     u3930:	
 14719  0EE0                     l6497:	
 14720                           
 14721                           ;main.c: 792:             last_ms2 = clkms;
 14722  0EE0  087D               	movf	_clkms,w	;volatile
 14723  0EE1  0020               	movlb	0	; select bank0
 14724  0EE2  00A3               	movwf	??_checkDebounceSW2
 14725  0EE3  0823               	movf	??_checkDebounceSW2,w
 14726  0EE4  00D8               	movwf	_last_ms2
 14727                           
 14728                           ;main.c: 793:             return 1;
 14729  0EE5  3001               	movlw	1
 14730  0EE6  2F00               	goto	l1438
 14731  0EE7                     l6501:	
 14732                           
 14733                           ;main.c: 797:     if(clkms - last_ms2 < 2){
 14734  0EE7  087D               	movf	_clkms,w	;volatile
 14735  0EE8  0020               	movlb	0	; select bank0
 14736  0EE9  00A3               	movwf	??_checkDebounceSW2
 14737  0EEA  01A4               	clrf	??_checkDebounceSW2+1
 14738  0EEB  0824               	movf	??_checkDebounceSW2+1,w
 14739  0EEC  00A6               	movwf	??_checkDebounceSW2+3
 14740  0EED  0858               	movf	_last_ms2,w
 14741  0EEE  0223               	subwf	??_checkDebounceSW2,w
 14742  0EEF  00A5               	movwf	??_checkDebounceSW2+2
 14743  0EF0  1C03               	skipc
 14744  0EF1  03A6               	decf	??_checkDebounceSW2+3,f
 14745  0EF2  0826               	movf	??_checkDebounceSW2+3,w
 14746  0EF3  3A80               	xorlw	128
 14747  0EF4  00A7               	movwf	??_checkDebounceSW2+4
 14748  0EF5  3080               	movlw	128
 14749  0EF6  0227               	subwf	??_checkDebounceSW2+4,w
 14750  0EF7  1D03               	skipz
 14751  0EF8  2EFB               	goto	u3945
 14752  0EF9  3002               	movlw	2
 14753  0EFA  0225               	subwf	??_checkDebounceSW2+2,w
 14754  0EFB                     u3945:	
 14755  0EFB  1803               	skipnc
 14756  0EFC  2EFE               	goto	u3941
 14757  0EFD  2EFF               	goto	u3940
 14758  0EFE                     u3941:	
 14759  0EFE  2EE0               	goto	l6497
 14760  0EFF                     u3940:	
 14761  0EFF                     l6503:	
 14762                           
 14763                           ;main.c: 798:         return 0;
 14764  0EFF  3000               	movlw	0
 14765  0F00                     l1438:	
 14766  0F00  0008               	return
 14767  0F01                     __end_of_checkDebounceSW2:	
 14768                           
 14769                           	psect	text30
 14770  0721                     __ptext30:	
 14771 ;; *************** function _checkDebounceSW1 *****************
 14772 ;; Defined at:
 14773 ;;		line 757 in file "main.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;		None
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;		None
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  1    wreg      unsigned char 
 14780 ;; Registers used:
 14781 ;;		wreg, status,2, status,0
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14791 ;;Total ram usage:        7 bytes
 14792 ;; Hardware stack levels used:    1
 14793 ;; Hardware stack levels required when called:    6
 14794 ;; This function calls:
 14795 ;;		Nothing
 14796 ;; This function is called by:
 14797 ;;		_config_routine
 14798 ;;		_selectSubfield
 14799 ;;		_increment_subfield
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           
 14804                           ;psect for function _checkDebounceSW1
 14805  0721                     _checkDebounceSW1:	
 14806  0721                     l6467:	
 14807                           ;incstack = 0
 14808                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 14809                           
 14810                           
 14811                           ;main.c: 758:     PIE4bits.TMR1IE = 0;
 14812  0721  002E               	movlb	14	; select bank14
 14813  0722  101A               	bcf	26,0	;volatile
 14814  0723                     l6469:	
 14815                           
 14816                           ;main.c: 760:     if(clkms - last_ms < 0){
 14817  0723  087D               	movf	_clkms,w	;volatile
 14818  0724  0020               	movlb	0	; select bank0
 14819  0725  00A3               	movwf	??_checkDebounceSW1
 14820  0726  01A4               	clrf	??_checkDebounceSW1+1
 14821  0727  0824               	movf	??_checkDebounceSW1+1,w
 14822  0728  00A6               	movwf	??_checkDebounceSW1+3
 14823  0729  0859               	movf	_last_ms,w
 14824  072A  0223               	subwf	??_checkDebounceSW1,w
 14825  072B  00A5               	movwf	??_checkDebounceSW1+2
 14826  072C  1C03               	skipc
 14827  072D  03A6               	decf	??_checkDebounceSW1+3,f
 14828  072E  1FA6               	btfss	??_checkDebounceSW1+3,7
 14829  072F  2F31               	goto	u3891
 14830  0730  2F32               	goto	u3890
 14831  0731                     u3891:	
 14832  0731  2F58               	goto	l6479
 14833  0732                     u3890:	
 14834  0732                     l6471:	
 14835                           
 14836                           ;main.c: 762:         if ((200 - last_ms)+ clkms > 2 ){
 14837  0732  087D               	movf	_clkms,w	;volatile
 14838  0733  00A3               	movwf	??_checkDebounceSW1
 14839  0734  01A4               	clrf	??_checkDebounceSW1+1
 14840  0735  0824               	movf	??_checkDebounceSW1+1,w
 14841  0736  00A6               	movwf	??_checkDebounceSW1+3
 14842  0737  0859               	movf	_last_ms,w
 14843  0738  0223               	subwf	??_checkDebounceSW1,w
 14844  0739  00A5               	movwf	??_checkDebounceSW1+2
 14845  073A  1C03               	skipc
 14846  073B  03A6               	decf	??_checkDebounceSW1+3,f
 14847  073C  0825               	movf	??_checkDebounceSW1+2,w
 14848  073D  3EC8               	addlw	200
 14849  073E  00A7               	movwf	??_checkDebounceSW1+4
 14850  073F  3000               	movlw	0
 14851  0740  3D26               	addwfc	??_checkDebounceSW1+3,w
 14852  0741  00A8               	movwf	??_checkDebounceSW1+5
 14853  0742  0828               	movf	??_checkDebounceSW1+5,w
 14854  0743  3A80               	xorlw	128
 14855  0744  00A9               	movwf	??_checkDebounceSW1+6
 14856  0745  3080               	movlw	128
 14857  0746  0229               	subwf	??_checkDebounceSW1+6,w
 14858  0747  1D03               	skipz
 14859  0748  2F4B               	goto	u3905
 14860  0749  3003               	movlw	3
 14861  074A  0227               	subwf	??_checkDebounceSW1+4,w
 14862  074B                     u3905:	
 14863  074B  1C03               	skipc
 14864  074C  2F4E               	goto	u3901
 14865  074D  2F4F               	goto	u3900
 14866  074E                     u3901:	
 14867  074E  2F58               	goto	l6479
 14868  074F                     u3900:	
 14869  074F                     l6473:	
 14870                           
 14871                           ;main.c: 763:             last_ms = clkms;
 14872  074F  087D               	movf	_clkms,w	;volatile
 14873  0750  0020               	movlb	0	; select bank0
 14874  0751  00A3               	movwf	??_checkDebounceSW1
 14875  0752  0823               	movf	??_checkDebounceSW1,w
 14876  0753  00D9               	movwf	_last_ms
 14877  0754                     l6475:	
 14878                           
 14879                           ;main.c: 764:             PIE4bits.TMR1IE = 1;
 14880  0754  002E               	movlb	14	; select bank14
 14881  0755  141A               	bsf	26,0	;volatile
 14882                           
 14883                           ;main.c: 765:             return 1;
 14884  0756  3001               	movlw	1
 14885  0757  2F7A               	goto	l1431
 14886  0758                     l6479:	
 14887                           
 14888                           ;main.c: 769:     if(clkms - last_ms < 2){
 14889  0758  087D               	movf	_clkms,w	;volatile
 14890  0759  0020               	movlb	0	; select bank0
 14891  075A  00A3               	movwf	??_checkDebounceSW1
 14892  075B  01A4               	clrf	??_checkDebounceSW1+1
 14893  075C  0824               	movf	??_checkDebounceSW1+1,w
 14894  075D  00A6               	movwf	??_checkDebounceSW1+3
 14895  075E  0859               	movf	_last_ms,w
 14896  075F  0223               	subwf	??_checkDebounceSW1,w
 14897  0760  00A5               	movwf	??_checkDebounceSW1+2
 14898  0761  1C03               	skipc
 14899  0762  03A6               	decf	??_checkDebounceSW1+3,f
 14900  0763  0826               	movf	??_checkDebounceSW1+3,w
 14901  0764  3A80               	xorlw	128
 14902  0765  00A7               	movwf	??_checkDebounceSW1+4
 14903  0766  3080               	movlw	128
 14904  0767  0227               	subwf	??_checkDebounceSW1+4,w
 14905  0768  1D03               	skipz
 14906  0769  2F6C               	goto	u3915
 14907  076A  3002               	movlw	2
 14908  076B  0225               	subwf	??_checkDebounceSW1+2,w
 14909  076C                     u3915:	
 14910  076C  1803               	skipnc
 14911  076D  2F6F               	goto	u3911
 14912  076E  2F70               	goto	u3910
 14913  076F                     u3911:	
 14914  076F  2F72               	goto	l6487
 14915  0770                     u3910:	
 14916  0770                     l6481:	
 14917                           
 14918                           ;main.c: 770:         return 0;
 14919  0770  3000               	movlw	0
 14920  0771  2F7A               	goto	l1431
 14921  0772                     l6487:	
 14922                           
 14923                           ;main.c: 773:         last_ms = clkms;
 14924  0772  087D               	movf	_clkms,w	;volatile
 14925  0773  0020               	movlb	0	; select bank0
 14926  0774  00A3               	movwf	??_checkDebounceSW1
 14927  0775  0823               	movf	??_checkDebounceSW1,w
 14928  0776  00D9               	movwf	_last_ms
 14929  0777                     l6489:	
 14930                           
 14931                           ;main.c: 774:         PIE4bits.TMR1IE = 1;
 14932  0777  002E               	movlb	14	; select bank14
 14933  0778  141A               	bsf	26,0	;volatile
 14934                           
 14935                           ;main.c: 775:         return 1;
 14936  0779  3001               	movlw	1
 14937  077A                     l1431:	
 14938  077A  0008               	return
 14939  077B                     __end_of_checkDebounceSW1:	
 14940                           
 14941                           	psect	text31
 14942  04AC                     __ptext31:	
 14943 ;; *************** function _getSubfieldInfo *****************
 14944 ;; Defined at:
 14945 ;;		line 436 in file "main.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;		None
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;		None
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  1    wreg      void 
 14952 ;; Registers used:
 14953 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14954 ;; Tracked objects:
 14955 ;;		On entry : 0/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;Total ram usage:        0 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:    6
 14966 ;; This function calls:
 14967 ;;		Nothing
 14968 ;; This function is called by:
 14969 ;;		_selectSubfield
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           
 14974                           ;psect for function _getSubfieldInfo
 14975  04AC                     _getSubfieldInfo:	
 14976  04AC                     l6595:	
 14977                           ;incstack = 0
 14978                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0]
 14979                           
 14980                           
 14981                           ;main.c: 437:     switch(mode_field_subfield[0]){
 14982  04AC  2D15               	goto	l6623
 14983  04AD                     l6597:	
 14984                           
 14985                           ;main.c: 441:                     subfield_info.limit = (unsigned char(*)(void))2;
 14986  04AD  3002               	movlw	2
 14987  04AE  00C3               	movwf	_subfield_info
 14988  04AF  3000               	movlw	0
 14989  04B0  00C4               	movwf	_subfield_info+1
 14990                           
 14991                           ;main.c: 442:                     subfield_info.reconstruct_subfield = &recHour;
 14992  04B1  30D1               	movlw	low _recHour
 14993  04B2  00C5               	movwf	low ((_subfield_info| 0+2))
 14994  04B3  300C               	movlw	high _recHour
 14995  04B4  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 14996                           
 14997                           ;main.c: 443:                 break;
 14998  04B5  2D29               	goto	l1331
 14999  04B6                     l6599:	
 15000                           
 15001                           ;main.c: 445:                     subfield_info.limit = &limitHoursUnits;
 15002  04B6  3000               	movlw	0
 15003  04B7  00C3               	movwf	_subfield_info
 15004  04B8  3000               	movlw	0
 15005  04B9  00C4               	movwf	_subfield_info+1
 15006                           
 15007                           ;main.c: 446:                     subfield_info.reconstruct_subfield = &recHour;
 15008  04BA  30D1               	movlw	low _recHour
 15009  04BB  00C5               	movwf	low ((_subfield_info| 0+2))
 15010  04BC  300C               	movlw	high _recHour
 15011  04BD  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15012                           
 15013                           ;main.c: 447:                 break;
 15014  04BE  2D29               	goto	l1331
 15015  04BF                     l6601:	
 15016                           
 15017                           ;main.c: 449:                     subfield_info.limit = (unsigned char(*)(void))5;
 15018  04BF  3005               	movlw	5
 15019  04C0  00C3               	movwf	_subfield_info
 15020  04C1  3000               	movlw	0
 15021  04C2  00C4               	movwf	_subfield_info+1
 15022                           
 15023                           ;main.c: 450:                     subfield_info.reconstruct_subfield = &recMinutes;
 15024  04C3  3002               	movlw	low _recMinutes
 15025  04C4  00C5               	movwf	low ((_subfield_info| 0+2))
 15026  04C5  300D               	movlw	high _recMinutes
 15027  04C6  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15028                           
 15029                           ;main.c: 451:                 break;
 15030  04C7  2D29               	goto	l1331
 15031  04C8                     l6603:	
 15032                           
 15033                           ;main.c: 453:                     subfield_info.limit = (unsigned char(*)(void))9;
 15034  04C8  3009               	movlw	9
 15035  04C9  00C3               	movwf	_subfield_info
 15036  04CA  3000               	movlw	0
 15037  04CB  00C4               	movwf	_subfield_info+1
 15038                           
 15039                           ;main.c: 454:                     subfield_info.reconstruct_subfield = &recMinutes;
 15040  04CC  3002               	movlw	low _recMinutes
 15041  04CD  00C5               	movwf	low ((_subfield_info| 0+2))
 15042  04CE  300D               	movlw	high _recMinutes
 15043  04CF  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15044                           
 15045                           ;main.c: 455:                 break;
 15046  04D0  2D29               	goto	l1331
 15047  04D1                     l6607:	
 15048                           
 15049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15050                           ; Switch size 1, requested type "simple"
 15051                           ; Number of cases is 1, Range of values is 0 to 0
 15052                           ; switch strategies available:
 15053                           ; Name         Instructions Cycles
 15054                           ; simple_byte            4     3 (average)
 15055                           ; direct_byte            8     6 (fixed)
 15056                           ; jumptable            260     6 (fixed)
 15057                           ;	Chosen strategy is simple_byte
 15058  04D1  0862               	movf	_mode_field_subfield+3,w
 15059  04D2  3A00               	xorlw	0	; case 0
 15060  04D3  1903               	skipnz
 15061  04D4  2CD6               	goto	l7719
 15062  04D5  2D29               	goto	l1331
 15063  04D6                     l7719:	
 15064                           
 15065                           ; Switch size 1, requested type "simple"
 15066                           ; Number of cases is 4, Range of values is 1 to 4
 15067                           ; switch strategies available:
 15068                           ; Name         Instructions Cycles
 15069                           ; simple_byte           13     7 (average)
 15070                           ; direct_byte           17     9 (fixed)
 15071                           ; jumptable            263     9 (fixed)
 15072                           ;	Chosen strategy is simple_byte
 15073  04D6  0861               	movf	_mode_field_subfield+2,w
 15074  04D7  3A01               	xorlw	1	; case 1
 15075  04D8  1903               	skipnz
 15076  04D9  2CAD               	goto	l6597
 15077  04DA  3A03               	xorlw	3	; case 2
 15078  04DB  1903               	skipnz
 15079  04DC  2CB6               	goto	l6599
 15080  04DD  3A01               	xorlw	1	; case 3
 15081  04DE  1903               	skipnz
 15082  04DF  2CBF               	goto	l6601
 15083  04E0  3A07               	xorlw	7	; case 4
 15084  04E1  1903               	skipnz
 15085  04E2  2CC8               	goto	l6603
 15086  04E3  2D29               	goto	l1331
 15087  04E4                     l6609:	
 15088                           
 15089                           ;main.c: 460:             subfield_info.limit = (unsigned char(*)(void))1;
 15090  04E4  3001               	movlw	1
 15091  04E5  00C3               	movwf	_subfield_info
 15092  04E6  3000               	movlw	0
 15093  04E7  00C4               	movwf	_subfield_info+1
 15094                           
 15095                           ;main.c: 461:             subfield_info.reconstruct_subfield = &recAlarm;
 15096  04E8  308B               	movlw	low _recAlarm
 15097  04E9  00C5               	movwf	low ((_subfield_info| 0+2))
 15098  04EA  3008               	movlw	high _recAlarm
 15099  04EB  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15100                           
 15101                           ;main.c: 462:         break;
 15102  04EC  2D29               	goto	l1331
 15103  04ED                     l6611:	
 15104                           
 15105                           ;main.c: 467:                     subfield_info.limit = (unsigned char(*)(void))5;
 15106  04ED  3005               	movlw	5
 15107  04EE  00C3               	movwf	_subfield_info
 15108  04EF  3000               	movlw	0
 15109  04F0  00C4               	movwf	_subfield_info+1
 15110                           
 15111                           ;main.c: 468:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15112  04F1  30A0               	movlw	low _recTempThresh
 15113  04F2  00C5               	movwf	low ((_subfield_info| 0+2))
 15114  04F3  300C               	movlw	high _recTempThresh
 15115  04F4  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15116                           
 15117                           ;main.c: 469:                 break;
 15118  04F5  2D29               	goto	l1331
 15119  04F6                     l6613:	
 15120                           
 15121                           ;main.c: 471:                     subfield_info.limit = &limitTempThreshUnits;
 15122  04F6  3000               	movlw	0
 15123  04F7  00C3               	movwf	_subfield_info
 15124  04F8  3000               	movlw	0
 15125  04F9  00C4               	movwf	_subfield_info+1
 15126                           
 15127                           ;main.c: 472:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15128  04FA  30A0               	movlw	low _recTempThresh
 15129  04FB  00C5               	movwf	low ((_subfield_info| 0+2))
 15130  04FC  300C               	movlw	high _recTempThresh
 15131  04FD  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15132                           
 15133                           ;main.c: 473:                 break;
 15134  04FE  2D29               	goto	l1331
 15135  04FF                     l6617:	
 15136                           
 15137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15138                           ; Switch size 1, requested type "simple"
 15139                           ; Number of cases is 1, Range of values is 0 to 0
 15140                           ; switch strategies available:
 15141                           ; Name         Instructions Cycles
 15142                           ; simple_byte            4     3 (average)
 15143                           ; direct_byte            8     6 (fixed)
 15144                           ; jumptable            260     6 (fixed)
 15145                           ;	Chosen strategy is simple_byte
 15146  04FF  0862               	movf	_mode_field_subfield+3,w
 15147  0500  3A00               	xorlw	0	; case 0
 15148  0501  1903               	skipnz
 15149  0502  2D04               	goto	l7721
 15150  0503  2D29               	goto	l1331
 15151  0504                     l7721:	
 15152                           
 15153                           ; Switch size 1, requested type "simple"
 15154                           ; Number of cases is 2, Range of values is 1 to 2
 15155                           ; switch strategies available:
 15156                           ; Name         Instructions Cycles
 15157                           ; simple_byte            7     4 (average)
 15158                           ; direct_byte           13     9 (fixed)
 15159                           ; jumptable            263     9 (fixed)
 15160                           ;	Chosen strategy is simple_byte
 15161  0504  0861               	movf	_mode_field_subfield+2,w
 15162  0505  3A01               	xorlw	1	; case 1
 15163  0506  1903               	skipnz
 15164  0507  2CED               	goto	l6611
 15165  0508  3A03               	xorlw	3	; case 2
 15166  0509  1903               	skipnz
 15167  050A  2CF6               	goto	l6613
 15168  050B  2D29               	goto	l1331
 15169  050C                     l6619:	
 15170                           
 15171                           ;main.c: 478:             subfield_info.limit = (unsigned char(*)(void))3;
 15172  050C  3003               	movlw	3
 15173  050D  00C3               	movwf	_subfield_info
 15174  050E  3000               	movlw	0
 15175  050F  00C4               	movwf	_subfield_info+1
 15176                           
 15177                           ;main.c: 479:             subfield_info.reconstruct_subfield = &recLumThresh;
 15178  0510  3091               	movlw	low _recLumThresh
 15179  0511  00C5               	movwf	low ((_subfield_info| 0+2))
 15180  0512  3008               	movlw	high _recLumThresh
 15181  0513  00C6               	movwf	(low ((_subfield_info| 0+2))+1)
 15182                           
 15183                           ;main.c: 480:         break;
 15184  0514  2D29               	goto	l1331
 15185  0515                     l6623:	
 15186                           
 15187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15188                           ; Switch size 1, requested type "simple"
 15189                           ; Number of cases is 1, Range of values is 0 to 0
 15190                           ; switch strategies available:
 15191                           ; Name         Instructions Cycles
 15192                           ; simple_byte            4     3 (average)
 15193                           ; direct_byte            8     6 (fixed)
 15194                           ; jumptable            260     6 (fixed)
 15195                           ;	Chosen strategy is simple_byte
 15196  0515  0020               	movlb	0	; select bank0
 15197  0516  0860               	movf	_mode_field_subfield+1,w
 15198  0517  3A00               	xorlw	0	; case 0
 15199  0518  1903               	skipnz
 15200  0519  2D1B               	goto	l7723
 15201  051A  2D29               	goto	l1331
 15202  051B                     l7723:	
 15203                           
 15204                           ; Switch size 1, requested type "simple"
 15205                           ; Number of cases is 4, Range of values is 1 to 4
 15206                           ; switch strategies available:
 15207                           ; Name         Instructions Cycles
 15208                           ; simple_byte           13     7 (average)
 15209                           ; direct_byte           17     9 (fixed)
 15210                           ; jumptable            263     9 (fixed)
 15211                           ;	Chosen strategy is simple_byte
 15212  051B  085F               	movf	_mode_field_subfield,w
 15213  051C  3A01               	xorlw	1	; case 1
 15214  051D  1903               	skipnz
 15215  051E  2CD1               	goto	l6607
 15216  051F  3A03               	xorlw	3	; case 2
 15217  0520  1903               	skipnz
 15218  0521  2CE4               	goto	l6609
 15219  0522  3A01               	xorlw	1	; case 3
 15220  0523  1903               	skipnz
 15221  0524  2CFF               	goto	l6617
 15222  0525  3A07               	xorlw	7	; case 4
 15223  0526  1903               	skipnz
 15224  0527  2D0C               	goto	l6619
 15225  0528  2D29               	goto	l1331
 15226  0529                     l1331:	
 15227  0529  0008               	return
 15228  052A                     __end_of_getSubfieldInfo:	
 15229                           
 15230                           	psect	text32
 15231  0BB5                     __ptext32:	
 15232 ;; *************** function _mode_select_LED *****************
 15233 ;; Defined at:
 15234 ;;		line 811 in file "main.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;		None
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;		None
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      void 
 15241 ;; Registers used:
 15242 ;;		wreg, status,2, status,0, pclath, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;Total ram usage:        1 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    7
 15255 ;; This function calls:
 15256 ;;		_PWM6_LoadDutyValue
 15257 ;; This function is called by:
 15258 ;;		_config_routine
 15259 ;; This function uses a non-reentrant model
 15260 ;;
 15261                           
 15262                           
 15263                           ;psect for function _mode_select_LED
 15264  0BB5                     _mode_select_LED:	
 15265  0BB5                     l6845:	
 15266                           ;incstack = 0
 15267                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 15268                           
 15269                           
 15270                           ;main.c: 814:     PWM6_LoadDutyValue(1023);
 15271  0BB5  30FF               	movlw	255
 15272  0BB6  0020               	movlb	0	; select bank0
 15273  0BB7  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 15274  0BB8  3003               	movlw	3
 15275  0BB9  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15276  0BBA  318A  22F2  318B   	fcall	_PWM6_LoadDutyValue
 15277  0BBD                     l6847:	
 15278  0BBD  0020               	movlb	0	; select bank0
 15279  0BBE  1616               	bsf	22,4	;volatile
 15280  0BBF                     l6849:	
 15281                           
 15282                           ;main.c: 816:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15283  0BBF  30A3               	movlw	163
 15284  0BC0  0020               	movlb	0	; select bank0
 15285  0BC1  00A7               	movwf	??_mode_select_LED
 15286  0BC2  3055               	movlw	85
 15287  0BC3                     u5067:	
 15288  0BC3  0B89               	decfsz	9,f
 15289  0BC4  2BC3               	goto	u5067
 15290  0BC5  0BA7               	decfsz	??_mode_select_LED,f
 15291  0BC6  2BC3               	goto	u5067
 15292  0BC7                     l6851:	
 15293  0BC7  0020               	movlb	0	; select bank0
 15294  0BC8  1696               	bsf	22,5	;volatile
 15295  0BC9                     l6853:	
 15296                           
 15297                           ;main.c: 818:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15298  0BC9  30A3               	movlw	163
 15299  0BCA  0020               	movlb	0	; select bank0
 15300  0BCB  00A7               	movwf	??_mode_select_LED
 15301  0BCC  3055               	movlw	85
 15302  0BCD                     u5077:	
 15303  0BCD  0B89               	decfsz	9,f
 15304  0BCE  2BCD               	goto	u5077
 15305  0BCF  0BA7               	decfsz	??_mode_select_LED,f
 15306  0BD0  2BCD               	goto	u5077
 15307  0BD1                     l6855:	
 15308  0BD1  0020               	movlb	0	; select bank0
 15309  0BD2  1216               	bcf	22,4	;volatile
 15310  0BD3                     l6857:	
 15311  0BD3  1296               	bcf	22,5	;volatile
 15312  0BD4                     l1451:	
 15313  0BD4  0008               	return
 15314  0BD5                     __end_of_mode_select_LED:	
 15315                           
 15316                           	psect	text33
 15317  066C                     __ptext33:	
 15318 ;; *************** function _all_LED *****************
 15319 ;; Defined at:
 15320 ;;		line 625 in file "main.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;		None
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg, status,2, status,0, pclath, cstack
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;Total ram usage:        1 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; Hardware stack levels required when called:    7
 15341 ;; This function calls:
 15342 ;;		_PWM6_LoadDutyValue
 15343 ;; This function is called by:
 15344 ;;		_config_routine
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           
 15349                           ;psect for function _all_LED
 15350  066C                     _all_LED:	
 15351  066C                     l1375:	
 15352                           ;incstack = 0
 15353                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 15354                           ;main.c: 627:     do { LATAbits.LATA7 = 1; } while(0);
 15355                           
 15356  066C  0020               	movlb	0	; select bank0
 15357  066D  1796               	bsf	22,7	;volatile
 15358  066E                     l6821:	
 15359                           
 15360                           ;main.c: 628:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15361  066E  3021               	movlw	33
 15362  066F  0020               	movlb	0	; select bank0
 15363  0670  00A7               	movwf	??_all_LED
 15364  0671  3076               	movlw	118
 15365  0672                     u5087:	
 15366  0672  0B89               	decfsz	9,f
 15367  0673  2E72               	goto	u5087
 15368  0674  0BA7               	decfsz	??_all_LED,f
 15369  0675  2E72               	goto	u5087
 15370  0676  0000               	nop
 15371  0677                     l6823:	
 15372  0677  0020               	movlb	0	; select bank0
 15373  0678  1396               	bcf	22,7	;volatile
 15374  0679                     l1378:	
 15375                           
 15376                           ;main.c: 630:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15377  0679  3021               	movlw	33
 15378  067A  0020               	movlb	0	; select bank0
 15379  067B  00A7               	movwf	??_all_LED
 15380  067C  3076               	movlw	118
 15381  067D                     u5097:	
 15382  067D  0B89               	decfsz	9,f
 15383  067E  2E7D               	goto	u5097
 15384  067F  0BA7               	decfsz	??_all_LED,f
 15385  0680  2E7D               	goto	u5097
 15386  0681  0000               	nop
 15387  0682                     l6825:	
 15388                           
 15389                           ;main.c: 632:     PWM6_LoadDutyValue(1023);
 15390  0682  30FF               	movlw	255
 15391  0683  0020               	movlb	0	; select bank0
 15392  0684  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 15393  0685  3003               	movlw	3
 15394  0686  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15395  0687  318A  22F2  3186   	fcall	_PWM6_LoadDutyValue
 15396  068A                     l6827:	
 15397                           
 15398                           ;main.c: 633:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15399  068A  3021               	movlw	33
 15400  068B  0020               	movlb	0	; select bank0
 15401  068C  00A7               	movwf	??_all_LED
 15402  068D  3076               	movlw	118
 15403  068E                     u5107:	
 15404  068E  0B89               	decfsz	9,f
 15405  068F  2E8E               	goto	u5107
 15406  0690  0BA7               	decfsz	??_all_LED,f
 15407  0691  2E8E               	goto	u5107
 15408  0692  0000               	nop
 15409                           
 15410                           ;main.c: 635:     PWM6_LoadDutyValue(0);
 15411  0693  3000               	movlw	0
 15412  0694  0020               	movlb	0	; select bank0
 15413  0695  00A3               	movwf	PWM6_LoadDutyValue@dutyValue
 15414  0696  00A4               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15415  0697  318A  22F2  3186   	fcall	_PWM6_LoadDutyValue
 15416  069A                     l6829:	
 15417                           
 15418                           ;main.c: 636:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15419  069A  3021               	movlw	33
 15420  069B  0020               	movlb	0	; select bank0
 15421  069C  00A7               	movwf	??_all_LED
 15422  069D  3076               	movlw	118
 15423  069E                     u5117:	
 15424  069E  0B89               	decfsz	9,f
 15425  069F  2E9E               	goto	u5117
 15426  06A0  0BA7               	decfsz	??_all_LED,f
 15427  06A1  2E9E               	goto	u5117
 15428  06A2  0000               	nop
 15429  06A3                     l6831:	
 15430  06A3  0020               	movlb	0	; select bank0
 15431  06A4  1696               	bsf	22,5	;volatile
 15432  06A5                     l6833:	
 15433                           
 15434                           ;main.c: 638:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15435  06A5  3021               	movlw	33
 15436  06A6  0020               	movlb	0	; select bank0
 15437  06A7  00A7               	movwf	??_all_LED
 15438  06A8  3076               	movlw	118
 15439  06A9                     u5127:	
 15440  06A9  0B89               	decfsz	9,f
 15441  06AA  2EA9               	goto	u5127
 15442  06AB  0BA7               	decfsz	??_all_LED,f
 15443  06AC  2EA9               	goto	u5127
 15444  06AD  0000               	nop
 15445  06AE                     l6835:	
 15446  06AE  0020               	movlb	0	; select bank0
 15447  06AF  1296               	bcf	22,5	;volatile
 15448  06B0                     l6837:	
 15449                           
 15450                           ;main.c: 640:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15451  06B0  3021               	movlw	33
 15452  06B1  0020               	movlb	0	; select bank0
 15453  06B2  00A7               	movwf	??_all_LED
 15454  06B3  3076               	movlw	118
 15455  06B4                     u5137:	
 15456  06B4  0B89               	decfsz	9,f
 15457  06B5  2EB4               	goto	u5137
 15458  06B6  0BA7               	decfsz	??_all_LED,f
 15459  06B7  2EB4               	goto	u5137
 15460  06B8  0000               	nop
 15461  06B9                     l6839:	
 15462  06B9  0020               	movlb	0	; select bank0
 15463  06BA  1616               	bsf	22,4	;volatile
 15464  06BB                     l6841:	
 15465                           
 15466                           ;main.c: 642:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15467  06BB  3021               	movlw	33
 15468  06BC  0020               	movlb	0	; select bank0
 15469  06BD  00A7               	movwf	??_all_LED
 15470  06BE  3076               	movlw	118
 15471  06BF                     u5147:	
 15472  06BF  0B89               	decfsz	9,f
 15473  06C0  2EBF               	goto	u5147
 15474  06C1  0BA7               	decfsz	??_all_LED,f
 15475  06C2  2EBF               	goto	u5147
 15476  06C3  0000               	nop
 15477  06C4                     l6843:	
 15478  06C4  0020               	movlb	0	; select bank0
 15479  06C5  1216               	bcf	22,4	;volatile
 15480  06C6                     l1387:	
 15481  06C6  0008               	return
 15482  06C7                     __end_of_all_LED:	
 15483                           
 15484                           	psect	text34
 15485  0AF2                     __ptext34:	
 15486 ;; *************** function _PWM6_LoadDutyValue *****************
 15487 ;; Defined at:
 15488 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1    wreg      void 
 15495 ;; Registers used:
 15496 ;;		wreg, status,2, status,0
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;Total ram usage:        4 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    6
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_main
 15513 ;;		_increment_subfield
 15514 ;;		_all_LED
 15515 ;;		_mod1_LED
 15516 ;;		_mod2_LED
 15517 ;;		_mod3_LED
 15518 ;;		_mod4_LED
 15519 ;;		_mode_select_LED
 15520 ;; This function uses a non-reentrant model
 15521 ;;
 15522                           
 15523                           
 15524                           ;psect for function _PWM6_LoadDutyValue
 15525  0AF2                     _PWM6_LoadDutyValue:	
 15526  0AF2                     l6449:	
 15527                           ;incstack = 0
 15528                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15529                           
 15530                           
 15531                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 15532  0AF2  0020               	movlb	0	; select bank0
 15533  0AF3  0824               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 15534  0AF4  00A6               	movwf	??_PWM6_LoadDutyValue+1
 15535  0AF5  0823               	movf	PWM6_LoadDutyValue@dutyValue,w
 15536  0AF6  00A5               	movwf	??_PWM6_LoadDutyValue
 15537  0AF7  36A6               	lsrf	??_PWM6_LoadDutyValue+1,f
 15538  0AF8  0CA5               	rrf	??_PWM6_LoadDutyValue,f
 15539  0AF9  36A6               	lsrf	??_PWM6_LoadDutyValue+1,f
 15540  0AFA  0CA5               	rrf	??_PWM6_LoadDutyValue,f
 15541  0AFB  0825               	movf	??_PWM6_LoadDutyValue,w
 15542  0AFC  0027               	movlb	7	; select bank7
 15543  0AFD  008D               	movwf	13	;volatile
 15544                           
 15545                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 15546  0AFE  0020               	movlb	0	; select bank0
 15547  0AFF  0823               	movf	PWM6_LoadDutyValue@dutyValue,w
 15548  0B00  3903               	andlw	3
 15549  0B01  00A5               	movwf	??_PWM6_LoadDutyValue
 15550  0B02  3005               	movlw	5
 15551  0B03                     u3885:	
 15552  0B03  35A5               	lslf	??_PWM6_LoadDutyValue,f
 15553  0B04  3EFF               	addlw	-1
 15554  0B05  1D03               	skipz
 15555  0B06  2B03               	goto	u3885
 15556  0B07  3525               	lslf	??_PWM6_LoadDutyValue,w
 15557  0B08  0027               	movlb	7	; select bank7
 15558  0B09  008C               	movwf	12	;volatile
 15559  0B0A                     l916:	
 15560  0B0A  0008               	return
 15561  0B0B                     __end_of_PWM6_LoadDutyValue:	
 15562                           
 15563                           	psect	text35
 15564  084E                     __ptext35:	
 15565 ;; *************** function _TMR0_StartTimer *****************
 15566 ;; Defined at:
 15567 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;		None
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      void 
 15574 ;; Registers used:
 15575 ;;		None
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;Total ram usage:        0 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:    6
 15588 ;; This function calls:
 15589 ;;		Nothing
 15590 ;; This function is called by:
 15591 ;;		_main
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           
 15596                           ;psect for function _TMR0_StartTimer
 15597  084E                     _TMR0_StartTimer:	
 15598  084E                     l7153:	
 15599                           ;incstack = 0
 15600                           ; Regs used in _TMR0_StartTimer: []
 15601                           
 15602                           
 15603                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 15604  084E  0020               	movlb	0	; select bank0
 15605  084F  179E               	bsf	30,7	;volatile
 15606  0850                     l1689:	
 15607  0850  0008               	return
 15608  0851                     __end_of_TMR0_StartTimer:	
 15609                           
 15610                           	psect	text36
 15611  0B3F                     __ptext36:	
 15612 ;; *************** function _SYSTEM_Initialize *****************
 15613 ;; Defined at:
 15614 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15615 ;; Parameters:    Size  Location     Type
 15616 ;;		None
 15617 ;; Auto vars:     Size  Location     Type
 15618 ;;		None
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		wreg, status,2, status,0, pclath, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;Total ram usage:        0 bytes
 15633 ;; Hardware stack levels used:    1
 15634 ;; Hardware stack levels required when called:    8
 15635 ;; This function calls:
 15636 ;;		_ADCC_Initialize
 15637 ;;		_EXT_INT_Initialize
 15638 ;;		_OSCILLATOR_Initialize
 15639 ;;		_PIN_MANAGER_Initialize
 15640 ;;		_PMD_Initialize
 15641 ;;		_PWM6_Initialize
 15642 ;;		_TMR0_Initialize
 15643 ;;		_TMR1_Initialize
 15644 ;;		_TMR2_Initialize
 15645 ;; This function is called by:
 15646 ;;		_main
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           
 15651                           ;psect for function _SYSTEM_Initialize
 15652  0B3F                     _SYSTEM_Initialize:	
 15653  0B3F                     l7009:	
 15654                           ;incstack = 0
 15655                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15656                           
 15657                           
 15658                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15659  0B3F  3188  20D1  318B   	fcall	_PMD_Initialize
 15660  0B42                     l7011:	
 15661                           
 15662                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15663  0B42  318E  2621  318B   	fcall	_PIN_MANAGER_Initialize
 15664  0B45                     l7013:	
 15665                           
 15666                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15667  0B45  3188  20F4  318B   	fcall	_OSCILLATOR_Initialize
 15668  0B48                     l7015:	
 15669                           
 15670                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 15671  0B48  3189  217E  318B   	fcall	_PWM6_Initialize
 15672  0B4B                     l7017:	
 15673                           
 15674                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15675  0B4B  318A  2266  318B   	fcall	_ADCC_Initialize
 15676  0B4E                     l7019:	
 15677                           
 15678                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 15679  0B4E  318A  22C1  318B   	fcall	_TMR2_Initialize
 15680  0B51                     l7021:	
 15681                           
 15682                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 15683  0B51  3189  218B  318B   	fcall	_EXT_INT_Initialize
 15684  0B54                     l7023:	
 15685                           
 15686                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 15687  0B54  318B  2377  318B   	fcall	_TMR1_Initialize
 15688  0B57                     l7025:	
 15689                           
 15690                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 15691  0B57  318A  223B  318B   	fcall	_TMR0_Initialize
 15692  0B5A                     l439:	
 15693  0B5A  0008               	return
 15694  0B5B                     __end_of_SYSTEM_Initialize:	
 15695                           
 15696                           	psect	text37
 15697  0AC1                     __ptext37:	
 15698 ;; *************** function _TMR2_Initialize *****************
 15699 ;; Defined at:
 15700 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		wreg, status,2, status,0, pclath, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    7
 15721 ;; This function calls:
 15722 ;;		_TMR2_SetInterruptHandler
 15723 ;; This function is called by:
 15724 ;;		_SYSTEM_Initialize
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           
 15729                           ;psect for function _TMR2_Initialize
 15730  0AC1                     _TMR2_Initialize:	
 15731  0AC1                     l6761:	
 15732                           ;incstack = 0
 15733                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15734                           
 15735                           
 15736                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15737  0AC1  3001               	movlw	1
 15738  0AC2  0025               	movlb	5	; select bank5
 15739  0AC3  0090               	movwf	16	;volatile
 15740                           
 15741                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 15742  0AC4  3020               	movlw	32
 15743  0AC5  008F               	movwf	15	;volatile
 15744  0AC6                     l6763:	
 15745                           
 15746                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15747  0AC6  0191               	clrf	17	;volatile
 15748  0AC7                     l6765:	
 15749                           
 15750                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 15751  0AC7  309B               	movlw	155
 15752  0AC8  008D               	movwf	13	;volatile
 15753                           
 15754                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15755  0AC9  018C               	clrf	12	;volatile
 15756  0ACA                     l6767:	
 15757                           
 15758                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15759  0ACA  002E               	movlb	14	; select bank14
 15760  0ACB  1090               	bcf	16,1	;volatile
 15761  0ACC                     l6769:	
 15762                           
 15763                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15764  0ACC  149A               	bsf	26,1	;volatile
 15765  0ACD                     l6771:	
 15766                           
 15767                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15768  0ACD  3030               	movlw	low _TMR2_DefaultInterruptHandler
 15769  0ACE  0020               	movlb	0	; select bank0
 15770  0ACF  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15771  0AD0  3008               	movlw	high _TMR2_DefaultInterruptHandler
 15772  0AD1  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15773  0AD2  3189  210F  318A   	fcall	_TMR2_SetInterruptHandler
 15774  0AD5                     l6773:	
 15775                           
 15776                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 15777  0AD5  30B1               	movlw	177
 15778  0AD6  0025               	movlb	5	; select bank5
 15779  0AD7  008E               	movwf	14	;volatile
 15780  0AD8                     l998:	
 15781  0AD8  0008               	return
 15782  0AD9                     __end_of_TMR2_Initialize:	
 15783                           
 15784                           	psect	text38
 15785  090F                     __ptext38:	
 15786 ;; *************** function _TMR2_SetInterruptHandler *****************
 15787 ;; Defined at:
 15788 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15791 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		wreg
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;Total ram usage:        2 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    6
 15810 ;; This function calls:
 15811 ;;		Nothing
 15812 ;; This function is called by:
 15813 ;;		_TMR2_Initialize
 15814 ;;		_main
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           
 15819                           ;psect for function _TMR2_SetInterruptHandler
 15820  090F                     _TMR2_SetInterruptHandler:	
 15821  090F                     l6569:	
 15822                           ;incstack = 0
 15823                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15824                           
 15825                           
 15826                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 15827  090F  0020               	movlb	0	; select bank0
 15828  0910  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15829  0911  0021               	movlb	1	; select bank1
 15830  0912  00D1               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15831  0913  0020               	movlb	0	; select bank0
 15832  0914  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15833  0915  0021               	movlb	1	; select bank1
 15834  0916  00D0               	movwf	_TMR2_InterruptHandler^(0+128)
 15835  0917                     l1041:	
 15836  0917  0008               	return
 15837  0918                     __end_of_TMR2_SetInterruptHandler:	
 15838                           
 15839                           	psect	text39
 15840  0B77                     __ptext39:	
 15841 ;; *************** function _TMR1_Initialize *****************
 15842 ;; Defined at:
 15843 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;		None
 15846 ;; Auto vars:     Size  Location     Type
 15847 ;;		None
 15848 ;; Return value:  Size  Location     Type
 15849 ;;                  1    wreg      void 
 15850 ;; Registers used:
 15851 ;;		wreg, status,2, status,0, pclath, cstack
 15852 ;; Tracked objects:
 15853 ;;		On entry : 0/0
 15854 ;;		On exit  : 0/0
 15855 ;;		Unchanged: 0/0
 15856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;Total ram usage:        0 bytes
 15862 ;; Hardware stack levels used:    1
 15863 ;; Hardware stack levels required when called:    7
 15864 ;; This function calls:
 15865 ;;		_TMR1_SetInterruptHandler
 15866 ;; This function is called by:
 15867 ;;		_SYSTEM_Initialize
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           
 15872                           ;psect for function _TMR1_Initialize
 15873  0B77                     _TMR1_Initialize:	
 15874  0B77                     l6775:	
 15875                           ;incstack = 0
 15876                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15877                           
 15878                           
 15879                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15880  0B77  0024               	movlb	4	; select bank4
 15881  0B78  018F               	clrf	15	;volatile
 15882                           
 15883                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15884  0B79  0190               	clrf	16	;volatile
 15885  0B7A                     l6777:	
 15886                           
 15887                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15888  0B7A  3004               	movlw	4
 15889  0B7B  0091               	movwf	17	;volatile
 15890  0B7C                     l6779:	
 15891                           
 15892                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 15893  0B7C  30E1               	movlw	225
 15894  0B7D  008D               	movwf	13	;volatile
 15895  0B7E                     l6781:	
 15896                           
 15897                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 15898  0B7E  30BA               	movlw	186
 15899  0B7F  008C               	movwf	12	;volatile
 15900  0B80                     l6783:	
 15901                           
 15902                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15903  0B80  080D               	movf	13,w	;volatile
 15904  0B81  0020               	movlb	0	; select bank0
 15905  0B82  00E9               	movwf	_timer1ReloadVal+1	;volatile
 15906  0B83  0024               	movlb	4	; select bank4
 15907  0B84  080C               	movf	12,w	;volatile
 15908  0B85  0020               	movlb	0	; select bank0
 15909  0B86  00E8               	movwf	_timer1ReloadVal	;volatile
 15910  0B87                     l6785:	
 15911                           
 15912                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 15913  0B87  002E               	movlb	14	; select bank14
 15914  0B88  1010               	bcf	16,0	;volatile
 15915  0B89                     l6787:	
 15916                           
 15917                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 15918  0B89  141A               	bsf	26,0	;volatile
 15919  0B8A                     l6789:	
 15920                           
 15921                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 15922  0B8A  302F               	movlw	low _TMR1_DefaultInterruptHandler
 15923  0B8B  0020               	movlb	0	; select bank0
 15924  0B8C  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 15925  0B8D  3008               	movlw	high _TMR1_DefaultInterruptHandler
 15926  0B8E  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 15927  0B8F  3189  2106  318B   	fcall	_TMR1_SetInterruptHandler
 15928  0B92                     l6791:	
 15929                           
 15930                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 15931  0B92  3015               	movlw	21
 15932  0B93  0024               	movlb	4	; select bank4
 15933  0B94  008E               	movwf	14	;volatile
 15934  0B95                     l869:	
 15935  0B95  0008               	return
 15936  0B96                     __end_of_TMR1_Initialize:	
 15937                           
 15938                           	psect	text40
 15939  0906                     __ptext40:	
 15940 ;; *************** function _TMR1_SetInterruptHandler *****************
 15941 ;; Defined at:
 15942 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15945 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15961 ;;Total ram usage:        2 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; Hardware stack levels required when called:    6
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_TMR1_Initialize
 15968 ;;		_main
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           
 15972                           
 15973                           ;psect for function _TMR1_SetInterruptHandler
 15974  0906                     _TMR1_SetInterruptHandler:	
 15975  0906                     l6547:	
 15976                           ;incstack = 0
 15977                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 15978                           
 15979                           
 15980                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 15981  0906  0020               	movlb	0	; select bank0
 15982  0907  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 15983  0908  0021               	movlb	1	; select bank1
 15984  0909  00D3               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 15985  090A  0020               	movlb	0	; select bank0
 15986  090B  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 15987  090C  0021               	movlb	1	; select bank1
 15988  090D  00D2               	movwf	_TMR1_InterruptHandler^(0+128)
 15989  090E                     l899:	
 15990  090E  0008               	return
 15991  090F                     __end_of_TMR1_SetInterruptHandler:	
 15992                           
 15993                           	psect	text41
 15994  0A3B                     __ptext41:	
 15995 ;; *************** function _TMR0_Initialize *****************
 15996 ;; Defined at:
 15997 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 15998 ;; Parameters:    Size  Location     Type
 15999 ;;		None
 16000 ;; Auto vars:     Size  Location     Type
 16001 ;;		None
 16002 ;; Return value:  Size  Location     Type
 16003 ;;                  1    wreg      void 
 16004 ;; Registers used:
 16005 ;;		wreg, status,2, status,0, pclath, cstack
 16006 ;; Tracked objects:
 16007 ;;		On entry : 0/0
 16008 ;;		On exit  : 0/0
 16009 ;;		Unchanged: 0/0
 16010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;Total ram usage:        0 bytes
 16016 ;; Hardware stack levels used:    1
 16017 ;; Hardware stack levels required when called:    7
 16018 ;; This function calls:
 16019 ;;		_TMR0_SetInterruptHandler
 16020 ;; This function is called by:
 16021 ;;		_SYSTEM_Initialize
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           
 16026                           ;psect for function _TMR0_Initialize
 16027  0A3B                     _TMR0_Initialize:	
 16028  0A3B                     l6793:	
 16029                           ;incstack = 0
 16030                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16031                           
 16032                           
 16033                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 16034  0A3B  3095               	movlw	149
 16035  0A3C  0020               	movlb	0	; select bank0
 16036  0A3D  009F               	movwf	31	;volatile
 16037                           
 16038                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 16039  0A3E  30F1               	movlw	241
 16040  0A3F  009D               	movwf	29	;volatile
 16041  0A40                     l6795:	
 16042                           
 16043                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 16044  0A40  019C               	clrf	28	;volatile
 16045  0A41                     l6797:	
 16046                           
 16047                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 16048  0A41  002E               	movlb	14	; select bank14
 16049  0A42  128C               	bcf	12,5	;volatile
 16050  0A43                     l6799:	
 16051                           
 16052                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 16053  0A43  1696               	bsf	22,5	;volatile
 16054  0A44                     l6801:	
 16055                           
 16056                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16057  0A44  302E               	movlw	low _TMR0_DefaultInterruptHandler
 16058  0A45  0020               	movlb	0	; select bank0
 16059  0A46  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16060  0A47  3008               	movlw	high _TMR0_DefaultInterruptHandler
 16061  0A48  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16062  0A49  3188  20FD  318A   	fcall	_TMR0_SetInterruptHandler
 16063  0A4C                     l6803:	
 16064                           
 16065                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 16066  0A4C  300B               	movlw	11
 16067  0A4D  0020               	movlb	0	; select bank0
 16068  0A4E  009E               	movwf	30	;volatile
 16069  0A4F                     l1686:	
 16070  0A4F  0008               	return
 16071  0A50                     __end_of_TMR0_Initialize:	
 16072                           
 16073                           	psect	text42
 16074  08FD                     __ptext42:	
 16075 ;; *************** function _TMR0_SetInterruptHandler *****************
 16076 ;; Defined at:
 16077 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 16078 ;; Parameters:    Size  Location     Type
 16079 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16080 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 16081 ;; Auto vars:     Size  Location     Type
 16082 ;;		None
 16083 ;; Return value:  Size  Location     Type
 16084 ;;                  1    wreg      void 
 16085 ;; Registers used:
 16086 ;;		wreg
 16087 ;; Tracked objects:
 16088 ;;		On entry : 0/0
 16089 ;;		On exit  : 0/0
 16090 ;;		Unchanged: 0/0
 16091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;Total ram usage:        2 bytes
 16097 ;; Hardware stack levels used:    1
 16098 ;; Hardware stack levels required when called:    6
 16099 ;; This function calls:
 16100 ;;		Nothing
 16101 ;; This function is called by:
 16102 ;;		_main
 16103 ;;		_TMR0_Initialize
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           
 16108                           ;psect for function _TMR0_SetInterruptHandler
 16109  08FD                     _TMR0_SetInterruptHandler:	
 16110  08FD                     l6571:	
 16111                           ;incstack = 0
 16112                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16113                           
 16114                           
 16115                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 16116  08FD  0020               	movlb	0	; select bank0
 16117  08FE  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16118  08FF  0021               	movlb	1	; select bank1
 16119  0900  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16120  0901  0020               	movlb	0	; select bank0
 16121  0902  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16122  0903  0021               	movlb	1	; select bank1
 16123  0904  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
 16124  0905                     l1708:	
 16125  0905  0008               	return
 16126  0906                     __end_of_TMR0_SetInterruptHandler:	
 16127                           
 16128                           	psect	text43
 16129  097E                     __ptext43:	
 16130 ;; *************** function _PWM6_Initialize *****************
 16131 ;; Defined at:
 16132 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;		None
 16135 ;; Auto vars:     Size  Location     Type
 16136 ;;		None
 16137 ;; Return value:  Size  Location     Type
 16138 ;;                  1    wreg      void 
 16139 ;; Registers used:
 16140 ;;		wreg, status,2, status,0
 16141 ;; Tracked objects:
 16142 ;;		On entry : 0/0
 16143 ;;		On exit  : 0/0
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16150 ;;Total ram usage:        0 bytes
 16151 ;; Hardware stack levels used:    1
 16152 ;; Hardware stack levels required when called:    6
 16153 ;; This function calls:
 16154 ;;		Nothing
 16155 ;; This function is called by:
 16156 ;;		_SYSTEM_Initialize
 16157 ;; This function uses a non-reentrant model
 16158 ;;
 16159                           
 16160                           
 16161                           ;psect for function _PWM6_Initialize
 16162  097E                     _PWM6_Initialize:	
 16163  097E                     l6751:	
 16164                           ;incstack = 0
 16165                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 16166                           
 16167                           
 16168                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 16169  097E  3080               	movlw	128
 16170  097F  0027               	movlb	7	; select bank7
 16171  0980  008E               	movwf	14	;volatile
 16172                           
 16173                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 16174  0981  303E               	movlw	62
 16175  0982  008D               	movwf	13	;volatile
 16176                           
 16177                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 16178  0983  3040               	movlw	64
 16179  0984  008C               	movwf	12	;volatile
 16180  0985                     l6753:	
 16181                           
 16182                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 16183  0985  0024               	movlb	4	; select bank4
 16184  0986  081F               	movf	31,w	;volatile
 16185  0987  39F3               	andlw	-13
 16186  0988  3804               	iorlw	4
 16187  0989  009F               	movwf	31	;volatile
 16188  098A                     l913:	
 16189  098A  0008               	return
 16190  098B                     __end_of_PWM6_Initialize:	
 16191                           
 16192                           	psect	text44
 16193  08D1                     __ptext44:	
 16194 ;; *************** function _PMD_Initialize *****************
 16195 ;; Defined at:
 16196 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16197 ;; Parameters:    Size  Location     Type
 16198 ;;		None
 16199 ;; Auto vars:     Size  Location     Type
 16200 ;;		None
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  1    wreg      void 
 16203 ;; Registers used:
 16204 ;;		status,2
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16214 ;;Total ram usage:        0 bytes
 16215 ;; Hardware stack levels used:    1
 16216 ;; Hardware stack levels required when called:    6
 16217 ;; This function calls:
 16218 ;;		Nothing
 16219 ;; This function is called by:
 16220 ;;		_SYSTEM_Initialize
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           
 16225                           ;psect for function _PMD_Initialize
 16226  08D1                     _PMD_Initialize:	
 16227  08D1                     l6687:	
 16228                           ;incstack = 0
 16229                           ; Regs used in _PMD_Initialize: [status,2]
 16230                           
 16231                           
 16232                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16233  08D1  002F               	movlb	15	; select bank15
 16234  08D2  0196               	clrf	22	;volatile
 16235                           
 16236                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16237  08D3  0197               	clrf	23	;volatile
 16238                           
 16239                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16240  08D4  0198               	clrf	24	;volatile
 16241                           
 16242                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16243  08D5  0199               	clrf	25	;volatile
 16244                           
 16245                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16246  08D6  019A               	clrf	26	;volatile
 16247                           
 16248                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16249  08D7  019B               	clrf	27	;volatile
 16250  08D8                     l445:	
 16251  08D8  0008               	return
 16252  08D9                     __end_of_PMD_Initialize:	
 16253                           
 16254                           	psect	text45
 16255  0E21                     __ptext45:	
 16256 ;; *************** function _PIN_MANAGER_Initialize *****************
 16257 ;; Defined at:
 16258 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      void 
 16265 ;; Registers used:
 16266 ;;		wreg, status,2
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16276 ;;Total ram usage:        0 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    6
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		_SYSTEM_Initialize
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           
 16287                           ;psect for function _PIN_MANAGER_Initialize
 16288  0E21                     _PIN_MANAGER_Initialize:	
 16289  0E21                     l6689:	
 16290                           ;incstack = 0
 16291                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16292                           
 16293                           
 16294                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16295  0E21  0020               	movlb	0	; select bank0
 16296  0E22  019A               	clrf	26	;volatile
 16297                           
 16298                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16299  0E23  0199               	clrf	25	;volatile
 16300                           
 16301                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16302  0E24  0196               	clrf	22	;volatile
 16303                           
 16304                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16305  0E25  0197               	clrf	23	;volatile
 16306                           
 16307                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16308  0E26  0198               	clrf	24	;volatile
 16309  0E27                     l6691:	
 16310                           
 16311                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16312  0E27  3007               	movlw	7
 16313  0E28  0095               	movwf	21	;volatile
 16314  0E29                     l6693:	
 16315                           
 16316                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 16317  0E29  300F               	movlw	15
 16318  0E2A  0091               	movwf	17	;volatile
 16319  0E2B                     l6695:	
 16320                           
 16321                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16322  0E2B  30FF               	movlw	255
 16323  0E2C  0092               	movwf	18	;volatile
 16324  0E2D                     l6697:	
 16325                           
 16326                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 16327  0E2D  30FF               	movlw	255
 16328  0E2E  0093               	movwf	19	;volatile
 16329  0E2F                     l6699:	
 16330                           
 16331                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 16332  0E2F  30FF               	movlw	255
 16333  0E30  0094               	movwf	20	;volatile
 16334  0E31                     l6701:	
 16335                           
 16336                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 16337  0E31  30FF               	movlw	255
 16338  0E32  003E               	movlb	30	; select bank30
 16339  0E33  00D9               	movwf	89	;volatile
 16340  0E34                     l6703:	
 16341                           
 16342                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 16343  0E34  30C7               	movlw	199
 16344  0E35  00CE               	movwf	78	;volatile
 16345  0E36                     l6705:	
 16346                           
 16347                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 16348  0E36  30EF               	movlw	239
 16349  0E37  00C3               	movwf	67	;volatile
 16350  0E38                     l6707:	
 16351                           
 16352                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 16353  0E38  3007               	movlw	7
 16354  0E39  00E4               	movwf	100	;volatile
 16355  0E3A                     l6709:	
 16356                           
 16357                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 16358  0E3A  30FF               	movlw	255
 16359  0E3B  00B8               	movwf	56	;volatile
 16360                           
 16361                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 16362  0E3C  01DA               	clrf	90	;volatile
 16363                           
 16364                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 16365  0E3D  01E5               	clrf	101	;volatile
 16366                           
 16367                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 16368  0E3E  01C4               	clrf	68	;volatile
 16369                           
 16370                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 16371  0E3F  01B9               	clrf	57	;volatile
 16372                           
 16373                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 16374  0E40  01CF               	clrf	79	;volatile
 16375                           
 16376                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 16377  0E41  01E6               	clrf	102	;volatile
 16378                           
 16379                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 16380  0E42  01BA               	clrf	58	;volatile
 16381                           
 16382                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 16383  0E43  01C5               	clrf	69	;volatile
 16384                           
 16385                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 16386  0E44  01D0               	clrf	80	;volatile
 16387                           
 16388                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 16389  0E45  01DB               	clrf	91	;volatile
 16390  0E46                     l6711:	
 16391                           
 16392                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 16393  0E46  30FF               	movlw	255
 16394  0E47  00BB               	movwf	59	;volatile
 16395  0E48                     l6713:	
 16396                           
 16397                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 16398  0E48  30FF               	movlw	255
 16399  0E49  00C6               	movwf	70	;volatile
 16400  0E4A                     l6715:	
 16401                           
 16402                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 16403  0E4A  30FF               	movlw	255
 16404  0E4B  00D1               	movwf	81	;volatile
 16405  0E4C                     l6717:	
 16406                           
 16407                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 16408  0E4C  30FF               	movlw	255
 16409  0E4D  00DC               	movwf	92	;volatile
 16410  0E4E                     l6719:	
 16411                           
 16412                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 16413  0E4E  3007               	movlw	7
 16414  0E4F  00E7               	movwf	103	;volatile
 16415  0E50                     l6721:	
 16416                           
 16417                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 16418  0E50  30FF               	movlw	255
 16419  0E51  00BC               	movwf	60	;volatile
 16420  0E52                     l6723:	
 16421                           
 16422                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 16423  0E52  30FF               	movlw	255
 16424  0E53  00C7               	movwf	71	;volatile
 16425  0E54                     l6725:	
 16426                           
 16427                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 16428  0E54  30FF               	movlw	255
 16429  0E55  00D2               	movwf	82	;volatile
 16430  0E56                     l6727:	
 16431                           
 16432                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 16433  0E56  30FF               	movlw	255
 16434  0E57  00DD               	movwf	93	;volatile
 16435  0E58                     l6729:	
 16436                           
 16437                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 16438  0E58  3007               	movlw	7
 16439  0E59  00E8               	movwf	104	;volatile
 16440  0E5A                     l6731:	
 16441                           
 16442                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 16443  0E5A  300C               	movlw	12
 16444  0E5B  003D               	movlb	29	; select bank29
 16445  0E5C  0090               	movwf	16	;volatile
 16446  0E5D                     l6733:	
 16447                           
 16448                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 16449  0E5D  3013               	movlw	19
 16450  0E5E  00C5               	movwf	69	;volatile
 16451  0E5F                     l6735:	
 16452                           
 16453                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 16454  0E5F  3014               	movlw	20
 16455  0E60  003E               	movlb	30	; select bank30
 16456  0E61  00A3               	movwf	35	;volatile
 16457  0E62                     l6737:	
 16458                           
 16459                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 16460  0E62  3015               	movlw	21
 16461  0E63  00A4               	movwf	36	;volatile
 16462  0E64                     l6739:	
 16463                           
 16464                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 16465  0E64  300E               	movlw	14
 16466  0E65  0096               	movwf	22	;volatile
 16467  0E66                     l6741:	
 16468                           
 16469                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 16470  0E66  3014               	movlw	20
 16471  0E67  003D               	movlb	29	; select bank29
 16472  0E68  00C6               	movwf	70	;volatile
 16473  0E69                     l530:	
 16474  0E69  0008               	return
 16475  0E6A                     __end_of_PIN_MANAGER_Initialize:	
 16476                           
 16477                           	psect	text46
 16478  08F4                     __ptext46:	
 16479 ;; *************** function _OSCILLATOR_Initialize *****************
 16480 ;; Defined at:
 16481 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;		None
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;		None
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  1    wreg      void 
 16488 ;; Registers used:
 16489 ;;		wreg, status,2
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16499 ;;Total ram usage:        0 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:    6
 16502 ;; This function calls:
 16503 ;;		Nothing
 16504 ;; This function is called by:
 16505 ;;		_SYSTEM_Initialize
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           
 16510                           ;psect for function _OSCILLATOR_Initialize
 16511  08F4                     _OSCILLATOR_Initialize:	
 16512  08F4                     l6743:	
 16513                           ;incstack = 0
 16514                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16515                           
 16516                           
 16517                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 16518  08F4  3062               	movlw	98
 16519  08F5  0031               	movlb	17	; select bank17
 16520  08F6  008D               	movwf	13	;volatile
 16521  08F7                     l6745:	
 16522                           
 16523                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16524  08F7  018F               	clrf	15	;volatile
 16525  08F8                     l6747:	
 16526                           
 16527                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16528  08F8  0191               	clrf	17	;volatile
 16529                           
 16530                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 16531  08F9  3002               	movlw	2
 16532  08FA  0093               	movwf	19	;volatile
 16533  08FB                     l6749:	
 16534                           
 16535                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16536  08FB  0192               	clrf	18	;volatile
 16537  08FC                     l442:	
 16538  08FC  0008               	return
 16539  08FD                     __end_of_OSCILLATOR_Initialize:	
 16540                           
 16541                           	psect	text47
 16542  098B                     __ptext47:	
 16543 ;; *************** function _EXT_INT_Initialize *****************
 16544 ;; Defined at:
 16545 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16546 ;; Parameters:    Size  Location     Type
 16547 ;;		None
 16548 ;; Auto vars:     Size  Location     Type
 16549 ;;		None
 16550 ;; Return value:  Size  Location     Type
 16551 ;;                  1    wreg      void 
 16552 ;; Registers used:
 16553 ;;		wreg, status,2, status,0, pclath, cstack
 16554 ;; Tracked objects:
 16555 ;;		On entry : 0/0
 16556 ;;		On exit  : 0/0
 16557 ;;		Unchanged: 0/0
 16558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;Total ram usage:        0 bytes
 16564 ;; Hardware stack levels used:    1
 16565 ;; Hardware stack levels required when called:    7
 16566 ;; This function calls:
 16567 ;;		_INT_SetInterruptHandler
 16568 ;; This function is called by:
 16569 ;;		_SYSTEM_Initialize
 16570 ;; This function uses a non-reentrant model
 16571 ;;
 16572                           
 16573                           
 16574                           ;psect for function _EXT_INT_Initialize
 16575  098B                     _EXT_INT_Initialize:	
 16576  098B                     l6681:	
 16577                           ;incstack = 0
 16578                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16579                           
 16580                           
 16581                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 16582  098B  002E               	movlb	14	; select bank14
 16583  098C  100C               	bcf	12,0	;volatile
 16584                           
 16585                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 16586  098D  140B               	bsf	11,0	;volatile
 16587  098E                     l6683:	
 16588                           
 16589                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 16590  098E  302D               	movlw	low _INT_DefaultInterruptHandler
 16591  098F  0020               	movlb	0	; select bank0
 16592  0990  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 16593  0991  3008               	movlw	high _INT_DefaultInterruptHandler
 16594  0992  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 16595  0993  3188  20EB  3189   	fcall	_INT_SetInterruptHandler
 16596  0996                     l6685:	
 16597                           
 16598                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 16599  0996  002E               	movlb	14	; select bank14
 16600  0997  1416               	bsf	22,0	;volatile
 16601  0998                     l347:	
 16602  0998  0008               	return
 16603  0999                     __end_of_EXT_INT_Initialize:	
 16604                           
 16605                           	psect	text48
 16606  08EB                     __ptext48:	
 16607 ;; *************** function _INT_SetInterruptHandler *****************
 16608 ;; Defined at:
 16609 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 16610 ;; Parameters:    Size  Location     Type
 16611 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16612 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 16613 ;; Auto vars:     Size  Location     Type
 16614 ;;		None
 16615 ;; Return value:  Size  Location     Type
 16616 ;;                  1    wreg      void 
 16617 ;; Registers used:
 16618 ;;		wreg
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;Total ram usage:        2 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; Hardware stack levels required when called:    6
 16631 ;; This function calls:
 16632 ;;		Nothing
 16633 ;; This function is called by:
 16634 ;;		_EXT_INT_Initialize
 16635 ;;		_main
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639                           
 16640                           ;psect for function _INT_SetInterruptHandler
 16641  08EB                     _INT_SetInterruptHandler:	
 16642  08EB                     l6545:	
 16643                           ;incstack = 0
 16644                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16645                           
 16646                           
 16647                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 16648  08EB  0020               	movlb	0	; select bank0
 16649  08EC  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 16650  08ED  0021               	movlb	1	; select bank1
 16651  08EE  00D5               	movwf	(_INT_InterruptHandler+1)^(0+128)
 16652  08EF  0020               	movlb	0	; select bank0
 16653  08F0  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 16654  08F1  0021               	movlb	1	; select bank1
 16655  08F2  00D4               	movwf	_INT_InterruptHandler^(0+128)
 16656  08F3                     l341:	
 16657  08F3  0008               	return
 16658  08F4                     __end_of_INT_SetInterruptHandler:	
 16659                           
 16660                           	psect	text49
 16661  0A66                     __ptext49:	
 16662 ;; *************** function _ADCC_Initialize *****************
 16663 ;; Defined at:
 16664 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;		None
 16667 ;; Auto vars:     Size  Location     Type
 16668 ;;		None
 16669 ;; Return value:  Size  Location     Type
 16670 ;;                  1    wreg      void 
 16671 ;; Registers used:
 16672 ;;		wreg, status,2
 16673 ;; Tracked objects:
 16674 ;;		On entry : 0/0
 16675 ;;		On exit  : 0/0
 16676 ;;		Unchanged: 0/0
 16677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16682 ;;Total ram usage:        0 bytes
 16683 ;; Hardware stack levels used:    1
 16684 ;; Hardware stack levels required when called:    6
 16685 ;; This function calls:
 16686 ;;		Nothing
 16687 ;; This function is called by:
 16688 ;;		_SYSTEM_Initialize
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692                           
 16693                           ;psect for function _ADCC_Initialize
 16694  0A66                     _ADCC_Initialize:	
 16695  0A66                     l6755:	
 16696                           ;incstack = 0
 16697                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16698                           
 16699                           
 16700                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16701  0A66  0022               	movlb	2	; select bank2
 16702  0A67  018E               	clrf	14	;volatile
 16703                           
 16704                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16705  0A68  018F               	clrf	15	;volatile
 16706                           
 16707                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16708  0A69  0190               	clrf	16	;volatile
 16709                           
 16710                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16711  0A6A  0191               	clrf	17	;volatile
 16712                           
 16713                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16714  0A6B  0192               	clrf	18	;volatile
 16715                           
 16716                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16717  0A6C  0193               	clrf	19	;volatile
 16718                           
 16719                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16720  0A6D  018D               	clrf	13	;volatile
 16721                           
 16722                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16723  0A6E  0021               	movlb	1	; select bank1
 16724  0A6F  019E               	clrf	30	;volatile
 16725                           
 16726                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16727  0A70  019B               	clrf	27	;volatile
 16728                           
 16729                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 16730  0A71  0194               	clrf	20	;volatile
 16731                           
 16732                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 16733  0A72  0195               	clrf	21	;volatile
 16734                           
 16735                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 16736  0A73  0196               	clrf	22	;volatile
 16737                           
 16738                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 16739  0A74  0197               	clrf	23	;volatile
 16740                           
 16741                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 16742  0A75  019A               	clrf	26	;volatile
 16743                           
 16744                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 16745  0A76  0199               	clrf	25	;volatile
 16746                           
 16747                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 16748  0A77  0198               	clrf	24	;volatile
 16749  0A78                     l6757:	
 16750                           
 16751                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 16752  0A78  3084               	movlw	132
 16753  0A79  0093               	movwf	19	;volatile
 16754  0A7A                     l6759:	
 16755                           
 16756                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 16757  0A7A  019D               	clrf	29	;volatile
 16758  0A7B                     l757:	
 16759  0A7B  0008               	return
 16760  0A7C                     __end_of_ADCC_Initialize:	
 16761                           
 16762                           	psect	text50
 16763  0B25                     __ptext50:	
 16764 ;; *************** function _LED_bin *****************
 16765 ;; Defined at:
 16766 ;;		line 655 in file "main.c"
 16767 ;; Parameters:    Size  Location     Type
 16768 ;;  value           2    3[BANK0 ] unsigned int 
 16769 ;; Auto vars:     Size  Location     Type
 16770 ;;		None
 16771 ;; Return value:  Size  Location     Type
 16772 ;;                  1    wreg      void 
 16773 ;; Registers used:
 16774 ;;		wreg, status,2, status,0
 16775 ;; Tracked objects:
 16776 ;;		On entry : 0/0
 16777 ;;		On exit  : 0/0
 16778 ;;		Unchanged: 0/0
 16779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16783 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16784 ;;Total ram usage:        5 bytes
 16785 ;; Hardware stack levels used:    1
 16786 ;; Hardware stack levels required when called:    6
 16787 ;; This function calls:
 16788 ;;		Nothing
 16789 ;; This function is called by:
 16790 ;;		_main
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           
 16795                           ;psect for function _LED_bin
 16796  0B25                     _LED_bin:	
 16797  0B25                     l7055:	
 16798                           ;incstack = 0
 16799                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 16800                           
 16801                           
 16802                           ;main.c: 657:     LATAbits.LATA4 = (value & 1);
 16803  0B25  0020               	movlb	0	; select bank0
 16804  0B26  0823               	movf	LED_bin@value,w
 16805  0B27  3901               	andlw	1
 16806  0B28  00A5               	movwf	??_LED_bin
 16807  0B29  0EA5               	swapf	??_LED_bin,f
 16808  0B2A  0816               	movf	22,w	;volatile
 16809  0B2B  0625               	xorwf	??_LED_bin,w
 16810  0B2C  39EF               	andlw	-17
 16811  0B2D  0625               	xorwf	??_LED_bin,w
 16812  0B2E  0096               	movwf	22	;volatile
 16813                           
 16814                           ;main.c: 658:     LATAbits.LATA5 = (value >>1);
 16815  0B2F  0824               	movf	LED_bin@value+1,w
 16816  0B30  00A6               	movwf	??_LED_bin+1
 16817  0B31  0823               	movf	LED_bin@value,w
 16818  0B32  00A5               	movwf	??_LED_bin
 16819  0B33  36A6               	lsrf	??_LED_bin+1,f
 16820  0B34  0CA5               	rrf	??_LED_bin,f
 16821  0B35  0825               	movf	??_LED_bin,w
 16822  0B36  00A7               	movwf	??_LED_bin+2
 16823  0B37  0EA7               	swapf	??_LED_bin+2,f
 16824  0B38  0DA7               	rlf	??_LED_bin+2,f
 16825  0B39  0816               	movf	22,w	;volatile
 16826  0B3A  0627               	xorwf	??_LED_bin+2,w
 16827  0B3B  39DF               	andlw	-33
 16828  0B3C  0627               	xorwf	??_LED_bin+2,w
 16829  0B3D  0096               	movwf	22	;volatile
 16830  0B3E                     l1390:	
 16831  0B3E  0008               	return
 16832  0B3F                     __end_of_LED_bin:	
 16833                           
 16834                           	psect	text51
 16835  0B0B                     __ptext51:	
 16836 ;; *************** function _ADC_read *****************
 16837 ;; Defined at:
 16838 ;;		line 668 in file "main.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;		None
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;		None
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  2    5[BANK0 ] unsigned int 
 16845 ;; Registers used:
 16846 ;;		wreg, status,2, status,0, pclath, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16856 ;;Total ram usage:        2 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:    7
 16859 ;; This function calls:
 16860 ;;		_ADCC_GetConversionResult
 16861 ;;		_ADCC_IsConversionDone
 16862 ;;		_ADCC_StartConversion
 16863 ;; This function is called by:
 16864 ;;		_main
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868                           
 16869                           ;psect for function _ADC_read
 16870  0B0B                     _ADC_read:	
 16871  0B0B                     l7045:	
 16872                           ;incstack = 0
 16873                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 16874                           
 16875                           
 16876                           ;main.c: 670:     ADCC_StartConversion(channel_ANA0);
 16877  0B0B  3000               	movlw	0
 16878  0B0C  3188  20C9  318B   	fcall	_ADCC_StartConversion
 16879                           
 16880                           ;main.c: 671:     while(!ADCC_IsConversionDone()){
 16881  0B0F  2B14               	goto	l7049
 16882  0B10                     l7047:	
 16883                           
 16884                           ;main.c: 672:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16885  0B10  3053               	movlw	83
 16886  0B11                     u5157:	
 16887  0B11  0B89               	decfsz	9,f
 16888  0B12  2B11               	goto	u5157
 16889  0B13  0000               	nop
 16890  0B14                     l7049:	
 16891                           
 16892                           ;main.c: 671:     while(!ADCC_IsConversionDone()){
 16893  0B14  3188  20AA  318B   	fcall	_ADCC_IsConversionDone
 16894  0B17  3A00               	xorlw	0
 16895  0B18  1903               	skipnz
 16896  0B19  2B1B               	goto	u4331
 16897  0B1A  2B1C               	goto	u4330
 16898  0B1B                     u4331:	
 16899  0B1B  2B10               	goto	l7047
 16900  0B1C                     u4330:	
 16901  0B1C                     l7051:	
 16902                           
 16903                           ;main.c: 675:     return ADCC_GetConversionResult();
 16904  0B1C  3188  20E2  318B   	fcall	_ADCC_GetConversionResult
 16905  0B1F  0020               	movlb	0	; select bank0
 16906  0B20  0824               	movf	?_ADCC_GetConversionResult+1,w
 16907  0B21  00A6               	movwf	?_ADC_read+1
 16908  0B22  0823               	movf	?_ADCC_GetConversionResult,w
 16909  0B23  00A5               	movwf	?_ADC_read
 16910  0B24                     l1396:	
 16911  0B24  0008               	return
 16912  0B25                     __end_of_ADC_read:	
 16913                           
 16914                           	psect	text52
 16915  08C9                     __ptext52:	
 16916 ;; *************** function _ADCC_StartConversion *****************
 16917 ;; Defined at:
 16918 ;;		line 106 in file "mcc_generated_files/adcc.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;  channel         1    wreg     enum E12246
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;  channel         1    3[BANK0 ] enum E12246
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16936 ;;Total ram usage:        1 bytes
 16937 ;; Hardware stack levels used:    1
 16938 ;; Hardware stack levels required when called:    6
 16939 ;; This function calls:
 16940 ;;		Nothing
 16941 ;; This function is called by:
 16942 ;;		_ADC_read
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           
 16947                           ;psect for function _ADCC_StartConversion
 16948  08C9                     _ADCC_StartConversion:	
 16949                           
 16950                           ;incstack = 0
 16951                           ; Regs used in _ADCC_StartConversion: [wreg]
 16952                           ;ADCC_StartConversion@channel stored from wreg
 16953  08C9  0020               	movlb	0	; select bank0
 16954  08CA  00A3               	movwf	ADCC_StartConversion@channel
 16955  08CB                     l6805:	
 16956                           
 16957                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 16958  08CB  0823               	movf	ADCC_StartConversion@channel,w
 16959  08CC  0021               	movlb	1	; select bank1
 16960  08CD  009E               	movwf	30	;volatile
 16961  08CE                     l6807:	
 16962                           
 16963                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 16964  08CE  1793               	bsf	19,7	;volatile
 16965  08CF                     l6809:	
 16966                           
 16967                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 16968  08CF  1413               	bsf	19,0	;volatile
 16969  08D0                     l760:	
 16970  08D0  0008               	return
 16971  08D1                     __end_of_ADCC_StartConversion:	
 16972                           
 16973                           	psect	text53
 16974  08AA                     __ptext53:	
 16975 ;; *************** function _ADCC_IsConversionDone *****************
 16976 ;; Defined at:
 16977 ;;		line 118 in file "mcc_generated_files/adcc.c"
 16978 ;; Parameters:    Size  Location     Type
 16979 ;;		None
 16980 ;; Auto vars:     Size  Location     Type
 16981 ;;		None
 16982 ;; Return value:  Size  Location     Type
 16983 ;;                  1    wreg      _Bool 
 16984 ;; Registers used:
 16985 ;;		wreg, status,0
 16986 ;; Tracked objects:
 16987 ;;		On entry : 0/0
 16988 ;;		On exit  : 0/0
 16989 ;;		Unchanged: 0/0
 16990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;Total ram usage:        0 bytes
 16996 ;; Hardware stack levels used:    1
 16997 ;; Hardware stack levels required when called:    6
 16998 ;; This function calls:
 16999 ;;		Nothing
 17000 ;; This function is called by:
 17001 ;;		_ADC_read
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           
 17006                           ;psect for function _ADCC_IsConversionDone
 17007  08AA                     _ADCC_IsConversionDone:	
 17008  08AA                     l6811:	
 17009                           ;incstack = 0
 17010                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 17011                           
 17012                           
 17013                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 17014  08AA  1003               	clrc
 17015  08AB  0021               	movlb	1	; select bank1
 17016  08AC  1C13               	btfss	19,0	;volatile
 17017  08AD  1403               	setc
 17018  08AE  3000               	movlw	0
 17019  08AF  3D09               	addwfc	9,w
 17020  08B0                     l763:	
 17021  08B0  0008               	return
 17022  08B1                     __end_of_ADCC_IsConversionDone:	
 17023                           
 17024                           	psect	text54
 17025  08E2                     __ptext54:	
 17026 ;; *************** function _ADCC_GetConversionResult *****************
 17027 ;; Defined at:
 17028 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;		None
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;		None
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  2    3[BANK0 ] unsigned short 
 17035 ;; Registers used:
 17036 ;;		wreg
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17046 ;;Total ram usage:        2 bytes
 17047 ;; Hardware stack levels used:    1
 17048 ;; Hardware stack levels required when called:    6
 17049 ;; This function calls:
 17050 ;;		Nothing
 17051 ;; This function is called by:
 17052 ;;		_ADC_read
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           
 17057                           ;psect for function _ADCC_GetConversionResult
 17058  08E2                     _ADCC_GetConversionResult:	
 17059  08E2                     l6815:	
 17060                           ;incstack = 0
 17061                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 17062                           
 17063                           
 17064                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17065  08E2  0021               	movlb	1	; select bank1
 17066  08E3  080D               	movf	13,w	;volatile
 17067  08E4  0020               	movlb	0	; select bank0
 17068  08E5  00A4               	movwf	?_ADCC_GetConversionResult+1
 17069  08E6  0021               	movlb	1	; select bank1
 17070  08E7  080C               	movf	12,w	;volatile
 17071  08E8  0020               	movlb	0	; select bank0
 17072  08E9  00A3               	movwf	?_ADCC_GetConversionResult
 17073  08EA                     l766:	
 17074  08EA  0008               	return
 17075  08EB                     __end_of_ADCC_GetConversionResult:	
 17076                           
 17077                           	psect	intentry
 17078  0004                     __pintentry:	
 17079 ;; *************** function _INTERRUPT_InterruptManager *****************
 17080 ;; Defined at:
 17081 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17082 ;; Parameters:    Size  Location     Type
 17083 ;;		None
 17084 ;; Auto vars:     Size  Location     Type
 17085 ;;		None
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  1    wreg      void 
 17088 ;; Registers used:
 17089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;Total ram usage:        0 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:    5
 17102 ;; This function calls:
 17103 ;;		Absolute function
 17104 ;;		_INT_ISR
 17105 ;;		_TMR0_ISR
 17106 ;;		_TMR1_ISR
 17107 ;;		_TMR2_ISR
 17108 ;;		_i2c_ISR
 17109 ;;		_i2c_busCollisionISR
 17110 ;; This function is called by:
 17111 ;;		Interrupt level 1
 17112 ;; This function uses a non-reentrant model
 17113 ;;
 17114                           
 17115  0004                     _INTERRUPT_InterruptManager:	
 17116                           
 17117                           ;incstack = 0
 17118  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17119                           
 17120                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17121  0005  3180               	pagesel	$
 17122  0006                     i1l5937:	
 17123                           
 17124                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 17125  0006  002E               	movlb	14	; select bank14
 17126  0007  1C16               	btfss	22,0	;volatile
 17127  0008  280A               	goto	u341_21
 17128  0009  280B               	goto	u341_20
 17129  000A                     u341_21:	
 17130  000A  2813               	goto	i1l378
 17131  000B                     u341_20:	
 17132  000B                     i1l5939:	
 17133  000B  1C0C               	btfss	12,0	;volatile
 17134  000C  280E               	goto	u342_21
 17135  000D  280F               	goto	u342_20
 17136  000E                     u342_21:	
 17137  000E  2813               	goto	i1l378
 17138  000F                     u342_20:	
 17139  000F                     i1l5941:	
 17140                           
 17141                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 17142  000F  3188  2085  3180   	fcall	_INT_ISR
 17143                           
 17144                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17145  0012  2859               	goto	i1l392
 17146  0013                     i1l378:	
 17147                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 17148                           
 17149  0013  1E96               	btfss	22,5	;volatile
 17150  0014  2816               	goto	u343_21
 17151  0015  2817               	goto	u343_20
 17152  0016                     u343_21:	
 17153  0016  281F               	goto	i1l380
 17154  0017                     u343_20:	
 17155  0017                     i1l5943:	
 17156  0017  1E8C               	btfss	12,5	;volatile
 17157  0018  281A               	goto	u344_21
 17158  0019  281B               	goto	u344_20
 17159  001A                     u344_21:	
 17160  001A  281F               	goto	i1l380
 17161  001B                     u344_20:	
 17162  001B                     i1l5945:	
 17163                           
 17164                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 17165  001B  3189  2199  3180   	fcall	_TMR0_ISR
 17166                           
 17167                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 17168  001E  2859               	goto	i1l392
 17169  001F                     i1l380:	
 17170                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 17171                           
 17172  001F  1F0B               	btfss	11,6	;volatile
 17173  0020  2822               	goto	u345_21
 17174  0021  2823               	goto	u345_20
 17175  0022                     u345_21:	
 17176  0022  2859               	goto	i1l386
 17177  0023                     u345_20:	
 17178  0023                     i1l5947:	
 17179                           
 17180                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17181  0023  1C99               	btfss	25,1	;volatile
 17182  0024  2826               	goto	u346_21
 17183  0025  2827               	goto	u346_20
 17184  0026                     u346_21:	
 17185  0026  2832               	goto	i1l383
 17186  0027                     u346_20:	
 17187  0027                     i1l5949:	
 17188  0027  1C8F               	btfss	15,1	;volatile
 17189  0028  282A               	goto	u347_21
 17190  0029  282B               	goto	u347_20
 17191  002A                     u347_21:	
 17192  002A  2832               	goto	i1l383
 17193  002B                     u347_20:	
 17194  002B                     i1l5951:	
 17195                           
 17196                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 17197  002B  0020               	movlb	0	; select bank0
 17198  002C  0850               	movf	_i2c1_driver_busCollisionISR+1,w
 17199  002D  008A               	movwf	10
 17200  002E  084F               	movf	_i2c1_driver_busCollisionISR,w
 17201  002F  000A               	callw
 17202  0030  3180               	pagesel	$
 17203                           
 17204                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17205  0031  2859               	goto	i1l392
 17206  0032                     i1l383:	
 17207                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17208                           
 17209  0032  1C19               	btfss	25,0	;volatile
 17210  0033  2835               	goto	u348_21
 17211  0034  2836               	goto	u348_20
 17212  0035                     u348_21:	
 17213  0035  2841               	goto	i1l385
 17214  0036                     u348_20:	
 17215  0036                     i1l5953:	
 17216  0036  1C0F               	btfss	15,0	;volatile
 17217  0037  2839               	goto	u349_21
 17218  0038  283A               	goto	u349_20
 17219  0039                     u349_21:	
 17220  0039  2841               	goto	i1l385
 17221  003A                     u349_20:	
 17222  003A                     i1l5955:	
 17223                           
 17224                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 17225  003A  0020               	movlb	0	; select bank0
 17226  003B  084E               	movf	_i2c1_driver_i2cISR+1,w
 17227  003C  008A               	movwf	10
 17228  003D  084D               	movf	_i2c1_driver_i2cISR,w
 17229  003E  000A               	callw
 17230  003F  3180               	pagesel	$
 17231                           
 17232                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17233  0040  2859               	goto	i1l392
 17234  0041                     i1l385:	
 17235                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 17236                           
 17237  0041  1C1A               	btfss	26,0	;volatile
 17238  0042  2844               	goto	u350_21
 17239  0043  2845               	goto	u350_20
 17240  0044                     u350_21:	
 17241  0044  284D               	goto	i1l387
 17242  0045                     u350_20:	
 17243  0045                     i1l5957:	
 17244  0045  1C10               	btfss	16,0	;volatile
 17245  0046  2848               	goto	u351_21
 17246  0047  2849               	goto	u351_20
 17247  0048                     u351_21:	
 17248  0048  284D               	goto	i1l387
 17249  0049                     u351_20:	
 17250  0049                     i1l5959:	
 17251                           
 17252                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 17253  0049  318A  2292  3180   	fcall	_TMR1_ISR
 17254                           
 17255                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17256  004C  2859               	goto	i1l392
 17257  004D                     i1l387:	
 17258                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17259                           
 17260  004D  1C9A               	btfss	26,1	;volatile
 17261  004E  2850               	goto	u352_21
 17262  004F  2851               	goto	u352_20
 17263  0050                     u352_21:	
 17264  0050  2859               	goto	i1l386
 17265  0051                     u352_20:	
 17266  0051                     i1l5961:	
 17267  0051  1C90               	btfss	16,1	;volatile
 17268  0052  2854               	goto	u353_21
 17269  0053  2855               	goto	u353_20
 17270  0054                     u353_21:	
 17271  0054  2859               	goto	i1l386
 17272  0055                     u353_20:	
 17273  0055                     i1l5963:	
 17274                           
 17275                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 17276  0055  3189  21A8  3180   	fcall	_TMR2_ISR
 17277                           
 17278                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17279  0058  2859               	goto	i1l392
 17280  0059                     i1l386:	
 17281  0059                     i1l392:	
 17282  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17283  005A  0009               	retfie
 17284  005B                     __end_of_INTERRUPT_InterruptManager:	
 17285                           
 17286                           	psect	text56
 17287  0859                     __ptext56:	
 17288 ;; *************** function _i2c_busCollisionISR *****************
 17289 ;; Defined at:
 17290 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17291 ;; Parameters:    Size  Location     Type
 17292 ;;		None
 17293 ;; Auto vars:     Size  Location     Type
 17294 ;;		None
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  1    wreg      void 
 17297 ;; Registers used:
 17298 ;;		status,2, status,0, pclath, cstack
 17299 ;; Tracked objects:
 17300 ;;		On entry : 0/0
 17301 ;;		On exit  : 0/0
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;Total ram usage:        0 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:    1
 17311 ;; This function calls:
 17312 ;;		_i2c1_driver_clearBusCollision
 17313 ;; This function is called by:
 17314 ;;		_i2c_open
 17315 ;;		_INTERRUPT_InterruptManager
 17316 ;; This function uses a non-reentrant model
 17317 ;;
 17318                           
 17319                           
 17320                           ;psect for function _i2c_busCollisionISR
 17321  0859                     _i2c_busCollisionISR:	
 17322  0859                     i1l5571:	
 17323                           ;incstack = 0
 17324                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17325                           
 17326                           
 17327                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17328  0859  3188  204B  3188   	fcall	_i2c1_driver_clearBusCollision
 17329  085C                     i1l213:	
 17330  085C  0008               	return
 17331  085D                     __end_of_i2c_busCollisionISR:	
 17332                           
 17333                           	psect	text57
 17334  084B                     __ptext57:	
 17335 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17336 ;; Defined at:
 17337 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 17338 ;; Parameters:    Size  Location     Type
 17339 ;;		None
 17340 ;; Auto vars:     Size  Location     Type
 17341 ;;		None
 17342 ;; Return value:  Size  Location     Type
 17343 ;;                  1    wreg      void 
 17344 ;; Registers used:
 17345 ;;		None
 17346 ;; Tracked objects:
 17347 ;;		On entry : 0/0
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17355 ;;Total ram usage:        0 bytes
 17356 ;; Hardware stack levels used:    1
 17357 ;; This function calls:
 17358 ;;		Nothing
 17359 ;; This function is called by:
 17360 ;;		_i2c_busCollisionISR
 17361 ;; This function uses a non-reentrant model
 17362 ;;
 17363                           
 17364                           
 17365                           ;psect for function _i2c1_driver_clearBusCollision
 17366  084B                     _i2c1_driver_clearBusCollision:	
 17367  084B                     i1l5157:	
 17368                           ;incstack = 0
 17369                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17370                           
 17371                           
 17372                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 17373  084B  002E               	movlb	14	; select bank14
 17374  084C  108F               	bcf	15,1	;volatile
 17375  084D                     i1l672:	
 17376  084D  0008               	return
 17377  084E                     __end_of_i2c1_driver_clearBusCollision:	
 17378                           
 17379                           	psect	text58
 17380  0C45                     __ptext58:	
 17381 ;; *************** function _i2c_ISR *****************
 17382 ;; Defined at:
 17383 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1    wreg      void 
 17390 ;; Registers used:
 17391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        3 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:    4
 17404 ;; This function calls:
 17405 ;;		_do_I2C_DO_ACK
 17406 ;;		_do_I2C_DO_ADDRESS_NACK
 17407 ;;		_do_I2C_DO_NACK_RESTART
 17408 ;;		_do_I2C_DO_NACK_STOP
 17409 ;;		_do_I2C_IDLE
 17410 ;;		_do_I2C_RCEN
 17411 ;;		_do_I2C_RESET
 17412 ;;		_do_I2C_RX
 17413 ;;		_do_I2C_SEND_ADR_READ
 17414 ;;		_do_I2C_SEND_ADR_WRITE
 17415 ;;		_do_I2C_SEND_RESTART
 17416 ;;		_do_I2C_SEND_RESTART_READ
 17417 ;;		_do_I2C_SEND_RESTART_WRITE
 17418 ;;		_do_I2C_SEND_STOP
 17419 ;;		_do_I2C_TX
 17420 ;;		_do_I2C_TX_EMPTY
 17421 ;;		_i2c1_driver_isNACK
 17422 ;;		_mssp1_clearIRQ
 17423 ;; This function is called by:
 17424 ;;		_i2c_open
 17425 ;;		_i2c_poller
 17426 ;;		_INTERRUPT_InterruptManager
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           
 17431                           ;psect for function _i2c_ISR
 17432  0C45                     _i2c_ISR:	
 17433  0C45                     i1l5561:	
 17434                           ;incstack = 0
 17435                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17436                           
 17437                           
 17438                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17439  0C45  3188  2048  318C   	fcall	_mssp1_clearIRQ
 17440  0C48                     i1l5563:	
 17441                           
 17442                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17443  0C48  0021               	movlb	1	; select bank1
 17444  0C49  1DA0               	btfss	_i2c_status^(0+128),3
 17445  0C4A  2C4C               	goto	u277_21
 17446  0C4B  2C4D               	goto	u277_20
 17447  0C4C                     u277_21:	
 17448  0C4C  2C5A               	goto	i1l5569
 17449  0C4D                     u277_20:	
 17450  0C4D                     i1l5565:	
 17451  0C4D  3188  20B1  318C   	fcall	_i2c1_driver_isNACK
 17452  0C50  1C03               	btfss	3,0
 17453  0C51  2C53               	goto	u278_21
 17454  0C52  2C54               	goto	u278_20
 17455  0C53                     u278_21:	
 17456  0C53  2C5A               	goto	i1l5569
 17457  0C54                     u278_20:	
 17458  0C54                     i1l5567:	
 17459                           
 17460                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17461  0C54  300F               	movlw	15
 17462  0C55  0020               	movlb	0	; select bank0
 17463  0C56  00A0               	movwf	??_i2c_ISR
 17464  0C57  0820               	movf	??_i2c_ISR,w
 17465  0C58  0021               	movlb	1	; select bank1
 17466  0C59  00A9               	movwf	(_i2c_status^(0+128)+9)
 17467  0C5A                     i1l5569:	
 17468                           
 17469                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17470  0C5A  0021               	movlb	1	; select bank1
 17471  0C5B  0829               	movf	(_i2c_status^(0+128)+9),w
 17472  0C5C  0020               	movlb	0	; select bank0
 17473  0C5D  00A0               	movwf	??_i2c_ISR
 17474  0C5E  01A1               	clrf	??_i2c_ISR+1
 17475  0C5F  35A0               	lslf	??_i2c_ISR,f
 17476  0C60  0DA1               	rlf	??_i2c_ISR+1,f
 17477  0C61  3000               	movlw	low (_fsmStateTable| (0+32768))
 17478  0C62  0720               	addwf	??_i2c_ISR,w
 17479  0C63  0084               	movwf	4
 17480  0C64  3090               	movlw	high (_fsmStateTable| (0+32768))
 17481  0C65  3D21               	addwfc	??_i2c_ISR+1,w
 17482  0C66  0085               	movwf	5
 17483  0C67  3F01               	moviw [1]fsr0
 17484  0C68  008A               	movwf	10
 17485  0C69  3F00               	moviw [0]fsr0
 17486  0C6A  000A               	callw
 17487  0C6B  318C               	pagesel	$
 17488  0C6C  0020               	movlb	0	; select bank0
 17489  0C6D  00A2               	movwf	??_i2c_ISR+2
 17490  0C6E  0822               	movf	??_i2c_ISR+2,w
 17491  0C6F  0021               	movlb	1	; select bank1
 17492  0C70  00A9               	movwf	(_i2c_status^(0+128)+9)
 17493  0C71                     i1l210:	
 17494  0C71  0008               	return
 17495  0C72                     __end_of_i2c_ISR:	
 17496                           
 17497                           	psect	text59
 17498  0848                     __ptext59:	
 17499 ;; *************** function _mssp1_clearIRQ *****************
 17500 ;; Defined at:
 17501 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;		None
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;		None
 17506 ;; Return value:  Size  Location     Type
 17507 ;;                  1    wreg      void 
 17508 ;; Registers used:
 17509 ;;		None
 17510 ;; Tracked objects:
 17511 ;;		On entry : 0/0
 17512 ;;		On exit  : 0/0
 17513 ;;		Unchanged: 0/0
 17514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17519 ;;Total ram usage:        0 bytes
 17520 ;; Hardware stack levels used:    1
 17521 ;; This function calls:
 17522 ;;		Nothing
 17523 ;; This function is called by:
 17524 ;;		_i2c_ISR
 17525 ;;		_i2c_open
 17526 ;;		_i2c_close
 17527 ;; This function uses a non-reentrant model
 17528 ;;
 17529                           
 17530                           
 17531                           ;psect for function _mssp1_clearIRQ
 17532  0848                     _mssp1_clearIRQ:	
 17533  0848                     i1l4973:	
 17534                           ;incstack = 0
 17535                           ; Regs used in _mssp1_clearIRQ: []
 17536                           
 17537                           
 17538                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 17539  0848  002E               	movlb	14	; select bank14
 17540  0849  100F               	bcf	15,0	;volatile
 17541  084A                     i1l576:	
 17542  084A  0008               	return
 17543  084B                     __end_of_mssp1_clearIRQ:	
 17544                           
 17545                           	psect	text60
 17546  0E6A                     __ptext60:	
 17547 ;; *************** function _do_I2C_RX *****************
 17548 ;; Defined at:
 17549 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17550 ;; Parameters:    Size  Location     Type
 17551 ;;		None
 17552 ;; Auto vars:     Size  Location     Type
 17553 ;;		None
 17554 ;; Return value:  Size  Location     Type
 17555 ;;                  1    wreg      enum E12722
 17556 ;; Registers used:
 17557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17558 ;; Tracked objects:
 17559 ;;		On entry : 0/0
 17560 ;;		On exit  : 0/0
 17561 ;;		Unchanged: 0/0
 17562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17567 ;;Total ram usage:        3 bytes
 17568 ;; Hardware stack levels used:    1
 17569 ;; Hardware stack levels required when called:    3
 17570 ;; This function calls:
 17571 ;;		Absolute function
 17572 ;;		_do_I2C_DO_NACK_RESTART
 17573 ;;		_do_I2C_DO_NACK_STOP
 17574 ;;		_i2c1_driver_getRXData
 17575 ;;		_i2c1_driver_sendACK
 17576 ;;		_i2c_restartWrite
 17577 ;;		_rd1RegCompleteHandler
 17578 ;;		_rd2RegCompleteHandler
 17579 ;;		_rdBlkRegCompleteHandler
 17580 ;;		_returnReset
 17581 ;;		_returnStop
 17582 ;;		_wr1RegCompleteHandler
 17583 ;;		_wr2RegCompleteHandler
 17584 ;; This function is called by:
 17585 ;;		_i2c_ISR
 17586 ;; This function uses a non-reentrant model
 17587 ;;
 17588                           
 17589                           
 17590                           ;psect for function _do_I2C_RX
 17591  0E6A                     _do_I2C_RX:	
 17592  0E6A                     i1l5099:	
 17593                           ;incstack = 0
 17594                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17595                           
 17596                           
 17597                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17598  0E6A  3188  2042  318E   	fcall	_i2c1_driver_getRXData
 17599  0E6D  00FA               	movwf	??_do_I2C_RX
 17600  0E6E  0021               	movlb	1	; select bank1
 17601  0E6F  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 17602  0E70  0086               	movwf	6
 17603  0E71  0187               	clrf	7
 17604  0E72  087A               	movf	??_do_I2C_RX,w
 17605  0E73  0081               	movwf	1
 17606  0E74                     i1l5101:	
 17607  0E74  3001               	movlw	1
 17608  0E75  00FA               	movwf	??_do_I2C_RX
 17609  0E76  087A               	movf	??_do_I2C_RX,w
 17610  0E77  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 17611  0E78                     i1l5103:	
 17612                           
 17613                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17614  0E78  3001               	movlw	1
 17615  0E79  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17616  0E7A  3000               	movlw	0
 17617  0E7B  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17618  0E7C  0823               	movf	(_i2c_status^(0+128)+3),w
 17619  0E7D  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17620  0E7E  1903               	btfsc	3,2
 17621  0E7F  2E81               	goto	u244_21
 17622  0E80  2E82               	goto	u244_20
 17623  0E81                     u244_21:	
 17624  0E81  2E87               	goto	i1l185
 17625  0E82                     u244_20:	
 17626  0E82                     i1l5105:	
 17627                           
 17628                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17629  0E82  3188  2051  318E   	fcall	_i2c1_driver_sendACK
 17630  0E85                     i1l5107:	
 17631                           
 17632                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17633  0E85  3005               	movlw	5
 17634  0E86  2EB3               	goto	i1l186
 17635  0E87                     i1l185:	
 17636                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17637                           
 17638                           
 17639                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17640  0E87  1520               	bsf	_i2c_status^(0+128),2
 17641                           
 17642                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17643  0E88  2E91               	goto	i1l5123
 17644  0E89                     i1l5113:	
 17645                           
 17646                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17647  0E89  3187  27FB  318E   	fcall	_do_I2C_DO_NACK_RESTART
 17648  0E8C  2EB3               	goto	i1l186
 17649  0E8D                     i1l5117:	
 17650                           
 17651                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17652  0E8D  3188  2080  318E   	fcall	_do_I2C_DO_NACK_STOP
 17653  0E90  2EB3               	goto	i1l186
 17654  0E91                     i1l5123:	
 17655  0E91  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17656  0E92  00FA               	movwf	??_do_I2C_RX
 17657  0E93  087A               	movf	??_do_I2C_RX,w
 17658  0E94  00F9               	movwf	rdBlkRegCompleteHandler@p
 17659  0E95  300B               	movlw	11
 17660  0E96  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17661  0E97  0086               	movwf	6
 17662  0E98  0187               	clrf	7
 17663  0E99  3F41               	moviw [1]fsr1
 17664  0E9A  008A               	movwf	10
 17665  0E9B  3F40               	moviw [0]fsr1
 17666  0E9C  000A               	callw
 17667  0E9D  318E               	pagesel	$
 17668  0E9E  00FB               	movwf	??_do_I2C_RX+1
 17669  0E9F  01FC               	clrf	??_do_I2C_RX+2
 17670                           
 17671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17672                           ; Switch size 1, requested type "simple"
 17673                           ; Number of cases is 1, Range of values is 0 to 0
 17674                           ; switch strategies available:
 17675                           ; Name         Instructions Cycles
 17676                           ; simple_byte            4     3 (average)
 17677                           ; direct_byte            8     6 (fixed)
 17678                           ; jumptable            260     6 (fixed)
 17679                           ;	Chosen strategy is simple_byte
 17680  0EA0  087C               	movf	??_do_I2C_RX+2,w
 17681  0EA1  3A00               	xorlw	0	; case 0
 17682  0EA2  1903               	skipnz
 17683  0EA3  2EA5               	goto	i1l7725
 17684  0EA4  2E8D               	goto	i1l5117
 17685  0EA5                     i1l7725:	
 17686                           
 17687                           ; Switch size 1, requested type "simple"
 17688                           ; Number of cases is 4, Range of values is 1 to 4
 17689                           ; switch strategies available:
 17690                           ; Name         Instructions Cycles
 17691                           ; simple_byte           13     7 (average)
 17692                           ; direct_byte           17     9 (fixed)
 17693                           ; jumptable            263     9 (fixed)
 17694                           ;	Chosen strategy is simple_byte
 17695  0EA5  087B               	movf	??_do_I2C_RX+1,w
 17696  0EA6  3A01               	xorlw	1	; case 1
 17697  0EA7  1903               	skipnz
 17698  0EA8  2E8D               	goto	i1l5117
 17699  0EA9  3A03               	xorlw	3	; case 2
 17700  0EAA  1903               	skipnz
 17701  0EAB  2E89               	goto	i1l5113
 17702  0EAC  3A01               	xorlw	1	; case 3
 17703  0EAD  1903               	skipnz
 17704  0EAE  2E89               	goto	i1l5113
 17705  0EAF  3A07               	xorlw	7	; case 4
 17706  0EB0  1903               	skipnz
 17707  0EB1  2E8D               	goto	i1l5117
 17708  0EB2  2E8D               	goto	i1l5117
 17709  0EB3                     i1l186:	
 17710  0EB3  0008               	return
 17711  0EB4                     __end_of_do_I2C_RX:	
 17712                           
 17713                           	psect	text61
 17714  0F01                     __ptext61:	
 17715 ;; *************** function _do_I2C_TX *****************
 17716 ;; Defined at:
 17717 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;		None
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;		None
 17722 ;; Return value:  Size  Location     Type
 17723 ;;                  1    wreg      enum E12722
 17724 ;; Registers used:
 17725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17735 ;;Total ram usage:        3 bytes
 17736 ;; Hardware stack levels used:    1
 17737 ;; Hardware stack levels required when called:    3
 17738 ;; This function calls:
 17739 ;;		Absolute function
 17740 ;;		_do_I2C_SEND_RESTART_READ
 17741 ;;		_do_I2C_SEND_RESTART_WRITE
 17742 ;;		_do_I2C_SEND_STOP
 17743 ;;		_i2c1_driver_TXData
 17744 ;;		_i2c1_driver_isNACK
 17745 ;;		_i2c_restartWrite
 17746 ;;		_rd1RegCompleteHandler
 17747 ;;		_rd2RegCompleteHandler
 17748 ;;		_rdBlkRegCompleteHandler
 17749 ;;		_returnReset
 17750 ;;		_returnStop
 17751 ;;		_wr1RegCompleteHandler
 17752 ;;		_wr2RegCompleteHandler
 17753 ;; This function is called by:
 17754 ;;		_i2c_ISR
 17755 ;; This function uses a non-reentrant model
 17756 ;;
 17757                           
 17758                           
 17759                           ;psect for function _do_I2C_TX
 17760  0F01                     _do_I2C_TX:	
 17761  0F01                     i1l5065:	
 17762                           ;incstack = 0
 17763                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17764                           
 17765                           
 17766                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17767  0F01  3188  20B1  318F   	fcall	_i2c1_driver_isNACK
 17768  0F04  1C03               	btfss	3,0
 17769  0F05  2F07               	goto	u242_21
 17770  0F06  2F08               	goto	u242_20
 17771  0F07                     u242_21:	
 17772  0F07  2F38               	goto	i1l169
 17773  0F08                     u242_20:	
 17774  0F08  2F15               	goto	i1l5083
 17775  0F09                     i1l5069:	
 17776                           
 17777                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17778  0F09  3188  2067  318F   	fcall	_do_I2C_SEND_RESTART_READ
 17779  0F0C  2F54               	goto	i1l172
 17780  0F0D                     i1l5073:	
 17781                           
 17782                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17783  0F0D  3188  206C  318F   	fcall	_do_I2C_SEND_RESTART_WRITE
 17784  0F10  2F54               	goto	i1l172
 17785  0F11                     i1l5077:	
 17786                           
 17787                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17788  0F11  3188  2076  318F   	fcall	_do_I2C_SEND_STOP
 17789  0F14  2F54               	goto	i1l172
 17790  0F15                     i1l5083:	
 17791  0F15  0021               	movlb	1	; select bank1
 17792  0F16  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 17793  0F17  00FA               	movwf	??_do_I2C_TX
 17794  0F18  087A               	movf	??_do_I2C_TX,w
 17795  0F19  00F9               	movwf	rdBlkRegCompleteHandler@p
 17796  0F1A  3011               	movlw	17
 17797  0F1B  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17798  0F1C  0086               	movwf	6
 17799  0F1D  0187               	clrf	7
 17800  0F1E  3F41               	moviw [1]fsr1
 17801  0F1F  008A               	movwf	10
 17802  0F20  3F40               	moviw [0]fsr1
 17803  0F21  000A               	callw
 17804  0F22  318F               	pagesel	$
 17805  0F23  00FB               	movwf	??_do_I2C_TX+1
 17806  0F24  01FC               	clrf	??_do_I2C_TX+2
 17807                           
 17808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17809                           ; Switch size 1, requested type "simple"
 17810                           ; Number of cases is 1, Range of values is 0 to 0
 17811                           ; switch strategies available:
 17812                           ; Name         Instructions Cycles
 17813                           ; simple_byte            4     3 (average)
 17814                           ; direct_byte            8     6 (fixed)
 17815                           ; jumptable            260     6 (fixed)
 17816                           ;	Chosen strategy is simple_byte
 17817  0F25  087C               	movf	??_do_I2C_TX+2,w
 17818  0F26  3A00               	xorlw	0	; case 0
 17819  0F27  1903               	skipnz
 17820  0F28  2F2A               	goto	i1l7727
 17821  0F29  2F11               	goto	i1l5077
 17822  0F2A                     i1l7727:	
 17823                           
 17824                           ; Switch size 1, requested type "simple"
 17825                           ; Number of cases is 4, Range of values is 1 to 4
 17826                           ; switch strategies available:
 17827                           ; Name         Instructions Cycles
 17828                           ; simple_byte           13     7 (average)
 17829                           ; direct_byte           17     9 (fixed)
 17830                           ; jumptable            263     9 (fixed)
 17831                           ;	Chosen strategy is simple_byte
 17832  0F2A  087B               	movf	??_do_I2C_TX+1,w
 17833  0F2B  3A01               	xorlw	1	; case 1
 17834  0F2C  1903               	skipnz
 17835  0F2D  2F11               	goto	i1l5077
 17836  0F2E  3A03               	xorlw	3	; case 2
 17837  0F2F  1903               	skipnz
 17838  0F30  2F09               	goto	i1l5069
 17839  0F31  3A01               	xorlw	1	; case 3
 17840  0F32  1903               	skipnz
 17841  0F33  2F0D               	goto	i1l5073
 17842  0F34  3A07               	xorlw	7	; case 4
 17843  0F35  1903               	skipnz
 17844  0F36  2F11               	goto	i1l5077
 17845  0F37  2F11               	goto	i1l5077
 17846  0F38                     i1l169:	
 17847                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17848                           
 17849                           
 17850                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17851  0F38  0021               	movlb	1	; select bank1
 17852  0F39  11A0               	bcf	_i2c_status^(0+128),3
 17853  0F3A                     i1l5085:	
 17854                           
 17855                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17856  0F3A  3002               	movlw	2
 17857  0F3B  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17858  0F3C  0086               	movwf	6
 17859  0F3D  0187               	clrf	7
 17860  0F3E  3F40               	moviw [0]fsr1
 17861  0F3F  0084               	movwf	4
 17862  0F40  0185               	clrf	5
 17863  0F41  0A81               	incf	1,f
 17864  0F42  0800               	movf	0,w
 17865  0F43  3188  205D  318F   	fcall	_i2c1_driver_TXData
 17866  0F46                     i1l5087:	
 17867                           
 17868                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17869  0F46  3001               	movlw	1
 17870  0F47  0021               	movlb	1	; select bank1
 17871  0F48  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17872  0F49  3000               	movlw	0
 17873  0F4A  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17874  0F4B  0823               	movf	(_i2c_status^(0+128)+3),w
 17875  0F4C  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17876  0F4D  1D03               	btfss	3,2
 17877  0F4E  2F50               	goto	u243_21
 17878  0F4F  2F51               	goto	u243_20
 17879  0F50                     u243_21:	
 17880  0F50  2F53               	goto	i1l5091
 17881  0F51                     u243_20:	
 17882  0F51                     i1l5089:	
 17883  0F51  3006               	movlw	6
 17884  0F52  2F54               	goto	i1l172
 17885  0F53                     i1l5091:	
 17886  0F53  3003               	movlw	3
 17887  0F54                     i1l172:	
 17888  0F54  0008               	return
 17889  0F55                     __end_of_do_I2C_TX:	
 17890                           
 17891                           	psect	text62
 17892  0C19                     __ptext62:	
 17893 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17894 ;; Defined at:
 17895 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      enum E12722
 17902 ;; Registers used:
 17903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/0
 17906 ;;		On exit  : 0/0
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17911 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17913 ;;Total ram usage:        3 bytes
 17914 ;; Hardware stack levels used:    1
 17915 ;; Hardware stack levels required when called:    3
 17916 ;; This function calls:
 17917 ;;		Absolute function
 17918 ;;		_do_I2C_SEND_RESTART
 17919 ;;		_do_I2C_SEND_STOP
 17920 ;;		_i2c_restartWrite
 17921 ;;		_rd1RegCompleteHandler
 17922 ;;		_rd2RegCompleteHandler
 17923 ;;		_rdBlkRegCompleteHandler
 17924 ;;		_returnReset
 17925 ;;		_returnStop
 17926 ;;		_wr1RegCompleteHandler
 17927 ;;		_wr2RegCompleteHandler
 17928 ;; This function is called by:
 17929 ;;		_i2c_ISR
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933                           
 17934                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 17935  0C19                     _do_I2C_DO_ADDRESS_NACK:	
 17936  0C19                     i1l5043:	
 17937                           ;incstack = 0
 17938                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17939                           
 17940                           
 17941                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 17942  0C19  0021               	movlb	1	; select bank1
 17943  0C1A  11A0               	bcf	_i2c_status^(0+128),3
 17944  0C1B                     i1l5045:	
 17945                           
 17946                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 17947  0C1B  3002               	movlw	2
 17948  0C1C  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17949  0C1D  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17950  0C1E  00AA               	movwf	(_i2c_status^(0+128)+10)
 17951                           
 17952                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 17953  0C1F  2C28               	goto	i1l5057
 17954  0C20                     i1l5047:	
 17955                           
 17956                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 17957  0C20  3188  2071  318C   	fcall	_do_I2C_SEND_RESTART
 17958  0C23  2C44               	goto	i1l164
 17959  0C24                     i1l5051:	
 17960                           
 17961                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 17962  0C24  3188  2076  318C   	fcall	_do_I2C_SEND_STOP
 17963  0C27  2C44               	goto	i1l164
 17964  0C28                     i1l5057:	
 17965  0C28  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 17966  0C29  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17967  0C2A  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17968  0C2B  00F9               	movwf	rdBlkRegCompleteHandler@p
 17969  0C2C  300F               	movlw	15
 17970  0C2D  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17971  0C2E  0086               	movwf	6
 17972  0C2F  0187               	clrf	7
 17973  0C30  3F41               	moviw [1]fsr1
 17974  0C31  008A               	movwf	10
 17975  0C32  3F40               	moviw [0]fsr1
 17976  0C33  000A               	callw
 17977  0C34  318C               	pagesel	$
 17978  0C35  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 17979  0C36  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 17980                           
 17981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17982                           ; Switch size 1, requested type "simple"
 17983                           ; Number of cases is 1, Range of values is 0 to 0
 17984                           ; switch strategies available:
 17985                           ; Name         Instructions Cycles
 17986                           ; simple_byte            4     3 (average)
 17987                           ; direct_byte            8     6 (fixed)
 17988                           ; jumptable            260     6 (fixed)
 17989                           ;	Chosen strategy is simple_byte
 17990  0C37  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 17991  0C38  3A00               	xorlw	0	; case 0
 17992  0C39  1903               	skipnz
 17993  0C3A  2C3C               	goto	i1l7729
 17994  0C3B  2C24               	goto	i1l5051
 17995  0C3C                     i1l7729:	
 17996                           
 17997                           ; Switch size 1, requested type "simple"
 17998                           ; Number of cases is 2, Range of values is 2 to 3
 17999                           ; switch strategies available:
 18000                           ; Name         Instructions Cycles
 18001                           ; simple_byte            7     4 (average)
 18002                           ; direct_byte           13     9 (fixed)
 18003                           ; jumptable            263     9 (fixed)
 18004                           ;	Chosen strategy is simple_byte
 18005  0C3C  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 18006  0C3D  3A02               	xorlw	2	; case 2
 18007  0C3E  1903               	skipnz
 18008  0C3F  2C20               	goto	i1l5047
 18009  0C40  3A01               	xorlw	1	; case 3
 18010  0C41  1903               	skipnz
 18011  0C42  2C20               	goto	i1l5047
 18012  0C43  2C24               	goto	i1l5051
 18013  0C44                     i1l164:	
 18014  0C44  0008               	return
 18015  0C45                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 18016                           
 18017                           	psect	text63
 18018  07FB                     __ptext63:	
 18019 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 18020 ;; Defined at:
 18021 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18022 ;; Parameters:    Size  Location     Type
 18023 ;;		None
 18024 ;; Auto vars:     Size  Location     Type
 18025 ;;		None
 18026 ;; Return value:  Size  Location     Type
 18027 ;;                  1    wreg      enum E12722
 18028 ;; Registers used:
 18029 ;;		wreg, status,2, status,0, pclath, cstack
 18030 ;; Tracked objects:
 18031 ;;		On entry : 0/0
 18032 ;;		On exit  : 0/0
 18033 ;;		Unchanged: 0/0
 18034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18039 ;;Total ram usage:        0 bytes
 18040 ;; Hardware stack levels used:    1
 18041 ;; Hardware stack levels required when called:    1
 18042 ;; This function calls:
 18043 ;;		_i2c1_driver_sendNACK
 18044 ;; This function is called by:
 18045 ;;		_do_I2C_RX
 18046 ;;		_i2c_ISR
 18047 ;; This function uses a non-reentrant model
 18048 ;;
 18049                           
 18050                           
 18051                           ;psect for function _do_I2C_DO_NACK_RESTART
 18052  07FB                     _do_I2C_DO_NACK_RESTART:	
 18053  07FB                     i1l4757:	
 18054                           ;incstack = 0
 18055                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18056                           
 18057                           
 18058                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 18059  07FB  3188  2055  3187   	fcall	_i2c1_driver_sendNACK
 18060  07FE                     i1l4759:	
 18061                           
 18062                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 18063  07FE  3009               	movlw	9
 18064  07FF                     i1l158:	
 18065  07FF  0008               	return
 18066  0800                     __end_of_do_I2C_DO_NACK_RESTART:	
 18067                           
 18068                           	psect	text64
 18069  0880                     __ptext64:	
 18070 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 18071 ;; Defined at:
 18072 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;		None
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  1    wreg      enum E12722
 18079 ;; Registers used:
 18080 ;;		wreg, status,2, status,0, pclath, cstack
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;Total ram usage:        0 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; Hardware stack levels required when called:    1
 18093 ;; This function calls:
 18094 ;;		_i2c1_driver_sendNACK
 18095 ;; This function is called by:
 18096 ;;		_do_I2C_RX
 18097 ;;		_i2c_ISR
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           
 18102                           ;psect for function _do_I2C_DO_NACK_STOP
 18103  0880                     _do_I2C_DO_NACK_STOP:	
 18104  0880                     i1l4751:	
 18105                           ;incstack = 0
 18106                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18107                           
 18108                           
 18109                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 18110  0880  3188  2055  3188   	fcall	_i2c1_driver_sendNACK
 18111  0883                     i1l4753:	
 18112                           
 18113                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 18114  0883  300A               	movlw	10
 18115  0884                     i1l155:	
 18116  0884  0008               	return
 18117  0885                     __end_of_do_I2C_DO_NACK_STOP:	
 18118                           
 18119                           	psect	text65
 18120  087B                     __ptext65:	
 18121 ;; *************** function _do_I2C_DO_ACK *****************
 18122 ;; Defined at:
 18123 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;		None
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;		None
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      enum E12722
 18130 ;; Registers used:
 18131 ;;		wreg, status,2, status,0, pclath, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18141 ;;Total ram usage:        0 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    1
 18144 ;; This function calls:
 18145 ;;		_i2c1_driver_sendACK
 18146 ;; This function is called by:
 18147 ;;		_i2c_ISR
 18148 ;; This function uses a non-reentrant model
 18149 ;;
 18150                           
 18151                           
 18152                           ;psect for function _do_I2C_DO_ACK
 18153  087B                     _do_I2C_DO_ACK:	
 18154  087B                     i1l5037:	
 18155                           ;incstack = 0
 18156                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18157                           
 18158                           
 18159                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 18160  087B  3188  2051  3188   	fcall	_i2c1_driver_sendACK
 18161  087E                     i1l5039:	
 18162                           
 18163                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 18164  087E  3005               	movlw	5
 18165  087F                     i1l152:	
 18166  087F  0008               	return
 18167  0880                     __end_of_do_I2C_DO_ACK:	
 18168                           
 18169                           	psect	text66
 18170  08A3                     __ptext66:	
 18171 ;; *************** function _do_I2C_RCEN *****************
 18172 ;; Defined at:
 18173 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18174 ;; Parameters:    Size  Location     Type
 18175 ;;		None
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;		None
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  1    wreg      enum E12722
 18180 ;; Registers used:
 18181 ;;		wreg, status,2, status,0, pclath, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;Total ram usage:        0 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:    1
 18194 ;; This function calls:
 18195 ;;		_i2c1_driver_startRX
 18196 ;; This function is called by:
 18197 ;;		_i2c_ISR
 18198 ;; This function uses a non-reentrant model
 18199 ;;
 18200                           
 18201                           
 18202                           ;psect for function _do_I2C_RCEN
 18203  08A3                     _do_I2C_RCEN:	
 18204  08A3                     i1l5029:	
 18205                           ;incstack = 0
 18206                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18207                           
 18208                           
 18209                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 18210  08A3  0021               	movlb	1	; select bank1
 18211  08A4  11A0               	bcf	_i2c_status^(0+128),3
 18212  08A5                     i1l5031:	
 18213                           
 18214                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18215  08A5  3188  203F  3188   	fcall	_i2c1_driver_startRX
 18216  08A8                     i1l5033:	
 18217                           
 18218                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18219  08A8  3004               	movlw	4
 18220  08A9                     i1l149:	
 18221  08A9  0008               	return
 18222  08AA                     __end_of_do_I2C_RCEN:	
 18223                           
 18224                           	psect	text67
 18225  08C1                     __ptext67:	
 18226 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18227 ;; Defined at:
 18228 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18229 ;; Parameters:    Size  Location     Type
 18230 ;;		None
 18231 ;; Auto vars:     Size  Location     Type
 18232 ;;		None
 18233 ;; Return value:  Size  Location     Type
 18234 ;;                  1    wreg      enum E12722
 18235 ;; Registers used:
 18236 ;;		wreg, status,2, status,0, pclath, cstack
 18237 ;; Tracked objects:
 18238 ;;		On entry : 0/0
 18239 ;;		On exit  : 0/0
 18240 ;;		Unchanged: 0/0
 18241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18246 ;;Total ram usage:        0 bytes
 18247 ;; Hardware stack levels used:    1
 18248 ;; Hardware stack levels required when called:    1
 18249 ;; This function calls:
 18250 ;;		_i2c1_driver_TXData
 18251 ;; This function is called by:
 18252 ;;		_i2c_ISR
 18253 ;; This function uses a non-reentrant model
 18254 ;;
 18255                           
 18256                           
 18257                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18258  08C1                     _do_I2C_SEND_ADR_WRITE:	
 18259  08C1                     i1l5021:	
 18260                           ;incstack = 0
 18261                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18262                           
 18263                           
 18264                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18265  08C1  0021               	movlb	1	; select bank1
 18266  08C2  15A0               	bsf	_i2c_status^(0+128),3
 18267  08C3                     i1l5023:	
 18268                           
 18269                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18270  08C3  3521               	lslf	(_i2c_status^(0+128)+1),w
 18271  08C4  3188  205D  3188   	fcall	_i2c1_driver_TXData
 18272  08C7                     i1l5025:	
 18273                           
 18274                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18275  08C7  3003               	movlw	3
 18276  08C8                     i1l146:	
 18277  08C8  0008               	return
 18278  08C9                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18279                           
 18280                           	psect	text68
 18281  08D9                     __ptext68:	
 18282 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18283 ;; Defined at:
 18284 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18285 ;; Parameters:    Size  Location     Type
 18286 ;;		None
 18287 ;; Auto vars:     Size  Location     Type
 18288 ;;		None
 18289 ;; Return value:  Size  Location     Type
 18290 ;;                  1    wreg      enum E12722
 18291 ;; Registers used:
 18292 ;;		wreg, status,2, status,0, pclath, cstack
 18293 ;; Tracked objects:
 18294 ;;		On entry : 0/0
 18295 ;;		On exit  : 0/0
 18296 ;;		Unchanged: 0/0
 18297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18302 ;;Total ram usage:        0 bytes
 18303 ;; Hardware stack levels used:    1
 18304 ;; Hardware stack levels required when called:    1
 18305 ;; This function calls:
 18306 ;;		_i2c1_driver_TXData
 18307 ;; This function is called by:
 18308 ;;		_i2c_ISR
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           
 18313                           ;psect for function _do_I2C_SEND_ADR_READ
 18314  08D9                     _do_I2C_SEND_ADR_READ:	
 18315  08D9                     i1l5013:	
 18316                           ;incstack = 0
 18317                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18318                           
 18319                           
 18320                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18321  08D9  0021               	movlb	1	; select bank1
 18322  08DA  15A0               	bsf	_i2c_status^(0+128),3
 18323  08DB                     i1l5015:	
 18324                           
 18325                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18326  08DB  1403               	setc
 18327  08DC  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18328  08DD  3188  205D  3188   	fcall	_i2c1_driver_TXData
 18329  08E0                     i1l5017:	
 18330                           
 18331                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18332  08E0  3005               	movlw	5
 18333  08E1                     i1l143:	
 18334  08E1  0008               	return
 18335  08E2                     __end_of_do_I2C_SEND_ADR_READ:	
 18336                           
 18337                           	psect	text69
 18338  0876                     __ptext69:	
 18339 ;; *************** function _do_I2C_SEND_STOP *****************
 18340 ;; Defined at:
 18341 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;		None
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;		None
 18346 ;; Return value:  Size  Location     Type
 18347 ;;                  1    wreg      enum E12722
 18348 ;; Registers used:
 18349 ;;		wreg, status,2, status,0, pclath, cstack
 18350 ;; Tracked objects:
 18351 ;;		On entry : 0/0
 18352 ;;		On exit  : 0/0
 18353 ;;		Unchanged: 0/0
 18354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;Total ram usage:        0 bytes
 18360 ;; Hardware stack levels used:    1
 18361 ;; Hardware stack levels required when called:    1
 18362 ;; This function calls:
 18363 ;;		_i2c1_driver_stop
 18364 ;; This function is called by:
 18365 ;;		_do_I2C_DO_ADDRESS_NACK
 18366 ;;		_do_I2C_TX
 18367 ;;		_do_I2C_TX_EMPTY
 18368 ;;		_i2c_ISR
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           
 18373                           ;psect for function _do_I2C_SEND_STOP
 18374  0876                     _do_I2C_SEND_STOP:	
 18375  0876                     i1l4739:	
 18376                           ;incstack = 0
 18377                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18378                           
 18379                           
 18380                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18381  0876  3188  203C  3188   	fcall	_i2c1_driver_stop
 18382  0879                     i1l4741:	
 18383                           
 18384                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18385  0879  3000               	movlw	0
 18386  087A                     i1l140:	
 18387  087A  0008               	return
 18388  087B                     __end_of_do_I2C_SEND_STOP:	
 18389                           
 18390                           	psect	text70
 18391  0871                     __ptext70:	
 18392 ;; *************** function _do_I2C_SEND_RESTART *****************
 18393 ;; Defined at:
 18394 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;		None
 18397 ;; Auto vars:     Size  Location     Type
 18398 ;;		None
 18399 ;; Return value:  Size  Location     Type
 18400 ;;                  1    wreg      enum E12722
 18401 ;; Registers used:
 18402 ;;		wreg, status,2, status,0, pclath, cstack
 18403 ;; Tracked objects:
 18404 ;;		On entry : 0/0
 18405 ;;		On exit  : 0/0
 18406 ;;		Unchanged: 0/0
 18407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;Total ram usage:        0 bytes
 18413 ;; Hardware stack levels used:    1
 18414 ;; Hardware stack levels required when called:    1
 18415 ;; This function calls:
 18416 ;;		_i2c1_driver_restart
 18417 ;; This function is called by:
 18418 ;;		_do_I2C_DO_ADDRESS_NACK
 18419 ;;		_do_I2C_TX_EMPTY
 18420 ;;		_i2c_ISR
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424                           
 18425                           ;psect for function _do_I2C_SEND_RESTART
 18426  0871                     _do_I2C_SEND_RESTART:	
 18427  0871                     i1l4733:	
 18428                           ;incstack = 0
 18429                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18430                           
 18431                           
 18432                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18433  0871  3188  2039  3188   	fcall	_i2c1_driver_restart
 18434  0874                     i1l4735:	
 18435                           
 18436                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18437  0874  3001               	movlw	1
 18438  0875                     i1l137:	
 18439  0875  0008               	return
 18440  0876                     __end_of_do_I2C_SEND_RESTART:	
 18441                           
 18442                           	psect	text71
 18443  086C                     __ptext71:	
 18444 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18445 ;; Defined at:
 18446 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;		None
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;		None
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  1    wreg      enum E12722
 18453 ;; Registers used:
 18454 ;;		wreg, status,2, status,0, pclath, cstack
 18455 ;; Tracked objects:
 18456 ;;		On entry : 0/0
 18457 ;;		On exit  : 0/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18464 ;;Total ram usage:        0 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; Hardware stack levels required when called:    1
 18467 ;; This function calls:
 18468 ;;		_i2c1_driver_restart
 18469 ;; This function is called by:
 18470 ;;		_do_I2C_TX
 18471 ;;		_i2c_ISR
 18472 ;; This function uses a non-reentrant model
 18473 ;;
 18474                           
 18475                           
 18476                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18477  086C                     _do_I2C_SEND_RESTART_WRITE:	
 18478  086C                     i1l4727:	
 18479                           ;incstack = 0
 18480                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18481                           
 18482                           
 18483                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18484  086C  3188  2039  3188   	fcall	_i2c1_driver_restart
 18485  086F                     i1l4729:	
 18486                           
 18487                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18488  086F  3002               	movlw	2
 18489  0870                     i1l134:	
 18490  0870  0008               	return
 18491  0871                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18492                           
 18493                           	psect	text72
 18494  0867                     __ptext72:	
 18495 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18496 ;; Defined at:
 18497 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18498 ;; Parameters:    Size  Location     Type
 18499 ;;		None
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;		None
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  1    wreg      enum E12722
 18504 ;; Registers used:
 18505 ;;		wreg, status,2, status,0, pclath, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18515 ;;Total ram usage:        0 bytes
 18516 ;; Hardware stack levels used:    1
 18517 ;; Hardware stack levels required when called:    1
 18518 ;; This function calls:
 18519 ;;		_i2c1_driver_restart
 18520 ;; This function is called by:
 18521 ;;		_do_I2C_TX
 18522 ;;		_i2c_ISR
 18523 ;; This function uses a non-reentrant model
 18524 ;;
 18525                           
 18526                           
 18527                           ;psect for function _do_I2C_SEND_RESTART_READ
 18528  0867                     _do_I2C_SEND_RESTART_READ:	
 18529  0867                     i1l4721:	
 18530                           ;incstack = 0
 18531                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18532                           
 18533                           
 18534                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18535  0867  3188  2039  3188   	fcall	_i2c1_driver_restart
 18536  086A                     i1l4723:	
 18537                           
 18538                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18539  086A  3001               	movlw	1
 18540  086B                     i1l131:	
 18541  086B  0008               	return
 18542  086C                     __end_of_do_I2C_SEND_RESTART_READ:	
 18543                           
 18544                           	psect	text73
 18545  0862                     __ptext73:	
 18546 ;; *************** function _do_I2C_IDLE *****************
 18547 ;; Defined at:
 18548 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18549 ;; Parameters:    Size  Location     Type
 18550 ;;		None
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;		None
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      enum E12722
 18555 ;; Registers used:
 18556 ;;		wreg, status,2
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18566 ;;Total ram usage:        0 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; This function calls:
 18569 ;;		Nothing
 18570 ;; This function is called by:
 18571 ;;		_i2c_ISR
 18572 ;; This function uses a non-reentrant model
 18573 ;;
 18574                           
 18575                           
 18576                           ;psect for function _do_I2C_IDLE
 18577  0862                     _do_I2C_IDLE:	
 18578  0862                     i1l5005:	
 18579                           ;incstack = 0
 18580                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18581                           
 18582                           
 18583                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18584  0862  0021               	movlb	1	; select bank1
 18585  0863  1020               	bcf	_i2c_status^(0+128),0
 18586  0864                     i1l5007:	
 18587                           
 18588                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18589  0864  01AA               	clrf	(_i2c_status^(0+128)+10)
 18590  0865                     i1l5009:	
 18591                           
 18592                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18593  0865  300E               	movlw	14
 18594  0866                     i1l128:	
 18595  0866  0008               	return
 18596  0867                     __end_of_do_I2C_IDLE:	
 18597                           
 18598                           	psect	text74
 18599  08B9                     __ptext74:	
 18600 ;; *************** function _do_I2C_RESET *****************
 18601 ;; Defined at:
 18602 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18603 ;; Parameters:    Size  Location     Type
 18604 ;;		None
 18605 ;; Auto vars:     Size  Location     Type
 18606 ;;		None
 18607 ;; Return value:  Size  Location     Type
 18608 ;;                  1    wreg      enum E12722
 18609 ;; Registers used:
 18610 ;;		wreg, status,2, status,0, pclath, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : 0/0
 18613 ;;		On exit  : 0/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18620 ;;Total ram usage:        0 bytes
 18621 ;; Hardware stack levels used:    1
 18622 ;; Hardware stack levels required when called:    1
 18623 ;; This function calls:
 18624 ;;		_i2c1_driver_resetBus
 18625 ;; This function is called by:
 18626 ;;		_i2c_ISR
 18627 ;; This function uses a non-reentrant model
 18628 ;;
 18629                           
 18630                           
 18631                           ;psect for function _do_I2C_RESET
 18632  08B9                     _do_I2C_RESET:	
 18633  08B9                     i1l4995:	
 18634                           ;incstack = 0
 18635                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18636                           
 18637                           
 18638                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18639  08B9  3188  2031  3188   	fcall	_i2c1_driver_resetBus
 18640  08BC                     i1l4997:	
 18641                           
 18642                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18643  08BC  0021               	movlb	1	; select bank1
 18644  08BD  1020               	bcf	_i2c_status^(0+128),0
 18645  08BE                     i1l4999:	
 18646                           
 18647                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18648  08BE  01AA               	clrf	(_i2c_status^(0+128)+10)
 18649  08BF                     i1l5001:	
 18650                           
 18651                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18652  08BF  300E               	movlw	14
 18653  08C0                     i1l125:	
 18654  08C0  0008               	return
 18655  08C1                     __end_of_do_I2C_RESET:	
 18656                           
 18657                           	psect	text75
 18658  0D34                     __ptext75:	
 18659 ;; *************** function _do_I2C_TX_EMPTY *****************
 18660 ;; Defined at:
 18661 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18662 ;; Parameters:    Size  Location     Type
 18663 ;;		None
 18664 ;; Auto vars:     Size  Location     Type
 18665 ;;		None
 18666 ;; Return value:  Size  Location     Type
 18667 ;;                  1    wreg      enum E12722
 18668 ;; Registers used:
 18669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18670 ;; Tracked objects:
 18671 ;;		On entry : 0/0
 18672 ;;		On exit  : 0/0
 18673 ;;		Unchanged: 0/0
 18674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18679 ;;Total ram usage:        3 bytes
 18680 ;; Hardware stack levels used:    1
 18681 ;; Hardware stack levels required when called:    3
 18682 ;; This function calls:
 18683 ;;		Absolute function
 18684 ;;		_do_I2C_SEND_RESTART
 18685 ;;		_do_I2C_SEND_STOP
 18686 ;;		_i2c_restartWrite
 18687 ;;		_mssp1_setIRQ
 18688 ;;		_rd1RegCompleteHandler
 18689 ;;		_rd2RegCompleteHandler
 18690 ;;		_rdBlkRegCompleteHandler
 18691 ;;		_returnReset
 18692 ;;		_returnStop
 18693 ;;		_wr1RegCompleteHandler
 18694 ;;		_wr2RegCompleteHandler
 18695 ;; This function is called by:
 18696 ;;		_i2c_ISR
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           
 18701                           ;psect for function _do_I2C_TX_EMPTY
 18702  0D34                     _do_I2C_TX_EMPTY:	
 18703  0D34                     i1l5131:	
 18704                           ;incstack = 0
 18705                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18706                           
 18707                           
 18708                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18709  0D34  0021               	movlb	1	; select bank1
 18710  0D35  1520               	bsf	_i2c_status^(0+128),2
 18711                           
 18712                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18713  0D36  2D44               	goto	i1l5149
 18714  0D37                     i1l5133:	
 18715                           
 18716                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18717  0D37  3188  2071  318D   	fcall	_do_I2C_SEND_RESTART
 18718  0D3A  2D66               	goto	i1l200
 18719  0D3B                     i1l5137:	
 18720                           
 18721                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18722  0D3B  3188  2045  318D   	fcall	_mssp1_setIRQ
 18723  0D3E                     i1l5139:	
 18724                           
 18725                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18726  0D3E  3003               	movlw	3
 18727  0D3F  2D66               	goto	i1l200
 18728  0D40                     i1l5143:	
 18729                           
 18730                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18731  0D40  3188  2076  318D   	fcall	_do_I2C_SEND_STOP
 18732  0D43  2D66               	goto	i1l200
 18733  0D44                     i1l5149:	
 18734  0D44  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18735  0D45  00FA               	movwf	??_do_I2C_TX_EMPTY
 18736  0D46  087A               	movf	??_do_I2C_TX_EMPTY,w
 18737  0D47  00F9               	movwf	rdBlkRegCompleteHandler@p
 18738  0D48  300B               	movlw	11
 18739  0D49  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18740  0D4A  0086               	movwf	6
 18741  0D4B  0187               	clrf	7
 18742  0D4C  3F41               	moviw [1]fsr1
 18743  0D4D  008A               	movwf	10
 18744  0D4E  3F40               	moviw [0]fsr1
 18745  0D4F  000A               	callw
 18746  0D50  318D               	pagesel	$
 18747  0D51  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 18748  0D52  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 18749                           
 18750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18751                           ; Switch size 1, requested type "simple"
 18752                           ; Number of cases is 1, Range of values is 0 to 0
 18753                           ; switch strategies available:
 18754                           ; Name         Instructions Cycles
 18755                           ; simple_byte            4     3 (average)
 18756                           ; direct_byte            8     6 (fixed)
 18757                           ; jumptable            260     6 (fixed)
 18758                           ;	Chosen strategy is simple_byte
 18759  0D53  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 18760  0D54  3A00               	xorlw	0	; case 0
 18761  0D55  1903               	skipnz
 18762  0D56  2D58               	goto	i1l7731
 18763  0D57  2D40               	goto	i1l5143
 18764  0D58                     i1l7731:	
 18765                           
 18766                           ; Switch size 1, requested type "simple"
 18767                           ; Number of cases is 4, Range of values is 1 to 4
 18768                           ; switch strategies available:
 18769                           ; Name         Instructions Cycles
 18770                           ; simple_byte           13     7 (average)
 18771                           ; direct_byte           17     9 (fixed)
 18772                           ; jumptable            263     9 (fixed)
 18773                           ;	Chosen strategy is simple_byte
 18774  0D58  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 18775  0D59  3A01               	xorlw	1	; case 1
 18776  0D5A  1903               	skipnz
 18777  0D5B  2D40               	goto	i1l5143
 18778  0D5C  3A03               	xorlw	3	; case 2
 18779  0D5D  1903               	skipnz
 18780  0D5E  2D37               	goto	i1l5133
 18781  0D5F  3A01               	xorlw	1	; case 3
 18782  0D60  1903               	skipnz
 18783  0D61  2D37               	goto	i1l5133
 18784  0D62  3A07               	xorlw	7	; case 4
 18785  0D63  1903               	skipnz
 18786  0D64  2D3B               	goto	i1l5137
 18787  0D65  2D40               	goto	i1l5143
 18788  0D66                     i1l200:	
 18789  0D66  0008               	return
 18790  0D67                     __end_of_do_I2C_TX_EMPTY:	
 18791                           
 18792                           	psect	text76
 18793  0845                     __ptext76:	
 18794 ;; *************** function _mssp1_setIRQ *****************
 18795 ;; Defined at:
 18796 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 18797 ;; Parameters:    Size  Location     Type
 18798 ;;		None
 18799 ;; Auto vars:     Size  Location     Type
 18800 ;;		None
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  1    wreg      void 
 18803 ;; Registers used:
 18804 ;;		None
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;Total ram usage:        0 bytes
 18815 ;; Hardware stack levels used:    1
 18816 ;; This function calls:
 18817 ;;		Nothing
 18818 ;; This function is called by:
 18819 ;;		_do_I2C_TX_EMPTY
 18820 ;; This function uses a non-reentrant model
 18821 ;;
 18822                           
 18823                           
 18824                           ;psect for function _mssp1_setIRQ
 18825  0845                     _mssp1_setIRQ:	
 18826  0845                     i1l4771:	
 18827                           ;incstack = 0
 18828                           ; Regs used in _mssp1_setIRQ: []
 18829                           
 18830                           
 18831                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 18832  0845  002E               	movlb	14	; select bank14
 18833  0846  140F               	bsf	15,0	;volatile
 18834  0847                     i1l579:	
 18835  0847  0008               	return
 18836  0848                     __end_of_mssp1_setIRQ:	
 18837                           
 18838                           	psect	text77
 18839  08B1                     __ptext77:	
 18840 ;; *************** function _i2c1_driver_isNACK *****************
 18841 ;; Defined at:
 18842 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;		None
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;		None
 18847 ;; Return value:  Size  Location     Type
 18848 ;;		None               void
 18849 ;; Registers used:
 18850 ;;		wreg, status,2, status,0
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/0
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18860 ;;Total ram usage:        1 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_do_I2C_TX
 18866 ;;		_i2c_ISR
 18867 ;; This function uses a non-reentrant model
 18868 ;;
 18869                           
 18870                           
 18871                           ;psect for function _i2c1_driver_isNACK
 18872  08B1                     _i2c1_driver_isNACK:	
 18873  08B1                     i1l4763:	
 18874                           ;incstack = 0
 18875                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18876                           
 18877                           
 18878                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 18879  08B1  0023               	movlb	3	; select bank3
 18880  08B2  0E11               	swapf	17,w	;volatile
 18881  08B3  0C89               	rrf	9,f
 18882  08B4  0C89               	rrf	9,f
 18883  08B5  3901               	andlw	1
 18884  08B6  00F0               	movwf	??_i2c1_driver_isNACK
 18885  08B7  0C70               	rrf	??_i2c1_driver_isNACK,w
 18886  08B8                     i1l614:	
 18887  08B8  0008               	return
 18888  08B9                     __end_of_i2c1_driver_isNACK:	
 18889                           
 18890                           	psect	text78
 18891  085D                     __ptext78:	
 18892 ;; *************** function _i2c1_driver_TXData *****************
 18893 ;; Defined at:
 18894 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 18895 ;; Parameters:    Size  Location     Type
 18896 ;;  d               1    wreg     unsigned char 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;  d               1    0[COMMON] unsigned char 
 18899 ;; Return value:  Size  Location     Type
 18900 ;;                  1    wreg      void 
 18901 ;; Registers used:
 18902 ;;		wreg
 18903 ;; Tracked objects:
 18904 ;;		On entry : 0/0
 18905 ;;		On exit  : 0/0
 18906 ;;		Unchanged: 0/0
 18907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18912 ;;Total ram usage:        1 bytes
 18913 ;; Hardware stack levels used:    1
 18914 ;; This function calls:
 18915 ;;		Nothing
 18916 ;; This function is called by:
 18917 ;;		_do_I2C_SEND_ADR_READ
 18918 ;;		_do_I2C_SEND_ADR_WRITE
 18919 ;;		_do_I2C_TX
 18920 ;; This function uses a non-reentrant model
 18921 ;;
 18922                           
 18923                           
 18924                           ;psect for function _i2c1_driver_TXData
 18925  085D                     _i2c1_driver_TXData:	
 18926                           
 18927                           ;incstack = 0
 18928                           ; Regs used in _i2c1_driver_TXData: [wreg]
 18929                           ;i2c1_driver_TXData@d stored from wreg
 18930  085D  00F0               	movwf	i2c1_driver_TXData@d
 18931  085E                     i1l4745:	
 18932                           
 18933                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 18934  085E  0870               	movf	i2c1_driver_TXData@d,w
 18935  085F  0023               	movlb	3	; select bank3
 18936  0860  008C               	movwf	12	;volatile
 18937  0861                     i1l629:	
 18938  0861  0008               	return
 18939  0862                     __end_of_i2c1_driver_TXData:	
 18940                           
 18941                           	psect	text79
 18942  0842                     __ptext79:	
 18943 ;; *************** function _i2c1_driver_getRXData *****************
 18944 ;; Defined at:
 18945 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;		None
 18948 ;; Auto vars:     Size  Location     Type
 18949 ;;		None
 18950 ;; Return value:  Size  Location     Type
 18951 ;;                  1    wreg      unsigned char 
 18952 ;; Registers used:
 18953 ;;		wreg
 18954 ;; Tracked objects:
 18955 ;;		On entry : 0/0
 18956 ;;		On exit  : 0/0
 18957 ;;		Unchanged: 0/0
 18958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18963 ;;Total ram usage:        0 bytes
 18964 ;; Hardware stack levels used:    1
 18965 ;; This function calls:
 18966 ;;		Nothing
 18967 ;; This function is called by:
 18968 ;;		_do_I2C_RX
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           
 18973                           ;psect for function _i2c1_driver_getRXData
 18974  0842                     _i2c1_driver_getRXData:	
 18975  0842                     i1l4767:	
 18976                           ;incstack = 0
 18977                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 18978                           
 18979                           
 18980                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 18981  0842  0023               	movlb	3	; select bank3
 18982  0843  080C               	movf	12,w	;volatile
 18983  0844                     i1l620:	
 18984  0844  0008               	return
 18985  0845                     __end_of_i2c1_driver_getRXData:	
 18986                           
 18987                           	psect	text80
 18988  0855                     __ptext80:	
 18989 ;; *************** function _i2c1_driver_sendNACK *****************
 18990 ;; Defined at:
 18991 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 18992 ;; Parameters:    Size  Location     Type
 18993 ;;		None
 18994 ;; Auto vars:     Size  Location     Type
 18995 ;;		None
 18996 ;; Return value:  Size  Location     Type
 18997 ;;                  1    wreg      void 
 18998 ;; Registers used:
 18999 ;;		None
 19000 ;; Tracked objects:
 19001 ;;		On entry : 0/0
 19002 ;;		On exit  : 0/0
 19003 ;;		Unchanged: 0/0
 19004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19009 ;;Total ram usage:        0 bytes
 19010 ;; Hardware stack levels used:    1
 19011 ;; This function calls:
 19012 ;;		Nothing
 19013 ;; This function is called by:
 19014 ;;		_do_I2C_DO_NACK_STOP
 19015 ;;		_do_I2C_DO_NACK_RESTART
 19016 ;; This function uses a non-reentrant model
 19017 ;;
 19018                           
 19019                           
 19020                           ;psect for function _i2c1_driver_sendNACK
 19021  0855                     _i2c1_driver_sendNACK:	
 19022  0855                     i1l4583:	
 19023                           ;incstack = 0
 19024                           ; Regs used in _i2c1_driver_sendNACK: []
 19025                           
 19026                           
 19027                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 19028  0855  0023               	movlb	3	; select bank3
 19029  0856  1691               	bsf	17,5	;volatile
 19030                           
 19031                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 19032  0857  1611               	bsf	17,4	;volatile
 19033  0858                     i1l638:	
 19034  0858  0008               	return
 19035  0859                     __end_of_i2c1_driver_sendNACK:	
 19036                           
 19037                           	psect	text81
 19038  0831                     __ptext81:	
 19039 ;; *************** function _i2c1_driver_resetBus *****************
 19040 ;; Defined at:
 19041 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;		None
 19044 ;; Auto vars:     Size  Location     Type
 19045 ;;		None
 19046 ;; Return value:  Size  Location     Type
 19047 ;;                  1    wreg      void 
 19048 ;; Registers used:
 19049 ;;		None
 19050 ;; Tracked objects:
 19051 ;;		On entry : 0/0
 19052 ;;		On exit  : 0/0
 19053 ;;		Unchanged: 0/0
 19054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19059 ;;Total ram usage:        0 bytes
 19060 ;; Hardware stack levels used:    1
 19061 ;; This function calls:
 19062 ;;		Nothing
 19063 ;; This function is called by:
 19064 ;;		_do_I2C_RESET
 19065 ;; This function uses a non-reentrant model
 19066 ;;
 19067                           
 19068                           
 19069                           ;psect for function _i2c1_driver_resetBus
 19070  0831                     _i2c1_driver_resetBus:	
 19071  0831                     i1l602:	
 19072                           ;incstack = 0
 19073                           ; Regs used in _i2c1_driver_resetBus: []
 19074                           
 19075  0831  0008               	return
 19076  0832                     __end_of_i2c1_driver_resetBus:	
 19077                           
 19078                           	psect	text82
 19079  083F                     __ptext82:	
 19080 ;; *************** function _i2c1_driver_startRX *****************
 19081 ;; Defined at:
 19082 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 19083 ;; Parameters:    Size  Location     Type
 19084 ;;		None
 19085 ;; Auto vars:     Size  Location     Type
 19086 ;;		None
 19087 ;; Return value:  Size  Location     Type
 19088 ;;                  1    wreg      void 
 19089 ;; Registers used:
 19090 ;;		None
 19091 ;; Tracked objects:
 19092 ;;		On entry : 0/0
 19093 ;;		On exit  : 0/0
 19094 ;;		Unchanged: 0/0
 19095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;Total ram usage:        0 bytes
 19101 ;; Hardware stack levels used:    1
 19102 ;; This function calls:
 19103 ;;		Nothing
 19104 ;; This function is called by:
 19105 ;;		_do_I2C_RCEN
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109                           
 19110                           ;psect for function _i2c1_driver_startRX
 19111  083F                     _i2c1_driver_startRX:	
 19112  083F                     i1l4747:	
 19113                           ;incstack = 0
 19114                           ; Regs used in _i2c1_driver_startRX: []
 19115                           
 19116                           
 19117                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 19118  083F  0023               	movlb	3	; select bank3
 19119  0840  1591               	bsf	17,3	;volatile
 19120  0841                     i1l617:	
 19121  0841  0008               	return
 19122  0842                     __end_of_i2c1_driver_startRX:	
 19123                           
 19124                           	psect	text83
 19125  0AA9                     __ptext83:	
 19126 ;; *************** function _rdBlkRegCompleteHandler *****************
 19127 ;; Defined at:
 19128 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19129 ;; Parameters:    Size  Location     Type
 19130 ;;  p               1    9[COMMON] PTR void 
 19131 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19132 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19133 ;; Auto vars:     Size  Location     Type
 19134 ;;		None
 19135 ;; Return value:  Size  Location     Type
 19136 ;;                  1    wreg      enum E358
 19137 ;; Registers used:
 19138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;Total ram usage:        1 bytes
 19149 ;; Hardware stack levels used:    1
 19150 ;; Hardware stack levels required when called:    2
 19151 ;; This function calls:
 19152 ;;		_i2c_setBuffer
 19153 ;;		_i2c_setDataCompleteCallback
 19154 ;; This function is called by:
 19155 ;;		_i2c_readDataBlock
 19156 ;;		_do_I2C_DO_ADDRESS_NACK
 19157 ;;		_do_I2C_TX
 19158 ;;		_do_I2C_RX
 19159 ;;		_do_I2C_TX_EMPTY
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           
 19164                           ;psect for function _rdBlkRegCompleteHandler
 19165  0AA9                     _rdBlkRegCompleteHandler:	
 19166  0AA9                     i1l4813:	
 19167                           ;incstack = 0
 19168                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19169                           
 19170                           
 19171                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 19172  0AA9  0879               	movf	rdBlkRegCompleteHandler@p,w
 19173  0AAA  0086               	movwf	6
 19174  0AAB  0187               	clrf	7
 19175  0AAC  3F40               	moviw [0]fsr1
 19176  0AAD  00F0               	movwf	i2c_setBuffer@bufferSize
 19177  0AAE  3F41               	moviw [1]fsr1
 19178  0AAF  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19179  0AB0  0879               	movf	rdBlkRegCompleteHandler@p,w
 19180  0AB1  3E02               	addlw	2
 19181  0AB2  0086               	movwf	6
 19182  0AB3  0187               	clrf	7
 19183  0AB4  0801               	movf	1,w
 19184  0AB5  3189  21C6  318A   	fcall	_i2c_setBuffer
 19185                           
 19186                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19187  0AB8  3000               	movlw	0
 19188  0AB9  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19189  0ABA  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19190  0ABB  01F7               	clrf	i2c_setDataCompleteCallback@p
 19191  0ABC  3189  2171  318A   	fcall	_i2c_setDataCompleteCallback
 19192  0ABF                     i1l4815:	
 19193                           
 19194                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 19195  0ABF  3002               	movlw	2
 19196  0AC0                     i1l303:	
 19197  0AC0  0008               	return
 19198  0AC1                     __end_of_rdBlkRegCompleteHandler:	
 19199                           
 19200                           	psect	text84
 19201  0A2A                     __ptext84:	
 19202 ;; *************** function _rd2RegCompleteHandler *****************
 19203 ;; Defined at:
 19204 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19205 ;; Parameters:    Size  Location     Type
 19206 ;;  p               1    9[COMMON] PTR void 
 19207 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19208 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  1    wreg      enum E358
 19213 ;; Registers used:
 19214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19220 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19224 ;;Total ram usage:        1 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; Hardware stack levels required when called:    2
 19227 ;; This function calls:
 19228 ;;		_i2c_setBuffer
 19229 ;;		_i2c_setDataCompleteCallback
 19230 ;; This function is called by:
 19231 ;;		_i2c_read2ByteRegister
 19232 ;;		_do_I2C_DO_ADDRESS_NACK
 19233 ;;		_do_I2C_TX
 19234 ;;		_do_I2C_RX
 19235 ;;		_do_I2C_TX_EMPTY
 19236 ;; This function uses a non-reentrant model
 19237 ;;
 19238                           
 19239                           
 19240                           ;psect for function _rd2RegCompleteHandler
 19241  0A2A                     _rd2RegCompleteHandler:	
 19242  0A2A                     i1l4797:	
 19243                           ;incstack = 0
 19244                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19245                           
 19246                           
 19247                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 19248  0A2A  3002               	movlw	2
 19249  0A2B  00F0               	movwf	i2c_setBuffer@bufferSize
 19250  0A2C  3000               	movlw	0
 19251  0A2D  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19252  0A2E  0879               	movf	rd2RegCompleteHandler@p,w
 19253  0A2F  3189  21C6  318A   	fcall	_i2c_setBuffer
 19254  0A32                     i1l4799:	
 19255                           
 19256                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19257  0A32  3000               	movlw	0
 19258  0A33  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19259  0A34  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19260  0A35  01F7               	clrf	i2c_setDataCompleteCallback@p
 19261  0A36  3189  2171  318A   	fcall	_i2c_setDataCompleteCallback
 19262  0A39                     i1l4801:	
 19263                           
 19264                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 19265  0A39  3002               	movlw	2
 19266  0A3A                     i1l279:	
 19267  0A3A  0008               	return
 19268  0A3B                     __end_of_rd2RegCompleteHandler:	
 19269                           
 19270                           	psect	text85
 19271  0A19                     __ptext85:	
 19272 ;; *************** function _rd1RegCompleteHandler *****************
 19273 ;; Defined at:
 19274 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19275 ;; Parameters:    Size  Location     Type
 19276 ;;  p               1    9[COMMON] PTR void 
 19277 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19278 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;		None
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      enum E358
 19283 ;; Registers used:
 19284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19294 ;;Total ram usage:        1 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; Hardware stack levels required when called:    2
 19297 ;; This function calls:
 19298 ;;		_i2c_setBuffer
 19299 ;;		_i2c_setDataCompleteCallback
 19300 ;; This function is called by:
 19301 ;;		_i2c_read1ByteRegister
 19302 ;;		_do_I2C_DO_ADDRESS_NACK
 19303 ;;		_do_I2C_TX
 19304 ;;		_do_I2C_RX
 19305 ;;		_do_I2C_TX_EMPTY
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           
 19310                           ;psect for function _rd1RegCompleteHandler
 19311  0A19                     _rd1RegCompleteHandler:	
 19312  0A19                     i1l4789:	
 19313                           ;incstack = 0
 19314                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19315                           
 19316                           
 19317                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 19318  0A19  3001               	movlw	1
 19319  0A1A  00F0               	movwf	i2c_setBuffer@bufferSize
 19320  0A1B  3000               	movlw	0
 19321  0A1C  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19322  0A1D  0879               	movf	rd1RegCompleteHandler@p,w
 19323  0A1E  3189  21C6  318A   	fcall	_i2c_setBuffer
 19324  0A21                     i1l4791:	
 19325                           
 19326                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19327  0A21  3000               	movlw	0
 19328  0A22  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19329  0A23  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19330  0A24  01F7               	clrf	i2c_setDataCompleteCallback@p
 19331  0A25  3189  2171  318A   	fcall	_i2c_setDataCompleteCallback
 19332  0A28                     i1l4793:	
 19333                           
 19334                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 19335  0A28  3002               	movlw	2
 19336  0A29                     i1l264:	
 19337  0A29  0008               	return
 19338  0A2A                     __end_of_rd1RegCompleteHandler:	
 19339                           
 19340                           	psect	text86
 19341  0A08                     __ptext86:	
 19342 ;; *************** function _wr1RegCompleteHandler *****************
 19343 ;; Defined at:
 19344 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19345 ;; Parameters:    Size  Location     Type
 19346 ;;  p               1    9[COMMON] PTR void 
 19347 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19348 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19349 ;; Auto vars:     Size  Location     Type
 19350 ;;		None
 19351 ;; Return value:  Size  Location     Type
 19352 ;;                  1    wreg      enum E358
 19353 ;; Registers used:
 19354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19355 ;; Tracked objects:
 19356 ;;		On entry : 0/0
 19357 ;;		On exit  : 0/0
 19358 ;;		Unchanged: 0/0
 19359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19360 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19364 ;;Total ram usage:        1 bytes
 19365 ;; Hardware stack levels used:    1
 19366 ;; Hardware stack levels required when called:    2
 19367 ;; This function calls:
 19368 ;;		_i2c_setBuffer
 19369 ;;		_i2c_setDataCompleteCallback
 19370 ;; This function is called by:
 19371 ;;		_i2c_write1ByteRegister
 19372 ;;		_do_I2C_DO_ADDRESS_NACK
 19373 ;;		_do_I2C_TX
 19374 ;;		_do_I2C_RX
 19375 ;;		_do_I2C_TX_EMPTY
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           
 19380                           ;psect for function _wr1RegCompleteHandler
 19381  0A08                     _wr1RegCompleteHandler:	
 19382  0A08                     i1l4781:	
 19383                           ;incstack = 0
 19384                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19385                           
 19386                           
 19387                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 19388  0A08  3001               	movlw	1
 19389  0A09  00F0               	movwf	i2c_setBuffer@bufferSize
 19390  0A0A  3000               	movlw	0
 19391  0A0B  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19392  0A0C  0879               	movf	wr1RegCompleteHandler@p,w
 19393  0A0D  3189  21C6  318A   	fcall	_i2c_setBuffer
 19394  0A10                     i1l4783:	
 19395                           
 19396                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19397  0A10  3000               	movlw	0
 19398  0A11  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19399  0A12  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19400  0A13  01F7               	clrf	i2c_setDataCompleteCallback@p
 19401  0A14  3189  2171  318A   	fcall	_i2c_setDataCompleteCallback
 19402  0A17                     i1l4785:	
 19403                           
 19404                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 19405  0A17  3004               	movlw	4
 19406  0A18                     i1l243:	
 19407  0A18  0008               	return
 19408  0A19                     __end_of_wr1RegCompleteHandler:	
 19409                           
 19410                           	psect	text87
 19411  0002                     __ptext87:	
 19412 ;; *************** function _returnReset *****************
 19413 ;; Defined at:
 19414 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19415 ;; Parameters:    Size  Location     Type
 19416 ;;  p               1    9[COMMON] PTR void 
 19417 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19418 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19419 ;; Auto vars:     Size  Location     Type
 19420 ;;		None
 19421 ;; Return value:  Size  Location     Type
 19422 ;;                  1    wreg      enum E12568
 19423 ;; Registers used:
 19424 ;;		wreg
 19425 ;; Tracked objects:
 19426 ;;		On entry : 0/0
 19427 ;;		On exit  : 0/0
 19428 ;;		Unchanged: 0/0
 19429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19430 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19434 ;;Total ram usage:        1 bytes
 19435 ;; Hardware stack levels used:    1
 19436 ;; This function calls:
 19437 ;;		Nothing
 19438 ;; This function is called by:
 19439 ;;		_i2c_open
 19440 ;;		_do_I2C_DO_ADDRESS_NACK
 19441 ;;		_do_I2C_TX
 19442 ;;		_do_I2C_RX
 19443 ;;		_do_I2C_TX_EMPTY
 19444 ;; This function uses a non-reentrant model
 19445 ;;
 19446                           
 19447                           
 19448                           ;psect for function _returnReset
 19449  0002                     _returnReset:	
 19450  0002                     i1l4777:	
 19451                           ;incstack = 0
 19452                           ; Regs used in _returnReset: [wreg]
 19453                           
 19454                           
 19455                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19456  0002  3005               	movlw	5
 19457  0003                     i1l219:	
 19458  0003  0008               	return
 19459  0004                     __end_of_returnReset:	
 19460                           
 19461                           	psect	text88
 19462  0834                     __ptext88:	
 19463 ;; *************** function _returnStop *****************
 19464 ;; Defined at:
 19465 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19466 ;; Parameters:    Size  Location     Type
 19467 ;;  p               1    9[COMMON] PTR void 
 19468 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19469 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19470 ;; Auto vars:     Size  Location     Type
 19471 ;;		None
 19472 ;; Return value:  Size  Location     Type
 19473 ;;                  1    wreg      enum E12568
 19474 ;; Registers used:
 19475 ;;		wreg
 19476 ;; Tracked objects:
 19477 ;;		On entry : 0/0
 19478 ;;		On exit  : 0/0
 19479 ;;		Unchanged: 0/0
 19480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19481 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19485 ;;Total ram usage:        1 bytes
 19486 ;; Hardware stack levels used:    1
 19487 ;; This function calls:
 19488 ;;		Nothing
 19489 ;; This function is called by:
 19490 ;;		_setCallBack
 19491 ;;		_i2c_open
 19492 ;;		_do_I2C_DO_ADDRESS_NACK
 19493 ;;		_do_I2C_TX
 19494 ;;		_do_I2C_RX
 19495 ;;		_do_I2C_TX_EMPTY
 19496 ;; This function uses a non-reentrant model
 19497 ;;
 19498                           
 19499                           
 19500                           ;psect for function _returnStop
 19501  0834                     _returnStop:	
 19502  0834                     i1l4773:	
 19503                           ;incstack = 0
 19504                           ; Regs used in _returnStop: [wreg]
 19505                           
 19506                           
 19507                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 19508  0834  3001               	movlw	1
 19509  0835                     i1l216:	
 19510  0835  0008               	return
 19511  0836                     __end_of_returnStop:	
 19512                           
 19513                           	psect	text89
 19514  0832                     __ptext89:	
 19515 ;; *************** function _i2c_restartWrite *****************
 19516 ;; Defined at:
 19517 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19518 ;; Parameters:    Size  Location     Type
 19519 ;;  p               1    9[COMMON] PTR void 
 19520 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19521 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19522 ;; Auto vars:     Size  Location     Type
 19523 ;;		None
 19524 ;; Return value:  Size  Location     Type
 19525 ;;                  1    wreg      enum E358
 19526 ;; Registers used:
 19527 ;;		wreg
 19528 ;; Tracked objects:
 19529 ;;		On entry : 0/0
 19530 ;;		On exit  : 0/0
 19531 ;;		Unchanged: 0/0
 19532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19533 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;Total ram usage:        1 bytes
 19538 ;; Hardware stack levels used:    1
 19539 ;; This function calls:
 19540 ;;		Nothing
 19541 ;; This function is called by:
 19542 ;;		_i2c_write1ByteRegister
 19543 ;;		_i2c_writeNBytes
 19544 ;;		_i2c_read1ByteRegister
 19545 ;;		_i2c_read2ByteRegister
 19546 ;;		_i2c_write2ByteRegister
 19547 ;;		_i2c_readDataBlock
 19548 ;;		_do_I2C_DO_ADDRESS_NACK
 19549 ;;		_do_I2C_TX
 19550 ;;		_do_I2C_RX
 19551 ;;		_do_I2C_TX_EMPTY
 19552 ;; This function uses a non-reentrant model
 19553 ;;
 19554                           
 19555                           
 19556                           ;psect for function _i2c_restartWrite
 19557  0832                     _i2c_restartWrite:	
 19558  0832                     i1l4709:	
 19559                           ;incstack = 0
 19560                           ; Regs used in _i2c_restartWrite: [wreg]
 19561                           
 19562                           
 19563                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 19564  0832  3003               	movlw	3
 19565  0833                     i1l9:	
 19566  0833  0008               	return
 19567  0834                     __end_of_i2c_restartWrite:	
 19568                           
 19569                           	psect	text90
 19570  09F7                     __ptext90:	
 19571 ;; *************** function _wr2RegCompleteHandler *****************
 19572 ;; Defined at:
 19573 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19574 ;; Parameters:    Size  Location     Type
 19575 ;;  p               1    9[COMMON] PTR void 
 19576 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19577 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19578 ;; Auto vars:     Size  Location     Type
 19579 ;;		None
 19580 ;; Return value:  Size  Location     Type
 19581 ;;                  1    wreg      enum E358
 19582 ;; Registers used:
 19583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19584 ;; Tracked objects:
 19585 ;;		On entry : 0/0
 19586 ;;		On exit  : 0/0
 19587 ;;		Unchanged: 0/0
 19588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19589 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19593 ;;Total ram usage:        1 bytes
 19594 ;; Hardware stack levels used:    1
 19595 ;; Hardware stack levels required when called:    2
 19596 ;; This function calls:
 19597 ;;		_i2c_setBuffer
 19598 ;;		_i2c_setDataCompleteCallback
 19599 ;; This function is called by:
 19600 ;;		_i2c_write2ByteRegister
 19601 ;;		_do_I2C_DO_ADDRESS_NACK
 19602 ;;		_do_I2C_TX
 19603 ;;		_do_I2C_RX
 19604 ;;		_do_I2C_TX_EMPTY
 19605 ;; This function uses a non-reentrant model
 19606 ;;
 19607                           
 19608                           
 19609                           ;psect for function _wr2RegCompleteHandler
 19610  09F7                     _wr2RegCompleteHandler:	
 19611  09F7                     i1l4805:	
 19612                           ;incstack = 0
 19613                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19614                           
 19615                           
 19616                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 19617  09F7  3002               	movlw	2
 19618  09F8  00F0               	movwf	i2c_setBuffer@bufferSize
 19619  09F9  3000               	movlw	0
 19620  09FA  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19621  09FB  0879               	movf	wr2RegCompleteHandler@p,w
 19622  09FC  3189  21C6  3189   	fcall	_i2c_setBuffer
 19623  09FF                     i1l4807:	
 19624                           
 19625                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19626  09FF  3000               	movlw	0
 19627  0A00  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19628  0A01  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19629  0A02  01F7               	clrf	i2c_setDataCompleteCallback@p
 19630  0A03  3189  2171  3189   	fcall	_i2c_setDataCompleteCallback
 19631  0A06                     i1l4809:	
 19632                           
 19633                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 19634  0A06  3004               	movlw	4
 19635  0A07                     i1l291:	
 19636  0A07  0008               	return
 19637  0A08                     __end_of_wr2RegCompleteHandler:	
 19638                           
 19639                           	psect	text91
 19640  0971                     __ptext91:	
 19641 ;; *************** function _i2c_setDataCompleteCallback *****************
 19642 ;; Defined at:
 19643 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19646 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19647 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 19648 ;;  p               1    7[COMMON] PTR void 
 19649 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19650 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;		None
 19653 ;; Return value:  Size  Location     Type
 19654 ;;                  1    wreg      void 
 19655 ;; Registers used:
 19656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19657 ;; Tracked objects:
 19658 ;;		On entry : 0/0
 19659 ;;		On exit  : 0/0
 19660 ;;		Unchanged: 0/0
 19661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19666 ;;Total ram usage:        4 bytes
 19667 ;; Hardware stack levels used:    1
 19668 ;; Hardware stack levels required when called:    1
 19669 ;; This function calls:
 19670 ;;		_setCallBack
 19671 ;; This function is called by:
 19672 ;;		_wr1RegCompleteHandler
 19673 ;;		_rd1RegCompleteHandler
 19674 ;;		_rd2RegCompleteHandler
 19675 ;;		_wr2RegCompleteHandler
 19676 ;;		_rdBlkRegCompleteHandler
 19677 ;;		_i2c_write1ByteRegister
 19678 ;;		_i2c_read1ByteRegister
 19679 ;;		_i2c_read2ByteRegister
 19680 ;;		_i2c_write2ByteRegister
 19681 ;;		_i2c_readDataBlock
 19682 ;; This function uses a non-reentrant model
 19683 ;;
 19684                           
 19685                           
 19686                           ;psect for function _i2c_setDataCompleteCallback
 19687  0971                     _i2c_setDataCompleteCallback:	
 19688  0971                     i1l4571:	
 19689                           ;incstack = 0
 19690                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19691                           
 19692                           
 19693                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 19694  0971  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 19695  0972  00F1               	movwf	setCallBack@cb+1
 19696  0973  0875               	movf	i2c_setDataCompleteCallback@cb,w
 19697  0974  00F0               	movwf	setCallBack@cb
 19698  0975  0877               	movf	i2c_setDataCompleteCallback@p,w
 19699  0976  00F8               	movwf	??_i2c_setDataCompleteCallback
 19700  0977  0878               	movf	??_i2c_setDataCompleteCallback,w
 19701  0978  00F2               	movwf	setCallBack@p
 19702  0979  3000               	movlw	0
 19703  097A  3187  27D5  3189   	fcall	_setCallBack
 19704  097D                     i1l73:	
 19705  097D  0008               	return
 19706  097E                     __end_of_i2c_setDataCompleteCallback:	
 19707                           
 19708                           	psect	text92
 19709  07D5                     __ptext92:	
 19710 ;; *************** function _setCallBack *****************
 19711 ;; Defined at:
 19712 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 19713 ;; Parameters:    Size  Location     Type
 19714 ;;  idx             1    wreg     enum E12740
 19715 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 19716 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19717 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 19718 ;;  p               1    2[COMMON] PTR void 
 19719 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19720 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;  idx             1    4[COMMON] enum E12740
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1    wreg      void 
 19725 ;; Registers used:
 19726 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19727 ;; Tracked objects:
 19728 ;;		On entry : 0/0
 19729 ;;		On exit  : 0/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19735 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19736 ;;Total ram usage:        5 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; This function calls:
 19739 ;;		Nothing
 19740 ;; This function is called by:
 19741 ;;		_i2c_setDataCompleteCallback
 19742 ;;		_i2c_setWriteCollisionCallback
 19743 ;;		_i2c_setAddressNACKCallback
 19744 ;;		_i2c_setDataNACKCallback
 19745 ;;		_i2c_setTimeOutCallback
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           
 19750                           ;psect for function _setCallBack
 19751  07D5                     _setCallBack:	
 19752                           
 19753                           ;incstack = 0
 19754                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 19755                           ;setCallBack@idx stored from wreg
 19756  07D5  00F4               	movwf	setCallBack@idx
 19757  07D6                     i1l4483:	
 19758                           
 19759                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 19760  07D6  0870               	movf	setCallBack@cb,w
 19761  07D7  0471               	iorwf	setCallBack@cb+1,w
 19762  07D8  1903               	btfsc	3,2
 19763  07D9  2FDB               	goto	u188_21
 19764  07DA  2FDC               	goto	u188_20
 19765  07DB                     u188_21:	
 19766  07DB  2FED               	goto	i1l4487
 19767  07DC                     u188_20:	
 19768  07DC                     i1l4485:	
 19769                           
 19770                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 19771  07DC  3574               	lslf	setCallBack@idx,w
 19772  07DD  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19773  07DE  0086               	movwf	6
 19774  07DF  0187               	clrf	7
 19775  07E0  0870               	movf	setCallBack@cb,w
 19776  07E1  3FC0               	movwi [0]fsr1
 19777  07E2  0871               	movf	setCallBack@cb+1,w
 19778  07E3  3FC1               	movwi [1]fsr1
 19779                           
 19780                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 19781  07E4  0872               	movf	setCallBack@p,w
 19782  07E5  00F3               	movwf	??_setCallBack
 19783  07E6  0874               	movf	setCallBack@idx,w
 19784  07E7  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19785  07E8  0086               	movwf	6
 19786  07E9  0187               	clrf	7
 19787  07EA  0873               	movf	??_setCallBack,w
 19788  07EB  0081               	movwf	1
 19789                           
 19790                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 19791  07EC  2FFA               	goto	i1l224
 19792  07ED                     i1l4487:	
 19793                           
 19794                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 19795  07ED  3574               	lslf	setCallBack@idx,w
 19796  07EE  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19797  07EF  0086               	movwf	6
 19798  07F0  0187               	clrf	7
 19799  07F1  3034               	movlw	low _returnStop
 19800  07F2  3FC0               	movwi [0]fsr1
 19801  07F3  3008               	movlw	high _returnStop
 19802  07F4  3FC1               	movwi [1]fsr1
 19803                           
 19804                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 19805  07F5  0874               	movf	setCallBack@idx,w
 19806  07F6  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19807  07F7  0086               	movwf	6
 19808  07F8  0187               	clrf	7
 19809  07F9  0181               	clrf	1
 19810  07FA                     i1l224:	
 19811  07FA  0008               	return
 19812  07FB                     __end_of_setCallBack:	
 19813                           
 19814                           	psect	text93
 19815  09C6                     __ptext93:	
 19816 ;; *************** function _i2c_setBuffer *****************
 19817 ;; Defined at:
 19818 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19819 ;; Parameters:    Size  Location     Type
 19820 ;;  buffer          1    wreg     PTR void 
 19821 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19822 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19823 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19824 ;;  bufferSize      2    0[COMMON] unsigned int 
 19825 ;; Auto vars:     Size  Location     Type
 19826 ;;  buffer          1    3[COMMON] PTR void 
 19827 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19828 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19829 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19830 ;; Return value:  Size  Location     Type
 19831 ;;                  1    wreg      void 
 19832 ;; Registers used:
 19833 ;;		wreg
 19834 ;; Tracked objects:
 19835 ;;		On entry : 0/0
 19836 ;;		On exit  : 0/0
 19837 ;;		Unchanged: 0/0
 19838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19843 ;;Total ram usage:        4 bytes
 19844 ;; Hardware stack levels used:    1
 19845 ;; This function calls:
 19846 ;;		Nothing
 19847 ;; This function is called by:
 19848 ;;		_wr1RegCompleteHandler
 19849 ;;		_rd1RegCompleteHandler
 19850 ;;		_rd2RegCompleteHandler
 19851 ;;		_wr2RegCompleteHandler
 19852 ;;		_rdBlkRegCompleteHandler
 19853 ;;		_i2c_write1ByteRegister
 19854 ;;		_i2c_writeNBytes
 19855 ;;		_i2c_read1ByteRegister
 19856 ;;		_i2c_read2ByteRegister
 19857 ;;		_i2c_write2ByteRegister
 19858 ;;		_i2c_readDataBlock
 19859 ;;		_i2c_readNBytes
 19860 ;; This function uses a non-reentrant model
 19861 ;;
 19862                           
 19863                           
 19864                           ;psect for function _i2c_setBuffer
 19865  09C6                     _i2c_setBuffer:	
 19866                           
 19867                           ;incstack = 0
 19868                           ; Regs used in _i2c_setBuffer: [wreg]
 19869                           ;i2c_setBuffer@buffer stored from wreg
 19870  09C6  00F3               	movwf	i2c_setBuffer@buffer
 19871  09C7                     i1l4573:	
 19872                           
 19873                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 19874  09C7  0021               	movlb	1	; select bank1
 19875  09C8  1D20               	btfss	_i2c_status^(0+128),2
 19876  09C9  29CB               	goto	u208_21
 19877  09CA  29CC               	goto	u208_20
 19878  09CB                     u208_21:	
 19879  09CB  29D5               	goto	i1l103
 19880  09CC                     u208_20:	
 19881  09CC                     i1l4575:	
 19882                           
 19883                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 19884  09CC  0873               	movf	i2c_setBuffer@buffer,w
 19885  09CD  00F2               	movwf	??_i2c_setBuffer
 19886  09CE  0872               	movf	??_i2c_setBuffer,w
 19887  09CF  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 19888                           
 19889                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 19890  09D0  0871               	movf	i2c_setBuffer@bufferSize+1,w
 19891  09D1  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 19892  09D2  0870               	movf	i2c_setBuffer@bufferSize,w
 19893  09D3  00A3               	movwf	(_i2c_status^(0+128)+3)
 19894  09D4                     i1l4577:	
 19895                           
 19896                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 19897  09D4  1120               	bcf	_i2c_status^(0+128),2
 19898  09D5                     i1l103:	
 19899  09D5  0008               	return
 19900  09D6                     __end_of_i2c_setBuffer:	
 19901                           
 19902                           	psect	text94
 19903  083C                     __ptext94:	
 19904 ;; *************** function _i2c1_driver_stop *****************
 19905 ;; Defined at:
 19906 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 19907 ;; Parameters:    Size  Location     Type
 19908 ;;		None
 19909 ;; Auto vars:     Size  Location     Type
 19910 ;;		None
 19911 ;; Return value:  Size  Location     Type
 19912 ;;                  1    wreg      void 
 19913 ;; Registers used:
 19914 ;;		None
 19915 ;; Tracked objects:
 19916 ;;		On entry : 0/0
 19917 ;;		On exit  : 0/0
 19918 ;;		Unchanged: 0/0
 19919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19924 ;;Total ram usage:        0 bytes
 19925 ;; Hardware stack levels used:    1
 19926 ;; This function calls:
 19927 ;;		Nothing
 19928 ;; This function is called by:
 19929 ;;		_do_I2C_SEND_STOP
 19930 ;; This function uses a non-reentrant model
 19931 ;;
 19932                           
 19933                           
 19934                           ;psect for function _i2c1_driver_stop
 19935  083C                     _i2c1_driver_stop:	
 19936  083C                     i1l4581:	
 19937                           ;incstack = 0
 19938                           ; Regs used in _i2c1_driver_stop: []
 19939                           
 19940                           
 19941                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 19942  083C  0023               	movlb	3	; select bank3
 19943  083D  1511               	bsf	17,2	;volatile
 19944  083E                     i1l611:	
 19945  083E  0008               	return
 19946  083F                     __end_of_i2c1_driver_stop:	
 19947                           
 19948                           	psect	text95
 19949  0839                     __ptext95:	
 19950 ;; *************** function _i2c1_driver_restart *****************
 19951 ;; Defined at:
 19952 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;		None
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;		None
 19957 ;; Return value:  Size  Location     Type
 19958 ;;                  1    wreg      void 
 19959 ;; Registers used:
 19960 ;;		None
 19961 ;; Tracked objects:
 19962 ;;		On entry : 0/0
 19963 ;;		On exit  : 0/0
 19964 ;;		Unchanged: 0/0
 19965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19970 ;;Total ram usage:        0 bytes
 19971 ;; Hardware stack levels used:    1
 19972 ;; This function calls:
 19973 ;;		Nothing
 19974 ;; This function is called by:
 19975 ;;		_do_I2C_SEND_RESTART_READ
 19976 ;;		_do_I2C_SEND_RESTART_WRITE
 19977 ;;		_do_I2C_SEND_RESTART
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           
 19982                           ;psect for function _i2c1_driver_restart
 19983  0839                     _i2c1_driver_restart:	
 19984  0839                     i1l4579:	
 19985                           ;incstack = 0
 19986                           ; Regs used in _i2c1_driver_restart: []
 19987                           
 19988                           
 19989                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 19990  0839  0023               	movlb	3	; select bank3
 19991  083A  1491               	bsf	17,1	;volatile
 19992  083B                     i1l608:	
 19993  083B  0008               	return
 19994  083C                     __end_of_i2c1_driver_restart:	
 19995                           
 19996                           	psect	text96
 19997  0851                     __ptext96:	
 19998 ;; *************** function _i2c1_driver_sendACK *****************
 19999 ;; Defined at:
 20000 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 20001 ;; Parameters:    Size  Location     Type
 20002 ;;		None
 20003 ;; Auto vars:     Size  Location     Type
 20004 ;;		None
 20005 ;; Return value:  Size  Location     Type
 20006 ;;                  1    wreg      void 
 20007 ;; Registers used:
 20008 ;;		None
 20009 ;; Tracked objects:
 20010 ;;		On entry : 0/0
 20011 ;;		On exit  : 0/0
 20012 ;;		Unchanged: 0/0
 20013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;Total ram usage:        0 bytes
 20019 ;; Hardware stack levels used:    1
 20020 ;; This function calls:
 20021 ;;		Nothing
 20022 ;; This function is called by:
 20023 ;;		_do_I2C_DO_ACK
 20024 ;;		_do_I2C_RX
 20025 ;; This function uses a non-reentrant model
 20026 ;;
 20027                           
 20028                           
 20029                           ;psect for function _i2c1_driver_sendACK
 20030  0851                     _i2c1_driver_sendACK:	
 20031  0851                     i1l4749:	
 20032                           ;incstack = 0
 20033                           ; Regs used in _i2c1_driver_sendACK: []
 20034                           
 20035                           
 20036                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 20037  0851  0023               	movlb	3	; select bank3
 20038  0852  1291               	bcf	17,5	;volatile
 20039                           
 20040                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 20041  0853  1611               	bsf	17,4	;volatile
 20042  0854                     i1l635:	
 20043  0854  0008               	return
 20044  0855                     __end_of_i2c1_driver_sendACK:	
 20045                           
 20046                           	psect	text97
 20047  09A8                     __ptext97:	
 20048 ;; *************** function _TMR2_ISR *****************
 20049 ;; Defined at:
 20050 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 20051 ;; Parameters:    Size  Location     Type
 20052 ;;		None
 20053 ;; Auto vars:     Size  Location     Type
 20054 ;;		None
 20055 ;; Return value:  Size  Location     Type
 20056 ;;                  1    wreg      void 
 20057 ;; Registers used:
 20058 ;;		wreg, status,2, status,0, pclath, cstack
 20059 ;; Tracked objects:
 20060 ;;		On entry : 0/0
 20061 ;;		On exit  : 0/0
 20062 ;;		Unchanged: 0/0
 20063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20068 ;;Total ram usage:        0 bytes
 20069 ;; Hardware stack levels used:    1
 20070 ;; Hardware stack levels required when called:    1
 20071 ;; This function calls:
 20072 ;;		Absolute function
 20073 ;;		_TMR2_DefaultInterruptHandler
 20074 ;;		_handler_clock_ms
 20075 ;; This function is called by:
 20076 ;;		_INTERRUPT_InterruptManager
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           
 20081                           ;psect for function _TMR2_ISR
 20082  09A8                     _TMR2_ISR:	
 20083  09A8                     i1l5591:	
 20084                           ;incstack = 0
 20085                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20086                           
 20087                           
 20088                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 20089  09A8  002E               	movlb	14	; select bank14
 20090  09A9  1090               	bcf	16,1	;volatile
 20091  09AA                     i1l5593:	
 20092                           
 20093                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 20094  09AA  0021               	movlb	1	; select bank1
 20095  09AB  0850               	movf	_TMR2_InterruptHandler^(0+128),w
 20096  09AC  0451               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 20097  09AD  1903               	btfsc	3,2
 20098  09AE  29B0               	goto	u281_21
 20099  09AF  29B1               	goto	u281_20
 20100  09B0                     u281_21:	
 20101  09B0  29B6               	goto	i1l1038
 20102  09B1                     u281_20:	
 20103  09B1                     i1l5595:	
 20104                           
 20105                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 20106  09B1  0851               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 20107  09B2  008A               	movwf	10
 20108  09B3  0850               	movf	_TMR2_InterruptHandler^(0+128),w
 20109  09B4  000A               	callw
 20110  09B5  3189               	pagesel	$
 20111  09B6                     i1l1038:	
 20112  09B6  0008               	return
 20113  09B7                     __end_of_TMR2_ISR:	
 20114                           
 20115                           	psect	text98
 20116  0830                     __ptext98:	
 20117 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 20118 ;; Defined at:
 20119 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 20120 ;; Parameters:    Size  Location     Type
 20121 ;;		None
 20122 ;; Auto vars:     Size  Location     Type
 20123 ;;		None
 20124 ;; Return value:  Size  Location     Type
 20125 ;;                  1    wreg      void 
 20126 ;; Registers used:
 20127 ;;		None
 20128 ;; Tracked objects:
 20129 ;;		On entry : 0/0
 20130 ;;		On exit  : 0/0
 20131 ;;		Unchanged: 0/0
 20132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20137 ;;Total ram usage:        0 bytes
 20138 ;; Hardware stack levels used:    1
 20139 ;; This function calls:
 20140 ;;		Nothing
 20141 ;; This function is called by:
 20142 ;;		_TMR2_Initialize
 20143 ;;		_TMR2_ISR
 20144 ;; This function uses a non-reentrant model
 20145 ;;
 20146                           
 20147                           
 20148                           ;psect for function _TMR2_DefaultInterruptHandler
 20149  0830                     _TMR2_DefaultInterruptHandler:	
 20150  0830                     i1l1044:	
 20151                           ;incstack = 0
 20152                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 20153                           
 20154  0830  0008               	return
 20155  0831                     __end_of_TMR2_DefaultInterruptHandler:	
 20156                           
 20157                           	psect	text99
 20158  094C                     __ptext99:	
 20159 ;; *************** function _handler_clock_ms *****************
 20160 ;; Defined at:
 20161 ;;		line 710 in file "main.c"
 20162 ;; Parameters:    Size  Location     Type
 20163 ;;		None
 20164 ;; Auto vars:     Size  Location     Type
 20165 ;;		None
 20166 ;; Return value:  Size  Location     Type
 20167 ;;                  1    wreg      void 
 20168 ;; Registers used:
 20169 ;;		wreg, status,2, status,0
 20170 ;; Tracked objects:
 20171 ;;		On entry : 0/0
 20172 ;;		On exit  : 0/0
 20173 ;;		Unchanged: 0/0
 20174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20179 ;;Total ram usage:        1 bytes
 20180 ;; Hardware stack levels used:    1
 20181 ;; This function calls:
 20182 ;;		Nothing
 20183 ;; This function is called by:
 20184 ;;		_main
 20185 ;;		_TMR2_ISR
 20186 ;; This function uses a non-reentrant model
 20187 ;;
 20188                           
 20189                           
 20190                           ;psect for function _handler_clock_ms
 20191  094C                     _handler_clock_ms:	
 20192  094C                     i1l5423:	
 20193                           ;incstack = 0
 20194                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 20195                           
 20196                           
 20197                           ;main.c: 711:     clkms++;
 20198  094C  3001               	movlw	1
 20199  094D  00F0               	movwf	??_handler_clock_ms
 20200  094E  0870               	movf	??_handler_clock_ms,w
 20201  094F  07FD               	addwf	_clkms,f	;volatile
 20202  0950                     i1l5425:	
 20203                           
 20204                           ;main.c: 713:     if(clkms > 200){
 20205  0950  30C9               	movlw	201
 20206  0951  027D               	subwf	_clkms,w	;volatile
 20207  0952  1C03               	skipc
 20208  0953  2955               	goto	u258_21
 20209  0954  2956               	goto	u258_20
 20210  0955                     u258_21:	
 20211  0955  2957               	goto	i1l1408
 20212  0956                     u258_20:	
 20213  0956                     i1l5427:	
 20214                           
 20215                           ;main.c: 714:         clkms = 0;
 20216  0956  01FD               	clrf	_clkms	;volatile
 20217  0957                     i1l1408:	
 20218  0957  0008               	return
 20219  0958                     __end_of_handler_clock_ms:	
 20220                           
 20221                           	psect	text100
 20222  0A92                     __ptext100:	
 20223 ;; *************** function _TMR1_ISR *****************
 20224 ;; Defined at:
 20225 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;		None
 20228 ;; Auto vars:     Size  Location     Type
 20229 ;;		None
 20230 ;; Return value:  Size  Location     Type
 20231 ;;                  1    wreg      void 
 20232 ;; Registers used:
 20233 ;;		wreg, status,2, status,0, pclath, cstack
 20234 ;; Tracked objects:
 20235 ;;		On entry : 0/0
 20236 ;;		On exit  : 0/0
 20237 ;;		Unchanged: 0/0
 20238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20243 ;;Total ram usage:        0 bytes
 20244 ;; Hardware stack levels used:    1
 20245 ;; Hardware stack levels required when called:    1
 20246 ;; This function calls:
 20247 ;;		Absolute function
 20248 ;;		_TMR1_DefaultInterruptHandler
 20249 ;;		_TMR1_WriteTimer
 20250 ;;		_handler_clock_hms
 20251 ;; This function is called by:
 20252 ;;		_INTERRUPT_InterruptManager
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           
 20257                           ;psect for function _TMR1_ISR
 20258  0A92                     _TMR1_ISR:	
 20259  0A92                     i1l5583:	
 20260                           ;incstack = 0
 20261                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20262                           
 20263                           
 20264                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 20265  0A92  002E               	movlb	14	; select bank14
 20266  0A93  1010               	bcf	16,0	;volatile
 20267  0A94                     i1l5585:	
 20268                           
 20269                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 20270  0A94  0020               	movlb	0	; select bank0
 20271  0A95  0869               	movf	_timer1ReloadVal+1,w	;volatile
 20272  0A96  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20273  0A97  0868               	movf	_timer1ReloadVal,w	;volatile
 20274  0A98  00F0               	movwf	TMR1_WriteTimer@timerVal
 20275  0A99  3189  21E6  318A   	fcall	_TMR1_WriteTimer
 20276  0A9C                     i1l5587:	
 20277                           
 20278                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 20279  0A9C  0021               	movlb	1	; select bank1
 20280  0A9D  0852               	movf	_TMR1_InterruptHandler^(0+128),w
 20281  0A9E  0453               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20282  0A9F  1903               	btfsc	3,2
 20283  0AA0  2AA2               	goto	u280_21
 20284  0AA1  2AA3               	goto	u280_20
 20285  0AA2                     u280_21:	
 20286  0AA2  2AA8               	goto	i1l896
 20287  0AA3                     u280_20:	
 20288  0AA3                     i1l5589:	
 20289                           
 20290                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 20291  0AA3  0853               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20292  0AA4  008A               	movwf	10
 20293  0AA5  0852               	movf	_TMR1_InterruptHandler^(0+128),w
 20294  0AA6  000A               	callw
 20295  0AA7  318A               	pagesel	$
 20296  0AA8                     i1l896:	
 20297  0AA8  0008               	return
 20298  0AA9                     __end_of_TMR1_ISR:	
 20299                           
 20300                           	psect	text101
 20301  082F                     __ptext101:	
 20302 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20303 ;; Defined at:
 20304 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20305 ;; Parameters:    Size  Location     Type
 20306 ;;		None
 20307 ;; Auto vars:     Size  Location     Type
 20308 ;;		None
 20309 ;; Return value:  Size  Location     Type
 20310 ;;                  1    wreg      void 
 20311 ;; Registers used:
 20312 ;;		None
 20313 ;; Tracked objects:
 20314 ;;		On entry : 0/0
 20315 ;;		On exit  : 0/0
 20316 ;;		Unchanged: 0/0
 20317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20322 ;;Total ram usage:        0 bytes
 20323 ;; Hardware stack levels used:    1
 20324 ;; This function calls:
 20325 ;;		Nothing
 20326 ;; This function is called by:
 20327 ;;		_TMR1_Initialize
 20328 ;;		_TMR1_ISR
 20329 ;; This function uses a non-reentrant model
 20330 ;;
 20331                           
 20332                           
 20333                           ;psect for function _TMR1_DefaultInterruptHandler
 20334  082F                     _TMR1_DefaultInterruptHandler:	
 20335  082F                     i1l902:	
 20336                           ;incstack = 0
 20337                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20338                           
 20339  082F  0008               	return
 20340  0830                     __end_of_TMR1_DefaultInterruptHandler:	
 20341                           
 20342                           	psect	text102
 20343  0D67                     __ptext102:	
 20344 ;; *************** function _handler_clock_hms *****************
 20345 ;; Defined at:
 20346 ;;		line 684 in file "main.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;		None
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;		None
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      void 
 20353 ;; Registers used:
 20354 ;;		wreg, status,2, status,0
 20355 ;; Tracked objects:
 20356 ;;		On entry : 0/0
 20357 ;;		On exit  : 0/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20364 ;;Total ram usage:        1 bytes
 20365 ;; Hardware stack levels used:    1
 20366 ;; This function calls:
 20367 ;;		Nothing
 20368 ;; This function is called by:
 20369 ;;		_main
 20370 ;;		_TMR1_ISR
 20371 ;; This function uses a non-reentrant model
 20372 ;;
 20373                           
 20374                           
 20375                           ;psect for function _handler_clock_hms
 20376  0D67                     _handler_clock_hms:	
 20377  0D67                     i1l5403:	
 20378                           ;incstack = 0
 20379                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 20380                           
 20381                           
 20382                           ;main.c: 686:     if(!config_mode){
 20383  0D67  0020               	movlb	0	; select bank0
 20384  0D68  0854               	movf	_config_mode,w	;volatile
 20385  0D69  1D03               	btfss	3,2
 20386  0D6A  2D6C               	goto	u253_21
 20387  0D6B  2D6D               	goto	u253_20
 20388  0D6C                     u253_21:	
 20389  0D6C  2D78               	goto	i1l5407
 20390  0D6D                     u253_20:	
 20391  0D6D                     i1l5405:	
 20392  0D6D  1003               	clrc
 20393  0D6E  1F96               	btfss	22,7	;volatile
 20394  0D6F  1403               	setc
 20395  0D70  1803               	btfsc	3,0
 20396  0D71  2D73               	goto	u254_21
 20397  0D72  2D76               	goto	u254_20
 20398  0D73                     u254_21:	
 20399  0D73  0020               	movlb	0	; select bank0
 20400  0D74  1796               	bsf	22,7	;volatile
 20401  0D75  2D78               	goto	u255_24
 20402  0D76                     u254_20:	
 20403  0D76  0020               	movlb	0	; select bank0
 20404  0D77  1396               	bcf	22,7	;volatile
 20405  0D78                     u255_24:	
 20406  0D78                     i1l5407:	
 20407                           
 20408                           ;main.c: 690:     last5s++;
 20409  0D78  3001               	movlw	1
 20410  0D79  00F0               	movwf	??_handler_clock_hms
 20411  0D7A  0870               	movf	??_handler_clock_hms,w
 20412  0D7B  07D7               	addwf	_last5s,f	;volatile
 20413  0D7C                     i1l5409:	
 20414                           
 20415                           ;main.c: 691:     seg++;
 20416  0D7C  3001               	movlw	1
 20417  0D7D  00F0               	movwf	??_handler_clock_hms
 20418  0D7E  0870               	movf	??_handler_clock_hms,w
 20419  0D7F  07DA               	addwf	_seg,f	;volatile
 20420  0D80                     i1l5411:	
 20421                           
 20422                           ;main.c: 692:     if(seg >= 60) {
 20423  0D80  303C               	movlw	60
 20424  0D81  025A               	subwf	_seg,w	;volatile
 20425  0D82  1C03               	skipc
 20426  0D83  2D85               	goto	u256_21
 20427  0D84  2D86               	goto	u256_20
 20428  0D85                     u256_21:	
 20429  0D85  2D9A               	goto	i1l1404
 20430  0D86                     u256_20:	
 20431  0D86                     i1l5413:	
 20432                           
 20433                           ;main.c: 693:         clkm++;
 20434  0D86  3001               	movlw	1
 20435  0D87  00F0               	movwf	??_handler_clock_hms
 20436  0D88  0870               	movf	??_handler_clock_hms,w
 20437  0D89  07DB               	addwf	_clkm,f	;volatile
 20438                           
 20439                           ;main.c: 694:         last1m++;
 20440  0D8A  3001               	movlw	1
 20441  0D8B  00F0               	movwf	??_handler_clock_hms
 20442  0D8C  0870               	movf	??_handler_clock_hms,w
 20443  0D8D  07D6               	addwf	_last1m,f	;volatile
 20444  0D8E                     i1l5415:	
 20445                           
 20446                           ;main.c: 695:         seg = 0;
 20447  0D8E  01DA               	clrf	_seg	;volatile
 20448  0D8F                     i1l5417:	
 20449                           
 20450                           ;main.c: 696:         if(clkm >= 60) {
 20451  0D8F  303C               	movlw	60
 20452  0D90  025B               	subwf	_clkm,w	;volatile
 20453  0D91  1C03               	skipc
 20454  0D92  2D94               	goto	u257_21
 20455  0D93  2D95               	goto	u257_20
 20456  0D94                     u257_21:	
 20457  0D94  2D9A               	goto	i1l1404
 20458  0D95                     u257_20:	
 20459  0D95                     i1l5419:	
 20460                           
 20461                           ;main.c: 697:             clkh++;
 20462  0D95  3001               	movlw	1
 20463  0D96  00F0               	movwf	??_handler_clock_hms
 20464  0D97  0870               	movf	??_handler_clock_hms,w
 20465  0D98  07DC               	addwf	_clkh,f	;volatile
 20466  0D99                     i1l5421:	
 20467                           
 20468                           ;main.c: 698:             clkm = 0;
 20469  0D99  01DB               	clrf	_clkm	;volatile
 20470  0D9A                     i1l1404:	
 20471  0D9A  0008               	return
 20472  0D9B                     __end_of_handler_clock_hms:	
 20473                           
 20474                           	psect	text103
 20475  09E6                     __ptext103:	
 20476 ;; *************** function _TMR1_WriteTimer *****************
 20477 ;; Defined at:
 20478 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20479 ;; Parameters:    Size  Location     Type
 20480 ;;  timerVal        2    0[COMMON] unsigned short 
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;		None
 20483 ;; Return value:  Size  Location     Type
 20484 ;;                  1    wreg      void 
 20485 ;; Registers used:
 20486 ;;		wreg, status,2
 20487 ;; Tracked objects:
 20488 ;;		On entry : 0/0
 20489 ;;		On exit  : 0/0
 20490 ;;		Unchanged: 0/0
 20491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20496 ;;Total ram usage:        2 bytes
 20497 ;; Hardware stack levels used:    1
 20498 ;; This function calls:
 20499 ;;		Nothing
 20500 ;; This function is called by:
 20501 ;;		_TMR1_ISR
 20502 ;;		_TMR1_Reload
 20503 ;; This function uses a non-reentrant model
 20504 ;;
 20505                           
 20506                           
 20507                           ;psect for function _TMR1_WriteTimer
 20508  09E6                     _TMR1_WriteTimer:	
 20509  09E6                     i1l5301:	
 20510                           ;incstack = 0
 20511                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20512                           
 20513                           
 20514                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 20515  09E6  0024               	movlb	4	; select bank4
 20516  09E7  1D0E               	btfss	14,2	;volatile
 20517  09E8  29EA               	goto	u246_21
 20518  09E9  29EB               	goto	u246_20
 20519  09EA                     u246_21:	
 20520  09EA  29F2               	goto	i1l5311
 20521  09EB                     u246_20:	
 20522  09EB                     i1l5303:	
 20523                           
 20524                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 20525  09EB  100E               	bcf	14,0	;volatile
 20526  09EC                     i1l5305:	
 20527                           
 20528                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 20529  09EC  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20530  09ED  008D               	movwf	13	;volatile
 20531  09EE                     i1l5307:	
 20532                           
 20533                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 20534  09EE  0870               	movf	TMR1_WriteTimer@timerVal,w
 20535  09EF  008C               	movwf	12	;volatile
 20536  09F0                     i1l5309:	
 20537                           
 20538                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 20539  09F0  140E               	bsf	14,0	;volatile
 20540                           
 20541                           ;mcc_generated_files/tmr1.c: 140:     }
 20542  09F1  29F6               	goto	i1l883
 20543  09F2                     i1l5311:	
 20544                           
 20545                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 20546  09F2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20547  09F3  008D               	movwf	13	;volatile
 20548  09F4                     i1l5313:	
 20549                           
 20550                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 20551  09F4  0870               	movf	TMR1_WriteTimer@timerVal,w
 20552  09F5  008C               	movwf	12	;volatile
 20553  09F6                     i1l883:	
 20554  09F6  0008               	return
 20555  09F7                     __end_of_TMR1_WriteTimer:	
 20556                           
 20557                           	psect	text104
 20558  0999                     __ptext104:	
 20559 ;; *************** function _TMR0_ISR *****************
 20560 ;; Defined at:
 20561 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 20562 ;; Parameters:    Size  Location     Type
 20563 ;;		None
 20564 ;; Auto vars:     Size  Location     Type
 20565 ;;		None
 20566 ;; Return value:  Size  Location     Type
 20567 ;;                  1    wreg      void 
 20568 ;; Registers used:
 20569 ;;		wreg, status,2, status,0, pclath, cstack
 20570 ;; Tracked objects:
 20571 ;;		On entry : 0/0
 20572 ;;		On exit  : 0/0
 20573 ;;		Unchanged: 0/0
 20574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20579 ;;Total ram usage:        0 bytes
 20580 ;; Hardware stack levels used:    1
 20581 ;; Hardware stack levels required when called:    2
 20582 ;; This function calls:
 20583 ;;		Absolute function
 20584 ;;		_ISR_3s
 20585 ;;		_TMR0_DefaultInterruptHandler
 20586 ;; This function is called by:
 20587 ;;		_INTERRUPT_InterruptManager
 20588 ;; This function uses a non-reentrant model
 20589 ;;
 20590                           
 20591                           
 20592                           ;psect for function _TMR0_ISR
 20593  0999                     _TMR0_ISR:	
 20594  0999                     i1l5577:	
 20595                           ;incstack = 0
 20596                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20597                           
 20598                           
 20599                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 20600  0999  002E               	movlb	14	; select bank14
 20601  099A  128C               	bcf	12,5	;volatile
 20602  099B                     i1l5579:	
 20603                           
 20604                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 20605  099B  0021               	movlb	1	; select bank1
 20606  099C  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 20607  099D  044F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20608  099E  1903               	btfsc	3,2
 20609  099F  29A1               	goto	u279_21
 20610  09A0  29A2               	goto	u279_20
 20611  09A1                     u279_21:	
 20612  09A1  29A7               	goto	i1l1705
 20613  09A2                     u279_20:	
 20614  09A2                     i1l5581:	
 20615                           
 20616                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 20617  09A2  084F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20618  09A3  008A               	movwf	10
 20619  09A4  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 20620  09A5  000A               	callw
 20621  09A6  3189               	pagesel	$
 20622  09A7                     i1l1705:	
 20623  09A7  0008               	return
 20624  09A8                     __end_of_TMR0_ISR:	
 20625                           
 20626                           	psect	text105
 20627  0AD9                     __ptext105:	
 20628 ;; *************** function _ISR_3s *****************
 20629 ;; Defined at:
 20630 ;;		line 161 in file "main.c"
 20631 ;; Parameters:    Size  Location     Type
 20632 ;;		None
 20633 ;; Auto vars:     Size  Location     Type
 20634 ;;		None
 20635 ;; Return value:  Size  Location     Type
 20636 ;;                  1    wreg      void 
 20637 ;; Registers used:
 20638 ;;		wreg, status,2, status,0, pclath, cstack
 20639 ;; Tracked objects:
 20640 ;;		On entry : 0/0
 20641 ;;		On exit  : 0/0
 20642 ;;		Unchanged: 0/0
 20643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20648 ;;Total ram usage:        1 bytes
 20649 ;; Hardware stack levels used:    1
 20650 ;; Hardware stack levels required when called:    1
 20651 ;; This function calls:
 20652 ;;		_TMR0_StopTimer
 20653 ;;		i1_PWM6_LoadDutyValue
 20654 ;; This function is called by:
 20655 ;;		_main
 20656 ;;		_TMR0_ISR
 20657 ;; This function uses a non-reentrant model
 20658 ;;
 20659                           
 20660                           
 20661                           ;psect for function _ISR_3s
 20662  0AD9                     _ISR_3s:	
 20663  0AD9                     i1l5315:	
 20664                           ;incstack = 0
 20665                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 20666                           
 20667                           
 20668                           ;main.c: 163:     if (lum_threshold){
 20669  0AD9  0020               	movlb	0	; select bank0
 20670  0ADA  0847               	movf	_lum_threshold,w
 20671  0ADB  0448               	iorwf	_lum_threshold+1,w
 20672  0ADC  1903               	btfsc	3,2
 20673  0ADD  2ADF               	goto	u247_21
 20674  0ADE  2AE0               	goto	u247_20
 20675  0ADF                     u247_21:	
 20676  0ADF  2AEC               	goto	i1l1243
 20677  0AE0                     u247_20:	
 20678  0AE0                     i1l5317:	
 20679                           
 20680                           ;main.c: 164:         PWM6_LoadDutyValue(1023);
 20681  0AE0  30FF               	movlw	255
 20682  0AE1  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20683  0AE2  3003               	movlw	3
 20684  0AE3  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20685  0AE4  318A  2250  318A   	fcall	i1_PWM6_LoadDutyValue
 20686  0AE7                     i1l5319:	
 20687                           
 20688                           ;main.c: 165:         alarm = 1;
 20689  0AE7  3001               	movlw	1
 20690  0AE8  00F4               	movwf	??_ISR_3s
 20691  0AE9  0874               	movf	??_ISR_3s,w
 20692  0AEA  0020               	movlb	0	; select bank0
 20693  0AEB  00D3               	movwf	_alarm	;volatile
 20694  0AEC                     i1l1243:	
 20695                           ;main.c: 167:     }
 20696                           
 20697                           
 20698                           ;main.c: 169:     TMR0_StopTimer();
 20699  0AEC  3188  2036  318A   	fcall	_TMR0_StopTimer
 20700  0AEF                     i1l5321:	
 20701                           
 20702                           ;main.c: 170:     PIE0bits.TMR0IE = 0;
 20703  0AEF  002E               	movlb	14	; select bank14
 20704  0AF0  1296               	bcf	22,5	;volatile
 20705  0AF1                     i1l1244:	
 20706  0AF1  0008               	return
 20707  0AF2                     __end_of_ISR_3s:	
 20708                           
 20709                           	psect	text106
 20710  082E                     __ptext106:	
 20711 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20712 ;; Defined at:
 20713 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 20714 ;; Parameters:    Size  Location     Type
 20715 ;;		None
 20716 ;; Auto vars:     Size  Location     Type
 20717 ;;		None
 20718 ;; Return value:  Size  Location     Type
 20719 ;;                  1    wreg      void 
 20720 ;; Registers used:
 20721 ;;		None
 20722 ;; Tracked objects:
 20723 ;;		On entry : 0/0
 20724 ;;		On exit  : 0/0
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20731 ;;Total ram usage:        0 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; This function calls:
 20734 ;;		Nothing
 20735 ;; This function is called by:
 20736 ;;		_TMR0_Initialize
 20737 ;;		_TMR0_ISR
 20738 ;; This function uses a non-reentrant model
 20739 ;;
 20740                           
 20741                           
 20742                           ;psect for function _TMR0_DefaultInterruptHandler
 20743  082E                     _TMR0_DefaultInterruptHandler:	
 20744  082E                     i1l1711:	
 20745                           ;incstack = 0
 20746                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20747                           
 20748  082E  0008               	return
 20749  082F                     __end_of_TMR0_DefaultInterruptHandler:	
 20750                           
 20751                           	psect	text107
 20752  0836                     __ptext107:	
 20753 ;; *************** function _TMR0_StopTimer *****************
 20754 ;; Defined at:
 20755 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;		None
 20758 ;; Auto vars:     Size  Location     Type
 20759 ;;		None
 20760 ;; Return value:  Size  Location     Type
 20761 ;;                  1    wreg      void 
 20762 ;; Registers used:
 20763 ;;		None
 20764 ;; Tracked objects:
 20765 ;;		On entry : 0/0
 20766 ;;		On exit  : 0/0
 20767 ;;		Unchanged: 0/0
 20768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20773 ;;Total ram usage:        0 bytes
 20774 ;; Hardware stack levels used:    1
 20775 ;; This function calls:
 20776 ;;		Nothing
 20777 ;; This function is called by:
 20778 ;;		_ISR_3s
 20779 ;; This function uses a non-reentrant model
 20780 ;;
 20781                           
 20782                           
 20783                           ;psect for function _TMR0_StopTimer
 20784  0836                     _TMR0_StopTimer:	
 20785  0836                     i1l4861:	
 20786                           ;incstack = 0
 20787                           ; Regs used in _TMR0_StopTimer: []
 20788                           
 20789                           
 20790                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 20791  0836  0020               	movlb	0	; select bank0
 20792  0837  139E               	bcf	30,7	;volatile
 20793  0838                     i1l1692:	
 20794  0838  0008               	return
 20795  0839                     __end_of_TMR0_StopTimer:	
 20796                           
 20797                           	psect	text108
 20798  0885                     __ptext108:	
 20799 ;; *************** function _INT_ISR *****************
 20800 ;; Defined at:
 20801 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20802 ;; Parameters:    Size  Location     Type
 20803 ;;		None
 20804 ;; Auto vars:     Size  Location     Type
 20805 ;;		None
 20806 ;; Return value:  Size  Location     Type
 20807 ;;                  1    wreg      void 
 20808 ;; Registers used:
 20809 ;;		wreg, status,2, status,0, pclath, cstack
 20810 ;; Tracked objects:
 20811 ;;		On entry : 0/0
 20812 ;;		On exit  : 0/0
 20813 ;;		Unchanged: 0/0
 20814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20819 ;;Total ram usage:        0 bytes
 20820 ;; Hardware stack levels used:    1
 20821 ;; Hardware stack levels required when called:    3
 20822 ;; This function calls:
 20823 ;;		_INT_CallBack
 20824 ;; This function is called by:
 20825 ;;		_INTERRUPT_InterruptManager
 20826 ;; This function uses a non-reentrant model
 20827 ;;
 20828                           
 20829                           
 20830                           ;psect for function _INT_ISR
 20831  0885                     _INT_ISR:	
 20832  0885                     i1l5573:	
 20833                           ;incstack = 0
 20834                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20835                           
 20836                           
 20837                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 20838  0885  002E               	movlb	14	; select bank14
 20839  0886  100C               	bcf	12,0	;volatile
 20840  0887                     i1l5575:	
 20841                           
 20842                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 20843  0887  3189  2164  3188   	fcall	_INT_CallBack
 20844  088A                     i1l334:	
 20845  088A  0008               	return
 20846  088B                     __end_of_INT_ISR:	
 20847                           
 20848                           	psect	text109
 20849  0964                     __ptext109:	
 20850 ;; *************** function _INT_CallBack *****************
 20851 ;; Defined at:
 20852 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20853 ;; Parameters:    Size  Location     Type
 20854 ;;		None
 20855 ;; Auto vars:     Size  Location     Type
 20856 ;;		None
 20857 ;; Return value:  Size  Location     Type
 20858 ;;                  1    wreg      void 
 20859 ;; Registers used:
 20860 ;;		wreg, status,2, status,0, pclath, cstack
 20861 ;; Tracked objects:
 20862 ;;		On entry : 0/0
 20863 ;;		On exit  : 0/0
 20864 ;;		Unchanged: 0/0
 20865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20870 ;;Total ram usage:        0 bytes
 20871 ;; Hardware stack levels used:    1
 20872 ;; Hardware stack levels required when called:    2
 20873 ;; This function calls:
 20874 ;;		Absolute function
 20875 ;;		_INT_DefaultInterruptHandler
 20876 ;;		_sw1_EXT
 20877 ;; This function is called by:
 20878 ;;		_INT_ISR
 20879 ;; This function uses a non-reentrant model
 20880 ;;
 20881                           
 20882                           
 20883                           ;psect for function _INT_CallBack
 20884  0964                     _INT_CallBack:	
 20885  0964                     i1l5159:	
 20886                           ;incstack = 0
 20887                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20888                           
 20889                           
 20890                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 20891  0964  0021               	movlb	1	; select bank1
 20892  0965  0854               	movf	_INT_InterruptHandler^(0+128),w
 20893  0966  0455               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20894  0967  1903               	btfsc	3,2
 20895  0968  296A               	goto	u245_21
 20896  0969  296B               	goto	u245_20
 20897  096A                     u245_21:	
 20898  096A  2970               	goto	i1l338
 20899  096B                     u245_20:	
 20900  096B                     i1l5161:	
 20901                           
 20902                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 20903  096B  0855               	movf	(_INT_InterruptHandler+1)^(0+128),w
 20904  096C  008A               	movwf	10
 20905  096D  0854               	movf	_INT_InterruptHandler^(0+128),w
 20906  096E  000A               	callw
 20907  096F  3189               	pagesel	$
 20908  0970                     i1l338:	
 20909  0970  0008               	return
 20910  0971                     __end_of_INT_CallBack:	
 20911                           
 20912                           	psect	text110
 20913  082D                     __ptext110:	
 20914 ;; *************** function _INT_DefaultInterruptHandler *****************
 20915 ;; Defined at:
 20916 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 20917 ;; Parameters:    Size  Location     Type
 20918 ;;		None
 20919 ;; Auto vars:     Size  Location     Type
 20920 ;;		None
 20921 ;; Return value:  Size  Location     Type
 20922 ;;                  1    wreg      void 
 20923 ;; Registers used:
 20924 ;;		None
 20925 ;; Tracked objects:
 20926 ;;		On entry : 0/0
 20927 ;;		On exit  : 0/0
 20928 ;;		Unchanged: 0/0
 20929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20934 ;;Total ram usage:        0 bytes
 20935 ;; Hardware stack levels used:    1
 20936 ;; This function calls:
 20937 ;;		Nothing
 20938 ;; This function is called by:
 20939 ;;		_EXT_INT_Initialize
 20940 ;;		_INT_CallBack
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           
 20945                           ;psect for function _INT_DefaultInterruptHandler
 20946  082D                     _INT_DefaultInterruptHandler:	
 20947  082D                     i1l344:	
 20948                           ;incstack = 0
 20949                           ; Regs used in _INT_DefaultInterruptHandler: []
 20950                           
 20951  082D  0008               	return
 20952  082E                     __end_of_INT_DefaultInterruptHandler:	
 20953                           
 20954                           	psect	text111
 20955  0C72                     __ptext111:	
 20956 ;; *************** function _sw1_EXT *****************
 20957 ;; Defined at:
 20958 ;;		line 129 in file "main.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;		None
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;		None
 20963 ;; Return value:  Size  Location     Type
 20964 ;;                  1    wreg      void 
 20965 ;; Registers used:
 20966 ;;		wreg, status,2, status,0, pclath, cstack
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20976 ;;Total ram usage:        1 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; Hardware stack levels required when called:    1
 20979 ;; This function calls:
 20980 ;;		i1_PWM6_LoadDutyValue
 20981 ;;		i1_checkDebounceSW1
 20982 ;; This function is called by:
 20983 ;;		_main
 20984 ;;		_INT_CallBack
 20985 ;; This function uses a non-reentrant model
 20986 ;;
 20987                           
 20988                           
 20989                           ;psect for function _sw1_EXT
 20990  0C72                     _sw1_EXT:	
 20991  0C72                     i1l4845:	
 20992                           ;incstack = 0
 20993                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 20994                           
 20995                           
 20996                           ;main.c: 132:     if(checkDebounceSW1()){
 20997  0C72  3187  277B  318C   	fcall	i1_checkDebounceSW1
 20998  0C75  3A00               	xorlw	0
 20999  0C76  1903               	skipnz
 21000  0C77  2C79               	goto	u229_21
 21001  0C78  2C7A               	goto	u229_20
 21002  0C79                     u229_21:	
 21003  0C79  2C9F               	goto	i1l1240
 21004  0C7A                     u229_20:	
 21005  0C7A                     i1l4847:	
 21006                           
 21007                           ;main.c: 133:         if (alarm == 1){
 21008  0C7A  0020               	movlb	0	; select bank0
 21009  0C7B  0353               	decf	_alarm,w	;volatile
 21010  0C7C  1D03               	btfss	3,2
 21011  0C7D  2C7F               	goto	u230_21
 21012  0C7E  2C80               	goto	u230_20
 21013  0C7F                     u230_21:	
 21014  0C7F  2C8E               	goto	i1l1234
 21015  0C80                     u230_20:	
 21016  0C80                     i1l4849:	
 21017                           
 21018                           ;main.c: 134:             alarm = 0;
 21019  0C80  01D3               	clrf	_alarm	;volatile
 21020  0C81                     i1l4851:	
 21021  0C81  1316               	bcf	22,6	;volatile
 21022  0C82                     i1l4853:	
 21023                           
 21024                           ;main.c: 136:             PWM6_LoadDutyValue(0);
 21025  0C82  3000               	movlw	0
 21026  0C83  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 21027  0C84  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 21028  0C85  318A  2250  318C   	fcall	i1_PWM6_LoadDutyValue
 21029  0C88                     i1l4855:	
 21030                           
 21031                           ;main.c: 137:             last_ms = clkms;
 21032  0C88  087D               	movf	_clkms,w	;volatile
 21033  0C89  00F7               	movwf	??_sw1_EXT
 21034  0C8A  0877               	movf	??_sw1_EXT,w
 21035  0C8B  0020               	movlb	0	; select bank0
 21036  0C8C  00D9               	movwf	_last_ms
 21037                           
 21038                           ;main.c: 138:         }
 21039  0C8D  2C9B               	goto	i1l1237
 21040  0C8E                     i1l1234:	
 21041                           ;main.c: 139:         else{
 21042                           
 21043                           
 21044                           ;main.c: 140:             if(!PORTBbits.RB4){
 21045  0C8E  1A0D               	btfsc	13,4	;volatile
 21046  0C8F  2C91               	goto	u231_21
 21047  0C90  2C92               	goto	u231_20
 21048  0C91                     u231_21:	
 21049  0C91  2C9B               	goto	i1l1237
 21050  0C92                     u231_20:	
 21051  0C92                     i1l4857:	
 21052                           
 21053                           ;main.c: 142:                 if(config_mode == 0){
 21054  0C92  0854               	movf	_config_mode,w	;volatile
 21055  0C93  1D03               	btfss	3,2
 21056  0C94  2C96               	goto	u232_21
 21057  0C95  2C97               	goto	u232_20
 21058  0C96                     u232_21:	
 21059  0C96  2C9B               	goto	i1l1237
 21060  0C97                     u232_20:	
 21061  0C97                     i1l4859:	
 21062                           
 21063                           ;main.c: 143:                     config_mode = 1;
 21064  0C97  3001               	movlw	1
 21065  0C98  00F7               	movwf	??_sw1_EXT
 21066  0C99  0877               	movf	??_sw1_EXT,w
 21067  0C9A  00D4               	movwf	_config_mode	;volatile
 21068  0C9B                     i1l1237:	
 21069                           ;main.c: 149:         }
 21070                           
 21071                           
 21072                           ;main.c: 150:         last_ms = clkms;
 21073  0C9B  087D               	movf	_clkms,w	;volatile
 21074  0C9C  00F7               	movwf	??_sw1_EXT
 21075  0C9D  0877               	movf	??_sw1_EXT,w
 21076  0C9E  00D9               	movwf	_last_ms
 21077  0C9F                     i1l1240:	
 21078  0C9F  0008               	return
 21079  0CA0                     __end_of_sw1_EXT:	
 21080                           
 21081                           	psect	text112
 21082  077B                     __ptext112:	
 21083 ;; *************** function i1_checkDebounceSW1 *****************
 21084 ;; Defined at:
 21085 ;;		line 757 in file "main.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;		None
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;		None
 21090 ;; Return value:  Size  Location     Type
 21091 ;;                  1    wreg      unsigned char 
 21092 ;; Registers used:
 21093 ;;		wreg, status,2, status,0
 21094 ;; Tracked objects:
 21095 ;;		On entry : 0/0
 21096 ;;		On exit  : 0/0
 21097 ;;		Unchanged: 0/0
 21098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21101 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21103 ;;Total ram usage:        7 bytes
 21104 ;; Hardware stack levels used:    1
 21105 ;; This function calls:
 21106 ;;		Nothing
 21107 ;; This function is called by:
 21108 ;;		_sw1_EXT
 21109 ;; This function uses a non-reentrant model
 21110 ;;
 21111                           
 21112                           
 21113                           ;psect for function i1_checkDebounceSW1
 21114  077B                     i1_checkDebounceSW1:	
 21115  077B                     i1l4683:	
 21116                           ;incstack = 0
 21117                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 21118                           
 21119                           
 21120                           ;main.c: 758:     PIE4bits.TMR1IE = 0;
 21121  077B  002E               	movlb	14	; select bank14
 21122  077C  101A               	bcf	26,0	;volatile
 21123  077D                     i1l4685:	
 21124                           
 21125                           ;main.c: 760:     if(clkms - last_ms < 0){
 21126  077D  087D               	movf	_clkms,w	;volatile
 21127  077E  00F0               	movwf	??i1_checkDebounceSW1
 21128  077F  01F1               	clrf	??i1_checkDebounceSW1+1
 21129  0780  0871               	movf	??i1_checkDebounceSW1+1,w
 21130  0781  00F3               	movwf	??i1_checkDebounceSW1+3
 21131  0782  0020               	movlb	0	; select bank0
 21132  0783  0859               	movf	_last_ms,w
 21133  0784  0270               	subwf	??i1_checkDebounceSW1,w
 21134  0785  00F2               	movwf	??i1_checkDebounceSW1+2
 21135  0786  1C03               	skipc
 21136  0787  03F3               	decf	??i1_checkDebounceSW1+3,f
 21137  0788  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 21138  0789  2F8B               	goto	u224_21
 21139  078A  2F8C               	goto	u224_20
 21140  078B                     u224_21:	
 21141  078B  2FB2               	goto	i1l4695
 21142  078C                     u224_20:	
 21143  078C                     i1l4687:	
 21144                           
 21145                           ;main.c: 762:         if ((200 - last_ms)+ clkms > 2 ){
 21146  078C  087D               	movf	_clkms,w	;volatile
 21147  078D  00F0               	movwf	??i1_checkDebounceSW1
 21148  078E  01F1               	clrf	??i1_checkDebounceSW1+1
 21149  078F  0871               	movf	??i1_checkDebounceSW1+1,w
 21150  0790  00F3               	movwf	??i1_checkDebounceSW1+3
 21151  0791  0859               	movf	_last_ms,w
 21152  0792  0270               	subwf	??i1_checkDebounceSW1,w
 21153  0793  00F2               	movwf	??i1_checkDebounceSW1+2
 21154  0794  1C03               	skipc
 21155  0795  03F3               	decf	??i1_checkDebounceSW1+3,f
 21156  0796  0872               	movf	??i1_checkDebounceSW1+2,w
 21157  0797  3EC8               	addlw	200
 21158  0798  00F4               	movwf	??i1_checkDebounceSW1+4
 21159  0799  3000               	movlw	0
 21160  079A  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 21161  079B  00F5               	movwf	??i1_checkDebounceSW1+5
 21162  079C  0875               	movf	??i1_checkDebounceSW1+5,w
 21163  079D  3A80               	xorlw	128
 21164  079E  00F6               	movwf	??i1_checkDebounceSW1+6
 21165  079F  3080               	movlw	128
 21166  07A0  0276               	subwf	??i1_checkDebounceSW1+6,w
 21167  07A1  1D03               	skipz
 21168  07A2  2FA5               	goto	u225_25
 21169  07A3  3003               	movlw	3
 21170  07A4  0274               	subwf	??i1_checkDebounceSW1+4,w
 21171  07A5                     u225_25:	
 21172  07A5  1C03               	skipc
 21173  07A6  2FA8               	goto	u225_21
 21174  07A7  2FA9               	goto	u225_20
 21175  07A8                     u225_21:	
 21176  07A8  2FB2               	goto	i1l4695
 21177  07A9                     u225_20:	
 21178  07A9                     i1l4689:	
 21179                           
 21180                           ;main.c: 763:             last_ms = clkms;
 21181  07A9  087D               	movf	_clkms,w	;volatile
 21182  07AA  00F0               	movwf	??i1_checkDebounceSW1
 21183  07AB  0870               	movf	??i1_checkDebounceSW1,w
 21184  07AC  0020               	movlb	0	; select bank0
 21185  07AD  00D9               	movwf	_last_ms
 21186  07AE                     i1l4691:	
 21187                           
 21188                           ;main.c: 764:             PIE4bits.TMR1IE = 1;
 21189  07AE  002E               	movlb	14	; select bank14
 21190  07AF  141A               	bsf	26,0	;volatile
 21191                           
 21192                           ;main.c: 765:             return 1;
 21193  07B0  3001               	movlw	1
 21194  07B1  2FD4               	goto	i1l1431
 21195  07B2                     i1l4695:	
 21196                           
 21197                           ;main.c: 769:     if(clkms - last_ms < 2){
 21198  07B2  087D               	movf	_clkms,w	;volatile
 21199  07B3  00F0               	movwf	??i1_checkDebounceSW1
 21200  07B4  01F1               	clrf	??i1_checkDebounceSW1+1
 21201  07B5  0871               	movf	??i1_checkDebounceSW1+1,w
 21202  07B6  00F3               	movwf	??i1_checkDebounceSW1+3
 21203  07B7  0020               	movlb	0	; select bank0
 21204  07B8  0859               	movf	_last_ms,w
 21205  07B9  0270               	subwf	??i1_checkDebounceSW1,w
 21206  07BA  00F2               	movwf	??i1_checkDebounceSW1+2
 21207  07BB  1C03               	skipc
 21208  07BC  03F3               	decf	??i1_checkDebounceSW1+3,f
 21209  07BD  0873               	movf	??i1_checkDebounceSW1+3,w
 21210  07BE  3A80               	xorlw	128
 21211  07BF  00F4               	movwf	??i1_checkDebounceSW1+4
 21212  07C0  3080               	movlw	128
 21213  07C1  0274               	subwf	??i1_checkDebounceSW1+4,w
 21214  07C2  1D03               	skipz
 21215  07C3  2FC6               	goto	u226_25
 21216  07C4  3002               	movlw	2
 21217  07C5  0272               	subwf	??i1_checkDebounceSW1+2,w
 21218  07C6                     u226_25:	
 21219  07C6  1803               	skipnc
 21220  07C7  2FC9               	goto	u226_21
 21221  07C8  2FCA               	goto	u226_20
 21222  07C9                     u226_21:	
 21223  07C9  2FCC               	goto	i1l4703
 21224  07CA                     u226_20:	
 21225  07CA                     i1l4697:	
 21226                           
 21227                           ;main.c: 770:         return 0;
 21228  07CA  3000               	movlw	0
 21229  07CB  2FD4               	goto	i1l1431
 21230  07CC                     i1l4703:	
 21231                           
 21232                           ;main.c: 773:         last_ms = clkms;
 21233  07CC  087D               	movf	_clkms,w	;volatile
 21234  07CD  00F0               	movwf	??i1_checkDebounceSW1
 21235  07CE  0870               	movf	??i1_checkDebounceSW1,w
 21236  07CF  0020               	movlb	0	; select bank0
 21237  07D0  00D9               	movwf	_last_ms
 21238  07D1                     i1l4705:	
 21239                           
 21240                           ;main.c: 774:         PIE4bits.TMR1IE = 1;
 21241  07D1  002E               	movlb	14	; select bank14
 21242  07D2  141A               	bsf	26,0	;volatile
 21243                           
 21244                           ;main.c: 775:         return 1;
 21245  07D3  3001               	movlw	1
 21246  07D4                     i1l1431:	
 21247  07D4  0008               	return
 21248  07D5                     __end_ofi1_checkDebounceSW1:	
 21249                           
 21250                           	psect	text113
 21251  0A50                     __ptext113:	
 21252 ;; *************** function i1_PWM6_LoadDutyValue *****************
 21253 ;; Defined at:
 21254 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21255 ;; Parameters:    Size  Location     Type
 21256 ;;  dutyValue       2    0[COMMON] unsigned short 
 21257 ;; Auto vars:     Size  Location     Type
 21258 ;;		None
 21259 ;; Return value:  Size  Location     Type
 21260 ;;                  1    wreg      void 
 21261 ;; Registers used:
 21262 ;;		wreg, status,2, status,0
 21263 ;; Tracked objects:
 21264 ;;		On entry : 0/0
 21265 ;;		On exit  : 0/0
 21266 ;;		Unchanged: 0/0
 21267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21272 ;;Total ram usage:        4 bytes
 21273 ;; Hardware stack levels used:    1
 21274 ;; This function calls:
 21275 ;;		Nothing
 21276 ;; This function is called by:
 21277 ;;		_sw1_EXT
 21278 ;;		_ISR_3s
 21279 ;; This function uses a non-reentrant model
 21280 ;;
 21281                           
 21282                           
 21283                           ;psect for function i1_PWM6_LoadDutyValue
 21284  0A50                     i1_PWM6_LoadDutyValue:	
 21285  0A50                     i1l4681:	
 21286                           ;incstack = 0
 21287                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21288                           
 21289                           
 21290                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21291  0A50  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 21292  0A51  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 21293  0A52  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21294  0A53  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21295  0A54  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21296  0A55  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21297  0A56  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21298  0A57  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21299  0A58  0872               	movf	??i1_PWM6_LoadDutyValue,w
 21300  0A59  0027               	movlb	7	; select bank7
 21301  0A5A  008D               	movwf	13	;volatile
 21302                           
 21303                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21304  0A5B  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21305  0A5C  3903               	andlw	3
 21306  0A5D  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21307  0A5E  3005               	movlw	5
 21308  0A5F                     u223_25:	
 21309  0A5F  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 21310  0A60  3EFF               	addlw	-1
 21311  0A61  1D03               	skipz
 21312  0A62  2A5F               	goto	u223_25
 21313  0A63  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 21314  0A64  008C               	movwf	12	;volatile
 21315  0A65                     i1l916:	
 21316  0A65  0008               	return
 21317  0A66                     __end_ofi1_PWM6_LoadDutyValue:	
 21318  007E                     btemp	set	126	;btemp
 21319  007E                     int$flags	set	126
 21320  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    36
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     35      74
    BANK1            80      6      60
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3738$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3744	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3743	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3738	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    S2002Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    S2002Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _tsttc->_WriteI2C
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_representLed
    _representLed->___awdiv
    _recTempThresh->___awdiv
    _recMinutes->___awdiv
    _recHour->___awdiv
    _mode_select_LED->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   54598
                                             30 BANK0      5     5      0
                                              0 BANK1      6     6      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   13358
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4465
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   24384
                                             27 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   16770
                                             23 BANK0      4     4      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (3) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0   11663
                                             19 BANK0      4     4      0
                   Absolute function *
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _recAlarm *
                            _recHour *
                       _recLumThresh *
                         _recMinutes *
                      _recTempThresh *
                       _representLed
 ---------------------------------------------------------------------------------
 (4) _representLed                                         7     7      0    1928
                                             12 BANK0      7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _recTempThresh                                        4     3      1    2740
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recMinutes                                           4     3      1    2740
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recLumThresh                                         2     1      1      96
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _recHour                                              4     3      1    2740
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     973
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1705
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _recAlarm                                             2     1      1      31
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (7) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (8) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (11) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (10) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (9) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (9) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (10) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (9) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
     _selectSubfield
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
       _increment_subfield
         Absolute function(Fake) *
         _PWM6_LoadDutyValue *
         _checkDebounceSW1 *
         _checkDebounceSW2 *
         _recAlarm *
         _recHour *
           ___awdiv
           ___awmod
         _recLumThresh *
         _recMinutes *
           ___awdiv
           ___awmod
         _recTempThresh *
           ___awdiv
           ___awmod
         _representLed *
           ___awdiv
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      3C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      94      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      94      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 23:58:53 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0918  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 0043                       _do_I2C_SEND_RESTART 0871  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 0035                               __CFG_LVP$ON 0000  
                                     l341 08F3                                       l442 08FC  
                                     l530 0E69                                       l347 0998  
                                     l445 08D8                                       l439 0B5A  
                                     l760 08D0                                       l913 098A  
                                     l594 0963                                       l763 08B0  
                                     l916 0B0A                                       l757 0A7B  
                                     l766 08EA                                       l960 0C18  
                                     l963 09C5                                       l869 0B95  
                                     l957 0C0D                                       l959 0C11  
                                     l899 090E                                       l998 0AD8  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0833                           _timer1ReloadVal 0068  
                                     _seg 005A             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                              ___awmod@sign 0029  
                         _TMR2_Initialize 0AC1                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0B3F  
                                    l1041 0917                                      l1300 0540  
                 ??_rd2RegCompleteHandler 007A                                      l1303 0569  
                                    l2016 066B                                      l1312 05A0  
                                    l1331 0529                                      l1500 024A  
                                    l1252 00A1                                      l2029 0FA8  
                                    l1413 0935                                      l1421 0940  
                                    l1342 0890                                      l1334 0896  
                                    l1431 077A                                      l1511 0283  
                                    l1263 0163                                      l1255 00CC  
                                    l1352 0D01                                      l1416 092A  
                                    l1512 0285                                      l1272 01FE  
                                    l1273 0234                                      l1426 094B  
                                    l1530 02D9                                      l1451 0BD4  
                                    l1339 0CD0                                      l1347 0D33  
                                    l1603 071E                                      l1523 02C1  
                                    l1460 060B                                      l1372 0FFF  
                                    l1532 02DD                                      l1524 02C4  
                                    l1268 01E1                                      l1390 0B3E  
                                    l1438 0F00                                      l1366 0FB3  
                                    l1294 04AB                                      l1375 066C  
                                    l1560 036A                                      l1536 02F1  
                                    l1561 036D                                      l1537 02F3  
                                    l1529 02D7                                      l1378 0679  
                                    l1298 052F                                      l1650 0DD9  
                                    l1570 0388                                      l1387 06C6  
                                    l1643 0E20                                      l1396 0B24  
                                    l1708 0905                                      l1636 0420  
                                    l1548 032C                                      l1653 09E5  
                                    l1549 032E                                      l1582 0BB4  
                                    l1566 0380                                      l1663 0B76  
                                    l1591 06ED                                      l1567 0382  
                                    l1496 0239                                      l1658 0BF4  
                                    l1578 0BAC                                      l1586 0720  
                                    l1579 0BAE                                      l1499 0248  
                                    l1589 06E8                                      l1686 0A4F  
                                    l1598 070A                      _ADCC_StartConversion 08C9  
                                    l1689 0850                                      l7001 095E  
                                    l7011 0B42                                      l7003 0960  
                                    l7021 0B51                                      l7013 0B45  
                                    l7101 035B                                      l7023 0B54  
                                    l7015 0B48                                      l7111 0D9D  
                                    l7031 03A8                                      l7103 0371  
                                    l7025 0B57                                      l7017 0B4B  
                                    l7009 0B3F                                      l6401 0657  
                                    l7201 0499                                      l1889 0A91  
                                    l7121 0DC2                                      l7113 0DA3  
                                    l7041 0411                                      l7033 03EA  
                                    l7105 0386                                      l7051 0B1C  
                                    l7019 0B4E                                      l6403 065D  
                                    l6411 0F55                                      l7203 049D  
                                    l7131 0DDC                                      l7115 0DA8  
                                    l7123 0DCD                                      l7043 041D  
                                    l7035 03ED                                      l7027 0389  
                                    l7045 0B0B                                      l6501 0EE7  
                                    l6405 0662                                      l6421 0F66  
                                    l6413 0F57                                      l7205 04A3  
                                    l7141 0DEA                                      l7133 0DE4  
                                    l7117 0DB5                                      l7109 0D9D  
                                    l7037 03F9                                      l7029 0396  
                                    l7061 025D                                      l7047 0B10  
                                    l7055 0B25                                      l6503 0EFF  
                                    l6407 0667                                      l6431 0F7D  
                                    l6423 0F6B                                      l6415 0F5B  
                                    l7151 0E1A                                      l7143 0DF3  
                                    l7135 0DE9                                      l7127 0DCF  
                                    l7119 0DBB                                      l7039 0405  
                                    l7071 0298                                      l7063 0261  
                                    l7049 0B14                                      l7153 084E  
                                    l6601 04BF                                      l6433 0F81  
                                    l6425 0F71                                      l6441 0F9A  
                                    l6417 0F60                                      l6521 088B  
                                    l6513 0891                                      l7161 042C  
                                    l7145 0DF7                                      l7081 02E2  
                                    l7073 029C                                      l7065 0270  
                                    l7057 0239                                      l7401 012E  
                                    l6611 04ED                                      l6603 04C8  
                                    l6371 0612                                      l6443 0F9F  
                                    l6435 0F8B                                      l6427 0F74  
                                    l6419 0F62                                      l6515 0CA0  
                                    l6531 0CD8                                      l6523 0D02  
                                    l7171 044A                                      l7163 0434  
                                    l7155 0421                                      l7147 0E0E  
                                    l6451 09B7                                      l7091 031D  
                                    l7083 02F7                                      l7075 02AB  
                                    l7067 0274                                      l7059 024E  
                                    l7411 0196                                      l7403 0145  
                                    l7331 00AA                                      l7323 00A6  
                                    l7315 007E                                      l6701 0E31  
                                    l6613 04F6                                      l6381 0626  
                                    l6373 0617                                      l6445 0FA4  
                                    l6437 0F8F                                      l6429 0F79  
                                    l6517 0CA7                                      l6533 0CED  
                                    l6525 0D0A                                      l6541 05D2  
                                    l7181 0460                                      l7173 0450  
                                    l7165 043A                                      l7157 0424  
                                    l7149 0E16                                      l6461 09C2  
                                    l6453 09BB                                      l7093 0332  
                                    l7085 0306                                      l7077 02B2  
                                    l7069 0289                                      l7421 01B7  
                                    l7413 01A2                                      l7405 0165  
                                    l7341 00B6                                      l7333 00AC  
                                    l7325 00A7                                      l7317 00A1  
                                    l6711 0E46                                      l6703 0E34  
                                    l6607 04D1                                      l6623 0515  
                                    l6471 0732                                      l6391 063A  
                                    l6383 0628                                      l6375 0619  
                                    l6367 060C                                      l6439 0F94  
                                    l6519 0CBC                                      l6527 0D1F  
                                    l6543 05F3                                      l6535 05A3  
                                    l7191 0481                                      l7175 0454  
                                    l7167 043D                                      l7159 0428  
                                    l6551 0BFD                                      l6463 09C3  
                                    l6455 09BF                                      l7095 0341  
                                    l7087 030A                                      l7079 02C8  
                                    l7423 01C2                                      l7431 01D2  
                                    l7407 0177                                      l7415 01A5  
                                    l7351 00BF                                      l7343 00B8  
                                    l7335 00AE                                      l7327 00A8  
                                    l7319 00A1                                      l6545 08EB  
                                    l6721 0E50                                      l6713 0E48  
                                    l6705 0E36                                      l6801 0A44  
                                    l6449 0AF2                                      l6617 04FF  
                                    l6609 04E4                                      l6481 0770  
                                    l6473 074F                                      l6393 063E  
                                    l6385 062E                                      l6377 061D  
                                    l6369 060E                                      l6529 0CD1  
                                    l6641 0FB7                                      l7193 0489  
                                    l7177 0458                                      l7185 0465  
                                    l7169 0442                                      l6561 0C08  
                                    l6553 0C01                                      l6457 09C0  
                                    l7097 0345                                      l7089 0319  
                                    l7441 01E9                                      l7433 01D8  
                                    l7425 01C7                                      l7417 01AC  
                                    l7409 0185                                      l7361 00CD  
                                    l7353 00C6                                      l7345 00B9  
                                    l7337 00B1                                      l7329 00A9  
                                    l6811 08AA                                      l6731 0E5A  
                                    l6723 0E52                                      l6715 0E4A  
                                    l6707 0E38                                      l6571 08FD  
                                    l6803 0A4C                                      l6547 0906  
                                    l6619 050C                                      l6475 0754  
                                    l6467 0721                                      l6395 064D  
                                    l6387 0631                                      l6379 0622  
                                    l6539 05AA                                      l6643 0FBF  
                                    l6651 0FD8                                      l7195 048E  
                                    l7179 045C                                      l7187 0478  
                                    l6563 0C0A                                      l6555 0C05  
                                    l6459 09C1                                      l7099 0354  
                                    l7451 0206                                      l7443 01EC  
                                    l7435 01DE                                      l7427 01C9  
                                    l7419 01B2                                      l7371 00E0  
                                    l7363 00CE                                      l7355 00C8  
                                    l7347 00BB                                      l7339 00B3  
                                    l6805 08CB                                      l6741 0E66  
                                    l6733 0E5D                                      l6725 0E54  
                                    l6717 0E4C                                      l6709 0E3A  
                                    l6821 066E                                      l6469 0723  
                                    l6493 0EB4                                      l6397 0651  
                                    l6389 0636                                      l6661 0FF2  
                                    l6653 0FDC                                      l6645 0FC4  
                                    l6637 0FA9                                      l6573 092B  
                                    l6581 0923                                      l7197 0491  
                                    l7189 047D                                      l6565 0C0C  
                                    l6557 0C06                                      l6549 0BF5  
                                    l7461 0222                                      l7453 0207  
                                    l7429 01CC                                      l7445 01EE  
                                    l7381 00F4                                      l7437 01E2  
                                    l7373 00E2                                      l7365 00D0  
                                    l7357 00CA                                      l7349 00BC  
                                    l6815 08E2                                      l6807 08CE  
                                    l6743 08F4                                      l6735 0E5F  
                                    l6727 0E56                                      l6719 0E4E  
                                    l6751 097E                                      l6831 06A3  
                                    l6823 0677                                      l6487 0772  
                                    l6479 0758                                      l6495 0EC3  
                                    l6399 0652                                      l6655 0FE4  
                                    l6647 0FCE                                      l6639 0FAC  
                                    l6575 092D                                      l6583 0936  
                                    l6591 0943                                      l7199 0494  
                                    l6567 0C12                                      l6559 0C07  
                                    l6671 0BDB                                      l6663 0BD5  
                                    l6903 0B60                                      l6911 06CC  
                                    l7463 0230                                      l7455 020C  
                                    l7447 01F7                                      l7439 01E7  
                                    l7391 010F                                      l7383 00FF  
                                    l7375 00E4                                      l7367 00D6  
                                    l7359 00CB                                      l6809 08CF  
                                    l6681 098B                                      l6745 08F7  
                                    l6737 0E62                                      l6729 0E58  
                                    l6753 0985                                      l6569 090F  
                                    l6761 0AC1                                      l6841 06BB  
                                    l6833 06A5                                      l6825 0682  
                                    l7721 0504                                      l6489 0777  
                                    l6497 0EE0                                      l6657 0FE7  
                                    l6649 0FD3                                      l6577 0933  
                                    l6585 0938                                      l6593 0949  
                                    l6673 0BE6                                      l6665 0BD7  
                                    l6905 0B68                                      l6921 06E6  
                                    l7457 0212                                      l7449 0200  
                                    l7393 0112                                      l7385 0106  
                                    l7377 00E6                                      l7369 00D8  
                                    l6755 0A66                                      l6683 098E  
                                    l6747 08F8                                      l6739 0E64  
                                    l6691 0E27                                      l6771 0ACD  
                                    l6763 0AC6                                      l6843 06C4  
                                    l6835 06AE                                      l6827 068A  
                                    l6851 0BC7                                      l7723 051B  
                                    l6595 04AC                                      l6659 0FEC  
                                    l6579 0921                                      l6587 093E  
                                    l7715 046A                                      l6675 0BEA  
                                    l6819 09D6                                      l6907 0B6D  
                                    l6931 06FF                                      l6923 06F2  
                                    l7459 0214                                      l7395 011C  
                                    l7387 0107                                      l7379 00EC  
                                    l6757 0A78                                      l6685 0996  
                                    l6749 08FB                                      l6693 0E29  
                                    l6781 0B7E                                      l6773 0AD5  
                                    l6765 0AC7                                      l6837 06B0  
                                    l6829 069A                                      l6853 0BC9  
                                    l6845 0BB5                                      l6597 04AD  
                                    l6589 0941                                      l7717 055B  
                                    l6677 0BF3                                      l6941 0BA1  
                                    l6933 070F                                      l6917 06D1  
                                    l6909 06C9                                      l7397 0122  
                                    l7389 010E                                      l6759 0A7A  
                                    l6695 0E2B                                      l6687 08D1  
                                    l6791 0B92                                      l6783 0B80  
                                    l6775 0B77                                      l6767 0ACA  
                                    l6839 06B9                                      l6855 0BD1  
                                    l6847 0BBD                                      l7719 04D6  
                                    l6599 04B6                                      l6871 054E  
                                    l6863 0533                                      l6951 0A83  
                                    l6943 0BB3                                      l6919 06DB  
                                    l7399 0124                                      l6697 0E2D  
                                    l6689 0E21                                      l6793 0A3B  
                                    l6785 0B87                                      l6777 0B7A  
                                    l6769 0ACC                                      l6857 0BD3  
                                    l6849 0BBF                                      l6881 0576  
                                    l6873 0552                                      l6865 053B  
                                    l6953 0A87                                      l6929 06F4  
                                    l6699 0E2F                                      l6795 0A40  
                                    l6787 0B89                                      l6779 0B7C  
                                    l6891 058A                                      l6883 057B  
                                    l6867 0546                                      l6859 052A  
                                    l6955 0A89                                      l6947 0A7E  
                                    l6939 0B96                                      l6797 0A41  
                                    l6789 0B8A                                      l6885 057E  
                                    l6869 054A                                      l6877 0556  
                                    l6957 0A90                                      l6949 0A7F  
                                    l6799 0A43                                      l6887 0581  
                                    l6879 056E                                      l6889 0586  
                                    l6899 0B5B                                      l6997 0958  
                                    l6999 095D                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 088B  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u4100 053B  
                                    u4020 0C11                                      u4005 05B7  
                                    u4101 053A                                      u4021 0C10  
                                    u4030 0FB7                                      u4110 056E  
                                    u4015 05C5                                      u4031 0FB6  
                                    u4111 056D                                      u4040 0FBF  
                                    u4120 0576                                      u4200 06FF  
                                    u5000 0206                                      u4041 0FBE  
                                    u4121 0575                   __size_of_selectSubfield 0077  
                                    u4201 06FE                                      u5001 0205  
                                    u4050 0FDC                                      u4130 05A0  
                                    u4210 070A                                      _T2PR 028D  
                                    u4051 0FDB                                      u4131 059F  
                                    u4211 0709                                      u4060 0FE4  
                                    u4300 095D                                      u4140 0B76  
                                    u4220 070F                                      u4061 0FE3  
                                    u4301 095C                                      u4141 0B75  
                                    u4221 070E                                      u4070 0FF2  
                                    u4310 0396                                      u4230 071E  
                                    u4150 06D0                                      u4071 0FF1  
                                    u4135 059C                                      u4311 0395  
                                    u4231 071D                                      u4151 06CF  
                                    u4080 0BF3                                      u4320 03A8  
                                    u4240 0BA1                                      u4160 06DB  
                                    u4400 0298                                      u4081 0BF2  
                                    u4321 03A7                                      u4241 0BA0  
                                    u4161 06DA                                      u4401 0297  
                                    u4330 0B1C                                      u4090 0533  
                                    u4250 0BAC                                      u4170 06E6  
                                    u4410 02AB                                      u4331 0B1B  
                                    u5107 068E                                      u4091 0532  
                                    u4251 0BAB                                      u4171 06E5  
                                    u4411 02AA                                      u3700 061D  
                                    u4260 0BB3                                      u4180 06ED  
                                    u4500 0319                                      u4420 02C1  
                                    u4340 0248                                      u5117 069E  
                                    u3701 061C                                      u4261 0BB2  
                                    u4181 06EC                                      u4501 0318  
                                    u4421 02C0                                      u4341 0247  
                                    u5037 01F2                                      u3710 062E  
                                    u4270 0A83                                      u4190 06F2  
                                    u4510 032C                                      u4430 02C8  
                                    u4350 024E                                      u5127 06A9  
                                    u3711 062D                                      u5047 049A  
                                    u4271 0A82                                      u4191 06F1  
                                    u4511 032B                                      u4431 02C7  
                                    u4351 024D                                      u3800 0F66  
                                    u4280 0A90                                      u4600 0DA8  
                                    u4520 0332                                      u4440 02D7  
                                    u4360 025D                                      u5137 06B4  
                                    u3801 0F65                                      u5057 0587  
                                    u4281 0A8F                                      u4601 0DA7  
                                    u4521 0331                                      u4441 02D6  
                                    u4361 025C                                      u3730 063E  
                                    u3810 0F71                                      u4610 0DBB  
                                    u4530 0341                                      u4450 02DD  
                                    u4370 0270                                      u5147 06BF  
                                    u5067 0BC3                                      u3731 063D  
                                    u3811 0F70                                      u4611 0DBA  
                                    u4531 0340                                      u4451 02DC  
                                    u4371 026F                                      u3900 074F  
                                    u4700 0489                                      u4620 0DE4  
                                    u4540 0354                                      u4460 02E2  
                                    u4380 0283                                      _PMD0 0796  
                                    u5157 0B11                                      u5077 0BCD  
                                    u3901 074E                                      u3725 0632  
                                    u4701 0488                                      u4621 0DE3  
                                    u4541 0353                                      u4461 02E1  
                                    u4381 0282                                      _PMD1 0797  
                                    u3910 0770                                      u3750 064D  
                                    u3830 0F81                                      u4710 04A3  
                                    u4630 0DF3                                      u4550 036A  
                                    u4470 02F1                                      u4390 0289  
                                    _PMD2 0798                                      u5087 0672  
                                    u3911 076F                                      u3751 064C  
                                    u3831 0F80                                      u4711 04A2  
                                    u4631 0DF2                                      u4551 0369  
                                    u4471 02F0                                      u4391 0288  
                                    _PMD3 0799                                      u3920 0EC3  
                                    u3840 0F8B                                      u4640 0E20  
                                    u4560 0371                                      u4480 02F7  
                                    _PMD4 079A                                      u5097 067D  
                                    u3905 074B                                      u3921 0EC2  
                                    u3745 063F                                      u3841 0F8A  
                                    u3825 0F75                                      u4641 0E1F  
                                    u4561 0370                                      u4481 02F6  
                                    _PMD5 079B                                      u3930 0EE0  
                                    u3770 065D                                      u3690 0612  
                                    u4650 0434                                      u4570 0380  
                                    u4490 0306                                      u3915 076C  
                                    u3931 0EDF                                      u3771 065C  
                                    u3755 0649                                      u3691 0611  
                                    u4651 0433                                      u4571 037F  
                                    u4491 0305                                      u3940 0EFF  
                                    u3780 0662                                      u3860 0F9A  
                                    u4660 043A                                      u4580 0386  
                                    u4900 011C                                      u3941 0EFE  
                                    u3781 0661                                      u3765 0653  
                                    u3861 0F99                                      u3845 0F87  
                                    u4661 0439                                      u4581 0385  
                                    u4901 011B                                      u3870 0F9F  
                                    u3790 0F5B                                      u3950 0CA7  
                                    u4670 0442                                      u4590 0DA3  
                                    u4910 0122                                      u3935 0EDC  
                                    u3871 0F9E                                      u3855 0F90  
                                    u3791 0F5A                                      u3951 0CA6  
                                    u4671 0441                                      u4591 0DA2  
                                    u4911 0121                                      u3960 0D0A  
                                    u4680 044A                                      u4920 0145  
                                    i1l73 097D                                      u3945 0EFB  
                                    u3961 0D09                                      u4681 0449  
                                    u4921 0144                                      u3890 0732  
                                    u3970 0CD8                                      u4690 0481  
                                    u4930 0163                                      u3891 0731  
                                    u3971 0CD7                                      u4691 0480  
                                    u4931 0162                                      u3980 05A9  
                                    u4940 01AC                                      u3885 0B03  
                                    u3981 05A8                                      u4941 01AB  
                                    u4950 01B2                                      u4951 01B1  
                                    u4935 015F                                      u4960 01C7  
                                    u4880 00E0                                      u4961 01C6  
                                    u4881 00DF                                      u4970 01D8  
                                    u4890 00EC                                      u3995 05AD  
                                    u4971 01D7                                      u4891 00EB  
                                    u4980 01E7                                      u4981 01E6  
                                    u4990 01FE                      ?_do_I2C_SEND_RESTART 0070  
                                    u4991 01FD                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0051  
                                    _clkh 005C                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 005B                                      _main 007E  
                                    _tala 0065                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0067  
                         _TMR0_StartTimer 084E                                      _temp 0052  
                                    _pmon 0066                        _increment_subfield 0FA9  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 082E               _INT_DefaultInterruptHandler 082D  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0B25  
         __end_of_INT_SetInterruptHandler 08F4                             _i2c_setBuffer 09C6  
              ??_TMR1_SetInterruptHandler 0025                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0026                             __CFG_MCLRE$ON 0000  
                increment_subfield@_value 0036                           __end_of_i2c_ISR 0C72  
                         __end_of_ReadI2C 0BB5                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 003C                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0A50                              _do_I2C_RESET 08B9  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 08FD                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0964                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 066C                  __end_of_i2c1_driver_stop 083F  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 0FA9                                     _ADRPT 010D  
                                   _T1CLK 0211                           ___awdiv@divisor 0023  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0862  
                          __CFG_DEBUG$OFF 0000                                     i1l103 09D5  
                                   i1l200 0D66                                     i1l210 0C71  
                                   i1l131 086B                                     i1l140 087A  
                                   _T2TMR 028C                                     i1l125 08C0  
                                   i1l213 085C                                     i1l134 0870  
                                   i1l303 0AC0                                     i1l143 08E1  
                                   i1l224 07FA                                     i1l216 0835  
                                   i1l128 0866                                     i1l152 087F  
                                   i1l137 0875                                     i1l146 08C8  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0A18                                     i1l155 0884  
                                   i1l164 0C44                                     i1l172 0F54  
                                   i1l149 08A9                                     i1l334 088A  
                                   i1l158 07FF                                     i1l344 082D  
                                   i1l264 0A29                                     i1l169 0F38  
                                   i1l185 0E87                                     i1l338 0970  
                                   i1l602 0831                                     i1l186 0EB3  
                                   i1l611 083E                                     i1l291 0A07  
                                   i1l620 0844                                     i1l380 001F  
                                   i1l614 08B8                                     i1l279 0A3A  
                                   i1l383 0032                                     i1l608 083B  
                                   i1l392 0059                                     i1l617 0841  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0854  
                                   i1l387 004D                                     i1l629 0861  
                                   i1l902 082F                                     i1l638 0858  
                                   i1l576 084A                                     i1l672 084D  
                                   i1l579 0847                                     i1l916 0A65  
                                   i1l883 09F6                                     i1l896 0AA8  
                         ___awdiv@counter 0028                                     _OSCEN 0891  
                         __end_of_all_LED 06C7                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 097E  
                        recMinutes@_value 002C                 ?_TMR0_SetInterruptHandler 0023  
                 ??_ADCC_IsConversionDone 0023                          __end_of_TMR0_ISR 09A8  
                        __end_of_TMR1_ISR 0AA9                          __end_of_TMR2_ISR 09B7  
                         __end_of_sw1_EXT 0CA0                           __end_of_cksum_w 09E6  
                    ??_increment_subfield 0033                           _DATAEE_ReadByte 09B7  
                                   _alarm 0053                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 08B9                                     _cksum 0BD5  
                         __end_of_recHour 0D02                     ?_ADCC_StartConversion 0070  
                         representLed@aux 0032                           representLed@val 0031  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 00C7  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                                     _tsttc 0239  
                 __end_of_TMR1_Initialize 0B96                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0023  
                      ??_checkDebounceSW2 0023                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 09E6                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                         ??_getSubfieldInfo 0023  
                           _fsmStateTable 1000                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 0239  
                 __end_of_TMR2_Initialize 0AD9               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 087B                  _TMR2_SetInterruptHandler 090F  
                                  ??_main 003E                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                             ?_recLumThresh 002C  
                               ??_LED_bin 0025                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000C             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 004B                    __size_of_recTempThresh 0031  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0851               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0025  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0721  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0830  
                                  i1l1038 09B6                                    i1l1240 0C9F  
                                  i1l1234 0C8E                                    i1l1243 0AEC  
                                  i1l1244 0AF1                                    i1l1404 0D9A  
                                  i1l1237 0C9B                                    i1l1431 07D4  
                                  i1l1408 0957                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1711 082E                                    i1l1705 09A7  
                                  i1l5001 08BF                                    i1l5005 0862  
                                  i1l5013 08D9                                    i1l5021 08C1  
                                  i1l5101 0E74                                    i1l5007 0864  
                                  i1l5015 08DB                                    i1l5023 08C3  
                                  i1l5031 08A5                                    i1l5103 0E78  
                                  i1l5009 0865                                    i1l5017 08E0  
                                  i1l5025 08C7                                    i1l5033 08A8  
                                  i1l5113 0E89                                    i1l5105 0E82  
                                  i1l5131 0D34                                    i1l5051 0C24  
                                  i1l5043 0C19                                    i1l5123 0E91  
                                  i1l5107 0E85                                    i1l1692 0838  
                                  i1l5301 09E6                                    i1l5133 0D37  
                                  i1l5029 08A3                                    i1l5037 087B  
                                  i1l5045 0C1B                                    i1l5117 0E8D  
                                  i1l5303 09EB                                    i1l5311 09F2  
                                  i1l5143 0D40                                    i1l5039 087E  
                                  i1l5047 0C20                                    i1l5161 096B  
                                  i1l5321 0AEF                                    i1l5313 09F4  
                                  i1l5305 09EC                                    i1l5137 0D3B  
                                  i1l5057 0C28                                    i1l5073 0F0D  
                                  i1l5065 0F01                                    i1l5315 0AD9  
                                  i1l5307 09EE                                    i1l5411 0D80  
                                  i1l5403 0D67                                    i1l5139 0D3E  
                                  i1l5091 0F53                                    i1l5083 0F15  
                                  i1l5317 0AE0                                    i1l5309 09F0  
                                  i1l5421 0D99                                    i1l5413 0D86  
                                  i1l5405 0D6D                                    i1l5149 0D44  
                                  i1l5085 0F3A                                    i1l5077 0F11  
                                  i1l5069 0F09                                    i1l5157 084B  
                                  i1l4703 07CC                                    i1l5159 0964  
                                  i1l5319 0AE7                                    i1l5415 0D8E  
                                  i1l5407 0D78                                    i1l5423 094C  
                                  i1l5087 0F46                                    i1l4705 07D1  
                                  i1l5417 0D8F                                    i1l5409 0D7C  
                                  i1l5425 0950                                    i1l4801 0A39  
                                  i1l4721 0867                                    i1l5089 0F51  
                                  i1l5419 0D95                                    i1l5427 0956  
                                  i1l4483 07D6                                    i1l4571 0971  
                                  i1l4723 086A                                    i1l5099 0E6A  
                                  i1l4581 083C                                    i1l4573 09C7  
                                  i1l4485 07DC                                    i1l4805 09F7  
                                  i1l4709 0832                                    i1l4813 0AA9  
                                  i1l4733 0871                                    i1l4741 0879  
                                  i1l4575 09CC                                    i1l4487 07ED  
                                  i1l4807 09FF                                    i1l4815 0ABF  
                                  i1l4583 0855                                    i1l4727 086C  
                                  i1l4735 0874                                    i1l4751 0880  
                                  i1l4681 0A50                                    i1l4577 09D4  
                                  i1l4809 0A06                                    i1l4745 085E  
                                  i1l4729 086F                                    i1l4753 0883  
                                  i1l5561 0C45                                    i1l4691 07AE  
                                  i1l4683 077B                                    i1l4851 0C81  
                                  i1l4579 0839                                    i1l4747 083F  
                                  i1l4763 08B1                                    i1l4771 0845  
                                  i1l4739 0876                                    i1l5563 0C48  
                                  i1l5571 0859                                    i1l4685 077D  
                                  i1l4853 0C82                                    i1l4845 0C72  
                                  i1l5573 0885                                    i1l4861 0836  
                                  i1l5581 09A2                                    i1l4749 0851  
                                  i1l4773 0834                                    i1l4781 0A08  
                                  i1l4757 07FB                                    i1l5565 0C4D  
                                  i1l4687 078C                                    i1l4695 07B2  
                                  i1l4855 0C88                                    i1l4847 0C7A  
                                  i1l5575 0887                                    i1l5583 0A92  
                                  i1l5591 09A8                                    i1l4783 0A10  
                                  i1l4791 0A21                                    i1l4767 0842  
                                  i1l4759 07FE                                    i1l5567 0C54  
                                  u230_20 0C80                                    i1l4697 07CA  
                                  i1l4689 07A9                                    i1l4857 0C92  
                                  i1l4849 0C80                                    u230_21 0C7F  
                                  i1l5577 0999                                    i1l5585 0A94  
                                  i1l5593 09AA                                    i1l4777 0002  
                                  i1l4785 0A17                                    i1l4793 0A28  
                                  i1l5569 0C5A                                    i1l4859 0C97  
                                  i1l5579 099B                                    i1l5587 0A9C  
                                  i1l5595 09B1                                    i1l5589 0AA3  
                                  i1l4789 0A19                                    i1l4797 0A2A  
                                  i1l4973 0848                                    i1l5941 000F  
                                  i1l4799 0A32                                    i1l5951 002B  
                                  i1l5943 0017                                    u231_20 0C92  
                                  u231_21 0C91                                    i1l5961 0051  
                                  i1l5953 0036                                    i1l5945 001B  
                                  i1l5937 0006                                    i1l7731 0D58  
                                  i1l4995 08B9                                    i1l5963 0055  
                                  i1l5955 003A                                    i1l5947 0023  
                                  i1l5939 000B                                    u223_25 0A5F  
                                  i1l4997 08BC                                    i1l7725 0EA5  
                                  i1l5957 0045                                    i1l5949 0027  
                                  i1l4999 08BE                                    i1l7727 0F2A  
                                  i1l5959 0049                                    u224_20 078C  
                                  u232_20 0C97                                    u208_20 09CC  
                                  u224_21 078B                                    u232_21 0C96  
                                  u208_21 09CB                                    i1l7729 0C3C  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u225_20 07A9  
                                  u225_21 07A8                                    u225_25 07A5  
                                  u226_20 07CA                                    u242_20 0F08  
                                  u226_21 07C9                                    u242_21 0F07  
                                  u226_25 07C6                                    u243_20 0F51  
                                  u243_21 0F50                                    u244_20 0E82  
                                  u244_21 0E81                                    u229_20 0C7A  
                                  u245_20 096B                                    u253_20 0D6D  
                                  u341_20 000B                                    u229_21 0C79  
                                  u245_21 096A                                    u253_21 0D6C  
                                  u341_21 000A                                    u246_20 09EB  
                                  u254_20 0D76                                    u350_20 0045  
                                  u342_20 000F                                    u246_21 09EA  
                                  u254_21 0D73                                    u350_21 0044  
                                  u342_21 000E                                    u247_20 0AE0  
                                  u351_20 0049                                    u343_20 0017  
                                  u247_21 0ADF                                    u351_21 0048  
                                  u343_21 0016                                    u255_24 0D78  
                                  u256_20 0D86                                    u280_20 0AA3  
                                  u352_20 0051                                    u344_20 001B  
                                  u256_21 0D85                                    u280_21 0AA2  
                                  u352_21 0050                                    u344_21 001A  
                                  _INTPPS 0E90                                    u257_20 0D95  
                                  u281_20 09B1                                    u353_20 0055  
                                  u345_20 0023                                    u257_21 0D94  
                                  u281_21 09B0                                    u353_21 0054  
                                  u345_21 0022                                    u258_20 0956  
                                  u346_20 0027                                    u258_21 0955  
                                  u346_21 0026                                    u347_20 002B  
                                  u347_21 002A                                    u188_20 07DC  
                                  u348_20 0036                                    u188_21 07DB  
                                  u348_21 0035                                    u277_20 0C4D  
                                  u349_20 003A                                    u277_21 0C4C  
                                  u349_21 0039                                    u278_20 0C54  
                                  u278_21 0C53                                    u279_20 09A2  
                                  u279_21 09A1                                    _OSCFRQ 0893  
                                  _ISR_3s 0AD9                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0020  
                               ??_ReadI2C 0023                ??_ADCC_GetConversionResult 0025  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0A66  
                   _i2c1_driver_getRXData 0842                          __end_of_mod1_LED 0936  
                        __end_of_mod2_LED 092B                          __end_of_mod3_LED 0941  
                        __end_of_mod4_LED 094C      __end_of_TMR1_DefaultInterruptHandler 0830  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 082F  
                            _CCPTMRS1bits 021F                                    ___bmul 0A7C  
             __end_of_do_I2C_DO_NACK_STOP 0885       __end_of_i2c_setDataCompleteCallback 097E  
             _i2c_setDataCompleteCallback 0971                                 ??___awdiv 0027  
   __end_of_i2c1_driver_clearBusCollision 084E    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 084B                            __CFG_STVREN$ON 0000  
                               ??___awmod 0027                          __end_of_recAlarm 0891  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 0056  
                                  _last5s 0057                                 ??_all_LED 0027  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 098B  
                        ___awdiv@quotient 002A                            ?_do_I2C_DO_ACK 0070  
                         ___awmod@divisor 0023                           ___awmod@counter 0028  
                          ??_recLumThresh 002D                                    cksum@i 0027  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 09C6  
                               ??_sw1_EXT 0077                                 ??_cksum_w 002D  
                         _ADCC_Initialize 0A66                                 ??_recHour 002D  
             __end_of_i2c1_driver_sendACK 0855                            _PMD_Initialize 08D1  
          __end_of_do_I2C_DO_ADDRESS_NACK 0C45               __end_of_i2c1_driver_restart 083C  
                            ?_returnReset 0079                                 ?_ADC_read 0025  
                  ??_ADCC_StartConversion 0023               __end_of_i2c1_driver_startRX 0842  
        __size_of_INT_SetInterruptHandler 0009  TMR0_SetInterruptHandler@InterruptHandler 0023  
TMR2_SetInterruptHandler@InterruptHandler 0023  TMR1_SetInterruptHandler@InterruptHandler 0023  
 INT_SetInterruptHandler@InterruptHandler 0023                   __end_of_TMR1_WriteTimer 09F7  
                          _selectSubfield 052A                          ??_config_routine 003B  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0B3F  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0876                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0023                   _rdBlkRegCompleteHandler 0AA9  
                           _recTempThresh 0CA0                            __pcstackCOMMON 0070  
                            __pidataBANK0 0918                       ??_SYSTEM_Initialize 0025  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 0BF5                          _DATAEE_WriteByte 0BF5  
                           __end_of_tsttc 0389                          ?_TMR2_Initialize 0070  
                            LED_bin@value 0023                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 08D9               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 0027                    __end_of_selectSubfield 05A1  
             ADCC_StartConversion@channel 0023                            setCallBack@idx 0074  
                                 ??_cksum 0025                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 07FB                 __end_of_SYSTEM_Initialize 0B5B  
                                 ??_tsttc 0025                            _mssp1_clearIRQ 0848  
                              __pbssBANK0 0043                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 0A3B                        read_ring@nreg_init 0028  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0A08  
                   _rd1RegCompleteHandler 0A19                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 003F                            ?_recTempThresh 002C  
                   _wr1RegCompleteHandler 0A08              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0023          __end_of_TMR0_SetInterruptHandler 0906  
                 __size_of_TMR0_StopTimer 0003                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 0A7C  
              __end_of_PWM6_LoadDutyValue 0B0B                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                      _limitTempThreshUnits 0000  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0023  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 0EB4  
                       __end_of_do_I2C_TX 0F55                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0B25                          _handler_clock_ms 094C  
                      ??_i2c1_driver_open 0023                                   _INT_ISR 0885  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0A50                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                  selectSubfield@subfield 0039                                   _NVMCON2 081F  
                         ?_selectSubfield 0070                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 084B  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 08B1                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                           _getSubfieldInfo 04AC  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                               ?_recAlarm 002C                        _i2c1_driver_TXData 085D  
                    DATAEE_WriteByte@bAdd 0029                        _i2c1_driver_i2cISR 004D  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0C45  
                         _limitHoursUnits 0000                 ??_rdBlkRegCompleteHandler 007A  
                                 _ReadI2C 0B96                      __end_of_recLumThresh 0897  
                      _i2c1_driver_isNACK 08B1                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0025                     __end_of_num_subfields 1024  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                              _recMinutes 0D02                                   ___awdiv 060C  
                                 ___awmod 0F55                             ?_representLed 0070  
                       ??_mode_select_LED 0027                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 066C                       ?_i2c1_driver_isNACK 0070  
                              ??_WriteI2C 0023                                   __ptext1 0239  
                                 __ptext2 06C7                                   __ptext3 0B96  
                                 __ptext4 0389                                   __ptext5 0B5B  
                                 __ptext6 09D6                                   __ptext7 0BD5  
                                 __ptext8 0D9B                                   __ptext9 0A7C  
                     __end_of_do_I2C_IDLE 0867                       __end_of_do_I2C_RCEN 08AA  
                                 _sw1_EXT 0C72            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 09D6                                 _T1CONbits 020E  
                                 _recHour 0CD1                     _OSCILLATOR_Initialize 08F4  
                                 _last_ms 0059                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0876                            ??_mssp1_setIRQ 0070  
                        ___awmod@dividend 0025                                _duty_cycle 00BD  
                             reset_recv@i 002D         __size_of_TMR1_SetInterruptHandler 0009  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0DDA                  ??_PIN_MANAGER_Initialize 0023  
               ?_TMR1_SetInterruptHandler 0023                                 _T2HLTbits 028F  
                                 _nreg_pt 005D                   _INT_SetInterruptHandler 08EB  
                                 _lum_bin 0049               __size_of_increment_subfield 0057  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 0027  
                              ??_mod2_LED 0027                                ??_mod3_LED 0027  
                              ??_mod4_LED 0027                                   main@t5s 00DA  
                _do_I2C_SEND_RESTART_READ 0867                __size_of_SYSTEM_Initialize 001C  
                                 main@aux 00D6                                   clrloop0 0898  
                              _hours_tens 00C5                      __size_of_returnReset 0002  
                    end_of_initialization 007A                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                                ??_recAlarm 002D  
               __size_of_i2c_restartWrite 0002                                   init_ram 089D  
            __end_of_i2c1_driver_sendNACK 0859                    ?_rd1RegCompleteHandler 0079  
                                 initloop 089E                      __end_of_INT_CallBack 0971  
                         ??_recTempThresh 002D                    ?_wr1RegCompleteHandler 0079  
            __end_of_i2c1_driver_resetBus 0832                                _reset_recv 0B5B  
                              _lum_thresh 0063                             push_ring@nreg 002D  
                          ??_representLed 002C                 _do_I2C_SEND_RESTART_WRITE 086C  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 0E21  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0834  
                _TMR0_SetInterruptHandler 08FD                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0AC1  
                __end_of_do_I2C_SEND_STOP 087B                      __CFG_WDTCCS$HFINTOSC 0000  
                     recTempThresh@_value 002C                   __end_of_getSubfieldInfo 052A  
              __end_ofi1_checkDebounceSW1 07D5                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                               returnStop@p 0079  
                        __CFG_FEXTOSC$OFF 0000                         __size_of_ADC_read 001A  
                __end_of_DATAEE_WriteByte 0C19              i2c_setDataCompleteCallback@p 0077  
                          __end_of_ISR_3s 0AF2             __size_of_do_I2C_SEND_ADR_READ 0009  
                          _TMR0_StopTimer 0836                               _do_I2C_IDLE 0862  
                             ?_recMinutes 002C                               _do_I2C_RCEN 08A3  
    __end_of_TMR2_DefaultInterruptHandler 0831     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0830                            __end_of___bmul 0A92  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0025  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0023  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0859  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                        WriteI2C@data_out 0024                     __size_of_recLumThresh 0006  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0023  
                   __end_of_i2c_setBuffer 09D6              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0839                  __end_of_handler_clock_ms 0958  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0848  
                __size_of_TMR1_Initialize 001F                        recLumThresh@_value 002C  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 0721                          _checkDebounceSW2 0EB4  
                  wr1RegCompleteHandler@p 0079                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005F                __end_of_EXT_INT_Initialize 0999  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0079  
                        ??_selectSubfield 0037            __end_of_do_I2C_DO_NACK_RESTART 0800  
                              read_ring@i 002D                      _i2c1_driver_sendNACK 0855  
                       read_ring@absindex 002F                              _recLumThresh 0891  
                       __size_of_WriteI2C 005A                          ?_getSubfieldInfo 0070  
                                ?_LED_bin 0023                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 0831  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00D6                        _PWM6_LoadDutyValue 0AF2  
                __size_of_TMR2_Initialize 0018                                 _do_I2C_RX 0E6A  
                               _do_I2C_TX 0F01                     __size_of_INT_CallBack 000D  
                    __end_of_representLed 060C                       __size_of_recMinutes 0032  
          __size_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod1_LED 000B  
                       __size_of_mod2_LED 000A             __end_of_do_I2C_SEND_ADR_WRITE 08C9  
                       __size_of_mod3_LED 000B                         __size_of_mod4_LED 000B  
                     ?_PWM6_LoadDutyValue 0023                          _i2c_restartWrite 0832  
               __size_of_i2c1_driver_open 000C                           _mode_select_LED 0BB5  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0D34                                  ?_ReadI2C 0070  
                       __size_of_recAlarm 0006                     _TMR0_InterruptHandler 00CE  
                           ??_setCallBack 0073                                 __pnvBANK0 0068  
                               __pnvBANK1 00CE                     _rd2RegCompleteHandler 0A2A  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 1020  
                               _main$2410 00DB                    _PIN_MANAGER_Initialize 0E21  
                   _wr2RegCompleteHandler 09F7             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 008B          __end_of_TMR1_SetInterruptHandler 090F  
                       read_ring@subindex 002A                            ??_do_I2C_RESET 0070  
                                ?___awdiv 0023                                 __ptext100 0A92  
                               __ptext101 082F                                 __ptext110 082D  
                               __ptext102 0D67                                 __ptext111 0C72  
                               __ptext103 09E6                                 __ptext112 077B  
                               __ptext104 0999                                 __ptext113 0A50  
                               __ptext105 0AD9                                 __ptext106 082E  
                               __ptext107 0836                                 __ptext108 0885  
                               __ptext109 0964                                  ?___awmod 0023  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 004F  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0880  
                    ??_PWM6_LoadDutyValue 0025                             ??_recoverData 002F  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0964  
                        ??_mssp1_clearIRQ 0070                                  ?_recHour 002C  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                           recHour@_value 002C                                  _ADC_read 0B0B  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0D9B                            __size_of_tsttc 0150  
                               _min_units 00BF                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 08AA                         ??_TMR0_Initialize 0025  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0897                                  _PIE0bits 0716  
                       _handler_clock_hms 0D67                                 _nreg_init 005E  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0047                ??_TMR0_SetInterruptHandler 0025  
                                _PIR0bits 070C                               _config_mode 0054  
                                _PIR3bits 070F                                 _ring_byte 00C9  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0999                                  _TMR1_ISR 0A92  
                                _TMR2_ISR 09A8              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 07FB  
                        push_ring@nreg_pt 0033                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 0025                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 0DDA  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 1000      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0023  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 002B  
                     __end_of_recoverData 0421         __end_of_do_I2C_SEND_RESTART_WRITE 0871  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0BD5  
                 __end_of_do_I2C_TX_EMPTY 0D67                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0D9B                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 077B  
                     _do_I2C_DO_NACK_STOP 0880                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 08EB  
                   __end_of_recTempThresh 0CD1                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ??_recMinutes 002D  
                            ?_do_I2C_RCEN 0070                                push_ring@i 0032  
                 ??_OSCILLATOR_Initialize 0023                         ??_TMR0_StartTimer 0023  
                     _i2c1_driver_sendACK 0851                          __size_of___awdiv 0060  
                        __size_of___awmod 0054           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                                  _WriteI2C 06C7  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0839  
                _TMR1_SetInterruptHandler 0906                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 083F              __end_of_do_I2C_SEND_ADR_READ 08E2  
                              ?_push_ring 002D                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 00D2                          __size_of_sw1_EXT 002E  
                        __size_of_cksum_w 0010                     __size_of_representLed 006B  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 002E                          __size_of_recHour 0031  
                            _mssp1_setIRQ 0845                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 09B7                                  __ptext11 0DDA  
                                __ptext20 0FA9                                  __ptext12 0BF5  
                                __ptext21 05A1                                  __ptext13 0958  
                              _T1GCONbits 020F                                  __ptext30 0721  
                                __ptext22 0891                                  __ptext14 0421  
                                __ptext31 04AC                                  __ptext23 088B  
                                __ptext15 052A                                  __ptext40 0906  
                                __ptext32 0BB5                                  __ptext24 0D02  
                                __ptext16 0941                                  __ptext41 0A3B  
                                __ptext33 066C                                  __ptext25 0CD1  
                                __ptext17 0936                                  __ptext50 0B25  
                                __ptext42 08FD                                  __ptext34 0AF2  
                                __ptext26 0CA0                                  __ptext18 0921  
                                __ptext51 0B0B                                  __ptext43 097E  
                                __ptext35 084E                                  __ptext27 0F55  
                                __ptext19 092B                                  __ptext60 0E6A  
                                __ptext52 08C9                                  __ptext44 08D1  
                                __ptext36 0B3F                                  __ptext28 060C  
                                __ptext61 0F01                                  __ptext53 08AA  
                                __ptext45 0E21                                  __ptext37 0AC1  
                                __ptext29 0EB4                                  __ptext70 0871  
                                __ptext62 0C19                                  __ptext54 08E2  
                                __ptext46 08F4                                  __ptext38 090F  
                                __ptext71 086C                                  __ptext63 07FB  
                                __ptext47 098B                                  __ptext39 0B77  
                                __ptext80 0855                                  __ptext72 0867  
                                __ptext64 0880                                  __ptext56 0859  
                                __ptext48 08EB                                  __ptext81 0831  
                                __ptext73 0862                                  __ptext65 087B  
                                __ptext57 084B                                  __ptext49 0A66  
                                __ptext90 09F7                                  __ptext82 083F  
                                __ptext74 08B9                                  __ptext66 08A3  
                                __ptext58 0C45                                  __ptext91 0971  
                                __ptext83 0AA9                                  __ptext75 0D34  
                                __ptext67 08C1                                  __ptext59 0848  
                                __ptext92 07D5                                  __ptext84 0A2A  
                                __ptext76 0845                                  __ptext68 08D9  
                                __ptext93 09C6                                  __ptext85 0A19  
                                __ptext77 08B1                                  __ptext69 0876  
                                __ptext94 083C                                  __ptext86 0A08  
                                __ptext78 085D                                  __ptext95 0839  
                                __ptext87 0002                                  __ptext79 0842  
                                __ptext96 0851                                  __ptext88 0834  
                                __ptext97 09A8                                  __ptext89 0832  
                                __ptext98 0830                                  __ptext99 094C  
                                _mod1_LED 092B                              _SSP1CON1bits 0190  
                                _mod2_LED 0921                  __end_of_checkDebounceSW1 077B  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0F01  
                                _mod3_LED 0936                                  _mod4_LED 0941  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 08C1               DATAEE_WriteByte@GIEBitValue 002C  
                      __end_of_recMinutes 0D34                                  _recAlarm 088B  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 0058                          _i2c1_driver_open 0958  
                       ??_PWM6_Initialize 0023                          _i2c1_driver_stop 083C  
                           __size_of_main 01BB                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003                                  _min_tens 00C1  
           __end_of_i2c1_driver_getRXData 0845      __end_of_TMR0_DefaultInterruptHandler 082F  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 082E  
                       ??_DATAEE_ReadByte 0025                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 07D5                              ??_reset_recv 002D  
                       ?_handler_clock_ms 0070                                  _set_mode 0055  
                          _config_routine 0421                                tsttc@value 0026  
                           _num_subfields 1020              __end_of_ADCC_StartConversion 08D1  
                                int$flags 007E                        ??_handler_clock_ms 0070  
                            _representLed 05A1        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                                  main@aux1 00D7  
                     _mode_field_subfield 005F                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0026  
        __end_of_do_I2C_SEND_RESTART_READ 086C                              ??_returnStop 007A  
                             _hours_units 00C3                  __end_of_i2c_restartWrite 0834  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 0389  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 00D4  
                        ?_mode_select_LED 0070                        __end_of_reset_recv 0B77  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 098B  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 002B  
                  _do_I2C_DO_ADDRESS_NACK 0C19                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 0034                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0836  
                  __end_of_config_routine 04AC             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 08E2                               _temp_thresh 0064  
                           __pstringtext1 1000                             __pstringtext2 1020  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0A3B  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 0023                             read_ring@nreg 0027  
          __end_of_PIN_MANAGER_Initialize 0E6A                         ??_ADCC_Initialize 0023  
             __end_of_i2c_busCollisionISR 085D                  __size_of_getSubfieldInfo 007E  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0A2A  
                      push_ring@nreg_init 002E            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0A19                     _TMR2_InterruptHandler 00D0  
                   _do_I2C_SEND_ADR_WRITE 08C1                        push_ring@ring_byte 002F  
                    _do_I2C_SEND_ADR_READ 08D9                           ?_config_routine 0070  
                         _TMR1_Initialize 0B77                            recAlarm@_value 002C  
